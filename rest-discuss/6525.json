{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"rxGlTuZ2tRVQOcSVrnnRX0z2rgGP5umKJI3z5F1u3KJdSzy2-DZLL8hhXFeovJBSg2nys9jkHnSt4EQ2WZbEnjWWpIdFFJ5Fgnb35DTl9w","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re:  [rest-discuss] Representations  (Was: Resources as Orange     Apples)","postDate":"1156670573","msgId":6525,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc3MDI4NjMxNDk0MzE4ODIxMTU2NjcwNTczQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":6522,"nextInTopic":6526,"prevInTime":6524,"nextInTime":6526,"topicId":6518,"numMessagesInTopic":20,"msgSnippet":"... Because the definition of resource in REST is built on the notion of set theory. REST leaves equivalent undefined, which it can get away with by leaving","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 93614 invoked from network); 27 Aug 2006 09:28:01 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m28.grp.scd.yahoo.com with QMQP; 27 Aug 2006 09:28:01 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (206.246.200.187)\n  by mta4.grp.scd.yahoo.com with SMTP; 27 Aug 2006 09:28:00 -0000\r\nReceived: from mail.mailsnare.net (unknown [206.246.200.167])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 852DF2BEDF;\n\tSun, 27 Aug 2006 09:22:53 +0000 (UTC)\r\nTo: &quot;Josh Sled&quot; &lt;jsled@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W7028631494318821156670573@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Sun, 27 Aug 2006 09:22:53 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re:  [rest-discuss] Representations  (Was: Resources as Orange \n    Apples)\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;Why so much of a focus on containers, sets and physical objects anyways?\n&gt;There&#39;s very little -- on the HTTP web, anways -- that actually exploits\n&gt;a &quot;container&quot; relationship; even Apache directory listings are done by\n&gt;generating HTML, and simply following links.  The browser doesn&#39;t know.\n&gt;\n\nBecause the definition of resource in REST is built on the notion of set \ntheory. REST leaves &quot;equivalent&quot; undefined, which it can get away with by \nleaving the responsibility for understanding set theory squarely on the \nshoulders of the reader.  I&#39;m afraid this has led many to interpret \n&quot;equivalent&quot; to mean &quot;anything I want it to mean&quot;.  REST also defines \nconcepts like content negotiation and redirection without elaborating on \nthem, requiring the reader to first understand equivalence as defined by set \ntheory in order to properly implement a REST-based solution.\n\nTo me, this suggests that the best way to understand or explain REST concepts \nlike content negotiation and redirection is to converse in terms of set \ntheory, because understanding or explaining those concepts first requires a \nclear understanding of the semantics of &quot;equivalent&quot;.  The problem is that \n&quot;equivalent&quot; may only be defined as it pertains to any given example, which \nis why I think there needs to be some sort of base vocabulary using non-\nopaque URIs.\n\nOtherwise, parties must first agree on the semantics of the example URIs \nbefore proceeding to discuss the issue at hand, even if both are well-versed \nin REST.  It can take days for a group to even understand that their \ndisagreement comes down to the semantics of a URI&#39;s mapping, not the behavior \nof that URI when dereferenced, because one side thinks it&#39;s talking about \napples and the other side thinks it&#39;s talking about oranges.\n\nThe semantics of a mapping can be made more obvious by restricting examples \nto sets whose membership and equivalency are inherent in their naming, \nregardless of URI allocation scheme, so I chose apples and oranges.  It \nprovides a common-ground example, wholly unrelated to any specific service \n(flight reservations, weather etc.), which carries over to a wide variety of \nsituations and possible URI allocation schemes.\n\nThis may allow examples to be more easily understood without having to first \ndefine the conceptual sets, and provide a means for parties who disagree \nabout the semantics of a particular mapping to illustrate their positions. If \nnot, hopefully some people besides me will find it useful to explain or \nunderstand REST or at least those parts of it which are wholly reliant on an \nunderstanding of set theory, like &quot;resource&quot;.\n\n&gt;\n&gt;What about focusing on URI&#39;s identifiying application states, and using\n&gt;hyperlinks (and forms) in the media to transition between them?\n&gt;\n\nI wish you hadn&#39;t asked me that, since I had planned to spend my Saturday \ndifferently, but it was cold and rainy so I spent it adding URI-based \nexamples to what I already had.  ;-)  But it just didn&#39;t work.  Problem is, \nwhatever URI allocation scheme is chosen for an example comes across as some \nsort of &quot;preferred&quot; method if it&#39;s an example of good practice, while those \nused as examples of bad practice look as though it results from the URI \nscheme itself instead of flawed conceptualization.\n\nSome Venn diagrams in the narrative might prove useful, though.\n\nIf I&#39;ve established the analogy correctly, it may be used as an example-\nneutral &quot;common notation&quot; to illustrate the situational semantics of that \npesky word &quot;equivalent&quot;, and other REST concepts:\n\n[1] http://example.com/apple/\n[2] http://example.com/apple/red-delicious.apple\n[3] http://example.com/apple/golden-delicious.apple\n\n[1] http://example.com/apple\n[2] http://example.com/apple.red-delicious\n[3] http://example.com/apple.golden-delicious\n\n[1] http://example.com/apples\n[2] http://example.com/apples/red-delicious/apple.fruit\n[3] http://example.com/apples/golden-delicious/apple.fruit\n\nConsidering any of the three URI allocation schemes above, resource [1] \nsometimes responds with a representation of resource [2] when dereferenced, \nwhile at other times the response is a representation of resource [3], \ndepending upon user preference. This is a perfectly acceptable use of REST \ncontent negotiation, provided that resources [2] and [3] are &quot;proper subsets&quot; \nof set [1] (they must be both conceptual and hierarchical subsets), AND \nrepresentations [1], [2] and [3] are all members of set [1]&#39;s &quot;Union of \nComplements&quot;.\n\nThe inverse of the Union of Complements is the &quot;Intersection&quot;.  A basic Venn \ndiagram consists of two overlapping circles, A and B, inside a rectangle U \n(for Universal set).  The area where the circles overlap is the Intersection, \neverything else inside the rectangle is the Union of Complements.  URIs [1], \n[2] and [3] so far, have all been in the Union of Complements.  If we \nconceptualize resource [1] as &quot;fresh apples&quot;, this URI would be in the \nIntersection:\n\n[4] http://example.com/apples/red-delicious/rotten.apple.fruit\n\nThe representation of a rotten apple is a member of the Red Delicious \nhierarchical subset, therefore it is a member of the Apples hierarchical \nsubset.  But, if we&#39;ve decided that [4] will never be a response \nrepresentation when resource [1] is dereferenced, we have excluded [4] from \nmembership in any conceptual subset of [1] without altering the URI \nallocation scheme.  REST does not care how you go about defining the \nsemantics of your mappings (configuring your server) so long as they&#39;re \nvalid, and static.\n\nResource [1]&#39;s conceptual set is defined by its mapping, not by its members, \nso it is up to the server manager to ensure that all members belong by \nproperly constraining the responses returned when resource [1] is \ndereferenced.  It is this constraint of the set which defines the resource \nconcept in REST, not the semantics of its members, becasue the resource is \nthe box -- not its contents at any given point in time.\n\nA Venn diagram which expresses a hierarchical subset is a rectangle U \ncontaining one circle B completely enclosed within another circle A.  To \nexpress REST content negotiation for a given resource as a Venn diagram \nrequires both the circle-in-a-circle diagram to constrain it to proper \nsubsets, then the overlapping-circle diagram to constrain the resource set to \nits conceptual Union of Complements.\n\n[1] http://example.com/fruit/\n[2] http://example.com/apples/\n[3] http://example.com/oranges/\n\n[1] http://example.com/fruit\n[2] http://example.com/apple\n[3] http://example.com/orange\n\nIn either sequence above, if resource [1] sometimes responds with a \nrepresentation of resource [2] when dereferenced and at other times, a \nrepresentation of resource [3], it is a REST error (aka &quot;URI collision&quot;) even \nthough conceptually, [2] and [3] are equivalent subsets of [1]. This is \nbecause &quot;Each origin server provides... a resource hierarchy&quot;, which means \nthat [1], [2] and [3] are &quot;disjoint sets&quot; by definition of URIs as \nhierarchical sets.  URIs [2] and [3] cannot be seen as proper subsets of [1] \nunless they are also hierarchical subsets of [1]:\n\n[1] http://example.com/fruit/\n[2] http://example.com/fruit/apples/\n[3] http://example.com/fruit/oranges/\n\n[1] http://example.com/fruit\n[2] http://example.com/fruit.apple\n[3] http://example.com/fruit.orange\n\nSo far, the examples have assumed content-negotiation situations, where the \nresponse representation when resource [1] is dereferenced may be any \nequivalent member representation contained the Union of Complements with a \nresponse code of 200 OK. These are examples of the &quot;late binding of a \nrepresentation to a resource&quot;. Sometimes, we want to include an equivalent \nset in our conceptual set, which is NOT in the same hierarchical set. In such \na case, the response when [1] is dereferenced is not a representation of the \nresource it identifies, instead the response representation &quot;indicates the \nvalue of some other resource&quot; by redirection.\n\nThis redirection serves the purpose of identifying a &quot;disjoint set&quot; as an \nequivalent resource, which could also be called the early binding of a \nresource to a request. This redirection must be the same for all users, \nregardless of the preference settings of their user-agents, in order for the \nsemantics of the resource mapping to remain static. The &quot;late binding of a \nrepresentation to a resource&quot; may only occur at the target of the \nredirection, not the dynamically-redirecting resource itself, because that \nset&#39;s only member representation &quot;indicates an equivalent disjoint set&quot; and \nnothing more.\n\n[1] http://example.com/fruit-of-the-month\n[2] http://example.com/apples/\n[3] http://example.com/apples/red-delicious.apple\n[4] http://example.com/oranges/\n\nURI [1] indicates some other resource as being a disjoint set of temporarily-\nequivalent value by responding to requests with a 307 redirect.  Let&#39;s assume \nthis month&#39;s fruit is &quot;apples&quot;. For this month, resource [2] is temporarily \nequivalent to resource [1], the fact that they have no overlapping membership \ndespite their equivalence is the definition of disjoint sets. Next month, [2] \nshould no longer be equivalent to [1].\n\nThe only member representation of set [1] above is a 307 redirect pointer. To \nexpress permanent instead of temporary equivalency, the only member \nrepresentation of set [1] below would be a 301 redirect instead of a 307:\n\n[1] http://example.com/2006-fruit-of-the-year\n[2] http://example.com/apples/\n\nResource [1] may conceptually identify resource [2], but this does not make \nresource [2] or its members, members of set [1].  The Venn diagram for a \ndisjoint set is a rectangle U containing two circles A and B which do not \noverlap, it is the only diagram required to express REST redirection.\n\nTo sum up: content negotiation is the late binding to a requested resource of \nsome member representation which is equivalent, defined as the Union of \nComplements of the resource set and its proper subsets.  Redirection is the \nearly binding to a request of some other resource which is equivalent, \ndefined as a disjoint set.  These relationships may be modeled using simple \nVenn diagrams as visual aids when conceptualizing a website or web service.  \nThese Venn diagrams can be used to derive the URI allocation scheme, and be \nreferred to when designing the function of the various components.\n\n(My nutshell objection to the notion of a service document, is its Venn \ndiagram consists of circles A and B on the outside of rectangle U, and I \ncan&#39;t square that with REST.)\n\n-Eric\n\n&gt;-- \n&gt;...jsled\n&gt;http://asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n&gt;\n\n\n\n"}}