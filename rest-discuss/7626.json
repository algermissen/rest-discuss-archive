{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"5nXbmaNPctaeto-1dGWEu355S5wZZV0beoimgX5TZIbuAIHL_lXzqnfVYqsg0UE9Rjf6g244gqDjMLUZc4K_hbVlmNTXWW7MWQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: how to model actions","postDate":"1168959933","msgId":7626,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEE2ODVDNDEwLTM5MTItNDlDNC05NENGLTU0NDMzNTdCRjU3M0BtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PDExNjg3Mjc0NTUuNzU5NS4xOS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","referencesHeader":"PGVvYjlzNitxMW92QGVHcm91cHMuY29tPiA8MTE2ODcyNzQ1NS43NTk1LjE5LmNhbWVsQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4="},"prevInTopic":7625,"nextInTopic":7627,"prevInTime":7625,"nextInTime":7627,"topicId":7510,"numMessagesInTopic":39,"msgSnippet":"... This is so obvious that I m stunned I missed it.  Blueprints should definitively be modeled as a container. ... There is a key difference with","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 38045 invoked from network); 16 Jan 2007 15:05:58 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m40.grp.scd.yahoo.com with QMQP; 16 Jan 2007 15:05:58 -0000\r\nReceived: from unknown (HELO tp.mindtouch.com) (70.87.49.83)\n  by mta8.grp.scd.yahoo.com with SMTP; 16 Jan 2007 15:05:57 -0000\r\nReceived: (qmail 10720 invoked by uid 1002); 16 Jan 2007 15:22:11 -0000\r\nReceived: from 68.107.88.60 by tp (envelope-from &lt;steveb@...&gt;, uid 64011) with qmail-scanner-1.25 \n (spamassassin: 3.0.3.  \n Clear:RC:1(68.107.88.60):. \n Processed in 0.067733 secs); 16 Jan 2007 15:22:11 -0000\r\nReceived: from ip68-107-88-60.sd.sd.cox.net (HELO ?192.168.1.196?) (steveb@...@68.107.88.60)\n  by tp.mindtouch.com with ESMTPA; 16 Jan 2007 15:22:10 -0000\r\nIn-Reply-To: &lt;1168727455.7595.19.camel@...&gt;\r\nReferences: &lt;eob9s6+q1ov@...&gt; &lt;1168727455.7595.19.camel@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;A685C410-3912-49C4-94CF-5443357BF573@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 16 Jan 2007 07:05:33 -0800\r\nTo: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] Re: how to model actions\r\nX-Yahoo-Group-Post: member; u=292691042; y=bD0SCeTRsRjUvDTKNQr-g2oryqKgAgzFV751bFiY5ZKM3OLZgf8\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\nOn Jan 13, 2007, at 2:30 PM, Benjamin Carlyle wrote:\n\n&gt; Let&#39;s consider the blueprint case. You want the server to store a\n&gt; blueprint, so you give your blueprint to the register resource. This\n&gt; actually sounds more like your container pattern. You POST the  \n&gt; blueprint\n&gt; to the factory resource. The return verb is &quot;Created&quot;, with a location\n&gt; header that points you to the created resource. You could update the\n&gt; blueprint with a PUT, and deregister the blueprint by DELETE-ing the\n&gt; created resource. Your server could be replaced by a range of possible\n&gt; blueprint-storage systems, and the client would continue to work. It\n&gt; would just issue its POST to whatever it was configured with.\n\nThis is so obvious that I&#39;m stunned I missed it.  Blueprints should  \ndefinitively be modeled as a container.\n\n&gt; Instantiation also sounds like your container pattern to me. This time\n&gt; you are posting the state of a new service (which includes\n&gt; configuration) to a service factory. It would create a resource to\n&gt; represent the ongoing state of the service. A DELETE would destroy the\n&gt; service, a PUT would change its state.\n\nThere is a key difference with instantiation.  In the case of  \nblueprints, adding a blueprints did result in the creation of sub- \nresource.\nExample:\nhttp://server/host/blueprints/my_new_blueprint\n\nHowever, in the case of instantiation, there is no sub-resource  \nassumption.  Thus, the location of the new service could be:\nhttp://server/my_new_service\n\nI think the sub-resource relationship is key to the container  \npatters, because it defines scope of influence.  However, I can&#39;t  \napply this restriction to the Host service, which is peer to other  \nservices.\n\n- Steve\n\n--------------\nSteve G. Bjorg\nhttp://www.mindtouch.com\nhttp://www.opengarden.org\n\n\n"}}