{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":403546864,"authorName":"Moore, Jonathan","from":"&quot;Moore, Jonathan&quot; &lt;jonathan_moore@...&gt;","profile":"jonathan_t_moore","replyTo":"SENDER","senderId":"xlz7znrjYXcNvJu5U0-EAkOXNwz7RTH_tlqjniZxzqM-PUlGR0ETFc_ku6T4dde5MADTTjbujvlL9gfnipq2m_fXyXZRiLY84h_Y_-5RZ-nX9fhP7Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Feedback on implementing client side HTTP caching","postDate":"1296055020","msgId":17232,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM5NjVBMzlBLjgwNkElSm9uYXRoYW5fTW9vcmVAQ29tY2FzdC5jb20+","inReplyToHeader":"PEFBTkxrVGlubS1YZC09UWZOeWpvV3BRd1pBMlE3czBPWUZWa1NkME40YmpqaUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17231,"nextInTopic":17233,"prevInTime":17231,"nextInTime":17233,"topicId":17219,"numMessagesInTopic":22,"msgSnippet":"Hi, yes, the caching module has a suite of unit tests to test compliance with the HTTP/1.1 spec. These are separated out into requirements (MUST/MUST NOT) and","rawEmail":"Return-Path: &lt;jonathan_moore@...&gt;\r\nX-Sender: jonathan_moore@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 41555 invoked from network); 26 Jan 2011 15:17:22 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m10.grp.re1.yahoo.com with QMQP; 26 Jan 2011 15:17:22 -0000\r\nX-Received: from unknown (HELO pacdcimo01.cable.comcast.com) (24.40.8.145)\n  by mta1.grp.re1.yahoo.com with SMTP; 26 Jan 2011 15:17:22 -0000\r\nX-Received: from ([24.40.55.42])\n\tby pacdcimo01.cable.comcast.com with ESMTP with TLS id 5503620.111855417;\n\tWed, 26 Jan 2011 10:17:16 -0500\r\nX-Received: from PACDCEXMB03.cable.comcast.com ([fe80::c9c:28ac:e945:214f]) by\n PACDCEXHUB01.cable.comcast.com ([fe80::d1e7:20b5:9b63:21a6%12]) with mapi id\n 14.01.0270.001; Wed, 26 Jan 2011 10:17:02 -0500\r\nTo: Sidu Ponnappa &lt;lorddaemon@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nThread-Topic: [rest-discuss] Feedback on implementing client side HTTP\n caching\r\nThread-Index: AQHLvG9EdjaX+09yEEWZs8gHRG0lc5Ph5yQAgAFai4CAAB2UgA==\r\nDate: Wed, 26 Jan 2011 15:17:00 +0000\r\nMessage-ID: &lt;C965A39A.806A%Jonathan_Moore@...&gt;\r\nIn-Reply-To: &lt;AANLkTinm-Xd-=QfNyjoWpQwZA2Q7s0OYFVkSd0N4bjji@...&gt;\r\nAccept-Language: en-US\r\nContent-Language: en-US\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nuser-agent: Microsoft-MacOutlook/14.2.0.101115\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;_000_C965A39A806AJonathanMooreComcastcom_&quot;\r\nMIME-Version: 1.0\r\nFrom: &quot;Moore, Jonathan&quot; &lt;jonathan_moore@...&gt;\r\nSubject: Re: [rest-discuss] Feedback on implementing client side HTTP caching\r\nX-Yahoo-Group-Post: member; u=403546864; y=hxrGz8S8TYzDkIMmdRHNds5euutkX46owBOBsuouH8tY7y7cXQev9P61Ew\r\nX-Yahoo-Profile: jonathan_t_moore\r\n\r\n\r\n--_000_C965A39A806AJonathanMooreComcastcom_\r\nContent-Type: text/plain; charset=&quot;Windows-1252&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi, yes, the caching module has a suite of unit tests to test compliance wi=\r\nth the HTTP/1.1 spec. These are separated out into requirements (MUST/MUST =\r\nNOT) and recommendations (SHOULD/SHOULD NOT). Here are links to them in the=\r\n source repository:\n\nhttps://svn.apache.org/repos/asf/httpcomponents/httpcl=\r\nient/tags/4.1/httpclient-cache/src/test/java/org/apache/http/impl/client/ca=\r\nche/TestProtocolRequirements.java\n\nAnd\n\nhttps://svn.apache.org/repos/asf/ht=\r\ntpcomponents/httpclient/tags/4.1/httpclient-cache/src/test/java/org/apache/=\r\nhttp/impl/client/cache/TestProtocolRecommendations.java\n\nThe caching module=\r\n is implemented as a decorator around a regular HttpClient =97 meaning you =\r\ninstantiate the cache when you instantiate the client but can then &quot;ignore&quot;=\r\n caching when you use it. I.e. You do:\n\nHttpClient regularBackend =3D new D=\r\nefaultHttpClient(=85);\nHttpClient theClientToUse =3D new CachingHttpClient(=\r\nregularBackend, =85);\n\nJon\n........\nJon Moore\nComcast Interactive Media\n\n\n\n=\r\nFrom: Sidu Ponnappa &lt;lorddaemon@...&lt;mailto:lorddaemon@...&gt;&gt;\nDat=\r\ne: Wed, 26 Jan 2011 14:01:03 +0530\nTo: &lt;rest-discuss@yahoogroups.com&lt;mailto=\r\n:rest-discuss@yahoogroups.com&gt;&gt;\nSubject: Re: [rest-discuss] Feedback on imp=\r\nlementing client side HTTP caching\n\n\n\nThank you, Nathan. I&#39;ll look into the=\r\n new draft RFC.\n\nErlend and Jonthan, thanks for the links to your respectiv=\r\ne projects - we&#39;ll take a look at those too. I haven&#39;t looked yet, but is t=\r\nhere a suite of functional tests that exists that we can use to determine c=\r\nompliance? We&#39;re building one as we go, but if there&#39;s something that alrea=\r\ndy exists that is comprehensive, it would be of great help.\n\nThanks,\nSidu.\n=\r\nhttp://c42.in\n\nOn Tue, Jan 25, 2011 at 5:20 PM, Erlend Hamnaberg &lt;ngarthl@g=\r\nmail.com&lt;mailto:ngarthl@...&gt;&gt; wrote:\n\nFor inspiration check out my Op=\r\nen Source Java HTTP caching library:\nhttp://httpcache4j.codehaus.org\n\nthe s=\r\nource is also available here:\nhttps://github.com/hamnis/httpcache4j\n\n--\n\nEr=\r\nlend\n\nOn Tue, Jan 25, 2011 at 10:06 AM, Sidu Ponnappa &lt;lorddaemon@...=\r\n&lt;mailto:lorddaemon@...&gt;&gt; wrote:\n\n\nHello everyone,\n\nOne of my colleagu=\r\nes has been working on implementing client side HTTP\ncaching on a open sour=\r\nce project of ours.  He&#39;s had a hard time\nfinding comprehensive documentati=\r\non, so he put together\nhttps://github.com/kaiwren/wrest/blob/caching/Cachin=\r\ng.markdown by\nworking through the HTTP RFC as well as Firefox source.\n\nI&#39;d =\r\nappreciate it if those of you that know how this should work\n(especially in=\r\n the context of REST) could take a look and let us know\nif there is anythin=\r\ng that we&#39;ve missed. A large portion of that\ndocument has already been impl=\r\nemented; we expect to release these\nfeatures in about a week as a part of W=\r\nrest 1.1.\n\nThanks,\nSidu.\nhttp://c42.in\n\n\n\n\n\r\n--_000_C965A39A806AJonathanMooreComcastcom_\r\nContent-Type: text/html; charset=&quot;Windows-1252&quot;\r\nContent-ID: &lt;6E70A5D83C2F9E4183534B8E15BB64CA@...&gt;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=3D&quot;Content-Type&quot; content=3D&quot;text/html; chars=\r\net=3DWindows-1252&quot;&gt;\n&lt;/head&gt;\n&lt;body style=3D&quot;word-wrap: break-word; -webkit-n=\r\nbsp-mode: space; -webkit-line-break: after-white-space; color: rgb(0, 0, 0)=\r\n; font-size: 14px; font-family: Calibri, sans-serif; &quot;&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;div&gt;Hi=\r\n, yes, the caching module has a suite of unit tests to test compliance with=\r\n the HTTP/1.1 spec. These are separated out into requirements (MUST/MUST NO=\r\nT) and recommendations (SHOULD/SHOULD NOT). Here are links to them in the s=\r\nource repository:&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;&lt;a href=3D&quot;https://svn.apache=\r\n.org/repos/asf/httpcomponents/httpclient/tags/4.1/httpclient-cache/src/test=\r\n/java/org/apache/http/impl/client/cache/TestProtocolRequirements.java&quot;&gt;http=\r\ns://svn.apache.org/repos/asf/httpcomponents/httpclient/tags/4.1/httpclient-=\r\ncache/src/test/java/org/apache/http/impl/client/cache/TestProtocolRequireme=\r\nnts.java&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;And&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;&lt;a=\r\n href=3D&quot;https://svn.apache.org/repos/asf/httpcomponents/httpclient/tags/4.=\r\n1/httpclient-cache/src/test/java/org/apache/http/impl/client/cache/TestProt=\r\nocolRecommendations.java&quot;&gt;https://svn.apache.org/repos/asf/httpcomponents/h=\r\nttpclient/tags/4.1/httpclient-cache/src/test/java/org/apache/http/impl/clie=\r\nnt/cache/TestProtocolRecommendations.java&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;T=\r\nhe caching module is implemented as a decorator around a regular HttpClient=\r\n =97 meaning you instantiate the cache when you instantiate the client but =\r\ncan then &quot;ignore&quot; caching when you use it. I.e. You do:&lt;/div&gt;\n&lt;di=\r\nv&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;HttpClient regularBackend =3D new DefaultHttpClient(=85)=\r\n;&lt;/div&gt;\n&lt;div&gt;HttpClient theClientToUse =3D new CachingHttpClient(regularBac=\r\nkend, =85);&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;Jon&lt;/div&gt;\n&lt;div&gt;\n&lt;div&gt;........&lt;/div&gt;=\r\n\n&lt;div&gt;Jon Moore&lt;/div&gt;\n&lt;div&gt;Comcast Interactive Media&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;=\r\n\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;span id=3D&quot;OLK_SRC=\r\n_BODY_SECTION&quot;&gt;\n&lt;div style=3D&quot;font-family:Calibri; font-size:11pt; text-ali=\r\ngn:left; color:black; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none;=\r\n PADDING-BOTTOM: 0in; PADDING-LEFT: 0in; PADDING-RIGHT: 0in; BORDER-TOP: #b=\r\n5c4df 1pt solid; BORDER-RIGHT: medium none; PADDING-TOP: 3pt&quot;&gt;\n&lt;span style=\r\n=3D&quot;font-weight:bold&quot;&gt;From: &lt;/span&gt;Sidu Ponnappa &lt;&lt;a href=3D&quot;mailto:lord=\r\ndaemon@...&quot;&gt;lorddaemon@...&lt;/a&gt;&gt;&lt;br&gt;\n&lt;span style=3D&quot;font-weig=\r\nht:bold&quot;&gt;Date: &lt;/span&gt;Wed, 26 Jan 2011 14:01:03 &#43;0530&lt;br&gt;\n&lt;span style=\r\n=3D&quot;font-weight:bold&quot;&gt;To: &lt;/span&gt;&lt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogr=\r\noups.com&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;&gt;&lt;br&gt;\n&lt;span style=3D&quot;font-weig=\r\nht:bold&quot;&gt;Subject: &lt;/span&gt;Re: [rest-discuss] Feedback on implementing client=\r\n side HTTP caching&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;div style=3D&quot;backgrou=\r\nnd-color: #fff;&quot;&gt;&lt;span style=3D&quot;display:none&quot;&gt;&nbsp;&lt;/span&gt;\n&lt;div id=3D&quot;ygrp=\r\n-text&quot;&gt;\n&lt;p&gt;Thank you, Nathan. I&#39;ll look into the new draft RFC.&lt;br&gt;\n&lt;br&gt;\nEr=\r\nlend and Jonthan, thanks for the links to your respective projects - we&#39;ll =\r\ntake a look at those too. I haven&#39;t looked yet, but is there a suite of fun=\r\nctional tests that exists that we can use to determine compliance? We&#39;re bu=\r\nilding one as we go, but if there&#39;s\n something that already exists that is =\r\ncomprehensive, it would be of great help.&lt;br&gt;\n&lt;br&gt;\nThanks,&lt;br&gt;\nSidu.&lt;br&gt;\n&lt;a=\r\n href=3D&quot;http://c42.in&quot;&gt;http://c42.in&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nOn Tue, Jan 25, 2011 at =\r\n5:20 PM, Erlend Hamnaberg &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:ngarthl@g=\r\nmail.com&quot;&gt;ngarthl@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;/p&gt;\n&lt;div class=3D&quot;gm=\r\nail_quote&quot;&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px sol=\r\nid rgb(204, 204, 204);&quot;&gt;\nFor inspiration check out my Open Source Java HTTP=\r\n caching library:&lt;br&gt;\n&lt;a href=3D&quot;http://httpcache4j.codehaus.org&quot; target=3D=\r\n&quot;_blank&quot;&gt;http://httpcache4j.codehaus.org&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nthe source is also av=\r\nailable here:&lt;br&gt;\n&lt;a href=3D&quot;https://github.com/hamnis/httpcache4j&quot; target=\r\n=3D&quot;_blank&quot;&gt;https://github.com/hamnis/httpcache4j&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n--&lt;br&gt;\n&lt;br&gt;\n=\r\nErlend&lt;br&gt;\n&lt;br&gt;\n&lt;div class=3D&quot;gmail_quote&quot;&gt;\n&lt;div&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;div class=3D=\r\n&quot;h5&quot;&gt;On Tue, Jan 25, 2011 at 10:06 AM, Sidu Ponnappa &lt;span dir=3D&quot;ltr&quot;&gt;&lt;=\r\n&lt;a href=3D&quot;mailto:lorddaemon@...&quot; target=3D&quot;_blank&quot;&gt;lorddaemon@gmail.=\r\ncom&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;blockquote class=3D&quot;gmail_quot=\r\ne&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204);&quot;&gt;\n&lt;div style=3D&quot;back=\r\nground-color: rgb(255, 255, 255);&quot;&gt;&lt;span&gt;&nbsp;&lt;/span&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;d=\r\niv&gt;&lt;/div&gt;\n&lt;div class=3D&quot;h5&quot;&gt;\n&lt;div&gt;\n&lt;p&gt;Hello everyone,&lt;br&gt;\n&lt;br&gt;\nOne of my co=\r\nlleagues has been working on implementing client side HTTP&lt;br&gt;\ncaching on a=\r\n open source project of ours.&nbsp; He&#39;s had a hard time&lt;br&gt;\nfinding compre=\r\nhensive documentation, so he put together&lt;br&gt;\n&lt;a href=3D&quot;https://github.com=\r\n/kaiwren/wrest/blob/caching/Caching.markdown&quot; target=3D&quot;_blank&quot;&gt;https://git=\r\nhub.com/kaiwren/wrest/blob/caching/Caching.markdown&lt;/a&gt; by&lt;br&gt;\nworking thro=\r\nugh the HTTP RFC as well as Firefox source.&lt;br&gt;\n&lt;br&gt;\nI&#39;d appreciate it if t=\r\nhose of you that know how this should work&lt;br&gt;\n(especially in the context o=\r\nf REST) could take a look and let us know&lt;br&gt;\nif there is anything that we&#39;=\r\nve missed. A large portion of that&lt;br&gt;\ndocument has already been implemente=\r\nd; we expect to release these&lt;br&gt;\nfeatures in about a week as a part of Wre=\r\nst 1.1.&lt;br&gt;\n&lt;br&gt;\nThanks,&lt;br&gt;\nSidu.&lt;br&gt;\n&lt;a href=3D&quot;http://c42.in&quot; target=3D&quot;=\r\n_blank&quot;&gt;http://c42.in&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div style=3D&quot;color=\r\n: rgb(255, 255, 255);&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;\n&lt;br=\r\n&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;\n&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- end group ema=\r\nil --&gt;&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--_000_C965A39A806AJonathanMooreComcastcom_--\r\n\n"}}