{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":435049665,"authorName":"Markus KARG","from":"&quot;Markus KARG&quot; &lt;markus@...&gt;","profile":"headcrashing","replyTo":"SENDER","senderId":"5_ibSHHK9g3ODNkUbC8fPXPA7et_fcGCfnXTqcFv1ruuPnXQ8eD8vOxv-xdHTuRBcbTo1G2HiR9zVOP2BsaCpgaDVFres-2Q-lTOzoE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Re: [Jersey] Moved thread to rest-discuss / HATEOAS-via-HTTP: Which HTTP Method to use to follow link?","postDate":"1266765717","msgId":14843,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAxZWQwMWNhYjMwOSQ5YjczNjhmMCRkMjVhM2FkMCRAZXU+","inReplyToHeader":"PDlEMjIwRTgyLTI0RjEtNDFGNS04N0FDLTcwRkQ2RjhFN0UxN0BtYWMuY29tPg==","referencesHeader":"PDAxOTIwMWNhYjIzOSQyOGI5ZGRiMCQ3YTJkOTkxMCQla2FyZ0BnbXgubmV0PiA8Rjk1NDYxM0EtOTNCMC00RTE3LUFBOTYtMzZEMTM0MDEyQjAyQG1hYy5jb20+IDwwMWFlMDFjYWIyNTgkZDMyZjAyNjAkNzk4ZDA3MjAkQGV1PiA8Q0VFMDc2QkItNDVBMy00RjMwLUFDRTItMEFGNzkxQzRFQjlBQG1hYy5jb20+IDwwMWM0MDFjYWIyZDUkYTBlZTcyNDAkZTJjYjU2YzAkQGV1PiA8ODFENDQ4MkMtQzM4NC00NDQ0LThGRDMtRDI5RTlGMjRDRTk0QG1hYy5jb20+IDwwMWU1MDFjYWIyZjkkMDZmMTA0ZTAkMTRkMzBlYTAkQGV1PiA8OUQyMjBFODItMjRGMS00MUY1LTg3QUMtNzBGRDZGOEU3RTE3QG1hYy5jb20+"},"prevInTopic":14842,"nextInTopic":14877,"prevInTime":14842,"nextInTime":14844,"topicId":14827,"numMessagesInTopic":27,"msgSnippet":"... In a pragmatic sense I agree, but in the sense of why the WWW is so great I disagree: The long term solution shold be a machine readable declaration, so ","rawEmail":"Return-Path: &lt;markus@...&gt;\r\nX-Sender: markus@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19815 invoked from network); 21 Feb 2010 15:21:59 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 21 Feb 2010 15:21:59 -0000\r\nX-Received: from unknown (HELO smtprelay04.ispgateway.de) (80.67.31.38)\n  by mta2.grp.sp2.yahoo.com with SMTP; 21 Feb 2010 15:21:59 -0000\r\nX-Received: from [88.66.48.52] (helo=MarkusPC)\n\tby smtprelay04.ispgateway.de with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.68)\n\t(envelope-from &lt;markus@...&gt;)\n\tid 1NjDd7-0006GX-QZ; Sun, 21 Feb 2010 16:21:57 +0100\r\nTo: &quot;&#39;Jan Algermissen&#39;&quot; &lt;algermissen1971@...&gt;\r\nCc: &quot;&#39;REST Discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;019201cab239$28b9ddb0$7a2d9910$%karg@...&gt; &lt;F954613A-93B0-4E17-AA96-36D134012B02@...&gt; &lt;01ae01cab258$d32f0260$798d0720$@eu&gt; &lt;CEE076BB-45A3-4F30-ACE2-0AF791C4EB9A@...&gt; &lt;01c401cab2d5$a0ee7240$e2cb56c0$@eu&gt; &lt;81D4482C-C384-4444-8FD3-D29E9F24CE94@...&gt; &lt;01e501cab2f9$06f104e0$14d30ea0$@eu&gt; &lt;9D220E82-24F1-41F5-87AC-70FD6F8E7E17@...&gt;\r\nIn-Reply-To: &lt;9D220E82-24F1-41F5-87AC-70FD6F8E7E17@...&gt;\r\nDate: Sun, 21 Feb 2010 16:21:57 +0100\r\nOrganization: HeadCrash\r\nMessage-ID: &lt;01ed01cab309$9b7368f0$d25a3ad0$@eu&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 12.0\r\nThread-Index: Acqy/yFiy/7m3KRbRD6BiQ5sV7MZYAACMvQA\r\nContent-Language: de\r\nX-Df-Sender: markus@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Markus KARG&quot; &lt;markus@...&gt;\r\nSubject: RE: [rest-discuss] Re: [Jersey] Moved thread to rest-discuss / HATEOAS-via-HTTP: Which HTTP Method to use to follow link?\r\nX-Yahoo-Group-Post: member; u=435049665; y=RSKiPVmgjzOitN7mQmzMa3RdaGjvW6EHXohTyMHtxZ8CFGLHDdky\r\nX-Yahoo-Profile: headcrashing\r\n\r\n&gt; &gt; If the specification is only human readable, I do not see much of a\n&gt; benefit\n&gt; &gt; in HATEOAS at all: If the client will only be able to communicate\n&gt; with my\n&gt; &gt; particlar implementation of a web shop (for example),\n&gt; \n&gt; Right - that is why the goal should obviously be to share a &#39;shopping&#39;\n&gt; media type across many shopping services. Such as AtomPub provides\n&gt; media types for implementing publishing services.\n\nIn a pragmatic sense I agree, but in the sense of why the WWW is so great I\ndisagree: The long term solution shold be a machine readable declaration, so\nnobody would need to agree upon which types of businesses there will be. I\nmean, actually I don&#39;t provide a ship but a very specialized application. I\ndon&#39;t see that my few competitors would like to find a common API. But I do\nsee that they would agree upon something like WADL.\n\n&gt; &gt; in contrast to working\n&gt; &gt; with *all* kinds of shops on the basis of some generic machine-\n&gt; readble\n&gt; &gt; standard business vocabulary, then HATEOAS will not work.\n&gt; \n&gt; &gt; Why? Because\n&gt; &gt; HATEOAS implies that one (even a machine) can browse to *any* URI\n&gt; provided\n&gt; &gt; in the response of the previous call. So that is not guaranteed now,\n&gt; as it\n&gt; &gt; will be impossible to redirect the client to a foreign site, if I\n&gt; (the\n&gt; &gt; server vendor providing the URI) cannot guarantee that every client\n&gt; knows\n&gt; &gt; about the particular use of http methods by that referenced site. So\n&gt; to make\n&gt; &gt; the complete system of &quot;machine web&quot; work, I would have to provide\n&gt; &gt; information on virtually every external service to virtually each\n&gt; client.\n&gt; &gt; How should I know of either? This is impossible.\n&gt; &gt;\n&gt; &gt; What would solve the problem\n&gt; \n&gt; There is actually no problem - you just need an &quot;evolving set of\n&gt; standard types&quot; (to paraphrase Roy).\n\nWell, actually there IS a problem, as for many businesses it is impossible\nto defined a common methodology (even a common vocabulary). Also, this leads\nto a plethora of business objects. I think what Roy actually meant was not\nthe idea that everybody should do his own type and declare it as a standard,\nbut more that the world negotiates upon *standard* types like Dublin Core.\nYes, that would definitively be a solution, but I do not see that it\nactually is happening.\n\n&gt; &gt; I you just rely on defining human readable specifications, you just\n&gt; move the\n&gt; &gt; human to an early stage, but you don&#39;t get rid of him.\n&gt; \n&gt; It is impossible to get rid of the human otherwise we would be talking\n&gt; AI.\n\nNo you misunderstood. I am not talking about replacing human in the workflow\nsense, but only that I want to replace it at the point where he must read a\nspecification, as this thread is solely about http methods! So if there\nwould be a machine readable specification how to find out about http\nmethods, that does not imply any artifical intelligence, but solely solving\none particlar technical problem -- that one this thread is about.\n\n&gt; &gt; But actually, the\n&gt; &gt; difference between WWW and REST (shortly spoken) is that the first is\n&gt; about\n&gt; &gt; humans, while the latter -in the sense we discuss it here- is about\n&gt; &gt; machines. So to make it work completely (not just in part) and\n&gt; globally, we\n&gt; &gt; need to get rid of human and find ways to make machines understand\n&gt; machines\n&gt; &gt; without the need to manually define each single interconnection type,\n&gt; but\n&gt; &gt; step forward to global standards. AtomPub is not a solution, as it\n&gt; only is\n&gt; &gt; defined for publishing, while we need something on a higher level,\n&gt; &gt; describing *any* kind of business interaction.\n&gt; \n&gt; At some point you need to bind your implementation to domain semantics,\n&gt; no matter how many general layers you use. For example, the only\n&gt; difference between\n\nI do not see that the selection of one http method is part of the domain.\n&quot;buy&quot;, &quot;sell&quot;, &quot;publish&quot;, &quot;payoff&quot; certainly are domain verbs, but the\nbinding of &quot;sell&quot; to &quot;POST&quot; is not, at least in my understanding, as exactly\nthat can be solved simply by some kind of machine-readable contract.\n\n&gt; &lt;person&gt;\n&gt;   &lt;father href=&quot;&quot;/&gt;\n&gt; &lt;/person&gt;\n&gt; \n&gt; and\n&gt; \n&gt; &lt;person&gt;\n&gt;   &lt;link rel=&quot;father&quot; href=&quot;&quot;/&gt;\n&gt; &lt;/person&gt;\n&gt; \n&gt; is the layer at which the &#39;father&#39; semantic is defined (XML semantics\n&gt; vs. generic link relation semantics. You cannot make software figure\n&gt; out what &#39;father&#39; means - you MUST hardcode that at some point.\n\nYou don&#39;t get the point of this discussion. I did nither ask nor say that a\nmachine shall find out what &quot;father&quot; means, but that I like the machine to\nfind out which http method to use to follow the link. Please don&#39;t imply\nmore general ideas into my question than I actually asked. ;-) In fact, you\nneed to hardcode what &quot;father&quot; means, but that is part of the business\ndomain model, while the binding of &quot;father --&gt; GET&quot; is part of the technical\nrealization. And I am talking solely of the latter. I don&#39;t want to write a\nsoftware that can do anything. I just want to write one that ONCE I MADE IT\nUNDERSTOOD WHAT A FATHER IS is able to learn about the ways to find the\nfather on a fully automated way. And with WADL for example that would be\npossible.\n\n\n\n"}}