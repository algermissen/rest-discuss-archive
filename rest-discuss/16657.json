{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"x36z5GIoiaXyPEy8VK4NA20xtQRRQ32r3FZa3QG4Eb9KljBoWUtZdT_ogEauwhY-tKecQvPfNaXbEb5P6gEmhlrYvMUF6Jidltgrzk-AHQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and self-descriptiveness","postDate":"1285280523","msgId":16657,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTIzMTYyMjAzLjc5MjgzNjMwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRDOUI0NEEzLjUwNTAwMDVAd2VicjMub3JnPg==","referencesHeader":"PEFBTkxrVGlucERBMHE4MTFHNmU2QU5NaEVIMEJ4RGVqbmNYVFI5a21TOCthaEBtYWlsLmdtYWlsLmNvbT4JPDRDOUIyMzM3LjIwODA1MDdAd2VicjMub3JnPgk8QUFOTGtUaW1CclZ6Sj1yMDlLektYMHk5N3JlVVhfNWl5XzBNelJmc2NXcEFoQG1haWwuZ21haWwuY29tPgk8NEM5QjMyMjYuOTA5MDMwMEB3ZWJyMy5vcmc+CTxBQU5Ma1RpbmVybWVrRGJTazFFSHVLaXY2K21GNkQ2RkRIMjJWdlIzdC1nbWlAbWFpbC5nbWFpbC5jb20+CTwyMDEwMDkyMzA1MjkxOC44OTMxMmFkYS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QzlCNDRBMy41MDUwMDA1QHdlYnIzLm9yZz4="},"prevInTopic":16656,"nextInTopic":16658,"prevInTime":16656,"nextInTime":16658,"topicId":16634,"numMessagesInTopic":49,"msgSnippet":"... I still think the proper path is to change RFC 4627 to be extensible in the same way RFC 3023 is extensible for +xml, and that json-schema needs to refer","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 39914 invoked from network); 23 Sep 2010 22:22:05 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m13.grp.re1.yahoo.com with QMQP; 23 Sep 2010 22:22:05 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 23 Sep 2010 22:22:05 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id F420F509DD;\n\tThu, 23 Sep 2010 18:22:04 -0400 (EDT)\r\nDate: Thu, 23 Sep 2010 16:22:03 -0600\r\nTo: nathan@...\r\nCc: Alan Dean &lt;alan.dean@...&gt;, REST Discussion Group\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100923162203.79283630.eric@...&gt;\r\nIn-Reply-To: &lt;4C9B44A3.5050005@...&gt;\r\nReferences: &lt;AANLkTinpDA0q811G6e6ANMhEH0BxDejncXTR9kmS8+ah@...&gt;\n\t&lt;4C9B2337.2080507@...&gt;\n\t&lt;AANLkTimBrVzJ=r09KzKX0y97reUX_5iy_0MzRfscWpAh@...&gt;\n\t&lt;4C9B3226.9090300@...&gt;\n\t&lt;AANLkTinermekDbSk1EHuKiv6+mF6D6FDH22VvR3t-gmi@...&gt;\n\t&lt;20100923052918.89312ada.eric@...&gt;\n\t&lt;4C9B44A3.5050005@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST and self-descriptiveness\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nNathan wrote:\n&gt;\n&gt; &gt; \n&gt; &gt;&gt; application/vnd.contact+json\n&gt; &gt;&gt;\n&gt; &gt; \n&gt; &gt; At least RFC 3023 defines +xml syntax -- +json is defined where,\n&gt; &gt; again?\n&gt; \n&gt; http://tools.ietf.org/html/draft-zyp-json-schema-02\n&gt;\n\nI still think the proper path is to change RFC 4627 to be extensible in\nthe same way RFC 3023 is extensible for +xml, and that json-schema\nneeds to refer to that new RFC, instead of defining schemas *and* media-\ntype syntax extensibility.  My opinion is, I&#39;ll believe it when I see\nit, and my advice remains, don&#39;t count on it being approved as written.\n\nAt the present time, it is not self-descriptive to use +json syntax, as\nevidence I point to the IANA registry, which contains no +json types in\nany tree.  Surely if this syntax were allowed, it would be in the vnd.\nor even the prs. tree by now, since everyone&#39;s been doing it for a\nwhile now?  I think the same criteria will be applied to json-schema,\nwhich is that RFC 4627 says nothing about extensibility.\n\nSince nothing ending in +json is in the registry, or even pending\nregistration -- as they would need to be based on an IETF draft whose\napproval can&#39;t be assumed -- such identifiers are the exact opposite of\nhow *Roy* defines self-descriptive (making it authoritative):\n\n&quot;Self-descriptive means that the type is registered and the registry\npoints to a specification and the specification explains how to process\nthe data according to [sender] intent.&quot;\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/6594\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/6615\n\nThis isn&#39;t about Roy agreeing with me, it&#39;s about me agreeing with\nRoy.  Using +json simply doesn&#39;t square with that definition, but it has\nnothing to do with me in any fashion, regardless of benign intent on the\npart of whomever suggests otherwise.\n\nEven if we assume json-schema is approved as written, how do I look up\nthe sender intent of application/vnd.foo+json?  Discussing alternatives\nor improvements to the IANA registry is non-sequitir if we can&#39;t agree\non the fundamental reason behind such changes, which is that such\nidentifiers are *not* self-descriptive *unless* they&#39;re registered.\n\nWhat is it about json-schema that automatically defines a processing\nmodel such that *everything* ending in +json is automatically self-\ndescriptive despite not being registered?  That sounds to me like\nsaying that *everything* ending in +xml is automatically self-\ndescriptive by virtue of having schema languages -- that just *isn&#39;t*\nthe definition of self-descriptive, which requires registration.\n\nSelf-descriptive identifiers clearly define the sender&#39;s intended\nprocessing model, that is their purpose.  They have nothing to do at all\nwith the semantics of the payload, i.e. its schema, only its processing\nmodel.  Whether or not the payload has a schema is unrelated to self-\ndescriptiveness -- that&#39;s what self-describing means.\n\n(Which is why, IMO, it&#39;s inappropriate for a schema language to define\nextensible identifier syntax -- whereas replacing RFC 4267 would allow\n*any* JSON schema language to be defined, and referred to by *any* spec\nbeing pointed to by a registered identifier ending in +json.  I&#39;d hate\nnot to be able to use +xml because of my choice of RELAX NG over XSD,\nfor instance.  Does *anybody* get this?)\n\nIf and when something ending in +json does get registered, it and only\nit will be self-descriptive, by definition, unless and until some other\nidentifier ending in +json gets approved, and so on and so forth.  I\ndon&#39;t currently see any such thing in the IANA registry, so I can&#39;t\nbelieve it meets Roy&#39;s definition of self-descriptive.\n\n-Eric\n\n"}}