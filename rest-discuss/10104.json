{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"Aristotle Pagaltzis","from":"Aristotle Pagaltzis &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"3nWGyG1DX_CYN5IiaWGS6Jkt-XHHMjgt1lV14pfEWk5lXclKrDrw7lArt6wKXTat8DAzBhjBgL86_khkuRScUKBX-eApfTHRU0LWoQw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: RESTful design for Articles & Tags?","postDate":"1198882513","msgId":10104,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcxMjI4MjI1NTEzLkdQNTY0QGtsYW5ncmF1bT4=","inReplyToHeader":"PDA3OGUwMWM4NDk5YyRmN2M4YjFiMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PDg3emx2dmw2Z3IuZnNmQGR1bGxpby5uZWRlcndhcmUubmw+IDwwNzhlMDFjODQ5OWMkZjdjOGIxYjAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPg=="},"prevInTopic":10103,"nextInTopic":10105,"prevInTime":10103,"nextInTime":10105,"topicId":9891,"numMessagesInTopic":99,"msgSnippet":"... http://plasmasturm.org/log/447/ ... All of these are opt-in. Although I think well-practiced namespaces (mustIgnore et al) are a huge win. Actually XSLT is","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88425 invoked from network); 28 Dec 2007 22:55:16 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m36.grp.scd.yahoo.com with QMQP; 28 Dec 2007 22:55:16 -0000\r\nX-Received: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta15.grp.scd.yahoo.com with SMTP; 28 Dec 2007 22:55:15 -0000\r\nX-Received: (qmail invoked by alias); 28 Dec 2007 22:55:14 -0000\r\nX-Received: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp028) with SMTP; 28 Dec 2007 23:55:14 +0100\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX1/D7nghWQrDYg/yp9TElqi0373petygXQphgRn6W+\n\tP3uVdhhNKXo0Ko\r\nDate: Fri, 28 Dec 2007 23:55:13 +0100\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20071228225513.GP564@klangraum&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;87zlvvl6gr.fsf@...&gt; &lt;078e01c8499c$f7c8b1b0$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;078e01c8499c$f7c8b1b0$0702a8c0@...&gt;\r\nUser-Agent: Mutt/1.5.16 (2007-06-09)\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Aristotle Pagaltzis &lt;pagaltzis@...&gt;\r\nSubject: Re: RESTful design for Articles & Tags?\r\nX-Yahoo-Group-Post: member; u=147780944; y=PQ1HWSPj2zhImZuH3MXHJoPG8e0oSdN-rdBI43aj8Ecn\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Mike Schinkel &lt;mikeschinkel@...&gt; [2007-12-28 23:00]:\n&gt; I think that&#39;s one reason TimBL ended up reversing direction on\n&gt; HTML &lt;http://dig.csail.mit.edu/breadcrumbs/node/166&gt;\n\nhttp://plasmasturm.org/log/447/\n\n&gt; It&#39;s biggest benefit is that it has been widely deployed but\n&gt; its complexity (namespaces, schemas, XSLT, etc.)\n\nAll of these are opt-in. Although I think well-practiced\nnamespaces (mustIgnore et al) are a huge win. Actually XSLT is\nnot even opt-in, it’s completely orthogonal (well, unless you\nserve transformations to clients as a sort of code-on-demand\napproach, I suppose – a rather hypothetical scenario).\n\n&gt; has made for spotty tool support and lack of universally\n&gt; practiced approaches.\n\nI’m with Stefan here – I seriously fail to see this.\n\n&gt; Considered from the perspective of the Robustness principle\n&gt; a.ka. Postel&#39;s Law [2], use of (especially validated) XML is\n&gt; less than ideal because\n\nSo don’t. You’re not the first to say that having documents\ndeclare their type and thus how to validate them is backwards,\nnor is anything you say news to anyone who has bought into\nSchematron.\n\n&gt; Okay maybe I&#39;m being a bit extreme in my ideal criteria for\n&gt; XML but I was trying to make a point, and the point is that\n&gt; XML seems (to me) to be best used for internal &quot;enterprisy&quot;\n&gt; applications, and even then I question its real benefits.\n\nXML is best used whenever your data is not completely rigidly\nstructured and clients are wildly heterogenous.\n\n(Of course, just because you’re using XML doesn’t automatically\nmean you’ll end up with a well thought-out vocabulary. Most\nad-hoc vocabs are mediocre or worse. That’s hardly XML’s fault.)\n\n&gt; Personally I find the verbosity and all the extranious syntax\n&gt; of XML to be harder to read than JSON, not easier.\n\nhttp://www.megginson.com/blogs/quoderat/2007/01/03/all-markup-ends-up-looking-like-xml/\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}