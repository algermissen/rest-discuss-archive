{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211647110,"authorName":"Alexander Johannesen","from":"Alexander Johannesen &lt;alexander.johannesen@...&gt;","profile":"shelterit","replyTo":"SENDER","senderId":"6RuZSa5GC8C53AEV0ApPCY91eWrEBQ8QY5WAoBw4kGSXgnmKyjOO4oZNyvts2kSOIbA_PfyDnwzIQ7ThbqGTPU4xaS6LSVbCrLl-8UmsS_FI4HK8GUFAeuGsFEQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme","postDate":"1325674189","msgId":18354,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRjg5YkNCQmlCQTdyUzhBcnQ0RStoMmYwZ0xCbzVPOGh2THpoaXhZUjVyM1RjRDExZ0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18353,"nextInTopic":18355,"prevInTime":18353,"nextInTime":18355,"topicId":18183,"numMessagesInTopic":245,"msgSnippet":"Hola, ... Hmm, I can see that I haven t been clear enough, but I m not sure it s that important. For me, POST doesn t carry any semantics but the generic ","rawEmail":"Return-Path: &lt;alexander.johannesen@...&gt;\r\nX-Sender: alexander.johannesen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 36007 invoked from network); 4 Jan 2012 10:49:51 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 4 Jan 2012 10:49:51 -0000\r\nX-Received: from unknown (HELO mail-ee0-f49.google.com) (74.125.83.49)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Jan 2012 10:49:50 -0000\r\nX-Received: by eekc13 with SMTP id c13so17009668eek.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 04 Jan 2012 02:49:49 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.213.34.71 with SMTP id k7mr56094ebd.25.1325674189593; Wed, 04\n Jan 2012 02:49:49 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Wed, 4 Jan 2012 02:49:49 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Wed, 4 Jan 2012 02:49:49 -0800 (PST)\r\nDate: Wed, 4 Jan 2012 21:49:49 +1100\r\nMessage-ID: &lt;CAF89bCBBiBA7rS8Art4E+h2f0gLBo5O8hvLzhixYR5r3TcD11g@...&gt;\r\nTo: Mike Kelly &lt;mikekelly321@...&gt;\r\nCc: Nina Jeliazkova &lt;jeliazkova.nina@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;, \n\tJan Algermissen &lt;jan.algermissen@...&gt;\r\nContent-Type: multipart/alternative; boundary=0015174c1500289b7f04b5b193c6\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alexander Johannesen &lt;alexander.johannesen@...&gt;\r\nSubject: Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme\r\nX-Yahoo-Group-Post: member; u=211647110; y=HH2HqJmvvLXVE6dSdr_VQ69hPWnaEZqzaBWwH1si9rxyJzwe\r\nX-Yahoo-Profile: shelterit\r\n\r\n\r\n--0015174c1500289b7f04b5b193c6\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nHola,\n\n&quot;Mike Kelly&quot; &lt;mikekelly321@...&gt; wrote:\n&gt; I&#39;ve just been trying to make the point that you\n&gt; just agreed with - which is that POST requests to different resources\n&gt; do carry different semantics (determined by a hypertext application).\n&gt; Not from a network perspective (i.e. visibility), but from the client\n&gt; and server persepctive.\n\nHmm, I can see that I haven&#39;t been clear enough, but I&#39;m not sure it&#39;s that\nimportant. For me, POST doesn&#39;t carry any semantics but the generic\n&quot;process this&quot; on the server side, not as an API nor as a stand-alone\nresource. All its semantics are pre-determined by the client, the package\ngets wrapped up snug, kissed for good luck, and sent to a resource hoping\nit understands what the server is going to do with it.\n\nThe reason I bang on a bit about this is that there is a slight reversal of\nresponsibility as to the outcome of the request. In a traditional RPC or\nSOAP those responsibilities lies with the client knowing upfront the ins\nand outs of the API. HATEOAS changes the responsibility around, and forces\n(in lack of a better word) the clients to not couple, to not make those\nresource static. In a roundabout way it makes the client think in more\ngeneric terms about the request, and that&#39;s a (IMHO) good thing.\n\n&gt; Hypertext is definitely a concern of REST, which is why &#39;hypertext as\n&gt; the engine of application state&#39; appears in its definition. I&#39;m pretty\n&gt; sure Roy has stated a couple of times that hypertext should&#39;ve been\n&gt; fleshed out in his dissertation but never made it because of time\n&gt; constraints i.e. not because it &#39;hypertext is a layer above REST&#39;.\n\nYes, any package that defines a URI to other things are hypertext, of which\nHTML is the most used one. There are some good formats out there which does\nthis (or reuse the URI definitions from XML Schema), including RDF and XTF\n(Topic Maps).\n\n&gt; &gt; However. RDF&#39;s heart is in the right place; ontology. And it is through\na\n&gt; &gt; separate ontology you get your semantics.\n&gt;\n&gt; Don&#39;t really mind what we call it; as long as it is capable of\n&gt; presenting a succinct, coherent, human-readable description of the\n&gt; various ways a hypertext application can be traversed.\n\nWhy the human-readable part? View sourceness?\n\n&gt; not very fond &#39;ontology&#39; though because the word stinks a bit of\n&gt; esotericism, and I prefer to think and talk about hypertext\n&gt; applications in terms of happening rather than being anyway.\n\nIt has a defined use in information technology, so get used to it. :)\n\n&gt; &gt; I tend to say; create a crap HTTP client, and you&#39;ll get a crap HTTP\nsystem.\n&gt; &gt; There is no need to create a crap HTTP client.\n&gt;\n&gt; The problem I have with this advice is that in a distributed context\n&gt; (e.g. a big SaaS API) the clients will be not be written by me,\n&gt; they&#39;ll be written by other people with their own (crappy) opinions\n&gt; and (crappy) technology stacks.\n\nFor sure. On the other side, you can create beautiful stuff with SOAP, and\nhave a really good API as RPC. In other words, I&#39;m not sure that &quot;other\npeople&quot; is a measure of correctness. Most people don&#39;t get HTML right.\nCrikey, most people don&#39;t get English right! :)\n\n&gt; The real art of designing a REST application is in coaxing/herding the\n&gt; clients you don&#39;t control into adopting behaviours which will afford\n&gt; you the flexibility to evolve. In many cases this means an application\n&gt; design that compromises on &#39;perfection&#39; in order to lower the barrier\n&gt; to all the stupid clients e.g. this is exactly the reason there are no\n&gt; &#39;forms&#39; in HAL.\n\nWhat&#39;s wrong with forms? I have a system which uses XHTML responses with\nembedded forms and RDFa, and it&#39;s a self-documenting, self-describing,\nbrowsable, searchable system to be used by humans (browsers) and computers\n(API) both. (I have to admit I haven&#39;t looked into HAL. What was that link\nagain? :) )\n\n&gt; Are these read/write applications or just read?\n\nRead and write.\n\n&gt; Do you have many external clients to your application?\n\nYes, hundreds.\n\n&gt; Did any of them\n&gt; have no experience with RDF before interacting with your application?\n\nDon&#39;t know, but I&#39;m pretty sure the answer is &#39;yes&#39;.\n\n&gt; If so how did the &#39;on-boarding&#39; process go for them wrt RDF?\n\nI don&#39;t rely on RDF, I only use it to expose the ontology, but that is\navailable in many different formats, including Topic Maps, generic XML and\nJSON, and text. Don&#39;t think of RDF in the means of graph theory, though.\nIt&#39;s more like a vocabulary and relationships mapped up as an API.\n\nRegards,\n\nAlex\n\r\n--0015174c1500289b7f04b5b193c6\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;p&gt;Hola,&lt;/p&gt;\n&lt;p&gt;&quot;Mike Kelly&quot; &lt;&lt;a href=3D&quot;mailto:mikekelly321@g=\r\nmail.com&quot;&gt;mikekelly321@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt; I&#39;ve just been=\r\n trying to make the point that you&lt;br&gt;\n&gt; just agreed with - which is tha=\r\nt POST requests to different resources&lt;br&gt;\n&gt; do carry different semantic=\r\ns (determined by a hypertext application).&lt;br&gt;\n&gt; Not from a network pers=\r\npective (i.e. visibility), but from the client&lt;br&gt;\n&gt; and server persepct=\r\nive.&lt;/p&gt;\n&lt;p&gt;Hmm, I can see that I haven&#39;t been clear enough, but I&#39;=\r\nm not sure it&#39;s that important. For me, POST doesn&#39;t carry any sema=\r\nntics but the generic &quot;process this&quot; on the server side, not as a=\r\nn API nor as a stand-alone resource. All its semantics are pre-determined b=\r\ny the client, the package gets wrapped up snug, kissed for good luck, and s=\r\nent to a resource hoping it understands what the server is going to do with=\r\n it.&lt;/p&gt;\n\n&lt;p&gt;The reason I bang on a bit about this is that there is a sligh=\r\nt reversal of responsibility as to the outcome of the request. In a traditi=\r\nonal RPC or SOAP those responsibilities lies with the client knowing upfron=\r\nt the ins and outs of the API. HATEOAS changes the responsibility around, a=\r\nnd forces (in lack of a better word) the clients to not couple, to not make=\r\n those resource static. In a roundabout way it makes the client think in mo=\r\nre generic terms about the request, and that&#39;s a (IMHO) good thing.&lt;/p&gt;=\r\n\n\n&lt;p&gt;&gt; Hypertext is definitely a concern of REST, which is why &#39;hype=\r\nrtext as&lt;br&gt;\n&gt; the engine of application state&#39; appears in its defin=\r\nition. I&#39;m pretty&lt;br&gt;\n&gt; sure Roy has stated a couple of times that h=\r\nypertext should&#39;ve been&lt;br&gt;\n&gt; fleshed out in his dissertation but ne=\r\nver made it because of time&lt;br&gt;\n&gt; constraints i.e. not because it &#39;h=\r\nypertext is a layer above REST&#39;.&lt;/p&gt;\n&lt;p&gt;Yes, any package that defines a=\r\n URI to other things are hypertext, of which HTML is the most used one. The=\r\nre are some good formats out there which does this (or reuse the URI defini=\r\ntions from XML Schema), including RDF and XTF (Topic Maps).&lt;/p&gt;\n\n&lt;p&gt;&gt; &g=\r\nt; However. RDF&#39;s heart is in the right place; ontology. And it is thro=\r\nugh a&lt;br&gt;\n&gt; &gt; separate ontology you get your semantics.&lt;br&gt;\n&gt;&lt;br&gt;\n=\r\n&gt; Don&#39;t really mind what we call it; as long as it is capable of&lt;br&gt;=\r\n\n&gt; presenting a succinct, coherent, human-readable description of the&lt;br=\r\n&gt;\n&gt; various ways a hypertext application can be traversed.&lt;/p&gt;\n&lt;p&gt;Why th=\r\ne human-readable part? View sourceness?&lt;/p&gt;\n&lt;p&gt;&gt; not very fond &#39;onto=\r\nlogy&#39; though because the word stinks a bit of&lt;br&gt;\n&gt; esotericism, and=\r\n I prefer to think and talk about hypertext&lt;br&gt;\n&gt; applications in terms =\r\nof happening rather than being anyway.&lt;/p&gt;\n&lt;p&gt;It has a defined use in infor=\r\nmation technology, so get used to it. :)&lt;/p&gt;\n&lt;p&gt;&gt; &gt; I tend to say; cr=\r\neate a crap HTTP client, and you&#39;ll get a crap HTTP system.&lt;br&gt;\n&gt; &g=\r\nt; There is no need to create a crap HTTP client.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The pro=\r\nblem I have with this advice is that in a distributed context&lt;br&gt;\n&gt; (e.g=\r\n. a big SaaS API) the clients will be not be written by me,&lt;br&gt;\n&gt; they&#=\r\n39;ll be written by other people with their own (crappy) opinions&lt;br&gt;\n&gt; =\r\nand (crappy) technology stacks.&lt;/p&gt;\n&lt;p&gt;For sure. On the other side, you can=\r\n create beautiful stuff with SOAP, and have a really good API as RPC. In ot=\r\nher words, I&#39;m not sure that &quot;other people&quot; is a measure of c=\r\norrectness. Most people don&#39;t get HTML right. Crikey, most people don&#=\r\n39;t get English right! :)&lt;/p&gt;\n\n&lt;p&gt;&gt; The real art of designing a REST ap=\r\nplication is in coaxing/herding the&lt;br&gt;\n&gt; clients you don&#39;t control =\r\ninto adopting behaviours which will afford&lt;br&gt;\n&gt; you the flexibility to =\r\nevolve. In many cases this means an application&lt;br&gt;\n&gt; design that compro=\r\nmises on &#39;perfection&#39; in order to lower the barrier&lt;br&gt;\n&gt; to all=\r\n the stupid clients e.g. this is exactly the reason there are no&lt;br&gt;\n&gt; &=\r\n#39;forms&#39; in HAL.&lt;/p&gt;\n&lt;p&gt;What&#39;s wrong with forms? I have a system =\r\nwhich uses XHTML responses with embedded forms and RDFa, and it&#39;s a sel=\r\nf-documenting, self-describing, browsable, searchable system to be used by =\r\nhumans (browsers) and computers (API) both. (I have to admit I haven&#39;t =\r\nlooked into HAL. What was that link again? :) )&lt;/p&gt;\n\n&lt;p&gt;&gt; Are these read=\r\n/write applications or just read?&lt;/p&gt;\n&lt;p&gt;Read and write.&lt;/p&gt;\n&lt;p&gt;&gt; Do you=\r\n have many external clients to your application? &lt;/p&gt;\n&lt;p&gt;Yes, hundreds.&lt;/p&gt;=\r\n\n&lt;p&gt;&gt; Did any of them&lt;br&gt;\n&gt; have no experience with RDF before intera=\r\ncting with your application?&lt;/p&gt;\n&lt;p&gt;Don&#39;t know, but I&#39;m pretty sure=\r\n the answer is &#39;yes&#39;.&lt;/p&gt;\n&lt;p&gt;&gt; If so how did the &#39;on-boardin=\r\ng&#39; process go for them wrt RDF?&lt;/p&gt;\n&lt;p&gt;I don&#39;t rely on RDF, I only =\r\nuse it to expose the ontology, but that is available in many different form=\r\nats, including Topic Maps, generic XML and JSON, and text. Don&#39;t think =\r\nof RDF in the means of graph theory, though. It&#39;s more like a vocabular=\r\ny and relationships mapped up as an API.&lt;br&gt;\n&lt;/p&gt;\n&lt;p&gt;Regards,&lt;/p&gt;\n&lt;p&gt;Alex&lt;/=\r\np&gt;\n\r\n--0015174c1500289b7f04b5b193c6--\r\n\n"}}