{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":244521818,"authorName":"Teo Hui Ming","from":"&quot;Teo Hui Ming&quot; &lt;teohuiming.work@...&gt;","profile":"teohuiming.work","replyTo":"SENDER","senderId":"NA_xcTbQ2N2eHAf-gIup5qS0ut2RnRfew2FRHQRbIbuq_60tmK3Rc36d2V1LhLvaZ3J5MTIx0pjx9AW-OQnpq8IyC5_brX7592c-iKbq5Mbw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Conditional GETs in the State Graph","postDate":"1202474468","msgId":10359,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDczZWM1OTlkMDgwMjA4MDQ0MW43MDc2ODNhY2o0Nzg4MjI5YzFkOTQ1M2ExQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGVjZjM1YTFiMDgwMjA3MDkyNW42NWFmNGE1N240MDg3NWJiNjhmY2ZjYmRhQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGVjZjM1YTFiMDgwMjA3MDkyNW42NWFmNGE1N240MDg3NWJiNjhmY2ZjYmRhQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10355,"nextInTopic":10362,"prevInTime":10358,"nextInTime":10360,"topicId":10353,"numMessagesInTopic":7,"msgSnippet":"... If you notice, in OO design, we seldom talk about the actual runtime object graph. Instead, we use class diagram to represent an abstraction of the actual","rawEmail":"Return-Path: &lt;teohuiming.work@...&gt;\r\nX-Sender: teohuiming.work@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20715 invoked from network); 8 Feb 2008 12:41:08 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m54.grp.scd.yahoo.com with QMQP; 8 Feb 2008 12:41:08 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.176)\n  by mta16.grp.scd.yahoo.com with SMTP; 8 Feb 2008 12:41:08 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id j5so404300wah.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 08 Feb 2008 04:41:08 -0800 (PST)\r\nX-Received: by 10.114.52.1 with SMTP id z1mr2911117waz.123.1202474468542;\n        Fri, 08 Feb 2008 04:41:08 -0800 (PST)\r\nX-Received: by 10.114.25.12 with HTTP; Fri, 8 Feb 2008 04:41:08 -0800 (PST)\r\nMessage-ID: &lt;73ec599d0802080441n707683acj4788229c1d9453a1@...&gt;\r\nDate: Fri, 8 Feb 2008 20:41:08 +0800\r\nTo: dev &lt;dev.akhawe@...&gt;\r\nCc: &quot;REST discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;ecf35a1b0802070925n65af4a57n40875bb68fcfcbda@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;ecf35a1b0802070925n65af4a57n40875bb68fcfcbda@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Teo Hui Ming&quot; &lt;teohuiming.work@...&gt;\r\nSubject: Re: [rest-discuss] Conditional GETs in the State Graph\r\nX-Yahoo-Group-Post: member; u=244521818; y=DZdlcezTEiG8wN8LBO0NzgXfvlieJtXlc2QMCIP0yQnKFtW8RgLDdqYO\r\nX-Yahoo-Profile: teohuiming.work\r\n\r\nOn Feb 8, 2008 1:25 AM, dev &lt;dev.akhawe@...&gt; wrote:\n&gt;  What I am wondering about is - how does something lke\n&gt;  url.com/search?s=temp1 and url.com/search?s=temp2 etc. look like in\n&gt;  this graph? Is it a single node or infinites nodes? If it is a single\n&gt;  node, then shouldn&#39;t GET always give the same representation?\n\nIf you notice, in OO design, we seldom talk about the actual runtime\nobject graph. Instead, we use class diagram to represent an\nabstraction of the actual object graph. Perhaps the same applies in\nWeb resource graph modeling.\n\nA typical Web search application probably has a SearchDoc, represents\nquery form, which links to zero or more SearchResult.\n\n {Abstract Class} --hyperlink--&gt; [cardinality]{Abstract Class}\n\n {SearchDoc} -----&gt; [0..*]{SearchResult}\n\n\nIn Google search app, for example, we may further define that,\n&quot;http://www.google.com/&quot; implements SearchDoc, and\n&quot;http://www.google.com/search?q={searchTerms}&quot; implements\nSearchResult.\n\n (Class) ---hyperlink---&gt; [cardinality](Class)\n\n (&quot;http://g/&quot;)---&gt;[0..*](&quot;http://g/search?q={searchTerms}&quot;)\n\n\nFinally, in the runtime resource graph, we can say that, resource with\nURI &quot;http://g/search?q=foo&quot; and resource with URI\n&quot;http://g/search?q=bar&quot; are two distinct resources (or objects). They\nare similar, simply because they are instantiated from the same class,\ni.e. &quot;http://g/search?q={searchTerms}&quot;.\n\n-- \nTeo Hui Ming\n\n"}}