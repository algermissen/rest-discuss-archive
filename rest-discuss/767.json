{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":98897749,"authorName":"Inggs, Andrew","from":"&quot;Inggs, Andrew&quot; &lt;andrew.inggs@...&gt;","profile":"aminggs","replyTo":"SENDER","senderId":"W-sTqm1Oh4mif6GW-u9lN4ZFn9e7M4scmE59zu71UBO7763eKG0-CaCxTpfywPLUo--CpejnVy0bLZq3DMySHu1EXOlMB4RU9eCXEmEu","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] REST applied to provisioning","postDate":"1014333867","msgId":767,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEVGRTAwMzNGNDE2QkQ1MTFCN0Q4MDA5MDI3RDBEMzkzQTAwQThCQGd3aGRlbW50czAyLnNlcnZlci5kZW1vbi5uZXQ+"},"prevInTopic":763,"nextInTopic":769,"prevInTime":766,"nextInTime":768,"topicId":762,"numMessagesInTopic":5,"msgSnippet":"... [snip] ... Is that the only consideration?  I just felt that the /s help to show the hierarchy -- but perhaps that s a bad thing if that hierarchy were","rawEmail":"Return-Path: &lt;andrew.inggs@...&gt;\r\nX-Sender: andrew.inggs@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 21 Feb 2002 23:26:52 -0000\r\nReceived: (qmail 87277 invoked from network); 21 Feb 2002 23:26:50 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m6.grp.snv.yahoo.com with QMQP; 21 Feb 2002 23:26:50 -0000\r\nReceived: from unknown (HELO internal.mail.demon.net) (193.195.224.3)\n  by mta1.grp.snv.yahoo.com with SMTP; 21 Feb 2002 23:26:49 -0000\r\nReceived: from gwhdemnts03.server.demon.net (gwhdemnts03.server.demon.net [193.195.224.75])\n\tby internal.mail.demon.net with ESMTP id g1LNQmp28712;\n\tThu, 21 Feb 2002 23:26:48 GMT\r\nReceived: by gwhdemnts03.server.demon.net with Internet Mail Service (5.5.2650.21)\n\tid &lt;FFXS997L&gt;; Thu, 21 Feb 2002 23:26:48 -0000\r\nMessage-ID: &lt;EFE0033F416BD511B7D8009027D0D393A00A8B@...&gt;\r\nTo: &quot;&#39;rest-discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nCc: &quot;&#39;Paul Prescod&#39;&quot; &lt;paul@...&gt;\r\nSubject: RE: [rest-discuss] REST applied to provisioning\r\nDate: Thu, 21 Feb 2002 23:24:27 -0000\r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2650.21)\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nFrom: &quot;Inggs, Andrew&quot; &lt;andrew.inggs@...&gt;\r\nX-Yahoo-Group-Post: member; u=98897749\r\nX-Yahoo-Profile: aminggs\r\n\r\n&gt; From: Paul Prescod \n&gt; \n&gt; &quot;Inggs, Andrew&quot; wrote:\n&gt; &gt; \n&gt; &gt;...\n[snip]\n&gt; &gt;     http://server/visp/email-alias/xyz/user1/customer.com/me/myself\n&gt; \n&gt; If client applications are supposed to care about the\n&gt; structure of the URI then you should use query\n&gt; parameters. The /s/s/s/s/ part of the URI is supposed to\n&gt; be opaque to client software. Only the server knows or\n&gt; cares what the slashes mean.\n&gt; \nIs that the only consideration?  I just felt that the /s\nhelp to show the hierarchy -- but perhaps that&#39;s a bad\nthing if that hierarchy were ever to change.\n\nSo my URIs become\n\n    http://server/visp/serviceid?...\n\nwith (all) possible query parameters:\n\n    v=&lt;vispid&gt;&u=&lt;userid&gt;&d=&lt;domain&gt;&lp=&lt;local-part&gt;&a=&lt;alias&gt;\n\nmaybe I should then make the query parameters more natural,\nfor example, an email address could be identified by\n\n    v=&lt;vispid&gt;&u=&lt;userid&gt;&e=&lt;local-part&gt;@&lt;domain&gt;\n\n&gt; The best way to establish hierarchy is through XML\n&gt; documents where the parent has hyperlinks to the\n&gt; children and they have hyperlinks to their children\n&gt; and so forth. Consider, for example, how easy it becomes\n&gt; to write a spider that slurps up the structure and moves\n&gt; it. (if you consider that a good thing...otherwise forget\n&gt; I said it. ;)\n&gt;\nSounds like a good idea, but feels like overkill for my\nlittle application.  Is there a standard for hyperlinking\nin XML, or would that potentially be something a formal\nREST architecture could define?\n\nIf I used query parameters and hyperlinks, would that make\nsense, or should I go back to slashes then?  For example:\n\n&lt;visp&gt;\n  &lt;user username=&quot;user1&quot;&gt;\n    &lt;website href=&quot;/visp/website?v=xyz&u=user1&d=www.customer.com&quot;/&gt;\n    &lt;email-domain href=&quot;/visp/email-domain?v=xyz&u=user1&d=customer.com&quot;/&gt;\n    ...\n  &lt;/user&gt;\n&lt;/visp&gt;\n\nor\n\n&lt;visp&gt;\n  &lt;user username=&quot;user1&quot;&gt;\n    &lt;website href=&quot;/visp/website/xyz/user1/www.customer.com&quot;/&gt;\n    &lt;email-domain href=&quot;/visp/email-domain/xyz/user1/customer.com&quot;/&gt;\n    ...\n  &lt;/user&gt;\n&lt;/visp&gt;\n\n&gt; &gt; Now when the XYZ client wants to provision some services for a\n&gt; &gt; new user who&#39;s signed up, they need to create the services.\n&gt; &gt; At the moment, for the above example, this would mean doing\n&gt; &gt; the following PUTs with the given data:\n&gt; &gt; \n&gt; &gt; PUT /visp/website/xyz/user1/www.customer.com\n&gt; &gt; \n&gt; &gt; &lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&gt; &gt; &lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&gt; &gt; &lt;viml&gt;\n&gt; &gt;   &lt;website domain=&quot;www.customer.com&quot;&gt;\n&gt; &gt;     &lt;path&gt;/&lt;/path&gt;\n&gt; &gt;     &lt;password&gt;secret1&lt;/password&gt;\n&gt; &gt;     &lt;storage-space&gt;15&lt;/storage-space&gt;\n&gt; &gt;     &lt;bandwidth&gt;50&lt;/bandwidth&gt;\n&gt; &gt;   &lt;/website&gt;\n&gt; &gt; &lt;/viml&gt;\n&gt; \n&gt; I would use a POST for two reasons. First, uses of PUTs to brand new\n&gt; URIs that the client creates are not opaque. Second, you don&#39;t have to\n&gt; duplicate the data, as you noticed.\n&gt; \nSo I&#39;d change the resource of what&#39;s specified in the URI to one\nlevel up.  I would add a user by &quot;appending&quot; to the VISP&#39;s list\nof users.  To create user1, I might do\n\nPOST /visp/users?v=xyz\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;user username=&quot;user1/&gt;\n&lt;/viml&gt;\n\n&gt; PUTs are okay for creating new things when there is a good reason for\n&gt; the client to &quot;own&quot; the namespace as in a content management \n&gt; situation. \n&gt; \nWell, in a sense my clients own the namespace, in that they\nchoose the usernames, domains, etc.  Or am I getting my\nterminology wrong now?\n\n&gt; &gt;...\n&gt; &gt; Problems I have with my own design:\n&gt; &gt; \n&gt; &gt;  - If I were a client I would expect to be able to send a\n&gt; &gt;    whole profile and have everything provisioned at once.\n&gt; &gt;    This is not insurmountable, just more effort (and some\n&gt; &gt;    thinking about transactional guarantees, if any).\n&gt; \n&gt; POST can handle that.\n&gt; \nI&#39;m not sure how changing to a POST solves this one.  Perhaps\nI should break the hierarchy out of the DTD and define everything\nat the top level.\n\n&gt; &gt;  - There is redundant data in each request that is already in\n&gt; &gt;    the URI.  This means extra processing on both sides, and an\n&gt; &gt;    extra check on my side -- and what do I do if there&#39;s a\n&gt; &gt;    mismatch?\n&gt; \n&gt; POST can handle that.\n&gt; \nYes.\n\n&gt; &gt;  - For an update (POST) it&#39;s not always clear what can and\n&gt; &gt;    can&#39;t change.  For example, when updating a website you can\n&gt; &gt;    change the password but not the path.  In the case of an alias\n&gt; &gt;    you can&#39;t even do an update.  I see problems ahead.\n&gt; \n&gt; Actually, you should use *PUT* for updates and POST for creating new\n&gt; stuff. It&#39;s helpful to read the definitions of the major methods here:\n&gt; \n&gt; http://www.w3.org/Protocols/rfc2068/rfc2068\n&gt; \nYes, provided you look one level up.  So to change the storage\nspace for a website one would do a PUT on the storage space\nresource, rather than a POST to the website resource, which\nwould not have made it clear what one was trying to update.\n\nI think this is what I was missing, I was thinking at\nthe wrong level of identification because I had specific\nideas about how POST and PUT should be used.  I saw\nadding a service as requiring a 201 (Created) response,\nwhich I would get from a PUT.\n\n&gt; Anyhow, are your update problems really any different than\n&gt; validation problems? Trying to update a password is logically \n&gt; impermissable so you return an error, just like if you tried\n&gt; to put an integer where a phone number should go.\n&gt; \nAbsolutely, and as soon as you identify the password in\nthe URI, you can easily do that validation.  Actually,\nchanging a password is allowed, but never mind that :-).\n\n&gt; Hope those ideas help.\n&gt; \nYes, thanks!\n\nRegards,\n  Andrew\n\n"}}