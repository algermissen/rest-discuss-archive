{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":313430257,"authorName":"Philipp Meier","from":"Philipp Meier &lt;meier@...&gt;","profile":"llucifer_2003","replyTo":"SENDER","senderId":"0APqLRE1TiX5IHuKdLMrwTYgoyl3t0FAuoH5n_1QJ9biLbwvI2pSehPs3SNTOUC9udjP0tDmRFiQABXF1uRF9CwbKODprQ","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] How can a framework/library encourage REST-ful development?","postDate":"1268242735","msgId":15030,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCOTdEOTJGLjEwOTA5MDdAZm5vZ29sLmRlPg==","inReplyToHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14595,"nextInTopic":0,"prevInTime":15029,"nextInTime":15031,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"Am 15.01.10 21:27, schrieb mike amundsen: Hi, ... I m currently toying around with implementing a restful service library in clojure (See compojure-rest at","rawEmail":"Return-Path: &lt;meier@...&gt;\r\nX-Sender: meier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50107 invoked from network); 10 Mar 2010 17:49:28 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m10.grp.re1.yahoo.com with QMQP; 10 Mar 2010 17:49:28 -0000\r\nX-Received: from unknown (HELO mumbay.321-verkaufsagentur.de) (88.198.39.59)\n  by mta3.grp.re1.yahoo.com with SMTP; 10 Mar 2010 17:49:28 -0000\r\nX-Received: by mumbay.321-verkaufsagentur.de (Postfix, from userid 5000)\n\tid 4824C2000EB; Wed, 10 Mar 2010 18:39:01 +0100 (CET)\r\nX-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on\n\tmumbay.321-verkaufsagentur.de\r\nX-Spam-Level: \r\nX-Spam-Status: No, score=-3.4 required=5.0 tests=ALL_TRUSTED,AWL,BAYES_00\n\tautolearn=ham version=3.2.5\r\nX-Received: from bringsel.lan (p5B175046.dip.t-dialin.net [91.23.80.70])\n\tby mumbay.321-verkaufsagentur.de (Postfix) with ESMTPSA id 07B6F2000E9\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 10 Mar 2010 18:38:55 +0100 (CET)\r\nMessage-ID: &lt;4B97D92F.1090907@...&gt;\r\nDate: Wed, 10 Mar 2010 18:38:55 +0100\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; de; rv:1.9.1.8) Gecko/20100227 Thunderbird/3.0.3\r\nMIME-Version: 1.0\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\r\nIn-Reply-To: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Philipp Meier &lt;meier@...&gt;\r\nSubject: Re: [rest-discuss] How can a framework/library encourage REST-ful\n development?\r\nX-Yahoo-Group-Post: member; u=313430257; y=NaVy4rAXn1MVzDwG22IzJad2ojZVjHV51cQOe_SUpg6NTQtPngVZlQ\r\nX-Yahoo-Profile: llucifer_2003\r\n\r\nAm 15.01.10 21:27, schrieb mike amundsen:\n\nHi,\n\n&gt; Recently, I&#39;ve been thinking about how a coding framework or library\n&gt; can influence the way developers implement applications. What would a\n&gt; coding environment look like if it was meant to encourage results that\n&gt; followed a particular _architectural_ style (not programming style).\n&gt; \n&gt; IOW, is there a way to craft a framework that constrains developers in\n&gt; ways that results in a REST-ful implementation of the application?\n\nI&#39;m currently toying around with implementing a restful service library\nin clojure (See compojure-rest at github I you like.) What I have for\nnow is based on erlang&#39;s webmachine and I think it does not capture the\n&quot;essence&quot; of REST.\n&gt; \n&gt; I did some digging, but have yet to find any writing on this topic.\n&gt; \n&gt; Here are some &quot;off-the-top-of-my-head&quot; items:\n&gt; \n&gt; For example, a framework might exhibit these REST-like traits:\n&gt; - there is a clear separation of concerns between resource\n&gt; identifiers, resources, and representations\n&gt; - developers must define a resource as the public application interface\n&gt; - the Uniform Interface is enforced (e.g. those methods are the only\n&gt; public members exposed for a resource)\n&gt; - developers must always associate one or more representation formats\n&gt; with a resource and/or resource method before the implementation is\n&gt; valid\n&gt; - there is no way to define and use server-side session state objects\n&gt; \n&gt; Some HTTP-specific traits might be:\n&gt; - support for content negotiation is &quot;baked-in&quot;\n&gt; - support for conditional requests is &quot;baked-in&quot; and automatic\n&gt; - RPC-like implementation patterns (e.g. gateway URIs) are somehow\n&gt; difficult to implement or are flagged as invalid\n\nThese items are a good start. I&#39;d like to add the following:\n\n- support for resource linking and qualification of links\n- support for different abstract resource types\n  - collections (including paging)\n  - hierachical resources (refer to parent/childs/siblinks)\n- mapping of URL to resource and vice versa. (The former is supported by\nall web frameworks I know of, the latter by hardly any).\n\n-billy.\n-- \n404 signature not found.\n\n"}}