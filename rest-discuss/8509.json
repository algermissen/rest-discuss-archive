{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"ZNrHo-zLgvl0jyZwdQfYtJMENRuFndCXj5DHJ7rFjB76EcU_sz6qsFiF6vRqtaCbysqa-wJhaqz6Ad71x1bKqXKu7so","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Bass-ackwards?","postDate":"1179411335","msgId":8509,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NEM2Mzg3LjYwNTA1MDRAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDQ2NEM1NjJELjMwNzA2MDhAbWV0YWxhYi51bmMuZWR1Pg==","referencesHeader":"PFc0MDE0NTI5Nzc0MzA3MjUxMTc4OTQwNzcxQG1haWwubWFpbHNuYXJlLm5ldD4gPGU5ZGZmZDY0MDcwNTExMjI1OGszNTM1ODU4NnkzOGI2OWNiZjQ3NDVmN2IxQG1haWwuZ21haWwuY29tPiA8QzcyQ0Q3OEUtRjI3RC00Rjk2LUFCQTctOURCMkE4QUI1RDU1QGlubm9xLmNvbT4gPGU5ZGZmZDY0MDcwNTEzMjAwNXI0OTAxZGVkYXhhOTY2MGEyZDYxODBkNTkxQG1haWwuZ21haWwuY29tPiA8MjAwNzA1MTQwNTE0MTIuR0s1MDk1QGtsYW5ncmF1bT4gPGU5ZGZmZDY0MDcwNTE0MDQ1NG02NzFiZGEwNWc4ZTZkMTk5OGJhMzgyOWEzQG1haWwuZ21haWwuY29tPiA8MjAwNzA1MTQxMzE1MTQuR1A1MDk1QGtsYW5ncmF1bT4gPDQ2NEM1NjJELjMwNzA2MDhAbWV0YWxhYi51bmMuZWR1Pg=="},"prevInTopic":8508,"nextInTopic":0,"prevInTime":8508,"nextInTime":8510,"topicId":8412,"numMessagesInTopic":22,"msgSnippet":"... To my mind if a server understands a representation - rather than treating the entities as opaque and requiring a relatively agnostic storage in a","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 71276 invoked from network); 17 May 2007 14:17:42 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m46.grp.scd.yahoo.com with QMQP; 17 May 2007 14:17:42 -0000\r\nReceived: from unknown (HELO mail.arena1.com) (63.116.216.131)\n  by mta8.grp.scd.yahoo.com with SMTP; 17 May 2007 14:17:41 -0000\r\nReceived: from UnknownHost [83.70.80.115] by mail.arena1.com with SMTP;\n   Thu, 17 May 2007 10:15:38 -0400\r\nMessage-ID: &lt;464C6387.6050504@...&gt;\r\nDate: Thu, 17 May 2007 15:15:35 +0100\r\nUser-Agent: Thunderbird 2.0.0.0 (Windows/20070326)\r\nMIME-Version: 1.0\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;W4014529774307251178940771@...&gt; &lt;e9dffd640705112258k35358586y38b69cbf4745f7b1@...&gt; &lt;C72CD78E-F27D-4F96-ABA7-9DB2A8AB5D55@...&gt; &lt;e9dffd640705132005r4901dedaxa9660a2d6180d591@...&gt; &lt;20070514051412.GK5095@klangraum&gt; &lt;e9dffd640705140454m671bda05g8e6d1998ba3829a3@...&gt; &lt;20070514131514.GP5095@klangraum&gt; &lt;464C562D.3070608@...&gt;\r\nIn-Reply-To: &lt;464C562D.3070608@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-Declude-Sender: jon@... [83.70.80.115]\r\nX-Declude-Spoolname: -157463158167.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.14 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 10:15:44 on 17 May 2007\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] Re: Bass-ackwards?\r\nX-Yahoo-Group-Post: member; u=164939419; y=fhI1t0g0FTgso45zSR2oEvdKB2UaCwWkCMHG839_n4cnKgsg\r\nX-Yahoo-Profile: hack_poet\r\n\r\nElliotte Harold wrote:\n&gt; A. Pagaltzis wrote:\n&gt; \n&gt;&gt; Obviously if the intermediary saw anything other than a 2xx, it\n&gt;&gt; couldn’t cache the request body. But even if it did see a 2xx\n&gt;&gt; response, the semantics of PUT (namely, that the origin server\n&gt;&gt; may do anything it wants with the request body) would seem to\n&gt;&gt; absolutely preclude caching by intermediaries. \n&gt; \n&gt; That;s an arguable point. Some people think it&#39;s OK for the origin \n&gt; server to do anything it wants with a PUT body and still return a 200 \n&gt; OK. Some people think that&#39;s not acceptable. The semantics of PUT are \n&gt; not in consensus within the community.\n\nTo my mind if a server understands a representation - rather than \ntreating the entities as opaque and requiring a relatively agnostic \nstorage in a file-system - then it may act as interpretted.\n\nThis can include updating other representations of the same resource so \nthat all representations are synch&#39;ed. This seems both a natural result \nof the fact that a single resource can have multiple representations \n(unless those multiple representations directly contradicting each other \nis seen as perfectly acceptable) and the only practical way of dealing \nwith cases where the state of a resource is not internally modelled by \n&quot;flat&quot; storage of entities (I do not see it as practical for example to \nhave to store the XML that was responsible for a change in a resource \nthat can be altered by PUTting some XML to ensure that the same \ncomments, namespace prefixes, encoding, and other \nimplementation-dependant artefacts will be returned on GET).\n\nIt could also to my mind - and here I&#39;m no doubt going to be more \ncontroversial - mean an ammendment rather than a replace ONLY IF the \nentity received has something in it&#39;s syntax which means &quot;Value for X \nunknown/unstated&quot; in which case the server could take the value for X it \nalready has and maintain it after the PUT.\n\n&gt; Given that some servers may change the body of the PUT because some \n&gt; developers believe that&#39;s OK, it is probably not safe for a cache to \n&gt; store a PUT body, whether that would be legal according to the spec or not.\n&gt; \n&gt; Perhaps cache-control headers in PUT responses could be used to clarify \n&gt; this? E.g. id the server is going to change the body it should send \n&gt; cache invalidating headers in the PUT response?\n\nThere&#39;s less ambiguity here:\n\n&quot;If the request passes through a cache and the Request-URI identifies \none or more currently cached entities, those entries SHOULD be treated \nas stale. Responses to this method are not cacheable.&quot; (RFC 2616 §9.6)\n\nWhich tells us what cache&#39;s should do in this case. Notably it does \nindeed correspond with a situation where the server&#39;s reaction to a PUT \nis not to update the resource in such a way that a GET will return the \nsame entity - the cache will merely clear it&#39;s records and not assume \nanything about what the server has done.\n\n\n"}}