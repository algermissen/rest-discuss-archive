{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"3qOo0OJ2lEvnBrglMJAkgon0WKE8x_9AiwCy91WL_ox9dyKEWITMczniayaHJ3ZO1937JIIBb2fChTt-8QhE-YRwg084SuKIW9unTw6bKpE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Service descriptions and legal contracts","postDate":"1257523087","msgId":14006,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENDNzM5QTY4LTFCQjEtNEMwOS1BNzM1LTFDRTRGMzMxNjA4OUBtYWMuY29tPg==","inReplyToHeader":"PGhkMWM5aitiN2d2QGVHcm91cHMuY29tPg==","referencesHeader":"PGhkMWM5aitiN2d2QGVHcm91cHMuY29tPg=="},"prevInTopic":14005,"nextInTopic":14007,"prevInTime":14005,"nextInTime":14007,"topicId":13996,"numMessagesInTopic":25,"msgSnippet":"... Suppose you are coding a client for service that lets you search stuff and then do something with it (e.g. update). Your client code will inevitably","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96569 invoked from network); 6 Nov 2009 15:59:57 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m3.grp.sp2.yahoo.com with QMQP; 6 Nov 2009 15:59:57 -0000\r\nX-Received: from unknown (HELO asmtpout015.mac.com) (17.148.16.90)\n  by mta3.grp.re1.yahoo.com with SMTP; 6 Nov 2009 15:59:57 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.102] ([84.144.94.188])\n by asmtp015.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KSP009DJ30VE340@...&gt; for\n rest-discuss@yahoogroups.com; Fri, 06 Nov 2009 07:58:11 -0800 (PST)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-id: &lt;CC739A68-1BB1-4C09-A735-1CE4F3316089@...&gt;\r\nTo: wahbedahbe &lt;andrew.wahbe@...&gt;\r\nIn-reply-to: &lt;hd1c9j+b7gv@...&gt;\r\nDate: Fri, 06 Nov 2009 16:58:07 +0100\r\nReferences: &lt;hd1c9j+b7gv@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Re: Service descriptions and legal contracts\r\nX-Yahoo-Group-Post: member; u=289191104; y=H3C2naHBXlsNEo-e9QaiZ-LcepkbShDtBqH80ST_OgCzfech7-EmewBW\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Nov 6, 2009, at 3:36 PM, wahbedahbe wrote:\n\n&gt; --- In rest-discuss@yahoogroups.com, Jan Algermissen  \n&gt; &lt;algermissen1971@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Nov 6, 2009, at 6:45 AM, wahbedahbe wrote:\n&gt;&gt;\n&gt;&gt;&gt; There are a lot of assumptions here about the limitations of machine\n&gt;&gt;&gt; to machine RESTful interaction. I have never seen any proof of these\n&gt;&gt;&gt; limitations. It just seems that because the general REST community\n&gt;&gt;&gt; can&#39;t figure out how to design good media types for machine to\n&gt;&gt;&gt; machine interaction, the consensus is that it isn&#39;t possible.\n&gt;&gt;\n&gt;&gt; I did not say that at all. Of course machine to machine RESTful\n&gt;&gt; systems are possible (e.g. AtomPub). I was talking about inevitable\n&gt;&gt; assumptions the client has to make that manifest itself in code or\n&gt;&gt; configuration of and how to document these such that\n&gt;&gt;\n&gt;&gt; - no unnecessary coupling is created by the documentation\n&gt;&gt;  (as is by many of the documentations of the so called REST\n&gt;&gt;  interfaces on the Web)\n&gt;&gt; - the style of documentation will be accepted by e.g.\n&gt;&gt;   the legal department\n&gt;&gt;\n&gt;&gt; Jan\n&gt;&gt;\n&gt;\n&gt; Right, but it&#39;s the assumption that these out-of-band contracts are  \n&gt; needed is what I&#39;m questioning.\n\nSuppose you are coding a client for service that lets you search stuff  \nand then do something with it (e.g. update). Your client code will  \ninevitably contain the &#39;invocation&#39; of the search (e.g. GET request to  \nsearch resource). And this is based on the expectation that the search  \nresource will be there (== being discoverable). If the service does  \nnot provide the search resource anymore the client will break (if you  \ncode it to expect that there is a search resource and sudden;y there  \nis none what else could the code do?). Humans can work on a solution  \nfor the problem, software cannot (unless we go into AI of some form).\n\nTechnically, this is inevitable and no other, more specialized  \ninterface will help you, because if a Web service does not implement  \nsome service.search() anymore the SOAP call will also fail and no WSDL  \nwill prevent that. This is just the nature of binding the components  \nat runtime and not at compile time (as you would in a non-networked  \napplication).\n\nThe problem is at the business level though because the WSDL specifies  \na contract that defines the search method to be there and if you SOAP  \ncall fails, you can take the WSDL and the stack trace, run to your  \nservice provider and say: &quot;Where&#39;s that method you *promised*?&quot;).\n\nWith REST, there is (deliberately) no such contract and the client&#39;s  \nexpectation that there will be a search resource is based on  \nobservation and trust and on some cloud-level based knowledge about  \nthe overall kind of the interaction.\n\n From the service owner perspective it is also an interesting  \nquestion, how a developer would know if he could take away the search  \nresource. After all, there is no contract to look at that would make  \nclear what the client expectations really are. IOW, if you are in  \ncharge of evolving the service, you should have a pretty clear source  \nthat tells you what you can change and what you cannot change. This is  \nrather easy on the media type level but it is also the combination of  \nhypermedia sematics in use that matter. &quot;Are my clients &#39;licensed&#39; to  \nassume the presence of that Atom extension or are they not? Well, we  \nnever told them we&#39;d never take it away so we can drop it at any time,  \nright?&quot;\n\nOne approach to all this is probably to simply state that a service  \nwill never evolve in an incompatible way (e.g. &quot;we&#39;ll never remove  \nanything&quot;) and if it has to be incompatible, there&#39;ll just be a new  \nservice.\n\nNow, I am not trying to be enterprisey and ride the &#39;oh, inside the  \nenetrpsi there are the hard problems&#39; horse, but &#39;follow your nose&#39;  \njust does not provide the specifics that managers and lawyers (usually  \nrightly so) demand.\n\nWhat is particulary interesting is that IMHO there is the danger of,  \nin the usual attempt to escape this situation, there is far too much  \ncoupling put into the descriptive documents and many of REST&#39;s  \nadvantages lost (see interface docs for example that list the URIs of  \nthe resources to use, what formats to expect and which HTTP return  \ncodes - and what they mean(!) in the service context).\n\nSo, balance is really important.\n\nJan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&gt; They don&#39;t seem to be needed in the human web. Sure you may need to  \n&gt; document the representation formats -- the media type and the  \n&gt; extensions and rels necessary to use the service. But its things  \n&gt; like guarantees about what &quot;kinds of state transitions&quot; are  \n&gt; available that I question. I&#39;m not sure that the &quot;inevitable  \n&gt; assumptions&quot; you refer to are necessary. Maybe I&#39;m reading too much  \n&gt; into what you mean by that though, but it seems to be more that what  \n&gt; normally constitutes the uniform interface. Maybe I need more  \n&gt; clarification on what you think would be in this contract.\n&gt; Regards,\n&gt;\n&gt; Andrew\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n--------------------------------------\nJan Algermissen\n\nMail: algermissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalgermissen.com\n--------------------------------------\n\n\n\n\n"}}