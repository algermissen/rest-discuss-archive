{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":546563737,"authorName":"Max Toro","from":"Max Toro &lt;maxtoroq@...&gt;","profile":"maxtoroq","replyTo":"SENDER","senderId":"5GZBaRcgaq35EgUvaAXc5xxSPH6g596xv1kyp0B2SpR4npl5qqBJ7BYeHuCcODbnnZ5QUuFa2kxRVt5Zeg1nWA36X0k","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] URI design, part 2","postDate":"1354660840","msgId":19212,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBTk1QazI1ZWFOOEFtUVk3MVlaTCt2blFEOWcxcFkzcmtqcFpFVlZkc2dKUDU4Q1JuZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTIxMjAzMDkxNzQ3LmQxMjNiYWY5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PENBTk1QazI3MmlTb0UzNFlLUzlBX3BNK2N0ejJvYjg5TS12M2txUGkxRHF1d2dpNkpqZ0BtYWlsLmdtYWlsLmNvbT4JPENGNTUyMDExLUI0MTgtNEFFNC04MEM2LTQzRjk5MTJFQTcyNUBuaWNrc2hhbmtzLmNvbT4JPDIwMTIxMTMwMTQxMjU0LmYzZDU5ZmE4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPENBTk1QazI0aHJRN3JYN2FLY3Y4TEh4S1AzQloraU9pVVZYd1lWdDZ2eUFDQTJNc3NfZ0BtYWlsLmdtYWlsLmNvbT4JPDIwMTIxMjAxMDAwODQyLmIyNGY5NGQwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPENBTk1QazI0d01ReGlFMDNyR3JjUnM1PVMxSmNhYkRnYitOZFU0RVR5WkZzTCt4cnFXUUBtYWlsLmdtYWlsLmNvbT4JPDIwMTIxMjAzMDkxNzQ3LmQxMjNiYWY5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":19211,"nextInTopic":19213,"prevInTime":19211,"nextInTime":19213,"topicId":19187,"numMessagesInTopic":28,"msgSnippet":"Thank you very much for your responses Eric. The short answer is (if I understood correctly): POST /cancel is not REST because it lacks visibility, since it s","rawEmail":"Return-Path: &lt;maxtoroq@...&gt;\r\nX-Sender: maxtoroq@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73432 invoked from network); 4 Dec 2012 22:40:41 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m3.grp.sp2.yahoo.com with QMQP; 4 Dec 2012 22:40:41 -0000\r\nX-Received: from unknown (HELO mail-ob0-f182.google.com) (209.85.214.182)\n  by mta4.grp.sp2.yahoo.com with SMTP; 4 Dec 2012 22:40:41 -0000\r\nX-Received: by mail-ob0-f182.google.com with SMTP id 16so7375492obc.27\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 04 Dec 2012 14:40:40 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.60.172.40 with SMTP id az8mr12722774oec.5.1354660840558; Tue,\n 04 Dec 2012 14:40:40 -0800 (PST)\r\nX-Received: by 10.182.98.196 with HTTP; Tue, 4 Dec 2012 14:40:40 -0800 (PST)\r\nIn-Reply-To: &lt;20121203091747.d123baf9.eric@...&gt;\r\nReferences: &lt;CANMPk272iSoE34YKS9A_pM+ctz2ob89M-v3kqPi1Dquwgi6Jjg@...&gt;\n\t&lt;CF552011-B418-4AE4-80C6-43F9912EA725@...&gt;\n\t&lt;20121130141254.f3d59fa8.eric@...&gt;\n\t&lt;CANMPk24hrQ7rX7aKcv8LHxKP3BZ+iOiUVXwYVt6vyACA2Mss_g@...&gt;\n\t&lt;20121201000842.b24f94d0.eric@...&gt;\n\t&lt;CANMPk24wMQxiE03rGrcRs5=S1JcabDgb+NdU4ETyZFsL+xrqWQ@...&gt;\n\t&lt;20121203091747.d123baf9.eric@...&gt;\r\nDate: Tue, 4 Dec 2012 19:40:40 -0300\r\nMessage-ID: &lt;CANMPk25eaN8AmQY71YZL+vnQD9g1pY3rkjpZEVVdsgJP58CRng@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Max Toro &lt;maxtoroq@...&gt;\r\nSubject: Re: [rest-discuss] URI design, part 2\r\nX-Yahoo-Group-Post: member; u=546563737; y=Lq0XZrEgsu6rMFwpyFF3ReFYw80vsIFXCkgR9jp61sKG0gQ\r\nX-Yahoo-Profile: maxtoroq\r\n\r\nThank you very much for your responses Eric.\n\nThe short answer is (if I understood correctly): POST /cancel is not\nREST because it lacks visibility, since it&#39;s not possible to\nunderstand the client&#39;s intent by examining the request.\n\nNever thought about HTTP/URI resource vs. REST resource, you say that\na URI that doesn&#39;t implement GET is probably (or always) not REST.\n--\nMax Toro\n\n\nOn Mon, Dec 3, 2012 at 1:17 PM, Eric J. Bowman &lt;eric@...&gt; wrote:\n&gt; Max Toro wrote:\n&gt;&gt;\n&gt;&gt; &gt; Well, what are you expecting to GET from /cancel, or are you just\n&gt;&gt; &gt; using that URL to invoke a procedure? If so, then there are a few\n&gt;&gt; &gt; places Roy&#39;s thesis admonishes against it in Chapter 6 -- the rest\n&gt;&gt; &gt; of REST is about positive, rather than negative, reinforcement of\n&gt;&gt; &gt; the identification of resources constraint. Suggested reading:\n&gt;&gt; &gt; 6.5.2; 6.2.1, in particular: &quot;REST [defines] a resource to be the\n&gt;&gt; &gt; semantics of what the author intends to identify.&quot;\n&gt;&gt;\n&gt;&gt; To clarify, /orders/1/cancel is used to modify a resource, using POST.\n&gt;&gt; A GET request would result in a Method Not Allowed response.\n&gt;&gt;\n&gt;\n&gt; Yes, such examples are out there, but in them, /cancel is NOT a resource\n&gt; in the REST sense so they must be some style of RPC... REST, not so\n&gt; much. Representational State Transfer means just that -- resources are\n&gt; manipulated by transferring representations of their current, intended,\n&gt; desired etc. state.  Chapter 5.4:\n&gt;\n&gt; &quot;Requests and responses have the appearance of a remote invocation\n&gt; style, but REST messages are targeted at a conceptual resource rather\n&gt; than an implementation identifier.&quot;\n&gt;\n&gt; This example is a REST anti-pattern, as I cannot deduce the current\n&gt; (sub)state of the order (active or canceled) by dereferencing the URL\n&gt; I&#39;m given for manipulating that (sub)state. Just making a toggle POST\n&gt; also fails to transfer any representation of anything, let alone\n&gt; application state, and isn&#39;t proper HTTP (which can never be proper\n&gt; REST).\n&gt;\n&gt; REST isn&#39;t about optimizing upstream traffic, it&#39;s about optimizing GET.\n&gt; What advantage does a subresource give when it contains no content from\n&gt; the parent resource?  My goal with subresources is to increase the cache\n&gt; stickiness of their parent resources.  Replace the subresource content\n&gt; in the parent resource, with a link or a hypertext control linked to the\n&gt; subresource.  The link or hypertext control remains static, and cached,\n&gt; as the content of the subresource varies.\n&gt;\n&gt; That&#39;s a RESTful pattern, as the subresource now has a representation\n&gt; (other than that of the 406 error) we can transfer and manipulate to\n&gt; effect change of the parent resource.\n&gt;\n&gt;&gt;\n&gt;&gt; &gt; Not the semantics of a method invocation.  What does /cancel\n&gt;&gt; &gt; identify? Sounds to me like a method of tunneling DELETE through\n&gt;&gt; &gt; POST which identifies nothing, iow a procedure endpoint, which is\n&gt;&gt; &gt; characteristic of various styles but not of the REST style.  The\n&gt;&gt; &gt; hypertext constraint only makes sense if your resources make sense,\n&gt;&gt; &gt; in that their URLs are identifiers rather than endpoints.\n&gt;&gt;\n&gt;&gt; If I understand correctly, you are saying that if I need to affect a\n&gt;&gt; resource then I should use the uniform interface on that resource URI,\n&gt;&gt; and not another URI.\n&gt;&gt;\n&gt;\n&gt; Absolutely not!  My example changed /order/1 by manipulating /order/1\n&gt; /status.  The /order/1 resource includes its status, but its 200 OK\n&gt; representations only include links to the /status subresource, derived\n&gt; from the /order/1 resource such that manipulating a representation\n&gt; of /order/1/status updates /order/1 (on the server, you can do anything\n&gt; you want; on the client, the cached link/control in /order/1 now returns\n&gt; a different value).\n&gt;\n&gt; There&#39;s no cost to adding a URI like this, nor does it preclude changing\n&gt; order status via PUT/PATCH to /order/1.  The difference is that /status\n&gt; uses REST&#39;s uniform interface, unlike /cancel.  The /order/1/status URL\n&gt; is only presented within a hypertext control which explains how to\n&gt; manipulate it -- picture a drop-down list with the current status\n&gt; highlighted, meeting the hypertext constraint.  You can always GET the\n&gt; status of an order even if you don&#39;t have a copy of that order, a\n&gt; useful separation of concerns beyond just optimizing GET, promoting\n&gt; serendipitous re-use.\n&gt;\n&gt;&gt;\n&gt;&gt; &gt; Which brings us to Chapter 5, and the short answer to your question:\n&gt;&gt; &gt; &quot;POSTing to /cancel violates the Identification of Resources\n&gt;&gt; &gt; constraint, and is therefore unRESTful.&quot;  But I&#39;ve found that just\n&gt;&gt; &gt; giving that answer tends to upset folks who&#39;ve only read Chapter 5,\n&gt;&gt; &gt; then they get defensive about why can&#39;t they call their API\n&gt;&gt; &gt; RESTful, accusations of pedantry follow, and threads devolve into\n&gt;&gt; &gt; general ugliness, heheh...\n&gt;&gt;\n&gt;&gt; After reading that chapter again I&#39;m not sure my example violates\n&gt;&gt; anything, but I&#39;d love to get more clarification from you. Is it the\n&gt;&gt; use of a verb in the URI? or not using the URI of the resource I&#39;m\n&gt;&gt; trying to modify directly?\n&gt;&gt;\n&gt;\n&gt; The biggest problem, is that an RPC endpoint which has no GET function\n&gt; while improperly listening for a method itself as a trigger rather than\n&gt; taking action based on the content of the entity required by that method\n&gt; and in obeyance of the semantics of that method, is so far away from\n&gt; REST that I don&#39;t know where to start except by urging that Roy&#39;s\n&gt; thesis be read in its entirety.  Because it&#39;s obvious to me that this\n&gt; violates the first three uniform interface constraints, making adherence\n&gt; to the fourth irrelevant:\n&gt;\n&gt; &quot;REST is defined by four interface constraints: identification of\n&gt; resources; manipulation of resources through representations; self-\n&gt; descriptive messages; and, hypermedia as the engine of application\n&gt; state.&quot;\n&gt;\n&gt; Note that &quot;noun/verb&quot; terminology is not present in the dissertation.\n&gt; But, yeah, if your URI is a &quot;verb&quot; you&#39;re probably getting REST wrong.\n&gt; There is no &quot;cancel&quot; method in the uniform interface.  There are two\n&gt; basic means of solving this -- one, is refactor your cancel operation\n&gt; to use DELETE; two, tunnel your proprietary cancel method through POST.\n&gt;\n&gt; http://tech.groups.yahoo.com/group/rest-discuss/message/19210\n&gt;\n&gt; Making this operation its own URI doesn&#39;t make it more RESTful, as the\n&gt; resulting URI is only a resource in the HTTP/URI sense, but not the\n&gt; REST sense, of the term.  Utilizing subresources to break out more\n&gt; dynamic aspects of content and cache them separately is RESTful; if the\n&gt; contents of the GET are also allowable content of a PUT then we&#39;re\n&gt; letting hypertext drive application state instead of listening for POST\n&gt; events to trigger server-object methods we&#39;ve failed to refactor to the\n&gt; uniform REST interface.\n&gt;\n&gt; -Eric\n\n"}}