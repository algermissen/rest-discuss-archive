{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":313275470,"authorName":"eoinprout","from":"&quot;eoinprout&quot; &lt;eoin@...&gt;","profile":"eoinprout","replyTo":"SENDER","senderId":"k3kN_6rfeAvLE7sxBdBqPFhbDmpbP7RzbrLFQCeKTaj2ROtfYAmuANQV0WxYLOPZPwdVpPM_gGlbOd7w5tl3afvQ9rpMWA4","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: How to do /posts/yyyy[/mm[/dd]] and /posts/id RESTfully?","postDate":"1181045412","msgId":8811,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY0M2pyNCt0cjFvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PFcyOTQ4MDE3Mzc3MjIyOTkxMTgxMDMyMDIyQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":8809,"nextInTopic":8816,"prevInTime":8810,"nextInTime":8812,"topicId":8593,"numMessagesInTopic":16,"msgSnippet":"... context ... It looks like RPC to me because it looks like your making a function call rather then requesting the a resource. RPC does not have to be","rawEmail":"Return-Path: &lt;eoin@...&gt;\r\nX-Sender: eoin@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 63313 invoked from network); 5 Jun 2007 12:12:03 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m51.grp.scd.yahoo.com with QMQP; 5 Jun 2007 12:12:03 -0000\r\nReceived: from unknown (HELO n11c.bullet.sp1.yahoo.com) (69.147.64.108)\n  by mta14.grp.scd.yahoo.com with SMTP; 5 Jun 2007 12:12:03 -0000\r\nReceived: from [216.252.122.219] by n11.bullet.sp1.yahoo.com with NNFMP; 05 Jun 2007 12:10:15 -0000\r\nReceived: from [209.73.164.83] by t4.bullet.sp1.yahoo.com with NNFMP; 05 Jun 2007 12:10:14 -0000\r\nReceived: from [66.218.67.201] by t7.bullet.scd.yahoo.com with NNFMP; 05 Jun 2007 12:10:14 -0000\r\nDate: Tue, 05 Jun 2007 12:10:12 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;f43jr4+tr1o@...&gt;\r\nIn-Reply-To: &lt;W2948017377222991181032022@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;eoinprout&quot; &lt;eoin@...&gt;\r\nSubject: Re: How to do /posts/yyyy[/mm[/dd]] and /posts/id RESTfully?\r\nX-Yahoo-Group-Post: member; u=313275470; y=fewViXxzhS72arFxGaPetR6zI8sOd7WcAVj35OxpZfSWWY1a\r\nX-Yahoo-Profile: eoinprout\r\n\r\n--- In rest-discuss@yahoogroups.com, &quot;Eric J. Bowman&quot; &lt;eric@...&gt; wrote:\n&gt;\n&gt;=\r\n &gt;\n&gt; &gt;http://en.ericjbowman.com/date;transform=3D1?iso=3D2007-05-25 is an R=\r\nPC\n&gt; &gt;way of doing things\n&gt; &gt;\n&gt; \n&gt; How so?  RPC communication is stateful, =\r\nin my case, &quot;each request from \n&gt; client to server... contain(s) all of the=\r\n information necessary to \n&gt; understand the request, and (does not) take ad=\r\nvantage of any stored\ncontext \n&gt; on the server&quot; which is a stateless, RESTf=\r\nul interaction.\n\nIt looks like RPC to me because it looks like your making =\r\na function\ncall rather then requesting the a resource.\n\nRPC does not have t=\r\no be stateful.\n\n&gt; &gt;\n&gt; &gt;wouldn&#39;t something like\n&gt; &gt;http://en.ericjbowman.com=\r\n/date/2007-05-25.iso/LongFormat.html\n&gt; &gt;be more RESTful.\n&gt; &gt;\n&gt; \n&gt; Not reall=\r\ny, URI design is only orthogonal to REST.  My way is not\nthe only \n&gt; way.\n&gt;=\r\n \n&gt; &gt;\n&gt; &gt;http://en.ericjbowman.com/date/2007-05-25.iso/\n&gt; &gt;would return lin=\r\nks to each of the different formats which can be\n&gt; &gt;returned by your servic=\r\ne.\n&gt; &gt;In this way the service is self describing.\n&gt; &gt;At the moment someone =\r\nhas to guess what the possible parameters could\n&gt; &gt;be, The service would be=\r\ncome more useful by becoming more hackable.\n&gt; &gt;\n&gt; \n&gt; Well, that&#39;s another w=\r\nay to do it.  But my way is still self-describing \n&gt; because there is a ser=\r\nvice document which clearly lays out the\nexistence \n&gt; and usage of paramete=\r\nrs for each language the service is available\nin, no \n&gt; guesswork involved.=\r\n  I&#39;m a bit confused on where self-describing\nservices \n&gt; enters into REST,=\r\n though.\n\nOne way REST is self describing is way a user can traverse links =\r\nfrom\none resource to another related resource rather then knowing the rules=\r\n\non how to construct the URLs.\nAnd you have things like OPTIONS which is su=\r\npposed to say what\noperations are allowed on a particular resource.\n\n&gt; More=\r\n usable to whom?  If I want to write an XSLT stylesheet which\ntakes the \n&gt; =\r\nprimary output and transforms it into RFC 1123 format served as\ntext/plain =\r\n\n&gt; then I just do this after it&#39;s written:\n&gt; \n&gt; curl -iT &quot;en.2.xsl&quot; http://=\r\nericjbowman.com/date/en.2.xsl\n&gt; \n&gt; Which does a PUT.  I get a 201 Created i=\r\nf it&#39;s new, if I&#39;ve\noverwritten an \n&gt; existing file I get a 204 No Content =\r\nresponse.  Now, I can GET this:\n&gt; \n&gt; http://en.ericjbowman.com/date;transfo=\r\nrm=3D2?iso=3D2007-05-25\n&gt; \n&gt; That seems pretty usable to me, as the maintai=\r\nner of the service,\nsince no \n&gt; existing consumers of the service need to b=\r\ne rewritten to accomodate\nit, no \n&gt; new name must be devised which might no=\r\nt apply in the future, and\nall I have \n&gt; to do (if I even want to) is updat=\r\ne my service documents to reflect\nthat the \n&gt; English version now has this =\r\ncapability (which doesn&#39;t make sense\nfor any \n&gt; other language).\n&gt; \n&gt; Anywa=\r\ny, in terms of REST constraints, it&#39;s the messages that are to be \n&gt; self-d=\r\nescriptive, not the service itself.  Not hierarchical, but still \n&gt; hackabl=\r\ne:\n&gt; \n&gt; http://en.ericjbowman.com/date?iso=3D2007-05-25\n&gt; \n&gt; Also, not RPC =\r\nbecause it&#39;s perfectly cacheable.  Yes, I can set an\nEtag, \n&gt; but we are wa=\r\niting for Caucho to add MD5 capability to Resin (in the\nworks) \n&gt; so we can=\r\n set Etag=3DMD5.  If this were RPC instead of GET the output\nwould \n&gt; not b=\r\ne cacheable at all.  Instead, I&#39;ve optimized GET, which is very\nRESTful.\n&gt; =\r\n\n&gt; -Eric\n&gt;\n\nsome systems won&#39;t/can&#39;t cache GETs which contain parameters.\nB=\r\nut this is more of a flaw with those systems then any flaw in your\nmethod.\n=\r\n\nBut as you say they is no one way, This is only my opinion.\n\nEoin\n\n\n"}}