{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":5226678,"authorName":"Jason Diamond","from":"&quot;Jason Diamond&quot; &lt;jason@...&gt;","profile":"injektilo12","replyTo":"SENDER","senderId":"OI0M3-OSellcTvXH56VBFI2nL55oO2hVRThM4zPZ0mb1hsdahHZpHM4Lw09JOlTnCJscfrbifDfTKPuPpirZYbEI_JQBZAKjBmZrHA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Fw: WRDL","postDate":"1014557417","msgId":784,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNmUwMWMxYmQzNyQ2NmVhODEyMCQ2NDAxYThjMEBpbmpla3RpbG8+","referencesHeader":"PDAwNjQwMWMxYmQzMiQyYTJkYmVhMCQ2NDAxYThjMEBpbmpla3RpbG8+"},"prevInTopic":783,"nextInTopic":0,"prevInTime":783,"nextInTime":785,"topicId":781,"numMessagesInTopic":3,"msgSnippet":"... If nobody steps up to do a Java version than I coud take a crack at that, too. I only chose C# since it comes with XPath support out of the box. I need an","rawEmail":"Return-Path: &lt;jason@...&gt;\r\nX-Sender: jason@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 24 Feb 2002 13:30:00 -0000\r\nReceived: (qmail 77498 invoked from network); 24 Feb 2002 13:30:00 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m12.grp.snv.yahoo.com with QMQP; 24 Feb 2002 13:30:00 -0000\r\nReceived: from unknown (HELO epervier.cqhost.net) (216.167.57.201)\n  by mta3.grp.snv.yahoo.com with SMTP; 24 Feb 2002 13:30:00 -0000\r\nReceived: from injektilo (ca-crlsbd-u2-c5b-352.crlsca.adelphia.net [24.55.53.96])\n\tby virtualepervier.cqhost.net (8.10.2/8.10.2) with SMTP id g1ODTsE26241\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun, 24 Feb 2002 08:29:54 -0500\r\nMessage-ID: &lt;006e01c1bd37$66ea8120$6401a8c0@injektilo&gt;\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;006401c1bd32$2a2dbea0$6401a8c0@injektilo&gt;\r\nSubject: Re: [rest-discuss] Fw: WRDL\r\nDate: Sun, 24 Feb 2002 05:30:17 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Jason Diamond&quot; &lt;jason@...&gt;\r\nX-Yahoo-Group-Post: member; u=5226678\r\nX-Yahoo-Profile: injektilo12\r\n\r\n&gt; &gt; Great stuff! I don&#39;t suppose you&#39;ll buy my suggestion that you should\n&gt; &gt; &quot;regress&quot; to Java for portability and popularity reasons. ;) Either way,\n&gt; &gt; I&#39;m very happy because I would want to see C# support eventually anyhow.\n\nIf nobody steps up to do a Java version than I coud take a crack at that,\ntoo. I only chose C# since it comes with XPath support out of the box. I\nneed an excuse to learn Jaxen, anyways.\n\n&gt; &gt; It would be really great to have a read-write web service but there are\n&gt; &gt; reasons that people don&#39;t tend to open up read-write access to websites.\n&gt; &gt; ;) I&#39;ve been toying with the idea of a UDDI bridge.\n\nI&#39;m working on one and will probably need help from the list to make sure I\nget it right. Think Radio meets REST. :-)\n\n&gt; &gt; I considered that and then thought: &quot;maybe we should just push this back\n&gt; &gt; on service developers to make nicer URI parameter names.&quot; After all, _fl\n&gt; &gt; isn&#39;t very friendly even in your browser bar. Still, your next point is\n&gt; &gt; very important:\n&gt; &gt;\n&gt; &gt; &gt; ... It might be more important for header inputs since\n&gt; &gt; &gt; those tend to have dashes in them and most programming languages don&#39;t\n&gt; &gt; &gt; support those in identifiers.\n&gt; &gt;\n&gt; &gt; Agreed.\n&gt; &gt;\n&gt; &gt; &quot;friendly-name&quot;? &quot;api-name&quot;? If api-names were required to be unique\n&gt; &gt; across queries and headers then we could unify the queries and header\n&gt; &gt; namespaces for languages where parameters matter (e.g. those with\n&gt; &gt; optional arguments).\n\nI don&#39;t know. I could go either way on this. It seems like an implementation\ndetail that the spec shouldn&#39;t care about. Proxy generators could\nautomatically transform names so that they&#39;re legal. Or developers could\nsneak in some qualified attributes on those elements with the names they\nprefer. Or they could support some sort of configuration that lets you\nrename inputs without modifying the WRDL.\n\n&gt; &gt; Don&#39;t forget to provide an API for extra query and header parameters.\n\nGood point. This is a good argument for the &quot;Inputs&quot; class we talk about\nbelow.\n\n&gt; &gt; The parameters class is not unlike the sort of message you have to build\n&gt; &gt; to use .NET My services. As web services move more and more to\n&gt; &gt; &quot;messaging&quot; style it will be pretty common. MeerkatPOSTInputs could also\n&gt; &gt; hold the DOM for any XML inputs to POST or PUT. i.e. one property per\n&gt; &gt; parameter/header and one for the bound XML document.\n&gt; &gt;\n&gt; &gt; &lt;aside&gt;There is a fundamental disconnect between languages that only\n&gt; &gt; support ordered-parameter arguments and good networking &quot;best practice&quot;\n&gt; &gt; where extensibility is paramount. RPC is bad enough architecturally\n&gt; &gt; without making it even worse by making parameter orders significant as\n&gt; &gt; SOAP and (especially!) XML-RPC services tend to. I don&#39;t really\n&gt; &gt; understand why in this day and age, optional and named parameters are\n&gt; &gt; considered a fancy language feature. IIRC, Ada had them in the\n&gt; &gt; 80s.&lt;/aside&gt;\n\nWell, VB has them but you&#39;re not going to make me code in that, are you? ;-)\n\nIt seems that the &quot;Inputs&quot; class is the best and most flexible approach. Not\nonly does it support optional parameters which you can set in any order but\nyou could also add arbitrary queries or headers.\n\n&gt; &gt; &gt; &lt;reference name=&quot;story&quot; match=&quot;story/link&quot;\n&gt; use=&quot;preceding-sibling::title&quot;\n&gt; &gt; &gt; resourceType=&quot;ANY&quot; /&gt;\n&gt; &gt;\n&gt; &gt; Now I get it. Excellent idea! You could even index the same URI by\n&gt; &gt; multiple keys. It&#39;s a little bit more complicated than what I was\n&gt; &gt; thinking but much more useful.\n\nIt does seem a tiny bit more complicated but I think a lot of flexibility is\ngained from it. With the match attribute, we&#39;ll probably have to process the\nentire tree anyways. The value grabbed using the use attribute just makes it\neasier for us to actually use that data once it&#39;s extracted.\n\n&gt; &gt; BTW, I&#39;d spell that &quot;../title&quot; The abbreviated form is a little bit more\n&gt; &gt; readable and it&#39;s a little bit less dependent on ordering (in case the\n&gt; &gt; DTD ever changes).\n\nGood point.\n\n&gt; &gt; &gt; Why exactly would you want to allow methods to return different types\nof\n&gt; &gt; &gt; representations anyways? The programmer probably knows exactly what\ntype\n&gt; he\n&gt; &gt; &gt; wants, wouldn&#39;t you think?\n&gt; &gt;\n&gt; &gt; Which programmer are you talking about? The web service provider might\n&gt; &gt; allow fetching data in RSS 0.9 versus RSS 1.0 versus XMLNews. Or they\n&gt; &gt; might have a a biztalk PO versus an ebxml versus rosettanet. It is\n&gt; &gt; probably useful for the semantic web not to give them all unique URIs\n&gt; &gt; otherwise you need to somehow broadcast that they are &quot;really&quot; the same\n&gt; &gt; thing (which you can do with RDF but still...).\n\nOK, I see what you&#39;re saying. These examples would surely be restricted to\none representationType per representation, no? Would there be any cases\nwhere a single representation could match more than one?\n\n&gt; &gt; Very helpful! I appreciate all of your effort. The fact that our\n&gt; &gt; instincts line up so well reinforces my believe that WRDL is pretty\n&gt; &gt; logical -- it&#39;s like we&#39;re discovering it instead of creating it.\n&gt; &gt; Basically it is just a concrete syntax for statically type declaring\n&gt; &gt; bits of the existing web architecture.\n\nI was throwing around some ideas privately with Mark Baker a few months ago\nand some of them were very similar to yours. I was calling it HTTP-IDL\n(which I realize now is way to RPC-ish) but it was nowhere near as elegant\nas WRDL.\n\nJason\n\n\n\n"}}