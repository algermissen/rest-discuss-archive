{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"EyehhsklAzdZymgiHP8kLj-NoO_6XvJsnK3CxwsmDxSXPx6rfEFd380M2ZvZHzg3iKhehN-LdYPFA083eB2KPbs43HY-5w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] GET and notifications","postDate":"1013135808","msgId":690,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hESUVLS0ZLQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDNDNjFDNjhELkJBMkEyNUU3QGp1bXAubmV0Pg=="},"prevInTopic":689,"nextInTopic":691,"prevInTime":689,"nextInTime":691,"topicId":674,"numMessagesInTopic":33,"msgSnippet":"I started pseudocoding both proposed designs for the interactions with the server/source and instantly found serious problems with both. Model-2req (coinage","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 8 Feb 2002 02:38:09 -0000\r\nReceived: (qmail 84109 invoked from network); 8 Feb 2002 02:38:08 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m3.grp.snv.yahoo.com with QMQP; 8 Feb 2002 02:38:08 -0000\r\nReceived: from unknown (HELO mail3.panix.com) (166.84.0.167)\n  by mta2.grp.snv.yahoo.com with SMTP; 8 Feb 2002 02:38:08 -0000\r\nReceived: from mailspool1.panix.com (mailspool1.panix.com [166.84.0.210])\n\tby mail3.panix.com (Postfix) with ESMTP id 2134398356\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu,  7 Feb 2002 21:38:08 -0500 (EST)\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mailspool1.panix.com (Postfix) with SMTP id 4BA9112E41\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu,  7 Feb 2002 21:38:04 -0500 (EST)\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] GET and notifications\r\nDate: Thu, 7 Feb 2002 21:36:48 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDIEKKFKAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nIn-Reply-To: &lt;3C61C68D.BA2A25E7@...&gt;\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\nI started pseudocoding both proposed designs for the interactions with the\nserver/source and instantly found serious problems with both.\n\n&quot;Model-2req&quot; (coinage here for reasons of convenience) is the one where there\nare two requests, a POST to a subscription resource and a GET to a watched\nresource.  The problem with this is that it implies a transaction.  In my former\nproposal on the subject I suggested that there be a GET, the GET results would\nbe hashed by the client in some well known way, and the hash would be\ntransmitted with the followup POST as a &quot;baseline state.&quot;  The subscription\nresource would decide when to fire a notification by computing its own hash of\nthe watched resource and compare it to the hash sent by the client.  However the\nhash has to be up to the server, since GET headers often imply a view of the\nobject.  (By &quot;view&quot; I mean a transformation that is orthogonal to the underlying\ncontent of the object.  For example the GET may have &quot;Accept: XML-2.0&quot;, while\nthe base resource exists in a neutral form like a unix mbox file.)\n\n&quot;Model-1req&quot; is the one where there is a single request/response that augments a\nGET with a header that implies a watch.  The problem with this is that it\nrequires the owner of the resource to be the watcher.  That precludes all third\nparty watchers, whether on another host or on the same one.  If the watched\nresource is a script then it has to be edited to support the notify request.  If\nit is a file then the web server has to be edited with something like\nmod_notify.  So deployment becomes an obstacle.\n\nThere is a solution to the problem with Model-2req.  I propose that the\nsubscription POST and resource GET be completely separated and the hash be\neliminated.  The subscription POST would become effective immediately.  POSTing\nto it would mean &quot;Do what you need to do to know that this resource has changed,\nwhether it&#39;s computing a hash or creating a database trigger.&quot;  The POST would\nhave to precede the GET -- otherwise there would be a race condition between the\nGET and POST, and states between the time of the GET and POST could be lost.\n\nI will post a sample set of Model-2req transactions in a separate followup\nmessage.\n\n- Lucas\n\n\n"}}