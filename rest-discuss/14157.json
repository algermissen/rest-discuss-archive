{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"FSlJuK7Ih8wt-nmtGuNkTNpEdsQvyf33iPTm6l0PodfLHZY1pVv3PuFb1cGN7gD_3qvFhglNNxl_Hg7-FSMv_FBSsCBVObU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful M2M Systems and Resource Typing","postDate":"1260979101","msgId":14157,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkxMjE2MDc1OHE0NjQzMDgwOHY4ODk4MzY5NDI4ZjVkOTE1QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PENCNEU1MkVDLTQ2RTktNDhFNC05QkY2LTVFNUVFMjg1NDM4OEBtYWMuY29tPg==","referencesHeader":"PENCNEU1MkVDLTQ2RTktNDhFNC05QkY2LTVFNUVFMjg1NDM4OEBtYWMuY29tPg=="},"prevInTopic":14156,"nextInTopic":14159,"prevInTime":14156,"nextInTime":14158,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"Jan: If I understand your description, you are talking about creating a client that can search for helpdesk tickets (at some known URI, I assume) and, if one","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 71218 invoked from network); 16 Dec 2009 15:58:22 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m4.grp.sp2.yahoo.com with QMQP; 16 Dec 2009 15:58:22 -0000\r\nX-Received: from unknown (HELO mail-fx0-f222.google.com) (209.85.220.222)\n  by mta2.grp.re1.yahoo.com with SMTP; 16 Dec 2009 15:58:22 -0000\r\nX-Received: by mail-fx0-f222.google.com with SMTP id 22so1066363fxm.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 16 Dec 2009 07:58:21 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.164.77 with SMTP id d13mr1377753fay.93.1260979101530; Wed, \n\t16 Dec 2009 07:58:21 -0800 (PST)\r\nIn-Reply-To: &lt;CB4E52EC-46E9-48E4-9BF6-5E5EE2854388@...&gt;\r\nReferences: &lt;CB4E52EC-46E9-48E4-9BF6-5E5EE2854388@...&gt;\r\nDate: Wed, 16 Dec 2009 10:58:21 -0500\r\nX-Google-Sender-Auth: a65d4c8c8e823724\r\nMessage-ID: &lt;b548df650912160758q46430808v8898369428f5d915@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=69164307; y=YZPcJiSlH1c0mf9K9nv9l6clog8oRXHG_PgiUahyt9X8\r\nX-Yahoo-Profile: mamund\r\n\r\nJan:\n\nIf I understand your description, you are talking about creating a\ncl=\r\nient that can search for helpdesk tickets (at some known URI, I\nassume) and=\r\n, if one or more tickets come back in the response\nrepresentation, are then=\r\n able to perform some action on the tickets\n(change status, etc).\n\nI think =\r\nthis can be done by documenting a media-type constraint that\nincludes infor=\r\nmation to identify tickets.\n&lt;link href=3D&quot;....&quot; rel=3D&quot;http://www.example.o=\r\nrg/rels/ticket&quot; /&gt;\n\nAlternately, a similar approach could be used when the =\r\nresponse\nrepresentation includes more than just links, but actual tickets.\n=\r\n&lt;tickets&gt;\n  &lt;ticket&gt;\n     &lt;link href=3D&quot;...&quot; rel=3D&quot;edit&quot; /&gt;\n     ...\n  &lt;/t=\r\nicket&gt;\n&lt;/tickets&gt;\n\nIn both cases, the client can be coded to search the rep=\r\nresentation\nfor the proper elements and act accordingly.\n\nAll this informat=\r\nion can be documented the media-type used with the\nservice including any sp=\r\necial element names, rel values, etc. viable\nactions on these links, etc.\n\n=\r\n&lt;snip&gt;\n&gt; Does anyone have an idea how to align this (IMHO fact) with the\n&gt; =\r\nconstraint that no information about resource types must be made\n&gt; availabl=\r\ne to clients in RESTful systems?\n&lt;/snip&gt;\n\nNot sure I understand this last s=\r\ntatement. Do you mean media-types?\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn We=\r\nd, Dec 16, 2009 at 10:21, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n=\r\n&gt; I can&#39;t help it: I see no possible way to implement a non-human-driven\n&gt; =\r\nclient for a service without (in one way or another) classifying the\n&gt; reso=\r\nurces the service provides.\n&gt;\n&gt; For example, consider a helpdesk ticket sys=\r\ntem: When writing a client\n&gt; that searches for tickets and then updates the=\r\n foo:status of the\n&gt; individual tickets contained in the result set, I need=\r\n to make the\n&gt; assumption that the result set contains tickets (and not jus=\r\nt\n&gt; resources). In order to being able to make such an assumptions, the\n&gt; c=\r\nlassification information must be made available by the service. In\n&gt; addit=\r\nion, when client developers should be enabled to develop clients\n&gt; before t=\r\nhe services exist this information is needed as some form of\n&gt; service type=\r\n description. The specification of application/atomsrv+xml\n&gt; is a good exam=\r\nple of such a service type description.\n&gt;\n&gt; But however this is approached,=\r\n it essentially comes down to telling\n&gt; the client what kinds of resources =\r\n(IOW: kinds of application states)\n&gt; to expect on the server. I just cannot=\r\n code to update the resource\n&gt; foo:status when I have now clue that this us=\r\ner goal is applicable to\n&gt; the resource in the first place.\n&gt;\n&gt; Does anyone=\r\n have an idea how to align this (IMHO fact) with the\n&gt; constraint that no i=\r\nnformation about resource types must be made\n&gt; available to clients in REST=\r\nful systems?\n&gt;\n&gt; Jan\n&gt;\n&gt; P.S. In human driven interactions the situation is=\r\n different: We still\n&gt; have knowledge of the resource type iin general (we =\r\nknow a trouble\n&gt; ticket when we see one) but we are not dependent on knowin=\r\ng that the\n&gt; result of some interaction will be a trouble ticket. We can al=\r\nlways\n&gt; follow some human-targeted links and make a few hops to reach the\n&gt;=\r\n trouble ticket resource we expect should be &#39;somwehere&#39;. M2M clients\n&gt; do =\r\nnot have that luxury (unless we apply some form of AI I guess).\n&gt;\n&gt;\n&gt; -----=\r\n-------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}