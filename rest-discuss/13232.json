{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"_cOkvIxA0YWw-GXcXGlEdpCrtlEqnRQgnRwvwd4Bes03Wu7rVEdgKnQa9fSPvKyXq8otsQXS6ehoRxLNnC8qgnrjh9ZfEwNQUvO-ITfk","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Media Type Version Negotiation","postDate":"1252684323","msgId":13232,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMDkwOTExMDg1Mm0xNGU1Zjc1N3llNjRkYjdlN2M5YjUwOGRmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGI1NDhkZjY1MDkwOTExMDcyMW81ZWQyMTk4NnAyOGYzNTkxNDBkYzg2YjQ5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPgkgPDdFMjM0RTQ2LTU3QjQtNDEzMy1CRTQ4LTE2REQ0NTBFOTdEMkBtYWMuY29tPgkgPEJMVTEwMi1EUzFGRTU4MjQ5M0MyRjFGNUE1M0ExREI1RTcwQHBoeC5nYmw+CSA8MjhlMjU3MTEwOTA5MTEwNzAxbTMxYTk1MjRjdDgyYjNjN2QyOWY0YjYxY2ZAbWFpbC5nbWFpbC5jb20+CSA8YjU0OGRmNjUwOTA5MTEwNzIxbzVlZDIxOTg2cDI4ZjM1OTE0MGRjODZiNDlAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13231,"nextInTopic":13233,"prevInTime":13231,"nextInTime":13233,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"... I disagree.  Versions in the URI are real pain for some custom clients.  Consider a custom client that builds a large set of data in which each that","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74319 invoked from network); 11 Sep 2009 15:52:06 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.re1.yahoo.com with QMQP; 11 Sep 2009 15:52:06 -0000\r\nX-Received: from unknown (HELO mail-ew0-f224.google.com) (209.85.219.224)\n  by mta3.grp.sp2.yahoo.com with SMTP; 11 Sep 2009 15:52:06 -0000\r\nX-Received: by ewy24 with SMTP id 24so546534ewy.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 11 Sep 2009 08:52:03 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.210.3.7 with SMTP id 7mr3414346ebc.78.1252684323422; Fri, 11 \n\tSep 2009 08:52:03 -0700 (PDT)\r\nIn-Reply-To: &lt;b548df650909110721o5ed21986p28f359140dc86b49@...&gt;\r\nReferences: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt;\n\t &lt;7E234E46-57B4-4133-BE48-16DD450E97D2@...&gt;\n\t &lt;BLU102-DS1FE582493C2F1F5A53A1DB5E70@...&gt;\n\t &lt;28e257110909110701m31a9524ct82b3c7d29f4b61cf@...&gt;\n\t &lt;b548df650909110721o5ed21986p28f359140dc86b49@...&gt;\r\nDate: Fri, 11 Sep 2009 09:52:03 -0600\r\nMessage-ID: &lt;28e257110909110852m14e5f757ye64db7e7c9b508df@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=304236879; y=bgbNUedHMs6wqskrWDGYDxRtmEDhJ63HcuFraEkLs3s3nUuGpdVGMEA9FQ\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Fri, Sep 11, 2009 at 8:21 AM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt; If your server needs to support common browsers, media-type versioning\n&gt; is a non-starter. The best you can achieve is to place the version in\n&gt; an optional parameter and interpret a missing parameters as equal to\n&gt; the most recent version.\n&gt;\n&gt; The most universal way to include versioning information is in the\n&gt; URI. Both custom clients and common browsers will handle these w/o\n&gt; problems.\n\nI disagree.  Versions in the URI are real pain for some custom\nclients.  Consider a custom client that builds a large set of data in\nwhich each that references resources in your API.\n\nFor example, i once worked on an app that provided a way configure a\nmonitoring tool.  These configurations where rather complex and there\nwas one per piece of equipment.  The equipment being monitored was\nidentified by a separate application (there was more than one way to\nconfigure monitoring).  So for each piece of equipment that was\nmonitored there could be a configuration.  These configurations\nreference the equipment by its URI in the inventory system.\n\nAt one point a new version of the inventory API became available.  We\nupdated the configuration tool to support the improved API.  If\ninventory API version been embedded in the equipment URIs we would\nhave been in a tough spot.  We would have had code in the\nconfiguration system to handle both versions of the inventory API,\nwhich would have significantly increasing the complexity and\nmaintenance of the system.  Or we would have had to bulk rewrite all\nthe stored equipment URIs to include the new version, which is only an\noption because we happened to be in control of both sides.  (And it is\na way to anti-HATEOAS for my taste, anyway.)\n\nHowever, using versioning in the media type meant that we where able\nto just remove support for the previous inventory API version and add\nsupport for new one to the configuration management tool and the\ndeploy.  No client side URI construction or increased complexity\nrequired.\n\n&gt; Server can return 410 for obsolete URI (versions) and clients can\n&gt; adjust accordingly.\n\nThis assumes that the previous versions are unsupported.  In my\nexperience is it much better to continue to support earlier versions\nof an API for quite some time.  This give people time to transition\nclients to the new API in a manner that fits with their priorities and\nresource availabilities.  In the case of a truly collaborative\ndistributed system that means that you should plan on supporting most\nversion indefinitely because some clients will just never be updated.\n\n--\nPeter Williams\nhttp://barelyenough.org\n\n"}}