{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"XbnH4o9NI7wlwW_dpjD_7RxEBKE2Q9m4luMXVtuFUmytFkcE-cbWZykXJMvW6wv1lxb30SdxBafLzb0yTWI0ov2i","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RDF Forms","postDate":"1063313753","msgId":3966,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE4MjU1MjcwNi4xMDYzMjk5MzUzQGxvY2FsaG9zdD4=","inReplyToHeader":"PDEwNjMzMTIxMjYuMTMzMTEuOS5jYW1lbEBzdGF0aW9uPg==","referencesHeader":"PDIwMDMwOTEwMDA1MjAzLkQ2MDQxQHd3dy5tYXJrYmFrZXIuY2E+CSA8OTc3ODc3OTEuMTA2MzIxNDYyM0Bsb2NhbGhvc3Q+IDwxMDYzMjYzMTUyLjQzNy41LmNhbWVsQHN0YXRpb24+CSA8MTczMDc4OTk0LjEwNjMyODk4ODBAbG9jYWxob3N0PiA8MTA2MzMxMjEyNi4xMzMxMS45LmNhbWVsQHN0YXRpb24+"},"prevInTopic":3965,"nextInTopic":3969,"prevInTime":3965,"nextInTime":3967,"topicId":3951,"numMessagesInTopic":26,"msgSnippet":"--On Thursday, September 11, 2003 10:28 PM +0200 Yannick Loiseau ... Ok.  Give me a non-obvious case that is not an example of poor engineering and that cannot","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 14117 invoked from network); 11 Sep 2003 20:56:17 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m4.grp.scd.yahoo.com with QMQP; 11 Sep 2003 20:56:17 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (67.100.176.227)\n  by mta4.grp.scd.yahoo.com with SMTP; 11 Sep 2003 20:56:16 -0000\r\nReceived: from [10.253.158.247] (m018f36d0.tmodns.net [208.54.143.1])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid 8E9988838F; Thu, 11 Sep 2003 16:56:15 -0400 (EDT)\r\nDate: Thu, 11 Sep 2003 16:55:53 -0400\r\nTo: Yannick Loiseau &lt;yloiseau@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] RDF Forms\r\nMessage-ID: &lt;182552706.1063299353@localhost&gt;\r\nIn-Reply-To: &lt;1063312126.13311.9.camel@station&gt;\r\nReferences: &lt;20030910005203.D6041@...&gt;\t\n &lt;97787791.1063214623@localhost&gt; &lt;1063263152.437.5.camel@station&gt;\t\n &lt;173078994.1063289880@localhost&gt; &lt;1063312126.13311.9.camel@station&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\n--On Thursday, September 11, 2003 10:28 PM +0200 Yannick Loiseau \n&lt;yloiseau@...&gt; wrote:\n&gt; your example is simple enough to make it obvious, but it is\n&gt; not always the case.\n\nOk.  Give me a non-obvious case that is not an example of poor engineering \nand that cannot be refactored to be simple enough to be obvious.\n\n&gt; Moreover, this can&#39;t be automated. You have to look\n&gt; for this schema.\n\nYou always need to understand the content-types (and schema) with which you \nare dealing.  RDF forms also requires you to understand schema.  The \nquestion is whether you need anything more (beyond the constraints of \nHTTP/1.1).  As far as understanding content-types (and schema), the effort \non RDF forms would be better spent improving the infrastructure for \nresolving content-type names to their documentation.  Perhaps adding a url \nparameter to the content-type header designating the location of the \ndocumentation about the content-type would be the way to go.\n\n&gt; And finally, this suppose that your &quot;default&quot; (or\n&gt; &quot;main&quot;) type is application/shoe-order+xml, and I precised that is this\n&gt; example case, default is text/html and the server can return many\n&gt; formats, thanks to, e.g. , server-side xslt, so there is *no* &quot;main&quot;\n&gt; type.\n\nThe default type of *what* is text/html?  The form?  The POSTable resource? \nThe entity body returned from the POST?  The point of my elucidation \n(copied below) is that browser based form interaction never actually \nrequire a GET of a POSTable resource, so it can be whatever type you want. \nMy general point is that that type should provide enough information for \nform-designers and other client-side developers to understand how to \ninteract with the resource.\n\n-Alex-\n\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n&gt;\n&gt;&gt;\n&gt;&gt; So now you create a form located at /form.html\n&gt;&gt; it POSTs to /collection.xml\n&gt;&gt;\n&gt;&gt; The server responds:\n&gt;&gt;   201 Created\n&gt;&gt;   Location: postedobjectlocation\n&gt;&gt;   Content-type: text/plain\n&gt;&gt;\n&gt;&gt;   Thank you for posting.\n&gt;&gt;\n&gt;&gt; The end user is never directly exposed to the\n&gt;&gt; application/shoe-orders+xml  type.\n\n\n"}}