{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"R2yS-fYF8t5bwNf_G5X3lr-DMQchu2lp9xWT27zru65dqibsFrkiLTOhimkzFsCSnxuv_v9-ji7zFJkBl0pYdlOsArGPrFFaVdIzDBDd18yXv7YsFs1oNTM","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atompub missed opportunity","postDate":"1167608196","msgId":7341,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNjc2MDgxOTYuNTE1Ny4xNS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PDkyNzQ0MWIzMDYxMjMwMTcwOGkyMGE5YWMyZW9mOTdiMGE5YjgwYzk0NmRkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDkyNzQ0MWIzMDYxMjI4MTI1N2w3ZTc4MjQyYnM5NTYyMjBiZTFjNTFmZTQ2QG1haWwuZ21haWwuY29tPgkgPDExNjc1MTg3MjQuNDYzNy4xMi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8OTI3NDQxYjMwNjEyMzAxNzA4aTIwYTlhYzJlb2Y5N2IwYTliODBjOTQ2ZGRAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":7318,"nextInTopic":7354,"prevInTime":7340,"nextInTime":7342,"topicId":7295,"numMessagesInTopic":25,"msgSnippet":"... Exactly. It has been agreed ahead of time. Now, I can just send my POST request and know that the server understands a useful subset of what I am sending","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 91342 invoked from network); 31 Dec 2006 23:39:51 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m31.grp.scd.yahoo.com with QMQP; 31 Dec 2006 23:39:51 -0000\r\nReceived: from unknown (HELO mail05.syd.optusnet.com.au) (211.29.132.186)\n  by mta6.grp.scd.yahoo.com with SMTP; 31 Dec 2006 23:39:46 -0000\r\nReceived: from c210-49-93-69.rochd2.qld.optusnet.com.au (c210-49-93-69.rochd2.qld.optusnet.com.au [210.49.93.69])\n\tby mail05.syd.optusnet.com.au (8.13.1/8.13.1) with ESMTP id kBVNaan3023578;\n\tMon, 1 Jan 2007 10:36:38 +1100\r\nTo: Hugh Winkler &lt;hughw@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;927441b30612301708i20a9ac2eof97b0a9b80c946dd@...&gt;\r\nReferences: &lt;927441b30612281257l7e78242bs956220be1c51fe46@...&gt;\n\t &lt;1167518724.4637.12.camel@...&gt;\n\t &lt;927441b30612301708i20a9ac2eof97b0a9b80c946dd@...&gt;\r\nContent-Type: text/plain\r\nDate: Mon, 01 Jan 2007 09:36:36 +1000\r\nMessage-Id: &lt;1167608196.5157.15.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.3 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] Atompub missed opportunity\r\nX-Yahoo-Group-Post: member; u=184797058; y=uejddoE6BF2Tm8h1E14K_rLhLo4XHu-p15CdoDT_ooCvtSA\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Sat, 2006-12-30 at 19:08 -0600, Hugh Winkler wrote:\n&gt; On 12/30/06, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n&gt; &gt; I&#39;m not sure who you think will interpret this form on the client\n&gt; side.\n&gt; &gt; You see, the thing is that the atom document format is already a\n&gt; form. A\n&gt; &gt; client has already received the form by being programmed in a\n&gt; particular\n&gt; &gt; way, and is now submitting the form. It knows what information\n&gt; should be\n&gt; &gt; placed in each of the named fields. It knows how to construct the\n&gt; end\n&gt; &gt; document.\n&gt; Ah, but it is a standard form for all servers -- not for my particular\n&gt; server app. And to know what kind of form to submit, you read a spec\n&gt; -- you did not GET the description from the server. It&#39;s all baked in\n&gt; at design time.\n\nExactly. It has been agreed ahead of time. Now, I can just send my POST\nrequest and know that the server understands a useful subset of what I\nam sending them.\n\nWhat you are suggesting is that I first need to obtain a schema document\n(which you are calling a form) to see if the server is actually\nunderstanding only a subset of the atom vocabulary. Then I need to\ncustomize my content to conform to this subset. As a machine, I don&#39;t\nhave any good way of doing that. If I come up to a server that has\nsupport for an unexpectedly small subset of atom, I then have to\ncustomize my content in an unexpected way. That is to say, I way that\nnoone programmed me to customise my content in :)\n\nThe server, on the other hand, is in a good position to customise the\ncontent. It knows which subset of atom it understands, and it knows what\natom is generally. It knows multiple authors might be required, so is in\na position to either model those multiple authors or use an algorithm to\nselect an author for its model from the available list.\n\n&gt; What I proposed is that the form delivered by a server have just the\n&gt; elements that make sense for the server. My server might not know what\n&gt; to do with a &lt;source&gt; element. Using the standard &quot;form&quot;, my server\n&gt; has to have handling in place if you submit a &lt;source&gt; element, and it\n&gt; has to describe to you the problem if you do submit &lt;source&gt; and my\n&gt; server rejects it.\n\nAll atom elements make sense to the server, even if they don&#39;t fit the\nserver&#39;s internal model. The server implements atom, after all. What you\nare suggesting is adding an extra message exchange to move the\ncomplexity of fitting atom into the server&#39;s model back to the client.\nNeither side is going to be great at solving a model mismatch problem,\nbut the client is likely to be downright incapable. If you really want\nto be able to sensibly deal with this class of server you need to encode\nhow that class of server behaves into the atom specifications (as you\nsuggested was already being done). Then the server will use a\ngenerally-accepted algorithm to select which author it will use from the\nones available, and the client will know to put the most important\nauthor first.\n\n&gt; &gt; One might argue that the client and server should communicate online\n&gt; &gt; before the client submits data that the server might not accept. In\n&gt; one\n&gt; &gt; of the examples you mentioned earlier the server might not support\n&gt; the\n&gt; &gt; full atom protocol, in that multiple authors may not be supported.\n&gt; To be clear -- whether a server has a model supporting multiple\n&gt; authors is a modeling, not a message exchange protocol, issue.\n\nThe server&#39;s model doesn&#39;t allow for a full fidelity translation of the\natom protocol. The model doesn&#39;t allow the full protocol to be\nunderstood.\n\n&gt; &gt; As\n&gt; &gt; such, the server might be able to publish a document that indicated\n&gt; a\n&gt; &gt; subset of the atom format that is usable.\n&gt; &gt;I suggest that while a\n&gt; &gt; document format could be produced to communicate which subset is\n&gt; &gt; important, the cost would likely outweigh the value. Certainly,\n&gt; allowing\n&gt; &gt; for additional elements in the form would not be meaningful to a\n&gt; client\n&gt; &gt; without further specificaiton as to what those elements mean. Any\n&gt; &gt; additions of this kind would likely require code changes to the\n&gt; client.\n&gt; \n&gt; Well I was focusing on what clients POST to servers, but it seemed\n&gt; like you began that para talking about what servers publish?\n&gt; \n&gt; In the case of servers describing what clients can send to them, that\n&gt; would just be the Xform, so I&#39;m not clear how the cost outweighs the\n&gt; value -- it seems simple enough in this case.\n\nHrrm... why not xml schema? Why not relax ng? Why not another format?\n\nNaming a particular specification doesn&#39;t really help. A standardisation\nprocess still has to take place to achieve widespread acceptance.\n\nYour server can still offer an xform or a HTML form to allow new atom\nentries to be created by humans. That needs no further standardisation\nto occur. However, machine to machine communications is best and\nsimplest when the specification can be treated as the form that needs to\nbe filled out and understood. Additional negotiation between client and\nserver reduces the value of the standard and increases complexity\neverwhere.\n\nBenjamin.\n\n\n"}}