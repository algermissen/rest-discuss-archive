{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"L-FhfakaXrFvW9Ql5t1vvMKUpvNjix4W6_nwIe03cmbVpFEX_418DZ0pHJpqzem-Kl8nOiypiUJvStoNq0dNewlatROGqayOhq5O-5dgna4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using URIs and PUT to model state machines.","postDate":"1194207664","msgId":9733,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdCOUY5OTg0LUY0MDQtNDU2Qi05MjE3LTU5M0Q5QkRENzQ0N0BtYWMuY29tPg==","inReplyToHeader":"PGZna3EyZyttbXVjQGVHcm91cHMuY29tPg==","referencesHeader":"PGZna3EyZyttbXVjQGVHcm91cHMuY29tPg=="},"prevInTopic":9730,"nextInTopic":9738,"prevInTime":9732,"nextInTime":9734,"topicId":9730,"numMessagesInTopic":8,"msgSnippet":"Hi amaeze77,    ....got a real name we can use? ... If you do that you are *not* implementing a RESTful system. ... It looks like you are digging around in the","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 69184 invoked from network); 4 Nov 2007 20:21:10 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m55.grp.scd.yahoo.com with QMQP; 4 Nov 2007 20:21:10 -0000\r\nX-Received: from unknown (HELO smtpoutm.mac.com) (17.148.16.67)\n  by mta15.grp.scd.yahoo.com with SMTP; 4 Nov 2007 20:21:10 -0000\r\nX-Received: from mac.com (asmtp007-s [10.150.69.70])\n\tby smtpoutm.mac.com (Xserve/smtpout004/MantshX 4.0) with ESMTP id lA4KLA9L023587;\n\tSun, 4 Nov 2007 12:21:10 -0800 (PST)\r\nX-Received: from [10.0.1.200] (e176047131.adsl.alicedsl.de [85.176.47.131])\n\t(authenticated bits=0)\n\tby mac.com (Xserve/asmtp007/MantshX 4.0) with ESMTP id lA4KL6Gu022784;\n\tSun, 4 Nov 2007 12:21:07 -0800 (PST)\r\nIn-Reply-To: &lt;fgkq2g+mmuc@...&gt;\r\nReferences: &lt;fgkq2g+mmuc@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;7B9F9984-F404-456B-9217-593D9BDD7447@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Sun, 4 Nov 2007 21:21:04 +0100\r\nTo: amaeze77 &lt;amaeze@...&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Using URIs and PUT to model state machines.\r\nX-Yahoo-Group-Post: member; u=289191104; y=d9vGqBnQCH9rph9CBanbLCoolmn8llI2SRnE9DkSwsdATdYgCLK66Fln\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nHi amaeze77,    ....got a real name we can use?\n\nOn 04.11.2007, at 16:56, amaeze77 wrote:\n\n&gt; Inherent to message-based architectures is the inclusion of\n&gt; operations in the message.  I use message-based architecture here,\n&gt; because I see it as being different from so-called RPC.\n&gt;\n&gt; REST-based architecture somewhat supports message-based architectures\n&gt; via the use of &quot;overloaded POST&quot;.  I can instruct a URI on what\n&gt; operation to perform based on the contents of the POST body.\n&gt;\n\nIf you do that you are *not* implementing a RESTful system.\n\n&gt; However, the beauty of REST is exposed when semantic (business) state\n&gt; transitions are exposed as (sub)resources at well-defined URIs.\n&gt; The &#39;PUT&#39; to the (sub)resource simply becomes a\n&gt; straightforward &quot;update&quot; to the resource itself - no hidden meaning\n&gt; is in it.\n\nIt looks like you are digging around in the right corners, but you  \nare not quite\nthere. What is important for the business transaction going on  \nbetween the\ntwo parties is proper alignment of their respective states with  \nregard to the\noverall business process (e.g. order-acceptance). The order in your  \nexample\nshould IMHO not keep the state of the ordering process but be  \nunderstood as\na business document that indicates a certain significant state change  \nof one party\nand communicates it to the other. An order for example tells the  \nseller that the\nbuyer has changed from &#39;maybe-wanting-to-order&#39; to &#39;having ordered&#39;.\nThe technical HTTP response of the seller process then tells the  \nbuyer if the\nseller has received the order (no acceptance yet!).\n\nAt this point the states of buyer and seller are aligned (they both  \nknow what\nstate the other is in with regard to the process).\n\nThe next state alignment to be made would be for the seller to tell  \nthe client it\naccepts (or rejects) the order and a different business document  \nwould be used for\nthat message. Just as in traditional business making based on postal  \nmail.\n\nIf the buyer wants to cancel the order, it sends an order cancel  \ndocument to\nwherever the seller told the client to send it to.\n\nNow the &#39;hypermedia as the engine of application state constraint&#39;  \nenters the scene:\nIn order for the two parties to conduct business, they have to have  \nshared understanding\nof the business documents (e.g. both must know and agree what an  \norder looks like) and\nof the possible state alignments (e.g. order cancelation). When a  \nparticular state alignment\ncan be initiated and where is communicated by one party to the other  \nusing hypermedia.\nFor example would the seller include in the order acceptance message  \nsome URI for the\nclient to send cancelations to. The client, knowing about the meaning  \nof a cancellation, would\nunderstand this &#39;form&#39; (-&gt; google for Mark&#39;s RDFForms) and keep the  \nURI in case cancellation\nmust be made.\n\nThe beauty is that the coupling is minimized (you cannot do these  \nstate alignments with less\nshared knowledge) and therefore the freedom for both parties to  \nchange is maximized. All\nother software architectural styles that enable these kinds of  \ncoordinations require more\ncoupling.\n\nYou might want to take a look at UBL[1] for the business docs necessary.\n\nHTH,\nJan\n\n[1] http://docs.oasis-open.org/ubl/os-UBL-2.0/UBL-2.0.html\n\n\n\n&gt;\n&gt; For example, I could POST a &quot;ship&quot; instruction to &#92;orders&#92;[order_id]\n&gt; as the following:\n&gt; &lt;state&gt;ship&lt;/state&gt;\n&gt; &lt;qty&gt;5&lt;/qty&gt;\n&gt;\n&gt; However, if I want to &quot;cancel&quot; that same order using the same\n&gt; resource (URI), the body of my POST would change to:\n&gt; &lt;state&gt;cancel&lt;/state&gt;\n&gt; &lt;qty&gt;0&lt;/qty&gt;\n&gt;\n&gt; In my opinion, a much cleaner design is to create distinct (sub)\n&gt; resources for each state transition i.e. &#92;orders&#92;[order_id]&#92;shipped\n&gt; and &#92;orders&#92;[order_id]&#92;canceled then PUT indicating the need for the\n&gt; creation of the new state while updating the underlying resource.\n&gt; The PUT would return (at least) a link to the next logical state - it\n&gt; could return links to all possible &quot;next&quot; states.  A GET on these\n&gt; (sub)resources would return true or false to indicate whether the\n&gt; parent resource is at that current state (business).\n&gt;\n&gt; An interesting result of such design is that it forces a designer to\n&gt; look at a system (and the entities in system) in the context of a\n&gt; state machine.  State machines are powerful!\n&gt;\n&gt; I&#39;ve been looking at REST for about a year and some these ideas are\n&gt; just beginning to crystallize.\n&gt;\n&gt; Any thoughts on this?\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}