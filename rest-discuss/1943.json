{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"gAd500R0WgHmQ8MnznPcZBfqUiCvaOQRgCZWx1zmvKB6Tj6J5w0eWWNA6Fzh4vb10Vql6FlvyLJd3m7JucTne-RucxoLn7yPcoESBxLKrA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] URI/identifier creation/ownership","postDate":"1027481027","msgId":1943,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMzFPZ05ZWEdVZnFNQXNjeHQwMDAwMDBiNUBob3RtYWlsLmNvbT4=","referencesHeader":"PDAwNGQwMWMyMzI3ZSQ2MjJlMTMxMCQ2NTAwYThjMEBzZWFpcnRobGFwdG9wPiA8T0UzNHhzbGF0ejVlSVVWb0c1bTAwMDA1ZjRkQGhvdG1haWwuY29tPiA8MDBjNDAxYzIzMmFjJGNkYjAxZDMwJDY1MDBhOGMwQHNlYWlydGhsYXB0b3A+"},"prevInTopic":1942,"nextInTopic":1956,"prevInTime":1942,"nextInTime":1944,"topicId":1928,"numMessagesInTopic":5,"msgSnippet":"... From: Seairth Jacobs  ... No, the more RESTlike a system is, the more RESTlike it is. You have to measure against the components","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 24 Jul 2002 03:22:42 -0000\r\nReceived: (qmail 1364 invoked from network); 24 Jul 2002 03:22:40 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 24 Jul 2002 03:22:40 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.88)\n  by mta3.grp.scd.yahoo.com with SMTP; 24 Jul 2002 03:22:40 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Tue, 23 Jul 2002 20:22:40 -0700\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nReferences: &lt;004d01c2327e$622e1310$6500a8c0@seairthlaptop&gt; &lt;OE34xslatz5eIUVoG5m00005f4d@...&gt; &lt;00c401c232ac$cdb01d30$6500a8c0@seairthlaptop&gt;\r\nSubject: Re: [rest-discuss] URI/identifier creation/ownership\r\nDate: Tue, 23 Jul 2002 20:23:47 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nMessage-ID: &lt;OE31OgNYXGUfqMAscxt000000b5@...&gt;\r\nX-OriginalArrivalTime: 24 Jul 2002 03:22:40.0835 (UTC) FILETIME=[5E15A930:01C232C1]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\n\n&gt;\n&gt; The more loosely coupled the system is, the more RESTlike it is (ignoring\n&gt; all other issues).\nNo, the more RESTlike a system is, the more RESTlike it is. You have to\nmeasure against the components identified by the REST architectural style\n(client, gateway, origin server, intermediary, stateless messages,\nresources/representations, etc. etc.) to be RESTlike.\n\n&gt;\n&gt; If this is the case, then does it make sense to always use POST in an html\n&gt; form, regardless of whether the actual request is idempotent (and\ntherefore\n&gt; could be handled with a GET) or not?\nGET .vs. POST isn&#39;t about idempotent or not, its about read .vs. write.\n\n&gt; POST would treat the URI as opaque,\n&gt; whereas the GET would not.  POST would be more loosely coupled than GET.\nPOST treats the URI as opaque, but if the resource you want to interact with\nis identified by URI+message.body then you have very tight coupling going\non.\nIf you /did/ use POST all the time - then you lose the addressability\naspect, since servers and clients need to know both URI + body in order to\ndo a retrieval (and you&#39;d need yet another piece to indicate that POST isn&#39;t\ntrying to modify, its trying to read).\n\nIn a Web browser the content of the POST is constructed according to similar\nrules as the URL.\nThis also results in coupling between server and client - but it is easier\nto manage, since the submitted content (the message body) has a declared\ntype identified by the Content-Type header in the request. And it isn&#39;t\n/required/ to be &quot;application/x-www-form-urlencoded&quot; you can POST text/xml\nor image/jpg or whatever you want .\n\nThe POST and GET are values exposed in HTTP messages in order to allow at\nleast a minimal amount of processing on /any/ message encountered by any\ncomponent.\n\n\n&gt;\n&gt; Frankly, I agree with this view.  Quite coincidentally, I follow this this\n&gt; practice in my web applications.  The only way a URL contains a query\nstring\n&gt; is if the server created it.  As far as the browser is concerned, the URL\nis\n&gt; entirely opaque.  What would people who say that POST is often misused say\n&gt; about this? (I can already imagine...)\nIt&#39;s a better system that keeps URI construction close to the origin server.\nHow do you provide discovery of URIs for resources that are logically\nrelated to resources on other systems?\nFor example, if I have the UPC code for a pair of tennis shoes, and you have\ntennis shoes for sale, how do I learn what your URI is for that particular\nshoe?\n\n\n\n"}}