{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","replyTo":"SENDER","senderId":"cGakOSprFIfjT_5l25LjJmMVAfk8u7e-RgERK9QyPnAwtVZ8OS6wai6RilUH9cVDigMrGDhZKjECI7XEQgQ82cLJOQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] FYI: XForms and PUT","postDate":"1011220624","msgId":34,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwMTE2MjIzNy5SQUEwODM3NUBtYXJrYmFrZXIuY2E+","inReplyToHeader":"PDIwMDIwMTE2MTMxMDEyLkIyNTA0NUBtbm90Lm5ldD4gZnJvbSAiTWFyayBOb3R0aW5naGFtIiBhdCBKYW4gMTYsIDIwMDIgMDE6MTA6MTMgUE0="},"prevInTopic":33,"nextInTopic":35,"prevInTime":33,"nextInTime":35,"topicId":13,"numMessagesInTopic":36,"msgSnippet":"... It s unclear.  I d agree with what s written iff the resource in question was known to be a variant of some other resource.  But I ve almost thought that","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 16 Jan 2002 22:35:57 -0000\r\nReceived: (qmail 99840 invoked from network); 16 Jan 2002 22:35:57 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m6.grp.snv.yahoo.com with QMQP; 16 Jan 2002 22:35:57 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta3.grp.snv.yahoo.com with SMTP; 16 Jan 2002 22:35:57 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id RAA08375;\n\tWed, 16 Jan 2002 17:37:04 -0500\r\nMessage-Id: &lt;200201162237.RAA08375@...&gt;\r\nSubject: Re: [rest-discuss] FYI: XForms and PUT\r\nTo: mnot@... (Mark Nottingham)\r\nDate: Wed, 16 Jan 2002 17:37:04 -0500 (EST)\r\nCc: paul@... (Paul Prescod), rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;20020116131012.B25045@...&gt; from &quot;Mark Nottingham&quot; at Jan 16, 2002 01:10:13 PM\r\nX-Mailer: ELM [version 2.5 PL3]\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\n&gt; &gt; Actually, that&#39;s not quite right.  There&#39;s content negotiation to be\n&gt; &gt; considered.\n&gt; \n&gt; &gt;From 2616 (section 9.6, PUT)\n&gt; \n&gt;   The PUT method requests that the enclosed entity be stored under\n&gt;   the supplied Request-URI. If the Request-URI refers to an already\n&gt;   existing resource, the enclosed entity SHOULD be considered as a\n&gt;   modified version of the one residing on the origin server. If the\n&gt;   Request-URI does not point to an existing resource, and that URI is\n&gt;   capable of being defined as a new resource by the requesting user\n&gt;   agent, the origin server can create the resource with that URI. \n&gt;   [...]\n&gt; \n&gt; This seems to imply that in the case of PUT, the Web *is* a\n&gt; filesystem (&quot;be stored under&quot;).\n\nIt&#39;s unclear.  I&#39;d agree with what&#39;s written iff the resource in\nquestion was known to be a variant of some other resource.  But I&#39;ve\nalmost thought that invoking PUT on a known variant resource is bad\npractice - why not just PUT to the non-variant (primary) resource?\nHmm, maybe because variants are most likely to be cacheable?\n\nAnyway you look at a set of variant resources though, if you effect\na state change on one, the others should all change.  From a cache\nvalidity POV, the important thing is that the cache knows what\nthe variants are (which Content-Location would have told it, if it\nwas paying attention).\n\n&gt;   If the request passes through a cache and the Request-URI identifies\n&gt;   one or more currently cached entities, those entries SHOULD be\n&gt;   treated as stale. Responses to this method are not cacheable.\n&gt; \n&gt; So this blows away the caching arguments; in that sense, it&#39;s\n&gt; equivalent to POST.\n\nI don&#39;t think so.  It says that the request invalidates whatever&#39;s\nalready in the cache, which is a given.  It also says that the response\nto the PUT is not cacheable, which is fine because side effects are\ninvolved.  It doesn&#39;t say that the request entity can&#39;t be used as\na cached request response, though I know that this isn&#39;t default\nbehaviour and that you&#39;d have to futz with Cache-Control (though\nI haven&#39;t looked into how you&#39;d do this).\n\n&gt;   The fundamental difference between the POST and PUT requests is\n&gt;   reflected in the different meaning of the Request-URI. The URI in a\n&gt;   POST request identifies the resource that will handle the enclosed\n&gt;   entity. That resource might be a data-accepting process, a gateway\n&gt;   to some other protocol, or a separate entity that accepts\n&gt;   annotations.  In contrast, the URI in a PUT request identifies the\n&gt;   entity enclosed with the request -- the user agent knows what URI\n&gt;   is intended and the server MUST NOT attempt to apply the request to\n&gt;   some other resource.  If the server desires that the request be\n&gt;   applied to a different URI, it MUST send a 301 (Moved Permanently)\n&gt;   response; the user agent MAY then make its own decision regarding\n&gt;   whether or not to redirect the request.\n&gt; \n&gt; This *seems* to limit the effects of a PUT to the identified\n&gt; resource, as well as support the &#39;filesystem&#39; view. This also\n&gt; theoretically makes the &#39;accept=...&#39; hacks even hackier, because a\n&gt; PUT would indeed affect the state of other resources (i.e., the\n&gt; resource identified with the accept=... hack, vs. the one identified\n&gt; w/o it). Which means tha tthe accept=... hack shouldn&#39;t be available\n&gt; on PUTed requests; only POSTs (which can use a method=... hack).\n\nI agree.  I don&#39;t like that wording.  Though what it says is mostly\ntrue, it&#39;s a bit misleading because it chooses to avoid defining the\nmeaning of PUT independant of the Request-URI, which can be done.\nIf you consider the Request-URI always identifies the resource upon\nwhich the method applies, then the meaning of PUT and POST can easily\nbe defined in those terms. i.e. PUT = replace or create the identified\nresource, POST = submit/add to the identified resource.\n\n&gt;   HTTP/1.1 does not define how a PUT method affects the state of an\n&gt;   origin server.\n&gt; \n&gt; I&#39;d like to know what the intent of this is; it doesn&#39;t say state of\n&gt; the *resource*, but state of the *origin server*.\n\nYah, me too.\n\n&gt;   Unless otherwise specified for a particular entity-header, the\n&gt;   entity-headers in the PUT request SHOULD be applied to the resource\n&gt;   created or modified by the PUT.\n&gt; \n&gt; And this seems to cover conneg. I read this as saying &quot;if it has a\n&gt; &#39;Content-Foo: bar&#39; request header, negotiate subsequent GETs as if\n&gt; it&#39;s Foo is bar.&quot; This view seems to be supported by:\n&gt; \n&gt;   The recipient of the entity MUST NOT ignore any Content-*\n&gt;   (e.g. Content-Range) headers that it does not understand or implement\n&gt;   and MUST return a 501 (Not Implemented) response in such cases.\n\nRight.  No problem there.  That&#39;s where my Subject-is-Representation\nheader would come in handy too.  No need to assume an entity header\nstarts with &quot;Content-&quot;;\n\nhttp://internet.conveyor.com/RESTwiki/moin.cgi/HttpAndTheSemanticWeb \n\nMB\n--\nMark Baker, Chief Science Officer, Planetfred, Inc.\nOttawa, Ontario, CANADA.      mbaker@...\nhttp://www.markbaker.ca   http://www.planetfred.com\n\n"}}