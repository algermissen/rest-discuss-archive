{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119917303,"authorName":"Walden Mathews","from":"Walden Mathews &lt;waldenm@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"FhcOTPfO8CC696lOoxCLYHvL-VDgLzzuams2UkI8gmnNolnsqEfol6bY8guhDY0KqPbMkLtx0ceNYpTu7HXxYDKFLHGVlU7BmEEQBss","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: sessions and infinite URIs","postDate":"1076641478","msgId":4187,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMmEwMWMzZjFkZSQxZGUwYzc5MCQwOTAyYThjMEB3YWxkZW5kZXNrdG9wPg==","referencesHeader":"PGMwaGM3dCtibjE1QGVHcm91cHMuY29tPg=="},"prevInTopic":4186,"nextInTopic":4188,"prevInTime":4186,"nextInTime":4188,"topicId":4141,"numMessagesInTopic":67,"msgSnippet":"I think the confusion may arise from the sloppy way in which the word stateless is sometimes used.  If I m not mistaken, REST is interested in stateless","rawEmail":"Return-Path: &lt;waldenm@...&gt;\r\nX-Sender: waldenm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 24007 invoked from network); 13 Feb 2004 03:04:37 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m14.grp.scd.yahoo.com with QMQP; 13 Feb 2004 03:04:37 -0000\r\nReceived: from unknown (HELO mta10.srv.hcvlny.cv.net) (167.206.5.85)\n  by mta6.grp.scd.yahoo.com with SMTP; 13 Feb 2004 03:04:36 -0000\r\nReceived: from waldendesktop (ool-182c4877.dyn.optonline.net [24.44.72.119])\n by mta10.srv.hcvlny.cv.net\n (iPlanet Messaging Server 5.2 HotFix 1.16 (built May 14 2003))\n with SMTP id &lt;0HT0001DE5VOBP@...&gt; for\n rest-discuss@yahoogroups.com; Thu, 12 Feb 2004 22:04:36 -0500 (EST)\r\nDate: Thu, 12 Feb 2004 22:04:38 -0500\r\nTo: justin_t_sampson &lt;justin.sampson@...&gt;,\n rest-discuss@yahoogroups.com\r\nMessage-id: &lt;002a01c3f1de$1de0c790$0902a8c0@waldendesktop&gt;\r\nMIME-version: 1.0\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nContent-type: text/plain; charset=iso-8859-1\r\nContent-transfer-encoding: 7BIT\r\nX-Priority: 3\r\nX-MSMail-priority: Normal\r\nReferences: &lt;c0hc7t+bn15@...&gt;\r\nX-eGroups-Remote-IP: 167.206.5.85\r\nFrom: Walden Mathews &lt;waldenm@...&gt;\r\nReply-To: Walden Mathews &lt;waldenm@...&gt;\r\nSubject: Re: [rest-discuss] Re: sessions and infinite URIs\r\nX-Yahoo-Group-Post: member; u=119917303\r\nX-Yahoo-Profile: waldenmathews\r\n\r\nI think the confusion may arise from the sloppy way in which\nthe word &quot;stateless&quot; is sometimes used.  If I&#39;m not mistaken, REST\nis interested in stateless servers, i.e., servers shouldn&#39;t be burdened\nwith remembering what clients had said on previous encounters.\n\nWhen you talk about &quot;stateless messages&quot; you&#39;re talking nonsense,\nstrictly speaking.  A message is a collection of bits, and that&#39;s\nstate.  So strict analysis is a dead end.\n\nWhat&#39;s likely meant by &quot;stateless message&quot; is really the opposite:\nthat the message capitulates the state of the conversation&#39;s progress\nso that the server doesn&#39;t need to.\n\nA cookie that says &quot;we&#39;re on step 6 of our business process&quot;, in\na message designed to take us to step seven, is fine, as it tells the\nserver everything it needs to know to proceed.\n\nA cookie that says &quot;I&#39;m session &#39;27htiwydn5&&&#39;, remember me&quot;\nhas the opposite effect.  It&#39;s pointing the server to server-side state\nstored for the session.\n\nSo you need to know more than just that there&#39;s a cookie.  The\nkey and underlying issue is whether the server has dedicated\nstorage resources to remembering a conversation.  All else is\nwindow dressing.\n\nHow&#39;m I doin&#39;?\n\nWalden\n\n\n----- Original Message ----- \nFrom: &quot;justin_t_sampson&quot; &lt;justin.sampson@...&gt;\nTo: &lt;rest-discuss@yahoogroups.com&gt;\nSent: Thursday, February 12, 2004 9:19 PM\nSubject: [rest-discuss] Re: sessions and infinite URIs\n\n\n: Roy T. Fielding wrote:\n: \n: &gt; &gt; &gt; &gt; Does that mean that session cookies are okay, as long as\n: &gt; &gt; &gt; &gt; I use URI syntax for the session key and the session\n: &gt; &gt; &gt; &gt; state is persisted?\n: &gt; &gt; &gt;\n: &gt; &gt; &gt; Yes and no.\n: &gt; &gt;\n: &gt; &gt; That means &quot;no,&quot; right? ;-)\n: &gt;\n: &gt; I meant that, if the session is defined as an aspect of the\n: &gt; resource that is being acted upon (the effect of placing it in\n: &gt; the URI instead of in the cookie header fields), then it does\n: &gt; not violate the stateless constraint. However, that doesn&#39;t\n: &gt; mean it is &quot;okay&quot;, because doing so makes the URI worthless for\n: &gt; later reference (infinite URIs due to session id being in the\n: &gt; URI). The set of URIs can be reduced to a more natural, finite\n: &gt; set by inserting the user id instead. Better yet, when\n: &gt; possible, avoid placing temporary state on the server and thus\n: &gt; keep the URI free of any user state information. That is easy\n: &gt; to do for new architectures -- much harder when dealing with\n: &gt; legacy browsers.\n: \n: Aaaah, okay. I didn&#39;t express myself clearly.\n: \n: When I asked, &quot;Does that mean that session cookies are okay, as\n: long as I use URI syntax for the session key and the session\n: state is persisted?&quot; I didn&#39;t mean putting the session key in the\n: URI, I meant putting the session key in a cookie but using the\n: URI syntax for composing the key itself. That is, assigning a URI\n: to the session, persisting the session state, and then putting\n: the session URI in a cookie.\n: \n: I don&#39;t see the difference in principle for REST between that and\n: using a big random number for the session key and keeping the\n: session state in memory, in terms of what &quot;stateful&quot; means, but I\n: believe you had suggested there would be a difference.\n: \n: &gt; In any case, the problem with cookies in the header is *not*\n: &gt; that they violate statelessness, but rather that they violate\n: &gt; visibility (because nobody knows why they are there) and\n: &gt; reliability (because they are associated with the site rather\n: &gt; than the current state of the user&#39;s interface). A message\n: &gt; containing cookie headers is still stateless, assuming that the\n: &gt; cookie isn&#39;t specified relative to some prior state (which\n: &gt; would be very weird).\n: \n: Really? That&#39;s odd, because reading your dissertation just now\n: for the definition of statelessness I was about to suppose that\n: even putting the session key in the URI itself would be\n: considered stateful according to REST: &quot;communication must be\n: stateless in nature [...] such that each request from client to\n: server must contain all of the information necessary to\n: understand the request, and cannot take advantage of any stored\n: context on the server. Session state is therefore kept entirely\n: on the client.\n: \n: &quot;This constraint induces the properties of visibility,\n: reliability, and scalability. Visibility is improved because a\n: monitoring system does not have to look beyond a single request\n: datum in order to determine the full nature of the request.\n: Reliability is improved because it eases the task of recovering\n: from partial failures. Scalability is improved because not having\n: to store state between requests allows the server component to\n: quickly free resources, and further simplifies implementation\n: because the server doesn&#39;t have to manage resource usage across\n: requests.&quot;\n: \n: &lt;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.ht\n: m#sec_5_1_3&gt;\n: \n: The &quot;managing resource usage&quot; problem applies equally to all the\n: ways we&#39;ve described for managing session state, suggesting that\n: the fact of the session state itself is &quot;stateful&quot; and therefore\n: in violation of REST regardless of how the client passes the key\n: to the server. You&#39;ve said as much in this discussion, except\n: that you&#39;re saying that&#39;s not what &quot;statefulness&quot; means, which I\n: find rather confusing.\n: \n: Justin\n: \n: \n: \n: \n:  \n: Yahoo! Groups Links\n: \n: \n: \n:  \n: \n: \n: __________ NOD32 1.619 (20040209) Information __________\n: \n: This message was checked by NOD32 Antivirus System.\n: http://www.nod32.com\n: \n: \n\n"}}