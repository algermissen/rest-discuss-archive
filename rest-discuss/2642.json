{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":120683643,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"9dO2rHQ15uraVoLChDEAvImf5PimgmZviIaPJCGFbWOByo-0d4TSFUH8SpiF3VVpL490x6Ky2kmJYTegUbN5Eoi--gT2ld3FsQmFPH_bgJyY","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] newbie question (web service composition)","postDate":"1032641614","msgId":2642,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEOENEQzRFLkUxMkNBMTIyQGNvbXB1dGVyLm9yZz4=","referencesHeader":"PDNEOENBOTY5LjRGMzIxNzUwQGNvbXB1dGVyLm9yZz4gPE9FMzBhVVIxVzJOaDhiMVNXcG4wMDAwMWZiM0Bob3RtYWlsLmNvbT4="},"prevInTopic":2641,"nextInTopic":2643,"prevInTime":2641,"nextInTime":2643,"topicId":2639,"numMessagesInTopic":6,"msgSnippet":"Mike, thanks for the very helpfull answer (comments below). ... Ok, I thought so. ... Yes, that s obvious now that you remined me ;-) ... Hmm, as far as I","rawEmail":"Return-Path: &lt;algermissen@...&gt;\r\nX-Sender: algermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 21 Sep 2002 20:54:04 -0000\r\nReceived: (qmail 17765 invoked from network); 21 Sep 2002 20:54:04 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 21 Sep 2002 20:54:04 -0000\r\nReceived: from unknown (HELO p10085234.pureserver.de) (217.160.90.85)\n  by mta3.grp.scd.yahoo.com with SMTP; 21 Sep 2002 20:54:05 -0000\r\nReceived: from computer.org (p3EE2D8DB.dip0.t-ipconnect.de [62.226.216.219])\n\t(authenticated (0 bits))\n\tby p10085234.pureserver.de (8.11.3/8.11.3/SuSE Linux 8.11.1-0.5) with ESMTP id g8LKs2I13613\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 21 Sep 2002 22:54:03 +0200\r\nSender: jan@...\r\nMessage-ID: &lt;3D8CDC4E.E12CA122@...&gt;\r\nDate: Sat, 21 Sep 2002 22:53:34 +0200\r\nX-Mailer: Mozilla 4.76 [en] (X11; U; Linux 2.4.2-2 i586)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] newbie question (web service composition)\r\nReferences: &lt;3D8CA969.4F321750@...&gt; &lt;OE30aUR1W2Nh8b1SWpn00001fb3@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jan Algermissen &lt;algermissen@...&gt;\r\nX-Yahoo-Group-Post: member; u=120683643\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nMike,\n\nthanks for the very helpfull answer\n(comments below).\n\n&quot;S. Mike Dierken&quot; wrote:\n&gt; \n&gt; ----- Original Message -----\n&gt; From: &quot;Jan Algermissen&quot; &lt;algermissen@...&gt;\n&gt; &gt;\n&gt; &gt; a) it is appropriate to think of the whole index as a concept of it&#39;s own\n&gt; and\n&gt; &gt;    to respond with different representations of it according to some\n&gt; parameters in\n&gt; &gt;    the query string of a GET request:\n&gt; &gt;\n&gt; &gt;    http:/foo.bar/archive/index?range=a-c\n&gt; &gt;    http:/foo.bar/archive/index?range=d-f\n&gt; &gt;    ...\n&gt; &gt;\n&gt; &gt;    Again: is it a good idea to think of the particular chunks of the index\n&gt; as\n&gt; &gt;    different representations of the concept of the index as a whole ?\n&gt;\n&gt; Addressing different chunks is a good idea. Some uses might not care - like\n&gt; if the data set was small and only occasionally used. But generally, my\n&gt; guess is that having chunks available is okay. If a client always gets all\n&gt; chunks, then you might as well stream the whole thing out in one chunk\n&gt; though. If you have good caching knowledge, then maybe chunks help.\n&gt; \n&gt; Maybe you should address the chunks not by lexical range, but by words\n&gt; themselves. Depends on what data the client is likely to retrieve - try to\n&gt; put that stuff in one chunk.\n&gt; \n&gt; &gt;\n&gt; &gt;    Or am I actually wrong when I think that the two URIs above identify\n&gt; the same\n&gt; &gt;    resource (is the query string part of the URI? )?\n&gt; The query parameters are part of the URI, so these two URI are different\n&gt; resources.\n\nOk, I thought so.\n&gt; \n&gt; &gt;\n&gt; &gt;    I think that I so far understood that fragment identifiers are not part\n&gt; of the\n&gt; &gt;    URI (don&#39;t affect what the URI identifies) and so I wonder if it would\n&gt; be better\n&gt; &gt;    to move the range part in a fragment:\n&gt; &gt;\n&gt; &gt;    http:/foo.bar/archive/index#a-c\n&gt; &gt;    http:/foo.bar/archive/index#d-f\n&gt; This would cause a single &#39;index&#39; resource to be retrieved - on large chunk.\n\nYes, that&#39;s obvious now that you remined me ;-)\n \n&gt; &gt;\n&gt; &gt;\n&gt; &gt; or if\n&gt; &gt;\n&gt; &gt; b) the above is actually the wrong wy to think and if it would be better\n&gt; to view all\n&gt; &gt;    the different chunks of the index as concepts themselves and to create\n&gt; resources\n&gt; &gt;    for them:\n&gt; &gt;\n&gt; &gt;    http:/foo.bar/archive/index\n&gt; &gt;\n&gt; &gt;    might then return something like\n&gt; &gt;\n&gt; &gt;    &lt;index&gt;\n&gt; &gt;      &lt;subindex range=&quot;a-c&quot; href=&quot;http:/foo.bar/archive/index/a-c&quot; /&gt;\n&gt; &gt;      &lt;subindex range=&quot;d-f&quot; href=&quot;http:/foo.bar/archive/index/d-f&quot; /&gt;\n&gt; &gt;      ...\n&gt; &gt;    &lt;/index&gt;\n&gt; &gt;\n&gt; &gt;    which would allow the server to control the size of the chunks\n&gt; dynamically.\n&gt; &gt;    If the index is quite small it might &#39;choose&#39; to return\n&gt; &gt;\n&gt; &gt;    &lt;index&gt;\n&gt; &gt;      &lt;subindex range=&quot;a-m&quot; href=&quot;http:/foo.bar/archive/index/a-m&quot; /&gt;\n&gt; &gt;      &lt;subindex range=&quot;n-z&quot; href=&quot;http:/foo.bar/archive/index/n-z&quot; /&gt;\n&gt; &gt;    &lt;/index&gt;\n&gt; &gt;\n&gt; &gt;    instead.\n&gt; Good use of hypertext to give central control & still minimize client\n&gt; coupling. However (and this is from previous arguments PaulP and I have\n&gt; had), the client is still dependent on the &quot;range=&#39;a-m&#39;&quot; concept - the name\n&gt; &#39;range&#39; and the syntax, content and meaning of the values. The client has to\n&gt; be coded to understand what the acceptable values, their allowable ranges,\n&gt; etc.\n\nHmm, as far as I understood one idea is to put\nlinks to subsequent resources inside a representation to give the client a path\nto follow _without_ having the client to construct the URIs (using some deeper\nknowledge of the server). Your answer sounds like the client would have to\nconstruct the URIs for the subindexes, am I missing something here ?\n\n&gt; An alternate would be to use your example #1 and use named query parameters\n&gt; with the same value space (letters with a dash between). \n\nDo you mean exactly like in example #1:\n\nhttp:/foo.bar/archive/index?range=a-c\n\nSo basically like search engines work ?\n\nI am using the &#39;drill-down&#39; effect that way, don&#39;t I ?\n\n&gt; This requires the\n&gt; server to support query terms, but that is really a trivial burden (some\n&gt; sort of mapping - path or query based - will always have to be done anyway)\n&gt; and generating query-based URIs is lighter weight than parsing XML and doing\n&gt; a content based query.\n\nHmm, this sounds as if there is a way to avoid having the client understand the\nsyntax of the answer ?\n\n&gt; \n&gt; &gt;    And it might also choose to return further subindexes (e.g. aa-am)\n&gt; &gt;    thus varying the number of drill-down levels depending on the index\n&gt; size.\n&gt; &gt;\n&gt; &gt; I haven&#39;t yet understood the REST principles enough to make a decision\n&gt; between\n&gt; &gt; a) and b) above (or yet something completely different?) and I would be\n&gt; very\n&gt; &gt; thankful for help with this.\n&gt; Good example and good questions. What kind of data size do you expect to\n&gt; encounter?\n\nThis was actually a hypothetical example (you might think of a digital library\nthat would also offer things like &#39;view a list of all authors and their publications&#39;).\nI am thinking at a very large scale where &#39;chunking&#39; would definitely be a neccessity.\n\n&gt;  What kind of clients do you wish to interact with?\n\nBrowsers (in which case I would return HTML) but also non-human clients like\nother services for example.\n\n&gt; Both are fairly RESTful.\n\nGood to hear ;-)\n&gt; \n&gt; Consider an alternate approach to exposing the map between a word and a list\n&gt; of documents.\n\n&gt; http://index.searchalert.net/documents/index?word=up\n&gt; \n&gt; This might not fit your larger system, but what is interesting about this is\n&gt; the potential to use POST on the same resource. \n\nYou mean that if the index is represented as a concept (resource) then querying\nit and adding to it should both be performed on the same resource ? Ah, I see that\nhttp://index.searchalert.net/documents/index?word=up is a resource that (might)\nmean &quot;the part of the index that represents all occurrences of &#39;up&#39;&quot; and that posting\na list of documents (URLs) to it would mean to add occurrences to that part of the index,\nyes ? Interesting!\n\n&gt; You could POST a list of\n&gt; documents that have &#39;up&#39; in them - which make the index manager purely an\n&gt; index manager and not a text parser. You could separate these two &#39;services&#39;\n&gt; (pieces of functionality) across the Web (assuming a bunch of other\n&gt; things...)\n\nYes, I see what you are up to. Thanks, that helped a lot.\n\nJan\n\n\n\n-- \nJan Algermissen\nConsultant & Programmer\n\nTel:   ++49 (0)40 89 700 511\n       ++49 (0)177 283 1440\nFax:   ++49 (0)40 89 700 841 \nEmail: algermissen@...\nWeb:   http://www.topicmapping.com\n\n"}}