{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"&quot;Sebastien Lambla&quot; &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"qgNTRj97mLqBZTVx8S4Lrq-n2w4kQORmKeykXOxhV-d4HMtH5kurd-vFxFuFGzoEv5EXP-D2aWv0CBxOtb-pDQKgKwhSUb5LXP_BU1s","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers","postDate":"1227806332","msgId":11629,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJMVTEwMi1EUzQwNzlDOUU4RTc4RDBBQ0I0MzIwNkI1MDUwQHBoeC5nYmw+","inReplyToHeader":"PDQ5MkVCNDJELjUwOTA4MDRAbXlrYW5qby5jby51az4=","referencesHeader":"PFAtSVJDLUVYQkUwMmRqYVMzNkkwMDAwMjk3ZUBFWC5VQ09QLkVEVT4gPDQ5MkU3NEFFLjYwMzA2MDFAbXlrYW5qby5jby51az4gPDQ5MkU3RUU1LjMwMDAyMDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkU4NDVDLjMwMzAwMDBAbXlrYW5qby5jby51az4gPDQ5MkU5NzZELjQwMzA0QGhhY2tjcmFmdC5uZXQ+IDw0OTJFQTJBQy4zMDUwOTA2QG15a2Fuam8uY28udWs+IDxCTFUxMDItRFMyMEUwNzM3NTUxMTU0MjM3Qzk5REVCNTA1MEBwaHguZ2JsPiA8NDkyRUI0MkQuNTA5MDgwNEBteWthbmpvLmNvLnVrPg=="},"prevInTopic":11628,"nextInTopic":11630,"prevInTime":11628,"nextInTime":11630,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... You re still missing the point. If two representations need to be addressed in a separate way they need two identifiers. Going back to the original ","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11779 invoked from network); 27 Nov 2008 17:19:14 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m53.grp.scd.yahoo.com with QMQP; 27 Nov 2008 17:19:14 -0000\r\nX-Received: from unknown (HELO blu0-omc4-s4.blu0.hotmail.com) (65.55.111.143)\n  by mta15.grp.scd.yahoo.com with SMTP; 27 Nov 2008 17:19:14 -0000\r\nX-Received: from BLU102-DS4 ([65.55.111.137]) by blu0-omc4-s4.blu0.hotmail.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Thu, 27 Nov 2008 09:19:14 -0800\r\nX-Originating-Email: [seb@...]\r\nMessage-ID: &lt;BLU102-DS4079C9E8E78D0ACB43206B5050@...&gt;\r\nReturn-Path: seb@...\r\nTo: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;P-IRC-EXBE02djaS36I0000297e@...&gt; &lt;492E74AE.6030601@...&gt; &lt;492E7EE5.3000201@...&gt; &lt;492E845C.3030000@...&gt; &lt;492E976D.40304@...&gt; &lt;492EA2AC.3050906@...&gt; &lt;BLU102-DS20E0737551154237C99DEB5050@...&gt; &lt;492EB42D.5090804@...&gt;\r\nIn-Reply-To: &lt;492EB42D.5090804@...&gt;\r\nDate: Thu, 27 Nov 2008 17:18:52 -0000\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;utf-8&quot;;\n\treply-type=response\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nImportance: Normal\r\nX-Mailer: Microsoft Windows Live Mail 14.0.5027.908\r\nX-MimeOLE: Produced By Microsoft MimeOLE V14.0.5027.908\r\nX-OriginalArrivalTime: 27 Nov 2008 17:19:14.0124 (UTC) FILETIME=[452640C0:01C950B4]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=331949899; y=JB0uQWf0oOBz_TRvITQf9igjlLfbPhh16EB0s_p7FgnLHWNw\r\nX-Yahoo-Profile: serialseb\r\n\r\n&gt; &quot;Note: [content negotiation] is not called &quot;format negotiation&quot; because \n&gt; the alternate representations may be of the same media type, but use \n&gt; different capabilities\n&gt;  of that type, be in different languages, etc.&quot;\n\nYou&#39;re still missing the point. If two representations need to be addressed \nin a separate way they need two identifiers. Going back to the original \nexample, the gaelic copy needs to be accessible independently from the \nenglish version, as they do not carry the same value, they&#39;re not the same \nthing. They are two representations of the same thing, but one has more \nvalue (is normaltive) than the other.\n\nWhat you propose is to influence conneg from the client to go to a specific \nresource.\nMikeIdentifier = Uri + Accept:\n\nThe web and REST depends on hypertext that is navigated through those \nidentifiers.\n\nWhat you propose doesn&#39;t bring any value compared to the existing \nfunctionality:\n\nRestIdentifier = Uri\n\nThe reverse proxy case is one you can solve using Link headers and without \nreinventing a new addressing scheme.\n\n&gt; That doesn&#39;t sound very uniform.\n\nCould you point me to reference material declaring that the resource / \nrepresentation couple has any uniform quality?\n\n&gt; representations aren&#39;t documents, they&#39;re formats - documents implies they \n&gt; are something in and of themselves which they are not. From my \n&gt; understanding a representation is just a specific *way* of representing a \n&gt; resource - i.e. a representation is nothing without a resource to \n&gt; represent. So I don&#39;t see how a representation can be compared with a \n&gt; document.\n\nAny byte stream that fully represents a resource is a representation and is \ncommonly referred as a document. I encourage you to go and read webarch \ndocuments on the matter.\n\n&gt; right.. you have to because there is no way in the markup to leverage HTTP \n&gt; conneg.. not because it &quot;wasn&#39;t intended for that&quot; or &quot;it doesn&#39;t work&quot;. \n&gt; Don&#39;t be ridiculous.\n\nRidiculous is not something I am afraid of. It seems to me the biggest issue \nyou seem to have is the lack of support for content type selection / \nprioritization exiting in current browsers. Your problem can easily be \nsolved using mobile code to help in selecting a resource. Click link -&gt; 303 \nreturned -&gt; UI displaying selection of conneg formats available.\n\n&gt;&gt;&gt;&gt;   [examples where cachce invalidatioon doesn&#39;t work]\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt; HATEOAS ?\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; Not sure I get you.\n&gt;&gt;\n&gt;\n&gt; Neither am I.\n\nMy apologies for not being clear enough.\n\nHow is Hypertext as the engine of application state a response or denial of \nthe provided examples where caching of related representations cannot be \ninvalidated using existing semantics?\n\n&gt; Reverse proxy work &#39;out of the box&#39; if URIs and representations were used \n&gt; strictly and in conjunction with the appropriate Vary headers in \n&gt; responses. This solely relied upon at the moment because lack of support \n&gt; in markup and browsers forces developers to implement URI-based conneg.\n\nYou are trying to correct a problem of linked representations and cache \ninvalidation, for which your solution brings very little benefits, and of an \nincredible cost: you want to redefine the identifier used to navigate. Not \nonly is that solution localized and restricted to html, it also breaks core \nscenarios where html is not the language, where people write down urls, \nwhere the whole web understand the notion of an identifier as a Uri.\n\nIf the problem is linking to specific representations without wanting \ndifferent Uris, a generic Uri with conneg is perfectly acceptable and doable \ntoday. Conneg was designed to either set the negotiation preferences in the \nUA or propose a list of documents that are available at a generic URI.\n\nIf neither solutions are acceptable, you are not in the scenario http conneg \nwas not designed for, and the solution is to promote representations by \ngiving them identifiers.\n\nIf you want cache invalidation to work on a generic URI, I will probably \npoint out that the Content-Location header is the one on which the caching \nwill be done, and it is rarely the case (and against the w3c recommendation \non generic uris) that this will be the same as the request uri.\n\nI hope you understand better why your proposed solution cannot solve the \naddressing problem without breaking the web, and doesn&#39;t solve the issue of \nlinked representations in a satisfactory way. \n\n\n"}}