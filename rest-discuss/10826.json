{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":302633978,"authorName":"Daniel Yokomizo","from":"&quot;Daniel Yokomizo&quot; &lt;daniel.yokomizo@...&gt;","profile":"daniel_yokomiso","replyTo":"SENDER","senderId":"2aReT-eYIhVXAJ_KuSKGEz0cpeZmWDBGwTlupduJl-a-Ad35MuI7ryE3BKPbbVMuRh13MkcGzonYPaBpP4b1iGh8FmD14mTx8jJOLR5cfcIRJxyi","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] CSRF attacks in RESTful authenticated web applications","postDate":"1211844605","msgId":10826,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU1YzZlY2FiMDgwNTI2MTYzMG00NDY3ZDBqMTg2ZWIyZmJmMGRiOTAxMkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDg3cHJyODdqNzguZnNmQGR1bGxpby5uZWRlcndhcmUubmw+","referencesHeader":"PDQ4M0IxRUJGLjMwMzA5MDNAa29lbG4uZGU+IDw4N2Z4czQ5MnRpLmZzZkBkdWxsaW8ubmVkZXJ3YXJlLm5sPgkgPDQ4M0IzMjM2LjgwNTA3MDBAa29lbG4uZGU+IDw4N3pscWM3a3J2LmZzZkBkdWxsaW8ubmVkZXJ3YXJlLm5sPgkgPEM0N0VFNTJGLUFGMjUtNDU5Ri1BQkUyLUUwMTdBMzc4N0RCQUBzdWJidS5vcmc+CSA8ODdwcnI4N2o3OC5mc2ZAZHVsbGlvLm5lZGVyd2FyZS5ubD4="},"prevInTopic":10825,"nextInTopic":10827,"prevInTime":10825,"nextInTime":10827,"topicId":10818,"numMessagesInTopic":21,"msgSnippet":"... Even if GET is safe, if the URL can be guessed and you use an exploitable authority, CSRF can leak confidential information. If my bank has a CSRF","rawEmail":"Return-Path: &lt;daniel.yokomizo@...&gt;\r\nX-Sender: daniel.yokomizo@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96467 invoked from network); 26 May 2008 23:30:06 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m43.grp.scd.yahoo.com with QMQP; 26 May 2008 23:30:06 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.152)\n  by mta17.grp.scd.yahoo.com with SMTP; 26 May 2008 23:30:06 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id l27so1346562fgb.21\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 26 May 2008 16:30:05 -0700 (PDT)\r\nX-Received: by 10.86.66.19 with SMTP id o19mr1580791fga.9.1211844605177;\n        Mon, 26 May 2008 16:30:05 -0700 (PDT)\r\nX-Received: by 10.86.9.6 with HTTP; Mon, 26 May 2008 16:30:05 -0700 (PDT)\r\nMessage-ID: &lt;e5c6ecab0805261630m4467d0j186eb2fbf0db9012@...&gt;\r\nDate: Mon, 26 May 2008 20:30:05 -0300\r\nTo: &quot;Berend de Boer&quot; &lt;berend@...&gt;\r\nCc: &quot;Subbu Allamaraju&quot; &lt;subbu@...&gt;, \n\t&quot;Simon Reinhardt&quot; &lt;simon.reinhardt@...&gt;, \n\trest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;87prr87j78.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;483B1EBF.3030903@...&gt; &lt;87fxs492ti.fsf@...&gt;\n\t &lt;483B3236.8050700@...&gt; &lt;87zlqc7krv.fsf@...&gt;\n\t &lt;C47EE52F-AF25-459F-ABE2-E017A3787DBA@...&gt;\n\t &lt;87prr87j78.fsf@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Daniel Yokomizo&quot; &lt;daniel.yokomizo@...&gt;\r\nSubject: Re: [rest-discuss] CSRF attacks in RESTful authenticated web applications\r\nX-Yahoo-Group-Post: member; u=302633978; y=jVbeHU5LH51wQdBh-c6OlhHO2iw0l9vWIUTeskMFkcWGYliCb558GMd9\r\nX-Yahoo-Profile: daniel_yokomiso\r\n\r\nOn Mon, May 26, 2008 at 8:13 PM, Berend de Boer &lt;berend@...&gt; wrote:\n&gt;=\r\n&gt;&gt;&gt;&gt;&gt; &quot;Subbu&quot; =3D=3D Subbu Allamaraju &lt;subbu@...&gt; writes:\n&gt;\n&gt;    Subb=\r\nu&gt; CRSF can be done via anything that can submit a request to a\n&gt;    Subbu&gt;=\r\n server, and hence includes images, script/css links as\n&gt;    Subbu&gt; well. S=\r\ncripting is not necessary.\n&gt;\n&gt; Right, but that&#39;s only for non-REST sites. I=\r\n.e. GET should be safe, so\n&gt; it doesn&#39;t matter if the URL is unguessable or=\r\n not.\n\nEven if GET is safe, if the URL can be guessed and you use an\nexploi=\r\ntable authority, CSRF can leak confidential information. If my\nbank has a C=\r\nSRF vulnerable account statement functionality any\nattacker can exploit the=\r\n bug and trick my browser into leaking my\ninformation. The GMAIL CSRF bug c=\r\nould even be exploited this way (it\nwas actually exploited by creation of f=\r\nilters) Alice request for a new\npassword for Bob in site X, also Alice know=\r\ns (or guesses) that Bob\nuses webmail from X, which is vulnerable to GET\n/ma=\r\nilbox/bob/new-messages, Alice tricks Bob into accessing a page that\nexploit=\r\ns the bug and sends the result of GET /mailbox/bob/new-messages\nto Alice&#39;s =\r\nown mailbox and voil=E1, Alice now can go to site X, access\nwith the new pa=\r\nssword and do whatever she wants with Bob stuff (in\nsite X). Confidentialit=\r\ny matters too.\n\n&gt;    Subbu&gt; The key point is that, irrespective of whether =\r\nthe target\n&gt;    Subbu&gt; site is XHR or not, all HTTP requests need to be val=\r\nidated\n&gt;    Subbu&gt; using URIs can that can not generated by arbitrary sites=\r\n, as\n&gt;    Subbu&gt; Daniel was explaining in his response.\n&gt;\n&gt; I think we miss=\r\n here the part: for non-REST sites. Isn&#39;t that the point?\n&gt;\n&gt; --\n&gt; Cheers,\n=\r\n&gt;\n&gt; Berend de Boer\n&gt;\n\nBest regards,\nDaniel Yokomizo.\n\n"}}