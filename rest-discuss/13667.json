{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":295857154,"authorName":"Dhananjay Nene","from":"Dhananjay Nene &lt;dhananjay.nene@...&gt;","profile":"dnene","replyTo":"SENDER","senderId":"N5W597V6w9SnSyaoc_nZodbxrbRK1zfLwVrI-Yp-4BMcjfUbR-qMlBeSnT1aAbB73HqAoshvytqmnSAVrFrvncUPc3BqixjRhrn89zQJ6nM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Application state","postDate":"1254657578","msgId":13667,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGJmOTdhYjg5MDkxMDA0MDQ1OWc0MTUxYjI3Ync2NzQ0ZTg1Nzk2Mzc1NjQzQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDJBMzc2NzVGLTM0ODItNDMwNC05NTRFLUYxNUU2MjZGMEEyQ0BzdWJidS5vcmc+","referencesHeader":"PGhhOGNjZyttNGM2QGVHcm91cHMuY29tPgkgPDJBMzc2NzVGLTM0ODItNDMwNC05NTRFLUYxNUU2MjZGMEEyQ0BzdWJidS5vcmc+"},"prevInTopic":13666,"nextInTopic":13668,"prevInTime":13666,"nextInTime":13668,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Wonder if referring to an analogous state machine, one could summarise as follows. The client s view of an application state is always a set of available","rawEmail":"Return-Path: &lt;dhananjay.nene@...&gt;\r\nX-Sender: dhananjay.nene@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57849 invoked from network); 4 Oct 2009 11:59:39 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.re1.yahoo.com with QMQP; 4 Oct 2009 11:59:39 -0000\r\nX-Received: from unknown (HELO mail-yw0-f201.google.com) (209.85.211.201)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Oct 2009 11:59:38 -0000\r\nX-Received: by ywh40 with SMTP id 40so2194306ywh.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 04 Oct 2009 04:59:38 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.151.29.8 with SMTP id g8mr7772582ybj.250.1254657578128; Sun, \n\t04 Oct 2009 04:59:38 -0700 (PDT)\r\nIn-Reply-To: &lt;2A37675F-3482-4304-954E-F15E626F0A2C@...&gt;\r\nReferences: &lt;ha8ccg+m4c6@...&gt;\n\t &lt;2A37675F-3482-4304-954E-F15E626F0A2C@...&gt;\r\nDate: Sun, 4 Oct 2009 17:29:38 +0530\r\nMessage-ID: &lt;bf97ab890910040459g4151b27bw6744e85796375643@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;, Ian &lt;iansrobinson@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=000e0cd5cb304256e104751abb97\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dhananjay Nene &lt;dhananjay.nene@...&gt;\r\nSubject: Re: [rest-discuss] Re: Application state\r\nX-Yahoo-Group-Post: member; u=295857154; y=taWN2NUbJH6Q62wX8uvCxx91E0X2GNteHaMi7mj7Nl4\r\nX-Yahoo-Profile: dnene\r\n\r\n\r\n--000e0cd5cb304256e104751abb97\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nWonder if referring to an analogous state machine, one could summarise as\nfollows. The client&#39;s view of an application state is always a set of\navailable transitions from an implicit inferrable state, and the server\nhaving conveyed the appropriate transitions has made unnecessary the need to\ntrack the client state at its end even though both are working off of some\nephemeral yet very relevant application state. Thus at the end of each\ntransiton, the client only knows the available transitions - which the\nserver served. The state itself while inferrable is irrelevant in the\ncontext of what the client needs to do next and how the server will satisfy\nthe client&#39;s future exercised preferences, -  once a transition is complete.\n\nOn Sun, Oct 4, 2009 at 9:09 AM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Thanks Ian. That answers my question.\n&gt;\n&gt; Just to add what you said, it is imperative for the server keep its\n&gt; concepts of state opaque from the client.\n&gt;\n&gt; Subbu\n&gt;\n&gt;\n&gt; On Oct 3, 2009, at 10:32 PM, Ian wrote:\n&gt;\n&gt; &gt; Hi Subbu\n&gt; &gt;\n&gt; &gt; Yes, I think most of this is opaque to clients. Perhaps I implied\n&gt; &gt; otherwise when I suggested clients might &quot;infer&quot; application state\n&gt; &gt; from received representations: I don&#39;t in fact think that&#39;s\n&gt; &gt; necessary of desirable. It&#39;s simpler than that. Clients are\n&gt; &gt; interested in achieving particular goals, and they evaluate received\n&gt; &gt; representations of resource state in light of those goals; that is,\n&gt; &gt; they choose to operate hypermedia controls - links or forms - based\n&gt; &gt; on their understanding of how the control&#39;s semantic context (ie.\n&gt; &gt; link relation value) relates to their current goal. In all this, the\n&gt; &gt; client need not necessarily know it&#39;s participating in a particular\n&gt; &gt; protocol, or be aware of the overall state of the distributed\n&gt; &gt; application.\n&gt; &gt;\n&gt; &gt; Is that in line with what you meant by this being opaque to the\n&gt; &gt; client?\n&gt; &gt;\n&gt; &gt; ian\n&gt; &gt;\n&gt; &gt; --- In rest-discuss@yahoogroups.com &lt;rest-discuss%40yahoogroups.com&gt;,\n&gt; Subbu Allamaraju &lt;subbu@...&gt;\n&gt; &gt; wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt; Hi Ian,\n&gt; &gt;&gt;\n&gt; &gt;&gt; That is an excellent description of state from the server&#39;s point of\n&gt; &gt;&gt; view. However, isn&#39;t all this opaque for the client?\n&gt; &gt;&gt;\n&gt; &gt;&gt; Subbu\n&gt; &gt;&gt;\n&gt; &gt;&gt; On Oct 3, 2009, at 6:16 PM, Ian wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt; Hi Christian\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; The state of an order - whether it has zero line items, or five, is\n&gt; &gt;&gt;&gt; resource state, not application state. The state of the order as\n&gt; &gt;&gt;&gt; held in the http session in your example is resource state, not\n&gt; &gt;&gt;&gt; application state.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; A simple - perhaps overly simple - ordering protocol might be\n&gt; &gt;&gt;&gt; something like: new order created -&gt; adding line items -&gt; order\n&gt; &gt;&gt;&gt; completed -&gt; payment received -&gt; order dispatched.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; In the observable interactions between client and server, this\n&gt; &gt;&gt;&gt; protocol is never visible &quot;as such&quot;: it can only be viewed through\n&gt; &gt;&gt;&gt; the lens of resource state.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; Over the course of a series of interactions, the &quot;application&quot; (the\n&gt; &gt;&gt;&gt; game being played out between the client and the server) will be in\n&gt; &gt;&gt;&gt; one or other of these states - as viewed from a &quot;God&#39;s eye&quot; point of\n&gt; &gt;&gt;&gt; view. Once the application state has progressed to &quot;order\n&gt; &gt;&gt;&gt; completed&quot;, for example, it&#39;s no longer possible to add manipulate\n&gt; &gt;&gt;&gt; resources so as to add new line items; it is, however, possible to\n&gt; &gt;&gt;&gt; manipulate resources such that the application state transitions to\n&gt; &gt;&gt;&gt; &quot;payment received&quot; (the client would do this by submitting a\n&gt; &gt;&gt;&gt; representation of a payment, perhaps).\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; The client and the server cooperate to execute this protocol, but\n&gt; &gt;&gt;&gt; they do so by transferring representations of resource state, not\n&gt; &gt;&gt;&gt; representations of application state. Application state is never\n&gt; &gt;&gt;&gt; represented &quot;as such&quot;; rather, it&#39;s inferred by the client based on\n&gt; &gt;&gt;&gt; on current representations of resource state. If the application is\n&gt; &gt;&gt;&gt; in the &quot;order completed&quot; state, the representation of the order\n&gt; &gt;&gt;&gt; received by the client may very well include a link that has been\n&gt; &gt;&gt;&gt; annotated with the link relation value &quot;payment&quot;. This isn&#39;t a\n&gt; &gt;&gt;&gt; straightforward representation of application state, however: it&#39;s\n&gt; &gt;&gt;&gt; an &quot;invitation&quot; to the client to transfer a representation of a\n&gt; &gt;&gt;&gt; payment to this linked resource. As a side-effect of transferring\n&gt; &gt;&gt;&gt; this representation, the &quot;application&quot; may transition to &quot;payment\n&gt; &gt;&gt;&gt; received&quot;.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; What&#39;s important here is that the server is really only interested\n&gt; &gt;&gt;&gt; in maintaining resource state, which includes maintaining the\n&gt; &gt;&gt;&gt; integrity of the lifecycles of the resources under its control, and\n&gt; &gt;&gt;&gt; the invariants that hold between resources (if any). The server\n&gt; &gt;&gt;&gt; can&#39;t be sure the client will ever take that step of submitting a\n&gt; &gt;&gt;&gt; payment, so why bother holding onto application state? Application\n&gt; &gt;&gt;&gt; state is something that can be reconstructed &quot;after the fact&quot;, by a\n&gt; &gt;&gt;&gt; client, or omniscient observer, based on the disposition of the\n&gt; &gt;&gt;&gt; current set of resource representations.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; So the order representation is always a representation of resource\n&gt; &gt;&gt;&gt; state. Application state, that &quot;snapshot of the instance of\n&gt; &gt;&gt;&gt; execution of a protocol&quot;, can only be inferred or reconstructed from\n&gt; &gt;&gt;&gt; resource state.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; Hope this is of some help. Apologies if I&#39;ve confused more than\n&gt; &gt;&gt;&gt; clarified; double apologies if I&#39;m just talking plain nonsense.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; ian\n&gt; &gt;&gt;&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ------------------------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;  \n&gt;\n\n\n\n-- \n--------------------------------------------------------\nblog: http://blog.dhananjaynene.com\ntwitter: http://twitter.com/dnene http://twitter.com/_pythonic\n\r\n--000e0cd5cb304256e104751abb97\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWonder if referring to an analogous state machine, one could summarise as f=\r\nollows. The client&#39;s view of an application state is always a set of av=\r\nailable transitions from an implicit inferrable state, and the server havin=\r\ng conveyed the appropriate transitions has made unnecessary the need to tra=\r\nck the client state at its end even though both are working off of some eph=\r\nemeral yet very relevant application state. Thus at the end of each transit=\r\non, the client only knows the available transitions - which the server serv=\r\ned. The state itself while inferrable is irrelevant in the context of what =\r\nthe client needs to do next and how the server will satisfy the client&#39;=\r\ns future exercised preferences, -=A0 once a transition is complete.&lt;br&gt;\n&lt;br=\r\n&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sun, Oct 4, 2009 at 9:09 AM, Subbu Allamaraj=\r\nu &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@...&lt;=\r\n/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-=\r\nleft: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left=\r\n: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;=\r\nspan&gt;=A0&lt;/span&gt;\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;\n&lt;div style=3D&quot;margin: 0pt; p=\r\nadding: 0pt 25px 0pt 0pt; width: 470px; float: left;&quot;&gt;\n\n    &lt;div&gt;\n         =\r\n         &lt;p&gt;Thanks Ian. That answers my question.&lt;br&gt;\n&lt;br&gt;\nJust to add what=\r\n you said, it is imperative for the server keep its  &lt;br&gt;\nconcepts of state=\r\n opaque from the client.&lt;br&gt;\n&lt;br&gt;\nSubbu&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5=\r\n&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nOn Oct 3, 2009, at 10:32 PM, Ian wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; Hi Subbu&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&gt; Yes, I think most of this is opaque to clients. Perhaps I=\r\n implied  &lt;br&gt;\n&gt; otherwise when I suggested clients might &quot;infer&qu=\r\not; application state  &lt;br&gt;\n&gt; from received representations: I don&#39;t=\r\n in fact think that&#39;s  &lt;br&gt;\n&gt; necessary of desirable. It&#39;s simpl=\r\ner than that. Clients are  &lt;br&gt;\n&gt; interested in achieving particular goa=\r\nls, and they evaluate received  &lt;br&gt;\n&gt; representations of resource state=\r\n in light of those goals; that is,  &lt;br&gt;\n&gt; they choose to operate hyperm=\r\nedia controls - links or forms - based  &lt;br&gt;\n&gt; on their understanding of=\r\n how the control&#39;s semantic context (ie.  &lt;br&gt;\n&gt; link relation value=\r\n) relates to their current goal. In all this, the  &lt;br&gt;\n&gt; client need no=\r\nt necessarily know it&#39;s participating in a particular  &lt;br&gt;\n&gt; protoc=\r\nol, or be aware of the overall state of the distributed  &lt;br&gt;\n&gt; applicat=\r\nion.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Is that in line with what you meant by this being op=\r\naque to the  &lt;br&gt;\n&gt; client?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; ian&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; --- =\r\nIn &lt;a href=3D&quot;mailto:rest-discuss%40yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest=\r\n-discuss@yahoogroups.com&lt;/a&gt;, Subbu Allamaraju &lt;subbu@...&gt;  &lt;br&gt;\n&gt;=\r\n wrote:&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; Hi Ian,&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; That is=\r\n an excellent description of state from the server&#39;s point of&lt;br&gt;\n&gt;&=\r\ngt; view. However, isn&#39;t all this opaque for the client?&lt;br&gt;\n&gt;&gt;&lt;b=\r\nr&gt;\n&gt;&gt; Subbu&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; On Oct 3, 2009, at 6:16 PM, Ian=\r\n wrote:&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt; Hi Christian&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt=\r\n;&gt;&gt; The state of an order - whether it has zero line items, or five, =\r\nis&lt;br&gt;\n&gt;&gt;&gt; resource state, not application state. The state of the=\r\n order as&lt;br&gt;\n&gt;&gt;&gt; held in the http session in your example is reso=\r\nurce state, not&lt;br&gt;\n&gt;&gt;&gt; application state.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&g=\r\nt;&gt;&gt; A simple - perhaps overly simple - ordering protocol might be&lt;br=\r\n&gt;\n&gt;&gt;&gt; something like: new order created -&gt; adding line items -&=\r\ngt; order&lt;br&gt;\n&gt;&gt;&gt; completed -&gt; payment received -&gt; order dis=\r\npatched.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt; In the observable interactions b=\r\netween client and server, this&lt;br&gt;\n&gt;&gt;&gt; protocol is never visible &=\r\nquot;as such&quot;: it can only be viewed through&lt;br&gt;\n&gt;&gt;&gt; the lens=\r\n of resource state.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt; Over the course of a =\r\nseries of interactions, the &quot;application&quot; (the&lt;br&gt;\n&gt;&gt;&gt; g=\r\name being played out between the client and the server) will be in&lt;br&gt;\n&gt;=\r\n&gt;&gt; one or other of these states - as viewed from a &quot;God&#39;s ey=\r\ne&quot; point of&lt;br&gt;\n&gt;&gt;&gt; view. Once the application state has prog=\r\nressed to &quot;order&lt;br&gt;\n&gt;&gt;&gt; completed&quot;, for example, it&#39=\r\n;s no longer possible to add manipulate&lt;br&gt;\n&gt;&gt;&gt; resources so as to=\r\n add new line items; it is, however, possible to&lt;br&gt;\n&gt;&gt;&gt; manipulat=\r\ne resources such that the application state transitions to&lt;br&gt;\n&gt;&gt;&gt;=\r\n &quot;payment received&quot; (the client would do this by submitting a&lt;br&gt;=\r\n\n&gt;&gt;&gt; representation of a payment, perhaps).&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&=\r\ngt;&gt;&gt; The client and the server cooperate to execute this protocol, b=\r\nut&lt;br&gt;\n&gt;&gt;&gt; they do so by transferring representations of resource =\r\nstate, not&lt;br&gt;\n&gt;&gt;&gt; representations of application state. Applicati=\r\non state is never&lt;br&gt;\n&gt;&gt;&gt; represented &quot;as such&quot;; rather,=\r\n it&#39;s inferred by the client based on&lt;br&gt;\n&gt;&gt;&gt; on current repre=\r\nsentations of resource state. If the application is&lt;br&gt;\n&gt;&gt;&gt; in the=\r\n &quot;order completed&quot; state, the representation of the order&lt;br&gt;\n&gt=\r\n;&gt;&gt; received by the client may very well include a link that has been=\r\n&lt;br&gt;\n&gt;&gt;&gt; annotated with the link relation value &quot;payment&quot=\r\n;. This isn&#39;t a&lt;br&gt;\n&gt;&gt;&gt; straightforward representation of appl=\r\nication state, however: it&#39;s&lt;br&gt;\n&gt;&gt;&gt; an &quot;invitation&quot;=\r\n to the client to transfer a representation of a&lt;br&gt;\n&gt;&gt;&gt; payment t=\r\no this linked resource. As a side-effect of transferring&lt;br&gt;\n&gt;&gt;&gt; t=\r\nhis representation, the &quot;application&quot; may transition to &quot;pay=\r\nment&lt;br&gt;\n&gt;&gt;&gt; received&quot;.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt; Wha=\r\nt&#39;s important here is that the server is really only interested&lt;br&gt;\n&gt=\r\n;&gt;&gt; in maintaining resource state, which includes maintaining the&lt;br&gt;=\r\n\n&gt;&gt;&gt; integrity of the lifecycles of the resources under its contro=\r\nl, and&lt;br&gt;\n&gt;&gt;&gt; the invariants that hold between resources (if any)=\r\n. The server&lt;br&gt;\n&gt;&gt;&gt; can&#39;t be sure the client will ever take t=\r\nhat step of submitting a&lt;br&gt;\n&gt;&gt;&gt; payment, so why bother holding on=\r\nto application state? Application&lt;br&gt;\n&gt;&gt;&gt; state is something that =\r\ncan be reconstructed &quot;after the fact&quot;, by a&lt;br&gt;\n&gt;&gt;&gt; clie=\r\nnt, or omniscient observer, based on the disposition of the&lt;br&gt;\n&gt;&gt;&gt=\r\n; current set of resource representations.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt=\r\n; So the order representation is always a representation of resource&lt;br&gt;\n&g=\r\nt;&gt;&gt; state. Application state, that &quot;snapshot of the instance of=\r\n&lt;br&gt;\n&gt;&gt;&gt; execution of a protocol&quot;, can only be inferred or re=\r\nconstructed from&lt;br&gt;\n&gt;&gt;&gt; resource state.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;=\r\n&gt;&gt; Hope this is of some help. Apologies if I&#39;ve confused more tha=\r\nn&lt;br&gt;\n&gt;&gt;&gt; clarified; double apologies if I&#39;m just talking plai=\r\nn nonsense.&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;&gt;&gt; ian&lt;br&gt;\n&gt;&gt;&gt;&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n&gt; -----------------=\r\n-------------------&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Yahoo! Groups Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div width=3D&quot;1&quot; style=3D&quot;col=\r\nor: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote=\r\n&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;br&gt;-- &lt;br&gt;-----------------------------------=\r\n---------------------&lt;br&gt;blog: &lt;a href=3D&quot;http://blog.dhananjaynene.com&quot;&gt;ht=\r\ntp://blog.dhananjaynene.com&lt;/a&gt; &lt;br&gt;twitter: &lt;a href=3D&quot;http://twitter.com/=\r\ndnene&quot;&gt;http://twitter.com/dnene&lt;/a&gt; &lt;a href=3D&quot;http://twitter.com/_pythonic=\r\n&quot;&gt;http://twitter.com/_pythonic&lt;/a&gt;&lt;br&gt;\n\n\r\n--000e0cd5cb304256e104751abb97--\r\n\n"}}