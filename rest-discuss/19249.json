{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211647110,"authorName":"Alexander Johannesen","from":"Alexander Johannesen &lt;alexander.johannesen@...&gt;","profile":"shelterit","replyTo":"SENDER","senderId":"bQEpVVgZqMK4z8KFX6pqeoq1hk5nkuBMR8EBKmQJkz7VD7_XCnUTu7HBBSq5ui8j3f1b4tvynBS92MezDXEH1OzlC1Kkohywm3UwlFO1MDa6HiIveHxwsYJu5gk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] API versioning","postDate":"1357710524","msgId":19249,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRjg5YkNBMk9XT1ZSRXRDRF9POW9INy16ODgxcG1kRVQ4cGdad2laLWtBODd6alJDUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDhFRDAyRDhBLTQ0QjAtNEMwNi05MzE1LTI3QzgyMzFERkM4QUBnbWFpbC5jb20+","referencesHeader":"PGtjZm1jMCthb2lkQGVHcm91cHMuY29tPgk8MjAxMzAxMDcyMDM3MTkuNWJhM2ZkZDIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8OUQ5NDUyQjAtQ0I1Qi00QkY3LThGMTgtRTEwRjZCNUZBNEI1QGdtYWlsLmNvbT4JPDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDhFRDAyRDhBLTQ0QjAtNEMwNi05MzE1LTI3QzgyMzFERkM4QUBnbWFpbC5jb20+"},"prevInTopic":19248,"nextInTopic":19250,"prevInTime":19248,"nextInTime":19250,"topicId":19240,"numMessagesInTopic":13,"msgSnippet":"Hiya, ... I think there needs to be made some distinctions between a shared understanding of models and a shared understanding of a resource in that model.","rawEmail":"Return-Path: &lt;alexander.johannesen@...&gt;\r\nX-Sender: alexander.johannesen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76173 invoked from network); 9 Jan 2013 05:48:45 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 9 Jan 2013 05:48:45 -0000\r\nX-Received: from unknown (HELO mail-vc0-f170.google.com) (209.85.220.170)\n  by mta2.grp.sp2.yahoo.com with SMTP; 9 Jan 2013 05:48:45 -0000\r\nX-Received: by mail-vc0-f170.google.com with SMTP id fl11so1242536vcb.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 08 Jan 2013 21:48:44 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.52.95.203 with SMTP id dm11mr76987685vdb.112.1357710524629;\n Tue, 08 Jan 2013 21:48:44 -0800 (PST)\r\nX-Received: by 10.58.118.226 with HTTP; Tue, 8 Jan 2013 21:48:44 -0800 (PST)\r\nIn-Reply-To: &lt;8ED02D8A-44B0-4C06-9315-27C8231DFC8A@...&gt;\r\nReferences: &lt;kcfmc0+aoid@...&gt;\n\t&lt;20130107203719.5ba3fdd2.eric@...&gt;\n\t&lt;9D9452B0-CB5B-4BF7-8F18-E10F6B5FA4B5@...&gt;\n\t&lt;20130107225713.3b1ff58c.eric@...&gt;\n\t&lt;8ED02D8A-44B0-4C06-9315-27C8231DFC8A@...&gt;\r\nDate: Wed, 9 Jan 2013 16:48:44 +1100\r\nMessage-ID: &lt;CAF89bCA2OWOVREtCD_O9oH7-z881pmdET8pgZwiZ-kA87zjRCQ@...&gt;\r\nTo: Keith Hassen &lt;keith.hassen@...&gt;\r\nCc: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;, \n\tREST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=bcaec50162a187440704d2d49dce\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alexander Johannesen &lt;alexander.johannesen@...&gt;\r\nSubject: Re: [rest-discuss] API versioning\r\nX-Yahoo-Group-Post: member; u=211647110; y=c2dGRB4df_R0D_Jh8Bqh96jgNZyK4Pb92XnDWfelolDoH0Pi\r\nX-Yahoo-Profile: shelterit\r\n\r\n\r\n--bcaec50162a187440704d2d49dce\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHiya,\n\n&gt; To be honest I&#39;m still not sure how this would be handled if two c=\r\nlients\n&gt; diverge in their understanding of the same resource.\n\nI think ther=\r\ne needs to be made some distinctions between a shared\nunderstanding of mode=\r\nls and a shared understanding of a resource in that\nmodel. Very often the m=\r\nodel stays the same, and so the entities of that\nmodels shouldn&#39;t change, o=\r\nr at best, provide a framework for dealing with\nsmall changes (like backwar=\r\nds compatibility of models).\n\nWhat many confuse as an API change in terms o=\r\nf REST is really a model\nchange, not a change to the language itself, which=\r\n is REST. Even if the\ninternal representation of a resource changes, its pl=\r\nace in the model most\noften does not, and neither does the interface. True =\r\nREST (TM) is\nrepresentational through hyperlinks, and applications should b=\r\ne guided\nthrough the model rather than having knowledge of it, at least in =\r\nan ideal\nworld (but people tend to think the overhead is too great for the =\r\nworld of\ncomputing to deal with). There&#39;s no point in changing the interfac=\r\ne nor the\nmodel if only representation changes. That is probably better dea=\r\nlt with\nthrough content negotiation, or, at worst, inside the representatio=\r\nn level\nitself.\n\nWhat&#39;s being stressed here is that the separation of inter=\r\nface, model and\ninternal representation most often do not require versionin=\r\ng, at least not\non the model and interface level. So;\n\n   /user/johnson\n   =\r\n/invoice/1023\n   /process/345/participants\n\nThese are URIs that probably do=\r\nn&#39;t change with &quot;versions&quot;. So why version\nthem at this level? The model is=\r\n probably fine, only semantics and\nrepresentations change, so why not deal =\r\nwith it at that level instead?\n\nHope that makes sense. :) If not, gives us =\r\nsome examples of a change from\none version to the next, and let&#39;s talk abou=\r\nt various ways to deal with the\nchanges in question.\n\n\nRegards,\n\nAlex\n\n\n\n\n\n=\r\n\n\n\nOn Wed, Jan 9, 2013 at 4:25 PM, Keith Hassen &lt;keith.hassen@...&gt; wr=\r\note:\n\n&gt; **\n&gt;\n&gt;\n&gt; First of all, thanks for the replies and perspective on RE=\r\nST.\n&gt;\n&gt; Backing up to the original question it seems like your particular t=\r\nake on\n&gt; it is that there&#39;s no need to version URIs or the resource represe=\r\nntations\n&gt; provided that a cautious approach is taken to resource evolution=\r\n.\n&gt;\n&gt; To be honest I&#39;m still not sure how this would be handled if two clie=\r\nnts\n&gt; diverge in their understanding of the same resource.  Perhaps that\n&gt; =\r\ndivergence leads us to different concepts and thus different resources and\n=\r\n&gt; I&#39;ve just been thinking about the problem incorrectly. :)\n&gt;\n&gt; Back to you=\r\nr most recent response...\n&gt;\n&gt; This seems to be a recommended practice that =\r\nI&#39;ve encountered in\n&gt;\n&gt; reading about RESTful implementations.\n&gt;\n&gt;\n&gt;\n&gt; Perf=\r\nectly good HTTP API practice; REST, not so much.  The point of\n&gt; media type=\r\ns is to provide loose coupling based on shared understanding\n&gt; of how the r=\r\nepresentation is to be decoded.\n&gt;\n&gt;\n&gt; I think I&#39;m actually talking about lo=\r\nose coupling, but this area seems a\n&gt; little fuzzy.  Comprehensive coverage=\r\n of media type seems to be missing\n&gt; from Fielding&#39;s dissertation.  The med=\r\nia type I specified was definitely\n&gt; too specific (vnd.example.com might be=\r\n a better choice rather than\n&gt; vnd.example.com.order, the latter effectivel=\r\ny binding the media type to the\n&gt; representation and starts smelling like R=\r\nPC modelling rather than the loose\n&gt; coupling promoted by the RESTful style=\r\n).\n&gt;\n&gt; So how tight should this coupling be?  And what about versioning?  I=\r\n&#39;m\n&gt; tempted to say that if versioning is required, do so in the URi rather=\r\n than\n&gt; the media type.  The media type seems to be more of an\n&gt; assertion/=\r\nexpectation regarding application context rather than a\n&gt; specification of =\r\nthe resource.\n&gt;\n&gt; It&#39;s amazing (or maybe not at all amazing) how divided th=\r\nis subject\n&gt; appears to be on the web.  This:\n&gt; http://www.informit.com/art=\r\nicles/article.aspx?p=3D1566460 is a pretty\n&gt; typical example.\n&gt;\n&gt; Thanks ag=\r\nain for the feedback.\n&gt;\n&gt; K\n&gt;\n&gt;\n&gt; On 2013-01-08, at 12:57 AM, Eric J. Bowma=\r\nn wrote:\n&gt;\n&gt; Keith Hassen wrote:\n&gt;\n&gt;\n&gt; This seems to be a recommended pract=\r\nice that I&#39;ve encountered in\n&gt;\n&gt; reading about RESTful implementations.\n&gt;\n&gt;=\r\n\n&gt;\n&gt; Perfectly good HTTP API practice; REST, not so much.  The point of\n&gt; m=\r\nedia types is to provide loose coupling based on shared understanding\n&gt; of =\r\nhow the representation is to be decoded.  Not tight coupling based\n&gt; on int=\r\nerpreting the content of the representation.  I&#39;ve never seen an\n&gt; order AP=\r\nI that couldn&#39;t be represented as HTML; despite any number of\n&gt; variations =\r\non this theme (or versions within), the media type doesn&#39;t\n&gt; vary between m=\r\nore order APIs on the Web than I can count.\n&gt;\n&gt; REST has no notion of resou=\r\nrce &quot;type&quot; let alone of exposing same on the\n&gt; wire, so I&#39;ve never understo=\r\nod why this solution is so prevalent in REST\n&gt; discussions.  Just media typ=\r\nes, which are agnostic as to what &quot;type&quot; of\n&gt; resource is being represented=\r\n (with rare exceptions as parameters).\n&gt;\n&gt;\n&gt; Anything else is up to the use=\r\nr-agent to work out.  This is actually\n&gt;\n&gt; easier for m2m than h2m; a v1 m2=\r\nm client should already ignore any\n&gt;\n&gt; hypertext it doesn&#39;t understand, rol=\r\nling out v2 can then re-use any\n&gt;\n&gt; non-deprecated bits of the API already =\r\npresent plus the new stuff,\n&gt;\n&gt; and ignore the deprecated stuff.  Can&#39;t it?=\r\n\n&gt;\n&gt;\n&gt; Not always, at least not in my experience. :)  I have found that\n&gt;\n&gt;=\r\n while breaking changes don&#39;t happen often, they *do* happen.  Add to\n&gt;\n&gt; t=\r\nhis the possibility of different types of API consumers that start\n&gt;\n&gt; off =\r\nimplementing your APIs the same way, but slowly (or rapidly!)\n&gt;\n&gt; diverge o=\r\nver time.  In some cases new resources (and thus new URIs)\n&gt;\n&gt; will suffice=\r\n, but in other cases what we are doing is very\n&gt;\n&gt; specifically *evolving* =\r\nthe resource representation to accommodate\n&gt;\n&gt; new requirements.\n&gt;\n&gt;\n&gt;\n&gt; Th=\r\nen design for graceful degradation (or progressive enhancement) using\n&gt; cli=\r\nent-side feature detection.  Just saying there&#39;s no need to swing\n&gt; the con=\r\nneg hammer to turn this particular screw.\n&gt;\n&gt; -Eric\n&gt;\n&gt;\n&gt;  \n&gt;\n\n\n\n-- \n Proje=\r\nct Wrangler, SOA, Information Alchemist, UX, RESTafarian, Topic Maps\n--- ht=\r\ntp://shelter.nu/blog/ ----------------------------------------------\n------=\r\n------------ http://www.google.com/profiles/alexander.johannesen ---\n\r\n--bcaec50162a187440704d2d49dce\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Hiya,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&gt;=A0&lt;span style=3D&quot;font-family=\r\n:arial,sans-serif;font-size:13px&quot;&gt;To be honest I&#39;m still not sure how t=\r\nhis would be handled if two clients=A0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font=\r\n-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; diverge in their understandin=\r\ng of the same resource.&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,=\r\nsans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial,=\r\n sans-serif&quot;&gt;I think there needs to be made some distinctions between a sha=\r\nred understanding of models and a shared understanding of a resource in tha=\r\nt model. Very often the model stays the same, and so the entities of that m=\r\nodels shouldn&#39;t change, or at best, provide a framework for dealing wit=\r\nh small changes (like backwards=A0compatibility=A0of models).&lt;/font&gt;&lt;/div&gt;\n=\r\n&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;fo=\r\nnt face=3D&quot;arial, sans-serif&quot;&gt;What many confuse as an API change in terms o=\r\nf REST is really a model change, not a change to the language itself, which=\r\n is REST. Even if the internal representation of a resource changes, its pl=\r\nace in the model most often does not, and neither does the interface. True =\r\nREST (TM) is representational through hyperlinks, and applications should b=\r\ne guided through the model rather than having knowledge of it, at least in =\r\nan ideal world (but people tend to think the overhead is too great for the =\r\nworld of computing to deal with). There&#39;s no point in changing the inte=\r\nrface nor the model if only representation changes. That is probably better=\r\n dealt with through content negotiation, or, at worst, inside the represent=\r\nation level itself.&lt;/font&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif=\r\n&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;What&#39;s b=\r\neing stressed here is that the separation of interface, model and internal =\r\nrepresentation most often do not require versioning, at least not on the mo=\r\ndel and interface level. So;&lt;/font&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;font face=3D&quot;arial, s=\r\nans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;=A0=\r\n =A0/user/johnson&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;=\r\n=A0 =A0/invoice/1023&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif=\r\n&quot;&gt;=A0 =A0/process/345/participants&lt;/font&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div s=\r\ntyle&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;These are URIs that probably don&#39;=\r\nt change with &quot;versions&quot;. So why version them at this level? The =\r\nmodel is probably fine, only semantics and representations change, so why n=\r\not deal with it at that level instead?&lt;/font&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;font face=\r\n=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, san=\r\ns-serif&quot;&gt;Hope that makes sense. :) If not, gives us some examples of a chan=\r\nge from one version to the next, and let&#39;s talk about various ways to d=\r\neal with the changes in question.&lt;/font&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;font face=3D&quot;ari=\r\nal, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif=\r\n&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;Regards,&lt;/fo=\r\nnt&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;\n&lt;/font&gt;&lt;/div&gt;&lt;div=\r\n style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;Alex&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font f=\r\nace=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, =\r\nsans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-ser=\r\nif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,=\r\nsans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family=\r\n:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font=\r\n-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\r\n=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Jan 9, 2013 at =\r\n4:25 PM, Keith Hassen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:keith.hassen@=\r\ngmail.com&quot; target=3D&quot;_blank&quot;&gt;keith.hassen@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;b=\r\nr&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left=\r\n:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=\r\n=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div&gt;Firs=\r\nt of all, thanks for the replies and perspective on REST.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/d=\r\niv&gt;&lt;div&gt;Backing up to the original question it seems like your particular t=\r\nake on it is that there&#39;s no need to version URIs or the resource repre=\r\nsentations provided that a cautious approach is taken to resource evolution=\r\n.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To be honest I&#39;m still not sure how this wo=\r\nuld be handled if two clients diverge in their understanding of the same re=\r\nsource. =A0Perhaps that divergence leads us to different concepts and thus =\r\ndifferent resources and I&#39;ve just been thinking about the problem incor=\r\nrectly. :)&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Back to your most recent response...&lt;/=\r\ndiv&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;b=\r\nlockquote type=3D&quot;cite&quot;&gt;This seems to be a recommended practice that I&#39;=\r\nve encountered in&lt;br&gt;\n&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;reading about =\r\nRESTful implementations.&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/bl=\r\nockquote&gt;&lt;br&gt;Perfectly good HTTP API practice; REST, not so much. =A0The po=\r\nint of&lt;br&gt;media types is to provide loose coupling based on shared understa=\r\nnding&lt;br&gt;\nof how the representation is to be decoded. =A0&lt;/div&gt;&lt;/blockquote=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;I think I&#39;m actually talking about loose coupling=\r\n, but this area seems a little fuzzy. =A0Comprehensive coverage of media ty=\r\npe seems to be missing from Fielding&#39;s dissertation. =A0The media type =\r\nI specified was definitely too specific (&lt;a href=3D&quot;http://vnd.example.com&quot;=\r\n target=3D&quot;_blank&quot;&gt;vnd.example.com&lt;/a&gt; might be a better choice rather than=\r\n vnd.example.com.order, the latter effectively binding the media type to th=\r\ne representation and starts smelling like RPC modelling rather than the loo=\r\nse coupling promoted by the RESTful style).&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So ho=\r\nw tight should this coupling be? =A0And what about versioning? =A0I&#39;m t=\r\nempted to say that if versioning is required, do so in the URi rather than =\r\nthe media type. =A0The media type seems to be more of an assertion/expectat=\r\nion regarding application context rather than a specification of the resour=\r\nce.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&#39;s amazing (or maybe not at all amazing=\r\n) how divided this subject appears to be on the web. =A0This:=A0&lt;a href=3D&quot;=\r\nhttp://www.informit.com/articles/article.aspx?p=3D1566460&quot; target=3D&quot;_blank=\r\n&quot;&gt;http://www.informit.com/articles/article.aspx?p=3D1566460&lt;/a&gt;=A0is a pret=\r\nty typical example.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks again for the feedback=\r\n.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;K&lt;/div&gt;&lt;div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;On 2013-01-08, at 12:57 AM, Eric J. Bowman wrote:&lt;/di=\r\nv&gt;&lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;\n&lt;div&gt;Keith Hassen wrote:&lt;br&gt;&lt;blockquote ty=\r\npe=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;This seems to be a r=\r\necommended practice that I&#39;ve encountered in&lt;br&gt;&lt;/blockquote&gt;&lt;blockquot=\r\ne type=3D&quot;cite&quot;&gt;reading about RESTful implementations.&lt;br&gt;\n&lt;/blockquote&gt;&lt;bl=\r\nockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;Perfectly good HTTP API practic=\r\ne; REST, not so much. =A0The point of&lt;br&gt;media types is to provide loose co=\r\nupling based on shared understanding&lt;br&gt;of how the representation is to be =\r\ndecoded. =A0Not tight coupling based&lt;br&gt;\non interpreting the content of the=\r\n representation. =A0I&#39;ve never seen an&lt;br&gt;order API that couldn&#39;t b=\r\ne represented as HTML; despite any number of&lt;br&gt;variations on this theme (o=\r\nr versions within), the media type doesn&#39;t&lt;br&gt;\nvary between more order =\r\nAPIs on the Web than I can count.&lt;br&gt;&lt;br&gt;REST has no notion of resource &qu=\r\not;type&quot; let alone of exposing same on the&lt;br&gt;wire, so I&#39;ve never =\r\nunderstood why this solution is so prevalent in REST&lt;br&gt;\ndiscussions. =A0Ju=\r\nst media types, which are agnostic as to what &quot;type&quot; of&lt;br&gt;resour=\r\nce is being represented (with rare exceptions as parameters).&lt;br&gt;&lt;br&gt;&lt;block=\r\nquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;\n&lt;blockquote=\r\n type=3D&quot;cite&quot;&gt;Anything else is up to the user-agent to work out. =A0This i=\r\ns actually&lt;br&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquo=\r\nte type=3D&quot;cite&quot;&gt;easier for m2m than h2m; a v1 m2m client should already ig=\r\nnore any&lt;br&gt;\n&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquot=\r\ne type=3D&quot;cite&quot;&gt;hypertext it doesn&#39;t understand, rolling out v2 can the=\r\nn re-use any&lt;br&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockq=\r\nuote type=3D&quot;cite&quot;&gt;\nnon-deprecated bits of the API already present plus the=\r\n new stuff,&lt;br&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockqu=\r\note type=3D&quot;cite&quot;&gt;and ignore the deprecated stuff. =A0Can&#39;t it?&lt;br&gt;&lt;/bl=\r\nockquote&gt;&lt;/blockquote&gt;\n&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquo=\r\nte type=3D&quot;cite&quot;&gt;Not always, at least not in my experience. :) =A0I have fo=\r\nund that&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;while breaking changes d=\r\non&#39;t happen often, they *do* happen. =A0Add to&lt;br&gt;\n&lt;/blockquote&gt;&lt;blockq=\r\nuote type=3D&quot;cite&quot;&gt;this the possibility of different types of API consumers=\r\n that start&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;off implementing your=\r\n APIs the same way, but slowly (or rapidly!)&lt;br&gt;&lt;/blockquote&gt;\n&lt;blockquote t=\r\nype=3D&quot;cite&quot;&gt;diverge over time. =A0In some cases new resources (and thus ne=\r\nw URIs)&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;will suffice, but in othe=\r\nr cases what we are doing is very&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;=\r\n&gt;\nspecifically *evolving* the resource representation to accommodate&lt;br&gt;&lt;/b=\r\nlockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;new requirements.&lt;br&gt;&lt;/blockquote&gt;&lt;bloc=\r\nkquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;Then design for graceful degradat=\r\nion (or progressive enhancement) using&lt;br&gt;\nclient-side feature detection. =\r\n=A0Just saying there&#39;s no need to swing&lt;br&gt;the conneg hammer to turn th=\r\nis particular screw.&lt;br&gt;&lt;br&gt;-Eric&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:=\r\n0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;-- &lt;br&gt;=A0Project Wrangler, SOA, Information Alchemist, UX, RES=\r\nTafarian, Topic Maps&lt;br&gt;--- &lt;a href=3D&quot;http://shelter.nu/blog/&quot;&gt;http://shel=\r\nter.nu/blog/&lt;/a&gt; ----------------------------------------------&lt;br&gt;\n-------=\r\n----------- &lt;a href=3D&quot;http://www.google.com/profiles/alexander.johannesen&quot;=\r\n&gt;http://www.google.com/profiles/alexander.johannesen&lt;/a&gt; ---\n&lt;/div&gt;\n\r\n--bcaec50162a187440704d2d49dce--\r\n\n"}}