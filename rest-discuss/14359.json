{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":43616985,"authorName":"David Otaguro","from":"David Otaguro &lt;valence@...&gt;","profile":"dotaguro","replyTo":"SENDER","senderId":"_aiEZ1HP4kUdmJdK8TRZJI3jwWUScSgm_ZaBa2ffdT6BX2y_AjqgMIMfh4FQeLQOME7CmXa0vuRWTHM6YgCUpKLlItAjCta8MuR5Vg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST isn&#39;t hard to learn, it&#39;s just taught wrong.","postDate":"1261521609","msgId":14359,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PEE3RTRDNzg4LUI5ODItNDg3My1BQjYzLTU1NTAyMDVFNEFEN0BlYXJ0aGxpbmsubmV0Pg==","inReplyToHeader":"PDIwMDkxMjIyMTUxNzE1LjM2M2E1NWUzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDIwMDkxMjIwMjEyNjMzLjcxNWNhOTQyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDg3aXFjMHp6aWcud2wlYmVyZW5kQHBvYm94LmNvbT4gPDIwMDkxMjIwMjI0NjEyLmI4MzVmNTAyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDIwMDkxMjIwMjI1OTQwLjc1MzdlOTMxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDIwMDkxMjIxMDAzNjA1LjdjZDkwNzBiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDIwMDkxMjIxMTcwNzM1LjZiMzkxOWNlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPEJBNjU3OEYxLTQ3NzgtNDY0Ri1BRUM2LTlDQTYzQzRGMEJCRkBzdWJidS5vcmc+IDwzRkU5ODRGMi1GNThELTRGMkYtODhFNy1GRkJBMzFFMUI5RTJAaW5ub3EuY29tPiA8MjAwOTEyMjIxNDIyMzcuNDEwMDQyMDQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiA8RjQ5MUM2QTMtNzI5RS00MjYwLUJDODMtRjdDQTM3MzE4QTZFQGVhcnRobGluay5uZXQ+IDwyMDA5MTIyMjE1MTcxNS4zNjNhNTVlMy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":14356,"nextInTopic":14360,"prevInTime":14358,"nextInTime":14360,"topicId":14255,"numMessagesInTopic":44,"msgSnippet":"I guess where I fall down is that I see the REST vs. RPC models as paradigmatically different than procedural vs. OO... conceptually, I like to think that I","rawEmail":"Return-Path: &lt;valence@...&gt;\r\nReceived: (qmail 93791 invoked from network); 23 Dec 2009 14:13:49 -0000\r\nReceived: from unknown (98.137.34.45)\n  by m14.grp.re1.yahoo.com with QMQP; 23 Dec 2009 14:13:49 -0000\r\nReceived: from unknown (HELO n45b.bullet.mail.sp1.yahoo.com) (66.163.168.159)\n  by mta2.grp.sp2.yahoo.com with SMTP; 23 Dec 2009 14:13:49 -0000\r\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoogroups.com; s=lima; t=1261577600; bh=NsgLyIPHBOGU/XUWii+zkWaCe7Icatz3CHsc0gKVo4E=; h=Received:Received:X-Sender:X-Apparently-To:X-Received:X-Received:X-Received:X-Received:X-Received:X-VR-Score:X-Authority-Analysis:X-CM-Score:Mime-Version:Content-Type:In-Reply-To:Date:Cc:Message-Id:References:To:X-Mailer:X-Originating-IP:X-eGroups-Msg-Info:From:Subject:X-Yahoo-Group-Post:X-Yahoo-Profile:X-YGroups-SubInfo:Sender:X-Yahoo-Newman-Property:X-eGroups-Approved-By:X-eGroups-Auth; b=W+EWe9UfZ0a1rIASU8GmyTahzIXQuU0M2atreujsUslknHuTPcOZIb3bjhe/Vih0fBQXWQHjflZ0UPkGfwlaWjbK5KWsROfRhkGudsN2XvggAk6T4JbiJwJkuLJaSbvk\r\nReceived: from [69.147.65.151] by n45.bullet.mail.sp1.yahoo.com with NNFMP; 23 Dec 2009 14:13:20 -0000\r\nReceived: from [98.137.34.34] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 23 Dec 2009 14:13:20 -0000\r\nX-Sender: valence@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54821 invoked from network); 22 Dec 2009 22:40:10 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m13.grp.re1.yahoo.com with QMQP; 22 Dec 2009 22:40:10 -0000\r\nX-Received: from unknown (HELO fed1rmmtao102.cox.net) (68.230.241.44)\n  by mta2.grp.sp2.yahoo.com with SMTP; 22 Dec 2009 22:40:10 -0000\r\nX-Received: from fed1rmimpo03.cox.net ([70.169.32.75])\n          by fed1rmmtao102.cox.net\n          (InterMail vM.8.00.01.00 201-2244-105-20090324) with ESMTP\n          id &lt;20091222224011.LSCJ8308.fed1rmmtao102.cox.net@...&gt;;\n          Tue, 22 Dec 2009 17:40:11 -0500\r\nX-Received: from [10.0.1.253] ([68.111.73.15])\n\tby fed1rmimpo03.cox.net with bizsmtp\n\tid LNgA1d0020KnMuC04NgAsB; Tue, 22 Dec 2009 17:40:10 -0500\r\nX-VR-Score: -220.00\r\nX-Authority-Analysis: v=1.1 cv=hxRkenI+XOLoHPjz51PhBd6+pm8nOe1puOOeXS7yE/Y=\n c=1 sm=1 a=RHVfM3WMos8A:10 a=HY3BJH7jZTN/IYxRdnFHJQ==:17\n a=DULJOCK6Bf4SREqe56oA:9 a=2Q5OvKfabNoje3k57dEA:7\n a=Fxt7lH544Bq58bNKzVOCd85jcN8A:4 a=kYt4szkzAbslxC44:21 a=q20cdQhZnXCrluo-:21\n a=cHJ0JJvEAAAA:8 a=qV0mfD4mAAAA:8 a=uBH6jHMKAAAA:20 a=CjxXgO3LAAAA:8\n a=aoIPMOUgAAAA:20 a=G_5s8neSAAAA:8 a=ghG0_ZF4ge_zUqGrUZEA:9\n a=lHY_RXJiPEiJPoYWJ9cA:7 a=kvur1xkGSTgTeVcyTPhxjbaZKlkA:4 a=nC4pwr58s-4A:10\n a=ao4RW71Vw8YA:10 a=HY3BJH7jZTN/IYxRdnFHJQ==:117\r\nX-CM-Score: 0.00\r\nMime-Version: 1.0 (Apple Message framework v1077)\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-13--253431787\r\nIn-Reply-To: &lt;20091222151715.363a55e3.eric@...&gt;\r\nDate: Tue, 22 Dec 2009 14:40:09 -0800\r\nCc: Stefan Tilkov &lt;stefan.tilkov@...&gt;,\n rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;A7E4C788-B982-4873-AB63-5550205E4AD7@...&gt;\r\nReferences: &lt;20091220212633.715ca942.eric@...&gt; &lt;87iqc0zzig.wl%berend@...&gt; &lt;20091220224612.b835f502.eric@...&gt; &lt;20091220225940.7537e931.eric@...&gt; &lt;20091221003605.7cd9070b.eric@...&gt; &lt;20091221170735.6b3919ce.eric@...&gt; &lt;BA6578F1-4778-464F-AEC6-9CA63C4F0BBF@...&gt; &lt;3FE984F2-F58D-4F2F-88E7-FFBA31E1B9E2@...&gt; &lt;20091222142237.41004204.eric@...&gt; &lt;F491C6A3-729E-4260-BC83-F7CA37318A6E@...&gt; &lt;20091222151715.363a55e3.eric@...&gt;\r\nTo: Eric J. Bowman &lt;eric@...&gt;\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: David Otaguro &lt;valence@...&gt;\r\nSubject: Re: [rest-discuss] REST isn&#39;t hard to learn, it&#39;s just taught wrong.\r\nX-Yahoo-Group-Post: member; u=43616985; y=1bUdwpHYlLwhzlCfleKEADQ1zB76cjRS4udeVA0TWx_2wlA\r\nX-Yahoo-Profile: dotaguro\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 23 Dec 2009 14:13:20 -0000\r\n\r\n\r\n--Apple-Mail-13--253431787\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/plain;\n\tcharset=windows-1252\r\n\r\nI guess where I fall down is that I see the REST vs. RPC models as paradigm=\r\natically different than procedural vs. OO... conceptually, I like to think =\r\nthat I more or less grok what REST is, but I keep running into posts in thi=\r\ns list that suggest that I&#39;m still missing very crucial concepts.  \n\nAs suc=\r\nh, it&#39;s not that I&#39;m looking for a reference implementation per se, but rat=\r\nher just a reference example that I can test my understanding against, whic=\r\nh is what I think you&#39;re trying to achieve.\n\nI agree completely with your a=\r\npproach... if we could get a RESTful shopping cart, then that gives a usefu=\r\nl example that takes us from system ontology/domain (shopping cart) to REST=\r\nful model.  \n\nWhile I think there might be differences about the semantic m=\r\nodel for a shopping cart (ask 3 architects to model something and you get 9=\r\n answers), if we agree on a notional data model, it seems like the senior p=\r\neople on this list should easily be able to render that into a RESTful arch=\r\nitectural style...\n\nDave.\n\nOn Dec 22, 2009, at 2:17 PM, Eric J. Bowman wrot=\r\ne:\n\n&gt; Hi David,\n&gt; \n&gt; You may well be the 1,000th person to post exactly the=\r\n same sentiments\n&gt; to this group, over the years. The basic problem, is tha=\r\nt any REST-\n&gt; based architectural Model has an infinite number of valid\n&gt; I=\r\nmplementations. Thus there can&#39;t be such a thing as a &quot;reference\n&gt; implemen=\r\ntation&quot;. The closest we come is systems built around Atom\n&gt; Protocol, and o=\r\nf course the GET-and-POST-based HTML Web sites, of which\n&gt; millions are RES=\r\nTful yet none are sexy enough to really help anyone\n&gt; with the systems they=\r\n&#39;re trying to implement.\n&gt; \n&gt; My goal here, is to figure out a way (not tod=\r\nay, by any means) we can\n&gt; all agree on to Model REST architectures. If we =\r\ncan develop a REST\n&gt; architectural Model for a shopping cart, then any numb=\r\ner of\n&gt; implementation ideas may be posted to the list and their mappings t=\r\no\n&gt; the model evaluated in a common lingo. Nobody has to map the entire\n&gt; m=\r\nodel, but the shortcomings of such an implementation can be agreed\n&gt; upon i=\r\nn terms of benefits and consequences.\n&gt; \n&gt; The conversation around here can=\r\n then change. We can point to shopping\n&gt; cart implementations in the real w=\r\norld, and evaluate them against our\n&gt; Model. We can then discuss the conseq=\r\nuences of a failed mapping, in\n&gt; terms of the goals of the system we&#39;re eva=\r\nluating (e.g. Amazon). I may\n&gt; be off on a wild goose chase with this, but =\r\nI think (as your post so\n&gt; painfully reminds all of us) it&#39;s obvious that R=\r\nEST has failed on the\n&gt; Web for anything more complex than blogging.\n&gt; \n&gt; W=\r\ne need to stop discussing REST in terms of implementation, and start\n&gt; disc=\r\nussing it in terms of how well implementations map to a REST\n&gt; architectura=\r\nl Model, and the benefits and consequences of the success\n&gt; or failure of s=\r\nuch mapping to be implemented.\n&gt; \n&gt; -Eric\n&gt; \n&gt; David Otaguro wrote:\n&gt; &gt;\n&gt; &gt;=\r\n Maybe I&#39;ve just not found it, but one of the biggest headaches I&#39;ve\n&gt; &gt; se=\r\nen in explaining REST is the lack of a generally agreed on, well\n&gt; &gt; explai=\r\nned reference example demonstrating the RESTful approach for a\n&gt; &gt; reasonab=\r\nly complex domain and how it differs/improves on a POXy RPC\n&gt; &gt; approach. \n=\r\n&gt; &gt; \n&gt; &gt; The usual examples I&#39;ve seen are either so trivial as to be\n&gt; &gt; ef=\r\nfectively useless, or lack a consensus validating that the approach\n&gt; &gt; rea=\r\nlly does embody the core ideals of REST. When all the major\n&gt; &gt; published &quot;=\r\nREST-ish&quot; APIs (e.g Amazon) end up with the criticism that\n&gt; &gt; they&#39;re just=\r\n POXy RPC, or confuse representation with resource, it\n&gt; &gt; becomes hard to =\r\npoint to an example and say, &quot;If you emulate the\n&gt; &gt; thinking here, you won=\r\n&#39;t be far from wrong.&quot;\n&gt; &gt; \n&gt; &gt; Again, I could be wrong, maybe there is som=\r\nething out there that\n&gt; &gt; people can point to to say, &quot;Here&#39;s REST done rig=\r\nht for a complicated\n&gt; &gt; problem domain&quot;. If so, and someone would do me th=\r\ne favor of\n&gt; &gt; pointing me to it, I&#39;d appreciate it.\n&gt; &gt; \n&gt; &gt; Dave.\n&gt; &gt; \n&gt; =\r\n\n\n\r\n--Apple-Mail-13--253431787\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=windows-1252\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=3D&quot;word-wrap: break-word; -webkit-nbsp-mode:=\r\n space; -webkit-line-break: after-white-space; &quot;&gt;I guess where I fall down =\r\nis that I see the REST vs. RPC models as paradigmatically different than pr=\r\nocedural vs. OO... conceptually, I like to think that I more or less grok w=\r\nhat REST is, but I keep running into posts in this list that suggest that I=\r\n&#39;m still missing very crucial concepts. &nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As such, =\r\nit&#39;s not that I&#39;m looking for a reference implementation per se, but rather=\r\n just a reference example that I can test my understanding against, which i=\r\ns what I think you&#39;re trying to achieve.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I agree complet=\r\nely with your approach... if we could get a RESTful shopping cart, then tha=\r\nt gives a useful example that takes us from system ontology/domain (shoppin=\r\ng cart) to RESTful model. &nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;While I think the=\r\nre might be differences about the semantic model for a shopping cart (ask 3=\r\n architects to model something and you get 9 answers), if we agree on a not=\r\nional data model, it seems like the senior people on this list should easil=\r\ny be able to render that into a RESTful architectural style...&lt;/div&gt;&lt;div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;&lt;div&gt;Dave.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;On Dec 22, 2009,=\r\n at 2:17 PM, Eric J. Bowman wrote:&lt;/div&gt;&lt;br class=3D&quot;Apple-interchange-newl=\r\nine&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255,=\r\n 255, 255); position: static; z-index: auto; &quot;&gt;\n&lt;span style=3D&quot;display:none=\r\n&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;ygrp-text&quot;&gt;&lt;p&gt;Hi David,&lt;br&gt;\n&lt;br&gt;\nYou may =\r\nwell be the 1,000th person to post exactly the same sentiments&lt;br&gt;\nto this =\r\ngroup, over the years.  The basic problem, is that any REST-&lt;br&gt;\nbased arch=\r\nitectural Model has an infinite number of valid&lt;br&gt;\nImplementations.  Thus =\r\nthere can&#39;t be such a thing as a &quot;reference&lt;br&gt;\nimplementation&quot;&lt;wbr&gt;.  The =\r\nclosest we come is systems built around Atom&lt;br&gt;\nProtocol, and of course th=\r\ne GET-and-POST-&lt;wbr&gt;based HTML Web sites, of which&lt;br&gt;\nmillions are RESTful=\r\n yet none are sexy enough to really help anyone&lt;br&gt;\nwith the systems they&#39;r=\r\ne trying to implement.&lt;br&gt;\n&lt;br&gt;\nMy goal here, is to figure out a way (not t=\r\noday, by any means) we can&lt;br&gt;\nall agree on to Model REST architectures.  I=\r\nf we can develop a REST&lt;br&gt;\narchitectural Model for a shopping cart, then a=\r\nny number of&lt;br&gt;\nimplementation ideas may be posted to the list and their m=\r\nappings to&lt;br&gt;\nthe model evaluated in a common lingo.  Nobody has to map th=\r\ne entire&lt;br&gt;\nmodel, but the shortcomings of such an implementation can be a=\r\ngreed&lt;br&gt;\nupon in terms of benefits and consequences.&lt;br&gt;\n&lt;br&gt;\nThe conversa=\r\ntion around here can then change.  We can point to shopping&lt;br&gt;\ncart implem=\r\nentations in the real world, and evaluate them against our&lt;br&gt;\nModel.  We c=\r\nan then discuss the consequences of a failed mapping, in&lt;br&gt;\nterms of the g=\r\noals of the system we&#39;re evaluating (e.g. Amazon).  I may&lt;br&gt;\nbe off on a w=\r\nild goose chase with this, but I think (as your post so&lt;br&gt;\npainfully remin=\r\nds all of us) it&#39;s obvious that REST has failed on the&lt;br&gt;\nWeb for anything=\r\n more complex than blogging.&lt;br&gt;\n&lt;br&gt;\nWe need to stop discussing REST in te=\r\nrms of implementation, and start&lt;br&gt;\ndiscussing it in terms of how well imp=\r\nlementations map to a REST&lt;br&gt;\narchitectural Model, and the benefits and co=\r\nnsequences of the success&lt;br&gt;\nor failure of such mapping to be implemented.=\r\n&lt;br&gt;\n&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;br&gt;\nDavid Otaguro wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Maybe I&#39;ve =\r\njust not found it, but one of the biggest headaches I&#39;ve&lt;br&gt;\n&gt; seen in e=\r\nxplaining REST is the lack of a generally agreed on, well&lt;br&gt;\n&gt; explaine=\r\nd reference example demonstrating the RESTful approach for a&lt;br&gt;\n&gt; reaso=\r\nnably complex domain and how it differs/improves on a POXy RPC&lt;br&gt;\n&gt; app=\r\nroach.  &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; The usual examples I&#39;ve seen are either so triv=\r\nial as to be&lt;br&gt;\n&gt; effectively useless, or lack a consensus validating t=\r\nhat the approach&lt;br&gt;\n&gt; really does embody the core ideals of REST.  When=\r\n all the major&lt;br&gt;\n&gt; published &quot;REST-ish&quot; APIs (e.g Amazon) end up with =\r\nthe criticism that&lt;br&gt;\n&gt; they&#39;re just POXy RPC, or confuse representatio=\r\nn with resource, it&lt;br&gt;\n&gt; becomes hard to point to an example and say, &quot;=\r\nIf you emulate the&lt;br&gt;\n&gt; thinking here, you won&#39;t be far from wrong.&quot;&lt;br=\r\n&gt;\n&gt; &lt;br&gt;\n&gt; Again, I could be wrong, maybe there is something out ther=\r\ne that&lt;br&gt;\n&gt; people can point to to say, &quot;Here&#39;s REST done right for a c=\r\nomplicated&lt;br&gt;\n&gt; problem domain&quot;.  If so, and someone would do me the fa=\r\nvor of&lt;br&gt;\n&gt; pointing me to it, I&#39;d appreciate it.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Da=\r\nve.&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n\n&lt;/div&gt;\n\n\n\n&lt;!-- end group em=\r\nail --&gt;\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail-13--253431787--\r\n\n"}}