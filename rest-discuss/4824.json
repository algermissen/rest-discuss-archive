{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":81035509,"authorName":"Vincent D Murphy","from":"&quot;Vincent D Murphy&quot; &lt;vdm@...&gt;","profile":"johnfoobar1","replyTo":"SENDER","senderId":"hoXn2-riQs4rRVMetH3iv2vnWbo_IY_61D2sIZ5ijDJEO_KSUuljmVS_9o4kB0eh_SaEKQJmWGTZuDIDjuKmD7ie3sdYug","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] &quot;Editable&quot; Resources","postDate":"1107465711","msgId":4824,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMDc0NjU3MTEuMTU3MzQuMjE0Mjc5MTQyQHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4=","inReplyToHeader":"PDQyMDI4REI2LjYwNDA0MDJAaW5qZWt0aWxvLm9yZz4=","referencesHeader":"PDQxRkZGODA0LjYwNzA5MDZAaW5qZWt0aWxvLm9yZz4gICA8QkFZMTAxLURBVjE2MDQyQUI4M0UxRTdBQzlBOTEyRjFEODdGMEBwaHguZ2JsPiAgIDw0MjAyOERCNi42MDQwNDAyQGluamVrdGlsby5vcmc+"},"prevInTopic":4823,"nextInTopic":4825,"prevInTime":4823,"nextInTime":4825,"topicId":4798,"numMessagesInTopic":29,"msgSnippet":"On Thu, 03 Feb 2005 12:46:46 -0800, Jason Diamond ... Well, URIs are cheap, so maybe you should distinguish between two URIs rather than two methods. This is","rawEmail":"Return-Path: &lt;vdm@...&gt;\r\nX-Sender: vdm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 29163 invoked from network); 3 Feb 2005 21:21:53 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m1.grp.scd.yahoo.com with QMQP; 3 Feb 2005 21:21:53 -0000\r\nReceived: from unknown (HELO out1.smtp.messagingengine.com) (66.111.4.25)\n  by mta1.grp.scd.yahoo.com with SMTP; 3 Feb 2005 21:21:53 -0000\r\nReceived: from web1.messagingengine.com (web1.internal [10.202.2.210])\n\tby frontend1.messagingengine.com (Postfix) with ESMTP id 07133C54769;\n\tThu,  3 Feb 2005 16:21:51 -0500 (EST)\r\nReceived: by web1.messagingengine.com (Postfix, from userid 99)\n\tid BFBEB2FB6; Thu,  3 Feb 2005 16:21:51 -0500 (EST)\r\nMessage-Id: &lt;1107465711.15734.214279142@...&gt;\r\nX-Sasl-Enc: BWBJ9Q9MreYMBqSspA896EH6BqZAt9eKCcNLjlkK4SWT 1107465711\r\nTo: &quot;Jason Diamond&quot; &lt;jason@...&gt;,\n\t&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nMIME-Version: 1.0\r\nX-Mailer: MIME::Lite 1.5  (F2.73; T1.001; A1.64; B3.05; Q3.03)\r\nReferences: &lt;41FFF804.6070906@...&gt;\n   &lt;BAY101-DAV16042AB83E1E7AC9A912F1D87F0@...&gt;\n   &lt;42028DB6.6040402@...&gt;\r\nIn-Reply-To: &lt;42028DB6.6040402@...&gt;\r\nDate: Thu, 03 Feb 2005 21:21:51 +0000\r\nX-eGroups-Remote-IP: 66.111.4.25\r\nFrom: &quot;Vincent D Murphy&quot; &lt;vdm@...&gt;\r\nSubject: Re: [rest-discuss] &quot;Editable&quot; Resources\r\nX-Yahoo-Group-Post: member; u=81035509\r\nX-Yahoo-Profile: johnfoobar1\r\n\r\nOn Thu, 03 Feb 2005 12:46:46 -0800, &quot;Jason Diamond&quot;\n&lt;jason@...&gt; said:\n&gt; I was initially POST-ing because GET-ing was returning the non-editable \n&gt; representation of the resource. I needed something to help my server \n&gt; code distinguish between the when it should return the resource as \n&gt; non-editable HTML or as an editable HTML form.\n\nWell, URIs are cheap, so maybe you should distinguish between\ntwo URIs rather than two methods. This is muddying the semantics\nof GET and POST in my opinion.\n\n&gt; I&#39;ve since decided this wasn&#39;t the best approach as that means the code \n&gt; that handles POST-s for that URL needs to distinguish between the \n&gt; &quot;initial&quot; POST when the HTML form is returned and the subsequent POST \n&gt; when the form data is submitted.\n\nAgreed.\n\n&gt; Seeing the code get messy made it \n&gt; obvious that it wasn&#39;t a good design.\n\nAgreed, with the qualification that sometimes code is messy\nbecause your language or environment are inadequate.\ne.g. trying to use higher-order procedures in Visual Basic.\n\n&gt; &gt; &gt; An alternative would be to include a link with a query string\n&gt; &gt; &gt; parameter like &quot;?mode=edit&quot; but that doesn&#39;t strike me as being\n&gt; &gt; &gt; very REST-ful, either.\n&gt; &gt;\n&gt; &gt;  This is mostly RESTful. Just don&#39;t mistake &#39;mode&#39; to mean\n&gt; &gt;  &#39;method&#39;. You might want to use &#39;mode=author&#39; and &#39;mode=reader&#39; or\n&gt; &gt;  some noun-based word.\n&gt; \n&gt; This is what I switched to using but instead of traditional query string \n&gt; parameters, the query string looks like &quot;?edit&quot; or &quot;?delete&quot;. I might be \n&gt; abusing the query string by doing that, though. I could just as easily \n&gt; use an extra path segment.\n\nI think the distinction between putting the verb in a\npath segment or a query string segment matters less than\nwhether you put it in the entity body.\n\nIdeally, you would just put it in the HTTP method field,\nif you have tools that let you read and write this value\nat either end. Failing that, you have to compromise.\nI think putting it in a POSTed entity body (e.g. as a form\nfield) is less evil than putting it in the URI.\n\nAnother option could be using XMLHttpRequest to just\nsend the correct verb in the HTTP method field, but\nI haven&#39;t researched that yet.\n\n&gt; Here&#39;s some possibilities (with delete thrown into the mix):\n&gt; \n&gt; - GET example.org/foo - returns representation of foo (HTML or XML \n&gt; depending on Accept header)\n&gt; - PUT, POST example.org/foo - accepts XML\n&gt; - DELETE example.org/foo - deletes foo resource\n&gt; - GET example.org/foo?edit - returns HTML form to edit foo\n&gt; - GET example.org/foo/edit - using path segment instead of query\n&gt; - GET example.org/foo/edit-form - using noun\n&gt; - POST example.org/foo/edit-form - accepts multipart/form-data, updates \n&gt; foo resource (parent)\n&gt; - GET example.org/foo?delete - returns HTML form to confirm delete\n&gt; operation\n&gt; - GET example.org/foo/delete - using path segment instead of query\n&gt; - GET example.org/foo/delete-form - using noun\n&gt; - POST example.org/foo/delete-form - deletes foo resource (parent)\n&gt; \n&gt; I&#39;m not sure I like how POST-ing to a subordinate resource (when using \n&gt; path segments instead of query strings) updates and/or deletes the \n&gt; parent resource even if it&#39;s just a hack to get around the browser&#39;s \n&gt; limitations. Maybe that&#39;s an argument in favor of query strings.\n\nI agree, which is why I have the HTML form in ./html_form POST to ../\n(the parent resource). I only ever GET the subordinate resource.\n\n"}}