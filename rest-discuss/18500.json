{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":45758910,"authorName":"Erik Mogensen","from":"Erik Mogensen &lt;erik@...&gt;","profile":"mogsie_oslo","replyTo":"SENDER","senderId":"SrnLoNq8nJql9hN_S_Xu5I2UnpGAheqHXkbCjk6RHZuc4pBxhTMoirUCYUNcmUYV8_Cuybk-_dxN1HZWMpyfXJGFQ0noTkqr5A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful Reference Collections and Queues?","postDate":"1327666812","msgId":18500,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRGJHWmpiTmtwaW00dnh5cTladDFpZDBOZVk2Ri1LYkhDclRUeGN5Y01icXp6X1FFd0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBQjIzK2l5WFB2ZE9VVkJuazc4Rzgta1V1dUVOd1ktZEs0dzRkQ1pabUJmNWIwQjRoQUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBQjIzK2l4TVpOPXg2WFpFMDIrMDZqUWU0Q0g9cGJMZUhfZ0M3eS1ENkVrWGR3OV92Z0BtYWlsLmdtYWlsLmNvbT4gPENBTnFpWkpadktOZjdoeE9HQlNKb0VFQUNUTXp5Y0dieXRrRkE2QTl2cjVQQ0VUVkxnZ0BtYWlsLmdtYWlsLmNvbT4gPENBQjIzK2l5WFB2ZE9VVkJuazc4Rzgta1V1dUVOd1ktZEs0dzRkQ1pabUJmNWIwQjRoQUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18493,"nextInTopic":18501,"prevInTime":18499,"nextInTime":18501,"topicId":18489,"numMessagesInTopic":12,"msgSnippet":"... PUTting large collection-like resources works less well with concurrent edits though. With even just a few concurrent editors your clients would have to","rawEmail":"Return-Path: &lt;3rik.mogensen@...&gt;\r\nX-Sender: 3rik.mogensen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26355 invoked from network); 27 Jan 2012 12:20:43 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 27 Jan 2012 12:20:43 -0000\r\nX-Received: from unknown (HELO mail-vw0-f42.google.com) (209.85.212.42)\n  by mta3.grp.sp2.yahoo.com with SMTP; 27 Jan 2012 12:20:43 -0000\r\nX-Received: by vbbez10 with SMTP id ez10so2489031vbb.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 27 Jan 2012 04:20:42 -0800 (PST)\r\nX-Received: by 10.52.69.49 with SMTP id b17mr2873534vdu.1.1327666842158; Fri, 27\n Jan 2012 04:20:42 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.193.66 with HTTP; Fri, 27 Jan 2012 04:20:12 -0800 (PST)\r\nIn-Reply-To: &lt;CAB23+iyXPvdOUVBnk78G8-kUuuENwY-dK4w4dCZZmBf5b0B4hA@...&gt;\r\nReferences: &lt;CAB23+ixMZN=x6XZE02+06jQe4CH=pbLeH_gC7y-D6EkXdw9_vg@...&gt;\n &lt;CANqiZJZvKNf7hxOGBSJoEEACTMzycGbytkFA6A9vr5PCETVLgg@...&gt; &lt;CAB23+iyXPvdOUVBnk78G8-kUuuENwY-dK4w4dCZZmBf5b0B4hA@...&gt;\r\nDate: Fri, 27 Jan 2012 13:20:12 +0100\r\nX-Google-Sender-Auth: A8_erxVtInZa3VSVuOgi2bpxdnY\r\nMessage-ID: &lt;CADbGZjbNkpim4vxyq9Zt1id0NeY6F-KbHCrTTxcycMbqzz_QEw@...&gt;\r\nTo: Jim Purbrick &lt;jimpurbrick@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=20cf307c9e6881c79704b781869a\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Erik Mogensen &lt;erik@...&gt;\r\nSubject: Re: [rest-discuss] RESTful Reference Collections and Queues?\r\nX-Yahoo-Group-Post: member; u=45758910; y=Zd23fewHPuE4V5B3_pOHEvaZ1LB4wYla4fPPLiPEvEsdy-fP0eQ\r\nX-Yahoo-Profile: mogsie_oslo\r\n\r\n\r\n--20cf307c9e6881c79704b781869a\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Tue, Jan 24, 2012 at 2:52 PM, Jim Purbrick &lt;jimpurbrick@...&gt; wrote=\r\n:\n\n&gt; **\n&gt; In both cases it would be nice to request changes to the collecti=\r\nons,\n&gt; rather than PUTing potentially large collections for each change.\n&gt;\n=\r\n\nPUTting large collection-like resources works less well with concurrent\ned=\r\nits though. With even just a few concurrent editors your clients would\nhave=\r\n to keep refreshing and merging changes and retrying.  If you go with\nthe o=\r\nne-resource-per-entry, then (if the server is careful not to expose\noffsets=\r\n in the collection in the URIs) two (or many) clients can\nsimultaneously mo=\r\ndify a list without conflicts.\n\nThis way of working also allows clients to =\r\nwork on an outdated copy of a\ncollection, which helps in perceived performa=\r\nnce, since clients don&#39;t need\nto refresh the collection all the time...\n\nTh=\r\nis seems like a clean way to model it, but somewhat heavyweight and\n&gt; would=\r\n seems llike it would require a request per deletion or\n&gt; modification. In =\r\nthe case of the queue example, presumably the\n&gt; position in the queue would=\r\n be a property of the relationship\n&gt; resource?\n&gt;\n\n+1. The &quot;heavyweightness&quot;=\r\n is one of the tradeoffs of using REST. REST\ndoesn&#39;t have performance as it=\r\ns main goal, and trades efficiency for other\nproperties: &quot;The trade-off, th=\r\nough, is that a uniform interface degrades\nefficiency, since information is=\r\n transferred in a standardized form rather\nthan one which is specific to an=\r\n application&#39;s needs.&quot; =97 Fielding, 5.1.5\n\nYou must remember, though that =\r\nthe DELETE and 204 response would usually\nboth fit nicely within one TCP/IP=\r\n packet.\n\n\n&gt; It would be nice to be able to delete, add or update ranges in=\r\n the\n&gt; collections in a single request, but I can&#39;t see how to do this via\n=\r\n&gt; the uniform interface in a clean way.\n&gt;\n&gt;\nWithin the confines of the unif=\r\norm interface, I would go with a GET or POST\nand link to that resource, may=\r\nbe using a form-like construct which tells\nthe clients e.g. two URIs which =\r\nmake a range of documents.\n\nClient could GET a list of items (possibly a su=\r\nbset of the full list),\nrecognise a way of operating on a subset, and act o=\r\nn this.  This &quot;way of\noperating on a subset&quot; could be a link relation which=\r\n ends up in an\nOpenSearch description where the client could search for ite=\r\nms to operate\non, or simply a form where the client must fill out two URIs =\r\nindicating the\nrange, and maybe some operation.\n-- \n-mogsie-\n\r\n--20cf307c9e6881c79704b781869a\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Jan 24, 2012 at 2:52 PM, Jim Purbrick &lt;s=\r\npan dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jimpurbrick@...&quot;&gt;jimpurbrick@gm=\r\nail.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D=\r\n&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n\n&lt;u&gt;&lt;/u=\r\n&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;In both cases it would be nice to req=\r\nuest changes to the collections,&lt;br&gt;\nrather than PUTing potentially large c=\r\nollections for each change.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;PUTting large collection-like resources works less well with concu=\r\nrrent edits though. With even just a few concurrent editors your clients wo=\r\nuld have to keep refreshing and merging changes and retrying. =A0If you go =\r\nwith the one-resource-per-entry, then (if the server is careful not to expo=\r\nse offsets in the collection in the URIs) two (or many) clients can simulta=\r\nneously modify a list without conflicts.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This wa=\r\ny of working also allows clients to work on an outdated copy of a collectio=\r\nn, which helps in perceived performance, since clients don&#39;t need to re=\r\nfresh the collection all the time...&lt;/div&gt;&lt;div&gt;\n\n&lt;br&gt;&lt;/div&gt;&lt;blockquote clas=\r\ns=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;pad=\r\nding-left:1ex&quot;&gt;&lt;div style&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div class=3D&quot;im&quot;&gt;This seems like =\r\na clean way to model it, but somewhat heavyweight and&lt;/div&gt;\n\n\nwould seems l=\r\nlike it would require a request per deletion or&lt;br&gt;\nmodification. In the ca=\r\nse of the queue example, presumably the&lt;br&gt;\nposition in the queue would be =\r\na property of the relationship&lt;br&gt;\nresource?&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/b=\r\nlockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+1. The &quot;heavyweightness&quot; is one of the =\r\ntradeoffs of using REST. REST doesn&#39;t have performance as its main goal=\r\n, and trades efficiency for other properties: &quot;The trade-off, though, =\r\nis that a uniform interface degrades efficiency, since information is trans=\r\nferred in a standardized form rather than one which is specific to an appli=\r\ncation&#39;s needs.&quot; =97 Fielding, 5.1.5&lt;/div&gt;\n\n&lt;div class=3D&quot;gmail_qu=\r\note&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;You must remember, though that th=\r\ne DELETE and 204 response would usually both fit nicely within one TCP/IP p=\r\nacket.&lt;/div&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;g=\r\nmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-l=\r\neft:1ex&quot;&gt;\n\n&lt;div style&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;It would be nice to be able to delete,=\r\n add or update ranges in the&lt;br&gt;\ncollections in a single request, but I can=\r\n&#39;t see how to do this via&lt;br&gt;\nthe uniform interface in a clean way.&lt;br&gt;=\r\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Within the con=\r\nfines of the uniform interface, I would go with a GET or POST and link to t=\r\nhat resource, maybe using a form-like construct which tells the clients e.g=\r\n. two URIs which make a range of documents.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Clie=\r\nnt could GET a list of items (possibly a subset of the full list), recognis=\r\ne a way of operating on a subset, and act on this. =A0This &quot;way of ope=\r\nrating on a subset&quot; could be a link relation which ends up in an OpenS=\r\nearch description where the client could search for items to operate on, or=\r\n simply a form where the client must fill out two URIs indicating the range=\r\n, and maybe some operation.&lt;/div&gt;\n\n&lt;/div&gt;-- &lt;br&gt;-mogsie-&lt;br&gt;\n\r\n--20cf307c9e6881c79704b781869a--\r\n\n"}}