{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":136218993,"authorName":"Henry Story","from":"Henry Story &lt;henry.story@...&gt;","profile":"hjsatdoc","replyTo":"SENDER","senderId":"-y8xGo24Vqle0JwJ9DK0sgaUiv8NV-QzVe_K7bXHGltJDdudySEjhEm5xDFjVqh_jyxn9ElVU-9O3JWV4C0dzjjuOMCBehOvzS45vA","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] Re: WADL pushback","postDate":"1181099629","msgId":8832,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI2RTYxNUQwLTdDRTMtNEJEOC05Rjg5LTgyRDFEQ0Y1QTVCRkBiYmxmaXNoLm5ldD4=","inReplyToHeader":"PGY0NHRrbSRpYmgkMUBzZWEuZ21hbmUub3JnPg==","referencesHeader":"PGY0NDdxbCQ2bGUkMUBzZWEuZ21hbmUub3JnPiA8ZjQ0OXZvK2wwY3NAZUdyb3Vwcy5jb20+IDxmNDRjOWIkb2pmJDFAc2VhLmdtYW5lLm9yZz4gPDU4NkVDRjRELTY4RTUtNDhGRS05NkM4LTMxQkVDMDQ1RkIxRUBtaW5kdG91Y2guY29tPiA8ZjQ0dGttJGliaCQxQHNlYS5nbWFuZS5vcmc+"},"prevInTopic":8830,"nextInTopic":8834,"prevInTime":8831,"nextInTime":8833,"topicId":8794,"numMessagesInTopic":108,"msgSnippet":"This is a very interesting and important discussion by the way. The problem with xml is that it is pure syntax. So there is no clear way to interpret the data.","rawEmail":"Return-Path: &lt;henry.story@...&gt;\r\nX-Sender: henry.story@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 65576 invoked from network); 6 Jun 2007 03:13:41 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m43.grp.scd.yahoo.com with QMQP; 6 Jun 2007 03:13:41 -0000\r\nReceived: from unknown (HELO bblfish.net) (192.220.66.168)\n  by mta10.grp.scd.yahoo.com with SMTP; 6 Jun 2007 03:13:41 -0000\r\nReceived: (qmail 59066 invoked by uid 17064); 6 Jun 2007 03:13:40 -0000\r\nReceived: from unknown (HELO [10.0.230.198]) ([192.18.41.196])\n          (envelope-sender &lt;henry.story@...&gt;)\n          by 192.220.66.168 (qmail-ldap-1.03) with SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 6 Jun 2007 03:13:40 -0000\r\nIn-Reply-To: &lt;f44tkm$ibh$1@...&gt;\r\nReferences: &lt;f447ql$6le$1@...&gt; &lt;f449vo+l0cs@...&gt; &lt;f44c9b$ojf$1@...&gt; &lt;586ECF4D-68E5-48FE-96C8-31BEC045FB1E@...&gt; &lt;f44tkm$ibh$1@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;B6E615D0-7CE3-4BD8-9F89-82D1DCF5A5BF@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 5 Jun 2007 20:13:49 -0700\r\nTo: Patrick Mueller &lt;pmuellr@...&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: Henry Story &lt;henry.story@...&gt;\r\nSubject: Re: [rest-discuss] Re: WADL pushback\r\nX-Yahoo-Group-Post: member; u=136218993; y=pd-eACpNE9s0Q8eTyK9Kc2-bENHTNw6oEInttQjls4Fpmdk\r\nX-Yahoo-Profile: hjsatdoc\r\n\r\nThis is a very interesting and important discussion by the way.\n\nThe problem with xml is that it is pure syntax. So there is no clear  \nway to interpret the data. People think that it is easy to interpret  \nbecause they are looking at it as humans and making all kinds of  \nassumptions without realising it. Problem is that when you code,  \nthese assumptions may or may not be relevant, and then lots of nasty  \ndifficult to work out bugs appear.[0]\n\nFurthermore as people have mentioned on this list, trying to decide  \nhow to fit an arbitrary data structure into the tree nature of xml is  \na waste of time [1]. For those of you who know Java it is as if when  \none serialized a bunch of objects one also had to decide for every  \nclass which one&#39;s came first in the serialization, which ones second,  \nthird, ... and then on top of it one has to make further arbitrary  \ndecisions as to whether one has to use attributes or elements for a  \nrelation or property. So the xml route all alone is unclear and  \nunnecessarily complicated.\n\nJavascript and other OO languages were designed for data modeling, so  \nthose issues are usually worked out for the language in question, and  \nof course for people using tools that use that language it is very  \neasy to parse.\n\nThe advantage of xml as a syntax is that it has namespaces which use  \nURIs. As a result it is a lot more web friendly. The global namespace  \nmeans that people can develop their vocabulary clearly without  \nstepping on each other&#39;s toes. This is something that is not  \ncompletely dealt with correctly in most OO languages [2]\n\nNow one clean solution is rdf. This is the ultimate modeling  \nframework. The semantics are dead clear, and it is language  \nindependent, amazingly enough! It is language independent because it  \nis all about semantics, how words relate to the world [3]\nSince the words are URIs they are valid world wide.  The syntax is  \nhow to strings words together to form valid sentences. And there are  \na number of ways of doing that: rdf/xml, ntriples, turtle, n3, ...  \nSince xml is a syntax that supports URI name spaces and rdf is a  \nsemantics based on URIs it is clear to see why RDF/XML is such an  \nattractive proposition. (Though there are others such as TriX [4]  \nthat have been proposed, and that are easier to parse for people  \nstuck with DOM tools. )\n\nSo javascript has clear semantics but lacks URL namespaces [2]. XML  \nhas a well understood syntax but lacks semantics .\nRDF/XML has a clear semantics and uses a widely used format. I think  \nthere are more and more libraries now that allow one to simply map  \nrdf xml into any programming language. Libraries like so(m)mer for  \nJava [5], ActiveRDF for Ruby [6], Javascript [7], and many more [8]...\n\nNow there are in fact more readable serialisations of rdf, which I do  \nrecommend for human consumption. N3 being the most interesting of  \nthem all. This is how one can then write out the json example\n\n@prefix bk: &lt;http://www.hackcraft.net/bookrdf/vocab/0_1/&gt;\n@prefix dc: &lt;http://purl.org/dc/elements/1.1/&gt;\n\n[] a bk:Book;\n    dc:title &quot;Read this Book&quot;;\n    xxx:quantity 1;\n    foaf:author &lt;http://bobthedog.com/foaf#bob&gt; .\n\nNotice 2 things as soon as you use rdf to write this out:\n\n   - the book is missing a URI. Why not give it a URL?\n   - the xxx:quantity seems a bit odd no? How can a book have a  \nquantity. Should it not be another thing, say an order that\n     has a quantity?\n\nThese points appear immediately to anyone who works with N3 and rdf.  \nBut in the xml there is no way to say if there is anything wrong or  \nhow to interpret it.\n\nClearly this would be better\n\n&lt;http://amazon.com/books/order/12312312&gt; a az:Order;\n    :contains ( &lt;http://amazon.com/books/isbn/1231231&gt; ) .\n\n&lt;http://amazon.com/books/isbn/1231231&gt;\n     dc:title &quot;Read this book&quot;;\n     foaf:author &lt;http://bobthedog.com/foaf#bob&gt; .\n\nSince we are always dealing with URLs and since URLs name resources,  \nand resources return representations, we are always RESTful.\n\n\nHenry\n\n[0]  In order to properly understand even a well written format such  \nas atom, you have to go and read the humanly defined atom ietf spec  \nthat is written in english. And even people who read it regularly  \nmiss some of the implications of what is going on.\n[1] http://blogs.sun.com/bblfish/entry/rest_without_rdf_is_only\n[2] http://blogs.sun.com/bblfish/entry/duck_typing_done_right\n[3] see my illustration here:\n     http://blogs.sun.com/bblfish/resource/RDF-syntax-semantics.png\n[4] http://www.mulberrytech.com/Extreme/Proceedings/html/2004/ \nStickler01/EML2004Stickler01.html\n[5] https://sommer.dev.java.net which used @rdf annotations\n[6] http://www.activerdf.org/\n[7] Javascript since Tim Berner&#39;s Lee&#39;s Tabulator\n     http://blogs.sun.com/bblfish/entry/ \nsemantic_web_mashups_with_tabulator is written in JavaScript\n     but I don&#39;t know exactly here, is there anything as neat as  \nusing annotations in so(m)mer?\n[8] http://blogs.sun.com/bblfish/entry/250_semantic_web_tools\n     there are in fact 500 tools listed there now\n[9] http://www.w3.org/2001/sw/DataAccess/json-sparql/\n\n\n\n\nOn 5 Jun 2007, at 17:02, Patrick Mueller wrote:\n\n&gt; Steve Bjorg wrote:\n&gt; &gt;\n&gt; &gt; On Jun 5, 2007, at 12:06 PM, Patrick Mueller wrote:\n&gt; &gt; &gt; The best example of making life better is getting people out of  \n&gt; the\n&gt; &gt; &gt; document design business. I suppose I&#39;ve suffered through too much\n&gt; &gt; &gt; crappy XML in my life, that I&#39;ve come to see XML document  \n&gt; design as an\n&gt; &gt; &gt; art more than a science. Data design is usually easier, or at  \n&gt; least\n&gt; &gt; &gt; more obvious.\n&gt; &gt; There is no difference b/w the two: both documents and data\n&gt; &gt; structures are designed to fit a problem space. You might prefer one\n&gt; &gt; approach over another, because you are more comfortable with it, but\n&gt; &gt; that&#39;s a personal matter and not a technical issue.\n&gt;\n&gt; compare / contrast:\n&gt;\n&gt; &lt;book&gt;\n&gt; &lt;title&gt;Read this book&lt;/title&gt;\n&gt; &lt;quantity&gt;1&lt;/quantity&gt;\n&gt; &lt;author&gt;Bob the Dog&lt;/author&gt;\n&gt; &lt;/book&gt;\n&gt;\n&gt; {\n&gt; &quot;title&quot; : &quot;Read this book&quot;,\n&gt; &quot;quantity&quot; : 1,\n&gt; &quot;author&quot; : [\n&gt; &quot;Bob the Dog&quot;\n&gt; ]\n&gt; }\n&gt;\n&gt; Note the embedded data is more self-descriptive than the XML; I can  \n&gt; tell\n&gt; just from looking at the title value, that it&#39;s a string; that the\n&gt; quantity is a number, and that the author is a list (multi-valued),  \n&gt; with\n&gt; one string element. None of which you could infer from the XML.\n&gt;\n&gt; There is a difference.\n&gt;\n&gt; -- \n&gt; Patrick Mueller\n&gt; http://muellerware.org\n&gt;\n\n\n"}}