{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"MKeINGHFg7PX3EeY5EtN91-rJHcSpbmf8C3tdAyZjaGI2eAJ9771ocdBROiosuQu2d6va95_0z613rlMLXJ_dX2w0Gs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Homework on DELETE and Caching control and \tquestions","postDate":"1237731865","msgId":12320,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU3OGJkYmMwMDkwMzIyMDcyNHcxMzRlNmVjM2xlZjk3ODVkZmEwYTlkMjRmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDgxMUVBM0Y5LTg4MkUtNEMyMS1BRDNGLUY1NjVBMDlFM0M1RUBtbm90Lm5ldD4=","referencesHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPgkgPDgxMUVBM0Y5LTg4MkUtNEMyMS1BRDNGLUY1NjVBMDlFM0M1RUBtbm90Lm5ldD4="},"prevInTopic":12316,"nextInTopic":12324,"prevInTime":12319,"nextInTime":12321,"topicId":12307,"numMessagesInTopic":8,"msgSnippet":"Thanks for the reply, Mark. The first I thought would help was you, when I wondered how the caching control of HTTP were *implemented*. Cheers, Dong ... -- ","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30640 invoked from network); 22 Mar 2009 14:24:33 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m1.grp.re1.yahoo.com with QMQP; 22 Mar 2009 14:24:33 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.226)\n  by mta3.grp.re1.yahoo.com with SMTP; 22 Mar 2009 14:24:26 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id g9so1348833rvb.9\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 22 Mar 2009 07:24:26 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.114.177.1 with SMTP id z1mr4068069wae.68.1237731865948; Sun, \n\t22 Mar 2009 07:24:25 -0700 (PDT)\r\nIn-Reply-To: &lt;811EA3F9-882E-4C21-AD3F-F565A09E3C5E@...&gt;\r\nReferences: &lt;gq3uni+cc9q@...&gt;\n\t &lt;811EA3F9-882E-4C21-AD3F-F565A09E3C5E@...&gt;\r\nDate: Sun, 22 Mar 2009 08:24:25 -0600\r\nMessage-ID: &lt;e78bdbc00903220724w134e6ec3lef9785dfa0a9d24f@...&gt;\r\nTo: Mark Nottingham &lt;mnot@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\nSubject: Re: [rest-discuss] Homework on DELETE and Caching control and \n\tquestions\r\nX-Yahoo-Group-Post: member; u=198897688; y=r-9OsH-3oDtn80Q8uyCbQ3rkrAiIZ-BoxQ7i6YhQzvet1A\r\nX-Yahoo-Profile: edonliu\r\n\r\nThanks for the reply, Mark.\n\nThe first I thought would help was you, when I=\r\n wondered how the\ncaching control of HTTP were *implemented*.\n\nCheers,\n\nDon=\r\ng\n\n\nOn Sun, Mar 22, 2009 at 1:44 AM, Mark Nottingham &lt;mnot@...&gt; wrote:=\r\n\n&gt; I haven&#39;t been following the discussion, but if you want a single reques=\r\nt to\n&gt; invalidate multiple cached entities, I&#39;ve been working on that as pa=\r\nrt of my\n&gt; day job; it motivated the set of patches to Squid we funded a li=\r\nttle while\n&gt; back (see commits to squid2-HEAD by Benno a few months back).\n=\r\n&gt;\n&gt; In a nutshell, we&#39;ve architected it so that a PUT, POST or DELETE (i.e.=\r\n,\n&gt; anything that triggers an invalidation by side effect as per 2616) will=\r\n not\n&gt; only invalidate the resources identified by the request-URI, Locatio=\r\nn, and\n&gt; Content-Location, but they will also invalidate:\n&gt;\n&gt; 1) Resources =\r\npointed to by the PUT/POST/DELETE response with a Link header\n&gt; that has an=\r\n &quot;invalidates&quot; relation; e.g.,\n&gt; =A0Link: &lt;/foo&gt;; rel=3D&quot;invalidates&quot;\n&gt; in =\r\na response to POST /bar will invalidate /foo.\n&gt;\n&gt; 2) Cached responses that =\r\nhave a Link header with an &quot;invalidated-by&quot;\n&gt; relation that points to the U=\r\nRI that has been PUT/POST/DELETEd; e.g.,\n&gt; =A0Link: &lt;/baz&gt;; rel=3D&quot;invalida=\r\nted-by&quot;\n&gt; in a cached response will make that cached response invalid when =\r\n/baz is\n&gt; POST/PUT/DELETEd to.\n&gt;\n&gt; The second case is the more interesting,=\r\n because you can have search results\n&gt; (for example) contain an identifier =\r\n-- even one that doesn&#39;t exist -- that\n&gt; will trigger many things becoming =\r\ninvalid when a single resource becomes\n&gt; invalid.\n&gt;\n&gt; There are a number of=\r\n limitations and caveats here, of course -- chiefly\n&gt; that it&#39;s not a relia=\r\nble mechanism in every case, and that caches that\n&gt; aren&#39;t aware of these e=\r\nxtensions will of course not implement them. However,\n&gt; for some cases -- e=\r\nspecially accelerator caches -- they can be useful for\n&gt; increasing cache e=\r\nfficiency without sacrificing control of your resources.\n&gt;\n&gt; I hope to Open=\r\n Source the helper process that implements all of this; the\n&gt; changes to Sq=\r\nuid were merely getting it conformant with the RFC, and putting\n&gt; in a few =\r\nhooks to enable this to work.\n&gt;\n&gt; Cheers,\n&gt;\n&gt;\n&gt; On 21/03/2009, at 4:54 PM, =\r\nDong Liu wrote:\n&gt;\n&gt;&gt; Maybe it is a good idea to start the discuss in a new =\r\nthread.\n&gt;&gt;\n&gt;&gt; I did some homework by reading RFC 2616.\n&gt;&gt;\n&gt;&gt; On page 56, se=\r\nction 9.7, it reads\n&gt;&gt; &quot;If the request passes through a cache and the Reque=\r\nst-URI identifies one\n&gt;&gt; or more currently cached entities, those entries S=\r\nHOULD be treated as\n&gt;&gt; stale.&quot;\n&gt;&gt;\n&gt;&gt; So how can the intermediary figure out=\r\n the currently cached entities\n&gt;&gt; identified by the Request-URI?\n&gt;&gt;\n&gt;&gt; On p=\r\nage 97, section 13.10, it reads\n&gt;&gt; &quot;The effect of certain methods performed=\r\n on a resource at the origin\n&gt;&gt; server might cause one or more existing cac=\r\nhe entries to become non-\n&gt;&gt; transparently invalid. That is, although they =\r\nmight continue to be &quot;fresh,&quot;\n&gt;&gt; they do not accurately reflect what the or=\r\nigin server would return for a new\n&gt;&gt; request on that resource.&quot;\n&gt;&gt;\n&gt;&gt; I th=\r\nink this means it is common for an update or delete request yields\n&gt;&gt; &quot;non-=\r\ntransparently&quot; invalidation of one or more existing cache entries.\n&gt;&gt;\n&gt;&gt; Fu=\r\nrther one page 98\n&gt;&gt; &quot;There is no way for the HTTP protocol to guarantee th=\r\nat all such cache\n&gt;&gt; entries are marked invalid.&quot;\n&gt;&gt;\n&gt;&gt; and\n&gt;&gt;\n&gt;&gt; &quot;Some HTT=\r\nP methods MUST cause a cache to invalidate an entity. This is\n&gt;&gt; either the=\r\n entity referred to by the Request-URI, or by the Location or\n&gt;&gt; Content-Lo=\r\ncation headers (if present).&quot;\n&gt;&gt;\n&gt;&gt; Can we put many Content-Location header=\r\ns in a DELETE request?\n&gt;&gt;\n&gt;&gt; &quot;In order to prevent denial of service attacks=\r\n, an invalidation based on\n&gt;&gt; the URI in a Location or Content-Location hea=\r\nder MUST only be performed if\n&gt;&gt; the host part is the same as in the Reques=\r\nt-URI. &quot;\n&gt;&gt;\n&gt;&gt; Then how about invalidating the caches after a &quot;batch DELETE=\r\n&quot; as this\n&gt;&gt; &quot;off-the-wall&quot; approach?\n&gt;&gt; http://tech.groups.yahoo.com/group=\r\n/rest-discuss/message/12280\n&gt;&gt;\n&gt;&gt; Suppose we have a URI that identifies a c=\r\nollection of resources\n&gt;&gt;\n&gt;&gt; 1. the client sends DELETE URI to the server. =\r\nThe client knows what the\n&gt;&gt; URI refers to.\n&gt;&gt;\n&gt;&gt; 2. the server reply with =\r\na 200 or 202 with a representation that will send\n&gt;&gt; several DELETE&#39;s to th=\r\ne server each of which is for a member in the\n&gt;&gt; collection.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;=\r\n\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links=\r\n\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; --\n&gt; Mark Nottingham =A0 =A0 http://www.mnot.net/\n&gt;\n&gt;\n\n\n\n--=\r\n \nhttp://dongnotes.blogspot.com/\n\n"}}