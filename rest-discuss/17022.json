{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"unVdrkBGfTx2U3U4G5z1dOpuVRo9azJVeJbj_cadnZKjVqMjh5uJaJ8q_UFoSnVziKFRnzGwASNQjrUjdouNcrWW1k-Zs7EacyvJKw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Link relations [was: A media type for case files, dossiers and documents]","postDate":"1291396059","msgId":17022,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGlkYjg0ciszMzYyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEFBTkxrVGltSGNrSGJmOUY5WlpwXzZyUHc5WTBRTnlvYWQ5cjArUWZWMDZfZEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17020,"nextInTopic":17023,"prevInTime":17021,"nextInTime":17023,"topicId":16947,"numMessagesInTopic":88,"msgSnippet":"... You are absolutely correct. So don t change the representation format or add link relations once you have deployed clients. Note adding format extensions,","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 67027 invoked from network); 3 Dec 2010 17:07:40 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m10.grp.re1.yahoo.com with QMQP; 3 Dec 2010 17:07:40 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta1.grp.re1.yahoo.com with SMTP; 3 Dec 2010 17:07:40 -0000\r\nX-Received: from [69.147.65.148] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 03 Dec 2010 17:07:39 -0000\r\nX-Received: from [98.137.34.184] by t11.bullet.mail.sp1.yahoo.com with NNFMP; 03 Dec 2010 17:07:39 -0000\r\nDate: Fri, 03 Dec 2010 17:07:39 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;idb84r+3362@...&gt;\r\nIn-Reply-To: &lt;AANLkTimHckHbf9F9ZZp_6rPw9Y0QNyoad9r0+QfV06_d@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: Link relations [was: A media type for case files, dossiers and documents]\r\nX-Yahoo-Group-Post: member; u=221173245; y=WRuth2jVipqmwOSOAvHt0KgCN5-9D0_PKRLxrD10QCugBg2zCQ\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\n\n--- In rest-discuss@yahoogroups.com, Scott Banwart &lt;sbanwart@...&gt; wrote:\n&gt;=\r\n\n&gt; On Fri, Dec 3, 2010 at 6:46 AM, Eric J. Bowman &lt;eric@...&gt;wrote:\n&gt; \n&gt; &gt;\n&gt;=\r\n &gt;\n&gt; &gt; Eb wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Doesn&#39;t matter. Nobody coding a cons=\r\numer for your API will\n&gt; &gt; &gt; &gt; understand a custom media type without train=\r\ning. Whereas if you\n&gt; &gt; &gt; &gt; express your API as HTML, you don&#39;t have this p=\r\nroblem; anyone will\n&gt; &gt; &gt; &gt; be able to understand it provided they understa=\r\nnd HTML (a safe\n&gt; &gt; &gt; &gt; assumption), and you won&#39;t need any custom media ty=\r\npes.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; I concur but even when HTML is used, there is stil=\r\nl some training\n&gt; &gt; &gt; needed, right? If the returned consists of multiple l=\r\ninks (and not\n&gt; &gt; &gt; just one state transition), how does my client know bas=\r\ned on some\n&gt; &gt; &gt; other rules what &quot;link&quot; to take without some training?\n&gt; &gt;=\r\n &gt;\n&gt; &gt;\n&gt; &gt; If the user is human, the link text imparts this knowledge. If t=\r\nhe\n&gt; &gt; user is a machine, the link relation does, i.e. rel=3D&#39;next&#39;.\n&gt; &gt;\n&gt; =\r\n&gt; -Eric\n&gt; &gt;  \n&gt; &gt;\n&gt; &gt;\n&gt; This is where my understanding of REST breaks down.=\r\n For an M2M scenario, a\n&gt; machine still has to be told what rel=3D&#39;next&#39; me=\r\nans. Whether you use a custom\n&gt; media type or HTML, if you add a new link t=\r\nype or change the format of the\n&gt; response, the client will still need to b=\r\ne changed to incorporate knowledge\n&gt; about these changes.\n&gt; \n&gt; I understand=\r\n that a human user can read the text and react intelligently,\n&gt; it&#39;s the au=\r\ntonomous machine client where my understanding fails.\n&gt; \n&gt; \n&gt; -- \n&gt; Scott B=\r\nanwart\n&gt; sbanwart@...\n&gt;\n\n\nYou are absolutely correct. So don&#39;t change the r=\r\nepresentation format or add link relations once you have deployed clients. =\r\nNote adding format extensions, including new relations, is a change to the =\r\nmedia type. Now, it can be done in a backwards compatible way, so that old =\r\nclients can ignore the extensions and still use the info it does understand=\r\n. But there is no magic way to get an old client to understand the new exte=\r\nnsions to your format.\n\nYou might be saying: &quot;wait a second -- I thought us=\r\ning REST allowed my service to evolve without changing the client by keepin=\r\ng them decoupled?&quot;\n\nThe answer is: &quot;it only does this if a representation f=\r\normat is used that allows this.&quot;\n\nThe best way to do this in my opinion is =\r\nto design the representation format around the client(s) and not the servic=\r\nes.\n\nIn my opinion:\nHTML is all about browsers and how they see your data. =\r\nYour social media app&#39;s internal data structures have nothing to do with di=\r\nvs, paragraphs, etc. You convert your data into the browser&#39;s data schema s=\r\no it can work with your data to present it to the user.\n\nIf you design a fo=\r\nrmat that can represent things in the way the client sees things then when =\r\nyour internal data structures evolve, you just figure out a way to map them=\r\n to the client format. The client doesn&#39;t need to change.\n\nHere&#39;s a toy exa=\r\nmple: Say your client only cares about the size and shape of things. Your c=\r\nlient-oriented format represents everything this way:\n{\n  name: &quot;apple&quot;,\n  =\r\nsize: &quot;small&quot;,\n  shape: &quot;sphere&quot;\n}\n{\n  name: &quot;building&quot;,\n  size: &quot;big&quot;,\n  s=\r\nhape: &quot;rectangular&quot;\n}\n\nAny new data can be appropriately represented for th=\r\nat type of client as it is represented in the terms that the client cares a=\r\nbout. Your service can evolve without changing the client.\n\nWhen you get a =\r\nnew type of client in the mix, you can design a new type of format around t=\r\nhat client and use content negotiation to figure out what format should be =\r\nused for a specific request.\n\nI&#39;m oversimplifying here, but hopefully it ge=\r\nts the point across.\n\nRead section 5.2.1 of Roy&#39;s thesis and really think a=\r\nbout what the difference is between &quot;Option 3&quot; and REST.\n\nI&#39;ve discuss this=\r\n quite a bit on my blog:\nhttp://linkednotbound.net/2010/06/09/hypermedia-is=\r\n-the-clients-lens/\nhttp://linkednotbound.net/2010/07/19/self-descriptive-hy=\r\npermedia/\n\nRegards,\n\nAndrew\n\n\n"}}