{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":86585728,"authorName":"Eric Johnson","from":"Eric Johnson &lt;eric@...&gt;","profile":"eric_at_tibco","replyTo":"SENDER","senderId":"Vk8zPbudFQufymDTw6akGfBBIPPRMCT30OZif8dxxykx_e9joXeRl7VhdLjdOqRzsocaTFShudKWgjXKMeZha9kFyIo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281035489","msgId":16149,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDNUIwQ0UxLjIwNDA5MDlAdGliY28uY29tPg==","inReplyToHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16148,"nextInTopic":16150,"prevInTime":16148,"nextInTime":16150,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"Your scenario posits multiple consumers.  How does the server-side distinguish those consumers? Are you doing bi-directional SSL authentication, HTTP-Basic, or","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 18370 invoked from network); 5 Aug 2010 19:12:21 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 5 Aug 2010 19:12:21 -0000\r\nX-Received: from unknown (HELO mx2-app.tibco.com) (63.100.100.143)\n  by mta3.grp.sp2.yahoo.com with SMTP; 5 Aug 2010 19:12:21 -0000\r\nX-IronPort-AV: E=Sophos;i=&quot;4.55,324,1278313200&quot;; \n   d=&quot;scan&#39;208,217&quot;;a=&quot;13348206&quot;\r\nX-Received: from tibco-5.tibco.com (HELO na-pa-fe01.na.tibco.com) ([63.100.100.5])\n  by mx2-app.tibco.com with ESMTP; 05 Aug 2010 12:11:21 -0700\r\nX-Received: from koosh.na.tibco.com ([10.98.32.25]) by na-pa-fe01.na.tibco.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Thu, 5 Aug 2010 12:11:20 -0700\r\nMessage-ID: &lt;4C5B0CE1.2040909@...&gt;\r\nDate: Thu, 05 Aug 2010 12:11:29 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.7) Gecko/20100726 Thunderbird/3.1.1\r\nMIME-Version: 1.0\r\nTo: juergen.brendel@...\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\r\nIn-Reply-To: &lt;1281034748.2917.303.camel@backpack&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------060906020800080006010701&quot;\r\nReturn-Path: eric@...\r\nX-OriginalArrivalTime: 05 Aug 2010 19:11:20.0412 (UTC) FILETIME=[FCCA59C0:01CB34D1]\r\nX-TM-AS-Product-Ver: SMEX-10.0.0.1412-6.500.1024-17550.007\r\nX-TM-AS-Result: No--30.585600-8.000000-31\r\nX-TM-AS-User-Approved-Sender: No\r\nX-TM-AS-User-Blocked-Sender: No\r\nFrom: Eric Johnson &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=86585728; y=xNGY7Lu0p56CYkjF1Gf4RmYoFOQZVM8Z8NslJpi0uTNR5nd17t73rQ\r\nX-Yahoo-Profile: eric_at_tibco\r\n\r\n\r\n--------------060906020800080006010701\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n Your scenario posits multiple consumers.  How does the server-side\ndistinguish those consumers?\n\nAre you doing bi-directional SSL authentication, HTTP-Basic, or just\ngiving each consumer their own URL?\n\nIn any case, &quot;GET&quot; can be idempotent on a particular URL if you define\nthe URL as:\n\n&quot;get resource already assigned to me, or if none, the next queued\nresource available.&quot;  Until the particular client then deletes (or\nupdates state to reflect that it has been consumed), the server will\nsimply give the same response each time the consumer asks.\n\n-Eric.\n\nOn 08/05/2010 11:59 AM, Juergen Brendel wrote:\n&gt;  \n&gt;\n&gt;\n&gt; Hello!\n&gt;\n&gt; Let&#39;s say I have a queue resource: /foo\n&gt;\n&gt; I can POST new entries into the queue. I can even refer to individual\n&gt; entries within the queue: /foo/&lt;id&gt;\n&gt;\n&gt; But how do I pop the next entry? How do I construct a single request\n&gt; that gets me the next/first entry but also removes the entry at the same\n&gt; time?\n&gt;\n&gt; Maybe I can implement a special resource /foo/next, which always refers\n&gt; to the next entry in the queue. But clearly, I can&#39;t use GET to pop the\n&gt; entry, since that would not be idempotent.\n&gt;\n&gt; The queue has multiple consumers, so the &#39;pop&#39; operation should be\n&gt; atomic. This seems to rule out the possibility of doing a GET to\n&gt; retrieve the latest element, followed by a DELETE to remove it. Someone\n&gt; else could have gotten the &#39;latest&#39; element in the meantime, thus\n&gt; causing the same element to be consumed twice.\n&gt;\n&gt; Maybe I can cause a &#39;move&#39;, where a single request causes the next\n&gt; element to be renamed to a unique ID, which is then returned to the\n&gt; client, who then is the only one who has a handle on that object. The\n&gt; client can then work with the resource. But the question now is:\n&gt;\n&gt; a) What happens when the client fails before it can delete the resource?\n&gt; b) What is the best way to &#39;move&#39; an item in that way?\n&gt;\n&gt; Juergen\n&gt;\n&gt; -- \n&gt; Juergen Brendel\n&gt; http://restx.mulesoft.org\n&gt;\n&gt; \n\r\n--------------060906020800080006010701\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta content=&quot;text/html; charset=UTF-8&quot; http-equiv=&quot;Content-Type&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body text=&quot;#000000&quot; bgcolor=&quot;#ffffff&quot;&gt;\n    Your scenario posits multiple consumers.  How does the server-side\n    distinguish those consumers?&lt;br&gt;\n    &lt;br&gt;\n    Are you doing bi-directional SSL authentication, HTTP-Basic, or just\n    giving each consumer their own URL?&lt;br&gt;\n    &lt;br&gt;\n    In any case, &quot;GET&quot; can be idempotent on a particular URL if you\n    define the URL as:&lt;br&gt;\n    &lt;br&gt;\n    &quot;get resource already assigned to me, or if none, the next queued\n    resource available.&quot;  Until the particular client then deletes (or\n    updates state to reflect that it has been consumed), the server will\n    simply give the same response each time the consumer asks.&lt;br&gt;\n    &lt;br&gt;\n    -Eric.&lt;br&gt;\n    &lt;br&gt;\n    On 08/05/2010 11:59 AM, Juergen Brendel wrote:\n    &lt;blockquote cite=&quot;mid:1281034748.2917.303.camel@backpack&quot;\n      type=&quot;cite&quot;&gt;\n      &lt;span style=&quot;display: none;&quot;&gt; &lt;/span&gt;\n      \n          &lt;div id=&quot;ygrp-text&quot;&gt;\n            &lt;p&gt;&lt;br&gt;\n              Hello!&lt;br&gt;\n              &lt;br&gt;\n              Let&#39;s say I have a queue resource: /foo&lt;br&gt;\n              &lt;br&gt;\n              I can POST new entries into the queue. I can even refer to\n              individual&lt;br&gt;\n              entries within the queue: /foo/&lt;id&gt;&lt;br&gt;\n              &lt;br&gt;\n              But how do I pop the next entry? How do I construct a\n              single request&lt;br&gt;\n              that gets me the next/first entry but also removes the\n              entry at the same&lt;br&gt;\n              time?&lt;br&gt;\n              &lt;br&gt;\n              Maybe I can implement a special resource /foo/next, which\n              always refers&lt;br&gt;\n              to the next entry in the queue. But clearly, I can&#39;t use\n              GET to pop the&lt;br&gt;\n              entry, since that would not be idempotent.&lt;br&gt;\n              &lt;br&gt;\n              The queue has multiple consumers, so the &#39;pop&#39; operation\n              should be&lt;br&gt;\n              atomic. This seems to rule out the possibility of doing a\n              GET to&lt;br&gt;\n              retrieve the latest element, followed by a DELETE to\n              remove it. Someone&lt;br&gt;\n              else could have gotten the &#39;latest&#39; element in the\n              meantime, thus&lt;br&gt;\n              causing the same element to be consumed twice.&lt;br&gt;\n              &lt;br&gt;\n              Maybe I can cause a &#39;move&#39;, where a single request causes\n              the next&lt;br&gt;\n              element to be renamed to a unique ID, which is then\n              returned to the&lt;br&gt;\n              client, who then is the only one who has a handle on that\n              object. The&lt;br&gt;\n              client can then work with the resource. But the question\n              now is:&lt;br&gt;\n              &lt;br&gt;\n              a) What happens when the client fails before it can delete\n              the resource?&lt;br&gt;\n              b) What is the best way to &#39;move&#39; an item in that way?&lt;br&gt;\n              &lt;br&gt;\n              Juergen&lt;br&gt;\n              &lt;br&gt;\n              -- &lt;br&gt;\n              Juergen Brendel&lt;br&gt;\n              &lt;a moz-do-not-send=&quot;true&quot; href=&quot;http://restx.mulesoft.org&quot;&gt;http://restx.mulesoft.org&lt;/a&gt;\n              &lt;br&gt;\n              &lt;br&gt;\n            &lt;/p&gt;\n          &lt;/div&gt;\n          \n      \n      &lt;!-- end group email --&gt;\n    &lt;/blockquote&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------060906020800080006010701--\r\n\n"}}