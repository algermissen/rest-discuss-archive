{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"s3OsAGctxV97mRExxE9Jorqi7vY6uQIELB5h266dU3g8pa1RPSRXeDti47lOFV0VpWtfmcyrOGQrVDEgDvveGhIB83A1jyiloUHTgH7gzhziyiv5_8jpjUQe","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HTTP request and &quot;type safety&quot;","postDate":"1268226359","msgId":15026,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhuODVmbitmN2FzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDYxNEY3NTcwLUVCMDItNDI0Ni1BRkEyLUJFMkREQzE3QjE4Q0BnYml2LmNvbT4="},"prevInTopic":15023,"nextInTopic":15028,"prevInTime":15025,"nextInTime":15027,"topicId":15020,"numMessagesInTopic":18,"msgSnippet":"OK. Let me add to that. 1. Let s no call it RPC, it is just plain method invocation, for the matter at hand it is the same thing. In this case, the idea of","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26619 invoked from network); 10 Mar 2010 13:22:09 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 10 Mar 2010 13:22:09 -0000\r\nX-Received: from unknown (HELO n45b.bullet.mail.sp1.yahoo.com) (66.163.168.159)\n  by mta3.grp.sp2.yahoo.com with SMTP; 10 Mar 2010 13:22:09 -0000\r\nX-Received: from [69.147.65.174] by n45.bullet.mail.sp1.yahoo.com with NNFMP; 10 Mar 2010 13:06:00 -0000\r\nX-Received: from [98.137.34.33] by t12.bullet.mail.sp1.yahoo.com with NNFMP; 10 Mar 2010 13:06:00 -0000\r\nDate: Wed, 10 Mar 2010 13:05:59 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hn85fn+f7as@...&gt;\r\nIn-Reply-To: &lt;614F7570-EB02-4246-AFA2-BE2DDC17B18C@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: HTTP request and &quot;type safety&quot;\r\nX-Yahoo-Group-Post: member; u=124198377; y=0zpTeYkyVqyKIyFyj_2V6YJ5pfKj7qFqbaboHPcaJCa_9W2M\r\nX-Yahoo-Profile: willmarpo\r\n\r\nOK. Let me add to that.\n\n1. Let&#39;s no call it RPC, it is just plain method i=\r\nnvocation, for the matter at hand it is the same thing. In this case, the i=\r\ndea of type safety works just the same. For objects, you have type checking=\r\n when you send a message to the wrong object. You also have type checking w=\r\nhen you send parameters. But there could be the case where two different ob=\r\nject (different classes) have a method named the same, and receiving the sa=\r\nme number of parameters, and the same parameter types too! In this case you=\r\n face the exact problem. SO the problem goes down to a clumsy API definitio=\r\nn and a lost programmer that makes the wrong calls.\n\n2. Now, in REST you ar=\r\ne supposed to create your client to discover state transitions. You start w=\r\nith one URL, and from there, each resource representation will tell you, th=\r\nrough hypermedia, where can you go next and what info you need to provide, =\r\nalso which operations to execute to perform that transition. If that is in =\r\nplace, and you are writing the client to go post to a document URL manually=\r\n (and thus, causing the error you mention) then it is your fault, not REST,=\r\n since you are not following the rules.\nOn the other hand, if your resource=\r\n representation provides the wrong URL, making your correctly programmed cl=\r\nient to commit a mistake, then the one to blame is not REST, but the progra=\r\nmmer that created the resource representation.\n\nIf you think about it, the =\r\nsame error you get using any other thing than REST.\nAlso, as with any other=\r\n interaction technique, the one that receives data to be processed, should =\r\ncheck the data is correct. If you send your social security number to a met=\r\nhod expecting the time in milliseconds, you need to find a way in that meth=\r\nod to validate the amount of milliseconds is a valid date. If it happens to=\r\n be, then you are in trouble, being REST or not.\n\nWilliam Martinez.\n\n--- In=\r\n rest-discuss@yahoogroups.com, &quot;Roy T. Fielding&quot; &lt;fielding@...&gt; wrote:\n&gt;\n&gt; =\r\nOn Mar 9, 2010, at 9:48 AM, &lt;jumeier@...&gt; &lt;jumeier@...&gt; wrote:\n&gt; \n&gt; &gt; I hav=\r\ne a customer who raised a concern about REST &quot;type safety&quot;. What he means m=\r\nay be best explained by a simple example.\n&gt; &gt; \n&gt; &gt; Assume we have a resourc=\r\ne that represents a folder, and by issueing a POST request, I can attach a =\r\nfile. What, however, if that post request wrongly goes to, let&#39;s say, anoth=\r\ner document resource instead of our folder, and the document resource also =\r\naccepts POST (for some reason)?\n&gt; &gt; \n&gt; &gt; In a RPC world, the document type =\r\nwould not understand an &quot;addDocument()&quot; call, and consequently return an ex=\r\nception. But what about REST? Of course, the POST&#39;s attributes most likely =\r\nwouldn&#39;t be understood and something like 400 Bad Request returned. But wha=\r\nt if they were understood?\n&gt; \n&gt; Ah, yes, a similar thing happens all the ti=\r\nme when\n&gt; flaying frisbee in the park with my dog.  When I throw\n&gt; the fris=\r\nbee and the dog tries to catch it in his teeth,\n&gt; everyone seems to be happ=\r\ny.  However, when the dog tries\n&gt; to throw the frisbee and I try to catch i=\r\nt in my teeth,\n&gt; it just doesn&#39;t seem to work well for either of us.\n&gt; \n&gt; &gt;=\r\n So, are there means or patterns, to achieve (some sort) of type safety?\n&gt; =\r\n\n&gt; Yes.  A RESTful interface is one where the server provides the links\n&gt; o=\r\nr forms that tells the client what operations to perform where.\n&gt; If you ar=\r\ne telling the client to do the wrong thing, then the\n&gt; pattern would be to =\r\ntell the client to do the right thing instead.\n&gt; Generally speaking, it wor=\r\nks out better that way.\n&gt; \n&gt; ....Roy\n&gt;\n\n\n\n"}}