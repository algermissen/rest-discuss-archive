{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"4d0XEMZWz3V9H-3UlPKQ0uzxjdhsHrfGBXMdal-DajbsjivuVuPYs9_mxcV3saDiU3WDNFPr9U4a-jbIYahcnZYowf4SB6QfSdWo0r8vzw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Fun with DELETE","postDate":"1183769605","msgId":9371,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc2NjQ5MDExOTM3MTc0NTcxMTgzNzY5NjA1QG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9370,"nextInTopic":9372,"prevInTime":9370,"nextInTime":9372,"topicId":8604,"numMessagesInTopic":107,"msgSnippet":"... Sorry, I meant to use the word source , which could be a file, or it could be a database cell, or a combination of both, or something else entirely.  But","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 42460 invoked from network); 7 Jul 2007 00:53:29 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m45.grp.scd.yahoo.com with QMQP; 7 Jul 2007 00:53:29 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta8.grp.scd.yahoo.com with SMTP; 7 Jul 2007 00:53:29 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nReceived: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 38DFC523B0\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat,  7 Jul 2007 00:53:25 +0000 (UTC)\r\nTo: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W6649011937174571183769605@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Sat, 07 Jul 2007 00:53:25 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re: Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;Why do you keep thinking in terms of files? Files are irrelevant.\n&gt;What does moving a file to a URI even mean?\n&gt;\n\nSorry, I meant to use the word &quot;source&quot;, which could be a file, or \nit could be a database cell, or a combination of both, or something \nelse entirely.  But if you are changing the identifier of that \nsource, you are making it a new resource, which is either a MOVE or \na COPY.  All I am doing is flagging the source as having been \nremoved, no new URL required.\n\n&gt;\n&gt;You&#39;re exposing your knowledge of the previous existence of a\n&gt;resource as a separate resource.\n&gt;\n\nI suppose you could do it that way if you wanted and could make it \nRESTful, but I am merely representing the resource as having been \nremoved, not assigning it a new identifier that must be interpreted \nas having the same meaning as a 4xx response even though it&#39;s \ngiving a 200 OK response.  How, by dereferencing the URL which \nincludes &quot;/trash/&quot; in its path, does the server convey to me that \nthe file has been removed?  If I must infer this from the URL then \nI&#39;m forgetting that URLs are opaque.\n\n&gt;\n&gt;I admit that responding with a redirect is the wrong answer. It\n&gt;took me a few iterations to get to a 200 response to a DELETE\n&gt;with a link in the entity-body, but that is the right approach.\n&gt;\n\nI agree that a link in a 200 or 204 response is better than a \nredirect, but I still believe such a response breaks the Universal \nInterface constraint by tunneling &quot;move&quot; through &quot;remove&quot; and \nthat a PUT followed by a DELETE is a RESTful, RFC 2616-based \nsolution.\n\n&gt;\n&gt;The server responds to the DELETE by saying â€œOK, itâ€™s gone;\n&gt;hereâ€™s a description of how you can also delete my memory of\n&gt;its previous existence by deleting the following resource.â€\n&gt;\n\nYou&#39;re saying that sending the client a different URL that also \nneeds deletion to fully remove the resource, is superior than \nsending two DELETE requests to the same URL to achieve the same \nthing.  I&#39;m still not seeing the need for the added complexity \nof executing a MOVE as part of a DELETE request, and I still \ndon&#39;t understand how changing an URL to reflect state in the \npath segment is understandable by intermediaries who only \ninterpret 410 Gone as meaning &quot;removed&quot;, not a 200 OK response \nfrom a different URL that includes &quot;/trash/&quot; in the path.\n\nOnce you&#39;ve assigned a &quot;deleted&quot; URL to the resource, you now \nhave two identifiers for the same resource.  In and of itself, \nthis is not a problem, except that each URL gives a different \nrepresentation of resource state (one is 4xx, the other 200).  \nWhich one is authoritative about the resource state being \n&quot;removed&quot;, the 404 or 410 response, or the 200 OK response?  \nWouldn&#39;t this confuse user-agents, and users?\n\n&gt;\n&gt;The resource and the serverâ€™s memory of its existence are two\n&gt;separate Things, and should be exposed separately.\n&gt;\n\nI&#39;m sorry, but I see all of this as simply changing the state of \none resource.  First, it exists.  Then, it is gone.  Then, as an \noption, it was never there.  But none of this implies that the \nserver has forgotten, or should have forgotten, about the resource.  \nI am merely altering the response to requests for one resource, to \nreflect the current state of that resource, by returning a status \ncode.\n\n&gt;\n&gt;Your double-DELETE is a very surprising interpretation of what\n&gt;RFCÂ 2616 allows. You are effectively overloading the meaning of\n&gt;410 in a way that the uniformity constraint reserves for the\n&gt;entity body.\n&gt;\n\n??? The Uniform Interface constraint pertains to request methods and \ntheir corresponding response codes.  Where does RFC 2616 tell me that \nthe server can no longer accept requests once a resource has had its \nstatus changed to 410 Gone?  And where does anything say that \nresponse codes apply to the entity body?  They convey the status of \nthe resource, but the response may contain both resource headers and \nentity headers.\n\nRFC 2616 clearly allows a DELETE to change the status of a resource \nto either 404 or 410, this is exactly what the Uniform Interface \nconstraint means.  There is no restriction in either RFC 2616 or \nREST which states that the resource must respond 200 OK before a \nDELETE request may be accepted.  In fact, RFC 2616 clearly states \nthat a resource responding 404 or 410 can still exist -- it may \njust be a matter of privilege level, where authorization is \nrequired before a GET will respond 200 OK.\n\n&gt;\n&gt;You seem to be following the WebDAV school of HTTP which\n&gt;considers resources somehow equivalent to files on the serverâ€™s\n&gt;disk and prefers to model additional aspects of state by putting\n&gt;them into the method instead of exposing them as resources.\n&gt;\n\nThat characterization couldn&#39;t be further from my view of things.  \nWe are discussing a situation where there is both a resource, and a \nsource, I use the term &quot;source file&quot; because that is exactly what I \nam discussing in this thread -- my implementation, which in this \ncase is using a file.  I used the example I used because too many \npeople are claiming that the deletion of a resource must result in the \ndeletion of the source.  So it is just a narrative convenience to \nspeak in terms of a DELETE only changing the status of the resource \nwithout touching the source &quot;file&quot;, because only the resource \nmapping gets deleted -- or rather, has its status changed to express \na &quot;removed&quot; state to the requesting client.\n\nMy application uses one URL and content negotiation to serve four \ndifferent &quot;text/html&quot; representations and three &quot;application/xhtml+xml&quot; \nrepresentations (plus one Atom and one PDF) depending on client \ncapability, so I would have to say that I am keenly aware of the \nseparation between the HTTP resource/representation model and the \nfile-centric models of FTP and WebDAV.\n\n&gt;\n&gt;URI proliferation is about multiple names for the same resource.\n&gt;I donâ€™t understand how this applies to my proposed protocol\n&gt;design. From a REST point of view, URI starvation (where you\n&gt;donâ€™t expose sufficient state as separate resources and overload\n&gt;aspects of other messages instead) is worse.\n&gt;\n\nI have to disagree, there.  If I have one resource which has a variety \nof possible states, then I want the response to a request for that \nresource to reflect the current state of the resource, in the \nretrieved representation -- either as an entity body or as a control \ncode.  I do not want to change the semantics of the mapping of my \nresource when state changes, i.e. the resource is a conceptual \nmapping that does not include any information about the resource \nstate, that can only be conveyed in a representation of the resource, \nnot by deducing the meaning of the assigned URL.  I name my resource \n&quot;a thing&quot;, not &quot;an existing thing&quot; or &quot;a deleted thing&quot; depending on \nits state.  The HTTP response indicates state, not the resource \nidentifier.\n\nIf I have some other semantic mapping for the same resource, then I \nassign it a new URL, i.e. sometimes I want to describe the &quot;thing of \nthe day&quot;.  Under your method, that would need to be changed to &quot;the \ndeleted thing of the day&quot; if someone deletes &quot;a thing&quot; at the wrong \ntime.\n\n-Eric\n\n\n\n\n"}}