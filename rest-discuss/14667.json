{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":199324805,"authorName":"Guilherme Silveira","from":"Guilherme Silveira &lt;guilherme.silveira@...&gt;","profile":"guilherme_azevedo_silveira","replyTo":"SENDER","senderId":"BspC_Nw_4WmbjFIdT_GE-1skg9to9DsPgXc9iWYJhbYPOej2PrP6M8xzB9Mzf54HPsOWN5BgCnmhJH5p41ywke-vHiqzwvdbaKoeJJTzJx63BnNJ-ha8jjOBoiA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HATEOAS question","postDate":"1264432741","msgId":14667,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU4MWJmNjE2MTAwMTI1MDcxOXA3MmY3YTY4YWgxNzQ5NGJhMzMzMmM5OTdlQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGQxMTYwMzg2MTAwMTI1MDcwNncyN2QwMTBiOGs5NDk0MzhkOTczZmNmZTM2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGQxMTYwMzg2MTAwMTI0MDcyMnA2NjdlMWE0NXI3OGQ1YjRiZmQyMTZhODcxQG1haWwuZ21haWwuY29tPiAJPDg0MTcxOTFDLTBBRkQtNDg1Qy05RkM1LTVCNUIwQjY0MzJCNUBtYWMuY29tPiA8NTgxYmY2MTYxMDAxMjQxNDI1dDMyMWU5MDZjdTliZTI1NmRiYjA3YmZmNDBAbWFpbC5nbWFpbC5jb20+IAk8ZDExNjAzODYxMDAxMjQyMjE4aDUxZTg4NDRlcTJjNTBjZTJjYmQyZWJkZEBtYWlsLmdtYWlsLmNvbT4gCTw1ODFiZjYxNjEwMDEyNTAzMTF3MTkxMjcxMjVwMTUzYmE3ODM1MzI3YzI5OEBtYWlsLmdtYWlsLmNvbT4gCTxkMTE2MDM4NjEwMDEyNTA3MDZ3MjdkMDEwYjhrOTQ5NDM4ZDk3M2ZjZmUzNkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":14666,"nextInTopic":14668,"prevInTime":14666,"nextInTime":14668,"topicId":14654,"numMessagesInTopic":13,"msgSnippet":"Hello Felipe! - the code is digesting the exceptions ?? RuntimeExceptions are hidden there - how your code knows the return type (json, xml, xhtml, etc)? ","rawEmail":"Return-Path: &lt;guilherme.silveira@...&gt;\r\nX-Sender: guilherme.silveira@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 39989 invoked from network); 25 Jan 2010 15:20:31 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m4.grp.sp2.yahoo.com with QMQP; 25 Jan 2010 15:20:31 -0000\r\nX-Received: from unknown (HELO mail-fx0-f228.google.com) (209.85.220.228)\n  by mta3.grp.re1.yahoo.com with SMTP; 25 Jan 2010 15:20:31 -0000\r\nX-Received: by fxm28 with SMTP id 28so604532fxm.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 25 Jan 2010 07:19:21 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.3.196 with SMTP id 4mr1873098fao.63.1264432761156; Mon, 25 \n\tJan 2010 07:19:21 -0800 (PST)\r\nIn-Reply-To: &lt;d11603861001250706w27d010b8k949438d973fcfe36@...&gt;\r\nReferences: &lt;d11603861001240722p667e1a45r78d5b4bfd216a871@...&gt; \n\t&lt;8417191C-0AFD-485C-9FC5-5B5B0B6432B5@...&gt; &lt;581bf6161001241425t321e906cu9be256dbb07bff40@...&gt; \n\t&lt;d11603861001242218h51e8844eq2c50ce2cbd2ebdd@...&gt; \n\t&lt;581bf6161001250311w19127125p153ba7835327c298@...&gt; \n\t&lt;d11603861001250706w27d010b8k949438d973fcfe36@...&gt;\r\nDate: Mon, 25 Jan 2010 13:19:01 -0200\r\nX-Google-Sender-Auth: c9466164a03dd3e7\r\nMessage-ID: &lt;581bf6161001250719p72f7a68ah17494ba3332c997e@...&gt;\r\nTo: =?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001517478cd09234ec047dfeb1fc\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Guilherme Silveira &lt;guilherme.silveira@...&gt;\r\nSubject: Re: [rest-discuss] HATEOAS question\r\nX-Yahoo-Group-Post: member; u=199324805; y=ueT02tagfkxKZZ87SedAEglJi6LmZy9JrED5GMLInRxnK_f_lM2SiM58cne93daiwGceIKc\r\nX-Yahoo-Profile: guilherme_azevedo_silveira\r\n\r\n\r\n--001517478cd09234ec047dfeb1fc\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello Felipe!\n\n- the code is digesting the exceptions ??\nRuntimeExceptions =\r\nare hidden there\n\n- how your code knows the return type (json, xml, xhtml, =\r\netc)?\nContent-negotiation, the server knows which types it can handle..\n\nRe=\r\ngards\n\nGuilherme Silveira\nCaelum | Ensino e Inova=E7=E3o\nhttp://www.caelum.=\r\ncom.br/\n\n\n2010/1/25 Felipe Ga=FAcho &lt;fgaucho@...&gt;\n\n&gt;\n&gt;\n&gt; just for cur=\r\niosity... (if you posted a real code)....\n&gt;\n&gt; - the code is digesting the e=\r\nxceptions ??\n&gt; - how your code knows the return type (json, xml, xhtml, etc=\r\n)?\n&gt;\n&gt; as fair I see this are the only difference between the two codes..\n&gt;=\r\n\n&gt; * yes, I can use that trick to inspect the generic type, but I preferred=\r\n to\n&gt; pass as reference due to other purposes ...\n&gt;\n&gt;\n&gt; 2010/1/25 Guilherme=\r\n Silveira &lt;guilherme.silveira@...&gt;\n&gt;\n&gt; &gt; please point to an examp=\r\nle...\n&gt;&gt; Convention over Configuration: Erlang&#39;s OTP imply on default funct=\r\nion\n&gt;&gt; names in order to work, otherwise you have to work it on your own. R=\r\nails is\n&gt;&gt; the best example, being used around with a lot of conventions.\n&gt;=\r\n&gt;\n&gt;&gt; For the Java platform, Restfulie follows this path in the controller: =\r\nthe\n&gt;&gt; same JAX-RS code you have mentioned in restfulie java could be to:\n&gt;=\r\n&gt;\n&gt;&gt; public T read(Object key) {\n&gt;&gt;   return manager.find(key);\n&gt;&gt; }\n&gt;&gt;\n&gt;&gt; =\r\npublic T retrieve(T object) {\n&gt;&gt;   return dao.read(object.getPrimaryKey());=\r\n\n&gt;&gt; }\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Of couse, it depends on a lot of conventions - but they made=\r\n your code\n&gt;&gt; much simpler:\n&gt;&gt; a) the dao object knows how to generic handl=\r\ne types\n&gt;&gt; b) the controller methods that know how to handle resources have=\r\n some\n&gt;&gt; default names (retrieve, update, create, delete, head, ...)\n&gt;&gt;\n&gt;&gt; =\r\nAll of this can be implemented - including removing both methods and\n&gt;&gt; req=\r\nuiring zero code for this specific behavior, if thats the conventional\n&gt;&gt; o=\r\nne.\n&gt;&gt;\n&gt;&gt; cheers\n&gt;&gt;\n&gt;&gt; Guilherme Silveira\n&gt;&gt; Caelum | Ensino e Inova=E7=E3o=\r\n\n&gt;&gt; http://www.caelum.com.br/\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;  my current code for reading a resou=\r\nrce:\n&gt;&gt;&gt;\n&gt;&gt;&gt; @Override\n&gt;&gt;&gt; @TransactionAttribute(TransactionAttributeType.N=\r\nOT_SUPPORTED)\n&gt;&gt;&gt; public T read(Class&lt;T&gt; type, final Object primaryKey)\n&gt;&gt;&gt;=\r\n throws IllegalStateException, IllegalArgumentException {\n&gt;&gt;&gt; return manage=\r\nr.find(type, primaryKey);\n&gt;&gt;&gt; }\n&gt;&gt;&gt;\n&gt;&gt;&gt; and the code to expose it on the we=\r\nb:\n&gt;&gt;&gt;\n&gt;&gt;&gt; @GET\n&gt;&gt;&gt; @Produces( { MediaType.APPLICATION_XML, MediaType.APPLI=\r\nCATION_JSON })\n&gt;&gt;&gt; @Path(&quot;{name}&quot;)\n&gt;&gt;&gt; public PujCompetitionDetailsEntity r=\r\nead(@PathParam(&quot;name&quot;) String name) {\n&gt;&gt;&gt; return detailsFacade.read(PujComp=\r\netitionDetailsEntity.class, name);\n&gt;&gt;&gt; }\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; --\n&gt; ------------=\r\n------------------------------\n&gt;   Felipe Ga=FAcho\n&gt;   10+ Java Programmer\n=\r\n&gt;   CEJUG Senior Advisor\n&gt;\n&gt;  \n&gt;\n\r\n--001517478cd09234ec047dfeb1fc\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello Felipe!&lt;br&gt;&lt;br&gt;- the code is digesting the exceptions ??&lt;br&gt;RuntimeEx=\r\nceptions are hidden there&lt;br&gt;&lt;br&gt;- how your code knows the return type (jso=\r\nn, xml, xhtml, etc)?&lt;br&gt;Content-negotiation, the server knows which types i=\r\nt can handle..&lt;br&gt;\n\n\n&lt;br&gt;Regards&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;Guilherme Silveira&lt;br=\r\n&gt;Caelum | Ensino e Inova=E7=E3o&lt;br&gt;&lt;a href=3D&quot;http://www.caelum.com.br/&quot; ta=\r\nrget=3D&quot;_blank&quot;&gt;http://www.caelum.com.br/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gma=\r\nil_quote&quot;&gt;2010/1/25 Felipe Ga=FAcho &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto=\r\n:fgaucho@...&quot; target=3D&quot;_blank&quot;&gt;fgaucho@...&lt;/a&gt;&gt;&lt;/span&gt;&lt;br&gt;&lt;=\r\nblockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 2=\r\n04, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;=\r\ndiv style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;di=\r\nv&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;just for curiosity... (if you=\r\n posted a real code)....&lt;br&gt;&lt;br&gt;- the code is digesting the exceptions ??&lt;b=\r\nr&gt;- how your code knows the return type (json, xml, xhtml, etc)?&lt;br&gt;&lt;br&gt;as =\r\nfair I see this are the only difference between the two codes.. &lt;br&gt;\n\n\n\n&lt;br=\r\n&gt;* yes, I can use that trick to inspect the generic type, but I preferred t=\r\no pass as reference due to other purposes ... &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;div class=3D=\r\n&quot;gmail_quote&quot;&gt;2010/1/25 Guilherme Silveira &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D=\r\n&quot;mailto:guilherme.silveira@...&quot; target=3D&quot;_blank&quot;&gt;guilherme.silve=\r\nira@...&lt;/a&gt;&gt;&lt;/span&gt;&lt;div&gt;\n\n\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;\n&lt;blockquote cl=\r\nass=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;d=\r\niv&gt;&gt;=A0please point to an example...&lt;/div&gt;&lt;div&gt;Convention over Configura=\r\ntion: Erlang&#39;s OTP imply on default function names in order to work, ot=\r\nherwise you have to work it on your own. Rails is the best example, being u=\r\nsed around with a lot of conventions.&lt;/div&gt;\n\n\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For th=\r\ne Java platform, Restfulie follows this path in the controller: the same JA=\r\nX-RS code you have mentioned in restfulie java could be to:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div&gt;public T read(Object key)=A0{&lt;br&gt;=A0=A0return manager.find(key);&lt;=\r\nbr&gt;\n\n\n\n\n\n}&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;public T retrieve(T object) {&lt;=\r\nbr&gt;=A0=A0return dao.read(object.getPrimaryKey());&lt;br&gt;}&lt;br&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Of couse, it depends on a lot of conventions - but they mad=\r\ne your code much simpler:&lt;/div&gt;\n\n\n\n\n\n&lt;div&gt;a) the dao object knows how to ge=\r\nneric handle types&lt;/div&gt;&lt;div&gt;b) the controller methods that know how to han=\r\ndle resources have some default names (retrieve, update, create, delete, he=\r\nad, ...)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\n\n\n\n\n\nAll of this can be implemented - in=\r\ncluding removing both methods and requiring zero code for this specific beh=\r\navior, if thats the conventional one.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;cheers&lt;/div&gt;=\r\n&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;Guilherme Silveira&lt;br&gt;\n\n\n\n\n\nCaelum | Ensino e Inova=E7=\r\n=E3o&lt;br&gt;&lt;a href=3D&quot;http://www.caelum.com.br/&quot; target=3D&quot;_blank&quot;&gt;http://www.=\r\ncaelum.com.br/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;blockquote class=\r\n=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;div =\r\nstyle=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;div&gt;&lt;div&gt;\n&lt;div&gt;&lt;div&gt;\nmy cu=\r\nrrent code for reading a resource:&lt;br&gt;\n&lt;br&gt;\n@Override&lt;br&gt;\n@TransactionAttri=\r\nbute(TransactionAttributeType.NOT_SUPPORTED)&lt;br&gt;\npublic T read(Class&lt;T&g=\r\nt; type, final Object primaryKey)&lt;br&gt;\n\t\tthrows IllegalStateException, Illeg=\r\nalArgumentException {&lt;br&gt;\n\treturn manager.find(type, primaryKey);&lt;br&gt;\n}&lt;br&gt;=\r\n\n&lt;br&gt;\nand the code to expose it on the web:&lt;br&gt;\n&lt;br&gt;\n@GET&lt;br&gt;\n@Produces( { =\r\nMediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })&lt;br&gt;\n@Path(&quot;{n=\r\name}&quot;)&lt;br&gt;\npublic PujCompetitionDetailsEntity read(@PathParam(&quot;na=\r\nme&quot;) String name) {&lt;br&gt;\n\treturn detailsFacade.read(PujCompetitionDetai=\r\nlsEntity.class, name);&lt;br&gt;\n}&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;/div&gt;=\r\n&lt;div style=3D&quot;color: rgb(255, 255, 255);&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/div=\r\n&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;=\r\nbr&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;br&gt;-- &lt;br&gt;--------------------------------------=\r\n----&lt;br&gt; =A0 Felipe Ga=FAcho&lt;br&gt; =A0 10+ Java Programmer&lt;br&gt; =A0 CEJUG Seni=\r\nor Advisor&lt;br&gt;&lt;br&gt;\n&lt;/div&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color: =\r\nrgb(255, 255, 255); min-height: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockqu=\r\note&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--001517478cd09234ec047dfeb1fc--\r\n\n"}}