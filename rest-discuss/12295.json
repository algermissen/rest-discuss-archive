{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"Assaf Arkin &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"dMrlAy1UvDaotJSpnPpc4ew8Ivfex-s7uYY11b_dICAPJr7ib09rpb55axKuIELUC1EF90pNce5BDz0M_KhRUUUoZxrUW_Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237569261","msgId":12295,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDkwMzIwMTAxNG80YzFhNGQ4N2s5ZmYxODY5NTEyMTRkNDJlQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzE4MTYzNjAxLjQwNDdkMDZiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPiAJPDUwMzdiNmU0MDkwMzE4MDk1N2c3MGMyNmQ1OHE2ZmNkODllY2JkMjMwYzk3QG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE4MTUxOTM2LjQ5MzM5ZmU0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDUwMzdiNmU0MDkwMzE4MTQyNXA2NmNhNTc4ZXVmNjViMzQwMjdjZGNiOGFlQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE4MTYzNjAxLjQwNDdkMDZiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":12294,"nextInTopic":12296,"prevInTime":12294,"nextInTime":12296,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... I ve been trying to think why this is patently wrong, and it now occurred to me. REST is distributed, there are no boundaries, it therefore does not have ","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19493 invoked from network); 20 Mar 2009 17:14:40 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m3.grp.re1.yahoo.com with QMQP; 20 Mar 2009 17:14:40 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.228)\n  by mta2.grp.re1.yahoo.com with SMTP; 20 Mar 2009 17:14:37 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id g37so488618rvb.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 20 Mar 2009 10:14:37 -0700 (PDT)\r\nMIME-Version: 1.0\r\nIn-Reply-To: &lt;20090318163601.4047d06b.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt; \n\t&lt;5037b6e40903180957g70c26d58q6fcd89ecbd230c97@...&gt; \n\t&lt;20090318151936.49339fe4.eric@...&gt; &lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt; \n\t&lt;20090318163601.4047d06b.eric@...&gt;\r\nDate: Fri, 20 Mar 2009 10:14:21 -0700\r\nX-Received: by 10.140.132.4 with SMTP id f4mr1463393rvd.291.1237569276886; Fri, \n\t20 Mar 2009 10:14:36 -0700 (PDT)\r\nMessage-ID: &lt;5037b6e40903201014o4c1a4d87k9ff186951214d42e@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Dong Liu &lt;edongliu@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd2903a2241ba0465900d2e\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Assaf Arkin &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=319607554; y=9UaxGuxgZsyoYLje_pZoRDM5dmncLm4s8hQ-emlaQPs89TvjTA\r\nX-Yahoo-Profile: assafarkin\r\n\r\n\r\n--000e0cd2903a2241ba0465900d2e\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Wed, Mar 18, 2009 at 3:36 PM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt;\n&gt; If an API doesn&#39;t implement DELETE, and also doesn&#39;t use POST for\n&gt; anything but deletion (single or batch), and the options are presented\n&gt; in an HTML form then yes, it&#39;s a uniform interface.  However, once\n&gt; DELETE is also implemented, or if POST is used for anything else like\n&gt; accepting content uploads, the interface is no longer uniform, unless\n&gt; and until the previous usage of POST to delete is deprecated.\n\n\nI&#39;ve been trying to think why this is patently wrong, and it now occurred to\nme. REST is distributed, there are no boundaries, it therefore does not have\nthe notion of an API.\n\nI can talk about an API, the set of resources and media types I decided to\ndocument, or read about someone else, of for the purpose of containing a\ndiscussion we agreed to look at. But there is no cohesion unit of API under\nREST to which this litmus test can apply.\n\nIronically this pursuit of &quot;no resource may disappear unless directly\nDELETEed&quot; has resulted in this litmus test which is both tightly coupled and\nallowing non-uniformity, as seen in the context of distributed architecture.\n\nAssaf\n\n\n\n&gt;\n&gt;\n&gt; The fact remains, that only the use of the DELETE method on a URI-by-\n&gt; URI basis is visible to intermediaries.  This is the only way to\n&gt; prevent the user who requested the deletion from reloading the deleted\n&gt; content from cache.  Except, of course, to not cache anything --\n&gt; thereby defeating the entire premise of using REST to begin with...\n&gt;\n&gt; -Eric\n&gt;\n\r\n--000e0cd2903a2241ba0465900d2e\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Mar 18, 2009 at 3:36 PM, Eric J. Bowman =\r\n&lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...&quot;&gt;eric@bisonsy=\r\nstems.net&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\n&lt;div =\r\nclass=3D&quot;im&quot;&gt;&lt;br&gt;&lt;/div&gt;If an API doesn&#39;t implement DELETE, and also doe=\r\nsn&#39;t use POST for&lt;br&gt;\nanything but deletion (single or batch), and the =\r\noptions are presented&lt;br&gt;\nin an HTML form then yes, it&#39;s a uniform inte=\r\nrface. =A0However, once&lt;br&gt;\nDELETE is also implemented, or if POST is used =\r\nfor anything else like&lt;br&gt;\naccepting content uploads, the interface is no l=\r\nonger uniform, unless&lt;br&gt;\nand until the previous usage of POST to delete is=\r\n deprecated.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&#39;ve been trying to think =\r\nwhy this is patently wrong, and it now occurred to me. REST is distributed,=\r\n there are no boundaries, it therefore does not have the notion of an API.&lt;=\r\n/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I can talk about an API, the set of resources an=\r\nd media types I decided to document, or read about someone else, of for the=\r\n purpose of containing a discussion we agreed to look at. But there is no c=\r\nohesion unit of API under REST to which this litmus test can apply.&lt;/div&gt;\n\n=\r\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ironically this pursuit of &quot;no resource may disapp=\r\near unless directly DELETEed&quot; has resulted in this litmus test which i=\r\ns both tightly coupled and allowing non-uniformity, as seen in the context =\r\nof distributed architecture.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assaf&lt;/div&gt;&lt;div&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 =\r\n0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nThe fact rem=\r\nains, that only the use of the DELETE method on a URI-by-&lt;br&gt;\nURI basis is =\r\nvisible to intermediaries. =A0This is the only way to&lt;br&gt;\nprevent the user =\r\nwho requested the deletion from reloading the deleted&lt;br&gt;\ncontent from cach=\r\ne. =A0Except, of course, to not cache anything --&lt;br&gt;\nthereby defeating the=\r\n entire premise of using REST to begin with...&lt;br&gt;\n&lt;font color=3D&quot;#888888&quot;&gt;=\r\n&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd2903a2241ba0465900d2e--\r\n\n"}}