{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Aw1f6JmjLIhxuv7KtT9TqIr3hohwVQjkzewHxK0W2v0MFXUNxerlGL2lkoNdGaNQH6CiLxT4jX_sSBgd3DXiQms4pVIdfHBJHnXR57xq8A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Hateoas or mini-RPC?","postDate":"1253371994","msgId":13391,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwOTE5MDg1MzE0LjMzMjRiODg4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRBMDc2MjNGLjIwMTAwMDRAcmVkaGF0LmNvbT4=","referencesHeader":"PDRBMDRBRDlDLjcwMTA0MDZAcmVkaGF0LmNvbT4JPDIwMDkwNTA4MTcyNDUyLjk4YmQ2MzM2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDRBMDc2MjNGLjIwMTAwMDRAcmVkaGF0LmNvbT4="},"prevInTopic":12675,"nextInTopic":13392,"prevInTime":13390,"nextInTime":13392,"topicId":12583,"numMessagesInTopic":22,"msgSnippet":"On Fri, 08 May 2009 18:09:32 -0400 ... Absolutely not.  When you want to change the state of a resource, you manipulate that resource -- you don t assign the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 42101 invoked from network); 19 Sep 2009 14:53:46 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.re1.yahoo.com with QMQP; 19 Sep 2009 14:53:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 19 Sep 2009 14:53:46 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id D3979509B3;\n\tSat, 19 Sep 2009 10:53:31 -0400 (EDT)\r\nDate: Sat, 19 Sep 2009 08:53:14 -0600\r\nTo: Bill Burke &lt;bburke@...&gt;\r\nCc: REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090919085314.3324b888.eric@...&gt;\r\nIn-Reply-To: &lt;4A07623F.2010004@...&gt;\r\nReferences: &lt;4A04AD9C.7010406@...&gt;\n\t&lt;20090508172452.98bd6336.eric@...&gt;\n\t&lt;4A07623F.2010004@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Hateoas or mini-RPC?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nOn Fri, 08 May 2009 18:09:32 -0400\nBill Burke &lt;bburke@...&gt; wrote:\n\n&gt; Let&#39;s say I have an Order resource in a ecommerce Order Entry system. \n&gt; How would I implement my service so that I can cancel an order rather \n&gt; than delete it?  One is to have the cancel state as part of the\n&gt; order. THen I can just put a new representation with the cancelled\n&gt; state set to true:\n&gt; \n&gt; PUT /orders/333\n&gt; content-type: application/xml\n&gt; \n&gt; &lt;order id=&quot;333&quot;&gt;\n&gt;     &lt;cancelled&gt;false&lt;/cancelled&gt;\n&gt; ...\n&gt; &lt;/order&gt;\n&gt; \n&gt; Seems kinda heavy to me.\n&gt; \n&gt; Would it still be restful to define a &quot;cancelled&quot; URI that you could\n&gt; put or post to to change the state?\n&gt; \n\nAbsolutely not.  When you want to change the state of a resource, you\nmanipulate that resource -- you don&#39;t assign the operation to some\nother URL.  The proper way of doing this is what you started with, as\nmyself and others told you.  But you are more concerned with calling\nwhat you&#39;re doing REST by playing semantics with the terminology, than\nyou are with learning REST -- this is my opinion from dealing with you\non rest-discuss, and observing your responses to others on rest-discuss.\n\n&gt;\n&gt; /orders/333/cancelled\n&gt; \n&gt; or\n&gt; \n&gt; /orders/333?cancel=true\n&gt; \n&gt; You don&#39;t even need to send data to change the state in this\n&gt; scenario. But the problem with this from a pure RESTful standpoint\n&gt; is, isn&#39;t this a mini-RPC?  My thought at first is YES IT IS....\n&gt; \n\nYes, it is RPC, and your first clue should be, &quot;you don&#39;t even need to\nsend data to change the state...&quot;  In REST, state is changed by\nmanipulating representations of resources.  Sending a POST to some\naction-URL with no content in it, is the epitome of a non-RESTful\ninteraction.\n\n&gt;\n&gt; .... But, consider if you have cancelling as part of a HATEOAS\n&gt; \n&gt; &lt;order id=&quot;333&quot;&gt;\n&gt;     &lt;atom:link rel=&quot;CANCEL&quot;\n&gt; href=&quot;http://example.com/orders/333/cancelled&quot;/&gt; ...\n&gt; &lt;/order&gt;\n&gt; \n&gt; \n&gt; Now, I have a CANCEL link that if I follow changes the state of my \n&gt; resource.  Doesn&#39;t seem so RPCish now that I&#39;ve embedded it as a\n&gt; link. Maybe the answer is /orders/333/cancelled isn&#39;t very RESTful by\n&gt; itself, but when combined with HATEOAS it is?\n&gt; \n\nNo, providing a link to a resource doesn&#39;t make that resource RESTful.\nPretend I&#39;ve just posted a link to a butt-ugly URL that obviously has\nnothing to do with REST.  Following the link to get to that butt-ugly\nnon-RESTful URL doesn&#39;t make that URL RESTful.\n \n&gt; \n&gt; -- \n&gt; Bill Burke\n&gt; JBoss, a division of Red Hat\n&gt; http://bill.burkecentral.com\n&gt; \nOn Sun, 10 May 2009 19:24:47 -0400\nBill Burke &lt;bburke@...&gt; wrote:\n\n&gt; \n&gt; \n&gt; Eric J. Bowman wrote:\n&gt; &gt; Bill Burke wrote:\n&gt; &gt; \n&gt; &gt;&gt; Seems kinda heavy to me.\n&gt; &gt;&gt;\n&gt; &gt; \n&gt; &gt; But that&#39;s the way it&#39;s done.  ;-)\n&gt; &gt; \n&gt; &gt;&gt; Now, I have a CANCEL link that if I follow changes the state of my \n&gt; &gt;&gt; resource.  Doesn&#39;t seem so RPCish now that I&#39;ve embedded it as a\n&gt; &gt;&gt; link. Maybe the answer is /orders/333/cancelled isn&#39;t very RESTful\n&gt; &gt;&gt; by itself, but when combined with HATEOAS it is?\n&gt; &gt;&gt;\n&gt; &gt; \n&gt; &gt; Linking to a procedure call, doesn&#39;t make that procedure call a REST\n&gt; &gt; resource.  What happens if you GET /cancelled?\n&gt; \n&gt; /orders/{id}/cancelled is a thing.  It is a state.  It either exists\n&gt; or doesn&#39;t exist.  So, if you do a GET and the state exists:\n&gt; \n&gt; HTTP/1.1 204, No Content\n&gt; \n&gt; or even\n&gt; \n&gt; HTTP/1.1 405, Method Not Allowed\n&gt; Allow: PUT, DELETE\n&gt; \n&gt; If it doesn&#39;t exist:\n&gt; \n&gt; HTTP/1.1 404, Not Found\n&gt; \n&gt; or even\n&gt; \n&gt; HTTP/1.1 410, Gone\n&gt; \n\nIf you do a GET and the resource is a REST resource, you&#39;ll receive a\nrepresentation of the state of that resource.  If you get nothing, you\naren&#39;t really using REST.  It is certainly confusing to be told that a\nresource doesn&#39;t exist or is gone via a 404 or a 410 response, when\nthat resource obviously must exist in order to accept a POST.\n\n&gt;\n&gt; &gt;  What is it a\n&gt; &gt; representation of?  The resource?  Or some action, i.e. remote\n&gt; &gt; procedure?  If you aren&#39;t transferring representations of resources\n&gt; &gt; in order to change their state, then you aren&#39;t using REST.\n&gt; &gt; \n&gt; \n&gt; So you&#39;re saying a thing can&#39;t merely exist?  It needs to have a \n&gt; representation?  I don&#39;t think so.\n&gt; \n\nNo, I&#39;m not saying that.  I&#39;m saying that in REST, resources have\nrepresentations.  That&#39;s the whole point.  Instead of listening or\nasking questions, your response is defensive and argumentative -- this\nis not a good path to go down to learn REST.\n\n&gt;\n&gt; I think I&#39;ve just convinced my self that even without the &lt;link&gt; this\n&gt; is pretty restful.\n&gt; \n\nAnd therein lies the problem.  Myself and others were pointing out what\nyou were doing wrong, in a polite fashion by listing some criteria you\nweren&#39;t meeting.  Your response was to play semantics with that and\nconvince yourself that you know better about REST than others trying to\nteach it to you.  But as I think you&#39;ve seen from the REST-* debacle,\nyou haven&#39;t convinced _others_ that what you come up with is RESTful.\n\n&gt; \n&gt; Damn the URLS are here:\n&gt; \n&gt; http://groups.google.com/group/reststar-messaging/web/submission-2-draft-restful-queue\n&gt; http://groups.google.com/group/reststar-messaging/web/submission-2-draft-restful-pub-sub\n&gt; \n\nYou&#39;re still not even close.  How many more people need to tell you,\nand how emphatically should they tell you, that your design patterns\nare RPC, and not REST by any stretch?\n\n&gt;\n&gt; Since the state of the queue changes when reading this message, a\n&gt; POST should be performed.\n&gt;\n\nNo.  There can be nothing more clear than the semantics of GET.  To\nread a message, GET the message.  POST is not GET.  GETting one\nresource may very well cause another resource to be changed, no\nbiggie.  To retrieve a representation of a resource in REST, the verb\nis GET.  Want a message from a queue?  GET the message, don&#39;t POST to\nthe queue.\n\n&gt;\n&gt; Send---&gt;\n&gt; POST /queues/myqueue/pollers\n&gt;\n\nThis is an RPC endpoint, not a REST resource.  Once again, the issue is\nwhat happens when you GET this resource?  Does it return a\nrepresentation?  No?  Then you&#39;re not using REST.\n\n&gt;\n&gt; &lt;---Response:\n&gt; HTTP/1.1 200 Ok\n&gt; Content-Location: /queues/myqueue/messages/3332222\n&gt; Content-Type: application/json\n&gt;\n&gt; &lt;the consumed json message&gt;\n&gt;\n&gt; If the response is successfully delivered to the client, then the\n&gt; message will be removed from the queue.\n&gt;\n\nWhy don&#39;t you leave that up to the client?  Once the client GETs a\nmessage, the client should verify that it was received intact by\ncomparing the message body to the Content-Md5 header.  If it&#39;s intact,\nthen the client can DELETE the message or POST some sort of\nrepresentation to the queue, indicating which message may be removed --\nthe interaction I describe is driven by hypertext, i.e. HEAS.\n\nYour interactions only work with foreknowledge of specific actions to\ntake on specific URIs as derived from a spec.  Not through HEAS.\n\n-Eric\n\n"}}