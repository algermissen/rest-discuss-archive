{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":117929308,"authorName":"Jeffrey Winter","from":"&quot;Jeffrey Winter&quot; &lt;j.winter@...&gt;","replyTo":"SENDER","senderId":"UeLMbgwesTudbQWwRoKJOY37n-beJCFrJpvs1eLbcUNs5jMd9hKVJHpSmJwCepsQLgjhYwg2ZJQtZQrlhpI9KSUxuGkeMslH7LcOHQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] squaring (was Re:HTTP and safety)","postDate":"1030566472","msgId":2265,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwZTYwMWMyNGVkMSQ2MzU1OTY0MCQyYTAxMTRhY0BOSVRFTy5DT00+","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4Q0VAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2261,"nextInTopic":2270,"prevInTime":2264,"nextInTime":2266,"topicId":2255,"numMessagesInTopic":11,"msgSnippet":"... It seems to me that the difference breaks down along the lines of how POST can be used: 1. To request the creation of a subordinate resource. 2. As a","rawEmail":"Return-Path: &lt;J.Winter@...&gt;\r\nX-Sender: J.Winter@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 28 Aug 2002 20:25:48 -0000\r\nReceived: (qmail 69931 invoked from network); 28 Aug 2002 20:25:48 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m4.grp.scd.yahoo.com with QMQP; 28 Aug 2002 20:25:48 -0000\r\nReceived: from unknown (HELO exch-gw-ab.EXCHPROD.USA.NET) (165.212.49.201)\n  by mta3.grp.scd.yahoo.com with SMTP; 28 Aug 2002 20:25:48 -0000\r\nReceived: from EXCH-MR-AA.EXCHPROD.USA.NET ([10.26.48.53]) by exch-gw-ab.EXCHPROD.USA.NET with Microsoft SMTPSVC(5.0.2195.2966);\n\t Wed, 28 Aug 2002 14:25:41 -0600\r\nReceived: from 10.26.48.53 by EXCH-MR-AA.EXCHPROD.USA.NET (InterScan E-Mail VirusWall NT); Wed, 28 Aug 2002 14:25:41 -0600 (Mountain Daylight Time)\r\nReceived: from 9hxa2 ([208.178.165.2]) by EXCH-MR-AA.EXCHPROD.USA.NET with Microsoft SMTPSVC(5.0.2195.2966);\n\t Wed, 28 Aug 2002 14:25:40 -0600\r\nMessage-ID: &lt;00e601c24ed1$63559640$2a0114ac@...&gt;\r\nTo: &quot;&#39;Seairth Jacobs&#39;&quot; &lt;seairth@...&gt;,\n\t&quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Mathews, Walden&quot; &lt;waldenm@...&gt;\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F640155F8CE@...&gt;\r\nSubject: Re: [rest-discuss] squaring (was Re:HTTP and safety)\r\nDate: Wed, 28 Aug 2002 16:27:52 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nx-mimeole: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nReturn-Path: j.winter@...\r\nX-OriginalArrivalTime: 28 Aug 2002 20:25:41.0003 (UTC) FILETIME=[13F945B0:01C24ED1]\r\nFrom: &quot;Jeffrey Winter&quot; &lt;j.winter@...&gt;\r\nX-Yahoo-Group-Post: member; u=117929308\r\n\r\n&gt; Again, in case it&#39;s not clear above, it&#39;s about\n&gt; *discriminating*  RPC from REST, if indeed they\n&gt; are partitioned (I don&#39;t think they are).\n\nIt seems to me that the difference breaks down along\nthe lines of how POST can be used:\n\n1. To request the creation of a subordinate resource.\n\n2. As a logical PUT (or DELETE).  There was a thread\nearlier this month about whether or not it is okay to\nuse POST to perform partial resource updates. I recall that\nit was suggested that it is purer (and sometimes necessary)\nto update the entire resource using a PUT, but performance\nrequirements, etc., may preclude doing so.  In this case,\nusing POST is okay.\n\n3. To request a resource to perform some action upon some\nlogically subordinate data.\n\n4. To tunnel RPC over HTTP to make arbitrary calls.\n\nSo, the question is: is there a meaningful difference\nbetween 3 and 4?\n\nI think there is. RPC generally POSTs to some generic URL;\nessentially, the id of the resource being acted upon becomes\nthe first parameter in the procedure call.  With REST you\nhave at least moved the first parameter out to a real URL.\n\nBeyond that though, when confronted with an problem where\nsome RPC-ish approach may be considered, the recourse\nmodel can be refactored to make it more RESTful.\n\nFor a simplified example such as squaring numbers, using\nthe GET/PUT semantics is the way to go, but for a more\ngeneral case were some arbitrary level of backend processing\nneeds to occur, a POST operation would often need to be employed.\n\nThis would seem to hold especially when multiple\nresources need to be updated in an atomic way.\n\nFor example, how do you handle transferring money from\na savings account to a checking account?\n\n\nSam Ruby has an article (that I believe someone here had\nreferenced before) where he makes the statement:\n\n&quot;It is the expression of higher level operations (particularly\nones that perform non-atomic updates) that SOAP&#39;s value\nproposition becomes apparent.  Sometimes, one truly wants\nto have an atomic &quot;transfer funds from savings to checking&quot;\ntransaction instead of simply a series of discrete GET and PUT&#39;s.&quot;\n\n[http://radio.weblogs.com/0101679/stories/2002/07/20/restSoap.html]\n\nSurely you can&#39;t just GET the account representations, update\nthe balance in each and then PUT them back one at a time.\n\nI understand the sentiment behind Ruby&#39;s statement, but I don&#39;t\nagree that REST precludes doing atomic operations, so long as\nPOST semantics are employed.\n\n\nFor example, you could request the creation of a\n&quot;transfer&quot; resource\n\n POST /user/joe/accounts/transfers\n &lt;transfer from-account=&quot;savings/1234&quot;\nto-account=&quot;checking/2345&quot;&gt;50&lt;/transfer&gt;\n\non successful transfer:\n\n 201 Created\n Location: /user/joe/accounts/transfers/00001\n\nif insufficient funds:\n\n  400 Bad Request\n\nA GET against /transfers could return a transfer history, etc.\n\n\n\nIf you did something like POST the to-account number and amount\nto the from-acount resource:\n\n POST /user/joe/savings/transfer\n &lt;transfer to-account=&quot;2345&quot;&gt;50&lt;/transfer&gt;\n\none could argue that this is RESTful since you are asking the\naccount resource to work with logically subordinate data, but\nusing POST in this way does start to &quot;smell&quot; like RPC.\n\n\nThanks,\n- Jeff\n\n\n"}}