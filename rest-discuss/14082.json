{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":267214845,"authorName":"Noah Campbell","from":"Noah Campbell &lt;noahcampbell@...&gt;","profile":"noahsingleton","replyTo":"SENDER","senderId":"ojByDIfLtEtvVxsZUO6TA_EjTEbF5Te5gv9YVe_0ur2ret-jq2F67665HzdLM8mqWq7HwFQtXmlaPhvEDIUpieKGVXzvhkhl_YhBHRo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Documenting RESTful Services (part II)","postDate":"1260217060","msgId":14082,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRlNzBiMzlkMDkxMjA3MTIxN24zZDgxNWViZnY1ODVlNmJlZDM2YjUwZGFAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDM5MTVjNjlkMDkxMjA3MTExN3AzNTA1ZWY3bWIyOWJlODVkM2Y4MmUxYjFAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PGhmaThyOSsxbnFwQGVHcm91cHMuY29tPgkgPDM5MTVjNjlkMDkxMjA3MTExN3AzNTA1ZWY3bWIyOWJlODVkM2Y4MmUxYjFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14081,"nextInTopic":14140,"prevInTime":14081,"nextInTime":14083,"topicId":14079,"numMessagesInTopic":5,"msgSnippet":"At the very least, XHTML+XML tells you you can throw an xml parser against it.  A whole set of tools will work assuming it is well formated.  With text/html","rawEmail":"Return-Path: &lt;noahcampbell@...&gt;\r\nX-Sender: noahcampbell@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 94964 invoked from network); 7 Dec 2009 20:17:40 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m11.grp.re1.yahoo.com with QMQP; 7 Dec 2009 20:17:40 -0000\r\nX-Received: from unknown (HELO mail-pw0-f55.google.com) (209.85.160.55)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Dec 2009 20:17:40 -0000\r\nX-Received: by pwj2 with SMTP id 2so891445pwj.34\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 07 Dec 2009 12:17:40 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.7.41 with SMTP id 41mr784760wfg.117.1260217060096; Mon, 07 \n\tDec 2009 12:17:40 -0800 (PST)\r\nIn-Reply-To: &lt;3915c69d0912071117p3505ef7mb29be85d3f82e1b1@...&gt;\r\nReferences: &lt;hfi8r9+1nqp@...&gt;\n\t &lt;3915c69d0912071117p3505ef7mb29be85d3f82e1b1@...&gt;\r\nDate: Mon, 7 Dec 2009 12:17:40 -0800\r\nMessage-ID: &lt;de70b39d0912071217n3d815ebfv585e6bed36b50da@...&gt;\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: Jorn Wildt &lt;jw@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00504502b4ff34fc75047a2926b1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Noah Campbell &lt;noahcampbell@...&gt;\r\nSubject: Re: [rest-discuss] Documenting RESTful Services (part II)\r\nX-Yahoo-Group-Post: member; u=267214845; y=em5WvPY1QFJXtNvpoS-uKDtjVKaCsPe-JmEyTq8T0nAIHzihQtUt3A\r\nX-Yahoo-Profile: noahsingleton\r\n\r\n\r\n--00504502b4ff34fc75047a2926b1\r\nContent-Type: text/plain; charset=UTF-8\r\n\r\nAt the very least, XHTML+XML tells you you can throw an xml parser against\nit.  A whole set of tools will work assuming it is well formated.  With\ntext/html its not quite so simple, but there do exist parsers and all their\nquirks for dealing with HTML.  text/plain would tell you that\nsed/awk/grep/etc. will work.\n\n\n-Noah\n\nOn Mon, Dec 7, 2009 at 11:17 AM, Will Hartung &lt;willh@...&gt; wrote:\n\n&gt; I think it&#39;s generally accepted that &quot;entry point&quot; URLs can be\n&gt; templated, and rely on external documentation. Mind, everything\n&gt; should, inevitably, be discoverable from a simple GET /, but that&#39;s\n&gt; just an entry point like any other entry point.\n&gt;\n&gt; I don&#39;t think there is any requirement that there be a single entry\n&gt; point in to your service, the root entry.\n&gt;\n&gt; At the same time, however, the more entry points you publish, the more\n&gt; you cede control to the client in terms of activities and operations,\n&gt; because ideally you are committed to those entry points that you\n&gt; publish, and the structure of those entry points. This is the balance\n&gt; you&#39;re trying to achieve.\n&gt;\n&gt; As for query parameters, these are not &quot;discoverable&quot;. That&#39;s simple\n&gt; truth, at least not in an MtoM transcation.\n&gt;\n&gt; All data types are essentially a priori information. Information that\n&gt; it is assumed &quot;everyone&quot; knows.\n&gt;\n&gt; Now, your search form is a perfectly acceptable way of publishing\n&gt; documentation for a search, but there should be no assumption that a\n&gt; system will be able to &quot;figure it out&quot;, and &quot;know what to do&quot; in order\n&gt; to search. That behavior will have to be coded.\n&gt;\n&gt; A programmer could send a request, and see the resulting payload and\n&gt; go &quot;oh, I see how they want us to do searches&quot;, so in that sense, it&#39;s\n&gt; &quot;inline&quot; documentation. But, you can just as easily post a link to the\n&gt; documentation telling them the same thing.\n&gt;\n&gt; Even then, with your simple form, you&#39;ll notice theirs no information\n&gt; about the contents of the search parameters, other than they&#39;re\n&gt; strings. For example, in Google, the search criteria is really a\n&gt; search expression with a specific syntax.\n&gt;\n&gt; Even if you could publish a grammar of the syntax accepted by the\n&gt; search service, that doesn&#39;t really communicate the semantics of how\n&gt; you would want to use it. Inevitably this will need to be documented.\n&gt;\n&gt; All of the documentation can be bundled. You can call &quot;GET /&quot; and get\n&gt; a human readable document documenting and describing all of the\n&gt; services, while at the same time exposing those services and providing\n&gt; the proper links that systems can use to use the service. It&#39;s nice,\n&gt; but you can see how it can be expensive as well with larger payloads.\n&gt;\n&gt; My only complaint with using XHTML as a content-type is that it&#39;s too\n&gt; vague. You may as well use &quot;text/plain&quot;. Both are perfectly adequate\n&gt; for humans, but terrible for machines, which is why I prefer the\n&gt; datatypes be as specific as possible. You can perhaps rely on\n&gt; microformats and other patterns within the XHTML, letting XHTML be\n&gt; more a wrapper, then the machines can analyze an XHTML payload and\n&gt; look for embedded formats that it understands. That&#39;s a good\n&gt; compromise in this case, but when the client sees\n&gt; &quot;application/xhtml+xml&quot;, all it &quot;knows&quot; is that it&#39;s XHTML, there&#39;s no\n&gt; contract that it actually contains anything relevant to the client in\n&gt; terms of microformats, or anything else.\n&gt;\n&gt; Regards,\n&gt;\n&gt; Will Hartung\n&gt; (willh@...)\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\r\n--00504502b4ff34fc75047a2926b1\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAt the very least, XHTML+XML tells you you can throw an xml parser against =\r\nit. =C2=A0A whole set of tools will work assuming it is well formated. =C2=\r\n=A0With text/html its not quite so simple, but there do exist parsers and a=\r\nll their quirks for dealing with HTML. =C2=A0text/plain would tell you that=\r\n sed/awk/grep/etc. will work.&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Noah&lt;br&gt;&lt;=\r\nbr&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Dec 7, 2009 at 11:17 AM, Will Hartung=\r\n &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:willh@...&quot;&gt;willh@mirthco=\r\nrp.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nmargin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\nI think it=\r\n&#39;s generally accepted that &quot;entry point&quot; URLs can be&lt;br&gt;\ntemp=\r\nlated, and rely on external documentation. Mind, everything&lt;br&gt;\nshould, ine=\r\nvitably, be discoverable from a simple GET /, but that&#39;s&lt;br&gt;\njust an en=\r\ntry point like any other entry point.&lt;br&gt;\n&lt;br&gt;\nI don&#39;t think there is a=\r\nny requirement that there be a single entry&lt;br&gt;\npoint in to your service, t=\r\nhe root entry.&lt;br&gt;\n&lt;br&gt;\nAt the same time, however, the more entry points yo=\r\nu publish, the more&lt;br&gt;\nyou cede control to the client in terms of activiti=\r\nes and operations,&lt;br&gt;\nbecause ideally you are committed to those entry poi=\r\nnts that you&lt;br&gt;\npublish, and the structure of those entry points. This is =\r\nthe balance&lt;br&gt;\nyou&#39;re trying to achieve.&lt;br&gt;\n&lt;br&gt;\nAs for query paramet=\r\ners, these are not &quot;discoverable&quot;. That&#39;s simple&lt;br&gt;\ntruth, a=\r\nt least not in an MtoM transcation.&lt;br&gt;\n&lt;br&gt;\nAll data types are essentially=\r\n a priori information. Information that&lt;br&gt;\nit is assumed &quot;everyone&qu=\r\not; knows.&lt;br&gt;\n&lt;br&gt;\nNow, your search form is a perfectly acceptable way of =\r\npublishing&lt;br&gt;\ndocumentation for a search, but there should be no assumptio=\r\nn that a&lt;br&gt;\nsystem will be able to &quot;figure it out&quot;, and &quot;kn=\r\now what to do&quot; in order&lt;br&gt;\nto search. That behavior will have to be c=\r\noded.&lt;br&gt;\n&lt;br&gt;\nA programmer could send a request, and see the resulting pay=\r\nload and&lt;br&gt;\ngo &quot;oh, I see how they want us to do searches&quot;, so i=\r\nn that sense, it&#39;s&lt;br&gt;\n&quot;inline&quot; documentation. But, you can j=\r\nust as easily post a link to the&lt;br&gt;\ndocumentation telling them the same th=\r\ning.&lt;br&gt;\n&lt;br&gt;\nEven then, with your simple form, you&#39;ll notice theirs no=\r\n information&lt;br&gt;\nabout the contents of the search parameters, other than th=\r\ney&#39;re&lt;br&gt;\nstrings. For example, in Google, the search criteria is reall=\r\ny a&lt;br&gt;\nsearch expression with a specific syntax.&lt;br&gt;\n&lt;br&gt;\nEven if you coul=\r\nd publish a grammar of the syntax accepted by the&lt;br&gt;\nsearch service, that =\r\ndoesn&#39;t really communicate the semantics of how&lt;br&gt;\nyou would want to u=\r\nse it. Inevitably this will need to be documented.&lt;br&gt;\n&lt;br&gt;\nAll of the docu=\r\nmentation can be bundled. You can call &quot;GET /&quot; and get&lt;br&gt;\na huma=\r\nn readable document documenting and describing all of the&lt;br&gt;\nservices, whi=\r\nle at the same time exposing those services and providing&lt;br&gt;\nthe proper li=\r\nnks that systems can use to use the service. It&#39;s nice,&lt;br&gt;\nbut you can=\r\n see how it can be expensive as well with larger payloads.&lt;br&gt;\n&lt;br&gt;\nMy only=\r\n complaint with using XHTML as a content-type is that it&#39;s too&lt;br&gt;\nvagu=\r\ne. You may as well use &quot;text/plain&quot;. Both are perfectly adequate&lt;=\r\nbr&gt;\nfor humans, but terrible for machines, which is why I prefer the&lt;br&gt;\nda=\r\ntatypes be as specific as possible. You can perhaps rely on&lt;br&gt;\nmicroformat=\r\ns and other patterns within the XHTML, letting XHTML be&lt;br&gt;\nmore a wrapper,=\r\n then the machines can analyze an XHTML payload and&lt;br&gt;\nlook for embedded f=\r\normats that it understands. That&#39;s a good&lt;br&gt;\ncompromise in this case, =\r\nbut when the client sees&lt;br&gt;\n&quot;application/xhtml+xml&quot;, all it &quo=\r\nt;knows&quot; is that it&#39;s XHTML, there&#39;s no&lt;br&gt;\ncontract that it a=\r\nctually contains anything relevant to the client in&lt;br&gt;\nterms of microforma=\r\nts, or anything else.&lt;br&gt;\n&lt;br&gt;\nRegards,&lt;br&gt;\n&lt;br&gt;\nWill Hartung&lt;br&gt;\n(&lt;a href=\r\n=3D&quot;mailto:willh@...&quot;&gt;willh@...&lt;/a&gt;)&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n----=\r\n--------------------------------&lt;br&gt;\n&lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;=\r\n*&gt; To visit your group on the web, go to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;h=\r\nttp://groups.yahoo.com/group/rest-discuss/&quot; target=3D&quot;_blank&quot;&gt;http://groups=\r\n.yahoo.com/group/rest-discuss/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your email settings:&lt;=\r\nbr&gt;\n =C2=A0 =C2=A0Individual Email | Traditional&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To chan=\r\nge settings online go to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;http://groups.yahoo.=\r\ncom/group/rest-discuss/join&quot; target=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/grou=\r\np/rest-discuss/join&lt;/a&gt;&lt;br&gt;\n =C2=A0 =C2=A0(Yahoo! ID required)&lt;br&gt;\n&lt;br&gt;\n&lt=\r\n;*&gt; To change settings via email:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;mailto:re=\r\nst-discuss-digest@yahoogroups.com&quot;&gt;rest-discuss-digest@yahoogroups.com&lt;/a&gt;&lt;=\r\nbr&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;mailto:rest-discuss-fullfeatured@yahoogroups.c=\r\nom&quot;&gt;rest-discuss-fullfeatured@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To uns=\r\nubscribe from this group, send an email to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;ma=\r\nilto:rest-discuss-unsubscribe@yahoogroups.com&quot;&gt;rest-discuss-unsubscribe@yah=\r\noogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to=\r\n:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;http://docs.yahoo.com/info/terms/&quot; target=3D=\r\n&quot;_blank&quot;&gt;http://docs.yahoo.com/info/terms/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/blockquote&gt;&lt;/div&gt;=\r\n&lt;br&gt;&lt;/div&gt;\n\r\n--00504502b4ff34fc75047a2926b1--\r\n\n"}}