{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"RrXCfjC-xJ-ByUl0g9G1n9b_QBpYcGgFIn35-Dh_6bM0McZXsZKaEZW7ZFndkVtYje5sn-KPe_mMLXaBClyCLi6UOPZnin555X0EOygtWA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Experience implementing custom media handlers","postDate":"1260862242","msgId":14148,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjE1MDAzMDQyLmVkMTFjOGJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEZDOTIzNjczLUVGQzktNDYyNC04MTY5LTA1MEFGNEJFRTcyNUBpbm5vcS5jb20+","referencesHeader":"PEZDOTIzNjczLUVGQzktNDYyNC04MTY5LTA1MEFGNEJFRTcyNUBpbm5vcS5jb20+"},"prevInTopic":14077,"nextInTopic":14149,"prevInTime":14147,"nextInTime":14149,"topicId":14068,"numMessagesInTopic":20,"msgSnippet":"... The same as all my other experience developing to REST s Uniform Interface - I got used to not doing it that way.  Instead of using RPC-via-POST to","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98474 invoked from network); 15 Dec 2009 07:31:21 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m11.grp.re1.yahoo.com with QMQP; 15 Dec 2009 07:31:21 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 15 Dec 2009 07:31:21 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 8F5C1509DC;\n\tTue, 15 Dec 2009 02:31:20 -0500 (EST)\r\nDate: Tue, 15 Dec 2009 00:30:42 -0700\r\nTo: Stefan Tilkov &lt;stefan.tilkov@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20091215003042.ed11c8bf.eric@...&gt;\r\nIn-Reply-To: &lt;FC923673-EFC9-4624-8169-050AF4BEE725@...&gt;\r\nReferences: &lt;FC923673-EFC9-4624-8169-050AF4BEE725@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Experience implementing custom media handlers\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nStefan Tilkov wrote:\n&gt;\n&gt; Slightly OT, but what are people experiences in implementing custom\n&gt; client-side media type handlers? I mean registering a helper\n&gt; application to handle, say, content of type\n&gt; application/vnd.my-cool-stuff when a representation of this type is\n&gt; returned in response to a browser request.\n&gt;\n\nThe same as all my other experience developing to REST&#39;s Uniform\nInterface - I got used to not doing it that way.  Instead of using\nRPC-via-POST to implement my own application methods, I stick with\nGET-HEAD-PUT-POST-PATCH-DELETE-OPTIONS as per:\n\n&quot;\nREST enables intermediate processing by constraining messages to be\nself-descriptive: interaction is stateless between requests, standard\nmethods and media types are used to indicate semantics and exchange\ninformation, and responses explicitly indicate cacheability.\n&quot;\n\nhttp://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_1\n\nThe key concept being the use of _standard_ methods and media types.\nIn a nutshell, my advice on creating a mime type for your REST system\nis, don&#39;t!  Back up, and figure out how to do it with existing standard\nmethods and media types -- this is the requirement for serendipitous\nre-use.\n\nWhen I find myself defining new media types or HTTP request methods to\nsolve a problem, I consider that I&#39;ve gone off the rails.  If I insist\nto myself that I am right, this does call for a new method and/or mime\ntype, I go ahead and do it.  But, I include an asterisk stating that\nthe system will only be RESTful pending standardization of the non-\nstandard methods and/or mime types I&#39;ve used.  Mostly, though, I&#39;ve\nfound that I can achieve my purpose without violating the &quot;self-\ndescriptive messaging&quot; constraint.\n\nSo, consider using custom extensions to a well-known mime type like\napplication/atom+xml, or perhaps a subset like &#39;application/something\n+xml&#39;.  Better to use RELAX NG + Schematron to define an ontology that&#39;s\ncompatible with application/xml.  Mostly, though, I like good ol&#39;\nXHTML, with @class and @id a la microformats, plus RDFa these days.\nSometimes wrapped in Atom, defined using RELAX NG + Schematron\n(starting with James Clark&#39;s RELAX NG interpretation of XHTML\nmodularization).\n\n(Instead of defining a custom table structure in XML with a cell of\n&lt;widget_price&gt;1.00&lt;/widget_price&gt;, use XHTML tables and &lt;td\nclass=&#39;widget_price&#39;&gt;1.00&lt;/td&gt;.  Clients that don&#39;t know that a widget\ncosts a dollar can still render a human-readable table, while others\nmay execute an XML PI to transform the whole thing to SVG for display.\nOr an agent could use something like GRDDL or RDFa, to extract that\nknowledge (using rel=&#39;transformation&#39; and XSLT for GRDDL).)\n\nMy point is, so much can be done these days using standard media types,\nparticularly HTML and XML types, that I fail to understand why so many\nREST systems insist on using non-standard media types to solve problems\nalready addressed through the standardization process.  +1 to Noah:\n\n&gt;\n&gt; On 03.12.2009, at 21:51, Noah Campbell wrote:\n&gt; \n&gt; &gt; \n&gt; &gt; Why not reuse an existing media-type?\n&gt; &gt; \n&gt; \n&gt; I fail to see how that would help me, as I&#39;m trying to invoke a\n&gt; particular proprietary handler.\n&gt; \n\nIf you absolutely can&#39;t represent your resources using standard media\ntypes, then you&#39;re looking at implementing REST&#39;s optional Code-on-\nDemand constraint:\n\n&gt;\n&gt; On 03.12.2009, at 17:46, Mark Baker wrote:\n&gt; \n&gt; &gt; Have you looked at JAF?\n&gt; &gt; \n&gt; &gt; http://java.sun.com/javase/technologies/desktop/javabeans/jaf/downloads/index.html\n&gt; &gt; \n&gt; &gt; I first used it when it came out in &#39;98 IIRC, but haven&#39;t kept up\n&gt; &gt; with it.\n&gt; &gt; \n&gt; \n&gt; Thanks, but AFAICT, that would only work within a Java environment,\n&gt; i.e. I can register types within my Java program to be invoked once a\n&gt; particular media type shows up.\n&gt; \n\nExactly.  Your use case requires &quot;client functionality to be extended\nby downloading and executing code in the form of [an applet]&quot; designed\nto handle your non-standard media type.  If you&#39;re using Java, then any\njava-enabled browser can GET a representation of the standard media type\napplication/java, perhaps by following a link in an &lt;object&gt; tag in an\nHTML document.  Now, your non-standard media type may be manipulated in\na RESTful fashion, using CoD, at the cost of some visibility.\n\n-Eric\n\n"}}