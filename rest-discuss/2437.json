{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119744001,"authorName":"Chuck Hinson","from":"Chuck Hinson &lt;cmhinson@...&gt;","replyTo":"SENDER","senderId":"M-dNlt8MfIS2vID-BaZGKpicvc8JcCpurJTBD9BqX0OjH0ilhAkKmmGP3Vbg_Gwda0opyu6Ex0B0aucD-VQwNRus_dIcAj0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] what is state?","postDate":"1031462738","msgId":2437,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEN0FERjUyLjkwOEBwb25kLmNvbT4=","referencesHeader":"PDAwMmEwMWMyNTViYiRkZGVkNThjMCQ2NTAwYThjMEBzZWFpcnRobGFwdG9wPiA8M0Q3OTg3REYuMTAyMDkwNUBwb25kLmNvbT4gPDAwMTQwMWMyNTZhNSQyYTY0YjFmMCQ2NTAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":2435,"nextInTopic":2439,"prevInTime":2436,"nextInTime":2438,"topicId":2410,"numMessagesInTopic":36,"msgSnippet":"Seairth Jacobs wrote: [...] ... For the most part, I think I agree, although I m suspicious of the first and last sentences.  In my mind, the only relationship","rawEmail":"Return-Path: &lt;cmhinson@...&gt;\r\nX-Sender: cmhinson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 8 Sep 2002 05:25:39 -0000\r\nReceived: (qmail 86600 invoked from network); 8 Sep 2002 05:25:39 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 8 Sep 2002 05:25:39 -0000\r\nReceived: from unknown (HELO smtp.comcast.net) (24.153.64.2)\n  by mta1.grp.scd.yahoo.com with SMTP; 8 Sep 2002 05:25:39 -0000\r\nReceived: from pond.com (pcp01417615pcs.umrion01.pa.comcast.net [68.80.11.92])\n by mtaout02.icomcast.net\n (iPlanet Messaging Server 5.1 HotFix 0.8 (built May 13 2002))\n with ESMTP id &lt;0H2300623TQPTW@...&gt; for\n rest-discuss@yahoogroups.com; Sun, 08 Sep 2002 01:25:38 -0400 (EDT)\r\nDate: Sun, 08 Sep 2002 01:25:38 -0400\r\nSubject: Re: [rest-discuss] what is state?\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;3D7ADF52.908@...&gt;\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=us-ascii; format=flowed\r\nContent-transfer-encoding: 7BIT\r\nX-Accept-Language: en-us, en\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:0.9.9)\n Gecko/20020311\r\nReferences: &lt;002a01c255bb$dded58c0$6500a8c0@seairthlaptop&gt;\n &lt;3D7987DF.1020905@...&gt; &lt;001401c256a5$2a64b1f0$6500a8c0@seairthlaptop&gt;\r\nFrom: Chuck Hinson &lt;cmhinson@...&gt;\r\nX-Yahoo-Group-Post: member; u=119744001\r\n\r\n\n\nSeairth Jacobs wrote:\n\n[...]\n\n&gt;\n&gt;1) Resource : we all agree that a resource is something identified by a URI.\n&gt;The resource itself is only a concept.  It may or may not have a one-to-one\n&gt;relationship with a &quot;physical&quot; entity (file, purchase order, person, car,\n&gt;etc.).  For instance, one could have a purchase order stored in multiple\n&gt;tables on a remote SQL server and we would still be able to consider the PO\n&gt;as a resource.  Also, it is possible for more than one URI to identify the\n&gt;same resource.\n&gt;\n\nFor the most part, I think I agree, although I&#39;m suspicious of the first \nand last sentences.  In my mind, the only relationship between URIs and \nresources is that resources arent very useful if they dont have names \nwith which they can be referenced.\n\n&gt;\n&gt;2) Representation : when one requests a resource, it can never be given the\n&gt;actual resource.  Instead, the request gets back a representation of the\n&gt;resource.  This representation is unique to the request URI (though more\n&gt;than one URI could return unique representations that are byte-wise\n&gt;identical).  An important point here is that &quot;representation&quot; only has\n&gt;meaning in context to a response from the server.  In other words, one\n&gt;cannot speak of sending a representation in a request.\n&gt;\n\nI don&#39;t understand what you&#39;re trying to say when you say the \nrepresentation is unique to the request URI.  A representation only has \nmeaning in connection with the resource it represents.  Actually, the \nmeaning of a representation is dependent on the resource it represents. \n But I&#39;m not sure what we&#39;re accomplishing by pointing that out.\n\n&gt;\n&gt;\n&gt;3) State : what is state?  On the one hand, I think of state in the\n&gt;&quot;traditional&quot; sense, which just means &quot;what the resource is at a given\n&gt;moment in time (usually &#39;now&#39;)&quot;.  But it is not possible to know what the\n&gt;state of a resource is. \n&gt;\n\nWhat do you mean by this?  The representation tells you exactly what the \nstate of the resource was when the request was serviced.\n\n&gt; All that one can know is the representation\n&gt;returned, which is presumably the &quot;current state&quot;.  In fact, all that is\n&gt;ever visible is the &quot;current state&quot;.  From what I&#39;ve read so far, there&#39;s\n&gt;nothing in REST itself with clearly defines how to know when &quot;state&quot; has\n&gt;changed.  This is left up to the application.\n&gt;\n\nI would agree - REST focuses mainly on transferring state.  Only the \napplication can determine what you should do or observe in order to \ndetermine whether the state of a resource has changed.\n\n&gt;\n&gt;\n&gt;The other way of thinking of state it to related it to &quot;representation&quot;\n&gt;instead.  In other words, under this view, all that a client knows is the\n&gt;state of a resource, not the resource itself.  When we PUT an entity, we are\n&gt;PUTting &quot;the current state&quot; of a resource and not the resource itself.  \n&gt;\n\nWhen we do a PUT, we are transferring a representation of the state we \nwant the specified resource to have.  If the specified resource does not \nalready exist, it will be created before the PUT operation is applied to it.\n\n&gt;When\n&gt;we use GET, we get back a &quot;representation of the state of the resource&quot;, not\n&gt;the resource itself.  This view certainly makes it more clear what &quot;state&quot;\n&gt;is, but it also raises some questions.\n&gt;\n&gt;     a) RFC2616 Section 9.6 (PUT) talks about the ability of a client to\n&gt;request the creation of a resource located at the Request-URI.  Now, in term\n&gt;s of REST, would it be more appropriate to say that the client is requesting\n&gt;the creation of a resource whose initial state is that of the\n&gt;request-entity?\n&gt;\n\n From 9.6 in 2616\n&lt;quote&gt; The PUT method requests that the enclosed entity be stored under \nthe supplied  Request-URI. &lt;/quote&gt;\n\nThe enclosed entity is a representation of the resource&#39;s &quot;inital state&quot; \nas you call it.\n\n&gt;\n&gt;    b) If you have two URIs identifing the same resource, suppose the\n&gt;following sequence:\n&gt;\n&gt;        PUT &lt;entity&gt; uri1\n&gt;        GET uri1\n&gt;        PUT &lt;entity2&gt; uri2\n&gt;        GET uri1\n&gt;\n&gt;        We would agree that the state of the resource changed after each PUT\n&gt;request.  \n&gt;\n\nI&#39;m not sure that I would agree to that.  You can&#39;t know whether or not \nthe resource will change state without knowing the specifics of that \nparticular resource.  For some resources, your statement would be true. \n For others it would not.\n\n&gt;However, it would still be possible for the second GET to return a\n&gt;byte-wise identical representation as the first GET.  How would we know that\n&gt;the state changed? \n&gt;\n\nYou&#39;d have to read the [API] documentation for that specific resource in \norder to know what you have to do to detect a state change.\n\n&gt;Or is this scenario not allowed when using PUT?  Can\n&gt;this only happen with POST?\n&gt;\n&gt;    c) When issuing a DELETE against a URI, are we deleting the current\n&gt;state or the resource itself? \n&gt;\n\n From 9.7 in 2616\n&lt;quote&gt;The DELETE method requests that the origin server delete the resource\nidentified by the Request-URI. &lt;/quote&gt;\n\n&gt;[note: In an earlier post, I had suggested\n&gt;that the DELETE was actually deleting the identity (i.e. the relationship of\n&gt;the URI to the resource).  It was up to the server to delete the resource or\n&gt;not.]\n&gt;\n&gt;    d) Does a URI identify the state of a resource or the resource itself?\n&gt;\n\nA URI identifies a resource.  The state of the resource is what is \ntransferred as input and/or output by some of the various methods that \ncan be applied to the resource.\n\n\nI&#39;m not sure whether I&#39;m helping here or not.  It all seems clear to me \n(for now) - I&#39;m just not sure I can describe things in a way that&#39;s \nhelpful to anyone else.\n\n--Chuck\n\n\n\n"}}