{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"X1mZkI-mXNN5inCIgGd9qQSUU5Pxk3VpG6i2EFrlEyaaVuM3iZbBLCkK6CtYiNMzpIYi32M28PPor8UUjNF901sWdoMXclM43hFi570FSQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"URI Opacity  (was: RE: [rest-discuss] REST design question)","postDate":"1164153682","msgId":7081,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc1MjkxMjE5Nzc0MjE4NTcxMTY0MTUzNjgyQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":0,"nextInTopic":7086,"prevInTime":7080,"nextInTime":7082,"topicId":7081,"numMessagesInTopic":4,"msgSnippet":"My mantra is, The Web only works because we allow it to be broken.  I apply this to 404 errors and URI opacity.  I am definitely in favor of semantically- ","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 97241 invoked from network); 22 Nov 2006 00:27:40 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m21.grp.scd.yahoo.com with QMQP; 22 Nov 2006 00:27:40 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (206.246.200.187)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Nov 2006 00:27:38 -0000\r\nReceived: from mail.mailsnare.net (v167.mailsnare.net [206.246.200.167])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 6F5E02D126;\n\tWed, 22 Nov 2006 00:01:22 +0000 (UTC)\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W5291219774218571164153682@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Wed, 22 Nov 2006 00:01:22 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: URI Opacity  (was: RE: [rest-discuss] REST design question)\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMy mantra is, &quot;The Web only works because we allow it to be broken.&quot;  I apply \nthis to 404 errors and URI opacity.  I am definitely in favor of semantically-\nrich, hierarchical URI allocation schemes.  But I&#39;d like to give a real-world \nexample of the implications of URI opacity.  While there are some excellent \nwriteups on the REST wiki I&#39;d like to pick on one of my favorite magazines -- \nbecause with over 150 years of experience archiving scientific articles \nthey&#39;re as inexcusably wide of the mark on the Web as anybody.  Case in point:\n\n[1] http://www.scientificamerican.com/2001/0501issue/0501berners-lee.html\n[1a] http://web.archive.org/web/*/http://www.scientificamerican.com/2001/0501issue/0501berners-lee.html\n\nMost folks have updated their bookmarks, it&#39;s been a couple of years since \nthey changed their Content Management System and invalidated all previous \nURLs.  For the majority of that stretch, [1] would return a representation of \na custom 404 error page with a search interface for the new site, with a 200 \nOK response.  Which makes [1] entirely opaque as it no longer has any meaning \nwhatsoever.\n\nThis is unfortunate, because there is enough metadata in that URL for the \nserver to infer that the request is for the May, 2001 article written by \nauthor Berners-Lee and respond with a 301 redirect to the new URL.  Actually, \nit would be better if the server just returned the article we&#39;re looking for \nand the new CMS with its new URI allocation scheme weren&#39;t applied \nretroactively to existing articles.\n\nBut alas, no matter what values we enter for what appear to be path segments \nfor year, month and author we cannot use this semantic URI allocation to \ndereference articles on the site.  All possible values which were once valid \nnow (until recently) return the same 404/search page with a 200 OK, so this \nCMS upgrade immediately relegated all existing URLs to the 404 scrapheap by \ntreating them as opaque and meaningless.\n\nParticularly so, since the one response to any request made to \nscientificamerican.com was being redirected from sciam.com, a domain which \nhad not previously been in use, confusing the issue of naming authority.  But \nat least the 301 redirect identified the proper domain to access for any data \nfrom the Scientific American magazine&#39;s website, sciam.com.  For the last few \nmonths, the response is what you see today -- an infinite recursion leading \nto a 413 response.  Which doesn&#39;t feel right, shouldn&#39;t it be a 414?\n\nIn this case, the user who encounters an old-style URL on the Web doesn&#39;t \neven glean the information that the correct domain is now sciam.com, let \nalone any hint that the article is now located here:\n\n[2] http://www.sciam.com/article.cfm?articleID=00048144-10D2-1C70-84A9809EC588EF21&sc=I100322\n\nNow *that&#39;s* an opaque URI!  But I consider it an error from an architectural \nstandpoint.  From the client-side perspective of inferring anything from a \nURI, URIs must be considered opaque as [1] clearly demonstrates.  But from an \napplication-design perspective it&#39;s obviously an error to treat URIs as \nopaque, as [1] and [2] clearly demonstrate.\n\nThis is an example of a major website abandoning a RESTful architecture in \nfavor of something entirely different.  See how smoothly it went?\n\nThere&#39;s also no way to alter the URI to change issues, like by changing the \nyear and leaving off any filename should bring up an archive page.  Which \nmeans not only is there no mapping from [1] to [2], but also no mapping from \n[2] to [1].  Definitely outside the realm of best-practice constraints.\n\nI understand that &quot;Cool URIs Don&#39;t Change&quot; but I also understand that \nsometimes, it turns out that the URIs weren&#39;t so cool.  As in the case of [1] \n-- it&#39;s really not easy for a machine to infer &quot;May&quot; from &quot;0501issue&quot;, the \n&quot;01&quot; is actually double-redundant whereas the 05 is merely single-redundant.  \nIn weblogs, I prefer to use the full date and a serial number to identify \nposts as opposed to titles or slugs, because titles or slugs are mutable \n(i.e. may be changed) whereas publication time is not.\n\nFor a magazine, however, the article title or a slug thereof makes more sense \nthan using the author name, since one author may have multiple articles and \nsince the article titles are tied to a print publication they are immutable.  \nSo what I would have done, when it came time to change the application logic \nfor this magazine&#39;s website, is chosen the following URI pattern, where \n&quot;issue&quot; is implied and &quot;article ID&quot; is opaque, all lowercase with no filename \nextension:\n\n[3] http://{www.?}{scientificamerican.com | sciam.com}/{YYYY?}/{MM?}/{articles | columns?}/{slug?}\n[4] http://sciam.com/2001/05/articles/the_semantic_web\n\nI&#39;m using &quot;?&quot; to denote optional segments.  There may be more than one \narticle titled &quot;The Semantic Web&quot; in this scheme, in which case they&#39;re \ndistinguished by date.  However, since this is a magazine, a further semantic \ndistinction is needed in the URI because a monthly feature or column will \nalways have the same slug.  This URI allocation scheme is both human and \nmachine readable/inferrable, so URI [4] is _not_ opaque, just good URI design \npractice with the potential to be used in a RESTful application architecture.\n\nFrom the application design perspective URI opacity is a bad thing, but \nsometimes, so are transparent URIs -- it really depends on the use case.  My \ngoal is semantically-rich-yet-immutable.  Also, what&#39;s more meaningful, an \narticle&#39;s title/subject or the hyphenated surname of its author?  My rule of \nthumb is to only use the bare minimum of metadata required to achieve my goal \nbecause I also want to keep my URIs short.\n\nAn argument may be made that [2] is a transparent, or at least a semi-\ntransparent, URL.  And, gasp, ugh, an argument may be made that it&#39;s even a \ngood design practice which I hope I have shown it is not:\n\n&quot;...authorities may choose to base URIs on database keys...&quot;\n\n[5] http://www.w3.org/2001/tag/doc/metaDataInURI-31\n\nWell, maybe not _never_ but i certainly can&#39;t think of many good examples, \ntinyurl.com comes to mind but isn&#39;t entirely convincing.  If you have a \ndatabase key, say &quot;00048144-10D2-1C70-84A9809EC588EF21&sc=I100322&quot; which maps \nto a resource with other metadata which would make more sense in an URL then \nfor heaven&#39;s sakes, use it!\n\nNow, to tie up a loose end.  I&#39;ve shown how messy it is to transition from \n[1] to [2], or rather, Scientific American has provided a textbook example of \nhow easy it apparently isn&#39;t.  But the same problem lies in going from [1] to \n[4] -- that isn&#39;t exactly a regular expression implemented in mod_rewrite \neither.  Well, like I said before, just respond 200 OK on [1] for all time \nbecause Cool URIs Don&#39;t Change (particularly when they&#39;re articles about the \nSemantic Web).\n\nUnder the new URI allocation scheme [3], archive requests are rewritten on \nthe server end.  In other words, this URL:\n\n[6] http://sciam.com/2001/05/articles/\n\nWould return a list of articles from that issue.  Except the link to the \narchived article would point to [1], not [4], and directly accessing the new-\nstyle URL [4] would be a 301 redirect to [1].  The new URI allocation scheme \ntakes over from the old when implemented, whether it&#39;s [2] or [4], with the \ndifference being that [4] is capable of layering over the legacy URI \nallocation scheme whereas [2] is not.  Therefore, a change to [2] treats the \nold URLs as opaque while a change to [4] treats them transparently.\n\nAnyway, you can&#39;t look at [3] and infer a RESTful architecture behind it, \nbecause even though it&#39;s transparent it&#39;s still opaque.  ;-)\n\n-Eric\n\n\n\n\n"}}