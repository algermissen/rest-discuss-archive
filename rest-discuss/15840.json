{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"Eyngr5l-atGrp5iG46mfIt1fVaEkD07vgVXeAjmwLPafMcqPFMHij2k0TnU1JKAvauWay_v8sF1YjEHZrM5LbXQwosC0cBKNGw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Connectedness (HATEOAS)","postDate":"1279128858","msgId":15840,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrWmxTcHhWcjJpVG04MXBCYWEzTC1maGxRaS01WEoxaFVsSjZkM0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGkxam9iNit2YzFlQGVHcm91cHMuY29tPg==","referencesHeader":"PGkxam9iNit2YzFlQGVHcm91cHMuY29tPg=="},"prevInTopic":15839,"nextInTopic":15841,"prevInTime":15839,"nextInTime":15841,"topicId":15834,"numMessagesInTopic":7,"msgSnippet":"... One of the premises behind this is that the server need only COMMIT to supporting the entry point URIs. Ideally, these entry point URIs are the long term","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 92161 invoked from network); 14 Jul 2010 17:34:20 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m11.grp.re1.yahoo.com with QMQP; 14 Jul 2010 17:34:20 -0000\r\nX-Received: from unknown (HELO mail-gx0-f172.google.com) (209.85.161.172)\n  by mta1.grp.sp2.yahoo.com with SMTP; 14 Jul 2010 17:34:19 -0000\r\nX-Received: by gxk3 with SMTP id 3so4520117gxk.31\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 14 Jul 2010 10:34:18 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.150.97.4 with SMTP id u4mr2055702ybb.364.1279128858727; Wed, \n\t14 Jul 2010 10:34:18 -0700 (PDT)\r\nX-Received: by 10.151.109.3 with HTTP; Wed, 14 Jul 2010 10:34:18 -0700 (PDT)\r\nIn-Reply-To: &lt;i1job6+vc1e@...&gt;\r\nReferences: &lt;i1job6+vc1e@...&gt;\r\nDate: Wed, 14 Jul 2010 10:34:18 -0700\r\nMessage-ID: &lt;AANLkTikZlSpxVr2iTm81pBaa3L-fhlQi-5XJ1hUlJ6d3@...&gt;\r\nTo: Suresh &lt;sureshkk@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Connectedness (HATEOAS)\r\nX-Yahoo-Group-Post: member; u=401876259; y=eMG_pQVqhOQlXfyaqiotF0ITVXVPqRkCEnAJuXFAeUjgnQpZn3JgTw\r\nX-Yahoo-Profile: gaminginparis\r\n\r\nOn Wed, Jul 14, 2010 at 12:17 AM, Suresh &lt;sureshkk@...&gt; wrote:\n\n&gt; It is said that in a well defined RESTful system, the clients only\n&gt; need to know the root URI or few well known URIs and the client\n&gt; shall discover all other links through these initial URIs. I do\n&gt; understand the benefits (decoupled clients) from this approach\n&gt; but the downside for me is that the client needs to discover\n&gt; the links each time it tries access something i.e given the\n&gt; following hierarchy of resources:\n\nOne of the premises behind this is that the server need only COMMIT to\nsupporting the entry point URIs. Ideally, these entry point URIs are\nthe long term API that the server supports.\n\nAnything that&#39;s not a long term API entry point in to the service is\nmore easily changed by the server. Consider the long term APIs the\nsubroutine calls, while the internal links the guts of the code. It&#39;s\nabstraction method that promotes change and reduces rigidity.\n\nObviously a single entry point is the &quot;most flexible&quot;, but it has the\nexecution costs that you mentioned -- fine grained, constant\ndereferencing in order to get things accomplished.\n\nAdding more entry points, gives finer grained access to the system.\nBut at the same time, you have more of an obligation to maintain those\nendpoints.\n\nSo clearly one endpoint is probably too few. But having zillions\nbecomes an issue as well.\n\nObviously you can do whatever you want. You don&#39;t have to maintain any\nendpoints and can change the willy nilly if you like.\n\nBut consider a real world example. Say, the DMV. Around here, you go\nto a single kiosk, tell them what you want, they give you the form or\nforms and redirect you to the proper station. As a DMV user, you only\nneed to know how to fill out the forms properly, and how to hit the\nkiosk. The internal mapping of resources (clerks, capabilities, etc.)\nis handled by the DMV, and they guide you through the process (Now\nserving 123, please go to window 4).\n\nWhat you can&#39;t do at the DMV is walk straight up to Sally at window 3\nwhen you come back, just because you worked with her last time (you\ncached her URI). Sally may not be there, someone else may be at window\n3, or the task for which window 3 may have changed (now they do\nregistrations instead of licensing). Keeping the entry point at the\ngreeting kiosk lets the DMV reallocate it internal resources as it\nfeels is best.\n\nNow, consider going to the County Hall of Records. You walk in, go to\nthe Information Kiosk, and ask  for the Birth Certificate Office, and\nthe greeter sends you to the second floor, office 210. You head down\nthere and proceed to work your transaction. Next time you come, you\nskip the info desk and go straight to the second floor, office 210. It\nwas pretty clear that this is a long term entry point to the Hall of\nRecords system that they maintain, and you get to be more efficient\nbecause you can skip the Information kiosk step.\n\nBut this time you have a problem, and the clerk is kind and says &quot;go\ndo this and call me directly&quot;, giving you the ability to go directly\nto the clerk. But, you wait to long, things happen, and 6 months later\ntry to call the clerk, and he&#39;s gone. While the system was able to\nprovide you with a direct link to a resource, it didn&#39;t commit that\nthis was a long term interface to be maintained. Since the clerk is\ngone, you have to go back to the beginning and restart your\ntransaction.\n\nSo, basically, you expose as much of your system as you&#39;re comfortable\nsupporting, and that you&#39;re comfortable having clients rely upon.\nSmall systems get tightly coupled because the same people write both\nsides of the system, and have intimate knowledge.\n\nBut when the systems audience grows larger, you have more of an\nobligation of commitment to stability and long term use. Others are\nmaking investments in to your system so the API can&#39;t be a shifting\nsand beneath their feet.\n\nSo, think of it simply as a bureaucracy that grows over time.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\n"}}