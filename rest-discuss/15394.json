{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"gI0Obiv_ZelFMYl-_az2IOmiw9rJx6kn-_lILG3xmORgCkqGMIsVM0GwLRa5DJjLjbIAtSGf_RxfJPkZFAH_aANiyqVSWUs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Thinking about REST and HTTP","postDate":"1274493770","msgId":15394,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGltNDgtYTFBc2tkTS0yRTRsdmRRZHlxTS1ZUnU5UWRlZkJoRFl6QkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlrc2drcFVtbG1LUEc3ZVRTLWdnMUwybFdFUEhKcUhadGpCczR6Q0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlseVZ3NGQ3dTlmY2oyWXB4bmR6Ql9SVmY0WnRsNlZxYjN5X3VHSEBtYWlsLmdtYWlsLmNvbT4JIDxodDZlZWwra200OEBlR3JvdXBzLmNvbT4JIDxBQU5Ma1RpbnNHcmdaa2tpV3JPVU9fYURsQTJDZXRSV0ljV1R5emtnclF4UmtAbWFpbC5nbWFpbC5jb20+CSA8QUFOTGtUaWtzZ2twVW1sbUtQRzdlVFMtZ2cxTDJsV0VQSEpxSFp0akJzNHpDQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15393,"nextInTopic":15395,"prevInTime":15393,"nextInTime":15395,"topicId":15365,"numMessagesInTopic":52,"msgSnippet":"Glenn: For me, the OData format has the following shortcomings WRT the REST architectural style. - OData uses Atom as an envelope for a custom payload - OData","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54384 invoked from network); 22 May 2010 02:02:51 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m1.grp.sp2.yahoo.com with QMQP; 22 May 2010 02:02:51 -0000\r\nX-Received: from unknown (HELO mail-ww0-f49.google.com) (74.125.82.49)\n  by mta1.grp.re1.yahoo.com with SMTP; 22 May 2010 02:02:51 -0000\r\nX-Received: by wwb24 with SMTP id 24so1139107wwb.36\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 21 May 2010 19:02:50 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.93.76 with SMTP id k54mr1346422wef.224.1274493770588; Fri, \n\t21 May 2010 19:02:50 -0700 (PDT)\r\nX-Received: by 10.216.29.72 with HTTP; Fri, 21 May 2010 19:02:50 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTiksgkpUmlmKPG7eTS-gg1L2lWEPHJqHZtjBs4zC@...&gt;\r\nReferences: &lt;AANLkTilyVw4d7u9fcj2YpxndzB_RVf4Ztl6Vqb3y_uGH@...&gt;\n\t &lt;ht6eel+km48@...&gt;\n\t &lt;AANLkTinsGrgZkkiWrOUO_aDlA2CetRWIcWTyzkgrQxRk@...&gt;\n\t &lt;AANLkTiksgkpUmlmKPG7eTS-gg1L2lWEPHJqHZtjBs4zC@...&gt;\r\nDate: Fri, 21 May 2010 22:02:50 -0400\r\nX-Google-Sender-Auth: OSDaNF_yu-ZkZreBDC-8HhORS2o\r\nMessage-ID: &lt;AANLkTim48-a1AskdM-2E4lvdQdyqM-YRu9QdefBhDYzB@...&gt;\r\nTo: Glenn Block &lt;glenn.block@...&gt;\r\nCc: &quot;jerome.louvel&quot; &lt;jerome.louvel@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Re: Thinking about REST and HTTP\r\nX-Yahoo-Group-Post: member; u=69164307; y=nc8-P78CyqnPTvRf-SXJLE8HARO_jF5SV2ImKR7GruMO\r\nX-Yahoo-Profile: mamund\r\n\r\nGlenn:\n\nFor me, the OData format has the following shortcomings WRT the RES=\r\nT\narchitectural style.\n - OData uses Atom as an envelope for a custom paylo=\r\nad\n - OData is an Object Transfer pattern, not a state transfer pattern\n - =\r\nOData has limited hypermedia support\n - OData relies on URI Convention\n\nBel=\r\now are some details and ideas on how these shortcomings might be addressed.=\r\n\n\nAtom as an Envelope\nOData uses the Atom format as an envelope for a custo=\r\nm XML payload. I\nwould prefer that a dedicated media type be developed that=\r\n does not\nhave the extra &quot;baggage&quot; of Atom. For example, in order for me to=\r\n\nwrite a client application that uses the OData format, I need to\nencode un=\r\nderstanding of two Atom RFCs (Atom Syndication [1] and Atom\nPublishing [2])=\r\n _and_ I need to encode into my client the details of\nthe custom payload th=\r\nat appears within the &lt;content /&gt; element (the\nstuff I&#39;m really interested =\r\nin anyway). A better choice, IMO, would\nhave been to use some version of th=\r\ne data format employed for the now\ndefunct SQL Server Data Services (SSDS/S=\r\nDS). It was lean, specific,\nand provided the same functionality in a much s=\r\nmaller payload that was\neasier to encode into clients.\n\nObject Transfer Pat=\r\ntern & Limited Hypermedia Options\nSimilar to Atom, OData is really an objec=\r\nt transfer format. OData\nservers currently support two different _serializa=\r\ntions_ (JSON and\nXML) but I am not able to send anything other than an &quot;ent=\r\nry&quot; object\n(or a batch of them, etc.). Essentially, I can&#39;t transfer arbitr=\r\nary\nstate, just pre-defined objects. Since I can only transfer predefined\no=\r\nbjects within the Atom envelope, I have very few Hypermedia options\nto prov=\r\nide to my clients. I can&#39;t see how to send directions for\ncustom queries, o=\r\nr ways to accomplish specific tasks on the server\n(compute this months tota=\r\nls and return the results, approve the\nremaining open invoices for process,=\r\n etc.). HTML uses the &lt;form /&gt;\nelement with varying method and format instr=\r\nuctions for this. SMIL\nuses the &lt;send /&gt; element along with an XPath query =\r\nto indicate which\nportions of the message are to be returned; etc.\n\nI see r=\r\neference to this kind of thing in 2.13 Invoking Service\nOperations [3] but =\r\nthis is a very limited situation and while I see it\nis possible for clients=\r\n to execute these GET methods with arbitrary\nURIs, I see nothing in the doc=\r\ns that indicates how I can fashion a\nresponse from the server that _tells_ =\r\nclients this operation is\npossible. One way to resolve this would be to exp=\r\nand the media-type to\ninclude similar message blocks that would contain a l=\r\nink relation,\nURI, and one or more template elements that clients could use=\r\n to fill\nin themselves or present to users for population. I show some\nrudi=\r\nmentary example of this (in simple XML) in a recent blog post [4].\n\nRelianc=\r\ne on URI Convention\nMuch of the documentation for OData is spent outlining =\r\nURI conventions\nthat need to be encoded into the client application. I woul=\r\nd prefer\nthe use of the URI-Templates [5] model for simple filter cases. Th=\r\nis\nwould allow clients to simply encode the rules for URI templates and\nexe=\r\ncute them for templated links rather than requiring programmers to\ncommit s=\r\npecific URI conventions directly to code. Using templates also\nmeans server=\r\ns can modify the arrangement of the URI/query without\nrequiring re-coding o=\r\nf the clients.\n\nFor more complex queries (basically arbitrary filters/sorts=\r\n, etc.) I&#39;d\nprefer OData advertise support for one or more query media type=\r\ns\nthemselves (accept: text/t-sql, text/linq, text/yql, etc.[sign, no\nregist=\r\nered types *yet*]). This would reduce the need to define complex\nURI conven=\r\ntions and provide greater flexibility in the future when\nother query langua=\r\nges become more desirable (e.g.\napplication/sparql-query [6], etc.). In all=\r\n these cases, clients can\ncode for the query language, not the URI conventi=\r\non.\n\n[1] http://www.ietf.org/rfc/rfc4287.txt\n[2] http://tools.ietf.org/html=\r\n/rfc5023\n[3] http://www.odata.org/developers/protocols/operations#InvokingS=\r\nerviceOperations\n[4] http://amundsen.com/blog/archives/1041\n[5] http://tool=\r\ns.ietf.org/html/draft-gregorio-uritemplate-04\n[6] http://www.w3.org/TR/rdf-=\r\nsparql-query/#mediaType\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn Fri, May 21, =\r\n2010 at 20:43, Glenn Block &lt;glenn.block@...&gt; wrote:\n&gt; BTW, I want to =\r\nthank everyone for welcoming me here and for bearing\n&gt; with my noobness :-)=\r\n\n&gt;\n&gt; On 5/21/10, Glenn Block &lt;glenn.block@...&gt; wrote:\n&gt;&gt; I say that b=\r\necause a common question I expect folks to ask when they\n&gt;&gt; hear about our =\r\nstuff, is why do I need anything else.\n&gt;&gt;\n&gt;&gt; I have my own perceptions / th=\r\noughts, but would be interested in this\n&gt;&gt; groups.\n&gt;&gt;\n&gt;&gt; On 5/21/10, jerome=\r\n.louvel &lt;jerome.louvel@...&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Hi Glenn=\r\n,\n&gt;&gt;&gt;\n&gt;&gt;&gt; We have been working on the Restlet Framework [1] since 2005 (at =\r\nthis\n&gt;&gt;&gt; time,\n&gt;&gt;&gt; I think it was the first so-called REST framework). We h=\r\nave built a\n&gt;&gt;&gt; comprehensive yet small framework since them, with a thrivi=\r\nng community\n&gt;&gt;&gt; behind it.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Our Restlet API is both client-side and=\r\n server-side, both low-level (all\n&gt;&gt;&gt; HTTP semantics/headers mapped to a cl=\r\nean Java API, see [2]) and\n&gt;&gt;&gt; high-level\n&gt;&gt;&gt; (resource handling, limited/f=\r\nocused use of annotations), synchronous or\n&gt;&gt;&gt; asynchronous (easily support=\r\ning provisional 1xx HTTP responses), supports\n&gt;&gt;&gt; other (pseudo-)protocols =\r\nthan HTTP (FTP, SMTP, POP3, FILE, etc.) and is\n&gt;&gt;&gt; available in five consis=\r\ntent editions: Java SE/EE, GAE, GWT and Android\n&gt;&gt;&gt; [3].\n&gt;&gt;&gt;\n&gt;&gt;&gt; We also ha=\r\nppen to support JAX-RS as an extension, but that&#39;s not what I\n&gt;&gt;&gt; would rec=\r\nommend as a starting point for you. Our framework lets\n&gt;&gt;&gt; developers\n&gt;&gt;&gt; s=\r\nupport hypermedia since day one and we have explored higher-level links\n&gt;&gt;&gt;=\r\n traversal for a while with our RDF extension [4].\n&gt;&gt;&gt;\n&gt;&gt;&gt; Otherwise, we ar=\r\ne also working with Microsoft Interop teams to provide\n&gt;&gt;&gt; advanced client =\r\nsupport for the OData protocol [5].\n&gt;&gt;&gt;\n&gt;&gt;&gt; IMHO, it would be great to have=\r\n something similar in the .NET world. I&#39;m\n&gt;&gt;&gt; glad you are working on such =\r\nproject. Good luck!\n&gt;&gt;&gt;\n&gt;&gt;&gt; Best regards,\n&gt;&gt;&gt; Jerome Louvel\n&gt;&gt;&gt; --\n&gt;&gt;&gt; Rest=\r\nlet ~ Founder and Technical Lead ~ http://www.restlet.org\n&gt;&gt;&gt; Noelios Techn=\r\nologies ~ http://www.noelios.com\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; [1] http://www.restlet.org\n&gt;&gt;&gt;=\r\n [2]\n&gt;&gt;&gt; http://wiki.restlet.org/docs_2.0/13-restlet/27-restlet/330-restlet=\r\n/130-restlet.html\n&gt;&gt;&gt; [3]\n&gt;&gt;&gt; http://wiki.restlet.org/docs_2.0/13-restlet/2=\r\n1-restlet/318-restlet/303-restlet.html\n&gt;&gt;&gt; [4]\n&gt;&gt;&gt; http://www.restlet.org/d=\r\nocumentation/snapshot/jee/ext/org/restlet/ext/rdf/RdfClientResource.html\n&gt;&gt;=\r\n&gt; [5]\n&gt;&gt;&gt; http://blog.noelios.com/2010/03/15/restlet-supports-odata-the-ope=\r\nn-data-protocol/\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; Sent from my mobile device\n&gt;&gt;\n&gt;\n&gt; =\r\n--\n&gt; Sent from my mobile device\n&gt;\n&gt;\n&gt; ------------------------------------\n=\r\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}