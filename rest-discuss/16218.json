{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"kifEGpJ6RG_DkcSa1knZaGB3bZaR0FwQv8f66xN_Lijg5bDvnbEkdlC1sTFwxo3npmXcq6S0m7VeqNWXg6fKS1sHh_S2zc4KDe9iZS3idhM","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281196674","msgId":16218,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAxMzIzQkEzLTIwNzgtNEM3NS1BRTFCLThEMTg4NUU2NUIwOEBtYWMuY29tPg==","inReplyToHeader":"PEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPiA8RjE5NjI2NDZEM0I2NDY0MkI3QzlBMDYwNjhFRTFFNjQwRTE0Mzg1N0BleDEwLmhvc3RlZGV4Y2hhbmdlLmxvY2FsPiA8RUE2MDczMkMtM0IwMC00NUQ0LThGRDgtMDJFQjFCMjE0NEY1QG1hYy5jb20+IDxGMTk2MjY0NkQzQjY0NjQyQjdDOUEwNjA2OEVFMUU2NDBFMTQzQjExQGV4MTAuaG9zdGVkZXhjaGFuZ2UubG9jYWw+IDxCRTNEODY1OS1CNzYyLTQ3NTktQkM4Qy0xM0I0REE5ODVDNUZAbWFjLmNvbT4gPEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16217,"nextInTopic":16219,"prevInTime":16217,"nextInTime":16219,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":"... I think it is important to be explicit about what understand means. I d rather say that Accept means: I am a user agent that will only be able to","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 75201 invoked from network); 7 Aug 2010 15:58:12 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.sp2.yahoo.com with QMQP; 7 Aug 2010 15:58:12 -0000\r\nX-Received: from unknown (HELO asmtpout023.mac.com) (17.148.16.98)\n  by mta1.grp.sp2.yahoo.com with SMTP; 7 Aug 2010 15:58:12 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [10.129.155.154] ([80.187.212.56])\n by asmtp023.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0L6S00FEWHOKCQ90@...&gt; for\n rest-discuss@yahoogroups.com; Sat, 07 Aug 2010 08:58:12 -0700 (PDT)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=6.0.2-1004200000 definitions=main-1008070098\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.0.10011,1.0.148,0.0.0000\n definitions=2010-08-06_09:2010-08-06,2010-08-06,1970-01-01 signatures=0\r\nIn-reply-to: &lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\r\nDate: Sat, 07 Aug 2010 17:57:54 +0200\r\nCc: Robert Brewer &lt;fumanchu@...&gt;,\n REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;01323BA3-2078-4C75-AE1B-8D1885E65B08@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\n &lt;F1962646D3B64642B7C9A06068EE1E640E143857@...&gt;\n &lt;EA60732C-3B00-45D4-8FD8-02EB1B2144F5@...&gt;\n &lt;F1962646D3B64642B7C9A06068EE1E640E143B11@...&gt;\n &lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\n &lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=289191104; y=1_JIlh9Kh0nu-kR3VHQQqQJ-pauwuHEUR4qofw82P_5S4gV6pTcmWgXW\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Aug 7, 2010, at 5:17 PM, mike amundsen wrote:\n\n&gt; &lt;snip&gt;\n&gt; While a usual feed reader (e.g. Apple Mail) would be able to perform\n&gt; it&#39;s implemented goal based on that feed our\n&gt; compile-list-of-newly-ordered-items user agent would definitely not be\n&gt; able to do what it is implemented to do.\n&gt; &lt;/snip&gt;\n&gt; \n&gt; QUESTION:\n&gt; how do you &quot;know&quot; this to be true? IOW, what is it about the\n&gt; representation example you provided that leads you to believe your\n&gt; &quot;compile-list-of-newly-ordered-items user agent&quot; cannot &quot;do what it is\n&gt; implemented to do&quot;?\n&gt; \n&gt; ASSUMPTION:\n&gt; I think I hear you talking about the need for clients to know ahead of\n&gt; time whether the representation returned is something they can\n&gt; process. If that&#39;s the case, that means there must be some information\n&gt; baked into the client that is used to &quot;check&quot; the representation\n&gt; returned. The Accept header is one of these methods (&quot;I am a client\n&gt; that will only be able to understand the following representation\n&gt; formats&quot;).\n\nI think it is important to be explicit about what &quot;understand&quot; means.\n\nI&#39;d rather say that Accept means: &quot;I am a user agent that will only be able to sensibly perform it&#39;s implemented goal if the representation has one of these media types&quot;\n\n\nNote that it all depends on the implemented goal. If that goal is to &quot;compile a list of newly ordered items from those orders that I happen to be able to parse and report the number of unparsable orders&quot; then that would work just fine with Accept: application/atom+xml;type=feed.\n\nHowever, we must then understand that the eventual application state exposed to the user (the compiled list/report, maybe stuffed into some database) can only reflect what the user agent was able to make of the feed. IOW, the report might look like this:\n\nNew Orders as of date foo: 201\nProcessable Orders: 11\nSummary of items in those 11: [some list of items here]\nUnprocessable orders 190 [Reference to temporary filesystem where they can be reviewed]\n\n(This might, BTW, just what we want)\n\n\nYou can turn all this around and say:\n\nWhen the server developer implements for application/atom+xml; type=feed it simply has no idea what special assumptions some client will make. As long as the service returns valid Atom it will be a correct implementation. Any side-agreements between client and server violate what REST tries to achieve.\n\n\nJan\n\n\n\n\n\n&gt; \n&gt; I that what this is about?\n&gt; \n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt; http://mamund.com/foaf.rdf#me\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; On Sat, Aug 7, 2010 at 06:47, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt;&gt; \n&gt;&gt; On Aug 7, 2010, at 12:25 AM, Robert Brewer wrote:\n&gt;&gt; \n&gt;&gt;&gt;&gt; Jan Algermissen wrote:\n&gt;&gt; \n&gt;&gt;&gt;&gt; The question is whether Accept: text/html is indeed sufficient. Is it\n&gt;&gt;&gt;&gt; true that the user agent can persue its implemented goal of compiling\n&gt;&gt;&gt; a\n&gt;&gt;&gt;&gt; list of all newly ordered items from any HTML document?\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; Suppose the server provides both, application/order and text/html as\n&gt;&gt;&gt;&gt; representations of the list of new orders. When a user agent comes\n&gt;&gt;&gt;&gt; along that says Accept: text/html the server can freely assume\n&gt;&gt;&gt; browser-\n&gt;&gt;&gt;&gt; like capabilities of the user agent (any HTML will do; even an &lt;ul&gt;\n&gt;&gt;&gt;&gt; with items referring to scanned PNGs of the orders). IOW, the owner of\n&gt;&gt;&gt;&gt; the server is free to change the implementation for text/html as long\n&gt;&gt;&gt;&gt; as a) the resource semantics remain stable (list of new orders) and\n&gt;&gt;&gt;&gt; valid HTML is returned.\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; How would the user agent implementation deal with HTML? Special\n&gt;&gt;&gt;&gt; syntactic assumptions are not allowed (because of Accept: text/html)\n&gt;&gt;&gt; or\n&gt;&gt;&gt;&gt; would mean a hidden coupling. How would a user agent distinguish\n&gt;&gt;&gt;&gt; between an HTML it does not understand but that contains orders (e.g.\n&gt;&gt;&gt;&gt; the list of scanned order images) and an empty list of orders that is\n&gt;&gt;&gt;&gt; augmented with some HTML it does not (and need not) understand?\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; IMO that is impossible and hence Accept: text/html does not cut it.\n&gt;&gt;&gt; \n&gt;&gt;&gt; I think all that demonstrates is that HTML is too generic to be useful\n&gt;&gt;&gt; for your particular task, not that all media types require &quot;special\n&gt;&gt;&gt; syntactic assumptions&quot; (whether implicit or explicit). The fact that you\n&gt;&gt;&gt; can make a &quot;list&quot; in HTML using any of a hundred types of tags doesn&#39;t\n&gt;&gt;&gt; mean Atom, for example, also suffers from the same inappropriateness to\n&gt;&gt;&gt; your task.\n&gt;&gt;&gt; \n&gt;&gt;&gt; \n&gt;&gt; \n&gt;&gt; I knew you were going to say that :-)\n&gt;&gt; \n&gt;&gt; Let&#39;s see:\n&gt;&gt; \n&gt;&gt; The implementor of the server side chooses to expose the order list as HTML and Atom. In the Atom case, she would write sth like this (in JAX-RS):\n&gt;&gt; \n&gt;&gt; @Path(&quot;/new-orders&quot;)\n&gt;&gt; class NewOrders {\n&gt;&gt; \n&gt;&gt;  @GET\n&gt;&gt;  @Produces(&quot;text/html&quot;)\n&gt;&gt;  public Response newOrdersAsHTML() {\n&gt;&gt;     // ...\n&gt;&gt;  }\n&gt;&gt; \n&gt;&gt;  @GET\n&gt;&gt;  @Produces(&quot;application/atom+xml&quot;)\n&gt;&gt;  public Response newOrdersAsAtomFeed() {\n&gt;&gt; \n&gt;&gt;  }\n&gt;&gt; }\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; When it comes to implementing (or changing) the Atom-producing method, the server developer need not (must not) be concerned with any client expectations. All that matters is to produce any valid Atom feed[1].\n&gt;&gt; \n&gt;&gt; Given that, it would be a perfectly fine implementation to produce an Atom feed such as this:\n&gt;&gt; \n&gt;&gt; &lt;feed&gt;\n&gt;&gt;  &lt;entry&gt;\n&gt;&gt;    &lt;summary type=&quot;xhtml&quot;&gt;\n&gt;&gt;      &lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;        &lt;xhtml:h1&gt;Order 551-A-1272&lt;/xhtml:h1&gt;\n&gt;&gt;        &lt;xhtml:ul&gt;\n&gt;&gt;          &lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;          &lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;        &lt;/xhtml:ul&gt;\n&gt;&gt;        &lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;      &lt;/xhtml:div&gt;\n&gt;&gt;    &lt;/summary&gt;\n&gt;&gt;    &lt;content type=&quot;image/png&quot; src=&quot;/scan-archive/orders/551-A-1272.png&quot;/&gt;\n&gt;&gt;  &lt;/entry&gt;\n&gt;&gt;  &lt;entry&gt;\n&gt;&gt;    &lt;summary type=&quot;xhtml&quot;&gt;\n&gt;&gt;      &lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;        &lt;xhtml:h1&gt;Order 551-A-1273&lt;/xhtml:h1&gt;\n&gt;&gt;        &lt;xhtml:ul&gt;\n&gt;&gt;          &lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;          &lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;        &lt;/xhtml:ul&gt;\n&gt;&gt;        &lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;      &lt;/xhtml:div&gt;\n&gt;&gt;    &lt;/summary&gt;\n&gt;&gt;    &lt;content type=&quot;image/png&quot; src=&quot;/scan-archive/orders/551-A-1273.png&quot;/&gt;\n&gt;&gt;  &lt;/entry&gt;\n&gt;&gt; &lt;/feed&gt;\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; If you develop a user agent that says Accept: application/atom+xml;type=feed you must be prepared to receive the above feed.\n&gt;&gt; \n&gt;&gt; While a usual feed reader (e.g. Apple Mail) would be able to perform it&#39;s implemented goal based on that feed our compile-list-of-newly-ordered-items user agent would definitely not be able to do what it is implemented to do.\n&gt;&gt; \n&gt;&gt; Two questions arise:\n&gt;&gt; \n&gt;&gt; 1. How does the user agent detect that it cannot perform its task but (despite having a perfectly valid answer)\n&gt;&gt; 2. What to do about that\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; 1.:\n&gt;&gt; Given the feed above, how do we need to implement the client to report to the user (e.g. someone that at some point looks in a log file or someone that uses the business intelligence application that uses the compiled reports about newly ordered items) that a correct answer was received, that it did indeed contain orders but that the list could not be processed as intended?\n&gt;&gt; \n&gt;&gt; First of all, the client trusts the higher level assumption that the resource indeed provides the list of new orders. This is the same kind of trust that any browser has when it follows an &lt;img src=&quot;&quot;/&gt; hypermedia control. The server told the user agent something about the referenced resource and the client can reasonably expect that to be true (otherwise we would deal with a broken server and that is not the issue here).\n&gt;&gt; \n&gt;&gt; Since the client expects the feed to represent the list of new orders, it is IMHO reasonable to assume that any entry in that feed points to a new order. No entries would mean &#39;no new orders&#39;. This is IMHO not semantic tunneling through the Atom feed because the assumption is backed by the semantics of the resource as advertised by the server.\n&gt;&gt; \n&gt;&gt; The feed appearently contains two entries, hence the user agent can be programmed to understand that there are two new orders to process. When it comes to processing the orders the user agent will have to realize that neither the summary nor the referenced content is available in a format that is sufficient to extract the ordered items automatically. Hence the user agent has to report an error eventually leading to some human action to fix the situation:\n&gt;&gt; \n&gt;&gt; 2.:\n&gt;&gt; We reach question #2 once the fact that a problem exists for the user agent has reached a human. What is he supposed to do? There are three options:\n&gt;&gt; \n&gt;&gt; a) call the server developer and negotiate a certain format for the Atom feed\n&gt;&gt; b) adjust the user agent implementation to handle the format received (e.g. parse out the HTML from the summary or OCR the scanned orders)\n&gt;&gt; c) do nothing except mark the compiled report as &#39;wrong&#39; or &#39;unusable&#39;. IWO, accept the fact that the user goal cannot be satisfied\n&gt;&gt; \n&gt;&gt; a) Leads to coupling (if it is at all possible/desireable to call the server implementor)\n&gt;&gt; b) Does not improve the situation because the format can just change again tomorrow\n&gt;&gt; c) is the honest option but provides no business value\n&gt;&gt; \n&gt;&gt; In my opinion, the only thing to really improve the situation is to standardize a format that allows the server developer to actually determine the user agent expectations (capabilities) from the Accept header. If we had application/orderlist (or at least application/atom+xml;profile=orderlist) the server developer would need to either add a new response-producing method or send a 406.\n&gt;&gt; \n&gt;&gt; Does that sufficiently illustrate the point?\n&gt;&gt; \n&gt;&gt; Jan\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; [1] and of course be true to be true to the server&#39;s own statement that the resource represents\n&gt;&gt;    the new orders. It would be bad to serve a list of shipped orders, for example.\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt;&gt; Robert Brewer\n&gt;&gt;&gt; fumanchu@...\n&gt;&gt;&gt; \n&gt;&gt; \n&gt;&gt; -----------------------------------\n&gt;&gt;  Jan Algermissen, Consultant\n&gt;&gt;  NORD Software Consulting\n&gt;&gt; \n&gt;&gt;  Mail: algermissen@...\n&gt;&gt;  Blog: http://www.nordsc.com/blog/\n&gt;&gt;  Work: http://www.nordsc.com/\n&gt;&gt; -----------------------------------\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; ------------------------------------\n&gt;&gt; \n&gt;&gt; Yahoo! Groups Links\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}