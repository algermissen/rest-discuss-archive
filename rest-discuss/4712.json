{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"f2mYgG8q8zQ_jBsiqCHMyMpfWbxiFw9xwBEkP62hn0Dp-kRh6H2RHM4dTltEP-tPA9wpahq_ggL7G9IOuzcCuS5f_6x4m6YoRw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful Queues","postDate":"1103211527","msgId":4712,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMDMyMTE1MjYuMTMwMjkuMTA0LmNhbWVsQHBob2VuaXg+","inReplyToHeader":"PDAwMzEwMWM0ZTMwMSQ3NmJkZjcxMCQ2NDAxYThjMEB3aW50ZXI+","referencesHeader":"PDAwMjAwMWM0ZTJlNiQwMmE0ZDk5MCQzNTY4MGEwYUBjcmQuY29tPgkgPDQxQzBBMkVBLjkwMzAxMDhAdmRtLmNjPiAgPDAwMGEwMWM0ZTJlOCRjMGQ3NmM1MCQzNTY4MGEwYUBjcmQuY29tPgkgPDExMDMxNDUzNzQuMTMwMjkuOS5jYW1lbEBwaG9lbml4PiAgPDAwMzEwMWM0ZTMwMSQ3NmJkZjcxMCQ2NDAxYThjMEB3aW50ZXI+"},"prevInTopic":4711,"nextInTopic":4713,"prevInTime":4711,"nextInTime":4713,"topicId":4698,"numMessagesInTopic":21,"msgSnippet":"... I [obviously] misunderstood your original intent: you re trying to do the actual `pop` operation on a queue data-type ...  I d do so in a hybrid of what","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 56460 invoked from network); 16 Dec 2004 15:36:49 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m21.grp.scd.yahoo.com with QMQP; 16 Dec 2004 15:36:49 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.142.253)\n  by mta5.grp.scd.yahoo.com with SMTP; 16 Dec 2004 15:36:49 -0000\r\nReceived: (qmail 14021 invoked by uid 1000); 16 Dec 2004 10:38:47 -0500\r\nTo: Jeffrey Winter &lt;jeffreywinter@...&gt;\r\nCc: Vincent D Murphy &lt;vdm@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;003101c4e301$76bdf710$6401a8c0@winter&gt;\r\nReferences: &lt;002001c4e2e6$02a4d990$35680a0a@...&gt;\n\t &lt;41C0A2EA.9030108@...&gt;  &lt;000a01c4e2e8$c0d76c50$35680a0a@...&gt;\n\t &lt;1103145374.13029.9.camel@phoenix&gt;  &lt;003101c4e301$76bdf710$6401a8c0@winter&gt;\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: 7bit\r\nOrganization: Asynchronous.org\r\nMessage-Id: &lt;1103211526.13029.104.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 \r\nDate: Thu, 16 Dec 2004 10:38:47 -0500\r\nX-eGroups-Remote-IP: 216.114.142.253\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nReply-To: jsled@...\r\nSubject: Re: [rest-discuss] RESTful Queues\r\nX-Yahoo-Group-Post: member; u=93099516\r\nX-Yahoo-Profile: joshsled\r\n\r\nOn Wed, 2004-12-15 at 18:53, Jeffrey Winter wrote:\n&gt; &gt;     GET /queue\n&gt; &gt;     &lt;message id=&quot;2&quot; nextMessage=&quot;/queue/3&quot;&gt;...&lt;/message&gt;\n&gt; &gt; \n&gt; &gt; # failure re-request.\n&gt; &gt; # success:\n&gt; &gt;     GET /queue/3\n&gt; &gt;     &lt;message id=&quot;3&quot; nextMessage=&quot;/queue/4&quot;&gt;...&lt;/message&gt;\n&gt; &gt; \n&gt; &gt; Hypermedia is the engine of application state; the server should direct\n&gt; &gt; the client into subsequent requests as much as possible.  No new header\n&gt; &gt; [semantic] required.\n&gt; \n&gt; I seems to me that the server needs to receive some\n&gt; acknowledgement that the client has successfully\n&gt; processed the message in order to clear the head of \n&gt; the queue.\n\nI [obviously] misunderstood your original intent: you&#39;re trying to do\nthe actual `pop` operation on a queue data-type ...  I&#39;d do so in a\nhybrid of what you and Donald have been suggesting:\n\nA key property of the &quot;pop&quot; operation -- in the face of multiple\nconsumers -- is some measure of exclusion: you don&#39;t want multiple\nclients to believe they both &quot;have&quot; the same queue element.  In that\ncase, I&#39;d modify the proposals on the table to include a 409 [Conflict]\nresponse on either the queue-element GET or DELETE, which the client\nshould interpret as &quot;I&#39;m the loser&quot;, and re-start the GET/DELETE `pop`\nsequence.\n\n[POST or PUT could be used instead of DELETE, I s&#39;pose, but I&#39;ll use\nDELETE here since it seems most appropriate:]\n\nclient1: GET /queue\n      s: 303 /queue/1\nclient2: GET /queue\n      s: 303 /queue/1\nclient1: GET /queue/1   # client1 is _fast_.\n      s: &lt;data&gt;\nclient1: DELETE /queue/1\n      s: 204\nclient2: GET /queue/1\n      s: 409 # losah!\nclient2: GET /queue\n      s: 303 /queue/2\n# ...\n\nOf course, we&#39;d also need either an appropriate media-type or -- at\nleast -- some element namespace to indicate to the client how to\ninterpret the &quot;queue&quot; data and URLs being returned.  As well, the server\nshould guarantee that the appropriate synchronization occurs on the\nappropriate (method,uri)-pair processings.\n\nI continue to think that you don&#39;t need a new header to do this.\n\n\nAnother approach entirely is one much more server-directed, like:\n\nGET /queue\n&lt;q:queue&gt;\n  &lt;q:peek op=&quot;get&quot; href=&quot;/queue/head&quot; /&gt;\n  &lt;q:push op=&quot;put&quot; href=&quot;/queue/&quot; /&gt;\n  &lt;q:pop&gt;\n    &lt;sequence&gt;\n      &lt;item op=&quot;get&quot; href=&quot;/queue/head&quot; \n            esponseHrefVariable=&quot;locationWeReceived&quot; /&gt;\n      &lt;item op=&quot;delete&quot; href=&quot;{locationWeReceived}&quot; /&gt;\n    &lt;/sequence&gt;\n  &lt;/q:pop&gt;\n&lt;/q:queue&gt;\n\nWith the advantage being that the client doesn&#39;t need to understand how\nto interact with the queue specifically, but requires that we have some\nlanguage for describing interaction sequences,  and probably also needs\nto extend into pre- and post-conditions, effect-description and other\nthings.\n\n\nBut there&#39;s a really important question to answer between these two:\nwhere does the intelligence about how the queue should be interacted\nwith reside?  Do all clients know the semantics [GET/DELETE pairs, 409\nresponse code, &c.] for interacting with this particular implementation\nof a queue?  Or does the server publish how it wants relatively stupid\nclients to interact with it [both the server and the queue]?\n\nAnd what&#39;s in the middle, trading off being very expliclit and\nserver-directed for performance, while still retaining some of the nice\neffects of REST&#39;s principles?\n\n...jsled\n\n-- \nhttp://asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n\n\n"}}