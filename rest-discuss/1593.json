{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"tDse1tNHRh_70fjL3PPP0YbM9_x8CjNSN6v8IBQrdIYL2lx-SYu9yD2KCWcL8o6K6_RlNSsdYs3JDnZ4OxE0LHY","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [PMX:#] Re: [rest-discuss] Where does the Web community want to go?  [Was:Changing relationship between SOAP and REST]","postDate":"1024495352","msgId":1593,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMTA4RUY4LjMwNDA3MDlAYnJpdm8ubmV0Pg==","referencesHeader":"PDNEMEJCQjdGLjM0OERBRUZAcHJlc2NvZC5uZXQ+IDwzRDBERTFFNC41QTk5MDdBMUBtaXRyZS5vcmc+IDwzRDBFMEM2Ni5DNkFBODI2RkBwcmVzY29kLm5ldD4gPDNEMEYzQjE2LjgwNDA1MDVAYnJpdm8ubmV0PiA8M0QwRkFGMTUuQjMzRUM1NDlAcHJlc2NvZC5uZXQ+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":1592,"nextInTime":1594,"topicId":1593,"numMessagesInTopic":1,"msgSnippet":"... Yes.  There are fancy XML data binding libraries for perl, python, java... but not for C++.  ugh. ... We d love to use HTTP actually (because lots of","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 19 Jun 2002 14:00:29 -0000\r\nReceived: (qmail 70710 invoked from network); 19 Jun 2002 14:00:28 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 19 Jun 2002 14:00:28 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.238)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 Jun 2002 14:00:28 -0000\r\nReceived: (qmail 29971 invoked from network); 19 Jun 2002 14:00:28 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.103]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 19 Jun 2002 14:00:28 -0000\r\nMessage-ID: &lt;3D108EF8.3040709@...&gt;\r\nDate: Wed, 19 Jun 2002 10:02:32 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [PMX:#] Re: [rest-discuss] Where does the Web community want\n to go?  [Was:Changing relationship between SOAP and REST]\r\nReferences: &lt;3D0BBB7F.348DAEF@...&gt; &lt;3D0DE1E4.5A9907A1@...&gt; &lt;3D0E0C66.C6AA826F@...&gt; &lt;3D0F3B16.8040505@...&gt; &lt;3D0FAF15.B33EC549@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\n&gt; The ironic thing is that the SOAP world is moving away from the SOAP\n&gt; serialization and moving to XML Schema-based mappings. But you are right\n&gt; to use what works today and SOAP serialization works in many languages\n&gt; today.\n\nYes.  There are fancy XML data binding libraries for perl, python, \njava... but not for C++.  ugh.\n\n&gt; Interesting. It&#39;s too bad you have to emulate HTTP though. One of the\n&gt; things we have to push SOAP, WSDL and XML Schema implementors on is\n&gt; modularity of implementations. You should be able to send the data over\n\nWe&#39;d love to use HTTP actually (because lots of libraries exist for \nthat).  But we have other issues that prevent us from using HTTP (as it \nworks today).  Our remote devices are all behind firewalls.  When our \ncentral system wants to communicate with those devices, we have to place \nthat message (a Request (hello HTTP)) into a store and forward system \n(currently a tuple space, another RESTful idea).  The remote devices \nconnects to us and downloads all pending Requests.  We&#39;ve basically made \nHTTP&#39;s Request and Response asynchronous here.  And our Request object \nlooks just like an HTTP Request, only modeled as an object.  We are just \nPUTing things and GETing things.  Really sweet, actually.  More work on \nthe server side because we have to introspect the incoming object and \ndetermine its state and what that means, but this leaves us open to \ngreat extensibility.  It&#39;s easier to modify the way we look at objects \nand their state than to upgrade an API.\n\nNext up: using RDF to markup the incoming objects so we can start to \ninfer things and become even more flexible about what we can accept. \nC&#39;mon C++ XML toolkits!  We&#39;re waiting for you! :)\n\nSeth\n\n\n"}}