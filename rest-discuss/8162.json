{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229827793,"authorName":"Steve Loughran","from":"&quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;","profile":"steve_loughran","replyTo":"SENDER","senderId":"nz4u5hs-IjOjjOFcBgFZJgSh1eKvLwRklIHEcDRmmeqhuIOdjt3fn-kSMi-Zy71hpwIcvjDiJt3NfgnwbyZ2jTQkjzJ7lPpM7Dq7-M8VQpxiU4O7OEmotJ9-9NWrx-8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: The XML Semantic Web","postDate":"1174596656","msgId":8162,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlkYzc4ZDdiMDcwMzIyMTM1MHA1OGJkM2ZlYnljYmQxNGU0ODc1Y2RhMjZiQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDExNzQxMzg0NzguMTAxNjcuMTM5LmNhbWVsQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4=","referencesHeader":"PDExNzE5NjkxNzYuMjA3LjI3NTcyLm0xNkB5YWhvb2dyb3Vwcy5jb20+CSA8OTI3NDQxYjMwNzAyMjAxODEwdTQ0N2I5ODlmc2I2ZTIwYTBiNzM0ODJhMDRAbWFpbC5nbWFpbC5jb20+CSA8NDVEQzEzM0YuMTAyMDAwNUBkZWhvcmEubmV0PgkgPDExNzIyNjc3NzEuNDc1NS42MS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8NDVFMDg2QjcuNzA1MDgwN0BkZWhvcmEubmV0PgkgPDlkYzc4ZDdiMDcwMjI1MDkwM3gyN2U1MDJiN25kYWY0YTEzNTg5ZjgxYzkyQG1haWwuZ21haWwuY29tPgkgPDFmMmVkNWNkMDcwMjI1MTI1M3IxNmVmNWRlMXg4OTYzYzMzMjRkYTE5OWU1QG1haWwuZ21haWwuY29tPgkgPDExNzI3NTQ5NjQuNDczOC40MC5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8MWYyZWQ1Y2QwNzAzMDExMDU2ajI1ZDdmZWQ3dDgxZDlmYmJlNTI3NDA5ZWZAbWFpbC5nbWFpbC5jb20+CSA8MTE3NDEzODQ3OC4xMDE2Ny4xMzkuY2FtZWxAbG9jYWxob3N0LmxvY2FsZG9tYWluPg=="},"prevInTopic":8145,"nextInTopic":8163,"prevInTime":8161,"nextInTime":8163,"topicId":7927,"numMessagesInTopic":81,"msgSnippet":"... Clearly a directed list is a proper subset of a tree, and a tree is a proper subset of a DAG. Yet, like you say, people jump for the list ahead of tree","rawEmail":"Return-Path: &lt;steve.loughran.soapbuilders@...&gt;\r\nX-Sender: steve.loughran.soapbuilders@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 97973 invoked from network); 22 Mar 2007 20:50:59 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m50.grp.scd.yahoo.com with QMQP; 22 Mar 2007 20:50:59 -0000\r\nReceived: from unknown (HELO an-out-0708.google.com) (209.85.132.249)\n  by mta12.grp.scd.yahoo.com with SMTP; 22 Mar 2007 20:50:59 -0000\r\nReceived: by an-out-0708.google.com with SMTP id c24so942451ana\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 22 Mar 2007 13:50:57 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=FZOOR3Uw+OydfJ+0sHXWRD/hKfXrjc0FFs9AtdrKLiGYQv5GgUURPIbxCJvimJi0+cwlSoJePPLXZ3TcvfYBJldVGSOMOsDrN7MxvvCK9w8hxaRmmPzpn8X2bH/dXaOfJU7A2+6JjRugT8a34dlp0YnsGmlLPX2dBIXAk/IKDmc=\r\nReceived: by 10.100.178.7 with SMTP id a7mr2011546anf.1174596656980;\n        Thu, 22 Mar 2007 13:50:56 -0700 (PDT)\r\nReceived: by 10.100.124.19 with HTTP; Thu, 22 Mar 2007 13:50:56 -0700 (PDT)\r\nMessage-ID: &lt;9dc78d7b0703221350p58bd3febycbd14e4875cda26b@...&gt;\r\nDate: Thu, 22 Mar 2007 20:50:56 +0000\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;1174138478.10167.139.camel@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;1171969176.207.27572.m16@yahoogroups.com&gt;\n\t &lt;927441b30702201810u447b989fsb6e20a0b73482a04@...&gt;\n\t &lt;45DC133F.1020005@...&gt;\n\t &lt;1172267771.4755.61.camel@...&gt;\n\t &lt;45E086B7.7050807@...&gt;\n\t &lt;9dc78d7b0702250903x27e502b7ndaf4a13589f81c92@...&gt;\n\t &lt;1f2ed5cd0702251253r16ef5de1x8963c3324da199e5@...&gt;\n\t &lt;1172754964.4738.40.camel@...&gt;\n\t &lt;1f2ed5cd0703011056j25d7fed7t81d9fbbe527409ef@...&gt;\n\t &lt;1174138478.10167.139.camel@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;\r\nSubject: Re: [rest-discuss] Re: The XML Semantic Web\r\nX-Yahoo-Group-Post: member; u=229827793; y=sfhVAcvRxmAv7eiV13UJBHAlx9Uopmp82Wf8HIxO6XjOdpmOzjBCEso\r\nX-Yahoo-Profile: steve_loughran\r\n\r\nOn 3/17/07, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n\n&gt; &gt; &gt; * A train list document has a train list structure\n&gt; &gt; Ok, a list can be expressed directly in a tree or a graph.\n&gt;\n&gt; A graph is rarely the data structure of choice when working with data\n&gt; that could be stored a list. Graphs carry with them intrinsic\n&gt; algorithmic complexity that lists side-step. Choosing a more specific\n&gt; type reduces the cost of developing an application. Choosing a more\n&gt; general type to convey the same information increases cost. It forces\n&gt; information consumers to accomodate possible variation in structure that\n&gt; does not exist in practice and employ more complex algorithms than\n&gt; necessary.\n\nClearly a directed list is a proper subset of a tree, and a tree is a\nproper subset of a DAG.\n\nYet, like you say, people jump for the list ahead of tree walking and\nway ahead of graph manipulation. Why?\n\nSome theories\n -iteration through a list is easier than ahead of recursive tree\nwalking and trying to properly handle a directed graph.\n -lists are similar to arrays, which are the ubuqituous &#39;first data structure&#39;\n -there is crude language support for lists even in todays OO\nlangauges. e.g. the foreach support in C# and Java, STL in C++.\n -a large swathe of the developer community didnt put in the hours\nlistening to milner go on about concurrency, fourman on temporal\nreasoning, or any of the AI people showing how prolog can be made to\ndo useful things.\n\nFor some reason, lists are something everyone is happy with.\n\nThen come trees, which are ubiquitous in XML work...either you walk\nthe DOM by hand or you hand off tree walking to the SAX parser and\nhandle the node events. As soon as you turn to XPath, you are into\nreal tree land, which is why its interesting that C# 3.0 and Java (7?)\nadd this. Gradually the mainstream &#39;enterprise&#39; languages are\nfollowing the data structures, with about a 5 year lag.\n\nYet if you look at a lot of XML docs, there&#39;s enough x-referencing in\nthem to make them somewhat graphy\n -anchor refs in XHTML\n -target dependencies (ant, nant, msbuild)\n -serialized data xrefs (SOAP section 5 encoding)\nBoth DTDs and XSD have support for ID attributes, because giving\nelements unique IDs -and refererring to them later- was felt to matter\n\nSo graphs are coming, whether you make it explicit in the language or\nnot. And without explicit support in the language and the libraries,\nyou end up implementing things badly, with aggressively suboptimal\ngraph traversal, code that assumes your graph is a DAG, etc, etc.\n\nAs for RDF, well, I have to tread carefully else the Jena team give me\na hard stare at the coffee machine. I fail to see how you can call it\na descriptive language until you can say &#39;all french films have a sex\nscene&#39;, which is trivial in Prolog\n has(X,sex_scene):-nationality(X,french),is_a(X,film).\nyet RDF forces me to list each film one by one with its own URI and\ndeclare the fact. Maybe SPARQL or whatever will correct this\ndeficiency.\n\n\nThe other problem with RDF is that it is pretty painful to work with\nin today&#39;s languages, the ones that are barely au-fait with lists, let\nalone trees. But you know what? They don&#39;t do XML very well either,\nwhich is why the SOAP stack try and hide those nasty Xml things from\nthe SOAP endpoint authors.\n\nPerhaps that future evolution of Java/C# will make them more amenable\nto graph work alongside tree manipulation....\n\n-steve\n\n"}}