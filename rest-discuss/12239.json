{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"pNPBDOiUhtau0nBALy8f9ukmKVeYqRvQIUpOVU2ET1xoVy6AoRpd5wxiT9iFm453gH5t0q7Cc9_PhrhNH-jZHTCVv3jELcf8XR-DgcZIdA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one  DELETE","postDate":"1237412900","msgId":12239,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzE4MTU0ODIwLjg1ZmNiYmYzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGI1NDhkZjY1MDkwMzE4MDkzOHAzOTMxYmMxM2dhNDg1ZTA5Y2QxY2ZkZmEwQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMTgwNDIzMTUuNGVmYTljODIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8ZTc4YmRiYzAwOTAzMTgwODM0azUwYjFjMmVlbjQ2MTRjNTQwZmMzYTJiYmJAbWFpbC5nbWFpbC5jb20+CTxiNTQ4ZGY2NTA5MDMxODA5MzhwMzkzMWJjMTNnYTQ4NWUwOWNkMWNmZGZhMEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":12238,"nextInTopic":12240,"prevInTime":12238,"nextInTime":12240,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... I can t set aside the issue of REST.  If you re asking whether I would discourage you from building an RPC-based app using WS-* and SOAP, I would say yes","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54618 invoked from network); 18 Mar 2009 21:48:01 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m2.grp.sp2.yahoo.com with QMQP; 18 Mar 2009 21:48:01 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 18 Mar 2009 21:48:01 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id B7515D05B4;\n\tWed, 18 Mar 2009 17:48:00 -0400 (EDT)\r\nDate: Wed, 18 Mar 2009 15:48:20 -0600\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090318154820.85fcbbf3.eric@...&gt;\r\nIn-Reply-To: &lt;b548df650903180938p3931bc13ga485e09cd1cfdfa0@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t&lt;20090318042315.4efa9c82.eric@...&gt;\n\t&lt;e78bdbc00903180834k50b1c2een4614c540fc3a2bbb@...&gt;\n\t&lt;b548df650903180938p3931bc13ga485e09cd1cfdfa0@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use\n one  DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nmike amundsen wrote:\n\n&gt; \n&gt; Now the question:\n&gt; Setting aside the issue of whether these methods qualify as REST-ful,\n&gt; are there still folks who would discourage implementing composites,\n&gt; batching? If yes, why? Are there other considerations that I&#39;ve not\n&gt; spelled out here?\n&gt; \n\nI can&#39;t set aside the issue of REST.  If you&#39;re asking whether I would\ndiscourage you from building an RPC-based app using WS-* and SOAP, I\nwould say &quot;yes&quot; but I would have to give the REST answer to either\nquestion:\n\n&quot;Hypothesis II: Constraints can be added to the WWW architectural style\nto derive a new hybrid style that better reflects the desired\nproperties of a modern Web architecture.&quot;\n\nIf you aren&#39;t concerned about any of the problems that REST solves, go\nahead and do things however you&#39;d like.  If you are interested in\navoiding the myriad problems which arise from developing an application\nthat ignores REST, then don&#39;t break the uniform interface constraint.\n\n&quot;Most software systems are created with the implicit assumption that\nthe entire system is under the control of one entity, or at least that\nall entities participating within a system are acting towards a common\ngoal and not at cross-purposes. Such an assumption cannot be safely\nmade when the system runs openly on the Internet. Anarchic scalability\nrefers to the need for architectural elements to continue operating\nwhen they are subjected to an unanticipated load, or when given\nmalformed or maliciously constructed data, since they may be\ncommunicating with elements outside their organizational control. The\narchitecture must be amenable to mechanisms that enhance visibility and\nscalability.&quot;\n\nIf I am an architect who builds skyscrapers and you&#39;re building a lean-\nto, who am I to dissuade you?  However, if you want to scale your lean-\nto up to provide housing to 1,000 people by extending it as needed, I&#39;m\ngonna hafta burst your bubble by explaining that the lean-to\narchitectural style is no more appropriate to building a housing block\nthan, well, err... a design for a slaughterhouse.\n\nYour example puts forth a very tightly-coupled system which implements\nnone of the constraints of REST.  No big thing.  Unless you want it to\nscale, in which case the importance of &quot;visibility&quot; far outweighs the\ndisadvantage of not having batch-processing capability.\n\n&gt;\n&gt; Alternately, assume for item #1, only POST or PUT is used (not MOVE,\n&gt; COPY, BDELETE, etc.). Also assume for #3 that the internet media type\n&gt; reflects the intention of the user-agent\n&gt; (application/vnd.customers-move+xml, /vnd.customers-bdelete+xml,\n&gt; etc.). Does this modification make the process more/less desirable?\n&gt; \n\nIn terms of REST?  If so, then you can&#39;t get any more undesirable than\noverloading media-type such that it provides a mechanism to override\nthe semantics of the request method (i.e. if PUT means one thing for one\nmedia type, and another thing for the next media type, then you&#39;ve\nfailed to &quot;constrain the interface to a consistent set of semantics for\nall resources&quot;).  Such an ad-hoc architecture can&#39;t scale anarchically\nbecause it exists in its own world.\n\n-Eric\n\n"}}