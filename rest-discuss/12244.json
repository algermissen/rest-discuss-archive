{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"fR0l_pDY4KrbP5ve5m-_1IdC5NBPhXYA-Xk3qV8s5B3_b-UxBdtmcmEbmMexDUDlpGd8f5YZbU9GivvaBtXv-qgBD7jC-dz-btBtYsQtrA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one  DELETE","postDate":"1237418203","msgId":12244,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzE4MTcxNjQzLjUyOWFmYzU2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGI1NDhkZjY1MDkwMzE4MTUyOHcyN2ZhOWUyM3RhZmUwYTA1YzgyOGM3NTg2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMTgwNDIzMTUuNGVmYTljODIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8ZTc4YmRiYzAwOTAzMTgwODM0azUwYjFjMmVlbjQ2MTRjNTQwZmMzYTJiYmJAbWFpbC5nbWFpbC5jb20+CTxiNTQ4ZGY2NTA5MDMxODA5MzhwMzkzMWJjMTNnYTQ4NWUwOWNkMWNmZGZhMEBtYWlsLmdtYWlsLmNvbT4JPDIwMDkwMzE4MTU0ODIwLjg1ZmNiYmYzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPGI1NDhkZjY1MDkwMzE4MTUyOHcyN2ZhOWUyM3RhZmUwYTA1YzgyOGM3NTg2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12242,"nextInTopic":12245,"prevInTime":12243,"nextInTime":12245,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... REST == Uniform Interface.  RFC2616 makes no mention of a uniform interface.  The only souce I know of which defines uniform interface is Dr. Fielding s","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 79528 invoked from network); 18 Mar 2009 23:16:24 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m5.grp.sp2.yahoo.com with QMQP; 18 Mar 2009 23:16:24 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 18 Mar 2009 23:16:23 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 2E95ED051E;\n\tWed, 18 Mar 2009 19:16:23 -0400 (EDT)\r\nDate: Wed, 18 Mar 2009 17:16:43 -0600\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090318171643.529afc56.eric@...&gt;\r\nIn-Reply-To: &lt;b548df650903181528w27fa9e23tafe0a05c828c7586@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t&lt;20090318042315.4efa9c82.eric@...&gt;\n\t&lt;e78bdbc00903180834k50b1c2een4614c540fc3a2bbb@...&gt;\n\t&lt;b548df650903180938p3931bc13ga485e09cd1cfdfa0@...&gt;\n\t&lt;20090318154820.85fcbbf3.eric@...&gt;\n\t&lt;b548df650903181528w27fa9e23tafe0a05c828c7586@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use\n one  DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nmike amundsen wrote:\n\n&gt; \n&gt; &lt;snip&gt;If you are interested in avoiding the myriad problems which\n&gt; arise from developing an application  that ignores REST, then don&#39;t\n&gt; break the uniform interface constraint.&lt;/snip&gt;\n&gt; Is it correct for me to assume that the &quot;uniform interface&quot; of which\n&gt; you speak is that outlined in RFC2616 only? If not, what other sources\n&gt; do you consider viable as part of the &quot;uniform interface?&quot;\n&gt; \n\nREST == Uniform Interface.  RFC2616 makes no mention of a uniform\ninterface.  The only souce I know of which defines &quot;uniform interface&quot;\nis Dr. Fielding&#39;s dissertation, which defines it as the end-product\nconstraint derived through the four other described constraints.\n\n&gt; \n&gt; &lt;snip&gt; Unless you want it to scale, in which case the importance of\n&gt; &quot;visibility&quot; far outweighs the disadvantage of not having\n&gt; batch-processing capability.&lt;/snip&gt;\n&gt; I am unclear on your use of &quot;visibility&quot; here. Are you referring only\n&gt; to the values passed as HTTP Methods (and the defined behaviors for\n&gt; them)? Are the other meta data items (HTTP Headers) that you consider\n&gt; part of visibility? For example, if in my hypothetical case a large\n&gt; community (hundreds of servers, thousands of clients) shared an\n&gt; understanding of the methods I mentioned and the metadata does this\n&gt; have any impact on your consideration of this example?\n&gt; \n\nThe shortest answer, is that a &quot;visible&quot; request-response stream\ncontains everything an intermediary needs to know to determine the\nnature of the request only by looking at the headers.  Visible\ninstructions aren&#39;t buried in the request entity, they are right there\nin the request method and the response status code.\n\nSince DELETE is its own method, when such a request passes through an\nintermediary, the intermediary can interpret whether it was successful\nor not, and expire any cached representations of the deleted resource.\nMaking deletions happen any other way is _invisible_ to intermediaries\nsince what&#39;s really going on is not wholly contained within the headers\nof the request and the response.  REST calls this &quot;self-descriptive\nmessages&quot;.\n\nGiven caching, the only way to ensure that the user requesting a DELETE\ncan&#39;t reload a representation of the resource, is to make a discrete\nDELETE request against the specific URI in question.\n\n&gt;\n&gt; Finally, it is not the case that I am not ...&quot;concerned about any of\n&gt; the problems that REST solves...&quot; If that were true, I would not have\n&gt; posed my question here...\n&gt;\n\nOh, I know, I was referring to your hypothetical case, not you\npersonally.  ;-)  You asked a tough question and that was the only way\nI could figure out how to answer it.  No offense intended.\n\n-Eric\n\n"}}