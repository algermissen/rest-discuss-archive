{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214300837,"authorName":"Jakob Strauch","from":"&quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;","profile":"jakobstrauch","replyTo":"SENDER","senderId":"_geDnf_W_p5Dwz9Fp4Az9xreMU3knie_g0QKRFRU0Kz5t5SsQ17z3eVNd38QC8qQUK8tKK3TQGhsrMbSq95lRKy5TwbLJCC1vHPYW58","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Best approach for a complex API?","postDate":"1324365545","msgId":18108,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpjcGN0OStqZWF1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PENBS2lvT3FzdVA5dTNBRThLSkY3Z3VzWHd6czNYNW5XWDcxUGZNZj1yYjBLMmlPNkxHQUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18107,"nextInTopic":18109,"prevInTime":18107,"nextInTime":18109,"topicId":18105,"numMessagesInTopic":11,"msgSnippet":"Did you try the WCF Web API [1]? It is still a preview release, but work already very nicely. Btw. iÂ´m using also hal+xml, but i worked on an own serializer","rawEmail":"Return-Path: &lt;jakob.strauch@...&gt;\r\nX-Sender: jakob.strauch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 97401 invoked from network); 20 Dec 2011 07:19:17 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m16.grp.sp2.yahoo.com with QMQP; 20 Dec 2011 07:19:17 -0000\r\nX-Received: from unknown (HELO ng2-vm5.bullet.mail.gq1.yahoo.com) (98.136.219.18)\n  by mta3.grp.sp2.yahoo.com with SMTP; 20 Dec 2011 07:19:17 -0000\r\nX-Received: from [98.137.0.87] by ng2.bullet.mail.gq1.yahoo.com with NNFMP; 20 Dec 2011 07:19:07 -0000\r\nX-Received: from [69.147.65.150] by tg7.bullet.mail.gq1.yahoo.com with NNFMP; 20 Dec 2011 07:19:06 -0000\r\nX-Received: from [98.137.34.32] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 20 Dec 2011 07:19:06 -0000\r\nDate: Tue, 20 Dec 2011 07:19:05 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;jcpct9+jeau@...&gt;\r\nIn-Reply-To: &lt;CAKioOqsuP9u3AE8KJF7gusXwzs3X5nWX71PfMf=rb0K2iO6LGA@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;\r\nSubject: Re: Best approach for a complex API?\r\nX-Yahoo-Group-Post: member; u=214300837; y=SxlhJnCT5DhcEB19VAU0vF_z3cAiqvNINuDOGBWdY09ELv_gkMVw\r\nX-Yahoo-Profile: jakobstrauch\r\n\r\nDid you try the WCF Web API [1]? It is still a preview release, but work al=\r\nready very nicely.\n\nBtw. i=B4m using also hal+xml, but i worked on an own s=\r\nerializer (and formatter for the web api) with a much more convient way to =\r\nwork with hal. I will release a first version soon...\n\nCheers,\nJakob\n\n\n[1] =\r\nhttp://wcf.codeplex.com/wikipage?title=3DWCF%20HTTP\n\n\n--- In rest-discuss@y=\r\nahoogroups.com, Darrel Miller &lt;darrel.miller@...&gt; wrote:\n&gt;\n&gt; One option wou=\r\nld be to use XML variant of Hal.  There is a .net based\n&gt; parser available =\r\nhere http://hal.codeplex.com.   Hal is a generic media\n&gt; type but you can c=\r\nonvey specific semantics using extended link relations.\n&gt;  It is easy to sp=\r\necify hierarchies of resources and has a standard way of\n&gt; representing lin=\r\nks.  I also built a path syntax for querying into the\n&gt; parser but that is =\r\nnot yet part of the spec.\n&gt; \n&gt; Darrel\n&gt; \n&gt; \n&gt; On Mon, Dec 19, 2011 at 3:08 =\r\nPM, J=F8rn Wildt &lt;jw@...&gt; wrote:\n&gt; \n&gt; &gt; **\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I am at the beginnin=\r\ng of a project where we need a web/http-based API for\n&gt; &gt; reading and creat=\r\ning complex objects (more on that later). Right now I\n&gt; &gt; need\n&gt; &gt; to decid=\r\ne wether to do this with a SOAP service or a REST API.\n&gt; &gt;\n&gt; &gt; SOAP has the=\r\n benefits of being well understood and having lots of tooling\n&gt; &gt; thereby m=\r\naking it easy to get up and running. REST has some more long term\n&gt; &gt; benef=\r\nits but requires a bit more work up front.\n&gt; &gt;\n&gt; &gt; I would rather do it wit=\r\nh REST but doing REST right puts some burden on\n&gt; &gt; the\n&gt; &gt; client that I s=\r\ntruggle with. It is extremely easy to create a SOAP service\n&gt; &gt; in .NET usi=\r\nng WCF and create a proxy client that works with it. Creating a\n&gt; &gt; REST cl=\r\nient requires a bit more work if it must know how to follow links\n&gt; &gt; via\n&gt;=\r\n &gt; link-relations, read (x)forms definitions on the fly and so on.\n&gt; &gt;\n&gt; &gt; =\r\nThe API works with case files in a case management system (*). A case file\n=\r\n&gt; &gt; contains dossiers, dossiers contain documents, and dossiers can be\n&gt; &gt; =\r\nassociated with various persons and/or organizations (parties) - like for\n&gt;=\r\n &gt; instance a responsible party.\n&gt; &gt;\n&gt; &gt; So I need to read case files, doss=\r\niers, binary documents and parties. I\n&gt; &gt; also\n&gt; &gt; need to be able to creat=\r\ne those entities and create the hierarchical\n&gt; &gt; relationship between them.=\r\n I expect to have web ressources for the\n&gt; &gt; entities:\n&gt; &gt; case file, dossi=\r\ner, document, party ... and, no, I am not going to expose\n&gt; &gt; my\n&gt; &gt; intern=\r\nal entity types as web objects, there will be some kind of\n&gt; &gt; transformati=\r\non to a public facing representation.\n&gt; &gt;\n&gt; &gt; My first design question is; =\r\nwhat content type should I use for\n&gt; &gt; representing\n&gt; &gt; these entities? By =\r\nusing HTML I can use &lt;form&gt; and &lt;a&gt; as hypermedia\n&gt; &gt; controls - but then t=\r\nhere is no well known machine readable representation\n&gt; &gt; of the entities e=\r\nxcept RDFa which I have found rather difficult to use due\n&gt; &gt; to lack of to=\r\noling in .NET.\n&gt; &gt;\n&gt; &gt; I could also use some proprietary XML variation. Tha=\r\nt would solve the\n&gt; &gt; entity\n&gt; &gt; representation but leave me without well k=\r\nnown hypermedia controls. That\n&gt; &gt; could although be fixed by allowing elem=\r\nents like ATOM links and such in\n&gt; &gt; the\n&gt; &gt; XML.\n&gt; &gt;\n&gt; &gt; Initial scenario:=\r\n the API must support creation of a case file, adding a\n&gt; &gt; dossier, and as=\r\nsociate various parties to it. That can be a two step\n&gt; &gt; operation - 1) po=\r\nst case file data, 2) post dossier data with reference to\n&gt; &gt; (1) and inclu=\r\nded party references. The result would probably be a &quot;403\n&gt; &gt; created&quot; with=\r\n a link to the new case file resource.\n&gt; &gt;\n&gt; &gt; Second scenario: add additio=\r\nnal binary documents to the dossier. That\n&gt; &gt; should\n&gt; &gt; be easy with the d=\r\nossier representation having a link to its document\n&gt; &gt; collection such tha=\r\nt the client can post new documents to the collection.\n&gt; &gt; It\n&gt; &gt; should be=\r\n possible to represent a document upload using only standard HTTP\n&gt; &gt; heade=\r\nrs, posted content type, and binary data in the body.\n&gt; &gt;\n&gt; &gt; My biggest co=\r\nncern is what content types to use in order to make it as\n&gt; &gt; easy\n&gt; &gt; to u=\r\nse from .NET as possible while still being a &quot;real&quot; REST API?\n&gt; &gt;\n&gt; &gt; What =\r\nI would like to be able to do, is to write code like this when\n&gt; &gt; creating=\r\n\n&gt; &gt; for instance a new case file:\n&gt; &gt;\n&gt; &gt; // Assume &quot;CaseFile&quot; corresponds=\r\n to the public facing content type\n&gt; &gt; CaseFile f =3D new CaseFile();\n&gt; &gt; f=\r\n.Title =3D &quot;A new case file&quot;;\n&gt; &gt; f.OtherProperties =3D ...;\n&gt; &gt;\n&gt; &gt; Uri cr=\r\neateCaseFileUri =3D ... a way to fetch the URI - how? ...\n&gt; &gt; Uri newCaseFi=\r\nleUri =3D createCaseFileUri.SerializeAndPostSomeData(f);\n&gt; &gt;\n&gt; &gt; Where woul=\r\nd you guys start with such a project? What tools would you use\n&gt; &gt; for\n&gt; &gt; =\r\na C# .NET client (the server is built on Open Rasta)?\n&gt; &gt;\n&gt; &gt; Thanks, J=F8r=\r\nn\n&gt; &gt;\n&gt; &gt; (*) I have mentioned this some time ago on this mailing list, but=\r\n the\n&gt; &gt; project has been sleeping for some time, so now time has come to r=\r\ne-think\n&gt; &gt; bits of it.\n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n&gt;\n\n\n\n"}}