{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":248248154,"authorName":"Bruno Harbulot","from":"Bruno Harbulot &lt;Bruno.Harbulot@...&gt;","profile":"bruno_harbulot","replyTo":"SENDER","senderId":"HquNB6ueB0PW3KD22YOOiv6UzPLW0NiQCkMVb3bqESgfkf36Ox4s2H8rTEm__RxobO1bNN1qsIwPAJGOKNlr-U-YALmhBtYEsMBmgNpDYb0w7q7WvhBu","spamInfo":{"isSpam":false,"reason":"0"},"subject":"PUT or POST, idempotent for the application","postDate":"1183661264","msgId":9332,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2OEQzQ0QwLjcwMjAzMDBAbWFuY2hlc3Rlci5hYy51az4="},"prevInTopic":0,"nextInTopic":9333,"prevInTime":9331,"nextInTime":9333,"topicId":9332,"numMessagesInTopic":4,"msgSnippet":"Hello, Apologies if I revive last week s thread about POST being idempotent or not, but it got me confused on the choice between using POST or PUT in the","rawEmail":"Return-Path: &lt;Bruno.Harbulot@...&gt;\r\nX-Sender: Bruno.Harbulot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 41124 invoked from network); 5 Jul 2007 18:49:15 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m56.grp.scd.yahoo.com with QMQP; 5 Jul 2007 18:49:15 -0000\r\nReceived: from unknown (HELO clarity.mcc.ac.uk) (130.88.200.144)\n  by mta13.grp.scd.yahoo.com with SMTP; 5 Jul 2007 18:49:14 -0000\r\nReceived: from gomwe.mcc.ac.uk ([10.2.18.2])\n\tby clarity.mcc.ac.uk with esmtps (TLSv1:AES256-SHA:256)\n\t(Exim 4.63 (FreeBSD))\n\t(envelope-from &lt;Bruno.Harbulot@...&gt;)\n\tid 1I6WMp-000Esx-Ss; Thu, 05 Jul 2007 19:47:51 +0100\r\nReceived: from cspool30.cs.man.ac.uk ([130.88.195.130]:53609 helo=mirabelle.chermonsieur.org)\n\tby gomwe.mcc.ac.uk with esmtpsa (TLSv1:AES256-SHA:256)\n\t(Exim 4.60 (FreeBSD))\n\t(envelope-from &lt;Bruno.Harbulot@...&gt;)\n\tid 1I6WMp-0007CG-LG; Thu, 05 Jul 2007 19:47:51 +0100\r\nMessage-ID: &lt;468D3CD0.7020300@...&gt;\r\nDate: Thu, 05 Jul 2007 19:47:44 +0100\r\nUser-Agent: Thunderbird 2.0.0.4 (Macintosh/20070604)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Authenticated-Sender: Bruno Harbulot from cspool30.cs.man.ac.uk (mirabelle.chermonsieur.org) [130.88.195.130]:53609\r\nX-Authenticated-From: Bruno.Harbulot@...\r\nX-UoM: Scanned by the University Mail System. See http://www.itservices.manchester.ac.uk/email/filtering/information/ for details.\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Bruno Harbulot &lt;Bruno.Harbulot@...&gt;\r\nSubject: PUT or POST, idempotent for the application\r\nX-Yahoo-Group-Post: member; u=248248154; y=FPbhPKhlwNnf4QdlCt14eKLmR59X0WKEgh8EaXMTrGnyFPEwBFCFD0c\r\nX-Yahoo-Profile: bruno_harbulot\r\n\r\nHello,\n\n\nApologies if I revive last week&#39;s thread about POST being idempotent or \nnot, but it got me confused on the choice between using POST or PUT in \nthe system on which I&#39;m working, and idempotent messages matter in this \ncase.\n\n\nWe&#39;ve designed a system (which I believe complies with the REST \nprinciples) that relies on a client interacting with a resource to \ncreate other resources.\n\n\nTo summarise how this system works, a client can ask the Factory \nresource to create Item resources. The process of creating an Item \nresource must follow two constraints:\n   - at the end of the process, the client must have created one Item \nresource and must know its URI;\n   - at the end of the process, the Factory resource must know that the \nclient knows the new Item resource URI.\n\nInitially, we assume the client has been configured to know the URI of \nthe Factory: http://example.org/Factory.\n\nThe protocol we use is as follows (the numbers in the URIs are just \nexamples):\n\n(phase 1: tentative)\nC: HTTP PUT to http://example.org/Factory containing &lt;newItemReq /&gt;\nS: HTTP 201 with Location: http://example.org/Item/1\n\n(phase 2: activation)\nC: HTTP PUT to http://example.org/Item/1 containing &lt;resActivator /&gt;\nS: HTTP 200 OK.\n\n\nAn HTTP GET on http://example.org/Factory returns a list of all the \nItems that have been created and &#39;activated&#39; (i.e. of which the Factory \nknows that the client knows their address).\nIf the Factory never receives the second PUT, the Item resource is not \nthe list document. (Optionally, if the client interacts later with the \nItem resource, this may activate this resource anyway). Item resources \nthat are not activated may be discarded at any time by the Factory (in \nwhich case the client would have to re-start the entire process.)\n\nHere is an example of what could go wrong and how this would be handled:\n\n(phase 1: tentative)\nC: HTTP PUT to http://example.org/Factory containing &lt;newItemReq /&gt;\nS: HTTP 201 with Location: http://example.org/Item/1\n   - the connection is lost and the new URI never reaches the client.\n\n(phase 1: another attempt)\nC: HTTP PUT to http://example.org/Factory containing &lt;newItemReq /&gt;\nS: HTTP 201 with Location: http://example.org/Item/2\n\n(phase 2: activation)\nC: HTTP PUT to http://example.org/Item/2 containing &lt;resActivator /&gt;\nS: HTTP 200 OK.\n   - the client knows the URI of the Item it has successfully created, \nand the factory knows that the client knows.\n\n\n\nThe &#39;activation&#39; PUT is idempotent because sending it N+1 times has the \nsame effect as sending it just once.\n\nI also think the first &#39;tentative&#39; PUT is idempotent, although it is \nmore subtle. Effectively, whatever the URI returned in the tentative \nphase is does not matter, either to the client or to the factory. When \ntaking into account the two phases, sending N+1 &#39;tentative&#39; PUT + an \n&#39;activation&#39; has the same result as sending only one tentative PUT \nfollowed by an activation: only one Item resource is activated and both \nthe client and the server know about its URI.\n\n\nWhen reading Section 9.5 and 9.6 of RFC 2616, my use of PUT here is not \nappropriate, and it should probably be POST, in both cases, for two \ndifferent reasons:\n   - the &#39;tentative&#39; PUT clearly does not comply with &quot;the URI in a PUT \nrequest identifies the entity enclosed with the request&quot; (in Section 9.6);\n   - the &#39;activation&#39; PUT might rather be considered as an &quot;annotation \nof existing resources&quot; (in Section 9.5).\n\n\n\nI&#39;m tempted to change these two PUTs into POSTs. However, I quite like \nthe fact that PUT is intended to be idempotent. I believe the fact that \na request is guaranteed to be idempotent is more important than &quot;the URI \nin a PUT request identifies the entity enclosed with the request&quot; when \ndesigning distributed systems.\nObviously, the use of POST in this system may be idempotent, but it \nappears to me that it&#39;s a constraint that deserves to be given more \nimportance, by using PUT. (By the way, to refer to last week&#39;s thread, \nmy understanding of POST not being idempotent is that N+1 times the same \nrequest may or may not have the same effect as just one.)\n\n\nI&#39;m not sure which one is right between PUT and POST (in both cases), \nalthough I tend to think at least the &#39;tentative&#39; PUT ought to be a \nPOST. Any comments appreciated.\n\n\nBest wishes,\n\n\nBruno.\n\n"}}