{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"_1Pmgr0kr-6YEJstJsGhXz9_YTdvRECAqkJdFcPHHhvR6EvBuLiUZVnPlWQwJPCpotGWJz-myNLL-OculqwBEkUf1fE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful Toggle","postDate":"1404917196","msgId":19663,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQWdWemRpYUY4LXl2b3VpVm1haEQyTFJFamh5dUtTPWFaSjFqYnBPaHByZitqaFZ6d0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDUzQkQ1NDIzLjYwMTA4MDJAYmVya2VsZXkuZWR1Pg==","referencesHeader":"PENBQWdWemRnZERUdjhSTmt5am1TczB3WEhfLT1VdE8xK1dZYU02UHJNcG9CQmlBZXN1UUBtYWlsLmdtYWlsLmNvbT4JPDUzQkQ1NDIzLjYwMTA4MDJAYmVya2VsZXkuZWR1Pg=="},"prevInTopic":19662,"nextInTopic":19664,"prevInTime":19662,"nextInTime":19664,"topicId":19657,"numMessagesInTopic":36,"msgSnippet":"I assume it is like a push button with no up/down or in/out lock. Anytime you push it and release, the state switches to the opposite of what you see. Robby","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 64537 invoked by uid 102); 9 Jul 2014 14:46:37 -0000\r\nX-Received: from unknown (HELO mtaq5.grp.bf1.yahoo.com) (10.193.84.36)\n  by m1.grp.bf1.yahoo.com with SMTP; 9 Jul 2014 14:46:37 -0000\r\nX-Received: (qmail 17720 invoked from network); 9 Jul 2014 14:46:37 -0000\r\nX-Received: from unknown (HELO mail-ig0-f178.google.com) (209.85.213.178)\n  by mtaq5.grp.bf1.yahoo.com with SMTP; 9 Jul 2014 14:46:37 -0000\r\nX-Received: by mail-ig0-f178.google.com with SMTP id hn18so1939302igb.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 09 Jul 2014 07:46:36 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.43.84.65 with SMTP id aj1mr31271170icc.5.1404917196892; Wed,\n 09 Jul 2014 07:46:36 -0700 (PDT)\r\nX-Received: by 10.64.18.196 with HTTP; Wed, 9 Jul 2014 07:46:36 -0700 (PDT)\r\nIn-Reply-To: &lt;53BD5423.6010802@...&gt;\r\nReferences: &lt;CAAgVzdgdDTv8RNkyjmSs0wXH_-=UtO1+WYaM6PrMpoBBiAesuQ@...&gt;\n\t&lt;53BD5423.6010802@...&gt;\r\nDate: Wed, 9 Jul 2014 10:46:36 -0400\r\nMessage-ID: &lt;CAAgVzdiaF8-yvouiVmahD2LREjhyuKS=aZJ1jbpOhprf+jhVzw@...&gt;\r\nTo: Erik Wilde &lt;dret@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=UTF-8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] RESTful Toggle\r\nX-Yahoo-Group-Post: member; u=198897688; y=Q0uNOt5IvLn5CllRYTxRC6kcdH5AaLAfjqTetaH3lrPhBw\r\nX-Yahoo-Profile: edonliu\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\n\r\nI assume it is like a push button with no up/down or in/out lock.\nAnytime you push it and release, the state switches to the opposite of\nwhat you see. Robby was concerned about &quot; both the overhead\nand latency this entails as well as the potential for a race condition\n(what if /state changes between the GET and the PUT?)&quot;\n\nCheers,\n\nDong\n\nOn Wed, Jul 9, 2014 at 10:39 AM, Erik Wilde &lt;dret@...&gt; wrote:\n&gt; On 2014-07-09, 16:33 , Dong Liu edongliu@... [rest-discuss] wrote:\n&gt;&gt;\n&gt;&gt; I agree with Keith on using PUT wit if-match.\n&gt;&gt; &quot;A request intended to update a resource (e.g., a PUT) MAY include an\n&gt;&gt; If-Match header field to signal that the request method MUST NOT be\n&gt;&gt; applied if the entity corresponding to the If-Match value (a single\n&gt;&gt; entity tag) is no longer a representation of that resource. This\n&gt;&gt; allows the user to indicate that they do not wish the request to be\n&gt;&gt; successful if the resource has been changed without their knowledge.&quot;\n&gt;\n&gt;\n&gt; i am not sure this approach matches the original idea of toggling. by\n&gt; definition, toggling does not care about the prior state. if it did, you\n&gt; would instead simply switch to the opposite of the current state. if you\n&gt; have a toggle service, you must accept that you cannot predict the result\n&gt; *after* the toggle, because you do not know the state *before* the toggle.\n&gt; if you do, you&#39;re simply using &quot;toggle&quot; as a weird synonym that sometimes\n&gt; means &quot;on&quot; and sometimes means &quot;off&quot;, and then maybe just using those terms\n&gt; would be a lot less confusing.\n&gt;\n&gt; cheers,\n&gt;\n&gt; dret.\n&gt;\n&gt; --\n&gt; erik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n&gt;            | UC Berkeley  -  School of Information (ISchool) |\n&gt;            | http://dret.net/netdret http://twitter.com/dret |\n\n"}}