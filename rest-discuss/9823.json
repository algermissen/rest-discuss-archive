{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":46574992,"authorName":"Jim Ancona","from":"Jim Ancona &lt;jim@...&gt;","profile":"scarhill","replyTo":"SENDER","senderId":"-3HuTV0neKe12XR3wemKeYAaUCRPgUIQ7K4jwSxuNsfkxyma3KJ7YXWNkM9blNBhcwgYz3C4sZwu-pXM1skumwHN8NnP2Vjz","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Multi step upload","postDate":"1195058518","msgId":9823,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3M0IyNTU2LjIwOTAxMDNAYW5jb25hZmFtaWx5LmNvbT4=","inReplyToHeader":"PDllZWJmNTc0MDcxMTE0MDI0NGgyODYxZTYwM28zN2FjM2Q5Yjk3OGY3ZmE5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDllZWJmNTc0MDcxMTE0MDI0NGgyODYxZTYwM28zN2FjM2Q5Yjk3OGY3ZmE5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":9820,"nextInTopic":9828,"prevInTime":9822,"nextInTime":9824,"topicId":9820,"numMessagesInTopic":3,"msgSnippet":"I ll have a try... ... I ll assume that the steps after the upload are asynchronous. I would model this as: - User POSTs the XML file to /upload_job - Server","rawEmail":"Return-Path: &lt;jim@...&gt;\r\nX-Sender: jim@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86246 invoked from network); 14 Nov 2007 16:41:30 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m55.grp.scd.yahoo.com with QMQP; 14 Nov 2007 16:41:30 -0000\r\nX-Received: from unknown (HELO out1.smtp.messagingengine.com) (66.111.4.25)\n  by mta15.grp.scd.yahoo.com with SMTP; 14 Nov 2007 16:41:30 -0000\r\nX-Received: from compute1.internal (compute1.internal [10.202.2.41])\n\tby out1.messagingengine.com (Postfix) with ESMTP id 7475047817;\n\tWed, 14 Nov 2007 11:41:30 -0500 (EST)\r\nX-Received: from heartbeat1.messagingengine.com ([10.202.2.160])\n  by compute1.internal (MEProxy); Wed, 14 Nov 2007 11:41:30 -0500\r\nX-Sasl-enc: s71k03EuTUlng0qEiWR0qe+9fadkewxfe6BcgdCO0t1r 1195058489\r\nX-Received: from [10.10.2.18] (unknown [38.97.74.254])\n\tby mail.messagingengine.com (Postfix) with ESMTP id DCF7DDE76;\n\tWed, 14 Nov 2007 11:41:29 -0500 (EST)\r\nMessage-ID: &lt;473B2556.2090103@...&gt;\r\nDate: Wed, 14 Nov 2007 11:41:58 -0500\r\nUser-Agent: Thunderbird 2.0.0.6 (Windows/20070728)\r\nMIME-Version: 1.0\r\nTo: Lawrence Oluyede &lt;l.oluyede@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;9eebf5740711140244h2861e603o37ac3d9b978f7fa9@...&gt;\r\nIn-Reply-To: &lt;9eebf5740711140244h2861e603o37ac3d9b978f7fa9@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jim Ancona &lt;jim@...&gt;\r\nSubject: Re: [rest-discuss] Multi step upload\r\nX-Yahoo-Group-Post: member; u=46574992; y=GHHjjCkVsP5FlsYEBWS41hH_TrBrCPlAqZpbguVo_7BTRek\r\nX-Yahoo-Profile: scarhill\r\n\r\nI&#39;ll have a try...\n\nLawrence Oluyede wrote:\n&gt; 1st step:\n&gt; \n&gt; - the user uploads an XML file\n&gt; - there is some validation going on server-side\n&gt; - the valid file (a collection of items) is splitted in one-item-per-file\n&gt; - the resulting XML files are stored somewhere on the file system\n\nI&#39;ll assume that the steps after the upload are asynchronous. I would \nmodel this as:\n- User POSTs the XML file to /upload_job\n- Server responds &quot;201 Created&quot; (or perhaps &quot;202 Accepted&quot;) with a \nLocation: header set to /upload_job/{job_id}. For browser users, it \nmight also return a representation that says &quot;Click here to see the \nstatus of your job&quot; along with a link to the the same job status URI.\n\n&gt; 2nd step:\n&gt; \n&gt; - the server presents to the user a page in which he can see what&#39;s\n&gt; going on (if the file was invalid, or if one of the items is)\n&gt; - the user can select which of the valid items can be stored by the server\n\nUser GETs the URI provided in the location above. If the asynchronous \nprocess has completed, the server responds with a representation that \nincludes a list of the items found and their status (valid/invalid) \nalong with a FORM that lets the user choose which of the valid items to \nstore. If the job isn&#39;t complete the representation tells the user that.\n\n&gt; \n&gt; 3rd step:\n&gt; \n&gt; - there&#39;s a final report of what happened in the first 2 steps\n\nAfter the user POSTS the form, the server responds with the final \nreport. In the future, GETting the status URI will return the same report.\n\n&gt; The problem is the 2nd step obviously depends on what happens in the\n&gt; 1st one and so on. The existing application\n&gt; stores a bunch of information in a in-memory session object (that I\n&gt; want to get rid of).\n&gt; \n&gt; My understanding is I have only one option to be RESTful: store the\n&gt; state information needed between the two steps client side (in a\n&gt; cookie?).\n\nHere I&#39;ve represented the state of the job as a new resource, which the \nuser can GET or POST to interact with the job.\n\nDoes that address your scenario, or did I miss some part of it?\n\nJim\n\n\n"}}