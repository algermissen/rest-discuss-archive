{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119917303,"authorName":"Walden Mathews","from":"Walden Mathews &lt;waldenm@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"1v8R4csbAT1qJA44-8M80yh8qzK6JU4OlqIV4Bx1e-jIXPgGfSDqN4CrVF4_-4sQ4xDAR_a29VBybJbvPEYrtaPhj9G47RZScFN5aBk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Must POST be non-idempotent?","postDate":"1182481621","msgId":9142,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjMwMWM3YjQ3YSQ2NzRmNzlhMCQ2NjAxYThjMEBXQUxERU5ERVNLVE9QPg==","referencesHeader":"PDAyMjgwMWM3YjM0ZiQ2NjY5OGM1MCQ4NzAwYThjMEBNQVJDTk9URT4gPDg2QjQ4MDQ3LUNCQjgtNDQ4Ri1CNzFDLTlCMzQ2NDgxNDVFNUBpbm5vcS5jb20+IDxlOWRmZmQ2NDA3MDYyMTA5NDBtNDEzNGYwNzJrOGQ1NzI0NzJjNzczMTg5NEBtYWlsLmdtYWlsLmNvbT4gPDAwMWIwMWM3YjQ0NiQ2MzE0M2U5MCQ1YzAwYThjMEBNQVJDTk9URT4="},"prevInTopic":9138,"nextInTopic":9143,"prevInTime":9141,"nextInTime":9143,"topicId":9132,"numMessagesInTopic":29,"msgSnippet":"Marc, You need to say NOT NECESSARILY the same as for a single request , because that language means the absence of the constraint, whereas your other","rawEmail":"Return-Path: &lt;waldenm@...&gt;\r\nX-Sender: waldenm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 12871 invoked from network); 22 Jun 2007 03:06:57 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m38.grp.scd.yahoo.com with QMQP; 22 Jun 2007 03:06:57 -0000\r\nReceived: from unknown (HELO mta1.srv.hcvlny.cv.net) (167.206.4.196)\n  by mta11.grp.scd.yahoo.com with SMTP; 22 Jun 2007 03:06:57 -0000\r\nReceived: from WALDENDESKTOP (ool-457794f6.dyn.optonline.net [69.119.148.246])\n by mta1.srv.hcvlny.cv.net\n (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))\n with SMTP id &lt;0JK000F6UONKOIT0@...&gt; for\n rest-discuss@yahoogroups.com; Thu, 21 Jun 2007 23:06:56 -0400 (EDT)\r\nDate: Thu, 21 Jun 2007 22:07:01 -0500\r\nTo: Marc de Graauw &lt;marc@...&gt;\r\nCc: &#39;Rest List&#39; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;006301c7b47a$674f79a0$6601a8c0@WALDENDESKTOP&gt;\r\nMIME-version: 1.0\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2900.3138\r\nX-Mailer: Microsoft Outlook Express 6.00.2900.3138\r\nContent-type: text/plain; charset=iso-8859-1\r\nContent-transfer-encoding: 7BIT\r\nX-Priority: 3\r\nX-MSMail-priority: Normal\r\nReferences: &lt;022801c7b34f$66698c50$8700a8c0@MARCNOTE&gt;\n &lt;86B48047-CBB8-448F-B71C-9B34648145E5@...&gt;\n &lt;e9dffd640706210940m4134f072k8d572472c7731894@...&gt;\n &lt;001b01c7b446$63143e90$5c00a8c0@MARCNOTE&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Walden Mathews &lt;waldenm@...&gt;\r\nReply-To: Walden Mathews &lt;waldenm@...&gt;\r\nSubject: Re: [rest-discuss] Must POST be non-idempotent?\r\nX-Yahoo-Group-Post: member; u=119917303; y=9j-moltnYyMIFcaODg8n-GlMwrF0R-lONr3Qk8BhK0m3Cv8z_o61MA\r\nX-Yahoo-Profile: waldenmathews\r\n\r\nMarc,\n\nYou need to say &quot;NOT NECESSARILY the same as for\na single request&quot;, because that language means the absence of\nthe constraint, whereas your other language is the logical\nnegation of the constraint, a wierd and probably useless notion.\n\nI don&#39;t get the &quot;server behavior&quot; vs &quot;message semantics&quot; thing,\nand I think you can ignore that :-).\n\nThe definition of &quot;non-idempotent&quot; in RFC 2616 is &quot;flawed&quot; in\nthe sense that it is not defined, and hence you have gone off in\nthe weeds attempting to interpret it.\n\nRFC2616 doesn&#39;t say anything about POST and idempotence,\nand that&#39;s the point.  In the absence of such a costraint, POST\nis free to be: POST(POST(x) != POST(x).  But that&#39;s freedom,\nnot constraint, so POST(POST(x) == POST(x) is also allowed,\njust not promised.\n\nAs for your open question, you&#39;re not really describing the\napplication goal very well, but I think the answer will still be\nfound in two principles:\n\n1. Allow the server to manage the creation of identity to\nthe degree that you trust it to do so.  That could mean using\nPOST even when you guess a new identity should not be\nminted.  (But should you (client) really be the authority?)\n\n2. When the client needs the promise of idempotence, arrange\nto have the client in possession of the identifier of the thing\nwhere it cares about side effects.\n\nBeware: following those principles could lead to loose\ncoupling!\n\nHTH,\n\nWalden\n\n\n----- Original Message ----- \nFrom: &quot;Marc de Graauw&quot; &lt;marc@...&gt;\nTo: &quot;&#39;Mark Baker&#39;&quot; &lt;distobj@...&gt;\nCc: &quot;&#39;Rest List&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\nSent: Thursday, June 21, 2007 3:54 PM\nSubject: RE: [rest-discuss] Must POST be non-idempotent?\n\n\n: Mark Baker:\n:\n: | Hey Marc,\n: |\n: | On 6/20/07, Marc de Graauw &lt; [send email to\n: | marc@... &lt;mailto:marc%40marcdegraauw.com&gt;  via\n: | gmail] marc@... &lt;mailto:marc%40marcdegraauw.com&gt; &gt; wrote:\n: | &gt; So PUT is idempotent, and POST not necessarily so, but\n: | where does it say\n: | &gt; that POST messages are _always_ non-idempotent?\n: | &gt;\n: | &gt; Seems impossible too. Presumably a non-idempotent method\n: | has the property\n: | &gt; that &quot;the side-effects of N &gt; 0 identical requests is NOT\n: | the same as for a\n: | &gt; single request&quot;\n: |\n: | No, because that definition is in terms of server behaviour and not\n: | message semantics (which a protocol is defined in terms of). A\n:\n: This is copied from the RFC 2616 definition of idempotent (section 9.1.2),\n: with NOT inserted to make a definition for non-idempotence, so if the\n: definition is flawed because it is in terms of server behaviour, then the\n: definition of idempotence in RFC2616 is flawed. Right?\n:\n: | message semantics oriented definition (of idempotence) would be that a\n: | series of N identical requests means the same as one.\n: |\n: | &gt; I can see how that leads to PUT being idempotent, but I\n: | cannot see why this\n: | &gt; would make POST necessarily non-idempotent.\n: |\n: | Because the definition is in terms of non-idempotent semantics, e.g\n: | &quot;annotate a resource&quot;, &quot;append to a database&quot;.\n:\n: RFC2616 contains a list of possible POST uses, but that list does not seem\n: exhaustive. So the question remains: where in RFC2616 does it say that \nPOST\n: messages are always non-idempotent?\n:\n: And one issue is still open: if I have some logic where I want the server \nto\n: create the URI but the logic is idempotent, what do I do?\n:\n: Marc de Graauw\n:\n: www.marcdegraauw.com\n:\n:\n:\n:\n: __________ NOD32 2343 (20070621) Information __________\n:\n: This message was checked by NOD32 antivirus system.\n: http://www.eset.com\n: \n\n\n"}}