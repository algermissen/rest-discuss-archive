{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":20175505,"authorName":"John D. Heintz","from":"&quot;John D. Heintz&quot; &lt;jheintz@...&gt;","profile":"johndheintz","replyTo":"SENDER","senderId":"hkwt3czN4u64Py5JI5JY-g_3fnri9w3q6bFqY9ZOGh6in3Z-afy-H8gN9kO-WlGd8nsX-clMXEJXMXSoydFppUbN2HAmG7uD0C9Y","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST on the Desktop Anyone?","postDate":"1180660237","msgId":8734,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM4MjA0NTQzMDcwNTMxMTgxMGw0YTk5ZDk4ZW9hMTNmZGFiYzE3NzAzODE1QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ2NUY2MUM1LjUwNTA4MDhAaGFja2NyYWZ0Lm5ldD4=","referencesHeader":"PDE0M0NCNTVELUFEMTktNEZBMy1BRURGLURBMUJDOTgxRUEwMEBpbm5vcS5jb20+CSA8ODkyNjEzLjM3MDQ1LnFtQHdlYjUyMTAzLm1haWwucmUyLnlhaG9vLmNvbT4JIDwwMDE2MDFjN2EzZDkkYTBjNjAwNzAkMjEwMmZlYTlAR3VpZGVzLmxvY2FsPgkgPDQ2NUY2MUM1LjUwNTA4MDhAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":8733,"nextInTopic":8735,"prevInTime":8733,"nextInTime":8735,"topicId":8703,"numMessagesInTopic":59,"msgSnippet":"Hi Jon, ... Because a consistent namespace (URI) with a consistent interface on the desktop would be a good thing. ... Look at what FUSE provides for Linux. Or","rawEmail":"Return-Path: &lt;jheintz@...&gt;\r\nX-Sender: jheintz@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 88981 invoked from network); 1 Jun 2007 01:11:25 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m36.grp.scd.yahoo.com with QMQP; 1 Jun 2007 01:11:25 -0000\r\nReceived: from unknown (HELO an-out-0708.google.com) (209.85.132.242)\n  by mta7.grp.scd.yahoo.com with SMTP; 1 Jun 2007 01:11:24 -0000\r\nReceived: by an-out-0708.google.com with SMTP id c37so169781anc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 31 May 2007 18:10:43 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references:x-google-sender-auth;\n        b=FsiP3HfjtPr8UUqIauzgtIyYiPcaB3Z+YDzOFek8Rb//EW4s3mSUOfq54aMDCheG6Frsi5ev6wlJvCooXm1BQpBIl91RdqxtZYBpTGKDD0kZIUYCuELy8TAhT6mbnTkrNLosfbZg7nvl2b+I5Yip3rpJBq6nRi3krjyPw1XaoGo=\r\nReceived: by 10.78.170.6 with SMTP id s6mr816522hue.1180660242477;\n        Thu, 31 May 2007 18:10:42 -0700 (PDT)\r\nReceived: by 10.78.202.9 with HTTP; Thu, 31 May 2007 18:10:37 -0700 (PDT)\r\nMessage-ID: &lt;c82045430705311810l4a99d98eoa13fdabc17703815@...&gt;\r\nDate: Thu, 31 May 2007 20:10:37 -0500\r\nTo: &quot;Jon Hanna&quot; &lt;jon@...&gt;\r\nCc: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;465F61C5.5050808@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;143CB55D-AD19-4FA3-AEDF-DA1BC981EA00@...&gt;\n\t &lt;892613.37045.qm@...&gt;\n\t &lt;001601c7a3d9$a0c60070$2102fea9@...&gt;\n\t &lt;465F61C5.5050808@...&gt;\r\nX-Google-Sender-Auth: cafb1420f25e7ba0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;John D. Heintz&quot; &lt;jheintz@...&gt;\r\nSubject: Re: [rest-discuss] REST on the Desktop Anyone?\r\nX-Yahoo-Group-Post: member; u=20175505; y=8gZghj26CsJ3D3yymhMrJ_V6Zeow2eBsvwx-SVLiavUr9Rm3qGg\r\nX-Yahoo-Profile: johndheintz\r\n\r\nHi Jon,\n\nOn 5/31/07, Jon Hanna &lt;jon@...&gt; wrote:\n&gt; Mike Schinkel wrote:\n&gt; &gt; As a side note, I&#39;d really like to see the REST architecture style of\n&gt; &gt; contrained interface and URLs for everything be adopted by some frameworks\n&gt; &gt; used for the *DESKTOP* development.  I think it would be phenominally\n&gt; &gt; valuable for desktop application automation, interoperability, and usability\n&gt; &gt; to have the REST model of URLs and constraints.\n&gt;\n&gt; Why?\n\nBecause a consistent namespace (URI) with a consistent interface on\nthe desktop would be a good thing.\n\n&gt;\n&gt; Actually this does happen sometimes for various reasons. For one it can\n&gt; be useful sometimes to include local objects as part of the web\n&gt; (inverting the anti-pattern of assuming remote objects are the same as\n&gt; local ones by treating local ones as remote - quite a useful abstraction\n&gt; if you are mainly dealing with remote objects but have to deal with a\n&gt; small number of local ones).\n&gt;\n&gt; However. Looking at the constraints:\n&gt;\n&gt; Client-Server: Sometimes useful, sometimes not. Mainly useful if there\n&gt; will be more than one client calling into the server.\n\nLook at what FUSE provides for Linux. Or the KDE and Gnome VFS projects.\n\nOn windows a file system drive can be local or remote. Doesn&#39;t\nPerforce optionally mount as a windows drive?\n\n&gt;\n&gt; Client-Stateless-Server: Less often useful. Can help with consistency in\n&gt; some cases, but it&#39;s main advantage is scalability and scalability\n&gt; issues on the desktop are different to those on a network. Definitely\n&gt; not *as* useful at least.\n\nNot as useful, but certainly not a drawback.\n\n&gt;\n&gt; Cache: Caching in a local context tends to be a very different matter.\n&gt; Caching because something is &quot;far away&quot; (e.g. a CPUs instruction cache)\n&gt; has both different requirements and different issues (ensuring freshness\n&gt; has a whole different bunch of pressures than on the web). Caching at a\n&gt; higher level tends to be a matter of something being hard to compute\n&gt; rather than hard to reach. Again a very different type of caching. Very\n&gt; often write-through caching is possible, even easy, in local contexts\n&gt; though it isn&#39;t in REST (why the spec says a PUT means all cached\n&gt; representations are cleared, rather than saying the cache can update\n&gt; straight from the PUT). Generally, not very often analogous.\n\nNot useful except maybe for expensive things.\n\n&gt;\n&gt; Uniform Interface: Very much less often useful. Useful a lot of the time\n&gt; and there are many analogies of various sorts, but it&#39;s also often\n&gt; useful that different code can see the same object through different\n&gt; interfaces when it comes to the desktop. I&#39;d say offering a uniform\n&gt; interface is useful on the desktop, but constraining to one isn&#39;t.\n\nI totally disagree. A uniform interface is useful everywhere. Unix has\nfiles with pipes, Plan9 has files everywhere. These are uniform\ninterfaces and provide massive and cumulative value.\n\n&gt;\n&gt; Layered System: Can be a useful abstraction, but it can also be useful\n&gt; to be able to by-pass it. Again, useful as an offered view but less\n&gt; useful as a constraint.\n&gt;\n&gt; Code-On-Demand: I think the advantages/disadvantages balance here is\n&gt; very much different to on the web. Scripts can be even more powerful on\n&gt; the desktop (because they can more often insist upon a given language\n&gt; and/or object model being supported) but they can pose even greater\n&gt; security and other problems (especially since our uniform interface will\n&gt; only ever be an agreed-upon constraint rather than an absolute one\n&gt; unless we go so far as to build a sandbox). The spate of worms around\n&gt; the turn of this century affecting Microsoft Office products were a case\n&gt; of how COD applies to the desktop. There&#39;s also less advantage (your app\n&gt; is on the desktop, the other code is on the desktop; just run the other\n&gt; code!).\n\nThis is useful everywhere a general client _can_ be extended by a\nservice provider. That doesn&#39;t have a remote only boundary.\n\n&gt;\n&gt; Uniform-Layered-Client-Cache-Stateless-Server with optional\n&gt; Code-On-Demand (AKA REST): Not at all clear how well these go together\n&gt; for a desktop app. I can see that perhaps I might go &quot;hmm, this is\n&gt; pretty much a hypermedia system here, I&#39;d probably gain at least more\n&gt; than I lost if I stuck to REST&quot; though I don&#39;t I&#39;d be 100% sure about\n&gt; that decision if I did make it. I very much doubt I&#39;ll ever go &quot;hmm,\n&gt; let&#39;s not deal with these objects as local objects but produce\n&gt; hypermedia representations of them and work on those&quot; unless I had a\n&gt; very good reason to from other requirements - most likely a matter of\n&gt; wanting to network it in the future.\n&gt;\n&gt; &gt; I use Windows and on\n&gt; &gt; Windows the closest thing to it (besides the browser itself) is Windows\n&gt; &gt; Explorer when &quot;Display full path in title bar&quot; is turned on.\n&gt;\n&gt; I&#39;m completely missing the connection here.\n&gt;\n&gt; There&#39;s something similar to a REST view in some of the more recent\n&gt; windows views on folders where they use hypermedia to link to related\n&gt; objects but that&#39;s one tiny piece of hypermedia-style navigation that is\n&gt; more reminiscient to REST than actually RESTful.\n&gt;\n&gt; I don&#39;t see how the full path in title bar helps.\n&gt;\n\nWindows provides a &quot;browser&quot; like view into the file systems, control\npanels, history, and a limited set of other &quot;windows services&quot;.\n\nJohn Heintz\n\n\n-- \nJohn D. Heintz\nPrincipal Consultant\nNew Aspects of Software\nAustin, TX\n(512) 633-1198\n\n"}}