{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":544893253,"authorName":"Jérôme Louvel","from":"=?ISO-8859-1?Q?J=E9r=F4me_Louvel?= &lt;jlouvel@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"NJpPvNjZowc__U_e2EXRc3luv7gLNN-a_Fq44k6Ky_JXDU8pAPj8GeFdHpFmVMkQQ-rbj1p56qvJRW90kP6ToHLX6bf9yLn2kc8UxE_dlMAnPZpj-Q7OCQAUAuERGKY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How much REST should your Web API get?","postDate":"1367580884","msgId":19402,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBT3NZOG1RRDMzWHBKUVdjY3RoSFVNbkRlU2RhRFNERVZMWEFKTzlETXktTFVqMi1Xd0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDUwMUM2MDFDLUNEN0YtNDFCOC1BNTk3LUFCRkVBRTExMTQ0REBub3Jkc2MuY29tPg==","referencesHeader":"PGtsdGlkditrMGtmQGVHcm91cHMuY29tPgk8MzhDMzMzQjUtMzk4OS00NzgyLUFDRjMtQjIzQTY5OUY2ODREQG5vcmRzYy5jb20+CTxDQU9zWThtU3JUbWVFY1B3dmVXaUd4Q1VBYXNMdEI4NlJCanQ9dG9BN3lOUTZldkdXOEFAbWFpbC5nbWFpbC5jb20+CTw1MDFDNjAxQy1DRDdGLTQxQjgtQTU5Ny1BQkZFQUUxMTE0NERAbm9yZHNjLmNvbT4="},"prevInTopic":19401,"nextInTopic":19403,"prevInTime":19401,"nextInTime":19403,"topicId":19371,"numMessagesInTopic":46,"msgSnippet":"Jan, I agree with you on the importance of fully understanding and exploiting the power of a paradigm first, before attempting to define a new one. I think","rawEmail":"Return-Path: &lt;jlouvel@...&gt;\r\nX-Sender: jlouvel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95877 invoked from network); 3 May 2013 11:34:45 -0000\r\nX-Received: from unknown (10.193.84.168)\n  by m7.grp.bf1.yahoo.com with QMQP; 3 May 2013 11:34:45 -0000\r\nX-Received: from unknown (HELO mail-vb0-f44.google.com) (209.85.212.44)\n  by mta6.grp.bf1.yahoo.com with SMTP; 3 May 2013 11:34:44 -0000\r\nX-Received: by mail-vb0-f44.google.com with SMTP id e13so1250657vbg.31\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 03 May 2013 04:34:44 -0700 (PDT)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=google.com; s=20120113;\n        h=mime-version:x-received:in-reply-to:references:date:message-id\n         :subject:from:to:cc:content-type:x-gm-message-state;\n        bh=8g9rXzGdRmXEcaSLbh5IgSn3c3qIJNY0GMx7QPAzCUU=;\n        b=Y6xoYGep7r5c+Ffll0nnMtdX4gUnvOEJWydPwnqORS6odUn4wBBj5F9whszSiAcITI\n         MkeoijauB936eg/ns2TzGFn4zPovJC5uzq5J/Igh14vGEJYS3iYMtea2E2VjxstnOLFd\n         8AQX9JNM4HSPyEvc5b18Ov0GocHGUmY15LjWNh+k3RJpCFKkYfhajQuzQ7YdvKfdq2tt\n         HhD4NpY66DVgs5gctzu1kcegKpjU5nFecCBlKhiwarU0Vs75aNHMFwHLW9Mqj3mNA2a2\n         V1dBx+gp6OFL7Yp6K8kShFpn06oFmgq6eWRufym4cT0nMJ8KthVJSfgdLkJgXQHbY7gK\n         +lsw==\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.237.193 with SMTP id kp1mr3508018vcb.68.1367580884494;\n Fri, 03 May 2013 04:34:44 -0700 (PDT)\r\nX-Received: by 10.220.88.80 with HTTP; Fri, 3 May 2013 04:34:44 -0700 (PDT)\r\nIn-Reply-To: &lt;501C601C-CD7F-41B8-A597-ABFEAE11144D@...&gt;\r\nReferences: &lt;kltidv+k0kf@...&gt;\n\t&lt;38C333B5-3989-4782-ACF3-B23A699F684D@...&gt;\n\t&lt;CAOsY8mSrTmeEcPwveWiGxCUAasLtB86RBjt=toA7yNQ6evGW8A@...&gt;\n\t&lt;501C601C-CD7F-41B8-A597-ABFEAE11144D@...&gt;\r\nDate: Fri, 3 May 2013 13:34:44 +0200\r\nMessage-ID: &lt;CAOsY8mQD33XpJQWccthHUMnDeSdaDSDEVLXAJO9DMy-LUj2-Ww@...&gt;\r\nTo: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=047d7b33dd82d27fa304dbcebc9d\r\nX-Gm-Message-State: ALoCoQmO7DelmHG6tS2ZcSWOVDABIL92A8VEbVx5EZkvFzL/+aOXcexYtYdB8wmBWNfWfUlExs9t\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?J=E9r=F4me_Louvel?= &lt;jlouvel@...&gt;\r\nSubject: Re: [rest-discuss] How much REST should your Web API get?\r\nX-Yahoo-Group-Post: member; u=544893253; y=qm3Eig0Wlk0q-Y9V3AH8a3zKer5j5O58UYijsZ_DfD_TGAzsYm3m_Q\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\n\r\n--047d7b33dd82d27fa304dbcebc9d\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nJan,\n\nI agree with you on the importance of fully understanding and exploit=\r\ning\nthe power of a paradigm first, before attempting to define a new one.\n\n=\r\nI think that the influence of REST on the design of so-called &quot;web\nservices=\r\n&quot; has been extremely positive and enabled a simpler,\nresource-oriented and =\r\nmore effective &quot;Web API&quot; style to emerge for\nmachine-to-machine interaction=\r\ns. This style can&#39;t eclipse REST as it\ndoesn&#39;t address the same requirement=\r\ns even though some are shared.\n\n&gt; What does that mean: &quot;and what makes it s=\r\no powerful to scale the web of\nhypermedia documents&quot;?\n\nI&#39;m just considering=\r\n how powerful it is to have a universal user agent (a\nweb browser) that can=\r\n display and interact with HTML documents distributed\nover the internet, wi=\r\nthout having to recompile the browser to access each\nweb site (true uniform=\r\n interface composed of the URI/HTTP/HTML trio plus\nadditional standards suc=\r\nh as JS/CSS/PNG). There is a deep independence of\nevolution between clients=\r\n and servers, even though they do need some level\nof compatibility (HTML 5 =\r\nsupport for example).\n\n&gt; It just not as simple as taking half of REST and g=\r\netting half the\nbenefits. REST works as a whole, not in &#39;layers&#39; or &#39;levels=\r\n&#39;.\n\nI agree, the whole is more than the sum of its parts. However, if you l=\r\nook\nat the HTTP protocol itself, it also continues to evolve towards better=\r\n\nnetwork efficiency, asynchronicity and more real-time interactions:\nhttp:/=\r\n/tools.ietf.org/html/draft-ietf-httpbis-http2-02\n\nThe Web clearly isn&#39;t &quot;ju=\r\nst&quot; a set of hyperlinked HTML documents anymore.\nWeb APIs, push techniques =\r\nsuch as WebSockets are other illustrations of the\nnew requirements expresse=\r\nd by web developers.\n\n&gt; Now, there is quite a difference between a sensor a=\r\nnd a mobile app. Who\nsays a mobile app cannot have hypermedia capabilities?=\r\n\n\nEven though, mobile apps can have hypermedia capabilities, we can&#39;t ignor=\r\ne\nthat the majority of mobile apps out there just aren&#39;t regular HTML web\ns=\r\nites, and for many of them for good reasons.\n\nThink of a mobile games or mo=\r\nbile apps with an admin UI but running a\nbackground service, for example to=\r\n regularly sync data with a back-end (ex:\niCloud). In those cases, it makes=\r\n little sense to consider this\nmachine-to-machine interaction as an applica=\r\ntion of hypermedia.\n\n&gt; And who would make a sensor a REST client? I&#39;d rathe=\r\nr have the sensor\nsend measurement data via, e.g. UDP.\n\nI was thinking abou=\r\nt smart sensors such as the Nest connected thermostat.\nIt does use a semi-p=\r\nrivate web API that could be improved to become much\nmore resource-oriented=\r\n:\nhttp://www.wiredprairie.us/blog/index.php/archives/1442\n\n&gt; Hmm, can you b=\r\ne more specific about what you mean here?\n\nWhen you setup an IFTTT rule, yo=\r\nu don&#39;t want the web APIs that are used to\nchange overnight without proper =\r\ncoordination and control of their update.\nThis requires out of band communi=\r\ncation and it rarely done properly today,\nbut this can&#39;t be solved magicall=\r\ny just because you put hypermedia into\nplay.\n\n&gt; I&#39;d say, the vast majority =\r\nof Web APIs fails to be RESTful because people\nsimply did not follow the st=\r\nyle.\n\nI would say that the vast majority of Web APIs can never be RESTful b=\r\necause\nthey don&#39;t fully fit into the REST requirements.\n\n&gt; Show me a single=\r\n example that has been deliberately designed  unRESTful\non the basis of des=\r\nign principles. To me this is just the same old\ndiscussion over and over ag=\r\nain: People make a (rather unedcuated) claim,\nmistake that for truth and co=\r\nme up with suboptimal design.\n\nI gave a few examples above. My turn to ask =\r\nyou for an example of a proper\nRESTful web API (beside HTML web sites, RDF =\r\ndriven Linked Data and\nAtom/AtomPub driven blogs) exclusively using hyperme=\r\ndia (HATEOAS) to\ninteract with it (not just hyperlinks).\n\n&gt; And that is not=\r\n only true for wanna be REST services, unfortunately it is\nan all too commo=\r\nn way to approach all sorts of IT problems.\n&gt; In my experience, people lear=\r\nn best if we do not settle for &#39;premature\nagreement&#39; but use, for example, =\r\na style to foster more flexible thinking.\nUsually, whoever endures that pro=\r\ncess is thankful in the end.\n\nI agree with that and I think that a proper/f=\r\normal &quot;Web API&quot; style could\nhelp in this regard.\n\n&gt; Either way, a native ap=\r\np makes a perfectly RESTful client if you design\nit that way. Personally, I=\r\n&#39;d go a very long way to maintain the benefit of\nnot having to coordinate c=\r\nlient deployment with API changes....\n\nIf you look at how mobile app discov=\r\nery is currently working, if you are a\ncompany making a living out of it, y=\r\nou certainly prefer to go through the\nformal app store deployment procedure=\r\ns that just hoping people will browse\nthe web from their smartphone screen =\r\nlike they do on a desktop. Maybe HTML\n5 will change that landscape in the c=\r\noming years, but many people will\nprefer a different UI paradigm for their =\r\nmobility use cases.\n\n&gt; What is a &quot;rich hypermedia client&quot;?\n\nSorry, I meant =\r\nwhen a rich hypermedia client ISN&#39;T available. I meant a\nmodern web browser=\r\n running on a connected watch might not be the best idea.\n\n&gt; Can you be mor=\r\ne specific about the situation that seems to be the root\ncause for the perc=\r\neived need that you have to change the style?\n\nI hope I gave enough explana=\r\ntions above.\n\n&gt; Can you explain what you mean by &quot;a dynamic way like HTML i=\r\ns used by web\nbrowsers&quot;?\n\nThat web browsers don&#39;t need to learn or be redev=\r\neloped/recompiled each\ntime a new web page/site is published, contrary to W=\r\neb APIs.\n\n&gt; To me it remains unclear what the problem is you are trying to =\r\nsolve.\nPlease explain, I&#39;m all ears.\n\nI&#39;m just acknowledging that there are=\r\n many cases (look at the catalog of\n9000 public web APIs on PW) where the h=\r\nypermedia/uniform interface\nconstraints of REST just doesn&#39;t fit with the r=\r\nequirements. You can&#39;t just\nignore that reality and consider that all those=\r\n smart developers are just\nplain wrong because they didn&#39;t read/follow the =\r\nREST style properly/fully\n(many books and presentations exists and most dev=\r\nelopers are doing their\nbest, and there is much tooling available now).\n\nTh=\r\nis isn&#39;t to say that all those APIs can&#39;t benefit from a better\nresource-or=\r\niented design (instead of a RPC inspired design) and usage of\nHTTP features=\r\n, but pushing REST too far why a systematic hypermedia\nconstraint is just c=\r\nounter-productive in my opinion.\n\nBest regards,\nJerome\n\n\n\n2013/5/2 Jan Alge=\r\nrmissen &lt;jan.algermissen@...&gt;\n\n&gt;\n&gt; On 02.05.2013, at 19:48, J=E9r=F4=\r\nme Louvel &lt;jlouvel@...&gt; wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; Jan,\n&gt; &gt;\n&gt; &gt; I remain a st=\r\nrong proponent of the idea that it is more fruitful to aim\n&gt; at rethinking =\r\nthe problem to fit a sound paradigm rather than to blame the\n&gt; paradigm for=\r\n not fitting the problem (one&#39;s perceived view of it, that is).\n&gt; &gt;\n&gt; &gt; But=\r\n when the paradigm isn&#39;t intended to solve a given problem, do you\n&gt; think =\r\nwe should force the problem to fit into the paradigm?\n&gt;\n&gt; No, certainly not=\r\n. What I am arguing against is what I experience so\n&gt; often: That people cl=\r\naim some paradigm is a bad fit for a problem instead\n&gt; of thinking thorough=\r\nly through the problem until they can make an educated\n&gt; choice.\n&gt;\n&gt; &gt;\n&gt; &gt; =\r\nREST was never designed to solve all software architecture problems.\n&gt; That=\r\n&#39;s quite the opposite and what makes it so powerful to scale the web of\n&gt; h=\r\nypermedia documents.\n&gt;\n&gt; What does that mean: &quot;and what makes it so powerfu=\r\nl to scale the web of\n&gt; hypermedia documents&quot;?\n&gt;\n&gt; &gt;\n&gt; &gt; Two concrete point=\r\ns:\n&gt; &gt;\n&gt; &gt; I don&#39;t buy the efficiency argument regarding discovery and gran=\r\nularity\n&gt; of messages - unless you ignore caching and the possibility to ta=\r\nilor\n&gt; representations for specific devices.\n&gt; &gt;\n&gt; &gt; You could also add HTT=\r\nP compression to the mix. I&#39;m a fan of HTTP\n&gt; caching and content negotiati=\r\non as well. The &quot;Web API&quot; style proposed fully\n&gt; leverages those features.\n=\r\n&gt;\n&gt; It just not as simple as taking half of REST and getting half the\n&gt; ben=\r\nefits. REST works as a whole, not in &#39;layers&#39; or &#39;levels&#39;.\n&gt;\n&gt; &gt;\n&gt; &gt; You wr=\r\nite about the &#39;Web API style&#39; &quot;requires coordination between\n&gt; clients and =\r\nservers when changes are deployed&quot; - doh... this eliminates\n&gt; *the* (**the*=\r\n*) primary benefit to apply REST.\n&gt; &gt;\n&gt; &gt; Exactly, but if you ship a native=\r\n mobile app or a connected hardware\n&gt; device with no hypermedia capability =\r\nat all (think about a dumb sensor),\n&gt;\n&gt; Now, there is quite a difference be=\r\ntween a sensor and a mobile app. Who\n&gt; says a mobile app cannot have hyperm=\r\nedia capabilities? And who would make a\n&gt; sensor a REST client? I&#39;d rather =\r\nhave the sensor send measurement data via,\n&gt; e.g. UDP.\n&gt;\n&gt; &gt; you definitely=\r\n need to coordinate the clients and servers even though\n&gt; you are fully and=\r\n properly using HTTP.\n&gt;\n&gt; Hmm, can you be more specific about what you mean=\r\n here?\n&gt;\n&gt; &gt; This is why the vast majority of so-called web APIs are versio=\r\nnned and\n&gt; based on stable URIs and representations structures. They can&#39;t =\r\nalways\n&gt; afford to dynamically discover the user interface.\n&gt;\n&gt; I&#39;d say, th=\r\ne vast majority of Web APIs fails to be RESTful because people\n&gt; simply did=\r\n not follow the style. Show me a single example that has been\n&gt; deliberatel=\r\ny designed  unRESTful on the basis of design principles. To me\n&gt; this is ju=\r\nst the same old discussion over and over again: People make a\n&gt; (rather une=\r\ndcuated) claim, mistake that for truth and come up with\n&gt; suboptimal design=\r\n.\n&gt;\n&gt; And that is not only true for wanna be REST services, unfortunately i=\r\nt is\n&gt; an all too common way to approach all sorts of IT problems.\n&gt;\n&gt; In m=\r\ny experience, people learn best if we do not settle for &#39;premature\n&gt; agreem=\r\nent&#39; but use, for example, a style to foster more flexible thinking.\n&gt; Usua=\r\nlly, whoever endures that process is thankful in the end.\n&gt;\n&gt; &gt;\n&gt; &gt; You cou=\r\nld say that native apps aren&#39;t needed and could be re-developped\n&gt; as HTML =\r\n5 apps, but this isn&#39;t always possible or desirable.\n&gt;\n&gt; Either way, a nati=\r\nve app makes a perfectly RESTful client if you design it\n&gt; that way. Person=\r\nally, I&#39;d go a very long way to maintain the benefit of not\n&gt; having to coo=\r\nrdinate client deployment with API changes....\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; Aside from syste=\r\nms that focus on sending fine grained control messages\n&gt; around in (near) r=\r\nealtime, I have yet to see a case where REST does not\n&gt; shine due to perfor=\r\nmance, scalability and the ability to decentralize\n&gt; management of the depl=\r\noyment and release cycles.\n&gt; &gt;\n&gt; &gt; Again, my point is to take the best of w=\r\nhat REST brings but not try to\n&gt; apply it in cases where a rich hypermedia =\r\nclient is available,\n&gt;\n&gt; What is a &quot;rich hypermedia client&quot;? Can you be mor=\r\ne specific about the\n&gt; situation that seems to be the root cause for the pe=\r\nrceived need that you\n&gt; have to change the style?\n&gt;\n&gt; &gt; but isn&#39;t so uncomm=\r\non. I&#39;m just trying to do REST justice otherwise\n&gt; we&#39;ll get a backslash wh=\r\nen people finally realize that the vast majority of\n&gt; REST endpoints/APIs/e=\r\ntc. can&#39;t be used in a dynamic way like HTML is used\n&gt; by web browsers.\n&gt;\n&gt;=\r\n Can you explain what you mean by &quot;a dynamic way like HTML is used by web\n&gt;=\r\n browsers&quot;?\n&gt;\n&gt;\n&gt; To me it remains unclear what the problem is you are tryi=\r\nng to solve.\n&gt; Please explain, I&#39;m all ears.\n&gt;\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; Best=\r\n regards,\n&gt; &gt; Jerome\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; \n&gt;\n&gt;\n\r\n--047d7b33dd82d27fa304dbcebc9d\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Jan,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;I agree with you on the impo=\r\nrtance of fully understanding and exploiting the power of a paradigm first,=\r\n before attempting to define a new one.=A0&lt;/div&gt;&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div s=\r\ntyle&gt;\nI think that the influence of REST on the design of so-called &quot;w=\r\neb services&quot; has been extremely positive and enabled a simpler, resour=\r\nce-oriented and more effective &quot;Web API&quot; style to emerge for mach=\r\nine-to-machine interactions. This style can&#39;t eclipse REST as it doesn&=\r\n#39;t address the same requirements even though some are shared.&lt;/div&gt;\n&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&gt;=A0&lt;span style=3D&quot;font-family:arial,sans-serif;font-siz=\r\ne:13px&quot;&gt;What does that mean: &quot;and what makes it so powerful to scale t=\r\nhe web of hypermedia documents&quot;?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-=\r\nfamily:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;font =\r\nface=3D&quot;arial, sans-serif&quot;&gt;I&#39;m just considering how powerful it is to h=\r\nave a universal user agent (a web browser) that can display and interact wi=\r\nth HTML documents distributed over the internet, without having to recompil=\r\ne the browser to access each web site (true uniform interface composed of t=\r\nhe URI/HTTP/HTML trio plus additional standards such as JS/CSS/PNG). There =\r\nis a deep independence of evolution between clients and servers, even thoug=\r\nh they do need some level of compatibility (HTML 5 support for example).&lt;/f=\r\nont&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;=\r\n&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-siz=\r\ne:13px&quot;&gt;&gt; It just not as simple as taking half of REST and getting half =\r\nthe benefits. REST works as a whole, not in &#39;layers&#39; or &#39;levels=\r\n&#39;.&lt;/span&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;b=\r\nr&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:=\r\n13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-ser=\r\nif;font-size:13px&quot;&gt;I agree, the whole is more than the sum of its parts. Ho=\r\nwever, if you look at the HTTP protocol itself, it also continues to evolve=\r\n towards better network efficiency, asynchronicity and more real-time inter=\r\nactions:&lt;/span&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;a href=3D&quot;http://tools.ietf.org/html/draf=\r\nt-ietf-httpbis-http2-02&quot;&gt;http://tools.ietf.org/html/draft-ietf-httpbis-http=\r\n2-02&lt;/a&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/s=\r\npan&gt;&lt;/div&gt;&lt;div style&gt;&lt;br&gt;\n&lt;/div&gt;&lt;div style&gt;The Web clearly isn&#39;t &quot;=\r\njust&quot; a set of hyperlinked HTML documents anymore. Web APIs, push tech=\r\nniques such as WebSockets are other illustrations of the new requirements e=\r\nxpressed by web developers.&lt;/div&gt;\n&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;=\r\nfont-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; Now, there is quite a dif=\r\nference between a sensor and a mobile app.=A0&lt;/span&gt;&lt;span style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px&quot;&gt;Who says a mobile app cannot have hype=\r\nrmedia capabilities?=A0&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,=\r\nsans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;font face=3D&quot;arial,=\r\n sans-serif&quot;&gt;Even though, mobile apps can have hypermedia capabilities, we =\r\ncan&#39;t ignore that the majority of mobile apps out there just aren&#39;t=\r\n regular HTML web sites, and for many of them for good reasons.=A0&lt;/font&gt;&lt;/=\r\ndiv&gt;\n&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div styl=\r\ne&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;Think of a mobile games or=A0&lt;/font&gt;&lt;spa=\r\nn style=3D&quot;font-family:arial,sans-serif&quot;&gt;mobile apps with an admin UI but r=\r\nunning a background service, for example to regularly sync data with a back=\r\n-end (ex: iCloud). In those cases, it makes little sense to consider this m=\r\nachine-to-machine interaction as an application of hypermedia.&lt;/span&gt;&lt;/div&gt;=\r\n\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/spa=\r\nn&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&g=\r\nt; And who would make a sensor a REST client? I&#39;d rather have the senso=\r\nr send measurement data via, e.g. UDP.&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;fon=\r\nt-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span=\r\n style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;I was thinking about=\r\n smart sensors such as the Nest connected thermostat. It does use a semi-pr=\r\nivate web API that could be improved to become much more resource-oriented:=\r\n&lt;/span&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;a href=3D&quot;http://www.wiredprairie.us/blog/index.p=\r\nhp/archives/1442&quot;&gt;http://www.wiredprairie.us/blog/index.php/archives/1442&lt;/=\r\na&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;=\r\n/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px=\r\n&quot;&gt;&gt;=A0&lt;/span&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;=\r\n&gt;Hmm, can you be more specific about what you mean here?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;=\r\nspan style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/di=\r\nv&gt;&lt;div style&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;When you setup an IFTTT rule,=\r\n you don&#39;t want the web APIs that are used to change overnight without =\r\nproper coordination and control of their update. This requires out of band =\r\ncommunication and it rarely done properly today, but this can&#39;t be solv=\r\ned magically just because you put hypermedia into play.&lt;/font&gt;&lt;/div&gt;\n&lt;div s=\r\ntyle&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style&gt;&lt;span sty=\r\nle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; I&#39;d say, the va=\r\nst majority of Web APIs fails to be RESTful because people simply did not f=\r\nollow the style.=A0&lt;/span&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;span style=3D&quot;font-family:aria=\r\nl,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;fon=\r\nt-family:arial,sans-serif;font-size:13px&quot;&gt;I would say that the vast majorit=\r\ny of Web APIs can never be RESTful because they don&#39;t fully fit into th=\r\ne REST requirements.&lt;/span&gt;&lt;/div&gt;\n&lt;div style&gt;&lt;span style=3D&quot;font-family:ari=\r\nal,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;fo=\r\nnt-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; Show me a single example th=\r\nat has been deliberately designed =A0unRESTful on the basis of design princ=\r\niples. To me this is just the same old discussion over and over again: Peop=\r\nle make a (rather unedcuated) claim, mistake that for truth and come up wit=\r\nh suboptimal design.&lt;/span&gt;&lt;br style=3D&quot;font-family:arial,sans-serif;font-s=\r\nize:13px&quot;&gt;\n&lt;br&gt;I gave a few examples above. My turn to ask you for an examp=\r\nle of a proper RESTful web API (beside HTML web sites, RDF driven Linked Da=\r\nta and Atom/AtomPub driven blogs) exclusively using hypermedia (HATEOAS) to=\r\n interact with it (not just hyperlinks).&lt;br&gt;\n&lt;br style=3D&quot;font-family:arial=\r\n,sans-serif;font-size:13px&quot;&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;fon=\r\nt-size:13px&quot;&gt;&gt; And that is not only true for wanna be REST services, unf=\r\nortunately it is an all too common way to approach all sorts of IT problems=\r\n.&lt;/span&gt;&lt;br style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;\n&lt;span st=\r\nyle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; In my experience, =\r\npeople learn best if we do not settle for &#39;premature agreement&#39; but=\r\n use, for example, a style to foster more flexible thinking. Usually, whoev=\r\ner endures that process is thankful in the end.&lt;/span&gt;&lt;br&gt;\n&lt;/div&gt;&lt;div&gt;&lt;span=\r\n style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;di=\r\nv style&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;I agree=\r\n with that and I think that a proper/formal &quot;Web API&quot; style could=\r\n help in this regard.&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sa=\r\nns-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:a=\r\nrial,sans-serif;font-size:13px&quot;&gt;&gt;=A0&lt;/span&gt;&lt;span style=3D&quot;font-family:ar=\r\nial,sans-serif;font-size:13px&quot;&gt;Either way, a native app makes a perfectly R=\r\nESTful client if you design it that way. Personally, I&#39;d go a very long=\r\n way to maintain the benefit of not having to coordinate client deployment =\r\nwith API changes....&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,san=\r\ns-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px&quot;&gt;If you look at how mobile app discover=\r\ny is currently working, if you are a company making a living out of it, you=\r\n certainly prefer to go through the formal app store deployment procedures =\r\nthat just hoping people will browse the web from their smartphone screen li=\r\nke they do on a desktop. Maybe HTML 5 will change that landscape in the com=\r\ning years, but many people will prefer a different UI paradigm for their mo=\r\nbility use cases.&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial=\r\n,sans-serif;font-size:13px&quot;&gt;&gt; What is a &quot;rich hypermedia client&quo=\r\nt;?=A0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-si=\r\nze:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans=\r\n-serif;font-size:13px&quot;&gt;Sorry, I meant when a rich hypermedia client ISN&#39=\r\n;T available. I meant a modern web browser running on a connected watch mig=\r\nht not be the best idea.&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:arial=\r\n,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-famil=\r\ny:arial,sans-serif;font-size:13px&quot;&gt;&gt; Can you be more specific about the =\r\nsituation that seems to be the root cause for the perceived need that you h=\r\nave to change the style?&lt;/span&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;=\r\nfont-size:13px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,san=\r\ns-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px&quot;&gt;I hope I gave enough explanations abov=\r\ne.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:1=\r\n3px&quot;&gt;&lt;br&gt;\n&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;fon=\r\nt-size:13px&quot;&gt;&gt; Can you explain what you mean by &quot;a dynamic way like=\r\n HTML is used by web browsers&quot;?&lt;/span&gt;&lt;br style=3D&quot;font-family:arial,s=\r\nans-serif;font-size:13px&quot;&gt;\n&lt;br&gt;That web browsers don&#39;t need to learn or=\r\n be redeveloped/recompiled each time a new web page/site is published, cont=\r\nrary to Web APIs.&lt;br style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;=\r\n&lt;br style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;\n&lt;span style=3D&quot;f=\r\nont-family:arial,sans-serif;font-size:13px&quot;&gt;&gt; To me it remains unclear w=\r\nhat the problem is you are trying to solve. Please explain, I&#39;m all ear=\r\ns.&lt;/span&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;\n&lt;=\r\n/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px=\r\n&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;f=\r\nont-size:13px&quot;&gt;I&#39;m just acknowledging that there are many cases (look a=\r\nt the catalog of 9000 public web APIs on PW) where the hypermedia/uniform i=\r\nnterface constraints of REST just doesn&#39;t fit with the requirements. Yo=\r\nu can&#39;t just ignore that reality and consider that all those smart deve=\r\nlopers are just plain wrong because they didn&#39;t read/follow the REST st=\r\nyle properly/fully (many books and presentations exists and most developers=\r\n are doing their best, and there is much tooling available now).=A0&lt;/span&gt;&lt;=\r\n/div&gt;\n&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px=\r\n&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;f=\r\nont-size:13px&quot;&gt;This isn&#39;t to say that all those APIs can&#39;t benefit =\r\nfrom a better resource-oriented design (instead of a RPC inspired design) a=\r\nnd usage of HTTP features, but pushing REST too far why a systematic hyperm=\r\nedia constraint is just counter-productive in my opinion.&lt;/span&gt;&lt;/div&gt;\n&lt;div=\r\n&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/d=\r\niv&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;B=\r\nest regards,&lt;/span&gt;&lt;/div&gt;&lt;div style&gt;&lt;span style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px&quot;&gt;Jerome&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span style=3D&quot;font-family:ar=\r\nial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_e=\r\nxtra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;2013/5/2 Jan Algermissen &lt;span dir=\r\n=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jan.algermissen@...&quot; target=3D&quot;_blank=\r\n&quot;&gt;jan.algermissen@...&lt;/a&gt;&gt;&lt;/span&gt;&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_=\r\nquote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1=\r\nex&quot;&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\nOn 02.05.2013, at 19:48, J=E9r=F4me Louvel &lt;&lt;=\r\na href=3D&quot;mailto:jlouvel@...&quot;&gt;jlouvel@...&lt;/a&gt;&gt; wrote:&lt;br=\r\n&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Jan,&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I remain a strong proponent of =\r\nthe idea that it is more fruitful to aim at rethinking the problem to fit a=\r\n sound paradigm rather than to blame the paradigm for not fitting the probl=\r\nem (one&#39;s perceived view of it, that is).&lt;br&gt;\n\n&gt;&lt;br&gt;\n&gt; But when t=\r\nhe paradigm isn&#39;t intended to solve a given problem, do you think we sh=\r\nould force the problem to fit into the paradigm?&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;No, certain=\r\nly not. What I am arguing against is what I experience so often: That peopl=\r\ne claim some paradigm is a bad fit for a problem instead of thinking thorou=\r\nghly through the problem until they can make an educated choice.&lt;br&gt;\n\n&lt;div =\r\nclass=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; REST was never designed to solve all softwa=\r\nre architecture problems. That&#39;s quite the opposite and what makes it s=\r\no powerful to scale the web of hypermedia documents.&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;What do=\r\nes that mean: &quot;and what makes it so powerful to scale the web of hyper=\r\nmedia documents&quot;?&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Two concret=\r\ne points:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I don&#39;t buy the efficiency argument regardi=\r\nng discovery and granularity of messages - unless you ignore caching and th=\r\ne possibility to tailor representations for specific devices.&lt;br&gt;\n&gt;&lt;br&gt;\n=\r\n&gt; You could also add HTTP compression to the mix. I&#39;m a fan of HTTP =\r\ncaching and content negotiation as well. The &quot;Web API&quot; style prop=\r\nosed fully leverages those features.&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;It just not as simple a=\r\ns taking half of REST and getting half the benefits. REST works as a whole,=\r\n not in &#39;layers&#39; or &#39;levels&#39;.&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&g=\r\nt;&lt;br&gt;\n&gt; You write about the &#39;Web API style&#39; &quot;requires coor=\r\ndination between clients and servers when changes are deployed&quot; - doh.=\r\n.. this eliminates *the* (**the**) primary benefit to apply REST.&lt;br&gt;\n&gt;&lt;=\r\nbr&gt;\n&gt; Exactly, but if you ship a native mobile app or a connected hardwa=\r\nre device with no hypermedia capability at all (think about a dumb sensor),=\r\n&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Now, there is quite a difference between a sensor and a mob=\r\nile app. Who says a mobile app cannot have hypermedia capabilities? And who=\r\n would make a sensor a REST client? I&#39;d rather have the sensor send mea=\r\nsurement data via, e.g. UDP.&lt;br&gt;\n\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt; you definitel=\r\ny need to coordinate the clients and servers even though you are fully and =\r\nproperly using HTTP.&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Hmm, can you be more specific about wha=\r\nt you mean here?&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt; This is why the vast major=\r\nity of so-called web APIs are versionned and based on stable URIs and repre=\r\nsentations structures. They can&#39;t always afford to dynamically discover=\r\n the user interface.&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;I&#39;d say, the vast majority of Web A=\r\nPIs fails to be RESTful because people simply did not follow the style. Sho=\r\nw me a single example that has been deliberately designed =A0unRESTful on t=\r\nhe basis of design principles. To me this is just the same old discussion o=\r\nver and over again: People make a (rather unedcuated) claim, mistake that f=\r\nor truth and come up with suboptimal design.&lt;br&gt;\n\n&lt;br&gt;\nAnd that is not only=\r\n true for wanna be REST services, unfortunately it is an all too common way=\r\n to approach all sorts of IT problems.&lt;br&gt;\n&lt;br&gt;\nIn my experience, people le=\r\narn best if we do not settle for &#39;premature agreement&#39; but use, for=\r\n example, a style to foster more flexible thinking. Usually, whoever endure=\r\ns that process is thankful in the end.&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n=\r\n&gt; You could say that native apps aren&#39;t needed and could be re-devel=\r\nopped as HTML 5 apps, but this isn&#39;t always possible or desirable.&lt;br&gt;\n=\r\n&lt;br&gt;\n&lt;/div&gt;Either way, a native app makes a perfectly RESTful client if you=\r\n design it that way. Personally, I&#39;d go a very long way to maintain the=\r\n benefit of not having to coordinate client deployment with API changes....=\r\n&lt;br&gt;\n\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Aside from systems that foc=\r\nus on sending fine grained control messages around in (near) realtime, I ha=\r\nve yet to see a case where REST does not shine due to performance, scalabil=\r\nity and the ability to decentralize management of the deployment and releas=\r\ne cycles.&lt;br&gt;\n\n&gt;&lt;br&gt;\n&gt; Again, my point is to take the best of what RE=\r\nST brings but not try to apply it in cases where a rich hypermedia client i=\r\ns available,&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;What is a &quot;rich hypermedia client&quot;? C=\r\nan you be more specific about the situation that seems to be the root cause=\r\n for the perceived need that you have to change the style?&lt;br&gt;\n&lt;div class=\r\n=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt; but isn&#39;t so uncommon. I&#39;m just trying to do REST=\r\n justice otherwise we&#39;ll get a backslash when people finally realize th=\r\nat the vast majority of REST endpoints/APIs/etc. can&#39;t be used in a dyn=\r\namic way like HTML is used by web browsers.&lt;br&gt;\n\n&lt;br&gt;\n&lt;/div&gt;Can you explain=\r\n what you mean by &quot;a dynamic way like HTML is used by web browsers&quo=\r\nt;?&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nTo me it remains unclear what the problem is you are tryi=\r\nng to solve. Please explain, I&#39;m all ears.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nJan&lt;br&gt;\n&lt;br&gt;\n&lt;=\r\nbr&gt;\n&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Best regards,&lt;br&gt;\n&gt; Jerome&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--047d7b33dd82d27fa304dbcebc9d--\r\n\n"}}