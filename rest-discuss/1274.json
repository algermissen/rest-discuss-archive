{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"jOa_CwG7t81oH6TiYu_1-7rdm_rlg-OQdeiDHMpX6_6r0ooxwnkDTgDrSmugRaqY_mBsVkbqlXWx6Tps-NkNkV-W79M9Uw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST Tutorial","postDate":"1021785284","msgId":1274,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRTczNEM0Ljk1N0QzMUVCQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDRTZDRkEzLkI0NzU1RjU4QG1pdHJlLm9yZz4="},"prevInTopic":1272,"nextInTopic":1275,"prevInTime":1273,"nextInTime":1275,"topicId":1272,"numMessagesInTopic":21,"msgSnippet":"Looks like an excellent summary! I ll just go through some nits. Here are some points to consider. Slide 5: http://www.parts-depot.com/parts-list?flavor=xml ","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 19 May 2002 05:14:13 -0000\r\nReceived: (qmail 87720 invoked from network); 19 May 2002 05:14:13 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m5.grp.scd.yahoo.com with QMQP; 19 May 2002 05:14:13 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 19 May 2002 05:14:13 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g4J5E9b14496;\n\tSat, 18 May 2002 22:14:09 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g4J5Doe26851;\n\tSat, 18 May 2002 22:14:03 -0700\r\nMessage-ID: &lt;3CE734C4.957D31EB@...&gt;\r\nDate: Sat, 18 May 2002 22:14:44 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;Roger L. Costello&quot; &lt;costello@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] REST Tutorial\r\nReferences: &lt;3CE6CFA3.B4755F58@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Perlmx-Spam: Gauge=, Probability=0%, Report=&quot;INTERNAL_HOST&quot;\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nLooks like an excellent summary! I&#39;ll just go through some nits. \n\nHere are some points to consider.\n\n Slide 5:\n\n&quot;http://www.parts-depot.com/parts-list?flavor=xml&quot;\n\nA hard-core HTTP-head would suggest you use content negotiation instead. \n\n * http://www.prescod.net/http/content_negotiation.html\n\nSlide 8:\n\nI don&#39;t think I&#39;d make PartQuantity into a resource type. I&#39;d make\n*Part* into a resource type. Quantity would be just an element in there.\nThis could collapse your part list into a simple list of URIs and\nprevent the slightly weird linking from the PartQuantity back into the\nPart.\n\nSlide 9:\n\nSOAP is not an application protocol so it doesn&#39;t prescribe much of a\ndata model (roughly the same data model as UDP -- there are things you\ncan send messages to) This makes it hard to assess the &quot;SOAP Way&quot; of\ndoing any particular thing. Really it is SOAP toolkits and WSDL that\nmost clearly say what you can and cannot do easily with SOAP. In\nparticular, the SOAP specification does not say that an entire service\nmust be served off of a particular URI (even if it is strongly implied).\nI doubt that the most popular SOAP toolkits are well set-up to allow\ndynamically created SOAP endpoints so practically speaking the &quot;SOAP\nway&quot; is accurate but you should know the difference between what SOAP\nrequires and what it &quot;strongly suggests&quot;.\n\nSlide 11:\n\nYou say: &quot;Note the absence of\nlinks.  Why is this?\nLinks use HTTP GET,\nbut SOAP only supports\nHTTP POST.&quot;\n\nI don&#39;t think that&#39;s quite the way to put it.\n\nGiven an HTTP URI, it is possible to treat it as either an HTTP resource\nor a SOAP endpoint. If you decide to treat it as an HTTP resource then\nthat part of your service is REST-ful. If you decide to treat it as a\nSOAP endpoint then you have a problem: what method do you use to resolve\nit to some actual information? You can&#39;t look in the WSDL because WSDL&#39;s\ndescribes one and only one endpoint, not the relationship between\nendpoints. Even if you had the WSDL available, how would you know which\nof the methods to use? Unless there were some &quot;GET-ter&quot; annotation in\nWSDL, you don&#39;t know. \n\n Slide 16:\n\n&quot;As a result of REST having a common interface any client can use any\nservice without prior coordination.&quot;\n\nThere is a little bit of subtlety here. Any HTTP client can talk to any\nHTTP server. This is mostly true also of SOAP, except for the fact that\nSOAP runs on a bunch of transports so you also have to get the transport\nright.\n\nBut in either case the more important question is whether you can do\nanything useful without prior coordination. Here&#39;s a document I&#39;ve\nwritten about that:\n\n * http://www.prescod.net/rest/standardization.html\n\n Slide 19:\n\n&quot;SOAP is simply an XML version of CORBA/DCOM/RMI&quot;\n\nThat&#39;s the case for SOAP RPC but for SOAP in general, I predict SOAP\nadvocates would say:\n\n    1. The &quot;big problem&quot; with CORBA was that Microsoft didn&#39;t support\nit. The &quot;big problem&quot; with DCOM was that it doesn&#39;t work on Unix. The\nproblem with Java RMI is that it doesn&#39;t work with non-Java programming\nlanguages. Everyone agrees on SOAP so the network effects can kick in.\n(not the level of network effects we get from HTTP, but better than the\nnetwork effects from proprietary RPC protocols)\n\n   2. SOAP inherits the extensibility of XML and this allows &quot;loose\ncoupling&quot;. It also allows non-RPC message exchange patterns --\nparticularly asynchronous ones. \n\nSlide 21:\n\nThere should probably be a Meerkat WSDL. I&#39;ll look into that one day.\nMeerkat could be even better if it had a way to do discovery by\nhyperlink navigation rather than just queries.\n\n Paul Prescod\n\n"}}