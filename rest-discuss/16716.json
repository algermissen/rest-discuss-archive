{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":465410965,"authorName":"Nathan","from":"Nathan &lt;nathan@...&gt;","profile":"nathanrixham","replyTo":"SENDER","senderId":"0kYycwlVgM4_nKYzVPItA3xpOP8Qj5VykGg7Vv4PuP_1f50yMcoLU5SV0GNlLhUqlz7sHeL9WveehGpDhoCphw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Are IANA registered types required (strongly recommended) for proprietary systems","postDate":"1286192875","msgId":16716,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDQTlCRUVCLjkwMjA3MDNAd2VicjMub3JnPg==","inReplyToHeader":"PEFBTkxrVGluM0dfa1lERzRoc3RNZ1NFdTB4VW5NRWp6RC1BUlVHS09OOTRSa0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGltYzE2TkhNal9mUi1aXzhYamFpSlRHZnFNYWFpPUZBajJiSDNIUEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDAzMTg1NTQ4LjVlNTdjOTk1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMTAxMDAzMTkzMzEwLmVjMGFiODM5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrX20xVzlkTVBXZHNWOFZRS0wrWk5BMjJIZ3VRdEw1TGtfRTVNa0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDAzMjAyNzU1LmUzZDc5NzQxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrQ3U5b1dMME9rSFpTMzBKajZfemF4dGNPWnlSWlJjQkxwR3FRbUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDAzMjEzNjM2LjZkNDg4OTE0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltM3VrM0FPc1daWlBaUnRBYndzc0ozZ20zQjVDT0E0Zk1iVV9rNEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDA0MDIyMDQ1LjYxNDhmZTYyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPEFBTkxrVGluM0dfa1lERzRoc3RNZ1NFdTB4VW5NRWp6RC1BUlVHS09OOTRSa0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16715,"nextInTopic":16717,"prevInTime":16715,"nextInTime":16717,"topicId":16703,"numMessagesInTopic":14,"msgSnippet":"... Shared understanding is the requirement, so given a temporally varying set of clients, servers and intermediaries, and a constant transfer protocol, then","rawEmail":"Return-Path: &lt;nathan@...&gt;\r\nX-Sender: nathan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 90052 invoked from network); 4 Oct 2010 11:48:11 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m10.grp.re1.yahoo.com with QMQP; 4 Oct 2010 11:48:11 -0000\r\nX-Received: from unknown (HELO smtpauth19.prod.mesa1.secureserver.net) (64.202.165.30)\n  by mta1.grp.re1.yahoo.com with SMTP; 4 Oct 2010 11:48:11 -0000\r\nX-Received: (qmail 1043 invoked from network); 4 Oct 2010 11:48:10 -0000\r\nX-Received: from unknown (86.132.168.41)\n  by smtpauth19.prod.mesa1.secureserver.net (64.202.165.30) with ESMTP; 04 Oct 2010 11:48:10 -0000\r\nMessage-ID: &lt;4CA9BEEB.9020703@...&gt;\r\nDate: Mon, 04 Oct 2010 12:47:55 +0100\r\nOrganization: webr3\r\nUser-Agent: Thunderbird 2.0.0.24 (Windows/20100228)\r\nMIME-Version: 1.0\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;, \n Glenn Block &lt;glenn.block@...&gt;,\n darrel@..., Darrel Miller &lt;darrel.miller@...&gt;, \n rest-discuss@yahoogroups.com\r\nReferences: &lt;AANLkTimc16NHMj_fR-Z_8XjaiJTGfqMaai=FAj2bH3HP@...&gt;\t&lt;20101003185548.5e57c995.eric@...&gt;\t&lt;20101003193310.ec0ab839.eric@...&gt;\t&lt;AANLkTik_m1W9dMPWdsV8VQKL+ZNA22HguQtL5Lk_E5Mk@...&gt;\t&lt;20101003202755.e3d79741.eric@...&gt;\t&lt;AANLkTikCu9oWL0OkHZS30Jj6_zaxtcOZyRZRcBLpGqQm@...&gt;\t&lt;20101003213636.6d488914.eric@...&gt;\t&lt;AANLkTim3uk3AOsWZZPZRtAbwssJ3gm3B5COA4fMbU_k4@...&gt;\t&lt;20101004022045.6148fe62.eric@...&gt; &lt;AANLkTin3G_kYDG4hstMgSEu0xUnMEjzD-ARUGKON94Rk@...&gt;\r\nIn-Reply-To: &lt;AANLkTin3G_kYDG4hstMgSEu0xUnMEjzD-ARUGKON94Rk@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Nathan &lt;nathan@...&gt;\r\nReply-To: nathan@...\r\nSubject: Re: [rest-discuss] Are IANA registered types required (strongly recommended)\n for proprietary systems\r\nX-Yahoo-Group-Post: member; u=465410965; y=IBvkFHJPPSyj3T5DJ6ru_B59uGaaXNfAGcjPpFRgfMVGjbQc6RDn\r\nX-Yahoo-Profile: nathanrixham\r\n\r\nMike Kelly wrote:\n&gt; On Mon, Oct 4, 2010 at 9:20 AM, Eric J. Bowman &lt;eric@...&gt; wrote:\n&gt;&gt; Which is the same conclusion to be drawn from the thesis, absent that\n&gt;&gt; statement, with or without the mime-respect note.  The constraint in\n&gt;&gt; question is the embodiment of the decision to expand MIME from e-mail\n&gt;&gt; to become *the* tagging-and-bagging spec for IP network protocols.\n&gt;&gt; Chapter 6 extensively covers the topic of REST mismatches in HTTP,\n&gt;&gt; without mentioning the IANA registry...\n&gt; \n&gt; Why would that be a mismatch?\n&gt; \n&gt; You&#39;re missing the point; the argument has been that centralised\n&gt; registration is _not a requirement_ for REST. Shared understanding is\n&gt; the requirement, which can be achieved via other means than a central\n&gt; registry.\n\nShared understanding is the requirement, so given a temporally varying \nset of clients, servers and intermediaries, and a constant transfer \nprotocol, then the only way to achieve a shared understanding of \nanything, from messages through to the type label of the content being \ntransferred, is to have it defined by the constant, namely the transfer \nprotocol.\n\nThat is to say, three servers and six clients all sharing knowledge that \na specific content type label exists, and sharing an understanding of \ncontent typed with that label does not constitute shared understanding \nat an architectural level.\n\nTo illustrate simply include another set of clients and servers which \nalso share knowledge that a specific content type label exists, and \nunderstand content typed with the label, but use the same content type \nlabel as our original set; this is a conflict, a name collision if you \nwill, and proves that understanding is not shared at an architectural, \nor even transfer protocol, level\n\nThe only way to prevent this conflict at an architectural or transfer \nprotocol level is to define a set of content type labels and a method \nfor components to share which of the set they understand, for instance \nthe Content-Type and Accept headers in the hypertext transfer protocol.\n\nIn order to understand content typed with a specific label, then a \nspecification for that content type must be known, and given that some \ncontent type outwith the set could also share the same name, or that two \ncontent types within the set could share similar ambiguous names, then \nthe only way to prevent conflict here is to store a reference to the \ncontent type specification along with the label for that content type, \nwithin the defined set.\n\nSo, the only way to meet this requirement of shared understanding is to \nhave a defined set of content type label + content type specification \npairs at architectural or transfer protocol level. That set may consist \nof only one, or may be a fixed set, or may be a varying set.\n\nIf it&#39;s a varying set then some means of adding and removing content \ntype label + content specification pairs is needed - typically we refer \nto this a registry with registration process.\n\nThus we need a registry at the architectural level, and at transfer \nprotocol level.\n\nBringing it back to the real world, *the shared understanding of content \ntype labels already exists* at an architectural level, we call the \nlabels &quot;Internet Media Types&quot;, they have a registry at IANA, and a well \ndefined registration process, these aren&#39;t just transfer protocol \nspecific, they are a shared understanding at the Internet Layer, which \nis two layers below any transfer protocol.\n\nThis is why the transfer protocols you use on a daily basis, like SMTP, \nFTP and HTTP all use internet media types.\n\nIn other words, to meet the shared understanding constraint and not use \nIANA registered media types you would not only have to go lower than \n(HTTP/DNS etc), but you&#39;d have to lower than the transport layer \n(tcp/udp etc), and even lower still, somewhere below the internet layer \n(IPv4, IPv6 etc) and start from scratch tbh, define a new \ninternet-like-thing which isn&#39;t the internet and doesn&#39;t use any of the \ninternet stack, components or protocols.\n\nOr am I missing the point too?\n\nBest,\n\nNathan\n\n"}}