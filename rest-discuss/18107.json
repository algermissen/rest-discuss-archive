{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":201807187,"authorName":"Darrel Miller","from":"Darrel Miller &lt;darrel.miller@...&gt;","profile":"darrelmiller","replyTo":"SENDER","senderId":"usOdFiqx-lRFPf_ohtwCpNycU0Km1Np5Tmm7V2GodLpnXpalpPmLeR-0XWQdDYwXwUFaapqiAlMgZiEGswpWHX6X4ZHRXvfuIrVyjMxO","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Best approach for a complex API?","postDate":"1324326734","msgId":18107,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBS2lvT3FzdVA5dTNBRThLSkY3Z3VzWHd6czNYNW5XWDcxUGZNZj1yYjBLMmlPNkxHQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDRDOTIxQUQ2NDM2MzQ5ODE5REU2QzBEOUU0QjYyOUIwQEpyblBDPg==","referencesHeader":"PDRDOTIxQUQ2NDM2MzQ5ODE5REU2QzBEOUU0QjYyOUIwQEpyblBDPg=="},"prevInTopic":18105,"nextInTopic":18108,"prevInTime":18106,"nextInTime":18108,"topicId":18105,"numMessagesInTopic":11,"msgSnippet":"One option would be to use XML variant of Hal.  There is a .net based parser available here http://hal.codeplex.com.   Hal is a generic media type but you can","rawEmail":"Return-Path: &lt;darrel.miller@...&gt;\r\nX-Sender: darrel.miller@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6640 invoked from network); 19 Dec 2011 20:32:16 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 19 Dec 2011 20:32:16 -0000\r\nX-Received: from unknown (HELO mail-we0-f175.google.com) (74.125.82.175)\n  by mta2.grp.sp2.yahoo.com with SMTP; 19 Dec 2011 20:32:16 -0000\r\nX-Received: by werm13 with SMTP id m13so1753593wer.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 19 Dec 2011 12:32:15 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.134.149 with SMTP id s21mr7651457wei.41.1324326734976;\n Mon, 19 Dec 2011 12:32:14 -0800 (PST)\r\nX-Received: by 10.180.96.39 with HTTP; Mon, 19 Dec 2011 12:32:14 -0800 (PST)\r\nIn-Reply-To: &lt;4C921AD6436349819DE6C0D9E4B629B0@JrnPC&gt;\r\nReferences: &lt;4C921AD6436349819DE6C0D9E4B629B0@JrnPC&gt;\r\nDate: Mon, 19 Dec 2011 15:32:14 -0500\r\nMessage-ID: &lt;CAKioOqsuP9u3AE8KJF7gusXwzs3X5nWX71PfMf=rb0K2iO6LGA@...&gt;\r\nTo: =?ISO-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nCc: Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016e6dd990d9ad6da04b477d87f\r\nFrom: Darrel Miller &lt;darrel.miller@...&gt;\r\nReply-To: darrel@...\r\nSubject: Re: [rest-discuss] Best approach for a complex API?\r\nX-Yahoo-Group-Post: member; u=201807187; y=CUrGu4tfNdQLMtZfYmuJfiC5dGDFyqoxgnSJBkyI6QcK8o4j7x_m\r\nX-Yahoo-Profile: darrelmiller\r\n\r\n\r\n--0016e6dd990d9ad6da04b477d87f\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOne option would be to use XML variant of Hal.  There is a .net based\nparse=\r\nr available here http://hal.codeplex.com.   Hal is a generic media\ntype but=\r\n you can convey specific semantics using extended link relations.\n It is ea=\r\nsy to specify hierarchies of resources and has a standard way of\nrepresenti=\r\nng links.  I also built a path syntax for querying into the\nparser but that=\r\n is not yet part of the spec.\n\nDarrel\n\n\nOn Mon, Dec 19, 2011 at 3:08 PM, J=\r\n=F8rn Wildt &lt;jw@...&gt; wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt; I am at the beginning o=\r\nf a project where we need a web/http-based API for\n&gt; reading and creating c=\r\nomplex objects (more on that later). Right now I\n&gt; need\n&gt; to decide wether =\r\nto do this with a SOAP service or a REST API.\n&gt;\n&gt; SOAP has the benefits of =\r\nbeing well understood and having lots of tooling\n&gt; thereby making it easy t=\r\no get up and running. REST has some more long term\n&gt; benefits but requires =\r\na bit more work up front.\n&gt;\n&gt; I would rather do it with REST but doing REST=\r\n right puts some burden on\n&gt; the\n&gt; client that I struggle with. It is extre=\r\nmely easy to create a SOAP service\n&gt; in .NET using WCF and create a proxy c=\r\nlient that works with it. Creating a\n&gt; REST client requires a bit more work=\r\n if it must know how to follow links\n&gt; via\n&gt; link-relations, read (x)forms =\r\ndefinitions on the fly and so on.\n&gt;\n&gt; The API works with case files in a ca=\r\nse management system (*). A case file\n&gt; contains dossiers, dossiers contain=\r\n documents, and dossiers can be\n&gt; associated with various persons and/or or=\r\nganizations (parties) - like for\n&gt; instance a responsible party.\n&gt;\n&gt; So I n=\r\need to read case files, dossiers, binary documents and parties. I\n&gt; also\n&gt; =\r\nneed to be able to create those entities and create the hierarchical\n&gt; rela=\r\ntionship between them. I expect to have web ressources for the\n&gt; entities:\n=\r\n&gt; case file, dossier, document, party ... and, no, I am not going to expose=\r\n\n&gt; my\n&gt; internal entity types as web objects, there will be some kind of\n&gt; =\r\ntransformation to a public facing representation.\n&gt;\n&gt; My first design quest=\r\nion is; what content type should I use for\n&gt; representing\n&gt; these entities?=\r\n By using HTML I can use &lt;form&gt; and &lt;a&gt; as hypermedia\n&gt; controls - but then=\r\n there is no well known machine readable representation\n&gt; of the entities e=\r\nxcept RDFa which I have found rather difficult to use due\n&gt; to lack of tool=\r\ning in .NET.\n&gt;\n&gt; I could also use some proprietary XML variation. That woul=\r\nd solve the\n&gt; entity\n&gt; representation but leave me without well known hyper=\r\nmedia controls. That\n&gt; could although be fixed by allowing elements like AT=\r\nOM links and such in\n&gt; the\n&gt; XML.\n&gt;\n&gt; Initial scenario: the API must suppor=\r\nt creation of a case file, adding a\n&gt; dossier, and associate various partie=\r\ns to it. That can be a two step\n&gt; operation - 1) post case file data, 2) po=\r\nst dossier data with reference to\n&gt; (1) and included party references. The =\r\nresult would probably be a &quot;403\n&gt; created&quot; with a link to the new case file=\r\n resource.\n&gt;\n&gt; Second scenario: add additional binary documents to the doss=\r\nier. That\n&gt; should\n&gt; be easy with the dossier representation having a link =\r\nto its document\n&gt; collection such that the client can post new documents to=\r\n the collection.\n&gt; It\n&gt; should be possible to represent a document upload u=\r\nsing only standard HTTP\n&gt; headers, posted content type, and binary data in =\r\nthe body.\n&gt;\n&gt; My biggest concern is what content types to use in order to m=\r\nake it as\n&gt; easy\n&gt; to use from .NET as possible while still being a &quot;real&quot; =\r\nREST API?\n&gt;\n&gt; What I would like to be able to do, is to write code like thi=\r\ns when\n&gt; creating\n&gt; for instance a new case file:\n&gt;\n&gt; // Assume &quot;CaseFile&quot; =\r\ncorresponds to the public facing content type\n&gt; CaseFile f =3D new CaseFile=\r\n();\n&gt; f.Title =3D &quot;A new case file&quot;;\n&gt; f.OtherProperties =3D ...;\n&gt;\n&gt; Uri c=\r\nreateCaseFileUri =3D ... a way to fetch the URI - how? ...\n&gt; Uri newCaseFil=\r\neUri =3D createCaseFileUri.SerializeAndPostSomeData(f);\n&gt;\n&gt; Where would you=\r\n guys start with such a project? What tools would you use\n&gt; for\n&gt; a C# .NET=\r\n client (the server is built on Open Rasta)?\n&gt;\n&gt; Thanks, J=F8rn\n&gt;\n&gt; (*) I h=\r\nave mentioned this some time ago on this mailing list, but the\n&gt; project ha=\r\ns been sleeping for some time, so now time has come to re-think\n&gt; bits of i=\r\nt.\n&gt;\n&gt;  \n&gt;\n\r\n--0016e6dd990d9ad6da04b477d87f\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOne option would be to use XML variant of Hal. =A0There is a .net based par=\r\nser available here &lt;a href=3D&quot;http://hal.codeplex.com&quot;&gt;http://hal.codeplex.=\r\ncom&lt;/a&gt;. =A0 Hal is a generic media type but you can convey specific semant=\r\nics using extended link relations. =A0It is easy to specify hierarchies of =\r\nresources and has a standard way of representing links. =A0I also built a p=\r\nath syntax for querying into the parser but that is not yet part of the spe=\r\nc.&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Darrel&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div cl=\r\nass=3D&quot;gmail_quote&quot;&gt;On Mon, Dec 19, 2011 at 3:08 PM, J=F8rn Wildt &lt;span dir=\r\n=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jw@...&quot;&gt;jw@...&lt;/a&gt;&g=\r\nt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 =\r\n0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;d=\r\niv style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    =\r\n&lt;div&gt;\n      \n      \n      &lt;p&gt;I am at the beginning of a project where we ne=\r\ned a web/http-based API for &lt;br&gt;\nreading and creating complex objects (more=\r\n on that later). Right now I need &lt;br&gt;\nto decide wether to do this with a S=\r\nOAP service or a REST API.&lt;br&gt;\n&lt;br&gt;\nSOAP has the benefits of being well und=\r\nerstood and having lots of tooling &lt;br&gt;\nthereby making it easy to get up an=\r\nd running. REST has some more long term &lt;br&gt;\nbenefits but requires a bit mo=\r\nre work up front.&lt;br&gt;\n&lt;br&gt;\nI would rather do it with REST but doing REST ri=\r\nght puts some burden on the &lt;br&gt;\nclient that I struggle with. It is extreme=\r\nly easy to create a SOAP service &lt;br&gt;\nin .NET using WCF and create a proxy =\r\nclient that works with it. Creating a &lt;br&gt;\nREST client requires a bit more =\r\nwork if it must know how to follow links via &lt;br&gt;\nlink-relations, read (x)f=\r\norms definitions on the fly and so on.&lt;br&gt;\n&lt;br&gt;\nThe API works with case fil=\r\nes in a case management system (*). A case file &lt;br&gt;\ncontains dossiers, dos=\r\nsiers contain documents, and dossiers can be &lt;br&gt;\nassociated with various p=\r\nersons and/or organizations (parties) - like for &lt;br&gt;\ninstance a responsibl=\r\ne party.&lt;br&gt;\n&lt;br&gt;\nSo I need to read case files, dossiers, binary documents =\r\nand parties. I also &lt;br&gt;\nneed to be able to create those entities and creat=\r\ne the hierarchical &lt;br&gt;\nrelationship between them. I expect to have web res=\r\nsources for the entities: &lt;br&gt;\ncase file, dossier, document, party ... and,=\r\n no, I am not going to expose my &lt;br&gt;\ninternal entity types as web objects,=\r\n there will be some kind of &lt;br&gt;\ntransformation to a public facing represen=\r\ntation.&lt;br&gt;\n&lt;br&gt;\nMy first design question is; what content type should I us=\r\ne for representing &lt;br&gt;\nthese entities? By using HTML I can use &lt;form&gt=\r\n; and &lt;a&gt; as hypermedia &lt;br&gt;\ncontrols - but then there is no well kno=\r\nwn machine readable representation &lt;br&gt;\nof the entities except RDFa which I=\r\n have found rather difficult to use due &lt;br&gt;\nto lack of tooling in .NET.&lt;br=\r\n&gt;\n&lt;br&gt;\nI could also use some proprietary XML variation. That would solve th=\r\ne entity &lt;br&gt;\nrepresentation but leave me without well known hypermedia con=\r\ntrols. That &lt;br&gt;\ncould although be fixed by allowing elements like ATOM lin=\r\nks and such in the &lt;br&gt;\nXML.&lt;br&gt;\n&lt;br&gt;\nInitial scenario: the API must suppor=\r\nt creation of a case file, adding a &lt;br&gt;\ndossier, and associate various par=\r\nties to it. That can be a two step &lt;br&gt;\noperation - 1) post case file data,=\r\n 2) post dossier data with reference to &lt;br&gt;\n(1) and included party referen=\r\nces. The result would probably be a &quot;403 &lt;br&gt;\ncreated&quot; with a lin=\r\nk to the new case file resource.&lt;br&gt;\n&lt;br&gt;\nSecond scenario: add additional b=\r\ninary documents to the dossier. That should &lt;br&gt;\nbe easy with the dossier r=\r\nepresentation having a link to its document &lt;br&gt;\ncollection such that the c=\r\nlient can post new documents to the collection. It &lt;br&gt;\nshould be possible =\r\nto represent a document upload using only standard HTTP &lt;br&gt;\nheaders, poste=\r\nd content type, and binary data in the body.&lt;br&gt;\n&lt;br&gt;\nMy biggest concern is=\r\n what content types to use in order to make it as easy &lt;br&gt;\nto use from .NE=\r\nT as possible while still being a &quot;real&quot; REST API?&lt;br&gt;\n&lt;br&gt;\nWhat =\r\nI would like to be able to do, is to write code like this when creating &lt;br=\r\n&gt;\nfor instance a new case file:&lt;br&gt;\n&lt;br&gt;\n// Assume &quot;CaseFile&quot; cor=\r\nresponds to the public facing content type&lt;br&gt;\n  CaseFile f =3D new CaseFil=\r\ne();&lt;br&gt;\n  f.Title =3D &quot;A new case file&quot;;&lt;br&gt;\n  f.OtherProperties=\r\n =3D ...;&lt;br&gt;\n&lt;br&gt;\nUri createCaseFileUri =3D ... a way to fetch the URI - h=\r\now? ...&lt;br&gt;\n  Uri newCaseFileUri =3D createCaseFileUri.SerializeAndPostSome=\r\nData(f);&lt;br&gt;\n&lt;br&gt;\nWhere would you guys start with such a project? What tool=\r\ns would you use for &lt;br&gt;\na C# .NET client (the server is built on Open Rast=\r\na)?&lt;br&gt;\n&lt;br&gt;\nThanks, J=F8rn&lt;br&gt;\n&lt;br&gt;\n(*) I have mentioned this some time ag=\r\no on this mailing list, but the &lt;br&gt;\nproject has been sleeping for some tim=\r\ne, so now time has come to re-think &lt;br&gt;\nbits of it.&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/d=\r\niv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n=\r\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--0016e6dd990d9ad6da04b477d87f--\r\n\n"}}