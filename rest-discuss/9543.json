{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229827793,"authorName":"Steve Loughran","from":"&quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;","profile":"steve_loughran","replyTo":"SENDER","senderId":"-La4YNWltP6nMPeIeG4apbVWfaNhnkLIvDX4i8F5efImsQHO-Op5adjKpAfdRGNYww64DWk64lOmmIKpxijHwYkOh1ZN2Ruwzol269kEJ0jgl3GX26QDm4lj8dIXbew","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: WADL pushback","postDate":"1185802110","msgId":9543,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlkYzc4ZDdiMDcwNzMwMDYyOG81NTE0OGI2ZWcxMDEzYjY2OGQxNzczYzI5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ2QTFGQzhGLjIwODA1MDdAbWV0YWxhYi51bmMuZWR1Pg==","referencesHeader":"PDIwMDcwNzA2MjA1MDQ4LkdBMTI3NzdAa2xhbmdyYXVtPgkgPDQ2OTU3OEIyLjMwNTA2MDZAbWV0YWxhYi51bmMuZWR1PgkgPDY4ZmJhNWM1MDcwNzExMTc0NWszZjUwYTY5Ynk1M2M3ZGIxZDQzMmU5Mzg3QG1haWwuZ21haWwuY29tPgkgPDQ2OTVGMDcyLjgwMTAwMDNAbWV0YWxhYi51bmMuZWR1PgkgPDY4ZmJhNWM1MDcwNzEyMDcwOGgxMDRkNDFiZXU5MGY3NjhlYmJjMjI3OTI4QG1haWwuZ21haWwuY29tPgkgPDQ2OUFENTRFLjIwNTA0MDNAbWV0YWxhYi51bmMuZWR1PgkgPDY4ZmJhNWM1MDcwNzE1MTk1N2k1N2QyMTI3YnRmMjBjM2JiOWUxMDgyMzkyQG1haWwuZ21haWwuY29tPgkgPDQ2OUJGN0Y4LjQwMzA4MDBAbWV0YWxhYi51bmMuZWR1PiA8MjAwNzA3MTYyMzUwMTYuR0QxNjUzN0BrbGFuZ3JhdW0+CSA8NDZBMUZDOEYuMjA4MDUwN0BtZXRhbGFiLnVuYy5lZHU+"},"prevInTopic":9520,"nextInTopic":9544,"prevInTime":9542,"nextInTime":9544,"topicId":8794,"numMessagesInTopic":108,"msgSnippet":"... That s an interesting premise. I think it has some validity, but there is a major consequence. there is effectively one XML parser for Java, Xerces, whose","rawEmail":"Return-Path: &lt;steve.loughran.soapbuilders@...&gt;\r\nX-Sender: steve.loughran.soapbuilders@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 69821 invoked from network); 30 Jul 2007 13:28:32 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m47.grp.scd.yahoo.com with QMQP; 30 Jul 2007 13:28:32 -0000\r\nReceived: from unknown (HELO wr-out-0506.google.com) (64.233.184.232)\n  by mta12.grp.scd.yahoo.com with SMTP; 30 Jul 2007 13:28:32 -0000\r\nReceived: by wr-out-0506.google.com with SMTP id 60so585104wri\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 30 Jul 2007 06:28:31 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=uQhwP3nAUl95i3PRXuch/+3HJWxzAe6TSXIi8/u68ulLBW+NgVocfPxWCnX5PW+ylTSHeqVbmcSqXjIU5GbYVlKv8LNk/Zck3Az5nhPncjanY8c5NKWZKRAIi3q0jxbA3R7esAfBAe+FYHE8sScW77VhpjJtiy2jhLXsRU/SRPw=\r\nReceived: by 10.100.14.19 with SMTP id 19mr4574049ann.1185802110865;\n        Mon, 30 Jul 2007 06:28:30 -0700 (PDT)\r\nReceived: by 10.100.41.20 with HTTP; Mon, 30 Jul 2007 06:28:30 -0700 (PDT)\r\nMessage-ID: &lt;9dc78d7b0707300628o55148b6eg1013b668d1773c29@...&gt;\r\nDate: Mon, 30 Jul 2007 14:28:30 +0100\r\nTo: &quot;Elliotte Harold&quot; &lt;elharo@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;46A1FC8F.2080507@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;20070706205048.GA12777@klangraum&gt;\n\t &lt;469578B2.3050606@...&gt;\n\t &lt;68fba5c50707111745k3f50a69by53c7db1d432e9387@...&gt;\n\t &lt;4695F072.8010003@...&gt;\n\t &lt;68fba5c50707120708h104d41beu90f768ebbc227928@...&gt;\n\t &lt;469AD54E.2050403@...&gt;\n\t &lt;68fba5c50707151957i57d2127btf20c3bb9e1082392@...&gt;\n\t &lt;469BF7F8.4030800@...&gt; &lt;20070716235016.GD16537@klangraum&gt;\n\t &lt;46A1FC8F.2080507@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;\r\nSubject: Re: [rest-discuss] Re: WADL pushback\r\nX-Yahoo-Group-Post: member; u=229827793; y=5wzTN31nL9YCkltVc4eD0QDyKyue_YRXx84TQaHOPhN3TStNNUIFyzc\r\nX-Yahoo-Profile: steve_loughran\r\n\r\nOn 7/21/07, Elliotte Harold &lt;elharo@...&gt; wrote:\n&gt; That XML is so complex that you really need a true parser to handle it\n&gt; is a feature, not a bug. It discourages and mostly prevents the use of\n&gt; porr quality, hand-written solutions to handle it. Even in the rare\n&gt; cases where the solutions are hand-written, they&#39;re typically based on\n&gt; non-Turing complete regex&#39;s. No one takes an arbitrary XML document and\n&gt; throws it into a JavaScript interpreter. People do this with JSON all\n&gt; the time, and the language was deliberately designed to make this possible.\n&gt;\n\nThat&#39;s an interesting premise. I think it has some validity, but there\nis a major consequence.\n\nthere is effectively one XML parser for Java, Xerces, whose code is\nsomething I&#39;m scared of. There&#39;s also, I think, two for Windows, msxml\nand whatever .net uses. I havent seen their code to fear it. But the\nresult is that there are three parsers to target. find a buffer\noverflow in MSXML and you have another back door into windows; find\nsome way to do bad things in xerces, and you own most the java and XML\n-based services on the planet.\n\nI&#39;ve always felt it would be a better place to put in a back door (a\ncustom PI? an obscure bit of XSD?) than a SOAP stack, because even\ninside something like Axis1, the base servlet pipeline is fairly\nsimple (and as the author of much of that servlet, something I trust\n:). Nowadays, if I were to back-door a web service, I&#39;d target the\nWSDL to Java code generation. that&#39;s some nasty template stuff that\ngenerates java source nobody reads. XmlBeans is probably just as juicy\na target, and as that tool chucks away the source after creating the\n.class files, fairly subtle. you just need to ident some extra-rare\nXSD pattern to go after.\n\nOne strength of JSON is that its simplicity is like XMLRPC -the effort\nof creating a parser is so low that we have a very heterogenous\ncodebase out there -at least until javax.ws.json ships.\n\n-Steve\n\n(orginal author of the Axis security pages,\nhttp://ws.apache.org/axis/java/security.html)\n\n"}}