{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"nvQjWTmPkGA2lIfHPWXJaoVrClp1_tJWEVjNY6hbWe9ft-r-Tkrn339lmtMVAcGusKY-Cw9gpmSJi6leNfr8GlHzub2jJQCRActIlQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] This is REST","postDate":"1236041306","msgId":12172,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMDkwMzAyMTY0OHQzMDAwN2EyOHMzMjZkN2IyOGYxOGVjNjlkQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDU1YzYwZTM3MDkwMzAyMTQwOWg2ZjIwNDc2ZncyZTgwNjk2YWMzMTllYzM2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMzAyMTQwOWg2ZjIwNDc2ZncyZTgwNjk2YWMzMTllYzM2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12171,"nextInTopic":12173,"prevInTime":12171,"nextInTime":12173,"topicId":12170,"numMessagesInTopic":28,"msgSnippet":"... Subbu Allamaraju recently published an article at InfoQ about describing REST based applications that obey this constraint: ","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17797 invoked from network); 3 Mar 2009 00:48:27 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m1.grp.re1.yahoo.com with QMQP; 3 Mar 2009 00:48:27 -0000\r\nX-Received: from unknown (HELO yw-out-1718.google.com) (74.125.46.155)\n  by mta17.grp.scd.yahoo.com with SMTP; 3 Mar 2009 00:48:27 -0000\r\nX-Received: by yw-out-1718.google.com with SMTP id 4so1429883ywq.34\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 02 Mar 2009 16:48:26 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.20.65 with SMTP id e1mr3479569ibb.1.1236041306443; Mon, 02 \n\tMar 2009 16:48:26 -0800 (PST)\r\nIn-Reply-To: &lt;55c60e370903021409h6f20476fw2e80696ac319ec36@...&gt;\r\nReferences: &lt;55c60e370903021409h6f20476fw2e80696ac319ec36@...&gt;\r\nDate: Mon, 2 Mar 2009 16:48:26 -0800\r\nMessage-ID: &lt;f8b39ace0903021648t30007a28s326d7b28f18ec69d@...&gt;\r\nTo: Solomon Duskis &lt;sduskis@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] This is REST\r\nX-Yahoo-Group-Post: member; u=352334505; y=k_CSFKRiYY0Xw4kw5ioZPOsbF6po2TaxGQK3bH2KX5rqRxXYJ2bZHQgJsw\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\nOn Mon, Mar 2, 2009 at 2:09 PM, Solomon Duskis &lt;sduskis@...&gt; wrote:\n&gt;=\r\n Are there any multi function, data oriented APIs out there that fully\n&gt; em=\r\nbrace Roy Fielding hypertext constraints -\n&gt; http://roy.gbiv.com/untangled/=\r\n2008/rest-apis-must-be-hypertext-driven?\n&gt;\n&gt; I&#39;m still a bit fuzzy on the l=\r\nast point he makes:\n&gt;\n&gt; A REST API should be entered with no prior knowledg=\r\ne beyond the initial URI\n&gt; (bookmark)... Failure here implies that out-of-b=\r\nand information is driving\n&gt; interaction instead of hypertext.\n&gt;\n&gt; I have a=\r\n few ideas, but no concrete examples of driving system-to-system\n&gt; data-ori=\r\nented &quot;services&quot; through in-band information.=A0 That&#39;s level of\n&gt; discover=\r\nability that I&#39;ve only heard about discussed in WS-* systems, but\n&gt; have ne=\r\nver seen in practice.=A0 Web sites and other human consumable\n&gt; application=\r\ns can fulfill this requirement because they have the ultimate\n&gt; &quot;discovery =\r\nengine&quot; we know of as an implicit part of the &quot;system,&quot; namely\n&gt; the human =\r\nbrain (or human mind if you&#39;d like to be philosophical about it).\n&gt;\n&gt; The s=\r\nystem-to-system interaction that I know about generally require a some\n&gt; le=\r\nvel of coupling that make discoverability a much more complex issue.=A0 The=\r\n\n&gt; techniques with which I am familiar almost seem inadequate to the task.=\r\n=A0 Roy\n&gt; recently said on rest-discuss:\n&gt;\n&gt; A lot of people think of syste=\r\nms as static things. Dead things.=A0 REST is not\n&gt; going to appeal to those=\r\n people. All of its constraints are designed to keep\n&gt; systems living longe=\r\nr than we are willing or able to anticipate.\n&gt;\n&gt; Perhaps I&#39;m simply not fam=\r\niliar with the fitting techniques and technologies\n&gt; to create more life-li=\r\nke systems.=A0 Do you know of any APIs that implements a\n&gt; few features and=\r\n are used in system-to-system that fully embrace the REST\n&gt; hypertext const=\r\nraints?=A0 Any insight would be greatly appreciated.\n\nSubbu Allamaraju rece=\r\nntly published an article at InfoQ about\ndescribing REST based applications=\r\n that obey this constraint:\n\n    http://www.infoq.com/articles/subbu-allama=\r\nraju-rest\n\nwhich points out that, if you want to go whole hog in this direc=\r\ntion,\nyou stop describing the URI structure of your application (like we se=\r\ne\nin most REST API descriptions), and start talking about the &quot;rel&quot;\n(relati=\r\nonship) values that can be used to identify semantically\ninteresting hyperl=\r\ninks that the client might want to follow.  His\nexamples use a &lt;link&gt; eleme=\r\nnt modeled after the way that Atom and HTML\ndefine it, which seems to be a =\r\npopular trend for REST APIs that use\nXML.\n\nAfter a day of working with a co=\r\nlleague designing some new REST based\nAPIs, I was musing about this while w=\r\natching one of the video blogs I\nenjoy (Hak5 from revision3.com), where the=\r\ny have occasional stories\nabout remotely controlled tanks that can fire ner=\r\nf missiles on\ncommand.  How to model the control of such a thing with a RES=\r\nT API?\n\nThe basic CRUD type operations map pretty cleanly.  Presumably, the=\r\n\nwell-known URI of the service will offer me a link I can use for\ncreating =\r\na new tank in the first place.  And, the representation I get\nback can incl=\r\nude a  &quot;self&quot; link so I can reference it with a GET\n(retrieve an updated re=\r\npresentation), a PUT (update properties), or a\nDELETE (remove this tank fro=\r\nm my collection).  But how does one model\nactually firing the missile?  One=\r\n idea that seems plausible is to\ninclude a link element with a &quot;fire&quot; relat=\r\nionship, and document (in\nyour API spec) that a POST to this URI will cause=\r\n the missile to be\nlaunched.\n\n    &lt;tank&gt;\n        &lt;name&gt;My First Tank&lt;/name&gt;=\r\n\n        &lt;missile-state&gt;LOADED&lt;/missile-state&gt;\n        &lt;link rel=3D&quot;self&quot; h=\r\nref=3D&quot;http://tanks-r-us.example.com/tanks/0123&quot;/&gt;\n        &lt;!-- POST to thi=\r\ns link to prime the spring or whatever\nactually launches the missile --&gt;\n  =\r\n      &lt;link rel=3D&quot;ready&quot; href=3D&quot;http://tanks-r-us.example.com/...&quot;\ntitle=\r\n=3D&quot;Ready Launcher&quot;/&gt;\n        &lt;!-- POST to this link to aim the launcher at=\r\n the specified\nhorizontal and vertical coordinates --&gt;\n        &lt;link rel=3D=\r\n&quot;aim&quot; href=3D&quot;http://tanks-r-us.example/com/...&quot;\ntitle=3D&quot;Aim Tank&quot;/&gt;\n     =\r\n   &lt;!-- POST to this link to fire the missle --&gt;\n        &lt;link rel=3D&quot;fire&quot;=\r\n href=3D&quot;http://tanks-r-us.example.com/...&quot;\ntitle=3D&quot;Fire Missile&quot;/&gt;\n      =\r\n  ...\n    &lt;/tank&gt;\n\nPresumably, the &quot;fire&quot; link would only be presented by t=\r\nhe server when\nthe tank was in a state where this operation makes sense (i.=\r\ne. a\n&quot;fire&quot; link is included only when the missile is currently LOADED).\nBu=\r\nt the server should be prepared to handle the case where a client\ntried to =\r\nfire the missile after someone else had already fired it,\nbecause they had =\r\nretrieved their representation earlier.\n\nA POST makes the most sense, becau=\r\nse firing the missile is definitely\nnot idempotent :-).  Among other things=\r\n, it will have side effects\nthat change the missile-state of my tank (proba=\r\nbly first to FIRING,\nthen to EMPTY) which I can monitor by doing polled GET=\r\ns, or being\nnotified by some out-of-band event mechanism.  And the usual se=\r\nmantics\nfor error responses seem to fit pretty well, too:\n* 202 -- if it ta=\r\nkes a non-trivial amount of time to fire the missile,\nthe server might acce=\r\npt the request\n  and return a URI to monitor for completion\n* 401 -- who th=\r\ne heck are you\n* 403 -- sorry , you&#39;re not allowed to fire my missile\n* 409=\r\n -- nobody can fire a missile when the launcher is empty (presumably\n  some=\r\none else beat you to the punch, so your reference to this URI is stale)\n\nIn=\r\n the particular use case of firing, there isn&#39;t much need for a\nrequest ent=\r\nity (although, if a tank had more than one missile\nlauncher, you might mode=\r\nl things by including a field in the request\nentity to select which launche=\r\nr to fire).  But, in principle, you\ncould include an encapsulation of whate=\r\nver information is needed for\nthe server to do what you want it to do.\n\nEar=\r\nlier threads have discussed firing off (possibly transactional)\nbusiness lo=\r\ngic.  The same sort of approach would work there.\n\nCraig McClanahan\n\n&gt;\n&gt; Th=\r\nanks,\n&gt;\n&gt; Solomon Duskis\n&gt; \n\n"}}