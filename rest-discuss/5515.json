{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":244521818,"authorName":"toydi","from":"toydi &lt;teohuiming.work@...&gt;","profile":"iamstupidiot","replyTo":"SENDER","senderId":"DzmdGkpYPjWVUigaSPBYNEi7p2TTf5bLsVK2qE9so1gJevUod7tJK00FcAB9pZPvn5GnVQq0Su_KgdTuju4BuKdT1DOm0hWy","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Fwd: Partial update on resource&#39;s state (WAS:Re: [uf-rest] Instance/Collect...)","postDate":"1132488594","msgId":5515,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDczZWM1OTlkMDUxMTIwMDQwOXYxOWE1ZTg1M21hZDUyNWFlZDk5Mzg5M2NhQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGRsM3U5YitmaDAyQGVHcm91cHMuY29tPg==","referencesHeader":"PDczZWM1OTlkMDUxMTEwMTkyOGc0ZGFjMmIwM2c3MjRiNjIwMDkwNTIzYTY1QG1haWwuZ21haWwuY29tPgkgPGRsM3U5YitmaDAyQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":5514,"nextInTime":5516,"topicId":5515,"numMessagesInTopic":1,"msgSnippet":"Here s Benjamin s previous complete reply. (I didn t notice the CC field is empty :-) ... From: fuzzybsc  Date: Nov 12, 2005","rawEmail":"Return-Path: &lt;teohuiming.work@...&gt;\r\nX-Sender: teohuiming.work@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 88018 invoked from network); 20 Nov 2005 12:09:54 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m26.grp.scd.yahoo.com with QMQP; 20 Nov 2005 12:09:54 -0000\r\nReceived: from unknown (HELO wproxy.gmail.com) (64.233.184.204)\n  by mta4.grp.scd.yahoo.com with SMTP; 20 Nov 2005 12:09:54 -0000\r\nReceived: by wproxy.gmail.com with SMTP id i27so220667wra\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 20 Nov 2005 04:09:54 -0800 (PST)\r\nReceived: by 10.65.84.14 with SMTP id m14mr1776988qbl;\n        Sun, 20 Nov 2005 04:09:54 -0800 (PST)\r\nReceived: by 10.65.147.1 with HTTP; Sun, 20 Nov 2005 04:09:54 -0800 (PST)\r\nMessage-ID: &lt;73ec599d0511200409v19a5e853mad525aed993893ca@...&gt;\r\nDate: Sun, 20 Nov 2005 20:09:54 +0800\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;dl3u9b+fh02@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;73ec599d0511101928g4dac2b03g724b620090523a65@...&gt;\n\t &lt;dl3u9b+fh02@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: toydi &lt;teohuiming.work@...&gt;\r\nSubject: Fwd: Partial update on resource&#39;s state (WAS:Re: [uf-rest] Instance/Collect...)\r\nX-Yahoo-Group-Post: member; u=244521818; y=I9ouyvl8kQiNGAUQnmEAIP52Hxk81X2P5YCHJuUr_0bL8hp0_00c\r\nX-Yahoo-Profile: iamstupidiot\r\n\r\nHere&#39;s Benjamin&#39;s previous complete reply. (I didn&#39;t notice the CC\nfield is=\r\n empty :-)\n\n---------- Forwarded message ----------\nFrom: fuzzybsc &lt;benjami=\r\nncarlyle@...&gt;\nDate: Nov 12, 2005 1:23 PM\nSubject: Partial updat=\r\ne on resource&#39;s state (WAS:Re: [uf-rest]\nInstance/Collect...)\nTo: toydi &lt;te=\r\nohuiming.work@...&gt;\n\n\n--- In rest-discuss@yahoogroups.com, toydi &lt;teoh=\r\nuiming.work@g...&gt; wrote:\n&gt; -----------\n&gt; It is similar to &quot;composite state =\r\nresource&quot; described in Mark Baker&#39;s\n&gt; HTTP resource state model [1]. Here&#39;s=\r\n an example about using POST in\n&gt; &quot;composite state resource&quot; described in t=\r\nhe draf, section 4.1:\n&gt; &gt; &quot;For example, one might annotate an editorial wit=\r\nh a comment. This\n&gt; would be represented in the composite state model as ad=\r\nding the POSTed\n&gt; comment to the resource.This may happen with or without t=\r\nhe granting\n&gt; of that annotation a new identity.&quot;\n&gt; &gt; However, the example =\r\nonly mentioned &quot;adding the POSTed comment&quot;\n&gt; without touching how to update=\r\n a particular comment (if the comment\n&gt; has no new identity). So, we should=\r\n use POST to do update that comment\n&gt; the way you suggest?\n\nI think that an=\r\ny state that exists on the Internet that should be\nupdated as a unit needs =\r\nto be represented as a resource with its own\nURI. Whether that URI represen=\r\nts a &quot;real object&quot; or file isn&#39;t\nrelevant, so long as a URI exists. If no U=\r\nRI can be directly\nassociated with the comment, I don&#39;t think it can reason=\r\nably be\nupdated by a client.\n\n&gt; -------\n&gt; Another interesting link would be=\r\n Benjamin&#39;s &quot;REST in an\n&gt; Object-Oriented Language&quot;[2]. He try to model a r=\r\nesource&#39;s properties\n&gt; as explicit resources, so that we can retrieve and u=\r\npdate them\n&gt; explicitly.\n&gt; &gt; Here&#39;s the quote:\n&gt; &quot;The reason I say that a b=\r\nean&#39;s properties are resources (possibly as\n&gt; well) is that they do support=\r\n GET (get) and PUT (set) operations in\n&gt; their own right.&quot;\n&gt; But, how to id=\r\nentify property-like resources in URL syntax? Fragment\n&gt; URL identifier com=\r\nes into my mind, but seems like I cannot send PUT to\n&gt; a &lt;http://foo/bar#ba=\r\nz&gt; in current browsers (I&#39;m not sure is it because\n&gt; of the specification o=\r\nr an implementation bias, hope someone would\n&gt; clarify this).\n\n&lt;http://foo/=\r\nbar#baz&gt; is technically not a URI. It is a URI reference,\ni.e. it contains =\r\na fragment identifier. Fragments are always\nintepreted by the client rather=\r\n than the server. When the request is\nmade the fragment will be stripped to=\r\n create a URI to send to the\nserver. When the server sends a response your =\r\nweb browser will look\nfor the &quot;baz&quot; anchor within the response.\n\nThe constr=\r\nuction of the URI could take several forms.\n&lt;http://foo/bar/baz&gt; would be f=\r\nine, as would something like\n&lt;http://foo/bar?comment=3Dbaz&gt;. I know some RE=\r\nSTafarians disagree, but I\nsee the query part of a URI (which unlike the fr=\r\nagment is sent to the\nserver side) as a useful way for a server to denote t=\r\no itself that a\ntemporary resource needs to be created in order to handle t=\r\nhe request.\n\nThe query approach could be applied more generally. I believe =\r\nthat\nelsewhere in this thread the notion of updating only part of a\ndatabas=\r\ne record was discussed. You could set up a URI that refers to\nthis subset e=\r\nxplicitly, and allows a PUT to the subset.\n\nThere are disadvantages to havi=\r\nng multiple resources who&#39;s state\noverlaps. When you update a resource thro=\r\nugh a caching proxy the\nresource&#39;s cache entries are usually invalidated. T=\r\nhis ensures that\nfurther requests get the latest state available. However, =\r\nif you\nupdate a resource that shares state with another resource caches hav=\r\ne\nno means knowing which entries to invalidate. A single client could\ngathe=\r\nr inconsistent representations of the two resources, thus leading\nto confus=\r\nion and possibly data integrity problems.\n\nI believe that elsewhere in this=\r\n thread the concept of patching was\ndiscussed as an update technique. It ma=\r\ny interest readers to know that\nPATCH was a legal method for HTTP/1.1 circa=\r\n rfc2068, and may be better\nto use than PUT in this case. What if you actua=\r\nlly want to PUT a diff?\n:) Patch allows you to indicate explicitly that you=\r\n are sending a\ndiff. This approach has problems also: What if the state was=\r\n updated\nby someone else before you applied your patch? What if a glitch oc=\r\ncurs\nthat causes the patch to be applied twice? In fact, these questions\nap=\r\nply equally-well to PUT. The canonical answer is probably to use an\nIf-* he=\r\nader to prevent inconsistency. The biggest problem with diffs\ngenerally is =\r\nthat they are difficult to construct using web forms ;) I\nsuggest that popu=\r\nlating a web form with current data before allowing a\nuser to modify only t=\r\nhe fields they want to change is probably the\nsimplest and most canonical w=\r\nay of all.\n\nBenjamin.\n\n"}}