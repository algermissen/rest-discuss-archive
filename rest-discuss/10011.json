{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":20175505,"authorName":"John D. Heintz","from":"&quot;John D. Heintz&quot; &lt;jheintz@...&gt;","profile":"johndheintz","replyTo":"SENDER","senderId":"XFCbl30YG75REYiZ71pWexIcQJtf_kOiiGr-VT7WXbxFnsMJvHof7YTZuWs0CI1K8RJXnRCx9h-85_jSYLCgmWr6OiNM9SAVJ860","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Help- How to explain RESTful machine clients","postDate":"1197999514","msgId":10011,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM4MjA0NTQzMDcxMjE4MDkzOHA1NDhhMTdkZHM5ZmFkN2U0NWUzMjk4MDA4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDg3emx3YmRpN3QuZnNmQHBob2VuaXguYXN5bmNocm9ub3VzLm9yZz4=","referencesHeader":"PGM4MjA0NTQzMDcxMjEyMTQzNWoxZDQ3Yzk5ZnAyOWNiMGY4YzRlZTlhOGQ1QG1haWwuZ21haWwuY29tPgkgPDg3emx3YmRpN3QuZnNmQHBob2VuaXguYXN5bmNocm9ub3VzLm9yZz4="},"prevInTopic":10010,"nextInTopic":10018,"prevInTime":10010,"nextInTime":10012,"topicId":9961,"numMessagesInTopic":6,"msgSnippet":"Josh, You are right that is must constrain state-transition paths to some degree , and where I wrote can t pre-constrain state transition path it doesn t","rawEmail":"Return-Path: &lt;jheintz@...&gt;\r\nX-Sender: jheintz@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17537 invoked from network); 18 Dec 2007 17:38:34 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m57.grp.scd.yahoo.com with QMQP; 18 Dec 2007 17:38:34 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.178)\n  by mta17.grp.scd.yahoo.com with SMTP; 18 Dec 2007 17:38:34 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id m38so4410123waf.5\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 18 Dec 2007 09:38:34 -0800 (PST)\r\nX-Received: by 10.115.46.9 with SMTP id y9mr4495890waj.129.1197999514267;\n        Tue, 18 Dec 2007 09:38:34 -0800 (PST)\r\nX-Received: by 10.114.120.16 with HTTP; Tue, 18 Dec 2007 09:38:34 -0800 (PST)\r\nMessage-ID: &lt;c82045430712180938p548a17dds9fad7e45e3298008@...&gt;\r\nDate: Tue, 18 Dec 2007 11:38:34 -0600\r\nTo: &quot;Josh Sled&quot; &lt;jsled@...&gt;\r\nCc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;87zlwbdi7t.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;c82045430712121435j1d47c99fp29cb0f8c4ee9a8d5@...&gt;\n\t &lt;87zlwbdi7t.fsf@...&gt;\r\nX-Google-Sender-Auth: 0b8d2040a71cf8e0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;John D. Heintz&quot; &lt;jheintz@...&gt;\r\nSubject: Re: [rest-discuss] Help- How to explain RESTful machine clients\r\nX-Yahoo-Group-Post: member; u=20175505; y=-TkVCuSE_DaYQ-_iq7Q-mjwM2aWvy054TuAR_6hoYWcF1mSf7bc\r\nX-Yahoo-Profile: johndheintz\r\n\r\nJosh,\n\nYou are right that is must constrain state-transition paths &quot;to some\ndegree&quot;, and where I wrote &quot;can&#39;t pre-constrain state transition path&quot;\nit doesn&#39;t make much sense.\n\nHere is an assumption that I think is present in WADL, JJ&#39;s comments,\nAssaf&#39;s comments, and your comments:\nAny schema must provide the client knowledge about what verbs can be\nused and when: &quot;up front&quot;, instead of being &quot;discovered&quot;.\n\nYour comment to this effect is: &quot;A machine client needs to know that\nafter seeing &lt;edit href=&quot;...&quot;&gt; in a FooML document, it can POST to the\nprovided URL with a BarML document&quot;\n\nThat is a valid way to document FooML and BarML service providers, but\nit then unduly constrains them: preventing the evolution of those\nservers.\n\nYou of course mention that HTML has a very generic mechanism to\nsupport this, and I&#39;m sure you don&#39;t misunderstand these things. I&#39;m\ntrying to highlight that most of these discussions start with a basic\nassumption of documenting the HTTP verbs and single transitions up\nfront.\n\nMy revised list of characteristics of a RESTful schema:\n1) One or more hypermedia document types.\n2) Discover URIs (don&#39;t hard code them)\n3) Prefer discoverable transition declarations over hard-coded transitions\n * embed some forms-like markup\n * enables URI-templating for GET requests\n * enables server extensions to messages (adding request-ID to support\nidempotent POSTs)\n * enables server evolution to vary the verb over time\n4) Assume multi-step processing (instead of always a single request/response)\n * HTTP redirects\n * Move from single POST to Reliable Post (POST then PUT...)\n * Support single to multi-stage interaction\n * Perhaps support a muti-stage interaction with a media-type for\ncomputer &quot;CPU taxing&quot; to slow down request speed\n\nI&#39;m beginning to imagine a RESTful schema is a mixture of the following:\n* at least one extensible hyperdocument type\n* a high-level state machine for each &quot;interesting&quot; resource type\n(this could be a standard markup)\n* a forms language that is embeddable within the hyperdocuments and is\npresent in the representations based on current state and available\ntransitions.\n\nThe biggest counter-example to this discovery process is efficiency.\nThe thesis clearly indicates that efficiency is sometimes reduced to\nachieve the other properties.\n\nIt seems that a reasonable strategy could be achieved to reach both\ndiscovery and efficiency by:\n* exposing cacheable resource transition representations (a WADL\ndocument cacheable for 1day for each transition??)\n* adding optimistic version locking to the transition representations\n\nAfter initial discovery a busy client service would directly POST a\nsingle representation with a version number from the transition doc\neither an embedded in the POST or as an HTTP header until either:\n* the cache time ran out,\n* the server failed with transition version mismatch.\n\nThe client would then simply rediscover and re-cache.\n\nLet me know what you think,\nJohn\n\n\nOn Dec 15, 2007 10:40 AM, Josh Sled &lt;jsled@...&gt; wrote:\n&gt; &quot;John D. Heintz&quot; &lt;jheintz@...&gt; writes:\n&gt; &gt; In my most recent post [2] I tried to explain this &quot;shared\n&gt; &gt; understanding&quot; as being in a Representation:\n&gt; &gt; * conforming to one or more shared schemas\n&gt; &gt; * be extensible\n&gt; &gt; * can&#39;t pre-define URIs\n&gt; &gt; * can&#39;t pre-constrain state transition paths (resource state\n&gt; &gt; transitions, not client)\n&gt;\n&gt; I think it has to constrain state-transition paths, to some degree.  That is,\n&gt; without intelligence, the possible state transitions (both sucessful/[23]xx\n&gt; codes and unsuccessful) need to be enumerated.  A machine client needs to\n&gt; know that after seeing &lt;edit href=&quot;...&quot;&gt; in a FooML document, it can POST to\n&gt; the provided URL with a BarML document, and that will either succeed or fail\n&gt; in the known ways.\n&gt;\n&gt; HTML has a very generic mechanism for this in forms.  APP has a more detailed\n&gt; yet generic model of Workspace&#39;ed Collections of Entries.\n&gt;\n&gt;\n&gt; &gt; Hmmm, I think the essential questions are:\n&gt; &gt; 1) What is the smallest (most constrained) shared understanding possible?\n&gt; &gt; 2) In what ways is that different from WSDL/WADL?\n&gt;\n&gt; After reading some of your [1], I&#39;d say that W*DL focus on describing\n&gt; particular interfaces, not the overall models and transitions of states;\n&gt; they&#39;re also apart from the hypermedia rather than within it.\n&gt;\n&gt; &gt; [1] http://johnheintz.blogspot.com/2007/11/just-in-rest-cant-handle-state.html\n&gt; &gt; [2] http://johnheintz.blogspot.com/2007/12/shared-understanding-andor-evolvability.html\n&gt;\n&gt; --\n&gt; ...jsled\n&gt; http://asynchronous.org/ - a=jsled; b=asynchronous.org; echo ${a}@${b}\n&gt;\n\n\n\n-- \nJohn D. Heintz\nPrincipal Consultant\nNew Aspects of Software\nhttp://newaspects.com\nhttp://johnheintz.blogspot.com\nAustin, TX\n(512) 633-1198\n\n"}}