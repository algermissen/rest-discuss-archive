{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":425722926,"authorName":"Roger Gonzalez","from":"Roger Gonzalez &lt;roger.gonzalez@...&gt;","profile":"spamspambakedbeansandspam","replyTo":"SENDER","senderId":"kWZKcGFJH50t9NvgLpxhSBVwQqcc47GQdTXcNIAyUYCciZylw-PxWr8092N-aG7v1tLRjhzo65QYdO-LEDgJNxIzuOCleQL8MzXq2cQHFkA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Methods and the uniform interface [was: Re: [rest-discuss] REST isn&#39;t hard to learn, it&#39;s just taught wrong.","postDate":"1261616042","msgId":14391,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCMzJCQkFBLjIwODA5MDdAZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkxMjIzMTMxNTEwLjgzYzNiODcyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDQ5OTg4ODQ0MDkxMjIxMDYwN3EzMTdlMmQ4aTQ3OWEzNjU2ZjQxMjViZWFAbWFpbC5nbWFpbC5jb20+CTxiNTQ4ZGY2NTA5MTIyMTA3MTl0MzdhODhmNzZ5ZGUxY2JlODdjNjY3NTA1YUBtYWlsLmdtYWlsLmNvbT4JPDQ5OTg4ODQ0MDkxMjIxMDg1M2k1OTJlNmQ1dTY3ZmI1ZmZmNzk3ZDBmMjRAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIyMTE5MzY0MC45YzY5M2E5YS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QjMxMDBBNC4xMDUwMDAxQGdtYWlsLmNvbT4gPDIwMDkxMjIzMTMxNTEwLjgzYzNiODcyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":14385,"nextInTopic":14393,"prevInTime":14390,"nextInTime":14392,"topicId":14293,"numMessagesInTopic":37,"msgSnippet":"... Your selective quotation of my message misses my point.  I m not talking about the uniform interface between components (as Roy is, which I agree is","rawEmail":"Return-Path: &lt;roger.gonzalez@...&gt;\r\nX-Sender: roger.gonzalez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 29952 invoked from network); 24 Dec 2009 00:54:10 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 24 Dec 2009 00:54:10 -0000\r\nX-Received: from unknown (HELO v0.net) (64.34.176.19)\n  by mta2.grp.sp2.yahoo.com with SMTP; 24 Dec 2009 00:54:10 -0000\r\nX-Received: from [10.8.0.6] ([10.8.0.6])\n\tby v0.net (8.14.3/8.14.3/Debian-5) with ESMTP id nBO0sDYt015967;\n\tThu, 24 Dec 2009 00:54:13 GMT\r\nMessage-ID: &lt;4B32BBAA.2080907@...&gt;\r\nDate: Wed, 23 Dec 2009 16:54:02 -0800\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Tim Williams &lt;williamstw@...&gt;, mike amundsen &lt;mamund@...&gt;,\n        berend@..., rest-discuss@yahoogroups.com\r\nReferences: &lt;499888440912210607q317e2d8i479a3656f4125bea@...&gt;\t&lt;b548df650912210719t37a88f76yde1cbe87c667505a@...&gt;\t&lt;499888440912210853i592e6d5u67fb5fff797d0f24@...&gt;\t&lt;20091221193640.9c693a9a.eric@...&gt;\t&lt;4B3100A4.1050001@...&gt; &lt;20091223131510.83c3b872.eric@...&gt;\r\nIn-Reply-To: &lt;20091223131510.83c3b872.eric@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Roger Gonzalez &lt;roger.gonzalez@...&gt;\r\nSubject: Re: Methods and the uniform interface [was: Re: [rest-discuss] REST\n isn&#39;t hard to learn, it&#39;s just taught wrong.\r\nX-Yahoo-Group-Post: member; u=425722926; y=MFIedXJJXCs3Ox7W2yHCTZyO67x20F6IvbFqelS_79Cho4_NGNTCxcl9QTPaEUpFDScc_A\r\nX-Yahoo-Profile: spamspambakedbeansandspam\r\n\r\nEric J. Bowman wrote:\n&gt; Roger Gonzalez wrote:\n&gt;   \n&gt;&gt; It strikes me as\n&gt;&gt; inefficient and unnecessarily revisionist to force every &quot;dumb&quot; media\n&gt;&gt; type to be wrapped and manipulated through a hypertext proxy\n&gt;&gt; resource. \n&gt;&gt;\n&gt;&gt;     \n&gt;\n&gt; This isn&#39;t revisionist; it&#39;s part of the REST architectural style.  Of\n&gt; course it&#39;s less efficient, the decsion is whether or not the benefits\n&gt; of the style outweigh the consequences:\n&gt;\n&gt; &quot;\n&gt; The trade-off, though, is that a uniform interface degrades efficiency,\n&gt; since information is transferred in a standardized form rather than one\n&gt; which is specific to an application&#39;s needs.\n&gt; &quot;\n&gt;\n&gt; If this degradation in efficiency outweighs the benefits of the uniform\n&gt; REST interface for your system, then don&#39;t apply this constraint.\n&gt;\n&gt; -Eric\n&gt;   \nYour selective quotation of my message misses my point.  I&#39;m not talking \nabout the uniform interface between components (as Roy is, which I agree \nis valuable), I&#39;m talking about your assertion that the uniform \ninterface does not apply to a resource whose client-side representation \nis not &quot;hypertexty&quot;, and that DELETE on an image isn&#39;t legal.  I believe \nthat it does apply, and that it is legal.\n\nI feel you&#39;re overreading &quot;hypertext is the engine&quot; as &quot;every \nrepresentation must be hypertext&quot;.  I strongly believe that it&#39;s \nperfectly legitimate to have initial hypertext point you to absolutely \nany resource, even those with a dumb media type, and you should be \nallowed to interact with that resource using the uniform interface.  \nIt&#39;s a leaf node in the hypertext graph.  There are layers of contract \ninvolved; the per-resource contract (what control messages will this \nparticular resource accept; i.e. what content types) but then there are \nhigher-level contracts (what operations can be performed on a given \nresource).\n\nIn an OO sense, given a Collection&lt;User&gt;, it wouldn&#39;t make sense for \nUser to have to implement DeletableFromCollections in order to be \ndeleted.  That actually interferes with abstraction; the User shouldn&#39;t \neven need to know whether it is ever in a collection, or sitting around \nas a temp object, or whatever.  Same goes for resources.  The confusion \nis that we think we&#39;re talking directly to the resource, but we really \naren&#39;t, we&#39;re talking through an agent.\n\nPUT: hey agent, here&#39;s a resource representation, m\n\nRoy sez: &quot;REST connectors provide a generic interface for accessing and \nmanipulating the value set of a resource.&quot;\n\nTherefore, there is nothing wrong with:\n\nGET /bob/assets\napplication/assets+json\n{\n     &quot;assets&quot;: [&quot;http://server/bob/vacation.jpg&quot;, \n&quot;http://server/bob/wife.gif&quot;]\n}\nDELETE /bob/vacation.jpg\n\nThe resource &quot;/bob/assets&quot; acted as the hypertext engine, linking me to \na bunch of image resources, and I sent a control message to the http \nconnector requesting that one of them be deleted.  The media type of the \nresource I deleted was frankly irrelevant.  The notion that I can&#39;t \ndelete an image/jpg off a server until someone creates a new &quot;hypertext \nimage&quot; format that advertises its own contract is what I object to.  \n(Besides, image/jpg is just a representation, the backing resource is \nanonymous to the client, so I fail to see why the &quot;manipulating the \nvalue set of a resource&quot; has to do with one representation rather than \nthe more important aspect: the uniform interface for the connector.)\n\n-rg\n\n\n"}}