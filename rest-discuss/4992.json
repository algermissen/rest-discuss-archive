{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159556043,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jalgermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"xXe1zDldyTUwAbcVG61I7JrrLC-YGdSe0cX6MHmgt7XIP_4-Su7ESf2kmwuHWq18az1Ev_JWckMV4TAi7yk0o19pzWku7nRBD1Ds0ryu96UxGba_0cA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] coding question","postDate":"1113075955","msgId":4992,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyNTgzMEYzLjkwMTA3MDFAdG9waWNtYXBwaW5nLmNvbT4=","inReplyToHeader":"PFBpbmUuTkVCLjQuNjIuMDUwNDA4MTgzMjU2MC4xNjUwNEBwYW5peDIucGFuaXguY29tPg==","referencesHeader":"PFBpbmUuTkVCLjQuNjIuMDUwNDA4MTgzMjU2MC4xNjUwNEBwYW5peDIucGFuaXguY29tPg=="},"prevInTopic":4991,"nextInTopic":4993,"prevInTime":4991,"nextInTime":4993,"topicId":4983,"numMessagesInTopic":14,"msgSnippet":"... Hi Lucas, I ve recently used an OO approach whith a base class Resource that implements  all methods  to return a 405. In subclasses of Resource you d","rawEmail":"Return-Path: &lt;jalgermissen@...&gt;\r\nX-Sender: jalgermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 644 invoked from network); 9 Apr 2005 19:46:06 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m14.grp.scd.yahoo.com with QMQP; 9 Apr 2005 19:46:06 -0000\r\nReceived: from unknown (HELO moutng.kundenserver.de) (212.227.126.190)\n  by mta4.grp.scd.yahoo.com with SMTP; 9 Apr 2005 19:46:06 -0000\r\nReceived: from [212.227.126.161] (helo=mrelayng.kundenserver.de)\n\tby moutng.kundenserver.de with esmtp (Exim 3.35 #1)\n\tid 1DKLu4-0005Yc-00; Sat, 09 Apr 2005 21:46:00 +0200\r\nReceived: from [85.176.12.98] (helo=[10.0.1.2])\n\tby mrelayng.kundenserver.de with asmtp (Exim 3.35 #1)\n\tid 1DKLu4-0006GY-00; Sat, 09 Apr 2005 21:46:00 +0200\r\nMessage-ID: &lt;425830F3.9010701@...&gt;\r\nDate: Sat, 09 Apr 2005 21:45:55 +0200\r\nUser-Agent: Mozilla Thunderbird 1.0 (Macintosh/20041206)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: lucas@...\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;Pine.NEB.4.62.0504081832560.16504@...&gt;\r\nIn-Reply-To: &lt;Pine.NEB.4.62.0504081832560.16504@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: kundenserver.de abuse@... auth:9fd5cd4d1b290f5c8d8bf21248da35c6\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Jan Algermissen &lt;jalgermissen@...&gt;\r\nReply-To: algermissen@...\r\nSubject: Re: [rest-discuss] coding question\r\nX-Yahoo-Group-Post: member; u=159556043\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nLucas Gonze wrote:\n\n&gt;\n&gt;What sort of idioms are other people using?  How do you keep the nesting \n&gt;under control?\n&gt;\n&gt;  \n&gt;\nHi Lucas,\n\nI&#39;ve recently used an OO approach whith a base class &#39;Resource&#39; that  \nimplements  all methods  to return a 405. In subclasses of Resource \nyou&#39;d simply overide the methods you want to implement.  Using the \nconfiguration facility of the server environment (in my case \nApache+mod_perl) I registered the derived classes for the desired URI \nspaces.\n\nI also implemented the resource classes described in Mark&#39;s &quot;Abstract \nModel for HTTP Resource State&quot;[1], with the result  of a handy \nimplementation of a &#39;Container Resource&#39; that handled the dispatching of \nGETs and POSTs etc. to the container or to any of it&#39;s items.\nBy subclassing that one (and overiding methods like \ndo_GET_to_container() or do_DELETE_to_item()) I got pretty clean code in \nthe end.\n\nOTH I think that there must be even simpler approaches to map legacy \napplications to HTTP+RDF. I am vaguely thinking about an (automatic? or \ndeclarative?) mapping from an applications OO model (or an RDBMS schema) \nto an RDF schema for the resource representations.  My brain hasn&#39;t made \nthe neccessary connections yet to fully understand this, though.\n\nAnother thought is to use Mark&#39;s resource classes and his RDFForms to \ncreate resource descriptions (in RDF) that you can generate most of the \nwrapper code automatically. You&#39;d then simply add the glue code to your \nlegacy app. I think that is even better than the method-overiding approach.\n\nJan\n\n[1] \nhttp://www.markbaker.ca/2001/09/draft-baker-http-resource-state-model-01.txt\n\n&gt;Thanks.\n&gt;\n&gt;- Lucas\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;\n&gt;\n&gt;\n&gt;  \n&gt;\n\n\n-- \nJan Algermissen\nConsultant & Programmer\nhttp://jalgermissen.com\n\n\n\n"}}