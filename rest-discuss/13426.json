{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"1CRKuPvIQx3UZRAKPjFcca0f9-F9TIuD2U-JfnvEuix9ThI11Vb7Gb6rfMHzTIoSK3NtQxVsnVYSmR6r0kChK_FdzwsWEfuSRDTh_w","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Avoid envelope formats","postDate":"1253504562","msgId":13426,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGg5NnNuaSs2ajlhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJMVTEwMi1EUzEwNUE3RTVGOEU5Njg4MzNBNTBEOEI1REYwQHBoeC5nYmw+"},"prevInTopic":13394,"nextInTopic":13427,"prevInTime":13425,"nextInTime":13427,"topicId":13371,"numMessagesInTopic":38,"msgSnippet":"Huh? So now it s HEADERS as the engine of application state ? ;-) I can see a link header replacing the  elements of an Atom entry document or I suppose","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34091 invoked from network); 21 Sep 2009 03:43:49 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m3.grp.sp2.yahoo.com with QMQP; 21 Sep 2009 03:43:49 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta2.grp.re1.yahoo.com with SMTP; 21 Sep 2009 03:43:48 -0000\r\nX-Received: from [69.147.65.150] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 21 Sep 2009 03:42:43 -0000\r\nX-Received: from [98.137.34.36] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 21 Sep 2009 03:42:43 -0000\r\nDate: Mon, 21 Sep 2009 03:42:42 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;h96sni+6j9a@...&gt;\r\nIn-Reply-To: &lt;BLU102-DS105A7E5F8E968833A50D8B5DF0@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: Avoid envelope formats\r\nX-Yahoo-Group-Post: member; u=221173245; y=yqINdGHPMHrOkGnbq1dNP6vy0KtThMyHZxouGTrHd-Ela_IW1w\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nHuh?\nSo now it&#39;s &quot;HEADERS as the engine of application state&quot;? ;-)\n\nI can s=\r\nee a link header replacing the &lt;link&gt; elements of an Atom entry document or=\r\n I suppose any other hypermedia link that applies to the entire document/bo=\r\ndy.\n\nBut hypermedia allows you to structure your information and apply link=\r\ns to specific parts of that structure. For example, an Atom feed document h=\r\nas individual entries, each of which may have &lt;link&gt; elements that apply on=\r\nly to the containing entry. You couldn&#39;t pull all those links out into the =\r\nHTTP headers could you? Nor could you pull all of the hyperlinks out of an =\r\nHTML document. Hypermedia also allows you to attach other instructions on u=\r\nsing a link (e.g. Forms). I don&#39;t see that being carried into HTTP headers =\r\nvery easily.\n\nSo I&#39;m with you that an entry document on it&#39;s own could be r=\r\neplaced by straight content with link headers. I have a harder time seeing =\r\nAtom service documents or feed documents working that way. And then entry d=\r\nocuments just become a matter of consistency with the feed format -- having=\r\n to work with multiple encodings of the same metadata would be a bit painfu=\r\nl.\n\nI just don&#39;t get the Atom hating here as I find it very useful. AtomPub=\r\n provides a very constrained hypermedia-driven state machine model that is =\r\neasy for machine-driven clients to interpret and follow.\nSaying a URL is th=\r\ne location of a collection drives the state machine. Saying that a URL is a=\r\nn entry&#39;s edit link drives the state machine.\n\nYou need Atom (or something =\r\nlike it) to complement HTTP in a RESTful system even if you are just implem=\r\nenting CRUD (Yes I know REST is not restricted to CRUD, but it works for a =\r\nlot of use cases). Hypermedia needs to define the &quot;collections of things yo=\r\nu can POST to&quot; and the media types they accept. You need some way to repres=\r\nent the collection -- links to and descriptions of the things that were cre=\r\nated and can now be retrieved, updated and deleted. One analogy might be th=\r\nat HTTP brings the file operations and Atom brings the directory structure.=\r\n\n\nAtom is REST perhaps slightly refactored -- the hypermedia format is a co=\r\nmbination two distinct formats: one, Atom, that is driving the state machin=\r\ne, and the content format that represents resource state. Whereas in the We=\r\nb, HTML plays both these roles (though an HTML repository of say Word docum=\r\nents yields a similar division responsiblity as with Atom).\n\nAn Atom client=\r\n is a two stage processor -- one stage for the Atom/AtomPub processing and =\r\none stage for the content processing. Because the Atom semantics of collect=\r\nions and entries are more general than a single service, the Atom stage is =\r\ndecoupled from individual services and reusable across all Atom services. J=\r\nust as the browser is decoupled from web sites (even sites that serve it co=\r\nntent in proprietary formats that it has to hand off to other programs).\n\nP=\r\nroprietary content formats do provide a form of coupling. There, open, gene=\r\nral (standard or non-service specific) formats are best. So say an Atom fee=\r\nd of vCards for representing a set of person records supporting CRUD operat=\r\nions. (I still don&#39;t get why Google didn&#39;t do exactly that for their contac=\r\nts API.)\n\nFor me, the decoupling and reuse are the key reasons REST is inte=\r\nresting. Atom doesn&#39;t get you all the way there if it is being used with a =\r\nproprietary content format, but it gets better decoupling than most of the =\r\nalternative approaches I&#39;ve seen. It&#39;s not the only way to do REST though -=\r\n- even for machine-driven clients. But I have a hard time with it being rec=\r\nommended against outright as it&#39;s a very useful hypermedia format.\n\nRegards=\r\n,\n\nAndrew Wahbe\n\n\n\n--- In rest-discuss@yahoogroups.com, &quot;Sebastien Lambla&quot; =\r\n&lt;seb@...&gt; wrote:\n&gt;\n&gt; Indeed. We have message and entity headers. It&#39;s like =\r\na big elephant in the\n&gt; room that some crowds prentend are not hter because=\r\n they&#39;re headers.\n&gt; \n&gt; If it doesn&#39;t fit in an http header, you&#39;re probably=\r\n doing it wrong.\n&gt; \n&gt; &gt; -----Original Message-----\n&gt; &gt; From: rest-discuss@y=\r\nahoogroups.com [mailto:rest-\n&gt; &gt; discuss@yahoogroups.com] On Behalf Of Subb=\r\nu Allamaraju\n&gt; &gt; Sent: 18 September 2009 20:37\n&gt; &gt; To: Chuck Hinson\n&gt; &gt; Cc:=\r\n Rest List\n&gt; &gt; Subject: Re: [rest-discuss] Avoid envelope formats\n&gt; &gt; \n&gt; &gt; =\r\nEnvelope formats, if not designed and used carefully, can reduce the\n&gt; &gt; vi=\r\nsibility of the uniform interface. An example is an application\n&gt; &gt; encodin=\r\ng some &quot;application/foobar&quot; within atom:content. When used like\n&gt; &gt; this, t=\r\nhe protocol aspects become less useful, which is the same as\n&gt; &gt; tunneling.=\r\n\n&gt; &gt; \n&gt; &gt; HTTP does include an envelope format, although it is rarely descr=\r\nibed\n&gt; &gt; as such. HTTP messages use a MIME-like format &quot;containing\n&gt; &gt; meta=\r\ninformation about the data transferred and modifiers on the\n&gt; &gt; request/res=\r\nponse semantics&quot; (sec 1.1, RFC-2616). This format is\n&gt; &gt; visible and extens=\r\nible. When you start to design representations based\n&gt; &gt; on this characteri=\r\nstic, you may find that there is no need for any\n&gt; &gt; other payload format.\n=\r\n&gt; &gt; \n&gt; &gt; Subbu\n&gt; &gt; \n&gt; &gt; On Sep 18, 2009, at 12:15 PM, Chuck Hinson wrote:\n&gt;=\r\n &gt; \n&gt; &gt; &gt; The following statement is on the REST-* architectural goals page=\r\n:\n&gt; &gt; &gt;\n&gt; &gt; &gt; &quot;Whenever possible, avoid envelope formats. Examples of envel=\r\nope\n&gt; &gt; &gt; formats are SOAP and Atom. Envelope formats encourage tunneling o=\r\nver\n&gt; &gt; &gt; HTTP instead of leveraging HTTP. They also require additional\n&gt; &gt;=\r\n &gt; complexities on both the client and the server.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Is this elab=\r\norated on somewhere? I don&#39;t think I&#39;ve ever heard the\n&gt; &gt; &gt; argument made =\r\nbefore and I&#39;m not sure I get why an envelope format is\n&gt; &gt; &gt; intrinsically=\r\n good or bad in a protocol. It seems orthogonal to\n&gt; &gt; &gt; whether something =\r\nis RESTful or not.\n&gt; &gt; &gt;\n&gt; &gt; &gt; --Chuck\n&gt; &gt; &gt;\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; -----------=\r\n-------------------------\n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}