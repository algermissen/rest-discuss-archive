{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"QxEimkeaO829BCAeKBMYEfnq4TD5R_lQL-uqs1Rk22dvVRWRvkWytRAHuIvgiBExxZMLSNH-mzO1_j5k-CPxaNqxsQA-Rg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and the Web","postDate":"1031681433","msgId":2498,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEN0UzNTk5LjMwNzA1MDFAcHJlc2NvZC5uZXQ+","referencesHeader":"PDAwMDEwMWMyNThjNiRlYTFlZWY2MCQ0ZTAxYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":2497,"nextInTopic":2515,"prevInTime":2497,"nextInTime":2499,"topicId":2493,"numMessagesInTopic":19,"msgSnippet":"... I don t think that PUT and DELETE are core to REST. They are just logical extensions of HTTP s two core methods of GET and POST. Fielding s interface","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 10 Sep 2002 23:04:24 -0000\r\nReceived: (qmail 1772 invoked from network); 10 Sep 2002 23:04:24 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m7.grp.scd.yahoo.com with QMQP; 10 Sep 2002 23:04:24 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.scd.yahoo.com with SMTP; 10 Sep 2002 23:04:24 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8AN4Ml13814;\n\tTue, 10 Sep 2002 16:04:22 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8AN4Li15870;\n\tTue, 10 Sep 2002 16:04:21 -0700\r\nMessage-ID: &lt;3D7E3599.3070501@...&gt;\r\nDate: Tue, 10 Sep 2002 11:10:33 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.1) Gecko/20020826\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: Seairth Jacobs &lt;seairth@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] REST and the Web\r\nReferences: &lt;000101c258c6$ea1eef60$4e01a8c0@seairthlaptop&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nSeairth Jacobs wrote:\n&gt;...\n\n&gt; HTTP is not as RESTful as we would all like to believe.  For years, people\n&gt; have been building web sites, mostly static pages.  Did these people use\n&gt; HTTP PUT to update the server?  Absolutely not!  They used FTP.  They used\n&gt; the access to their HTTP server through their local network.  To some\n&gt; extent, they even used HTML Form-base file uploads via POST.  But PUT?\n&gt; Hardly.  The exact same could be said for DELETE.\n\nI don&#39;t think that PUT and DELETE are core to REST. They are just \nlogical extensions of HTTP&#39;s two core methods of GET and POST. \nFielding&#39;s interface doesn&#39;t say WHAT generic interface you should use, \njust that you should use one.\n\n&gt; So, then we are left with POST and GET.  How do their &quot;typical&quot; usage play\n&gt; out in the REST arena?  Well, as has been pointed out by many, many threads\n&gt; on this very list, POST is often missused.  I&#39;d even be willing to bet that\n&gt; the vast majority of uses for POST are wrong in the eyes of REST.\n\nIt might be accurate to say that most uses of POST are wrong in one way \nor the other. But how many object oriented programs do not 100% conform \nto that paradigm? The important thing is that the *best* web-based \nservices tend to use REST principles quite a bit, and the more they do \nthe better they tend to get -- at least from the client&#39;s perspective. \nThe more they uniquely identify things with URIs, the more the client \ncan bookmark. The more they use GET for GET and POST for POST the fewer \nissues they will have with spiders that trigger actions or things that \nshould be bookmarkable but aren&#39;t. The less they use cookies, the easier \nit is for customers to move between devices. etc.\n\n&gt;...\n&gt; So, how can people say that &quot;The Web proves that REST works&quot;?  It&#39;s because\n&gt; one (GET) of the four major HTTP verbs provides for 90% or more of the\n&gt; proof. POST provides the most of the remaining percentage, and even though\n&gt; many consider its usage to often be non-RESTful, we&#39;ll conveniently ignore\n&gt; that.  And, as usual, PUT and DELETE are pretty much non-existant (in terms\n\nREST isn&#39;t GET+PUT+POST+DELETE. It&#39;s identification of resources (name a \nwebsite without a URL ;) ), manipulation of resources through \nrepresentations (e.g. form-encoded), self-descriptive messages and \nhypermedia as the engine of application state, universal interfaces, ... \nYou can do these things with only two methods. Having four instead \nincreases interoperability and I would have no compunction about going \nbeyond four (e.g. adding WATCH or NOTIFY or maybe GETCHILDREN).\n\n\n&gt; In the end, this does not make the Web a killer app that proves REST works.\n&gt; If anything, it proves that certain aspects of REST work (i.e. GET).  Beyond\n&gt; that, I am beginning to feel that HTTP has as much to prove as a truly\n&gt; RESTful tool as does just about any other web-based technology out there\n&gt; right now....\n\nHTTP explicitly supports the things I describe above. Other protocols \ndon&#39;t. That doesn&#39;t mean that HTTP is perfect but it is the starting \npoint. BTW, if you look at BEEP, the issues they punt on are exactly the \nissues that HTTP addresses.\n\n  Paul Prescod\n\n\n\n"}}