{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"3QmWnJOck3I6WMg1yiJHZiBErD8OMxQviMsg8w-gTDmzaxttM4Y1wz0NlfZqT-FzSZejgN-ejSDpmsgGpLnB1xfUsf864Ymw_416cB4sNg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Resource Deltas","postDate":"1256666156","msgId":13963,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMDI3MTA1NTU2Ljk5MDYxZGFmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDU1OGI3M2ZiMDkxMDI3MDUyN3A1Zjc4ODFmMXc1NzcwOTdmZmVjOGUzMmQ3QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1OGI3M2ZiMDkxMDIxMDU0M243ZDE1YWU1NnIyMzllMGY2OTk4YTFmYjZlQG1haWwuZ21haWwuY29tPgk8NTU4YjczZmIwOTEwMjcwNTI3cDVmNzg4MWYxdzU3NzA5N2ZmZWM4ZTMyZDdAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13961,"nextInTopic":13964,"prevInTime":13962,"nextInTime":13964,"topicId":13905,"numMessagesInTopic":10,"msgSnippet":"... I understand exactly what you re after.  The problem here is that your proposed solution may be perfectly valid HTTP, but it isn t REST.  I don t believe","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25623 invoked from network); 27 Oct 2009 17:56:43 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.re1.yahoo.com with QMQP; 27 Oct 2009 17:56:43 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 27 Oct 2009 17:56:43 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id A59FB509DD;\n\tTue, 27 Oct 2009 13:56:12 -0400 (EDT)\r\nDate: Tue, 27 Oct 2009 10:55:56 -0700\r\nTo: Michael Crute &lt;mcrute@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20091027105556.99061daf.eric@...&gt;\r\nIn-Reply-To: &lt;558b73fb0910270527p5f7881f1w577097ffec8e32d7@...&gt;\r\nReferences: &lt;558b73fb0910210543n7d15ae56r239e0f6998a1fb6e@...&gt;\n\t&lt;558b73fb0910270527p5f7881f1w577097ffec8e32d7@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Resource Deltas\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMichael Crute wrote:\n&gt; \n&gt; With\n&gt; that in mind the patch approach doesn&#39;t work as well and canonical XML\n&gt; is a little overkill for this project.\n&gt; \n\nI understand exactly what you&#39;re after.  The problem here is that your\nproposed solution may be perfectly valid HTTP, but it isn&#39;t REST.  I\ndon&#39;t believe REST is the solution to all problems.  I do believe it&#39;s\nimportant to understand where a system deviates from REST, in order to\nevaluate the system in terms of desired properties.  Understanding what\nconstraints aren&#39;t being met, and what the consequences are, is what\nsoftware architecture is all about.\n\nYour solution may very well be best-suited to your needs -- I am not in\na position to weigh the benefits of long-term scaling vs. short-term\ndevelopment costs.  If you do need scaling, the higher deployment cost\nof a REST architecture (in this case) is likely offset.  You surely\nhave other criteria I&#39;m not aware of.  Understanding your system as it\nrelates to REST, allows you to define your solution as its own\narchitectural style (set of constraints).\n\n&gt;\n&gt; After re-reading the header portion of the HTTP spec it would seem\n&gt; perfectly legitimate for me to send back a 206 response to a GET\n&gt; request that contains an If-Modified-Since header. The body of that\n&gt; reply would be the changed records since the last time the client\n&gt; downloaded the resource.\n&gt; \n\nIf I curl this resource, the application state I receive in response\ntells me... what?  So, I need some sort of black-box client that knows\nhow to merge this into some previous application state, without\nfollowing hypertext in the response?  This indicates that out-of-band\ninformation is driving the application.  I&#39;m not saying it can&#39;t be\ndone, I&#39;m just saying the hypertext constraint isn&#39;t being applied.\n\nWhat if your solution were to return an XSLT 2 patch, instead?  When\nthe update is requested, the server writes the request REFERER to the\nresponse as an XSLT document() call.  Instead of being a black box, the\nclient implements the linking and processing rules of a well-known media\ntype (application/xslt+xml).  The URI is changed to indicate a version,\nthe document() call loads the previous application state from the client\ncomponent&#39;s cache connector, transforming it into the new steady-state\nthe user requested.\n\nUsing curl, I can see the REFERER hyperlink in the document() function\nof the returned XSLT, and I can tell by the media type that the\nresponse is to be executed by an XSLT 2 processor.  Nothing out-of-band\ndriving the interaction, there, so the hypertext constraint is\nsuccessfully applied. I do know from working with XSLT, though, that\ngenerating dynamic XSLT on-the-fly at the server is expensive to\ndevelop, and perhaps overly complex a solution to any problem.\n\nWhich brings me back to CPATCH, or using RHTTP to PATCH in reverse.\nAnyway, you&#39;re in one of those ill-defined areas of REST here, where\nthere&#39;s more theory than hands-on experience.  So do what best suits\nyour project&#39;s needs, with an understanding of what constraint(s) you\naren&#39;t applying and why.  But do keep an eye on the work being done in\nthis area, like RHTTP, because in a few more years these things may have\ngone from cutting-edge experiments to common practice.  Then, a RESTful\nsolution to your problem is less expensive to develop and more widely\nunderstood -- both good reasons to not use REST to solve your specific\nproblem today.\n\n-Eric\n\n"}}