{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"Roy T. Fielding &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"5eZwvGy3LEoFR7ws9EwepR2SIOQMySKML4dTRGOf1h6yMtILLiNOkbhTDxQYUuil_pGYhCyK-FqtvfDsf0Dm3LtX-pNltsEZNKw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and the design of HTTP methods","postDate":"1104474537","msgId":4741,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwMDNCNEVDLTVBRjUtMTFEOS1CM0FGLTAwMEQ5MzMyNEFENkBnYml2LmNvbT4=","inReplyToHeader":"PDQxRDQ4OTUxLjIwOTA2MDJAZ214LmRlPg==","referencesHeader":"PGNxcnJ0Mys4ZGxtQGVHcm91cHMuY29tPiA8MTEwNDI3NTkyMS4yMzU3OC4zMC5jYW1lbEBwaG9lbml4PiA8QzUxMDY4ODQtNTk0Mi0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8MTEwNDMzMTY3OC4yMzU2My4yMy5jYW1lbEBwaG9lbml4PiA8N0VCQ0VEM0YtNUEwQS0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8QkFZMTAxLURBVjE2NDVCRjIyODlGRkNCRTIxMThGRkREODlDMEBwaHguZ2JsPiA8NDFENDIzNzYuODA2MDVAZ214LmRlPiA8RTg4QjFCNEItNUFCMC0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8NDFENDg5NTEuMjA5MDYwMkBnbXguZGU+"},"prevInTopic":4740,"nextInTopic":4742,"prevInTime":4740,"nextInTime":4742,"topicId":4721,"numMessagesInTopic":25,"msgSnippet":"... That wasn t what I meant, though depth is certainly another can of worms. I guess that is another reason why PROPFIND is not cacheable. I meant that the","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 83767 invoked from network); 31 Dec 2004 06:29:22 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m23.grp.scd.yahoo.com with QMQP; 31 Dec 2004 06:29:22 -0000\r\nReceived: from unknown (HELO fed1rmmtao09.cox.net) (68.230.241.30)\n  by mta4.grp.scd.yahoo.com with SMTP; 31 Dec 2004 06:29:22 -0000\r\nReceived: from [192.168.0.100] (really [68.4.71.218])\n          by fed1rmmtao09.cox.net\n          (InterMail vM.6.01.04.00 201-2131-117-20041022) with ESMTP\n          id &lt;20041231062857.COSK2638.fed1rmmtao09.cox.net@[192.168.0.100]&gt;;\n          Fri, 31 Dec 2004 01:28:57 -0500\r\nIn-Reply-To: &lt;41D48951.2090602@...&gt;\r\nReferences: &lt;cqrrt3+8dlm@...&gt; &lt;1104275921.23578.30.camel@phoenix&gt; &lt;C5106884-5942-11D9-B3AF-000D93324AD6@...&gt; &lt;1104331678.23563.23.camel@phoenix&gt; &lt;7EBCED3F-5A0A-11D9-B3AF-000D93324AD6@...&gt; &lt;BAY101-DAV1645BF2289FFCBE2118FFDD89C0@...&gt; &lt;41D42376.80605@...&gt; &lt;E88B1B4B-5AB0-11D9-B3AF-000D93324AD6@...&gt; &lt;41D48951.2090602@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v619)\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;4003B4EC-5AF5-11D9-B3AF-000D93324AD6@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nCc: rest discuss &lt;rest-discuss@yahoogroups.com&gt;,\n &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nDate: Thu, 30 Dec 2004 22:28:57 -0800\r\nTo: Julian Reschke &lt;julian.reschke@...&gt;\r\nX-Mailer: Apple Mail (2.619)\r\nX-eGroups-Remote-IP: 68.230.241.30\r\nFrom: Roy T. Fielding &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] REST and the design of HTTP methods\r\nX-Yahoo-Group-Post: member; u=175757792\r\nX-Yahoo-Profile: roy_fielding\r\n\r\n&gt;&gt; PROPFIND, PROPPATCH, LOCK, and UNLOCK do not have identifiable \n&gt;&gt; resources\n&gt;&gt; (they all operate by way of a third party).  Is PROPPATCH always\n&gt;\n&gt; Could you please expand on what you mean by &quot;they operate by way of a\n&gt; third party&quot; (is this about the Depth request header?)? For instance,\n&gt; the results for a PROPFIND applied to the same Request-URI will vary \n&gt; for\n&gt; Depth 0 (just the Request-URI), 1 (+ internal members) and infinity (+\n&gt; all descendants).\n\nThat wasn&#39;t what I meant, though depth is certainly another can of \nworms.\nI guess that is another reason why PROPFIND is not cacheable.\n\nI meant that the client is using the resource URI to access other\nresources that just happen to be properties of the resource URI.  The\nindirection means that the client has no way to identify those \nproperties\nas resources, apply access control to them as resources, version them as\nresources, etc.\n\n&gt;&gt; idempotent?\n&gt;\n&gt; I would think so. PROPPATCH can either set (&quot;PUT&quot;) or remove (aka\n&gt; &quot;DELETE&quot;) a property.\n\nokay.\n\n....Roy\n\n\n"}}