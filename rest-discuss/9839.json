{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229827793,"authorName":"Steve Loughran","from":"&quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;","profile":"steve_loughran","replyTo":"SENDER","senderId":"I6t-Ksp4gazGXHdcA9KWObKTmCqOjFNSkA68oUiY7z7jnCYwHlix9G8NFjrkP2IG2owPvSmS2ki1lpymLFF_w8KX_63hy_Pc8lL55caiURCsOrBakPhUopebErbNom4","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] REST over XMPP","postDate":"1195216926","msgId":9839,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlkYzc4ZDdiMDcxMTE2MDQ0MnM2MThhMzAxZHVjMjVjNWMyMjA4ZTdmODE1QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDY4ZGIzZWE3MDcxMTE1MTQ0M3QxMzg3ZTA3YngzYzhlODVmZjljODRlNDExQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDlkYzc4ZDdiMDcxMTA5MDU0OXYxNDRlNmQ2OHJhYmRhNjA0MDJhNjNlNThiQG1haWwuZ21haWwuY29tPgkgPDY4ZGIzZWE3MDcxMTE1MTQ0M3QxMzg3ZTA3YngzYzhlODVmZjljODRlNDExQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":9835,"nextInTopic":0,"prevInTime":9838,"nextInTime":9840,"topicId":9790,"numMessagesInTopic":3,"msgSnippet":"... I didnt do that research; a bit of delegation by asking the list :) ... we have anubis, a fault tolerant/partition aware tuple space for  a single physical","rawEmail":"Return-Path: &lt;steve.loughran.soapbuilders@...&gt;\r\nX-Sender: steve.loughran.soapbuilders@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4223 invoked from network); 16 Nov 2007 12:42:07 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m42.grp.scd.yahoo.com with QMQP; 16 Nov 2007 12:42:07 -0000\r\nX-Received: from unknown (HELO py-out-1112.google.com) (64.233.166.179)\n  by mta15.grp.scd.yahoo.com with SMTP; 16 Nov 2007 12:42:06 -0000\r\nX-Received: by py-out-1112.google.com with SMTP id u77so4333767pyb\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 16 Nov 2007 04:42:06 -0800 (PST)\r\nX-Received: by 10.35.68.3 with SMTP id v3mr2147799pyk.1195216926244;\n        Fri, 16 Nov 2007 04:42:06 -0800 (PST)\r\nX-Received: by 10.35.85.14 with HTTP; Fri, 16 Nov 2007 04:42:06 -0800 (PST)\r\nMessage-ID: &lt;9dc78d7b0711160442s618a301duc25c5c2208e7f815@...&gt;\r\nDate: Fri, 16 Nov 2007 12:42:06 +0000\r\nCc: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;68db3ea70711151443t1387e07bx3c8e85ff9c84e411@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;9dc78d7b0711090549v144e6d68rabda60402a63e58b@...&gt;\n\t &lt;68db3ea70711151443t1387e07bx3c8e85ff9c84e411@...&gt;\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: &quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;\r\nSubject: Re: [rest-discuss] REST over XMPP\r\nX-Yahoo-Group-Post: member; u=229827793; y=LMwj_MiUQjA5c75V7AogFwKxqUzAJH_ogZ9ror_eDhbwTk7aVoYs3k4\r\nX-Yahoo-Profile: steve_loughran\r\n\r\nOn Nov 15, 2007 10:43 PM, Stian Soiland &lt;stian@...&gt; wrote:\n&gt; On 11/9/07, Steve Loughran &lt;steve.loughran.soapbuilders@...&gt; wrote:\n&gt; &gt;  I want to use XMPP as the routing protocol; to send data to things\n&gt; &gt;  (processes) deployed on machines without fixed IP addresses (say on\n&gt; &gt;  Ec2 or similar). I also want the option of using the same front end to\n&gt; &gt;  talk to classic HTTP(S)  accessible systems.\n&gt;\n&gt; Firstly, did you look at http://code.google.com/p/xeerkat/  ? (I don&#39;t\n&gt; know the project, but it&#39;s the second google hit for p2p rest)\n\n\nI didnt do that research; a bit of delegation by asking the list :)\n\n&gt;\n&gt;\n&gt; I&#39;ve been thinking about a similar setup for my (still quite\n&gt; theoretical) distributed file system. However, I wouldn&#39;t want to use\n&gt; XMPP as it still requires a server setup, and would like to use a true\n&gt; p2p system such as JXTA or something simpled built on distributed hash\n&gt; tables.\n\nwe have anubis, a fault tolerant/partition aware tuple space for  a\nsingle physical site (it uses multicast ip). I wouldn&#39;t try and\nretrofit REST to a t-space, as it is its own unique way of sharing\ninformation without nodes knowing each other. But even there, I&#39;ve\nthought of adding a URI just so that I can have it serve up artifacts\nfor RMI to handle in its classloader list -I&#39;d publish code in the\nspace and have RMI download JARs on demand from anything that held\nthem. But really, I&#39;d be better off not using RMI :)\n\n&gt;\n&gt; I agree that having a jabber account per resource would be very modern\n&gt; and decoupled and all that. (or at least unique &quot;to&quot; addresses - maybe\n&gt; there is a way to hack multiple addresses from a single account in\n&gt; Jabber with some prefix or postfix? Something similar to how qmail can\n&gt; be configured to receive emails to\n&gt; youraccount-whateveryouwant@...)\n\nAs was pointed out to me in private email, every address in XMPP has\nan ID and a location, which is now xeerkat works. they also include\nthe return address in the request:\nxeerkat://{sender-id}/{sender-resource}/{receiver-id}/{receiver-resource}/{path}\n\nI would prefer an http header, though obviously not a single line\nequivalent of WS-Addressing.\n\n&gt;\n&gt; If you use p2p groups you can just use some UUID (or even a virtual\n&gt; HTTP URI) as the resource identifiers and submit it to the p2p message\n&gt; group in a HTTP-like message:\n&gt;\n&gt;   PUT http://myapp.com/p2p/nodes/a87497f6-65b0-4c0d-a988-4f5f1ccdea88/ip4\n&gt;   Content-Type: text/plain\n&gt;\n&gt;   156.282.22.14:2331\n&gt;\n&gt; could for instance be a way a node registered itself.  (Coupled with\n&gt; some appropriate signatures to prove that the PUT came from\n&gt; a87497f6-65b0-4c0d-a988-4f5f1ccdea88). Note that there wouldn&#39;t\n&gt; necessarily be anything on http://myapp.com/p2p/ - the URIs only serve\n&gt; as identificators within the application. Requests would be sent out\n&gt; on the p2p group similarly:\n&gt;\n&gt;   GET http://myapp.com/p2p/nodes/a87497f6-65b0-4c0d-a988-4f5f1ccdea88/last_seen\n&gt;\n&gt; The nodes who according to say the distributed hash table knows about\n&gt; a87497f6-65b0-4c0d-a988-4f5f1ccdea88 would then reply with an\n&gt; appropriate representation of the resource, even if the node\n&gt; a87497f6-65b0-4c0d-a988-4f5f1ccdea88 himself was now even offline.\n&gt;\n&gt; Of course you could have resources that are living freely outside &quot;nodes&quot;:\n&gt;\n&gt;   PUT http://myapp.com/p2p/notes/7f5fd142-af5f-4c2a-9395-7df4f51fdc04\n&gt;   Content-Type: text/plain\n&gt;\n&gt;   This is a note.\n&gt;\n&gt;\n&gt; Depending on which p2p framework is used, it might or might not be\n&gt; necessary to add some headers to identify that particular GET and POST\n&gt; requests, who&#39;s requesting, and who&#39;s replying. In addition you would\n&gt; have issues with authority, for instance it could be difficult for\n&gt; anyone to say 404, because all except the responsible nodes wouldn&#39;t\n&gt; know about the resource, and so you can&#39;t know if it&#39;s a real 404 or\n&gt; just connection timed out. (which doesn&#39;t have a HTTP status code\n&gt; ASFAK).\n&gt;\n&gt;\n&gt; I&#39;m not so sure how clever it is to use &quot;http://&quot; URIs in such an\n&gt; application, as it would not distinguish between real HTTP URLs and\n&gt; p2p-based ones, so a different protocol name is probably preferable,\n&gt; for instance urn:myapp.com:p2p/nodes/a87497f6-65b0-4c0d-a988-4f5f1ccdea88\n\n\nIf you used a different URI, you could patch a new URI handler into\nthe Java root classloader, so anything that resolved URLs would be\nable to open your nodes. I think you can also do the same to IE,\nthough it is probably hard to do and even harder to do securely.\nInteresting thought though, and similar to what I was thinking of for\nbonding to our tuplespace.\n\n-steve\n\n"}}