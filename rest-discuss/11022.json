{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"hQFLoObcHnDbcxpS1OteSJKuFBqkkmg5EpVQ0KyCMVdih0wUhVysdRpjlgibRl4Vx8RSH32oRDJAz5zk1sfe21ziz8ld4php8wI_wg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Query string format","postDate":"1215650942","msgId":11022,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDQ4NzU1QzdFLjMwMDA0MDdAZ21haWwuY29tPg==","inReplyToHeader":"PFAtSVJDLUVYQkUwMkhWYnhaWEEwMDAwMjg0NUBFWC5VQ09QLkVEVT4=","referencesHeader":"PDg0NTU5MS45MzE5OS5xbUB3ZWI1NTkxMS5tYWlsLnJlMy55YWhvby5jb20+CTxDNTE4NjI1RS0xMzhBLTQ1NzctOENCQy0xOTQwQjBFMDlEQ0VAc3ViYnUub3JnPgk8NDg3NTNDNzEuOTAyMDQwNkBnbWFpbC5jb20+IDxQLUlSQy1FWEJFMDJIVmJ4WlhBMDAwMDI4NDVARVguVUNPUC5FRFU+"},"prevInTopic":11021,"nextInTopic":11023,"prevInTime":11021,"nextInTime":11023,"topicId":11011,"numMessagesInTopic":23,"msgSnippet":"... Interesting ... I first noticed this behavior with Squid[1], when I was experimenting with trying to cache the results of Google-like search requests that ","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nReceived: (qmail 38755 invoked from network); 10 Jul 2008 02:41:35 -0000\r\nReceived: from unknown (66.218.67.95)\n  by m56.grp.scd.yahoo.com with QMQP; 10 Jul 2008 02:41:35 -0000\r\nReceived: from unknown (HELO n47a.bullet.mail.sp1.yahoo.com) (66.163.168.141)\n  by mta16.grp.scd.yahoo.com with SMTP; 10 Jul 2008 02:41:34 -0000\r\nReceived: from [216.252.122.216] by n47.bullet.mail.sp1.yahoo.com with NNFMP; 10 Jul 2008 02:41:34 -0000\r\nReceived: from [66.218.69.6] by t1.bullet.sp1.yahoo.com with NNFMP; 10 Jul 2008 02:41:34 -0000\r\nReceived: from [66.218.66.80] by t6.bullet.scd.yahoo.com with NNFMP; 10 Jul 2008 02:41:34 -0000\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98959 invoked from network); 10 Jul 2008 00:45:51 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m52.grp.scd.yahoo.com with QMQP; 10 Jul 2008 00:45:51 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.178)\n  by mta17.grp.scd.yahoo.com with SMTP; 10 Jul 2008 00:45:51 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id j37so1871400waf.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 09 Jul 2008 17:45:51 -0700 (PDT)\r\nX-Received: by 10.114.15.1 with SMTP id 1mr10146929wao.184.1215650751210;\n        Wed, 09 Jul 2008 17:45:51 -0700 (PDT)\r\nX-Received: from ?192.168.5.21? ( [24.20.210.170])\n        by mx.google.com with ESMTPS id a8sm11438727poa.12.2008.07.09.17.45.48\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Wed, 09 Jul 2008 17:45:49 -0700 (PDT)\r\nMessage-ID: &lt;48755C7E.3000407@...&gt;\r\nDate: Wed, 09 Jul 2008 17:49:02 -0700\r\nUser-Agent: Thunderbird 2.0.0.14 (X11/20080505)\r\nMIME-Version: 1.0\r\nTo: Erik Hetzner &lt;erik.hetzner@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;845591.93199.qm@...&gt;\t&lt;C518625E-138A-4577-8CBC-1940B0E09DCE@...&gt;\t&lt;48753C71.9020406@...&gt; &lt;P-IRC-EXBE02HVbxZXA00002845@...&gt;\r\nIn-Reply-To: &lt;P-IRC-EXBE02HVbxZXA00002845@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------090206010503000708050705&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nSubject: Re: [rest-discuss] Query string format\r\nX-Yahoo-Group-Post: member; u=352334505; y=uSVE-A037ZkhubnS8XDAmEKtfWY4Uclgn8nA70I9zHKHHZJIKopzszXqkA\r\nX-Yahoo-Profile: craig_mcclanahan\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 10 Jul 2008 02:41:32 -0000\r\n\r\n\r\n--------------090206010503000708050705\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\n\r\nErik Hetzner wrote:\n&gt; At Wed, 09 Jul 2008 15:32:17 -0700,\n&gt; Craig McClanahan &lt;craigmcc@...&gt; wrote:\n&gt;   \n&gt;&gt; Agreed that it&#39;s just a convention, and that neither is &quot;standard&quot; in \n&gt;&gt; any sense.  But there is (at least) one important consideration that \n&gt;&gt; might affect your choice of one format versus another ... caching.  The \n&gt;&gt; format that includes the identifier in the URI itself, such as:\n&gt;&gt;\n&gt;&gt;     http://localhost/MyResources/{Id}/State\n&gt;&gt;\n&gt;&gt; offers you the opportunity (if you set your cache control headers \n&gt;&gt; correctly) to let the data for each particular value of {Id} to be \n&gt;&gt; cached by an intermediary between you and the client, while the \n&gt;&gt; parameter based format:\n&gt;&gt;\n&gt;&gt;     http://localhost/MyResources/State?id={Id}\n&gt;&gt;\n&gt;&gt; does not, because request parameters are not considered part of the key \n&gt;&gt; under which caching occurs.\n&gt;&gt;     \n&gt;\n&gt; Do you have an example of a cache which exhibits this behavior? The\n&gt; subtleties of web caching have often eluded me, but I’ve never heard\n&gt; this before, and it’s not part of 2616, as I read it.\n&gt;\n&gt;   \nInteresting ...\n\nI first noticed this behavior with Squid[1], when I was experimenting \nwith trying to cache the results of Google-like search requests that \npass the query string as a request parameter (q=.....), and Squid was \nrefusing to cache the search results at all, no matter what I tried with \nsetting response headers.  When I looked at the time, searching various \narticles and email lists led me to the belief that this was, in fact, \nrequired behavior.  Sadly, I did not maintain any bookmarks to the \ndocuments that (at the time) led me to that conclusion.\n\nDigging a bit further, it looks like this is (at least for Squid 2 or \nlater) simply the *default* behavior, and you can configure Squid to \ncache such responses if you want to -- [2] includes one example of how \nto cache things with request parameters as long as expiry information \nwas included.  However, it still seems doubtful to me that one could \ncount on this unless it is on a cache that you control the configuration \nof (such as a cache in front of your search application to reduce the \nload when there are many equivalent queries).  Based on that, I&#39;d still \nselect the former format if I thought caching would matter for my app \n(in addition to other reasons, like an aesthetic preference for \nincluding the complete resource identifier in the URL itself, and using \nrequest parameters for other purposes).\n&gt; best,\n&gt; Erik Hetzner\n&gt;   \nCraig\n\n[1] http://www.squid-cache.org/\n[2] http://wiki.squid-cache.org/Features/StoreUrlRewrite\n\n&gt; ------------------------------------------------------------------------\n&gt;\n&gt; ;; Erik Hetzner, California Digital Library\n&gt; ;; gnupg key id: 1024D/01DB07E3\n&gt;   \n\n\r\n--------------090206010503000708050705\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=UTF-8&quot; http-equiv=&quot;Content-Type&quot;&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\nErik Hetzner wrote:\n&lt;blockquote cite=&quot;mid:P-IRC-EXBE02HVbxZXA00002845@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;At Wed, 09 Jul 2008 15:32:17 -0700,\nCraig McClanahan &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;mailto:craigmcc@...&quot;&gt;&lt;craigmcc@...&gt;&lt;/a&gt; wrote:\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;Agreed that it&#39;s just a convention, and that neither is &quot;standard&quot; in \nany sense.  But there is (at least) one important consideration that \nmight affect your choice of one format versus another ... caching.  The \nformat that includes the identifier in the URI itself, such as:\n\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://localhost/MyResources/&quot;&gt;http://localhost/MyResources/&lt;/a&gt;{Id}/State\n\noffers you the opportunity (if you set your cache control headers \ncorrectly) to let the data for each particular value of {Id} to be \ncached by an intermediary between you and the client, while the \nparameter based format:\n\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://localhost/MyResources/State?id=&quot;&gt;http://localhost/MyResources/State?id=&lt;/a&gt;{Id}\n\ndoes not, because request parameters are not considered part of the key \nunder which caching occurs.\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nDo you have an example of a cache which exhibits this behavior? The\nsubtleties of web caching have often eluded me, but I’ve never heard\nthis before, and it’s not part of 2616, as I read it.\n\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nInteresting ...&lt;br&gt;\n&lt;br&gt;\nI first noticed this behavior with Squid[1], when I was experimenting\nwith trying to cache the results of Google-like search requests that\npass the query string as a request parameter (q=.....), and Squid was\nrefusing to cache the search results at all, no matter what I tried\nwith setting response headers.  When I looked at the time, searching\nvarious articles and email lists led me to the belief that this was, in\nfact, required behavior.  Sadly, I did not maintain any bookmarks to\nthe documents that (at the time) led me to that conclusion.&lt;br&gt;\n&lt;br&gt;\nDigging a bit further, it looks like this is (at least for Squid 2 or\nlater) simply the *default* behavior, and you can configure Squid to\ncache such responses if you want to -- [2] includes one example of how\nto cache things with request parameters as long as expiry information\nwas included.  However, it still seems doubtful to me that one could\ncount on this unless it is on a cache that you control the\nconfiguration of (such as a cache in front of your search application\nto reduce the load when there are many equivalent queries).  Based on\nthat, I&#39;d still select the former format if I thought caching would\nmatter for my app (in addition to other reasons, like an aesthetic\npreference for including the complete resource identifier in the URL\nitself, and using request parameters for other purposes).&lt;br&gt;\n&lt;blockquote cite=&quot;mid:P-IRC-EXBE02HVbxZXA00002845@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;best,\nErik Hetzner\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nCraig&lt;br&gt;\n&lt;br&gt;\n[1] &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://www.squid-cache.org/&quot;&gt;http://www.squid-cache.org/&lt;/a&gt;&lt;br&gt;\n[2] &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://wiki.squid-cache.org/Features/StoreUrlRewrite&quot;&gt;http://wiki.squid-cache.org/Features/StoreUrlRewrite&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote cite=&quot;mid:P-IRC-EXBE02HVbxZXA00002845@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;\n&lt;hr size=&quot;4&quot; width=&quot;90%&quot;&gt;\n;; Erik Hetzner, California Digital Library\n;; gnupg key id: 1024D/01DB07E3\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------090206010503000708050705--\r\n\n"}}