{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"rV7RaACfaTTvaNzVx0kNh2r76mgZ3MKQQKniqwqMS36B5fCiaBEXATi5JVZewgjjc2cEwD-Pb-H8hzYm9GmJB9mvfRppwk_9fWd7UD02Bw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Application state","postDate":"1254611937","msgId":13654,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMDAzMTcxODU3LjI5ZjllNzBmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDJmYTU1NDQ3MDkxMDAzMTIyN3Q1MjRkOTI0czUyZDJhYTM4Mzk4MGY4OGZAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDY1REJBMzNELTUyOEEtNDBFQS1CNkM5LTg2N0U0NTg5NkZFMEBnbWFpbC5jb20+CTxoYTd0ZDgrMzFtakBlR3JvdXBzLmNvbT4JPDJmYTU1NDQ3MDkxMDAzMTIyN3Q1MjRkOTI0czUyZDJhYTM4Mzk4MGY4OGZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13652,"nextInTopic":13655,"prevInTime":13653,"nextInTime":13655,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"... In a RESTful system, once a user has completed their series of application interactions, a history of the steady-states is contained in the browser","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 784 invoked from network); 3 Oct 2009 23:18:56 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.re1.yahoo.com with QMQP; 3 Oct 2009 23:18:56 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 3 Oct 2009 23:18:56 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 93AC5509D9;\n\tSat,  3 Oct 2009 19:18:55 -0400 (EDT)\r\nDate: Sat, 3 Oct 2009 17:18:57 -0600\r\nTo: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;\r\nCc: Ian &lt;iansrobinson@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20091003171857.29f9e70f.eric@...&gt;\r\nIn-Reply-To: &lt;2fa554470910031227t524d924s52d2aa383980f88f@...&gt;\r\nReferences: &lt;65DBA33D-528A-40EA-B6C9-867E45896FE0@...&gt;\n\t&lt;ha7td8+31mj@...&gt;\n\t&lt;2fa554470910031227t524d924s52d2aa383980f88f@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Application state\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAnt=F3nio Mota wrote:\n\n&gt;\n&gt; Thanks for your apologize :) but I&#39;m really more=\r\n confused. What you\n&gt; say, basically, is that from a operational point of v=\r\niew, a\n&gt; &quot;application state&quot; does not exist, or existing can not be known b=\r\ny\n&gt; us, mere mortals...\n&gt; \n\nIn a RESTful system, once a user has completed =\r\ntheir series of \napplication interactions, a history of the steady-states i=\r\ns contained\nin the browser history.  Since the ancillary requests which mak=\r\ne up\neach steady-state can come from other servers than the representation,=\r\n\nor from caches, us mere mortals can&#39;t deduce the &quot;application&quot; from the\npe=\r\nrspective of the server.\n\nPOST, PUT and DELETE operations will show up in t=\r\nhe log, but not give\nus a complete picture.  REST describes a &quot;data view&quot; o=\r\nf the series of\noperations which make up the transition from one steady-sta=\r\nte to the\nnext.  To quote from it, &quot;[T]he application details are hidden fr=\r\nom\nthe server by the generic connector interface...&quot; and furthermore,\n&quot;Each=\r\n application defines goals for the underlying system, against\nwhich the sys=\r\ntem&#39;s performance can be measured.&quot;\n\nA RESTful system may have a godzillion=\r\n possible &quot;applications&quot;.  None\nwill likely ever encompass the entire scope=\r\n of resources on the origin\nserver.  But it is certainly possible to identi=\r\nfy common applications\nthat any user will need to execute to achieve the go=\r\nals of the site.\nFor an e-commerce site, one such application is the shoppi=\r\nng cart.  We\ncan&#39;t reliably measure its performance from the server, becaus=\r\ne we\ncan&#39;t tell from the server logs what constitutes an &quot;application&quot;.\n\nBu=\r\nt we can simulate RESTful shopping-cart interaction using a shell\nscript an=\r\nd libcurl.  We can run a series of shopping-cart interactions,\nof various s=\r\nizes, and even run them simultaneously from widely\ndispersed shell accounts=\r\n.  The purpose is to measure user- or machine-\nperceived performance (depen=\r\nding on media type, a machine can start\ntransferring ancillary resource rep=\r\nresentations before the requested\nrepresentation has finished loading -- or=\r\n not) where it counts, which\nis on the client.\n\nSo REST makes it possible t=\r\no not only build a better shopping cart, but\nenables you to benchmark it as=\r\n well, and identify which state\ntransitions are taking too long.  The resul=\r\nts will allow you to\nidentify the cause of all those dropped shopping carts=\r\n you see in the\nserver logs -- maybe you weren&#39;t aware that for some users,=\r\n checkout\nwas taking several minutes longer than necessary.\n\nConsider these=\r\n curl-scripted application simulations as unit tests for\nREST systems.  Eve=\r\nry time you identify a common interaction pattern for\na RESTful service, yo=\r\nu have something you can call an application,\nscript from start to finish, =\r\nand measure the performance across all the\nensuing state transitions, as we=\r\nll as ensure that Content-Length is\nbeing sent rather than Transfer-Encodin=\r\ng: chunked and other tests you\ncan run against the generated output from th=\r\ne curl scripts.\n\n-Eric\n\n"}}