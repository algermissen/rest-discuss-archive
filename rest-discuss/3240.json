{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":111788143,"authorName":"Miles Sabin","from":"Miles Sabin &lt;miles@...&gt;","profile":"milessabin","replyTo":"SENDER","senderId":"c-v-8VWGxDujuKy8etOLt7T1NgJiFMLE0GvqswMzUKSARwFaCLXDvxGZ_clT-DA1h77tdgSSYHwPH3ZgX77FbXg6smLur7BIrA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] opaqueness of URI","postDate":"1042285076","msgId":3240,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDMwMTExMTEzNy41NzEzMC5taWxlc0BtaWxlc3NhYmluLmNvbT4=","inReplyToHeader":"PDQwOUFBMTkyLTI1NEYtMTFENy04OTBGLTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg==","referencesHeader":"PDQwOUFBMTkyLTI1NEYtMTFENy04OTBGLTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg=="},"prevInTopic":3239,"nextInTopic":3241,"prevInTime":3239,"nextInTime":3241,"topicId":3187,"numMessagesInTopic":24,"msgSnippet":"Roy T. Fielding wrote, ... Well, yeah. I meant reasonable in the sense of not completely ridiculous . It s surely more reasonable for a client to expect","rawEmail":"Return-Path: &lt;miles@...&gt;\r\nX-Sender: miles@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 11 Jan 2003 11:37:56 -0000\r\nReceived: (qmail 51207 invoked from network); 11 Jan 2003 11:37:56 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 11 Jan 2003 11:37:56 -0000\r\nReceived: from unknown (HELO putnam.milessabin.com) (195.184.234.163)\n  by mta1.grp.scd.yahoo.com with SMTP; 11 Jan 2003 11:37:58 -0000\r\nReceived: from meinong.milessabin.com ([195.184.234.174])\n\tby putnam.milessabin.com with esmtp (Exim 3.36 #2)\n\tid 18XJxd-0003FZ-00; Sat, 11 Jan 2003 11:37:57 +0000\r\nReceived: from localhost (localhost [[UNIX: localhost]])\n\tby meinong.milessabin.com (8.11.6/8.11.6) id h0BBbvF30901;\n\tSat, 11 Jan 2003 11:37:57 GMT\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nTo: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] opaqueness of URI\r\nDate: Sat, 11 Jan 2003 11:37:56 +0000\r\nX-Mailer: KMail [version 1.4]\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;409AA192-254F-11D7-890F-000393753936@...&gt;\r\nIn-Reply-To: &lt;409AA192-254F-11D7-890F-000393753936@...&gt;\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: 8bit\r\nMessage-Id: &lt;200301111137.57130.miles@...&gt;\r\nFrom: Miles Sabin &lt;miles@...&gt;\r\nX-Yahoo-Group-Post: member; u=111788143\r\nX-Yahoo-Profile: milessabin\r\n\r\nRoy T. Fielding wrote,\n&gt; &gt; I think you&#39;re saying that it&#39;s legitimate from a REST POV for a\n&gt; &gt; client to infer a URI pattern or template, eg.\n&gt; &gt;\n&gt; &gt;   http://example.invalid/foo?foo=$1\n&gt; &gt;\n&gt; &gt; or,\n&gt; &gt;\n&gt; &gt;   http://example.invalid/foo/$1\n&gt; &gt;\n&gt; &gt; where the client can substitute into the $1 position to obtain a\n&gt; &gt; URI and have some reasonable expectation that the server manages a\n&gt; &gt; corresponding resource.\n&gt;\n&gt; Reasonable expectation?  Hmmm.  All links are wishful thinking.\n&gt; Guessed links are just somewhat more wishful than others.\n\nWell, yeah.\n\nI meant &quot;reasonable&quot; in the sense of &quot;not completely ridiculous&quot;. It&#39;s \nsurely more reasonable for a client to expect that if it which receives \nan HTML form with a GET action of,\n\n  http://example.invalid/foo\n\nand a control name of &quot;foo&quot; that,\n\n  http://example.invalid/foo?foo=wibble\n\nwill identify a resource with a representation than it would be for it \nto expect that,\n\n  http://example.invalid/foo/3lk4j5l3jkd84oikl\n\nwill (where the last path element it a client genarated random string).\n\n&gt; &gt; These URI templates aren&#39;t URIs, clearly. They represent a family\n&gt; &gt; of related URIs: an infinite family if arbitrary substitutions into\n&gt; &gt; the template positions are acceptable; a finite family if the\n&gt; &gt; substutions should be drawn from a restricted set as in an HTML\n&gt; &gt; &lt;select&gt;.\n&gt;\n&gt; Er, don&#39;t think too hard about it.  All URIs are URIs -- some\n&gt; resources just don&#39;t (currently) have a representation.\n\nRight, but a URI _template_ isn&#39;t a URI. It&#39;s a pattern a client might \ninstantiate to create a URI in the hope that that URI identifies a \nresource with a representation.\n\n&gt; &gt; But they do seem like identifiers for all that, even if only\n&gt; &gt; virtual/ derived and parasitic on the &quot;true&quot; identifiers which\n&gt; &gt; support them. What would support a clients expectation that\n&gt; &gt; substutions into,\n&gt; &gt;\n&gt; &gt;   http://example.invalid/foo?foo=$1\n&gt; &gt;\n&gt; &gt; would be likely to generate dereferencable URIs other than an\n&gt; &gt; assumption that the URI template effectively identifies a _process_\n&gt; &gt; (or something equivalent) which is able to perform the inverse\n&gt; &gt; operation on the URI and extract the substitued-in value as a\n&gt; &gt; parameter for a computation?\n&gt;\n&gt; A hierarchical namespace typically assigns semantics to each name in\n&gt; the hierarchy, and a well-written server-side application will\n&gt; respond consistently to requests throughout that namespace, keeping\n&gt; in mind that &quot;not found&quot; is a consistent response if, in fact, there\n&gt; is no associated representation for that name.  It is often harder\n&gt; to interpret the same of query info because it is unordered, which\n&gt; is why developers should not hide hierarchy inside queries.\n\nOK, I&#39;d be happy to replace &quot;process&quot; with &quot;hierarchical namespace&quot;. \nThat&#39;d give us something like: a URI template identifies (in a \nvirtual/derivative/parasitic sense) a hierarchical namespace maintained \nby the server-side application.\n\nI think that&#39;s better than saying it identifies a process, if only \nbecause it&#39;s more general.\n\n&gt; &gt; I wonder if something like the above would go some way towards\n&gt; &gt; tweaking RFC 2396 3.4 in a REST-consistent direction?\n&gt;\n&gt; It is difficult to write good descriptions for URI components given\n&gt; that schemes frequently differ in some uses.  The descriptions in\n&gt; RFC 2396 give the intent, even though they can be misused in\n&gt; practice. I suspect that most of the spec will have to be rewritten\n&gt; before all of the authors will agree, let alone the IETF reviewers.\n\nAgreed.\n\nBut 3.4 is scheme neutral now, and it might be possible to replace it \nwith something more REST-consistent without losing that neutrality. \nPerhaps instead of,\n\n  The query component is a string of information to be interpreted by\n  the resource.\n\nwe could have something like,\n\n  The presence of a query component suggests the existence of a\n  family of resources with representations whose URIs vary in a\n  well-defined but scheme-specific and server-dependent way.\n  Applications which are aware the constraints of the scheme and the\n  capabilities of the server MAY vary the query component in the\n  expectation that the resulting URIs identify a resource with a\n  representation.\n\nThoughts?\n\nCheers,\n\n\nMiles\n\n"}}