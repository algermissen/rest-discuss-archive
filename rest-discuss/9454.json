{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"C52aZHAf7pl1YiDQcFUbmjBVW7tHq8e33ax688zD1jxAnKcUCRvH66IDMlGNKinNT3psGsxR4QFuIubQHj5fj7mDWb-Xi3k_LtFdTLdWTQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Fun with DELETE","postDate":"1184282172","msgId":9454,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc3ODM3MjE5NzgxMjg0NjcxMTg0MjgyMTcyQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9450,"nextInTopic":9455,"prevInTime":9453,"nextInTime":9455,"topicId":8604,"numMessagesInTopic":107,"msgSnippet":"... If I PUT a new resource on the server, the 201 response MAY contain an ETag... for the requested variant just created... So the returned ETag does indeed","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 16529 invoked from network); 12 Jul 2007 23:16:13 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m43.grp.scd.yahoo.com with QMQP; 12 Jul 2007 23:16:13 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta12.grp.scd.yahoo.com with SMTP; 12 Jul 2007 23:16:13 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nReceived: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 150D179222\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Jul 2007 23:16:12 +0000 (UTC)\r\nTo: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W7837219781284671184282172@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Thu, 12 Jul 2007 23:16:12 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re: Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;Yes, but the definition of ETag as &quot;Response Header&quot;, as defined in\n&gt;&lt;http://greenbytes.de/tech/webdav/rfc2616.html#rfc.section.6.2&gt; makes\n&gt;that restriction.\n&gt;\n&gt;When you return a 201 status with an ETag, is the ETag for the entity\n&gt;that just was stored, or for the message telling the client that a\n&gt;resource was created?\n&gt;\n\nIf I PUT a new resource on the server, the 201 response &quot;MAY contain an \nETag... for the requested variant just created...&quot;\n\nSo the returned ETag does indeed match the requested variant.  On my \nserver, if I PUT an entity to /foo I would get back a 201 Created \nresponse whose message body tells me the following resources have been \ncreated:\n\n/foo\n/foo;view=xhtml\n/foo;view=html\n/foo;view=xslt\n/foo;view=text\n\nThe most-specific match is in the Content-Location header, and the ETag \nwould pertain to the variant in Content-Location if I choose to return \nan ETag.  I see your point, that the ETag in such a case does not pertain \nto the message body of the response itself, but the ETag does pertain to \nthe &quot;requested variant&quot; and is the ETag I will see if I GET that variant.  \nBut it doesn&#39;t change my mind, consider:\n\n&quot;The ETag response-header field provides the current value of the entity \ntag for the requested variant.&quot;\n\nSo I still do not see where any restriction exists, which says that if I \nrequest a resource that&#39;s nonexistent the 410 response can&#39;t have an ETag, \nor how that ETag does not pertain to the requested variant -- or how \ndoing so causes any problems for any clients or intermediaries.\n\nThe purpose of the spec is to allow interoperability.  If my \nimplementation does not cause interoperability problems then I don&#39;t see \nwhere the spec has been violated, or needs to be changed to disallow \nwhat I have implemented.\n\n&gt;\n&gt;&gt; RFC 2616 doesn&#39;t specifically state that ETags may be used on 4xx\n&gt;&gt; responses, then doing so goes against spec? Well, I disagree.\n&gt;\n&gt;They don&#39;t make sense upon 404/410 because of their definition.\n&gt;\n\nThey don&#39;t make sense *to you* because of their definition, but it \nmakes sense *to me* as I see nothing in those definitions which \nprecludes doing what I am doing.\n\n&gt;\n&gt;&gt; I&#39;m using HTTP machinery in a way nobody has tried before, this is not\n&gt;&gt; the same thing as &quot;inventing a new protocol&quot; nor is it &quot;against&quot; RFC\n&gt;&gt; 2616. If it were a &quot;bad thing&quot; to send an ETag with a 410 response\n&gt;&gt; then the spec would say so. If the spec had to specifically account\n&gt;\n&gt;No, that&#39;s not how specs are written. But maybe now we&#39;ll have to put it\n&gt;into RFC2616bis :-)\n&gt;\n\nOK, but only if you can justify why this restriction is needed despite \nthe fact that no interoperability problems result if it is not met.\n\n&gt;\n&gt;Returning it with a 404/410 does not make sense, and that&#39;s why the spec\n&gt;doesn&#39;t *need* to say it.\n&gt;\n\nOr, from my point of view, the spec doesn&#39;t preclude this because it \ndoesn&#39;t make any sense to impose such a restriction, which is why the \nspec doesn&#39;t *need* to say it.\n\n&gt;\n&gt;It wouldn&#39;t. But a generic client never ever will send a DELETE request\n&gt;to something it already successfully deleted.\n&gt;\n\nWell, curl is a pretty generic client, and it has no problem with \nsending a DELETE request anywhere.  If this restriction existed, wouldn&#39;t \nthe client first have to do a HEAD request to make sure the resource \nwasn&#39;t already deleted, before sending a DELETE?  Funny, I don&#39;t see \nthat in the spec...\n\nTry it for yourself.  Set up a 410 response, then DELETE it using curl \nor any other HTTP client capable of a DELETE, then try telling me your \nserver is not seeing that request?  The only thing a client is allowed \nto do after a successful DELETE is mark a cache entry stale, and \nremove a bookmark, but not any assumptions beyond that -- especially \nrefusing to honor the user&#39;s request for any reason beyond auth failure.\n\nIf you have a client that refuses to send a DELETE request to a resource \nit knows responds 410 Gone, then you are not using a generic client, as \nthat client is making assumptions beyond what the spec allows as to the \npermanence of a 410 response.  If a 410 can be &quot;unmarked&quot; and changed to \na 404, and there&#39;s nothing wrong with changing a 404 to a 200 by defining \na resource, then it is completely wrong behavior for a client to assume \npermanence of a 410 response which is not written into the spec anywhere.\n\n&gt;\n&gt;So what if there is a proxy that doesn&#39;t even forward the second DELETE\n&gt;because it already knows about the previous DELETE? Or if the\n&gt;XmlHttpRequest object follows the spec and assumes that if a GET/HEAD on\n&gt;a resource once returned a 410, it doesn&#39;t make sense to access that URI\n&gt;again?\n&gt;\n\nJulian, that behavior is simply not in the spec.  There is nothing about \nRFC 2616 which states that a request resulting in a 410 response can&#39;t \nbe repeated, not even a SHOULD NOT, any more than it says that about a \n404 response.  If the spec allows me to change a 410 into a 404 then \nwhy would the spec also forbid clients from ever attempting to access a \nresource once a 410 has been received?  That would be contradictory, \nthankfully that&#39;s not what RFC 2616 says.\n\nAs to intermediaries, I only see one action allowed in response to a \nsuccessful DELETE request passing through that intermediary -- marking \nany preexisting cache entry for that resource as stale.  If some \nintermediary misbehaves because it is disobeying the spec, there&#39;s \nreally nothing I can do about it besides hope it isn&#39;t on the path \nbetween me and my server.  It would definitely be an error for a proxy \nto refuse to forward any DELETE request.  Please cite your reference \nfor this.\n\n-Eric\n\n\n\n\n"}}