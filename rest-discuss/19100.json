{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":544592167,"authorName":"Kristian Rink","from":"Kristian Rink &lt;kawazu428@...&gt;","profile":"kawazu428","replyTo":"SENDER","senderId":"YSO1OnAAkToUILD4rZzjZuGjF0DXd-aG7tRs4izFQTqBOwGK4aHbNULz-4ek315wK2vLO3bLpRt8E9T5-F4sXs47ecSKKUzD3yQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"discovering &quot;alternate&quot; representations?","postDate":"1349375325","msgId":19100,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDUwNkRENTVELjUwMzAzMDhAZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":19101,"prevInTime":19099,"nextInTime":19101,"topicId":19100,"numMessagesInTopic":8,"msgSnippet":"Folks; trying to build REST resources that make heavy use of delivering different representations of binary files, I ended up looking for thoughts on how to","rawEmail":"Return-Path: &lt;kawazu428@...&gt;\r\nReceived: (qmail 85549 invoked from network); 5 Oct 2012 00:00:37 -0000\r\nReceived: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 5 Oct 2012 00:00:37 -0000\r\nReceived: from unknown (HELO ng17-vm5.bullet.mail.gq1.yahoo.com) (98.136.219.213)\n  by mta3.grp.sp2.yahoo.com with SMTP; 5 Oct 2012 00:00:37 -0000\r\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoogroups.com; s=lima; t=1349395236; bh=1j8fyRqJaneh8UE+lbvC2BjjLUAFLPtLeGRSh1bX73c=; h=Received:Received:X-Sender:X-Apparently-To:X-Received:X-Received:X-Received:X-Received:X-Received:X-Received:Message-ID:Date:User-Agent:MIME-Version:To:Content-Type:Content-Transfer-Encoding:X-Originating-IP:X-eGroups-Msg-Info:From:Subject:X-Yahoo-Group-Post:X-Yahoo-Profile:X-YGroups-SubInfo:Sender:X-Yahoo-Newman-Property:X-eGroups-Approved-By:X-eGroups-Auth; b=Qsv3/dlW/Z/n3oP0772+lv9L6OO3t9//MPrhvwJ8E7NZBBAsHEnKu02wyyLlfQuh0vHuADPiWpPpT4ZeyjssndKhG214UaSTbob7neDmw6xXP7qyJIZQfg/pl01s6trX\r\nReceived: from [98.137.0.86] by ng17.bullet.mail.gq1.yahoo.com with NNFMP; 05 Oct 2012 00:00:36 -0000\r\nReceived: from [98.137.34.119] by tg6.bullet.mail.gq1.yahoo.com with NNFMP; 05 Oct 2012 00:00:36 -0000\r\nX-Sender: kawazu428@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4952 invoked from network); 4 Oct 2012 18:28:48 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 4 Oct 2012 18:28:48 -0000\r\nX-Received: from unknown (HELO mail-bk0-f48.google.com) (209.85.214.48)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Oct 2012 18:28:47 -0000\r\nX-Received: by mail-bk0-f48.google.com with SMTP id ik5so456972bkc.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 04 Oct 2012 11:28:46 -0700 (PDT)\r\nX-Received: by 10.204.156.18 with SMTP id u18mr2006232bkw.131.1349375326796;\n        Thu, 04 Oct 2012 11:28:46 -0700 (PDT)\r\nX-Received: from [192.168.178.33] (p54B39CCF.dip0.t-ipconnect.de. [84.179.156.207])\n        by mx.google.com with ESMTPS id k21sm6336712bkv.1.2012.10.04.11.28.45\n        (version=SSLv3 cipher=OTHER);\n        Thu, 04 Oct 2012 11:28:46 -0700 (PDT)\r\nMessage-ID: &lt;506DD55D.5030308@...&gt;\r\nDate: Thu, 04 Oct 2012 20:28:45 +0200\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:15.0) Gecko/20120912 Thunderbird/15.0.1\r\nMIME-Version: 1.0\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-15; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Kristian Rink &lt;kawazu428@...&gt;\r\nSubject: discovering &quot;alternate&quot; representations?\r\nX-Yahoo-Group-Post: member; u=544592167; y=2a7VeXgA3v55cVI1QeJRd7zfiHs6tRls0lt5wmb0uPow1kEv\r\nX-Yahoo-Profile: kawazu428\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 05 Oct 2012 00:00:34 -0000\r\n\r\nFolks;\n\ntrying to build REST resources that make heavy use of delivering \ndifferent representations of binary files, I ended up looking for \nthoughts on how to deal with alternate representations of a resource in \ndifferent media types.\n\nTo outline the issue in a simple example: Imagine instructions on how to \nassemble a piece of furniture bought in some large store. These \ninstructions are made available, say, as &quot;text/html&quot; (written \ndescription of what to do), &quot;application/pdf&quot; (step-by-step instructions \nin illustrations) and &quot;application/mp4&quot; (video showing what needs to be \ndone).\n\nAll the things basically represent the same resource, the same content, \nin just different representations. There&#39;s two things that make me think:\n\n- As far as I understood content negotiation by now, this is sort of a \nclient-driven procedure: Client provides a more or less lengthy weighted \nAccept: header, server delivers the kind of representation content type \nthat seems to suit the client best, based upon Accept:, language, and of \ncourse the kind of stuff the server is capable of providing, after all. \nWhile this is neat when making client and server quietly make up whether \nto transfer and render image/gif or image/png, it seems to fall short in \na case as the one outlined before. Here, I would kind of expect a \nstandards based approach allowing for the client to determine which kind \nof representations a server is capable to provide, to by then know \n&quot;there&#39;s text, there&#39;s a pdf, and there&#39;s a video clip of the same \ncontent, too&quot;. What is the best way of dealing with such a requirement, \nboth in terms of interoperability and in terms of &quot;clean-ness of design&quot;?\n\n- Right now, I make use of Atom &lt;entry&gt;&#39;s and rel=&quot;alternate&quot; links to \nkeep such things together. Apart from at least _feeling_ a bit strange \n(now the different &quot;representations&quot; of the same thing are linked as \n&quot;alternate&quot; from an Atom &lt;entry&gt; which does not represent but just \ndescribe that actual resource) I am left with another question: Right \nnow, with this approach, I easily can provide a client system with the \ninformation which media type representations are available for that very \nresource. However this just (obviously) works whenever accessing the \n&lt;entry&gt; resource first, to by then see a structure like\n\nhttp://.../documentation/how-to-build-that-table\n\nhaving link rel=&quot;alternate&quot; to\n\nhttp://.../documentation/how-to-build-that-table/file.mp4\nhttp://.../documentation/how-to-build-that-table/file.pdf\nhttp://.../documentation/how-to-build-that-table/file.txt\n\nwhich works. However, in such a situation, to tell which alternate \nrepresentations are there, I always will have to access the\n\nhttp://.../documentation/how-to-build-that-table\n\nresource first, which means that I have to know this one. I so far \nhaven&#39;t figured out an obvious, portable way how to, in example starting \nout with the &quot;application/pdf&quot; representation, tell that there are \nalternative media type representations available, as well.\n\nHmm. Maybe I am missing something essential / fundamental / trivial \nabout that, or I made a fundamental mistake in thinking about my \nresource design. Inspirations / thoughts, anyone?\n\nTIA and all the best,\nKristian\n\n"}}