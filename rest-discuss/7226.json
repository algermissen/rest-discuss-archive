{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":265185497,"authorName":"Jerome Louvel","from":"&quot;Jerome Louvel&quot; &lt;contact@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"aMr8Ar2yDNBiNIdEi_Jkv7p1h4IA8zVlxgnbgZxtfWgP9B3pvnM-rPZZ2QCzdl1TEKqPG4lfWX40TXDAxRa64GsaFq_2FZEX3bjeBg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: wadl","postDate":"1166014550","msgId":7226,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjEwMWM3MWViNiQwNzg5MDU5MCQwMjAwYThjMEBjb2xvcmFkbz4=","inReplyToHeader":"PDg3c2xmazN2eXMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPg=="},"prevInTopic":7225,"nextInTopic":7231,"prevInTime":7225,"nextInTime":7227,"topicId":7218,"numMessagesInTopic":16,"msgSnippet":"... Exactly, this is the idea, model the application once using WADL, then generate the server stubs while automatically serving the original WADL (or parts of","rawEmail":"Return-Path: &lt;contact@...&gt;\r\nX-Sender: contact@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 12185 invoked from network); 13 Dec 2006 12:56:07 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m39.grp.scd.yahoo.com with QMQP; 13 Dec 2006 12:56:07 -0000\r\nReceived: from unknown (HELO texas.noelios.com) (88.191.31.171)\n  by mta5.grp.scd.yahoo.com with SMTP; 13 Dec 2006 12:56:07 -0000\r\nReceived: from m67.net81-67-81.noos.fr ([81.67.81.67] helo=colorado)\n\tby texas.noelios.com with esmtpsa (TLS-1.0:RSA_ARCFOUR_MD5:16)\n\t(Exim 4.63)\n\t(envelope-from &lt;contact@...&gt;)\n\tid 1GuTeM-00011S-Pb; Wed, 13 Dec 2006 13:55:55 +0100\r\nTo: &quot;&#39;Nic James Ferrier&#39;&quot; &lt;nferrier@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Wed, 13 Dec 2006 13:55:50 +0100\r\nMessage-ID: &lt;006101c71eb6$07890590$0200a8c0@colorado&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2962\r\nThread-Index: AccepeCaHA+nbIigQIO2mJyANBpKowADkKUQ\r\nIn-Reply-To: &lt;87slfk3vys.fsf@...&gt;\r\nX-SA-Exim-Connect-IP: 81.67.81.67\r\nX-SA-Exim-Mail-From: contact@...\r\nX-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on texas.noelios.com\r\nX-Spam-Level: \r\nX-Spam-Status: No, score=-1.4 required=4.0 tests=ALL_TRUSTED,AWL \n\tautolearn=ham version=3.1.7\r\nX-Spam-Relay: \r\nX-SA-Exim-Version: 4.2.1 (built Mon, 27 Mar 2006 13:42:28 +0200)\r\nX-SA-Exim-Scanned: Yes (on texas.noelios.com)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Jerome Louvel&quot; &lt;contact@...&gt;\r\nSubject: RE: [rest-discuss] Re: wadl\r\nX-Yahoo-Group-Post: member; u=265185497; y=rUpNPjHksKKtFg3Vro0QH1SnHm8UMIhz4mRbeqL_xRxBvbUacusslA\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\n\nNic Ferrier wrote:\n&gt; &gt; What about returning/generating a WADL document upon an \n&gt; &gt; OPTIONS request? That would help combine the HTTP discovery \n&gt; &gt; process and the WADL expressiveness.\n&gt; \n&gt; It could. But unless you can generate the WADL from the HTTP you would\n&gt; still be saying things twice.\n&gt; \n&gt; I guess if the WADL could generate server stubs (including OPTIONS\n&gt; returning itself) that would be a good approach.\n\nExactly, this is the idea, model the application once using WADL, then\ngenerate the server stubs while automatically serving the original WADL (or\nparts of it) via the OPTIONS method.\n\n&gt; If RESTfull patterns are used then the whole of a service can be\n&gt; exposed RESTfully.\n&gt; \n&gt; We know that GET can be exposed. POST is a bit more tricky and\n&gt; requires the pattern:\n&gt; \n&gt;   POST to a resource\n&gt;   =&gt; get a new skeleton resource back\n&gt; \n&gt;   PUT updated state of resource back to new resource\n&gt;   =&gt; get your updated resource back\n&gt; \n&gt; In effect it&#39;s like a 2 stage commit.\n\nIf you are certain of the pattern this could work but most of the time this\nwon&#39;t be guaranteed at all. Also there is a lot of extra info carried by\nWADL (like URI patterns) that simply can&#39;t be introspected from HTTP.\n\n&gt; If this pattern is used then a discovery agent can walk through a\n&gt; RESTfull service learning about the interface and that knowledge can\n&gt; then be used to derive a client (or another server).\n&gt; \n&gt; \n&gt; &gt; The WADL project already contains a wadl2java tools to \n&gt; generate client \n&gt; &gt; stubs: https://wadl.dev.java.net/wadl2java.html\n&gt; \n&gt; Yep. But I&#39;m talking about generating from the interface itself.\n\nIMHO you can probably learn a little more than what web spiders already do,\nby assuming some RESTful patterns and fully leveraging HTTP (like reading\nthe Allow headers), but I think that you will never be able to\nfully/accurately describe the application. \n\nMost of the time (ie. browsable applications) you don&#39;t need this\ndescription in the first place, but what about Web Services? Every REST API\nout there has some kind of HTML description document listing how to generate\nthe URIs, the allowed methods, etc. It seems so much easier to generate\nthose docs from an authoritative WADL document.\n\nBest regards,\nJerome Louvel\nhttp://www.restlet.org\n\n\n\n"}}