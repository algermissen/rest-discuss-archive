{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"FYkoa_84Pnl51U1Zu6sDYVYgI_J1hQ9Uk7AB2uog5N8dOMN_nueF0bwnGDTg8EAAGLjaof5fx7teQqZ7q7YltINDP07FbQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] asynch","postDate":"1011280741","msgId":43,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hETUVOQkZIQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDIwMDIwMTE3MDI1Ni5WQUExMDIzNkBtYXJrYmFrZXIuY2E+"},"prevInTopic":40,"nextInTopic":44,"prevInTime":42,"nextInTime":44,"topicId":13,"numMessagesInTopic":36,"msgSnippet":"Mark, Something like WATCH is definately part of the solution!  But it is only part of the solution -- there is much new code to be written to make it work.","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 17 Jan 2002 15:20:06 -0000\r\nReceived: (qmail 48622 invoked from network); 17 Jan 2002 15:20:05 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m8.grp.snv.yahoo.com with QMQP; 17 Jan 2002 15:20:05 -0000\r\nReceived: from unknown (HELO mail1.panix.com) (166.84.0.212)\n  by mta2.grp.snv.yahoo.com with SMTP; 17 Jan 2002 15:20:05 -0000\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mail1.panix.com (Postfix) with SMTP\n\tid CFA9B48795; Thu, 17 Jan 2002 10:20:04 -0500 (EST)\r\nTo: &quot;Mark Baker&quot; &lt;distobj@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] asynch\r\nDate: Thu, 17 Jan 2002 10:19:01 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDMENBFHAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nIn-Reply-To: &lt;200201170256.VAA10236@...&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nImportance: Normal\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\nMark,\n\nSomething like WATCH is definately part of the solution!  But it is only part of\nthe solution -- there is much new code to be written to make it work.  For\nexample,\n\n&gt; WATCH http://www.yahoo.com HTTP/1.1\n&gt; Reply-To: http://mysite.org/yahoo-watch\n\nYou are assuming that this call can be emitted synchronously.  Before the new\nWATCH method can solve anything, it has to be received.  What if the caller, the\ncaller&#39;s proxy, or the recipient is temporarily offline?  In the context of\nrequest/response, you only emit calls that make sense if they complete in the\npresent.  In the context of publish/subscribe you may emit calls that don&#39;t have\nany results until a fuzzy point in the future, so it may not matter if the call\nis emitted immediately.\n\nIn the above example, the client should be able to cache the call until it goes\nonline.  Such a local cache would be just like a local outbox.  That is:\n===========\nUser software has an application-defined need to send a subscription message.\nThis might be an application subscribing to a stock ticker.  The user software\nfinds that the user is offline, hence the message can&#39;t be sent.  It caches the\nmessage and initiates a polling loop against the remote resource provider.\n===========\n\nNotice the similarity with a mail user agent attempting to publish a text\nmessage via email.  The sending application should not do the polling, because\nthere may be many such sending applications.  Instead the sending application\nshould submit the send to a system-wide outbound queue and leave the polling to\na single daemon.\n\n===========\nAn application publishes a subscription message to a stock ticker.  Because the\nendpoint is offline, the message is submitted to an outbound queue.  A daemon\nminding the queue and polling to discover online mode eventually finds that the\nendpoint is online.  However the ticker publisher is not online at that moment.\nThe daemon submits the subscription event to a third party dropbox maintaned by\nthe ticker publisher.\n===========\n\nAgain, these semantics are covered by mail infrastructure already but not by web\ninfrastructure.\n\nLet&#39;s not get bogged down in this slightly wierd point that email is more RESTy\nthan the web.  The first point is that _sender_ asynchronicity means assuming\nthat every single hop may be an emission that requires store-and-forward.\nKnowNow&#39;s architecture requires a special new server, the event router.  What is\nan event router but a store-and-forward node?  (uh, well, it&#39;s also a topic\ncoordinator.  That&#39;s too big a can of worms for this message.)\n\n- Lucas\n\n\n\n\n\n\n"}}