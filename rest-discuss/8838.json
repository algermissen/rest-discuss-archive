{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":313515118,"authorName":"Mark Mc Keown","from":"&quot;Mark Mc Keown&quot; &lt;zzcgumk@...&gt;","profile":"zzcgumk","replyTo":"SENDER","senderId":"c10_9DahIdTpLBkkfUghgvDYf23I3nOvcKkEJwjOvOnBQ5l0pyPrdU0IXRIawJ3BID1h7kNpoaoz6L4cRR5jIm13KIXvVec3e4jDtOXClw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and transactions again [was: Is REST Winning?]","postDate":"1181119528","msgId":8838,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDczZjkyN2I0MDcwNjA2MDE0NXMyNGU3ZGRmNGs3NWM0NmQ2M2I2MzA2YWY4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ2NjQ2NjNCLjMwNjA1MDNAZGVob3JhLm5ldD4=","referencesHeader":"PDM0M2VjYjNlMDcwNjAxMDIyMW04MzdiNWUzeGViYjI2MDExOTAzNTZkMjRAbWFpbC5nbWFpbC5jb20+CSA8NDY2NDY2M0IuMzA2MDUwM0BkZWhvcmEubmV0Pg=="},"prevInTopic":8792,"nextInTopic":8881,"prevInTime":8837,"nextInTime":8839,"topicId":8755,"numMessagesInTopic":10,"msgSnippet":"... I have had a lot of fun looking at Paxos, 2PC and transactions. Paxos is a consensus protocol, get a bunch of processors to agree a value, however there","rawEmail":"Return-Path: &lt;zzcgumk@...&gt;\r\nReceived: (qmail 96223 invoked from network); 6 Jun 2007 11:34:06 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m44.grp.scd.yahoo.com with QMQP; 6 Jun 2007 11:34:06 -0000\r\nReceived: from unknown (HELO n26.bullet.scd.yahoo.com) (66.94.237.55)\n  by mta5.grp.scd.yahoo.com with SMTP; 6 Jun 2007 11:34:01 -0000\r\nReceived: from [66.218.69.6] by n26.bullet.scd.yahoo.com with NNFMP; 06 Jun 2007 11:33:26 -0000\r\nReceived: from [66.218.66.85] by t6.bullet.scd.yahoo.com with NNFMP; 06 Jun 2007 11:33:26 -0000\r\nX-Sender: zzcgumk@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 38770 invoked from network); 6 Jun 2007 08:45:33 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m38.grp.scd.yahoo.com with QMQP; 6 Jun 2007 08:45:32 -0000\r\nReceived: from unknown (HELO nz-out-0506.google.com) (64.233.162.230)\n  by mta5.grp.scd.yahoo.com with SMTP; 6 Jun 2007 08:45:32 -0000\r\nReceived: by nz-out-0506.google.com with SMTP id 18so148998nzp\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 06 Jun 2007 01:45:31 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=googlemail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=bE8iF3EM8mLoaNRCShB0Nq0/CCkFyo8/Dz9PZmFvTXw0xvtxV0aBewabKK//kwIfsTSsEsO24x+xMXXTBUDFQ07bc7toy7tp4bzeK8sIoz6e6x1Y4nizbsNVOS0pG9zUsL6GHO0U5KVOB5Rkas/3iu3fYT/LIjWv5W1RYDTLaVc=\r\nReceived: by 10.115.61.1 with SMTP id o1mr211555wak.1181119528679;\n        Wed, 06 Jun 2007 01:45:28 -0700 (PDT)\r\nReceived: by 10.114.184.14 with HTTP; Wed, 6 Jun 2007 01:45:28 -0700 (PDT)\r\nMessage-ID: &lt;73f927b40706060145s24e7ddf4k75c46d63b6306af8@...&gt;\r\nDate: Wed, 6 Jun 2007 09:45:28 +0100\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;4664663B.3060503@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;343ecb3e0706010221m837b5e3xebb2601190356d24@...&gt;\n\t &lt;4664663B.3060503@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mark Mc Keown&quot; &lt;zzcgumk@...&gt;\r\nSubject: Re: [rest-discuss] REST and transactions again [was: Is REST Winning?]\r\nX-Yahoo-Group-Post: member; u=313515118; y=_EYzfMyzqM6d_uNbODQlVLvdz_xs5IXmHFlE60dSuDmpmw\r\nX-Yahoo-Profile: zzcgumk\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 06 Jun 2007 11:33:25 -0000\r\n\r\nOn 6/4/07, Bill de hOra &lt;bill@...&gt; wrote:\n&gt;\n&gt;\n&gt; Bob Haugen wrote:\n&gt;  &gt;\n&gt;  &gt;\n&gt;  &gt; On 6/1/07, Alan Dean &lt;alan.dean@...\n&gt;  &gt; &lt;mailto:alan.dean%40gmail.com&gt;&gt; wrote:\n&gt;  &gt;  &gt; On 6/1/07, Bill de hOra &lt;bill@... &lt;mailto:bill%40dehora.net&gt;&gt;\n&gt;  &gt; wrote:\n&gt;  &gt;  &gt; &gt; ... WWW is the wrong environment for ACID semantics.\n&gt;  &gt;  &gt;\n&gt;  &gt;  &gt; Agreed.\n&gt;  &gt;  &gt;\n&gt;  &gt;  &gt; Two-phase commit over the web is brittle & highly latent. This is why\n&gt;  &gt;  &gt; WS-Transaction (AT) is a bad idea.\n&gt;  &gt;  &gt;\n&gt;  &gt;  &gt; http://en.wikipedia.org/wiki/WS-Transaction\n&gt;  &gt; &lt;http://en.wikipedia.org/wiki/WS-Transaction&gt;\n&gt;  &gt;  &gt;\n&gt;  &gt;  &gt; &quot;Long-running&quot; (aka compensatory) transactions are the way to go.\n&gt;  &gt;  &gt;\n&gt;  &gt;  &gt; http://en.wikipedia.org/wiki/Long_running_transaction\n&gt;  &gt; &lt;http://en.wikipedia.org/wiki/Long_running_transaction&gt;\n&gt;  &gt;\n&gt;  &gt; 2PC != ACID.\n&gt;  &gt;\n&gt;  &gt; I agree about ACID and WS-AT, but one of my previous transaction\n&gt;  &gt; mentors claimed that some form of 2PC is unavoidable for coordination\n&gt;  &gt; among independent agents. He was smarter than me, so I&#39;ll tentatively\n&gt;  &gt; believe it.\n&gt;\n&gt;  I&#39;ve seen a paper that said Paxos was the same protocol as 2PC for some\n&gt;  number of actors; I don&#39;t know if that means 2PC is generally\n&gt;  unavoidable. The general theorem I know of is the 5 packet handshake.\n&gt;  For 5PH to work some cases need to be excluded to avoid &quot;byzantine\n&gt;  generals&quot; kinds of problems, and you might need to make some assumptions\n&gt;  (such as an &quot;eventual arrival&quot; if the channel is asymmetric). I liked it\n&gt;  because it applies directly to point to point messaging problems with an\n&gt;  unreliable channel (which is most reliable messaging scenarios).\n\nI have had a lot of fun looking at Paxos, 2PC and transactions.\n\nPaxos is a consensus protocol, get a bunch of processors to agree\na value, however there are different solutions for different fault types and\nnetwork conditions.\n\nA transaction is a case of uniform consensus - all processors must\nagree on the same value. Most cases of consensus only require the\nnon-faulty processes to agree on a value. Thus, uniform consensus\nis considered more difficult than general consensus. That transactions\nare seen as a case of consensus was not seen until late in the\nliterature.\n\nOne of the most important results in consensus theory is the fact\nthat consensus is impossible in an asynchronous system with only\none faulty processor, even with a perfect network and where the processor\nfail-stops. Basically you cannot tell the difference between a processor\nthat has failed and one that has stopped. This result is used in\nthe CAP paper.\n\n2PC is an asynchronous conensus algorithm, which is why it cannot\nhandle a single fault. If the transaction manager fails at the wrong time\nthe system blocks. Skeen showed that you need three phases to\navoid blocking, unfortunately no one could come up with a nice\n3PC algorithm until recently.\n\nByzantine agreement (consensus replaced the term agreement in the\nliterature) deals with the case were a processor can lie. This looks like a\nmore challenging problem than the above, but does have a solution!\nThis solution requires a synchronous system, messages are delivered in\na fixed time and processors run at a known speed.\n\nByzantine Agreement appeared in the literature before the Impossibility\nresult.\n\nPaxos works in the region between asynchronous and synchronous,\ncalled partially synchronous. Consensus can be achieved when\nmessages are delivered in a timely manner, but the system is safe\notherwise.  With 2n+1 processors, Paxos can reach consensus with\nn processors. There is also a Byzantine version of Paxos, which can\nhandle fewer failures than conventional Paxos, in line with the Byzantine\nagreement result.\n\nDuring the 80&#39;s there was an attempt to bring conensus together with\ntransaction theory, but the transaction guys rejected conensus because\nit was too expensive in terms of messages and processing. Jim Gray\nwrote a note on this. (This pre-dated Paxos).\n\nHowever recently Lamport and Gray produced Paxos Commit. They\ntook that approach to replicate the TM in 2PC - that this obvious approach\ntook so long to solve illustrates to me why distributed computing can\nbe soo hard. For a single transaction in Paxos commit, there is an\ninstance of Paxos for each RM (Paxos is not applied directly to the transaction\nproblem, ie Paxos commit does not have to solve the uniform consensus\nproblem). On the face of it this seems very expensive,\nbut it is not. In fact in the fault free case Paxos Commit completes in\ntwo phases, a third phase is only needed if there is a fault (in line with\nSkeen&#39;s result). This means that Paxos has the same message delay\nas 2PC, ie it is as fast as 2PC, but requires more messages.\n\nWith 2N+1 transaction managers, Paxos Commit can tolerate N failures.\nIn the case where there is only one TM, Paxos Commit is the same\nprotocol as 2PC, but without the fault tolerance!\n\nI did some work on using Paxos Commit and HTTP together to support\ndistributed transactions, though the transactions did not have full ACID\nproperties. http://www.allhands.org.uk/2006/proceedings/papers/624.pdf\n\nIt is fun reading the literature, but made difficult by the fact that\nthe results\nare not in the order you would expect them.\n\ncheers\nMark Mc Keown\n\n\n&gt;\n&gt;  &gt; Compensation is extremely difficult in many (maybe most) cases. Can\n&gt;  &gt; you really undo all of the effects of a set of distributed actions?\n&gt;\n&gt;  You don&#39;t need to. Design an exception management system that kicks it\n&gt;  out to a person to decide how to resolve it. They can roll forward.\n&gt;\n&gt;  &gt; In REST, probably uses a separate transaction resource, or at least\n&gt;  &gt; that&#39;s true of all the RESTful transaction proposals I&#39;ve seen on this\n&gt;  &gt; list or in the recent book.\n&gt;\n&gt;  Yep. For an exchange of value it&#39;s useful if the state of the exchange\n&gt;  has separate identity to the thing of value. If there was a design\n&gt;  patterns book for the Web, this would be one of them.\n&gt;\n&gt;  cheers\n&gt;  Bill\n\n"}}