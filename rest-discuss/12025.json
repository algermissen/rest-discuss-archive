{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"J0zuXYt_zgceGjBxeEWcgbnhxmIaf5cQiQhR7-9hPkcMsRYtGMutlvwTVCru9CeT-OH1hJCQXa3R9wINyEErx2bd5Yr0bEKT6Naz","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reference best practices","postDate":"1232040593","msgId":12025,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MDkwMTE1MDkyOXMxMjU5YWY1NnQ3NGIyYzM3YTZhZjY0YTljQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ5NkY2RjRDLjYwNzAxMDNAaGFja2NyYWZ0Lm5ldD4=","referencesHeader":"PDU1YzYwZTM3MDkwMTE0MTIyNXE2ZDdlMjIyZXdkY2JmMDkzNTAyMzZhZDJAbWFpbC5nbWFpbC5jb20+CSA8NDk2RjQ3RTMuOTA4MDgwNEBoYWNrY3JhZnQubmV0PgkgPDU1YzYwZTM3MDkwMTE1MDgyM3I2YzZlNmE0ZWczM2I2MTA3MGNhNDNjZmVjQG1haWwuZ21haWwuY29tPgkgPDQ5NkY2RjRDLjYwNzAxMDNAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":12024,"nextInTopic":12026,"prevInTime":12024,"nextInTime":12026,"topicId":12015,"numMessagesInTopic":14,"msgSnippet":"... FWIW, I have recently moved completely away from exposing internal unique identifiers for resources.  An RPC-ish mindset had me always mapping back and","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 75173 invoked from network); 15 Jan 2009 17:29:54 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m55.grp.scd.yahoo.com with QMQP; 15 Jan 2009 17:29:54 -0000\r\nX-Received: from unknown (HELO yw-out-2324.google.com) (74.125.46.31)\n  by mta15.grp.scd.yahoo.com with SMTP; 15 Jan 2009 17:29:53 -0000\r\nX-Received: by yw-out-2324.google.com with SMTP id 9so542537ywe.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 15 Jan 2009 09:29:53 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.147.15 with SMTP id u15mr626984wfd.78.1232040593299; Thu, \n\t15 Jan 2009 09:29:53 -0800 (PST)\r\nIn-Reply-To: &lt;496F6F4C.6070103@...&gt;\r\nReferences: &lt;55c60e370901141225q6d7e222ewdcbf09350236ad2@...&gt;\n\t &lt;496F47E3.9080804@...&gt;\n\t &lt;55c60e370901150823r6c6e6a4eg33b61070ca43cfec@...&gt;\n\t &lt;496F6F4C.6070103@...&gt;\r\nDate: Thu, 15 Jan 2009 11:29:53 -0600\r\nX-Google-Sender-Auth: bb80a62eb85b288a\r\nMessage-ID: &lt;8158ad750901150929s1259af56t74b2c37a6af64a9c@...&gt;\r\nTo: Jon Hanna &lt;jon@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Reference best practices\r\nX-Yahoo-Group-Post: member; u=11652427; y=JInYOHeC8Gdre1IKkMOXDtg_7PqxXWgWHSIwHj_qusw4tbc4A7klGXi4_Q\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\nOn Thu, Jan 15, 2009 at 11:15 AM, Jon Hanna &lt;jon@...&gt; wrote:\n&gt; Solomon Duskis wrote:\n&gt;&gt; Jon,\n&gt;&gt;\n&gt;&gt; I do understand that id redundant, and therefore should probably be\n&gt;&gt; taken out. However, the id=333 is useful for server processing. It&#39;s a\n&gt;&gt; bit easier for the server-side to use the id instead of the url as part\n&gt;&gt; of a POST.\n&gt;\n&gt; You find the string after &quot;/food/&quot; and parse it to an integer. This is\n&gt; pretty trivial in most languages, differing from that to take just the\n&gt; string &quot;333&quot; and obtain an integer (assuming your DB keys are integers\n&gt; rather than strings where that one just happens to be an integer) only\n&gt; by a substring or reg-exp operation.\n&gt;\n&gt; Conversely, if you have both, which am I meant to use where as a client?\n&gt;\n\nFWIW, I have recently moved completely away from exposing internal\nunique identifiers for resources.  An RPC-ish mindset had me always\nmapping back and forth between urls and id numbers, but a more RESTful\napproach has me now identifying things at most layers by the uri.\nThis has simplified things greatly.  It basically entails a static\nmethod on your model objects for instantiation: MyObject::get(&lt;the\nuri&gt;), and an object method that produces the uri: $obj-&gt;getUri.\n\nAmong other things, &#39;text/uri-list&#39; has become a favorite for command\nline batch operations :).\n\n--peter keane\n\n&gt; If I can use either, you have to do the same work for some requests\n&gt; anyway, so you haven&#39;t gained anything.\n&gt;\n&gt; If I am meant to use id some places and the URI other places, then\n&gt; you&#39;ve complicated things for me, the person who knows the least about\n&gt; your system (the documentation of the API probably being the first I&#39;ve\n&gt; ever heard about it).\n&gt;\n&gt; Using just the ID takes us away from HATEOS, but I&#39;d say this is better\n&gt; than having both, though I&#39;d generally only ever do that in an AJAX\n&gt; situation where the XML was being processed by javascript obtained from\n&gt; the same server (while the javascript is client code, it&#39;s client-code\n&gt; that comes from the server, so the dependencies not using HATEOS brings\n&gt; aren&#39;t as damaging).\n&gt;\n&gt; Using just the URI considerably increases the likelihood of working out\n&gt; what on earth I should be doing. A nice, though sometimes rare, thing to\n&gt; experience when suddenly given an API doc and a deadline :)\n&gt;\n&gt; Also, if there is more than one possible source of such information,\n&gt; then I&#39;m going to have to introduce something to my records of your\n&gt; identifiers to identify that it isn&#39;t just food ID 333 but YOUR food ID\n&gt; 333. So I&#39;m going to have to turn it into something like the URI anyway.\n&gt;\n&gt;&gt; Are there any development frameworks that do a good job of translating\n&gt;&gt; between relational data (id = 333) and RESTful data (/food/333)?\n&gt;\n&gt; If I can afford to make an assumption or two then:\n&gt;\n&gt; What doesn&#39;t substring do here?\n&gt;\n&gt; It can be even easier in responding to GET if you used\n&gt; http://myserver.com/food?id=333, since most frameworks come with some\n&gt; sort of dictionary view on query-string parameters.\n&gt;\n&gt; Considering that whichever way you do it you&#39;re either going to handle a\n&gt; bunch of text with a number (for the time being - a bonus of the URI\n&gt; approach is it&#39;s easier to change key formats if needs be) in a\n&gt; particular place, I don&#39;t see much advantage of the custom ID format\n&gt; over the URI.\n&gt;\n&gt; \n\n"}}