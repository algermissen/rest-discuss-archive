{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"zFDuG7rsOYwkJ23FIw78dA2qlVTm3ZjDeGaKlNiCWIZ5hkbFsxmnKKAq2o7GQrZFqOba0EmZzrHMgj6-rQxcTsRl01hYQE7YEpJLx-54Jg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Synchronization of collection resources","postDate":"1279575547","msgId":15869,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNzE5MTUzOTA3LjVmOTIxNDkxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGltcWI2YnVQWkgyZ1FnYlZ1QllnTDJ6X1V3SjZtYV9TN2dzV0FGcUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGltTGRtb0pHUll5YlVsakFiSFZBSDR6Z2JOOUU2VnR0RWU3UzZuT0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNzE5MTQzNDQ0LmFhMjliMmFkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltcWI2YnVQWkgyZ1FnYlZ1QllnTDJ6X1V3SjZtYV9TN2dzV0FGcUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15868,"nextInTopic":15872,"prevInTime":15868,"nextInTime":15870,"topicId":15859,"numMessagesInTopic":10,"msgSnippet":"... This depends on implementation.  I suggested a list of tasks, to which tasks may be added or removed.  So the list s URI is known.  Each change to the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 40830 invoked from network); 19 Jul 2010 21:39:25 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m14.grp.re1.yahoo.com with QMQP; 19 Jul 2010 21:39:25 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 19 Jul 2010 21:39:24 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 6D921509E0;\n\tMon, 19 Jul 2010 17:39:23 -0400 (EDT)\r\nDate: Mon, 19 Jul 2010 15:39:07 -0600\r\nTo: Dong Liu &lt;edongliu@...&gt;\r\nCc: Glenn Block &lt;glenn.block@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100719153907.5f921491.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTimqb6buPZH2gQgbVuBYgL2z_UwJ6ma_S7gsWAFq@...&gt;\r\nReferences: &lt;AANLkTimLdmoJGRYybUljAbHVAH4zgbN9E6VttEe7S6nO@...&gt;\n\t&lt;20100719143444.aa29b2ad.eric@...&gt;\n\t&lt;AANLkTimqb6buPZH2gQgbVuBYgL2z_UwJ6ma_S7gsWAFq@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Synchronization of collection resources\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nDong Liu wrote:\n&gt;\n&gt; POST should be fine to *add* a new task in the task list. To use PUT,\n&gt; you need to know a good url for the new task to PUT.\n&gt; \n\nThis depends on implementation.  I suggested a list of tasks, to which\ntasks may be added or removed.  So the list&#39;s URI is known.  Each\nchange to the list, replaces the list.  Simple, and un-RESTful to assign\nreplacement semantics to POST when that&#39;s what PUT is for.\n\nNow, if we&#39;re talking about a list which is a collection of individual\ntask resources, then we&#39;re talking about some other implementation.  If\nadding a task involves the creation of a resource, instead of replacing\nthe existing list with an appended list, *then* POST is correct.\n\nOr PUT, since PUT may also be assigned creation semantics.  This\ndepends on whether or not the URI for the created task is known in\nadvance.  It may very well be included in the hypertext representation.\n\nBut, again, I thought we were discussing a simple list of tasks with a\nknown URI.  In such a model, with replacement semantics assigned to\nPUT, creating a new to-do-list resource would fall to POST at some\nother URI.\n\n-Eric\n\n"}}