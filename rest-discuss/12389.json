{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"uEjCQN0dAKqRbH2K4_lhbDoVggdtfBFirowztDLFhxzJV680u6K5VdmSrnnpohdrtwPqztQy9yM-QVVgjxiycEtW2QANEFwf_VBmy3pVAA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one  DELETE","postDate":"1239041786","msgId":12389,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwNDA2MTIxNjI2Ljg3NGY0YjQzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PFAtSVJDLUVYQkUwMVhLQ256TncwMDAwNjc2NUBFWC5VQ09QLkVEVT4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMjAwNTI4MTYuMWUzNGIyYTYuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8UC1JUkMtRVhCRTAxajUzWGFERjAwMDAxNGU2QEVYLlVDT1AuRURVPgk8MjAwOTAzMjExMzEyMTIuMTM4Nzk1NzIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8UC1JUkMtRVhCRTAxVHQ3UXM2aDAwMDAxOThjQEVYLlVDT1AuRURVPgk8MjAwOTAzMjEyMjM0NDEuMjE5ODc3NmQuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8NDlDNjg1NEUuNTA5MDUwNEBhY20ub3JnPgk8MjAwOTAzMjkxODU2NTMuNzk4NTcwMmMuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MzBhYzUxOWQwOTAzMjkyMTUxdTQ0ZmVkNTY4cTUyNDUzNDQ3MDk3OTkyMDdAbWFpbC5nbWFpbC5jb20+CTwyMDA5MDMzMTAwMjY1MC5mNTM5NDc1Yy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwzMGFjNTE5ZDA5MDMzMTEwMjZvNGU4NmIyODZ4MjUyMDQzYjk0ZDg2OWQxM0BtYWlsLmdtYWlsLmNvbT4JPDIwMDkwNDAzMDkzMTEyLjMxYmFkOTI1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDQ5RDZCQjQxLjcwNDA1MDlAYWNtLm9yZz4JPDIwMDkwNDA0MDgxMTIwLjkzZDZmN2IxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPFAtSVJDLUVYQkUwMVhLQ256TncwMDAwNjc2NUBFWC5VQ09QLkVEVT4="},"prevInTopic":12388,"nextInTopic":12390,"prevInTime":12388,"nextInTime":12390,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... Sure you can, and in fact you should, according to Roy:  ...The main reason for my lack of specificity is because the methods defined by HTTP are part of","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 69787 invoked from network); 6 Apr 2009 18:17:15 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m2.grp.sp2.yahoo.com with QMQP; 6 Apr 2009 18:17:15 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 Apr 2009 18:17:14 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 71FDDD05A7;\n\tMon,  6 Apr 2009 14:16:13 -0400 (EDT)\r\nDate: Mon, 6 Apr 2009 12:16:26 -0600\r\nTo: Erik Hetzner &lt;erik.hetzner@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20090406121626.874f4b43.eric@...&gt;\r\nIn-Reply-To: &lt;P-IRC-EXBE01XKCnzNw00006765@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t&lt;20090320052816.1e34b2a6.eric@...&gt;\n\t&lt;P-IRC-EXBE01j53XaDF000014e6@...&gt;\n\t&lt;20090321131212.13879572.eric@...&gt;\n\t&lt;P-IRC-EXBE01Tt7Qs6h0000198c@...&gt;\n\t&lt;20090321223441.2198776d.eric@...&gt;\n\t&lt;49C6854E.5090504@...&gt;\n\t&lt;20090329185653.7985702c.eric@...&gt;\n\t&lt;30ac519d0903292151u44fed568q5245344709799207@...&gt;\n\t&lt;20090331002650.f539475c.eric@...&gt;\n\t&lt;30ac519d0903311026o4e86b286x252043b94d869d13@...&gt;\n\t&lt;20090403093112.31bad925.eric@...&gt;\n\t&lt;49D6BB41.7040509@...&gt;\n\t&lt;20090404081120.93d6f7b1.eric@...&gt;\n\t&lt;P-IRC-EXBE01XKCnzNw00006765@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use\n one  DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nErik Hetzner wrote:\n\n&gt; \n&gt; &gt; No, I&#39;m saying to choose a meaning for DELETE and stick with it.  If\n&gt; &gt; you want DELETE to delete a collection and all its members, then\n&gt; &gt; deleting members directly should be disallowed.  This would be a\n&gt; &gt; uniform interface, but not, IMO, a generic one.\n&gt; &gt; \n&gt; &gt; Or, don&#39;t allow DELETE on a collection resource, unless its members\n&gt; &gt; have already been deleted.  Or, use DELETE in a generic-interface\n&gt; &gt; fashion and assign some other method (EXPUNGE, MDELETE, BDELETE,\n&gt; &gt; RMD) the task of deleting all members when a collection is deleted.\n&gt; &gt;\n&gt; &gt; […]\n&gt; \n&gt; The web doesn’t have application boundaries, it is a global hypertext\n&gt; system. Either delete has a certain semantics globally, or it doesn’t\n&gt; have those semantics. You can’t ‘choose’ one semantic meaning for your\n&gt; application.\n&gt; \n\nSure you can, and in fact you should, according to Roy:\n\n&quot;\n...The main reason for my lack of specificity is because the methods\ndefined by HTTP are part of the Web’s architecture definition, not the\nREST architectural style. Specific method definitions (aside from the\nretrieval:resource duality of GET) simply don’t matter to the REST\narchitectural style, so it is difficult to have a style discussion\nabout them. The only thing REST requires of methods is that they be\nuniformly defined for all resources (i.e., so that intermediaries don’t\nhave to know the resource type in order to understand the meaning of\nthe request). As long as the method is being used according to its own\ndefinition, REST doesn’t have much to say about it.\n&quot;\n\nhttp://roy.gbiv.com/untangled/2009/it-is-okay-to-use-post\n\nThe problem with PUT is it can mean either create or update in HTTP.\nSame problem with DELETE, in HTTP it means different things to\ndifferent specs for different resource types.  In a REST API, methods\nare constrained to be used according to their own definitions, and\napplied the same way across all resources.  (Roy has also said the REST\ndoesn&#39;t discourage the coining of new methods, one that occurs to me in\nlight of recent discussions is REBOOT since that operation doesn&#39;t\nreally fit with any existing method).\n\nFor example, Sun&#39;s new Cloud API fails the &quot;consistent set of semantics\nfor all resources&quot; test in two ways, where PUT is concerned -- PUT\nmeans &quot;partial update&quot; for particular content-types.  First, media\ntypes don&#39;t define method semantics, doing this inherently means that\nyour methods aren&#39;t uniformly defined for all resources.  Second, as has\nbeen discussed here regarding many claims to RESTful APIs, PUT is not\ndefined to mean &quot;partial update&quot;.  That&#39;s PATCH&#39;s job.  No intermediary\nwould assume &quot;partial update&quot; for PUT unless it had knowledge of the\nspecific media type attempting to redefine the semantics of PUT.\n\nIn HTTP, DELETE can be used as batch-delete as well as individual-\ndelete.  In my REST API example, I&#39;ve constrained DELETE to mean the\nsame thing to all resources, while adding MDELETE to cover the batch-\ndelete case.  That&#39;s a uniform interface.  Using DELETE in any ol&#39; way\nit&#39;s defined, varying by resource type, is not.  This goes back to the\npoint I was making before, about Atom Protocol constraining PUT to only\nmean update, instead of both update and create, and assigning create to\nPOST.  Any API that wants to be RESTful needs to constrain the\nsemantics of any method implemented, to one and only one action,\notherwise methods aren&#39;t uniformly defined for all resources.\n\n-Eric\n\n"}}