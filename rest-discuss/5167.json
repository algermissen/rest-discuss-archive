{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic Ferrier","from":"Nic Ferrier &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"wHMlIkVt9yGqKGDC75iTVnSAeRZlSzJovHDSNN8RmxBs6C1Fap_NF40XMBW1ZeeTS_LV-jaJf5vTa8osVD8HbPQijYj6Rhx88eEb3jezyS31IA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Switching content type","postDate":"1121861898","msgId":5167,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3em1zaHpuNWguZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","inReplyToHeader":"PEUxRHZDc1MtMDAwM3htLVZWQGdpZ2FzMi5wYW5kb3JhaG9zdC5jb20+IChKdXN0aW4gVC4gU2FtcHNvbidzIG1lc3NhZ2Ugb2YgIldlZCwgMjAgSnVsIDIwMDUgMDY6MzY6NDAgLTA1MDAiKQ==","referencesHeader":"PEUxRHZDc1MtMDAwM3htLVZWQGdpZ2FzMi5wYW5kb3JhaG9zdC5jb20+"},"prevInTopic":5165,"nextInTopic":5168,"prevInTime":5166,"nextInTime":5168,"topicId":5138,"numMessagesInTopic":27,"msgSnippet":"... I do agree with you. My point is that human facing webapps (as opposed to machine facing ones which we might call web services) sometimes have to be a","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 90891 invoked from network); 20 Jul 2005 12:26:39 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m24.grp.scd.yahoo.com with QMQP; 20 Jul 2005 12:26:39 -0000\r\nReceived: from unknown (HELO owls-tree.tapsellferrier.co.uk) (80.168.153.201)\n  by mta4.grp.scd.yahoo.com with SMTP; 20 Jul 2005 12:26:39 -0000\r\nReceived: from [217.207.145.34] (helo=kanga)\n\tby owls-tree.tapsellferrier.co.uk with esmtp (Exim 4.50 #1 (Debian))\n\tid 1DvDWg-0006CE-Fv; Wed, 20 Jul 2005 13:18:15 +0100\r\nReceived: from nferrier by kanga with local (Exim 4.50)\n\tid 1DvDWl-0002K6-Uy; Wed, 20 Jul 2005 13:18:20 +0100\r\nTo: &quot;Justin T. Sampson&quot; &lt;justin@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;E1DvCsS-0003xm-VV@...&gt;\r\nDate: Wed, 20 Jul 2005 13:18:18 +0100\r\nIn-Reply-To: &lt;E1DvCsS-0003xm-VV@...&gt; (Justin T. Sampson&#39;s\n message of &quot;Wed, 20 Jul 2005 06:36:40 -0500&quot;)\r\nMessage-ID: &lt;87zmshzn5h.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 2:12:4\r\nFrom: Nic Ferrier &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Switching content type\r\nX-Yahoo-Group-Post: member; u=3702469; y=jDXFphuhrAzyWpczH03850mYG_csVWCHa4_ZogeMmKgE4Lds8vvI8VUh9aQk0a2sEoM\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\n&quot;Justin T. Sampson&quot; &lt;justin@...&gt; writes:\n\n&gt; So a clearer way to state my original point is that Web apps and\n&gt; Web services are equal in the eyes of REST. When I&#39;m designing a\n&gt; Web service, I think about how I&#39;d do it as a Web app as well, and\n&gt; consider what REST tells me about both. And REST needs at least as\n&gt; much advocacy in the Web app world as in the Web service world at\n&gt; this point.\n\nI do agree with you. My point is that human facing webapps (as opposed\nto machine facing ones which we might call web services) sometimes\nhave to be a little more flexible than REST allows (because the owners\nof the webapp demand it).\n\nWeb services on the other hand are rarely subject to the sort of\ntechnical incompetent hand waving that stops REST being used in\nwebapps.\n\nA world built on webservices is all we really need, because then we\ncan write our own webapps.\n\n\n&gt;&gt; &gt; Want to offer the user multiple representations? Go ahead and\n&gt;&gt; &gt; give each one a different extension. Why not?\n&gt;&gt;\n&gt;&gt; Because cool-uris don&#39;t change:\n&gt;\n&gt; So the cool URI for each version doesn&#39;t change. That doesn&#39;t mean\n&gt; you can&#39;t have multiple URIs for multiple renditions of a file, if\n&gt; those different renditions are meaningful to a user such that a\n&gt; user would actually want to request one or the other (or several\n&gt; different versions).\n\nYou&#39;re talking about versions and I&#39;m talking about representations of\none version.\n\nI often deal in situations where I have two or more XML\nrepresentations and an HTML representation of the same data. Cool URIs\nDon&#39;t Change suggests that you shouldn&#39;t try and put the\nrepresentation into the resource name because that ties you to a\nformat.\n\nIf I have a resource:\n\n  http://www.tapsellferrier.co.uk/things/others/specialthing-1\n\nthen why should I insist to clients that they look at that as HTML? or\nXML? or PDF? or an image?\n\nIt should be whatever they want within the bounds of what I can\nsupply.\n\n\n&gt;&gt; Err... no. As discussed you can use the Accept header to\n&gt;&gt; identify which resource you want.\n&gt;\n&gt; Not really -- Accept doesn&#39;t guarantee (and certainly doesn&#39;t\n&gt; *identify*) getting a particular representation, it expresses\n&gt; preferences and abilities to allow negotiation of an appropriate\n&gt; content type between the client and the server.\n\nYes, Really. If the server can&#39;t supply what you want then it is\nsupposed to say 406. Right now most webapp don&#39;t do this very often\nbut as REST advocates we all know about spec non-compliance right?\n\n\n&gt; Resources are concepts. If I have separate concepts of &quot;bank\n&gt; statement in PDF&quot; and &quot;bank statement in HTML&quot;, then two separate\n&gt; URIs (one ending in .pdf and one ending in .html) make the most\n&gt; conceptual sense. \n\nI disagree because cool URIs don&#39;t change.\n\nIf you have separate concepts of &quot;bank statement in PDF&quot; and &quot;bank\nstatement in HTML&quot; then I think you&#39;re quite unusual. I think of my\nbank statement as my bank statement and I think most people do.\n\nResources should not be tied to representations.  The reason for this\nis that the resource that identifies my bank statement should always\nbe the same. When I&#39;m seventy (if I still have the same bank account\nwhich is pretty unlikely I have to say) I&#39;d expect my bank statement\nURI to be the same.\n\nMore importantly if I have a resource to identify me then I don&#39;t want\nto tie that to one or other document format.\n\n\n&gt; Bottom line is this: REST really says very little about what URIs\n&gt; should look like. REST does say to use URIs to identify whatever\n&gt; needs identifying, and to use hypertext to make those URIs known.\n&gt; Anything beyond that is aesthetics. It&#39;s good to make URIs\n&gt; meaningful to whoever might look at them, and to leave out\n&gt; anything not relevant to what is being identified (most especially\n&gt; implementation details like cgi, php, or jsp, but perhaps also\n&gt; filename extensions *if that&#39;s not what&#39;s being identified\n&gt; conceptually*), but they are opaque to the REST architectural\n&gt; style itself.\n\nOk. So it comes down to whether you accept that Cool URIs Don&#39;t\nChange is part of REST. I can&#39;t remember if there&#39;s anything in Roy&#39;s\noriginal paper about this. But since this stuff is quite clear in the\nHTTP spec I believe that cool URIs don&#39;t change. /8-&gt;\n\n\nNic\n\n"}}