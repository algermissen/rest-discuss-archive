{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"BVG41fHdv62do21kr6AhtdTmOaWhL7Dk7QEbbF80lgPeGwVpkUoWluiwv1kkBvYagPxi045yfq9CnVT3TREccHTl8_A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237390465","msgId":12224,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU3OGJkYmMwMDkwMzE4MDgzNGs1MGIxYzJlZW40NjE0YzU0MGZjM2EyYmJiQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzE4MDQyMzE1LjRlZmE5YzgyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE4MDQyMzE1LjRlZmE5YzgyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":12223,"nextInTopic":12225,"prevInTime":12223,"nextInTime":12225,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"I agree that to create a composite resource will introduce some semantic confusion. This post was a reply to the question in ","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 79616 invoked from network); 18 Mar 2009 15:34:27 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m8.grp.re1.yahoo.com with QMQP; 18 Mar 2009 15:34:27 -0000\r\nX-Received: from unknown (HELO yx-out-2324.google.com) (74.125.44.29)\n  by mta3.grp.re1.yahoo.com with SMTP; 18 Mar 2009 15:34:27 -0000\r\nX-Received: by yx-out-2324.google.com with SMTP id 3so70342yxj.33\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 Mar 2009 08:34:27 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.100.92.17 with SMTP id p17mr541104anb.47.1237390465869; Wed, \n\t18 Mar 2009 08:34:25 -0700 (PDT)\r\nIn-Reply-To: &lt;20090318042315.4efa9c82.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t &lt;20090318042315.4efa9c82.eric@...&gt;\r\nDate: Wed, 18 Mar 2009 09:34:25 -0600\r\nMessage-ID: &lt;e78bdbc00903180834k50b1c2een4614c540fc3a2bbb@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nCc: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nContent-Type: multipart/alternative; boundary=0016e644cb282aa7650465666b24\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=198897688; y=ms8euSlhhWTbRuvRJ0FzXuJY7v7iq-IaJ2PDDjoUcKRjrw\r\nX-Yahoo-Profile: edonliu\r\n\r\n\r\n--0016e644cb282aa7650465666b24\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nI agree that to create a composite resource will introduce some semantic\nconfusion.\n\nThis post was a reply to the question in\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/12138\n\nAlthough the context of the original question of including multiple\nresources in a DELETE was not clear, I assumed that the delete task of those\nresource should be atomic. That is, if successful, all resources are\ndeleted, or if failed, none of the resources is deleted. Separate DELETE\nrequest one after the other can not  achieve this goal.\n\nCheers,\n\nDong\n\nOn Wed, Mar 18, 2009 at 4:23 AM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; &gt;\n&gt; &gt; How about doing this in the following way:\n&gt; &gt;\n&gt; &gt; 1. use PUT to create a composite resource that contains all the\n&gt; &gt; resource that are going to be deleted at the &quot;same&quot; time. Of course,\n&gt; &gt; the server side should know the purpose of this PUT, and return the\n&gt; &gt; URI of the created composite resource.\n&gt; &gt; 2. use DELETE to delete the composite resource.\n&gt; &gt;\n&gt;\n&gt; Let&#39;s use Atom as an example, here.  The application developer could\n&gt; have the server interpret the deletion of a collection, as a request to\n&gt; delete all member resources in that collection.  A user could then\n&gt; create a collection, like any other, for the purpose of deleting it and\n&gt; whatever entries it references.\n&gt;\n&gt; The tradeoff in such a configuration, is eliminating the ability to\n&gt; delete a collection *without* deleting its member resources.  Ask\n&gt; yourself if any reduction in API functionality is acceptable, for the\n&gt; purpose of optimizing DELETE -- a method whose traffic doesn&#39;t amount\n&gt; to a very big slice of the overall network-traffic pie to begin with.\n&gt;\n&gt; &gt;\n&gt; &gt; In this way, both the client side and the server side have clear\n&gt; &gt; understanding of what each operation and each URI mean.\n&gt; &gt;\n&gt; &gt; I feel it is more explicit and clear than sending a POST with many\n&gt; &gt; &quot;delete&quot;.\n&gt; &gt;\n&gt;\n&gt; Ah, but the question is, would this be more explicit and clear than\n&gt; having the client make atomic DELETE requests to the desired URIs, in\n&gt; accordance with Atom Protocol and REST?  There is no possibility for\n&gt; misunderstanding the purpose of an atomic DELETE request made against a\n&gt; specific URI, or the resulting response status.\n&gt;\n&gt; From the standpoint of the user deleting a collection for the purpose\n&gt; of batch-deleting member resources, the problem is one of visibility.\n&gt; Using atomic, URI-by-URI DELETE requests tells intermediaries to expire\n&gt; any cached representations of the deleted resources.  Using an opaque\n&gt; server behavior, i.e. relying on the server to behave a certain way\n&gt; when a collection is deleted, won&#39;t cause intermediaries to expire\n&gt; member resources, meaning the user who performed the DELETE could still\n&gt; potentially dereference the &quot;deleted&quot; resources from a cache.\n&gt;\n&gt; This confusion certainly doesn&#39;t arise when each resource is deleted by\n&gt; making a DELETE request against its URI and receiving a &quot;success&quot;\n&gt; status code, a visible transaction that an intermediary can understand\n&gt; and act upon by expiring cached representations. The user won&#39;t (or\n&gt; shouldn&#39;t) experience a reload re-rendering a representation of a\n&gt; resource he thinks he&#39;s just deleted, using RESTful URI-by-URI deletion.\n&gt;\n&gt; -Eric\n&gt;\n\n\n\n-- \nhttp://dongnotes.blogspot.com/\n\r\n--0016e644cb282aa7650465666b24\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI agree that to create a composite resource will introduce some semantic co=\r\nnfusion. &lt;br&gt;&lt;br&gt;This post was a reply to the question in &lt;br&gt;&lt;a href=3D&quot;ht=\r\ntp://tech.groups.yahoo.com/group/rest-discuss/message/12138&quot;&gt;http://tech.gr=\r\noups.yahoo.com/group/rest-discuss/message/12138&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;Although the co=\r\nntext of the original question of including multiple resources in a DELETE =\r\nwas not clear, I assumed that the delete task of those resource should be a=\r\ntomic. That is, if successful, all resources are deleted, or if failed, non=\r\ne of the resources is deleted. Separate DELETE request one after the other =\r\ncan not=A0 achieve this goal. &lt;br&gt;\n&lt;br&gt;Cheers,&lt;br&gt;&lt;br&gt;Dong &lt;br&gt;&lt;br&gt;&lt;div cla=\r\nss=3D&quot;gmail_quote&quot;&gt;On Wed, Mar 18, 2009 at 4:23 AM, Eric J. Bowman &lt;span di=\r\nr=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...&quot;&gt;eric@...=\r\nt&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;borde=\r\nr-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-le=\r\nft: 1ex;&quot;&gt;\n&lt;div class=3D&quot;im&quot;&gt;&gt;&lt;br&gt;\n&gt; How about doing this in the foll=\r\nowing way:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 1. use PUT to create a composite resource that=\r\n contains all the&lt;br&gt;\n&gt; resource that are going to be deleted at the &qu=\r\not;same&quot; time. Of course,&lt;br&gt;\n&gt; the server side should know the pur=\r\npose of this PUT, and return the&lt;br&gt;\n&gt; URI of the created composite reso=\r\nurce.&lt;br&gt;\n&gt; 2. use DELETE to delete the composite resource.&lt;br&gt;\n&gt;&lt;br&gt;=\r\n\n&lt;br&gt;\n&lt;/div&gt;Let&#39;s use Atom as an example, here. =A0The application deve=\r\nloper could&lt;br&gt;\nhave the server interpret the deletion of a collection, as =\r\na request to&lt;br&gt;\ndelete all member resources in that collection. =A0A user =\r\ncould then&lt;br&gt;\ncreate a collection, like any other, for the purpose of dele=\r\nting it and&lt;br&gt;\nwhatever entries it references.&lt;br&gt;\n&lt;br&gt;\nThe tradeoff in su=\r\nch a configuration, is eliminating the ability to&lt;br&gt;\ndelete a collection *=\r\nwithout* deleting its member resources. =A0Ask&lt;br&gt;\nyourself if any reductio=\r\nn in API functionality is acceptable, for the&lt;br&gt;\npurpose of optimizing DEL=\r\nETE -- a method whose traffic doesn&#39;t amount&lt;br&gt;\nto a very big slice of=\r\n the overall network-traffic pie to begin with.&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n=\r\n&gt;&lt;br&gt;\n&gt; In this way, both the client side and the server side have cl=\r\near&lt;br&gt;\n&gt; understanding of what each operation and each URI mean.&lt;br&gt;\n&g=\r\nt;&lt;br&gt;\n&gt; I feel it is more explicit and clear than sending a POST with m=\r\nany&lt;br&gt;\n&gt; &quot;delete&quot;.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Ah, but the questi=\r\non is, would this be more explicit and clear than&lt;br&gt;\nhaving the client mak=\r\ne atomic DELETE requests to the desired URIs, in&lt;br&gt;\naccordance with Atom P=\r\nrotocol and REST? =A0There is no possibility for&lt;br&gt;\nmisunderstanding the p=\r\nurpose of an atomic DELETE request made against a&lt;br&gt;\nspecific URI, or the =\r\nresulting response status.&lt;br&gt;\n&lt;br&gt;\nFrom the standpoint of the user deletin=\r\ng a collection for the purpose&lt;br&gt;\nof batch-deleting member resources, the =\r\nproblem is one of visibility.&lt;br&gt;\nUsing atomic, URI-by-URI DELETE requests =\r\ntells intermediaries to expire&lt;br&gt;\nany cached representations of the delete=\r\nd resources. =A0Using an opaque&lt;br&gt;\nserver behavior, i.e. relying on the se=\r\nrver to behave a certain way&lt;br&gt;\nwhen a collection is deleted, won&#39;t ca=\r\nuse intermediaries to expire&lt;br&gt;\nmember resources, meaning the user who per=\r\nformed the DELETE could still&lt;br&gt;\npotentially dereference the &quot;deleted=\r\n&quot; resources from a cache.&lt;br&gt;\n&lt;br&gt;\nThis confusion certainly doesn&#39;=\r\nt arise when each resource is deleted by&lt;br&gt;\nmaking a DELETE request agains=\r\nt its URI and receiving a &quot;success&quot;&lt;br&gt;\nstatus code, a visible tr=\r\nansaction that an intermediary can understand&lt;br&gt;\nand act upon by expiring =\r\ncached representations. The user won&#39;t (or&lt;br&gt;\nshouldn&#39;t) experienc=\r\ne a reload re-rendering a representation of a&lt;br&gt;\nresource he thinks he&#39=\r\n;s just deleted, using RESTful URI-by-URI deletion.&lt;br&gt;\n&lt;font color=3D&quot;#888=\r\n888&quot;&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;br&gt;-- =\r\n&lt;br&gt;&lt;a href=3D&quot;http://dongnotes.blogspot.com/&quot;&gt;http://dongnotes.blogspot.co=\r\nm/&lt;/a&gt;&lt;br&gt;\n\r\n--0016e644cb282aa7650465666b24--\r\n\n"}}