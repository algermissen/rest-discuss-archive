{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paulp@...&gt;","replyTo":"SENDER","senderId":"F8EcsCUT5IIFwZ4TqJlFQuvTBr6tnTF5vBGpkRH9_p5r_a-S5NwfqAMkAvNRpy2Ifel-dc5kZd3u9ph9rLosPxSi_rgIjVJtJIdS","spamInfo":{"isSpam":false,"reason":"0"},"subject":"A few thoughts on REST+SOAP","postDate":"1027365554","msgId":1918,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEM0M1QUIyLjk3N0NBQ0Y1QEFjdGl2ZVN0YXRlLmNvbT4="},"prevInTopic":0,"nextInTopic":2032,"prevInTime":1917,"nextInTime":1919,"topicId":1918,"numMessagesInTopic":12,"msgSnippet":"Sam offers a melded REST+SOAP architecture here: http://radio.weblogs.com/0101679/stories/2002/07/20/restSoap.html I am all for using SOAP syntax in REST","rawEmail":"Return-Path: &lt;paulp@...&gt;\r\nX-Sender: paulp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 22 Jul 2002 19:19:43 -0000\r\nReceived: (qmail 70745 invoked from network); 22 Jul 2002 19:19:42 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 22 Jul 2002 19:19:42 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.scd.yahoo.com with SMTP; 22 Jul 2002 19:19:42 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6MJJeW01079;\n\tMon, 22 Jul 2002 12:19:40 -0700\r\nReceived: from ActiveState.com (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6MJJd218044;\n\tMon, 22 Jul 2002 12:19:39 -0700\r\nMessage-ID: &lt;3D3C5AB2.977CACF5@...&gt;\r\nDate: Mon, 22 Jul 2002 12:19:14 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;,\n   Sam Ruby &lt;rubys@...&gt;\r\nSubject: A few thoughts on REST+SOAP\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paulp@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nSam offers a melded REST+SOAP architecture here:\n\nhttp://radio.weblogs.com/0101679/stories/2002/07/20/restSoap.html\n\nI am all for using SOAP syntax in REST services where it provides value.\nStill, I disagree on some points with the essay.\n====\n\nResources and URIs:\n==================\n&gt; Start by modeling the persistent resources that you wish to expose.  \n&gt; By persistent resources, I am referring to entities that have a \n&gt; typical life expectancy of days or greater.  Ensure that each \n&gt; instance has a unique URL. When possible, assign meaningful \n&gt; names to resources.\n\nI *think* you mean to say that you should also assign URIs to transient\nresources. But I&#39;m not sure. Of course I think that transient resources\nshould have URIs.\n\nMerging Architectures\n=====================\n\nYou say that your model is different from a resource-centric REST view\nin these ways:\n\n1. &quot;POST operations explicitly have the possibility of modifying\nmultiple resources.&quot;\n\nActually, I would say that PUT and DELETE operations also explicitly\nhave the possibility of modifying multiple resources. For instance if\nyou DELETE a Toolkit then the &quot;index&quot; document that refers to the\ntoolkit should also change. So I do not see this as being an extension\nto REST but a core REST concept. None of the lists of REST best\npractices I have seen have ever said that operations should only ever\nmodify a single resource.\n\nDeleting an &quot;account record&quot; will probably also delete all kinds of\nrelated resources. And arguably the deletion could move the resource&#39;s\nassociated data to a &quot;recycle bin&quot; container.\n\n2. &quot;PUT and DELETE operations are rarely used, if ever.&quot;\n\nI see no reason for that rule. If what you want to accomplish is\nsemantically equivalent to a PUT or DELETE then why not use the\nstandardized method for doing it? I think we need more generic, globally\nunderstood methods, not fewer. That increases interoperability.\n\nI think that this rule follows from the view that a &quot;true&quot; deletion or\nupdate should only change one resource. I do not hold that view so I do\nnot think that this rule is necessary.\n\n3. &quot;GETs may contain query arguments.&quot;\n\nI don&#39;t think that anybody ever disputed this. I have made the point on\na few occasions that a service that is query-centric rather than\nlink-centric is not as discoverable. I can ask Google what it knows\nabout &quot;Prescod&quot; but I cannot easily get the list of words that co-occurs\nwith the word REST. In a perfect world with infinite money, Google would\nsupport both modes. I could follow hyperlinks from the page representing\nwords that co-occur with REST to a page listing words that co-occur with\nREST and SOAP etc.\n\nGET with query arguments is fine. Just understand that you lose\ndiscoverability if this is the primary entry point to your resource set.\n\n&quot;If you are encoding parameters on the URL, you are probably making an\nRPC request of a service, not retrieving the representation of a\nresource.&quot;\n\nI disagree.\n\n&quot;It is worth reading Roy Fielding&#39;s thoughts on the subject.&quot; \n  * http://lists.w3.org/Archives/Public/www-tag/2002Apr/0181.html\n\nI don&#39;t see Roy Fielding saying what Sam says about URIs and query\nparameters. What *I* think Roy is talking about is services that misuse\nPOST, not query parameters. Misuse of POST is the most common REST abuse\nin my experience.\n\nWhat SOAP Gives REST\n====================\n\nYou say that what SOAP adds to REST is stored procedures. I think that\nthis falls out of the belief that REST-people think that operations\nshould always only modify one resource. Insofar as a single POST, PUT or\nDELETE can have far-reaching effects, each such message is as powerful\nas an invocation of a stored procedure. Also, we all speak loosely\nsometimes about &quot;SOAP&quot; versus &quot;REST&quot; but now that SOAP is not Web\nantaognistic we should be more clear in our terminology. SOAP (the\nsyntax and messaging framework) does not really add stored procedures to\nREST (the architecture). \n\nEverything is a GET\n===================\nOne other nit, you characterize four different points of view on REST,\nSOAP and web services. One of them is &quot;Everything is a get.&quot;\nActually, I do not see this as a very common point of view at all. I\nrarely run into state-changing GETs and anyone who uses GET in this way\ncan usually be talked out of it in about five minutes. In other words,\nit isn&#39;t a &quot;camp&quot; in the debate, AFAIK, it is a simple misunderstanding.\n\nIn fact, a much more common misunderstanding than &quot;everything is a GET&quot;\nis &quot;everything is a POST&quot;. After all, POST is much more &quot;flexible&quot; in\nits input and output.\n-- \nCome discuss XML and REST web services at:\n  Open Source Conference: July 22-26, 2002, conferences.oreillynet.com\n  Extreme Markup: Aug 4-9, 2002,  www.extrememarkup.com/extreme/\n\n"}}