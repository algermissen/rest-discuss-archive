{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344081753,"authorName":"Erling Wegger Linde","from":"&quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;","profile":"erlingwl","replyTo":"SENDER","senderId":"i_hpyygwDT6MS64tpy0sflPzAGp8ufbQqie4-ci8oKpAAUV-N1Fsq3z_0yGr-MTOUzAvr3ijQum0NegfkJaH0-nOtTjnDRSA3HRvnpOr0rU-","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST for rich client persistence","postDate":"1217485846","msgId":11094,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlmMDU3ODI5MDgwNzMwMjMzMHUyZjU0Y2N3Njc0NjY4MDU2Mzk4ZWIzNUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDQ4OTE1OTA2LjQwMjA0QGdtYWlsLmNvbT4=","referencesHeader":"PDQ4OEU5NDM5LjcwMDA4MDBAZ21haWwuY29tPgkgPDlmMDU3ODI5MDgwNzMwMjMxMHA0ODMzMWI2M242ZmVjZjUzNDAyYzFiY2Q5QG1haWwuZ21haWwuY29tPgkgPDQ4OTE1OTA2LjQwMjA0QGdtYWlsLmNvbT4="},"prevInTopic":11093,"nextInTopic":11095,"prevInTime":11093,"nextInTime":11095,"topicId":11083,"numMessagesInTopic":6,"msgSnippet":"... One great thing about Atom + RDF is that you get very stable interfaces - and hence a very loose coupling, especially if you use ontologies that are widely","rawEmail":"Return-Path: &lt;erlingwl@...&gt;\r\nX-Sender: erlingwl@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 18924 invoked from network); 31 Jul 2008 06:30:48 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m52.grp.scd.yahoo.com with QMQP; 31 Jul 2008 06:30:48 -0000\r\nX-Received: from unknown (HELO fk-out-0910.google.com) (209.85.128.188)\n  by mta16.grp.scd.yahoo.com with SMTP; 31 Jul 2008 06:30:47 -0000\r\nX-Received: by fk-out-0910.google.com with SMTP id 19so297295fkr.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 30 Jul 2008 23:30:46 -0700 (PDT)\r\nX-Received: by 10.125.83.3 with SMTP id k3mr479038mkl.1.1217485846819;\n        Wed, 30 Jul 2008 23:30:46 -0700 (PDT)\r\nX-Received: by 10.125.147.13 with HTTP; Wed, 30 Jul 2008 23:30:46 -0700 (PDT)\r\nMessage-ID: &lt;9f0578290807302330u2f54ccw674668056398eb35@...&gt;\r\nDate: Thu, 31 Jul 2008 08:30:46 +0200\r\nTo: &quot;=?ISO-8859-1?Q?Rickard_=D6berg?=&quot; &lt;rickardoberg@...&gt;\r\nCc: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;48915906.40204@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;488E9439.7000800@...&gt;\n\t &lt;9f0578290807302310p48331b63n6fecf53402c1bcd9@...&gt;\n\t &lt;48915906.40204@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;\r\nSubject: Re: [rest-discuss] REST for rich client persistence\r\nX-Yahoo-Group-Post: member; u=344081753; y=MVufzeeZc9C5K9aGnUR44L8za06KGMJtV7msoafmCF5sMT0\r\nX-Yahoo-Profile: erlingwl\r\n\r\nOn Thu, Jul 31, 2008 at 8:17 AM, Rickard =D6berg &lt;rickardoberg@...&gt; w=\r\nrote:\n&gt; Erling Wegger Linde wrote:\n&gt;&gt;\n&gt;&gt; You could just put your serialized=\r\n objects in RDF, XML, JSON(?) etc.\n&gt;&gt; in the &lt;content type=3D&quot;yourtype&quot;&gt; el=\r\nement of the &lt;entry&gt;s... If they\n&gt;&gt; don&#39;t map directly to the other element=\r\ns of Atom.\n&gt;\n&gt; Yeah that was the scheme I was thinking of (using RDF+Atom, =\r\nspecifically).\n\nOne great thing about Atom + RDF is that you get very stabl=\r\ne\ninterfaces - and hence a very loose coupling, especially if you use\nontol=\r\nogies that are widely known, such as FOAF, SIOC ++ You can\nimplement your c=\r\nlients and servers in any language you want.\n\n&gt;\n&gt;&gt; I have created parser + =\r\nserialize methods on my objects and are using\n&gt;&gt; them on both client and se=\r\nrver side.. You only need an AtomPub library\n&gt;&gt; to handle the communication=\r\n (++).\n&gt;\n&gt; Abdera seems like a good fit for that.\n\nI guess so, I have used =\r\nRome and that works great too.\n\n&gt;\n&gt;&gt; You might have to cache, or do somethi=\r\nng clever on the client side if\n&gt;&gt; the response times are slow, but I guess=\r\n there are a lot of techniques\n&gt;&gt; to do that both for GUIs and of course fo=\r\nr REST in general.\n&gt;\n&gt; I expect my clients to be in Java, so caching should=\r\n be fine. And the\n&gt; caching, and possibility to do routing, is one of the m=\r\nain reasons I want to\n&gt; use REST as the &quot;protocol&quot;, even though an all-Java=\r\n RMI-based one would have\n&gt; &quot;worked&quot; as well.\n\nAs mentioned above, REST giv=\r\nes you a language independent stable\ninterface (even more with AtomPub). So=\r\n if you decide to implement you\nclient or server in something else than Jav=\r\na in the future, it would\nstill work as before =3D)\n\n- Erling\n\n&gt;\n&gt; /Rickard=\r\n\n&gt;\n\n"}}