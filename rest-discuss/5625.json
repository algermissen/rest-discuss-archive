{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":251639495,"authorName":"Tom Hedley","from":"Tom Hedley &lt;tom.hedley@...&gt;","profile":"tom.hedley","replyTo":"SENDER","senderId":"X3XbtK35_eaoCAxK-yaOalB28fCtyG6Hu7d92Qg-va7wWWsF8-6ESJbleDf6_PqxTDKiB-1_U7ZDDn-LvmDW1TzEyTCo6low","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Cachable representations that are slow to generate.","postDate":"1135171983","msgId":5625,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDUxMjIxMTMzMzAzLjgyMjMxLnFtYWlsQHdlYjM1NzEzLm1haWwubXVkLnlhaG9vLmNvbT4=","inReplyToHeader":"PEJBWTEwMS1EQVYyRTk5NThCOUMzNzY5RUJFQkNBRTVEODNFMEBwaHguZ2JsPg=="},"prevInTopic":5617,"nextInTopic":0,"prevInTime":5624,"nextInTime":5626,"topicId":5612,"numMessagesInTopic":3,"msgSnippet":"... This appears like a much simpler solution, thanks for making me aware of this. ... Thats helpful to know I was on the right track, thanks. A nice idea to","rawEmail":"Return-Path: &lt;tom.hedley@...&gt;\r\nX-Sender: tom.hedley@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 28257 invoked from network); 21 Dec 2005 13:36:54 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m34.grp.scd.yahoo.com with QMQP; 21 Dec 2005 13:36:54 -0000\r\nReceived: from unknown (HELO web35713.mail.mud.yahoo.com) (66.163.179.167)\n  by mta4.grp.scd.yahoo.com with SMTP; 21 Dec 2005 13:36:53 -0000\r\nReceived: (qmail 82233 invoked by uid 60001); 21 Dec 2005 13:33:03 -0000\r\nMessage-ID: &lt;20051221133303.82231.qmail@...&gt;\r\nReceived: from [84.64.13.171] by web35713.mail.mud.yahoo.com via HTTP; Wed, 21 Dec 2005 05:33:03 PST\r\nDate: Wed, 21 Dec 2005 05:33:03 -0800 (PST)\r\nTo: Mike Dierken &lt;mdierken@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;BAY101-DAV2E9958B9C3769EBEBCAE5D83E0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Tom Hedley &lt;tom.hedley@...&gt;\r\nSubject: RE: [rest-discuss] Cachable representations that are slow to generate.\r\nX-Yahoo-Group-Post: member; u=251639495; y=OB0HSN7EUoWtWBOXi1U0af8vt_UBDS_eJQ0UgM7tfg6ytXgLzw\r\nX-Yahoo-Profile: tom.hedley\r\n\r\n--- Mike Dierken wrote:\n\n&gt; If you are doing a &#39;service&#39;, then a long running\n&gt; request isn&#39;t a problem.\n&gt; Even if your network connection goes down, then your\n&gt; URIs are the same\n&gt; between requests...\n\nThis appears like a much simpler solution, thanks for\nmaking me aware of\nthis.\n\n&gt; For user-interface, you can return a &#39;generating&#39;\n&gt; representation (with\n&gt; explicit cache instructions with your best guess at\n&gt; the duration to generate\n&gt; the final representation) and then when it is done,\n&gt; the next request would\n&gt; return the generated content.\n\nThats helpful to know I was on the right track,\nthanks. A nice\nidea to make the &#39;generating&#39; representation cachable\nfor the\nestimated time.\n\nI&#39;m still confused about the most suitable choice of\nresponse status\ncode for this &#39;generating&#39; state.  It seems to me that\nthe meaning of\n&#39;202 Accepted&#39; according to the definition in RFC 2616\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.3\nappears to match the semantics of this situation. \nHowever, it doesn&#39;t explicitly state that it can be\nused in response \nto GET and the only reference I have found to using\nGET with 202 is in\nhttp://groups.yahoo.com/group/rest-discuss/message/4531\n, which\ndismisses it (though in a different situation).\n\nIs it ever valid to return a 202 in response to a GET\nor am I\nmissing something?\n\nAny opinions on what would be a good status code to\nuse in this\nsituation?\n\nTom\n\n&gt; &gt; -----Original Message-----\n&gt; &gt; From: rest-discuss@yahoogroups.com \n&gt; &gt; [mailto:rest-discuss@yahoogroups.com] On Behalf Of\n&gt; tom.hedley\n&gt; &gt; Sent: Sunday, December 18, 2005 9:09 AM\n&gt; &gt; To: rest-discuss@yahoogroups.com\n&gt; &gt; Subject: [rest-discuss] Cachable representations\n&gt; that are \n&gt; &gt; slow to generate.\n&gt; &gt; \n&gt; &gt; Hello,\n&gt; &gt; \n&gt; &gt; I&#39;m a newbie trying to design a RESTful web\n&gt; interface.\n&gt; &gt; \n&gt; &gt; I was wondering how to expose a simple resource\n&gt; when the \n&gt; &gt; representation may take several minutes to\n&gt; generate at the \n&gt; &gt; origin server although that representation can\n&gt; then be \n&gt; &gt; subsequently be cached.\n&gt; &gt; \n&gt; &gt; The resources I have in mind are audio mixes\n&gt; generated by \n&gt; &gt; processing a pair of audio files selected from a\n&gt; set on the \n&gt; &gt; origin server.  Each mix is completely specified\n&gt; by two \n&gt; &gt; identifiers in a specific order and its\n&gt; representation would \n&gt; &gt; be an mp3 file.  Although a URI for each resource\n&gt; could \n&gt; &gt; exist, there would be too many combinations to\n&gt; store all \n&gt; &gt; possible mixed mp3 files on the origin server\n&gt; simultaneously \n&gt; &gt; (and maybe some that would never be requested). \n&gt; It would \n&gt; &gt; therefore necessary to generate them when required\n&gt; in a batch \n&gt; &gt; process and cache the most recently requested\n&gt; files on disk \n&gt; &gt; for future requests.\n&gt; &gt; \n&gt; &gt; From the clients perspective I see two possible\n&gt; states of the \n&gt; &gt; resource (neglecting errors): &#39;mixing&#39; and\n&gt; &#39;complete&#39;.  I was \n&gt; &gt; thinking the simplest approach would be to have a\n&gt; single URI \n&gt; &gt; for each combination of mixed audio files. While\n&gt; mixing it \n&gt; &gt; would be represented by an XML message indicating\n&gt; an \n&gt; &gt; estimated time at which the file can be\n&gt; dereferenced from \n&gt; &gt; this same URI. The mp3 would then be made\n&gt; available from this \n&gt; &gt; URI when completed and cached.  Does representing\n&gt; different \n&gt; &gt; states of a single resource with different MIME\n&gt; types violate REST?\n&gt; &gt; \n&gt; &gt; Given that the &#39;mixing&#39; and &#39;complete&#39; states are\n&gt; determined \n&gt; &gt; indirectly by the clients requests, and the server\n&gt; decides \n&gt; &gt; how long they should be cached, I reason that it\n&gt; is only \n&gt; &gt; necessary for the client to GET the current\n&gt; representations \n&gt; &gt; of this state.  In this case is it reasonable to\n&gt; represent \n&gt; &gt; the mixing state with a &#39;202 Accepted&#39;\n&gt; &gt; status code to indicate processing is not yet\n&gt; complete, even \n&gt; &gt; though the client has not explicitly requested\n&gt; that this \n&gt; &gt; process be performed with say POST or PUT?.\n&gt; &gt; \n&gt; &gt; Any thoughts on this or other ways to solve this\n&gt; type of \n&gt; &gt; problem in a RESTful manner would be much\n&gt; appreciated.\n&gt; &gt; \n&gt; &gt; Cheers,\n&gt; &gt; Tom\n\n\n__________________________________________________\nDo You Yahoo!?\nTired of spam?  Yahoo! Mail has the best spam protection around \nhttp://mail.yahoo.com \n\n"}}