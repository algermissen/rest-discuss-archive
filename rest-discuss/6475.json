{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic James Ferrier","from":"Nic James Ferrier &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"NY5JIFAapr8088--1Z4ze3mgAbGIx1gOCA-Q2GvS3lJR7CF0K8NKtu78n4BZQb7HXKiOIpV9NeY6pDQvgVT_Hzgwz5SDdjzxjccuIQqkeNDVtJU8Kb2jTg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP OPTIONS method for querying capabilities of a resource.","postDate":"1155830816","msgId":6475,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3azY1NzVvdGIuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+","inReplyToHeader":"PGVjMjFvdCtqbmE1QGVHcm91cHMuY29tPiAoQW5keSdzIG1lc3NhZ2Ugb2YgIlRodSwgMTcgQXVnIDIwMDYgMTU6MjU6MTcgLTAwMDAiKQ==","referencesHeader":"PGVjMjFvdCtqbmE1QGVHcm91cHMuY29tPg=="},"prevInTopic":6473,"nextInTopic":6477,"prevInTime":6474,"nextInTime":6476,"topicId":6473,"numMessagesInTopic":10,"msgSnippet":"... I ve been trying to work towards a framework that allowed the framework to auto-discover OPTIONS. This was kinda done in the Servlet API. A servlet can","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 27522 invoked from network); 17 Aug 2006 16:22:12 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m39.grp.scd.yahoo.com with QMQP; 17 Aug 2006 16:22:12 -0000\r\nReceived: from unknown (HELO owls-house.tapsellferrier.co.uk) (81.187.188.218)\n  by mta1.grp.scd.yahoo.com with SMTP; 17 Aug 2006 16:22:12 -0000\r\nReceived: from nicferrier.tapsellferrier.co.uk ([172.31.50.1])\n\tby owls-house.tapsellferrier.co.uk with esmtp (Exim 4.60 #1 (Debian))\n\tid 1GDkSV-00072I-3R; Thu, 17 Aug 2006 17:11:03 +0100\r\nReceived: from nferrier by nicferrier.tapsellferrier.co.uk with local (Exim 4.50)\n\tid 1GDkOW-00007W-E2; Thu, 17 Aug 2006 17:06:56 +0100\r\nTo: &quot;Andy&quot; &lt;IMarvinTPA@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;ec21ot+jna5@...&gt;\r\nDate: Thu, 17 Aug 2006 17:06:56 +0100\r\nIn-Reply-To: &lt;ec21ot+jna5@...&gt; (Andy&#39;s message of &quot;Thu, 17 Aug 2006 15:25:17 -0000&quot;)\r\nMessage-ID: &lt;87k6575otb.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Nic James Ferrier &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] HTTP OPTIONS method for querying capabilities of a resource.\r\nX-Yahoo-Group-Post: member; u=3702469; y=ofUv-48JnsNw4fITBjw3CNsuiwaXqhTlqgIEtXF6lzUIgciihqfXu7An_YJwxQz0kZ0\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\n&quot;Andy&quot; &lt;IMarvinTPA@...&gt; writes:\n\n&gt; I see lots of discussion on the &quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, and &quot;DELETE&quot;\n&gt; HTTP methods when talking about REST, but I never see much about how\n&gt; to discover what you can do with a resource.  Wouldn&#39;t it make sense\n&gt; to ask the resource what it is capable of?  The HTTP specification\n&gt; details &quot;OPTIONS&quot; as \n&gt; &quot;The OPTIONS method represents a request for information about the\n&gt; communication options available on the request/response chain\n&gt; identified by the Request-URI. This method allows the client to\n&gt; determine the options and/or requirements associated with a resource,\n&gt; or the capabilities of a server, without implying a resource action or\n&gt; initiating a resource retrieval.&quot;\n\n\nI&#39;ve been trying to work towards a framework that allowed the\nframework to auto-discover OPTIONS.\n\nThis was kinda done in the Servlet API. A servlet can implement the\ndoGet, doPost, doPut, etc... methods and the doOptions works this out\nand sends an appropriate response.\n\nWhat couldn&#39;t be done in the Servlet API was auto-discovering content\ntypes accepted or generated because it&#39;s not declared anywhere.\n\nI have been working on a purely functional (in XSLT) representation of a\nwebapp. Because it&#39;s purely functional (and therefore declarative) it\nshould be possible to infer everything about the aspects of the\nrequest and response.\n\n\n\n&gt; I&#39;m not going to argue which description language is the best, but I\n&gt; do think that this method should not be ignored.  It could also vary\n&gt; depending on if the request contained an Accept header.  For\n&gt; text/html, it could return something very human readable.  For\n&gt; application/xml or text/xml, it could return a standardized resource\n&gt; description in XML.  (For application/json, it could return the above\n&gt; in JSON notation, etc.)\n\nAFAIK you don&#39;t need anything more than HTTP provides: the HTTP header\ncan state which methods are supported for a particular URI and which\ncontent types, encodings, languages, etc...\n\nOPTIONs can, and should, tell you a fantastic amount about the\nresource.\n\nA pity it&#39;s so often overlooked.\n\n-- \nNic Ferrier\nhttp://www.tapsellferrier.co.uk   for all your tapsell ferrier needs\n\n"}}