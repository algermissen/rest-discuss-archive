{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289247137,"authorName":"Benjamin Hawkes-Lewis","from":"Benjamin Hawkes-Lewis &lt;bhawkeslewis@...&gt;","profile":"benjaminhawkeslewis","replyTo":"SENDER","senderId":"35Q025T5YCi0mq9Pe1y0DPNC0bZkHRZ9jd5GJJBItGkTdrO5HNRn-glSl9bo2APatcLmSLF2aEB-t3R0yLNrFbTYGTc30mnQBArRH6tQxNYGNEDX9V_9nvIZ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1293583109","msgId":17161,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrVjdfbUtPV1MwdzN0cW5MWE4rdkJCeCtIUDBRYmcrM0VOU0hHcUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIzQTFBNkE1Mzk0QjQ2MEI4MzE3MzYyNkY0NDUwRTJBQEpyblBDPg==","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPgk8QUFOTGtUaW1keFVTSk9uRVFEcVp1MjVmLU04b2J5UTJ0WEtSUGFTN2ErcWU3QG1haWwuZ21haWwuY29tPgk8MjNBMUE2QTUzOTRCNDYwQjgzMTczNjI2RjQ0NTBFMkFASnJuUEM+"},"prevInTopic":17160,"nextInTopic":17162,"prevInTime":17160,"nextInTime":17162,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"... Indeed. ... Typical websites and APIs (even those marketed as RESTful) differ radically from a REST service as defined by Fielding. This is especially","rawEmail":"Return-Path: &lt;bhawkeslewis@...&gt;\r\nX-Sender: bhawkeslewis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47188 invoked from network); 29 Dec 2010 00:38:31 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 29 Dec 2010 00:38:31 -0000\r\nX-Received: from unknown (HELO mail-wy0-f169.google.com) (74.125.82.169)\n  by mta1.grp.sp2.yahoo.com with SMTP; 29 Dec 2010 00:38:31 -0000\r\nX-Received: by wyj26 with SMTP id 26so10080798wyj.0\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 28 Dec 2010 16:38:30 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.170.213 with SMTP id p63mr18070399wel.6.1293583109581;\n Tue, 28 Dec 2010 16:38:29 -0800 (PST)\r\nX-Received: by 10.216.59.138 with HTTP; Tue, 28 Dec 2010 16:38:29 -0800 (PST)\r\nIn-Reply-To: &lt;23A1A6A5394B460B83173626F4450E2A@JrnPC&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\n\t&lt;AANLkTimdxUSJOnEQDqZu25f-M8obyQ2tXKRPaS7a+qe7@...&gt;\n\t&lt;23A1A6A5394B460B83173626F4450E2A@JrnPC&gt;\r\nDate: Wed, 29 Dec 2010 00:38:29 +0000\r\nMessage-ID: &lt;AANLkTikV7_mKOWS0w3tqnLXN+vBBx+HP0Qbg+3ENSHGq@...&gt;\r\nTo: =?UTF-8?Q?J=C3=B8rn_Wildt?= &lt;jw@...&gt;\r\nCc: Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Benjamin Hawkes-Lewis &lt;bhawkeslewis@...&gt;\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=289247137; y=9ahTG40jA17o36q0dzGUi8uvmwNqQYfJVFCiYVQN8No2jznnHFDyWjIFii4bEA\r\nX-Yahoo-Profile: benjaminhawkeslewis\r\n\r\nOn Tue, Dec 28, 2010 at 9:51 PM, J=C3=B8rn Wildt &lt;jw@...&gt; wrote=\r\n:\n&gt; Agreed. But I am not striving towards a good h2m interface - only an\n&gt; =\r\nacceptable one that will allow a developer of a client to interact with my\n=\r\n&gt; API using a standard browser. Nothing fancy.\n&gt;\n&gt; I wouldn&#39;t expect my per=\r\nfectly polished end-user website to be used as a REST\n&gt; API. But maybe I am=\r\n wrong here too. It could just be that, assuming I am\n&gt; going to develop th=\r\nat end-user website anyway, it would be faster to\n&gt; incoorporate m2m detail=\r\ns in a fancy end-user website, than developing both a\n&gt; end-user website an=\r\nd a REST API on a secondary webserver.\n\nIndeed.\n\n&gt; It would just be so diff=\r\nerent than my (the?) usual conception of a REST API\n&gt; as a stand-alone API =\r\ndecoupled from the end-user website. One typical\n&gt; difference is the access=\r\n control where the end-user website uses cookies,\n&gt; whereas the REST API us=\r\nes some of the HTTP authentication schemes.\n\nTypical websites and APIs (eve=\r\nn those marketed as RESTful) differ radically\nfrom a REST service as define=\r\nd by Fielding.\n\nThis is especially clear when Fielding discusses RESTful ec=\r\nommerce:\n\n&quot;the use of cookies to identify a user-specific &quot;shopping basket&quot;=\r\n within a\nserver-side database could be more efficiently implemented by def=\r\nining the\nsemantics of shopping items within the hypermedia data formats, a=\r\nllowing the\nuser agent to select and store those items within their own cli=\r\nent-side\nshopping basket, complete with a URI to be used for check-out when=\r\n the client\nis ready to purchase&quot;\n\nhttp://www.ics.uci.edu/~fielding/pubs/di=\r\nssertation/evaluation.htm#sec_6_3\n\nSee also:\n\nhttp://tech.groups.yahoo.com/=\r\ngroup/rest-discuss/message/3583\n\nThis may be a good time to remind you that=\r\n non-RESTful services may benefit\nfrom adopting RESTful ideas, without beco=\r\nming a Fielding-certifiable\nRESTful service =E2=80=A6\n\nAlso, what stops you=\r\n abstracting authentication to accept either\ncookies-based auth _or_ HTTP a=\r\nuth for the same service?\n\n&gt; It would also be way to easy to break the API =\r\nthe first time someone puts a\n&gt; new theme template on the end-user website.=\r\n  Better to have web designers\n&gt; working on the end-user website and coders=\r\n to work on the REST API.\n\nYou&#39;re trying to solve a _social_ problem where =\r\nyou have an absence of\nquality control over critical parts of your system.\n=\r\n\nPeople who cannot maintain the HTML for a HATEOS service cannot maintain t=\r\nhe\nHTML for a quality website, and vice versa. Both of these tasks require =\r\na close\nattention to markup semantics and how clients (browsers, spiders, a=\r\nssistive\ntechnology, automated testing software, API clients, etc.), and be=\r\nhind them\nhuman beings (surfers, searchers, people with disabilities, test-=\r\nwriters,\nthird-party developers, etc.), are going to interface with those s=\r\nemantics.\n\nTherefore building parallel systems is a poor solution to that p=\r\nroblem compared\nto cross-training, code review, and automated testing.\n\nBui=\r\nlding a single HATEOS service forces you to:\n\n   1. Think about how human b=\r\neings will want to view, interact with, and add to\nyour data.\n   2. Think a=\r\nbout how to manage changes so that clients (whether human\nor machine) can a=\r\ndapt.\n\nThese are challenges, but being forced to think about human interact=\r\nion with\nyour service is arguably a very good thing, for example for ensuri=\r\nng your\ndomain modelling is good and your pace of change is right.\n\n--\nBenj=\r\namin Hawkes-Lewis\n\n"}}