{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"PISf2h8oZhRIKTybJdhhle2OSwlvV_d3mBBliGaLdiiL2UKFWgCr-AaVsu7Ai94H5_gWpZ1aiCliomCvdq6ZBo8Ntw7PMvDUfVfI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How can a framework/library encourage REST-ful \tdevelopment?","postDate":"1263597908","msgId":14569,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MTAwMTE1MTUyNW41YzBjNDg4YnRlYjlhNGViMGY1MDM0YjZjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGRlNzBiMzlkMTAwMTE1MTM0NXY0YzU4YjcxOWtjODI0ODU0ZTg3ZjY4OWFAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPgkgPDgxNThhZDc1MTAwMTE1MTMzM2lkOTE5NDZjcmE0MzNhMTUxNGExMjY1YjVAbWFpbC5nbWFpbC5jb20+CSA8ZGU3MGIzOWQxMDAxMTUxMzQ1djRjNThiNzE5a2M4MjQ4NTRlODdmNjg5YUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":14568,"nextInTopic":14570,"prevInTime":14568,"nextInTime":14570,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"... Noah- It s a valid point, and one that I have given some thought to.  Opaqueness of the URL is valuable if/when is encourages use of HATEOS (and the myth ","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 68064 invoked from network); 15 Jan 2010 23:25:09 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 15 Jan 2010 23:25:09 -0000\r\nX-Received: from unknown (HELO mail-ew0-f217.google.com) (209.85.219.217)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Jan 2010 23:25:09 -0000\r\nX-Received: by ewy9 with SMTP id 9so1354899ewy.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 15 Jan 2010 15:25:08 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.90.67 with SMTP id d45mr1099334wef.42.1263597908210; Fri, \n\t15 Jan 2010 15:25:08 -0800 (PST)\r\nIn-Reply-To: &lt;de70b39d1001151345v4c58b719kc824854e87f689a@...&gt;\r\nReferences: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\n\t &lt;8158ad751001151333id91946cra433a1514a1265b5@...&gt;\n\t &lt;de70b39d1001151345v4c58b719kc824854e87f689a@...&gt;\r\nDate: Fri, 15 Jan 2010 17:25:08 -0600\r\nX-Google-Sender-Auth: fd5f622c36a508ec\r\nMessage-ID: &lt;8158ad751001151525n5c0c488bteb9a4eb0f5034b6c@...&gt;\r\nTo: Noah Campbell &lt;noahcampbell@...&gt;\r\nCc: mike amundsen &lt;mamund@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016e6d7df7875346d047d3c50cd\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] How can a framework/library encourage REST-ful \n\tdevelopment?\r\nX-Yahoo-Group-Post: member; u=11652427; y=lwKj2YRw7fLCr_0XtatTYZ5AiNVCoxX49bvd5yyvizyyj2qdZtsKchv7_Q\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\r\n--0016e6d7df7875346d047d3c50cd\r\nContent-Type: text/plain; charset=UTF-8\r\n\r\nOn Fri, Jan 15, 2010 at 3:45 PM, Noah Campbell &lt;noahcampbell@...&gt;wrote:\n\n&gt; Hi Peter,\n&gt;\n&gt; Do you mind if we pick nits on this requirement?\n&gt;\n&gt; &quot;an easy way to parse the requested URL (w/ regex or named sections, etc.)&quot;\n&gt;\n&gt; I think the binding of a URL and the semantics of that URL to an\n&gt; implementation should be discouraged.\n&gt;\n&gt; Thoughts?\n&gt;\n&gt;\nNoah-\n\nIt&#39;s a valid point, and one that I have given some thought to.  Opaqueness\nof the URL is valuable if/when is encourages use of HATEOS (and the myth\nthat REST == &quot;pretty URLs&quot; is hard but important to debunk).  I guess I&#39;d\nhave to say that it depends on what you mean by &quot;implementation&quot; and how\nleaky your implementation abstractions are.  I can imagine a nicely\nabstracted system for which such &quot;semantic&quot; URLs could be quite appropriate\n(as long as hypertext drives the application state in typical use of the web\napp).  Here&#39;s a bit of wisdom from Roy F. on the matter:\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/3232\n\nEither way, the server needs to do something useful w/ the URL and thus\nneeds way to &quot;understand&quot; it.\n\n--peter\n\n\n&gt; -Noah\n&gt;\n&gt; On Fri, Jan 15, 2010 at 1:33 PM, Peter Keane &lt;pkeane@...&gt;wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; You might check out this post from Erik Wilde:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; http://dret.typepad.com/dretblog/2009/05/rest-programming-toolbox-requirements.html\n&gt;&gt;\n&gt;&gt; For me, the bare minimum includes:\n&gt;&gt;\n&gt;&gt; - support for GET,PUT,POST, DELETE http methods (at least ... HEAD,\n&gt;&gt; OPTIONS nice, too).\n&gt;&gt; - for GET requests, I want to know what media type is preferred\n&gt;&gt; (combination of looking at Accept header and/or file extension, etc.)\n&gt;&gt; - for PUT/POST I want to be able to quickly and easily now the incoming\n&gt;&gt; Content-type\n&gt;&gt; - an easy way to parse the requested URL (w/ regex or named sections,\n&gt;&gt; etc.)\n&gt;&gt; - the ability to dispatch to a handler function by any combination of the\n&gt;&gt; above\n&gt;&gt; - tools for creating representations in the most common media types: HTML\n&gt;&gt; (a template language), JSON, Atom, RDF, etc. and serving the proper one\n&gt;&gt; based on requested type.\n&gt;&gt;\n&gt;&gt; In PHP, I don&#39;t think there is an obvious option (we&#39;ve built our own\n&gt;&gt; RESTful classes for Zend Framework: http://github.com/pkeane/cola-zend),\n&gt;&gt; what I know of RoR seems to meet criteria, Django seems pretty nicely\n&gt;&gt; RESTful, as does the Google App Engine &quot;WebApp.&quot;\n&gt;&gt;\n&gt;&gt; --peter\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Fri, Jan 15, 2010 at 2:27 PM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Recently, I&#39;ve been thinking about how a coding framework or library\n&gt;&gt;&gt; can influence the way developers implement applications. What would a\n&gt;&gt;&gt; coding environment look like if it was meant to encourage results that\n&gt;&gt;&gt; followed a particular _architectural_ style (not programming style).\n&gt;&gt;&gt;\n&gt;&gt;&gt; IOW, is there a way to craft a framework that constrains developers in\n&gt;&gt;&gt; ways that results in a REST-ful implementation of the application?\n&gt;&gt;&gt;\n&gt;&gt;&gt; I did some digging, but have yet to find any writing on this topic.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Here are some &quot;off-the-top-of-my-head&quot; items:\n&gt;&gt;&gt;\n&gt;&gt;&gt; For example, a framework might exhibit these REST-like traits:\n&gt;&gt;&gt; - there is a clear separation of concerns between resource\n&gt;&gt;&gt; identifiers, resources, and representations\n&gt;&gt;&gt; - developers must define a resource as the public application interface\n&gt;&gt;&gt; - the Uniform Interface is enforced (e.g. those methods are the only\n&gt;&gt;&gt; public members exposed for a resource)\n&gt;&gt;&gt; - developers must always associate one or more representation formats\n&gt;&gt;&gt; with a resource and/or resource method before the implementation is\n&gt;&gt;&gt; valid\n&gt;&gt;&gt; - there is no way to define and use server-side session state objects\n&gt;&gt;&gt;\n&gt;&gt;&gt; Some HTTP-specific traits might be:\n&gt;&gt;&gt; - support for content negotiation is &quot;baked-in&quot;\n&gt;&gt;&gt; - support for conditional requests is &quot;baked-in&quot; and automatic\n&gt;&gt;&gt; - RPC-like implementation patterns (e.g. gateway URIs) are somehow\n&gt;&gt;&gt; difficult to implement or are flagged as invalid\n&gt;&gt;&gt;\n&gt;&gt;&gt; Any comments? Is this line of thinking pure folly? old hat? already\n&gt;&gt;&gt; resolved sufficiently?\n&gt;&gt;&gt;\n&gt;&gt;&gt; mca\n&gt;&gt;&gt; http://amundsen.com/blog/\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; \n&gt;\n&gt;\n&gt;\n\r\n--0016e6d7df7875346d047d3c50cd\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Jan 15, 2010 at 3:45 PM, Noah Ca=\r\nmpbell &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:noahcampbell@...&quot;&gt;noah=\r\ncampbell@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quot=\r\ne&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt =\r\n0.8ex; padding-left: 1ex;&quot;&gt;\nHi Peter,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Do you mind if we =\r\npick nits on this requirement?&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;=\r\nspan style=3D&quot;font-family: arial,sans-serif; font-size: 13px; border-collap=\r\nse: collapse;&quot;&gt;&quot;an easy way to parse the requested URL (w/ regex or na=\r\nmed sections, etc.)&quot;&lt;/span&gt;&lt;br&gt;\n\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;I think the bind=\r\ning of a URL and the semantics of that URL to an implementation should be d=\r\niscouraged. =C2=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thoughts?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;=\r\n/blockquote&gt;&lt;div&gt;&lt;br&gt;Noah-&lt;br&gt;&lt;br&gt;It&#39;s a valid point, and one that I ha=\r\nve given some thought to.=C2=A0 Opaqueness of the URL is valuable if/when i=\r\ns encourages use of HATEOS (and the myth that REST =3D=3D &quot;pretty URLs=\r\n&quot; is hard but important to debunk).=C2=A0 I guess I&#39;d have to say =\r\nthat it depends on what you mean by &quot;implementation&quot; and how leak=\r\ny your implementation abstractions are.=C2=A0 I can imagine a nicely abstra=\r\ncted system for which such &quot;semantic&quot; URLs could be quite appropr=\r\niate (as long as hypertext drives the application state in typical use of t=\r\nhe web app).=C2=A0 Here&#39;s a bit of wisdom from Roy F. on the matter:&lt;br=\r\n&gt;\n&lt;br&gt;&lt;a href=3D&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/32=\r\n32&quot;&gt;http://tech.groups.yahoo.com/group/rest-discuss/message/3232&lt;/a&gt;&lt;br&gt;&lt;br=\r\n&gt;Either way, the server needs to do something useful w/ the URL and thus ne=\r\neds way to &quot;understand&quot; it.&lt;br&gt;\n&lt;br&gt;--peter&lt;br&gt;=C2=A0&lt;/div&gt;&lt;block=\r\nquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 2=\r\n04); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;-Noah&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div&gt;&lt;div&gt;\n&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;=\r\n\nOn Fri, Jan 15, 2010 at 1:33 PM, Peter Keane &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=\r\n=3D&quot;mailto:pkeane@...&quot; target=3D&quot;_blank&quot;&gt;pkeane@...=\r\n&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; sty=\r\nle=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex;=\r\n padding-left: 1ex;&quot;&gt;\n&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;\n\n\n\n\n\n\n\n        \n\n\n=\r\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\nYou might check out this post from Erik Wilde:&lt;br&gt;=\r\n&lt;br&gt;&lt;a href=3D&quot;http://dret.typepad.com/dretblog/2009/05/rest-programming-to=\r\nolbox-requirements.html&quot; target=3D&quot;_blank&quot;&gt;http://dret.typepad.com/dretblog=\r\n/2009/05/rest-programming-toolbox-requirements.html&lt;/a&gt;&lt;br&gt;\n\n\n&lt;br&gt;For me, t=\r\nhe bare minimum includes:&lt;br&gt;&lt;br&gt;- support for GET,PUT,POST, DELETE http me=\r\nthods (at least ... HEAD, OPTIONS nice, too).&lt;br&gt;- for GET requests, I want=\r\n to know what media type is preferred (combination of looking at Accept hea=\r\nder and/or file extension, etc.)&lt;br&gt;\n\n\n- for PUT/POST I want to be able to =\r\nquickly and easily now the incoming Content-type &lt;br&gt;- an easy way to parse=\r\n the requested URL (w/ regex or named sections, etc.)&lt;br&gt;- the ability to d=\r\nispatch to a handler function by any combination of the above&lt;br&gt;\n\n\n- tools=\r\n for creating representations in the most common media types: HTML (a templ=\r\nate language), JSON, Atom, RDF, etc. and serving the proper one based on re=\r\nquested type.&lt;br&gt;&lt;br&gt;In PHP, I don&#39;t think there is an obvious option (=\r\nwe&#39;ve built our own RESTful classes for Zend Framework: &lt;a href=3D&quot;http=\r\n://github.com/pkeane/cola-zend&quot; target=3D&quot;_blank&quot;&gt;http://github.com/pkeane/=\r\ncola-zend&lt;/a&gt;), what I know of RoR seems to meet criteria, Django seems pre=\r\ntty nicely RESTful, as does the Google App Engine &quot;WebApp.&quot;&lt;br&gt;\n\n=\r\n\n&lt;br&gt;--peter&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri,=\r\n Jan 15, 2010 at 2:27 PM, mike amundsen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;ma=\r\nilto:mamund@...&quot; target=3D&quot;_blank&quot;&gt;mamund@...&lt;/a&gt;&gt;&lt;/span&gt; wr=\r\note:&lt;br&gt;\n\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid=\r\n rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n=\r\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=C2=A0&lt;=\r\n/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Recently, I&#39;v=\r\ne been thinking about how a coding framework or library&lt;br&gt;\ncan influence t=\r\nhe way developers implement applications. What would a&lt;br&gt;\ncoding environme=\r\nnt look like if it was meant to encourage results that&lt;br&gt;\nfollowed a parti=\r\ncular _architectural_ style (not programming style).&lt;br&gt;\n&lt;br&gt;\nIOW, is there=\r\n a way to craft a framework that constrains developers in&lt;br&gt;\nways that res=\r\nults in a REST-ful implementation of the application?&lt;br&gt;\n&lt;br&gt;\nI did some d=\r\nigging, but have yet to find any writing on this topic.&lt;br&gt;\n&lt;br&gt;\nHere are s=\r\nome &quot;off-the-top-of-my-head&quot; items:&lt;br&gt;\n&lt;br&gt;\nFor example, a frame=\r\nwork might exhibit these REST-like traits:&lt;br&gt;\n- there is a clear separatio=\r\nn of concerns between resource&lt;br&gt;\nidentifiers, resources, and representati=\r\nons&lt;br&gt;\n- developers must define a resource as the public application inter=\r\nface&lt;br&gt;\n- the Uniform Interface is enforced (e.g. those methods are the on=\r\nly&lt;br&gt;\npublic members exposed for a resource)&lt;br&gt;\n- developers must always =\r\nassociate one or more representation formats&lt;br&gt;\nwith a resource and/or res=\r\nource method before the implementation is&lt;br&gt;\nvalid&lt;br&gt;\n- there is no way t=\r\no define and use server-side session state objects&lt;br&gt;\n&lt;br&gt;\nSome HTTP-speci=\r\nfic traits might be:&lt;br&gt;\n- support for content negotiation is &quot;baked-i=\r\nn&quot;&lt;br&gt;\n- support for conditional requests is &quot;baked-in&quot; and =\r\nautomatic&lt;br&gt;\n- RPC-like implementation patterns (e.g. gateway URIs) are so=\r\nmehow&lt;br&gt;\ndifficult to implement or are flagged as invalid&lt;br&gt;\n&lt;br&gt;\nAny com=\r\nments? Is this line of thinking pure folly? old hat? already&lt;br&gt;\nresolved s=\r\nufficiently?&lt;br&gt;\n&lt;br&gt;\nmca&lt;br&gt;\n&lt;a href=3D&quot;http://amundsen.com/blog/&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n=\r\n    &lt;div style=3D&quot;color: rgb(255, 255, 255); min-height: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/d=\r\niv&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\n\n\n\n\n\n&lt;br&gt;\n\n    \n    \n&lt;=\r\nbr&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;=\r\n/div&gt;\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0016e6d7df7875346d047d3c50cd--\r\n\n"}}