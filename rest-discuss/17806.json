{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":22895181,"authorName":"Dan Haywood","from":"Dan Haywood &lt;dan@...&gt;","profile":"danhaywood@ymail.com","replyTo":"SENDER","senderId":"AAjgCyemedLdEgqedennpXwJyUw69oFP8H31DN1ZKdIrYPH4QdNNQdAX3InR8iq8VcbkNOocXEFj9FzQuM2l4glK7Zws0nP1IPtxFsjHc6SA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Should a RESTful API expose use cases & view models rather than entities?","postDate":"1317209769","msgId":17806,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRFODMwNkE5LjIwOTA3MDBAaGF5d29vZC1hc3NvY2lhdGVzLmNvLnVrPg==","inReplyToHeader":"PC00Njg3NDM3NTA4NjIzMzU4MTMwQHVua25vd25tc2dpZD4=","referencesHeader":"PC00Njg3NDM3NTA4NjIzMzU4MTMwQHVua25vd25tc2dpZD4="},"prevInTopic":17803,"nextInTopic":17807,"prevInTime":17805,"nextInTime":17807,"topicId":17795,"numMessagesInTopic":16,"msgSnippet":"... But don t DTOs also constitute a client coupling, specifically to the parameters required to complete a particular use case? In other words, if the use","rawEmail":"Return-Path: &lt;dan@...&gt;\r\nX-Sender: dan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30953 invoked from network); 28 Sep 2011 11:36:08 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m9.grp.sp2.yahoo.com with QMQP; 28 Sep 2011 11:36:08 -0000\r\nX-Received: from unknown (HELO mail-ww0-f44.google.com) (74.125.82.44)\n  by mta1.grp.sp2.yahoo.com with SMTP; 28 Sep 2011 11:36:08 -0000\r\nX-Received: by wwf22 with SMTP id 22so6751699wwf.25\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 28 Sep 2011 04:36:07 -0700 (PDT)\r\nX-Received: by 10.227.145.139 with SMTP id d11mr2978145wbv.60.1317209766893;\n        Wed, 28 Sep 2011 04:36:06 -0700 (PDT)\r\nReturn-Path: &lt;dan@...&gt;\r\nX-Received: from [10.70.53.153] ([46.233.64.128])\n        by mx.google.com with ESMTPS id fq9sm40223383wbb.15.2011.09.28.04.36.05\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Wed, 28 Sep 2011 04:36:06 -0700 (PDT)\r\nMessage-ID: &lt;4E8306A9.2090700@...&gt;\r\nDate: Wed, 28 Sep 2011 12:36:09 +0100\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20110902 Thunderbird/6.0.2\r\nMIME-Version: 1.0\r\nTo: Glenn Block &lt;glenn.block@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;-4687437508623358130@unknownmsgid&gt;\r\nIn-Reply-To: &lt;-4687437508623358130@unknownmsgid&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dan Haywood &lt;dan@...&gt;\r\nSubject: Re: [rest-discuss] Should a RESTful API expose use cases & view models\n rather than entities?\r\nX-Yahoo-Group-Post: member; u=22895181; y=gVqCkYmaob8cfRgUuq_pBMv27_VJPaGx6whcx1u6AbyBYXoQPdAppKNzwyYJE_M\r\nX-Yahoo-Profile: danhaywood@...\r\n\r\nOn 28/09/2011 06:43, Glenn Block wrote:\n&gt; Another +1. The question of view models / entities is an implementation\n&gt; detail that is not related to REST or HTTP. Practically some folks do\n&gt; return models on the server which are transformed into a representation.\n&gt; For those cases I recommend using DTOs rather than the domain model\n&gt; because it removes any client coupling.\n\nBut don&#39;t DTOs also constitute a client coupling, specifically to the \nparameters required to complete a particular use case?\n\nIn other words, if the use case evolves so that it now requires another \ninput (&quot;would you like a pastry with your coffee, sir?&quot;) then the client \nwill still break, won&#39;t it?\n\n\n\n&gt;\n&gt; The potential for coupling exists in that case because you are returning\n&gt; some sort of model. The alternative is no model and simply execute\n&gt; server logic to directly create a representation.\n&gt;\nIsn&#39;t another alternative to return a model that is a metamodel, that \nfully describes the model being represented.\n\nI&#39;m not necessarily advocating this is how clients are implemented; I \njust feel that unless you move up to the metamodel then there&#39;s always \ngoing to be a semantic coupling of some sort (irrespective of whether \nthe representation is of raw domain entities or is of use cases/view \nmodels)?\n\nThoughts?\n\nDan\n\n"}}