{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"O9NxVrfbFK0-GfOXqwcwiWEc5amnNDr1MQaCekS0HO81IhNKmvcRLNqRalK8ELPzmOTyXTr0Wz4s65RwzqEpmec0vR8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Varying content by user or role","postDate":"1080212844","msgId":4284,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwODAyMTI4NDQuNDA2MmJkNmM4OGRlMEA4Mi4xOTUuMTI4LjE5Mj4=","inReplyToHeader":"PGMzczltOSs2Njk3QGVHcm91cHMuY29tPg==","referencesHeader":"PGMzczltOSs2Njk3QGVHcm91cHMuY29tPg=="},"prevInTopic":4282,"nextInTopic":4290,"prevInTime":4283,"nextInTime":4285,"topicId":4280,"numMessagesInTopic":19,"msgSnippet":"... There are three approaches I ve used with similar problems in the past: 1. Vary content according to user: Pro: a. Relatively simple URI space. Con: b.","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 30165 invoked from network); 25 Mar 2004 11:07:26 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m3.grp.scd.yahoo.com with QMQP; 25 Mar 2004 11:07:26 -0000\r\nReceived: from unknown (HELO mail.hosting365.ie) (82.195.128.132)\n  by mta4.grp.scd.yahoo.com with SMTP; 25 Mar 2004 11:07:25 -0000\r\nReceived: (qmail 25037 invoked from network); 25 Mar 2004 11:07:24 -0000\r\nReceived: from unknown (HELO web.hosting365.ie) (82.195.128.192)\n  by ns1.hosting365.ie with SMTP; 25 Mar 2004 11:07:24 -0000\r\nReceived: (from httpd@localhost)\n\tby web.hosting365.ie (8.11.6/8.11.6) id i2PB7O322181\n\tfor rest-discuss@yahoogroups.com; Thu, 25 Mar 2004 11:07:24 GMT\r\nX-Authentication-Warning: web.hosting365.ie: httpd set sender to jon@... using -f\r\nReceived: from 213.94.193.50 ([213.94.193.50]) \n\tby 82.195.128.192 (IMP) with HTTP \n\tfor &lt;jon@...@localhost&gt;; Thu, 25 Mar 2004 11:07:24 +0000\r\nMessage-ID: &lt;1080212844.4062bd6c88de0@82.195.128.192&gt;\r\nDate: Thu, 25 Mar 2004 11:07:24 +0000\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;c3s9m9+6697@...&gt;\r\nIn-Reply-To: &lt;c3s9m9+6697@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nUser-Agent: Internet Messaging Program (IMP) 3.2.2\r\nX-eGroups-Remote-IP: 82.195.128.132\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] Varying content by user or role\r\nX-Yahoo-Group-Post: member; u=164939419\r\nX-Yahoo-Profile: hack_poet\r\n\r\nQuoting mgvelvet &lt;mgarland@...&gt;:\n\n&gt; I have a business requirement to secure certain data within a \n&gt; resource. For example, in a personnel record, I must not return the \n&gt; salary amount unless the user is in an accounting or HR role. \n&gt; Another example: any collection of customers must return only the \n&gt; subset the user is authorized to see.\n&gt; \n&gt; I can vary the content based on who has authenticated, but I have an \n&gt; uneasy feeling that isn&#39;t RESTful. On the other hand, different URIs \n&gt; for each user seems to fragment the information space.\n&gt; \n&gt; Has anyone addressed a similar requirement? What are your thoughts?\n\nThere are three approaches I&#39;ve used with similar problems in the past:\n\n1. Vary content according to user:\nPro:\na. Relatively simple URI space.\nCon:\nb. Caching is effectively killed, or at most reduced to end-point private\ncaching (but caching sensitive data brings on it&#39;s own headaches).\n\n2. Vary content according to user - have a userID in the URI.\nPro:\na. Beats me, but this approach finds its way into specs quite a bit.\nCon:\nb. Caching &quot;works&quot; but because the URI is per-user it&#39;s little different than\nend-point private caching. Indeed it&#39;s worst because it brings the possibility\nof security issues or difficulties caused by buggy caches but without the\nadvantages of intermeditary caching.\nb. Duplicates the authentication procedure, since we can&#39;t trust the userID to\nbe correct, we must still check the user&#39;s credentials and act appropriately.\nc. Reduces the ease with which URIs can be shared (although we can redirect to\nan appropriate URI with the appropriate userID).\n\n3. Split the content, in this case having say /personnel/employee3 and\n/personnel/employee3/salary. The representation of the former would link to the\nlatter (whether a client could also just append /salary depends on your\nposition on opacity). The credentials needed to access /personnel/employee3\nwould differ from those needed to access /personnel/employee3/salary.\nPro:\na. Caching works correctly. It may be necessary to prevent the caching of\n/personnel/employee3/salary through caching directives and/or an encrypted\nconnection, but whatever decision is taken here doesn&#39;t hurt the caching of\n/personnel/employee3.\nb. There is now a clearer mapping between &quot;resources&quot; and &quot;permissions&quot;. It&#39;s\neasier for both the programmer of the client and the user to understand why\nthey cannot see something. Security errors (&quot;You do not have permission...&quot;)\ncan be more easily detected and triggered.\nCon:\na. Requires more client-server interactions (although the connection can be\nkept\nopen, much as the case of a webpage with images with HTTP1.1).\nb. Complicates the URI space, although since this complication reflects\nsomething inherent to the system modelled that could be considered a Pro as\nmuch as it&#39;s considered a Con.\n\nIn all I prefer the last.\n\nAnother thing I&#39;ve thought about, but haven&#39;t done is:\n4. Return a resource which includes encrypted information about salary as well\nas unencrypted information about those details accessible by all.\nPro:\na. Okay to be honest I thought about this because I want an excuse to play with\nXML Encryption, but that&#39;s still a &quot;pro&quot;.\nb. Caching works - the response can be cached for as long as both the\ninformation and the key used for encryption are both valid.\nc. Caching is secure as even if someone gets unauthorised access to cached\nrepresentations the sensitive data within that representation is encrypted.\nCon:\na. The overhead of building and using the appropriate cryptographic\ninfastructure.\nb. The fact that non-specialists tend to get encryption wrong. It&#39;s definitely\nsomething to thread lightly with.\nc. A change to the key must be considered a modification to the representation\nof the resource. It may not be easy to reflect this in Last-Modified and E-Tag\nheaders.\n\nSome of the above are more easily used with a &quot;Full View With Errors&quot; pattern\nand some with a &quot;Limited View&quot; pattern. However it&#39;s possible to present either\nview to the user with any of the above approaches, so which of those patterns\nto use is still very much a seperate design decision.\n\n-- \nJon Hanna\n&lt;http://www.hackcraft.net/&gt;\n&quot;ï¿½it has been truly said that hackers have even more words for\nequipment failures than Yiddish has for obnoxious people.&quot; - jargon.txt\n\n"}}