{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"sBLxqAIDba0bcpIyeq-nO8D2N8IGnQL_3Db4IUshnpbI3t2eifSaMJND4QBdP8_z_s2Q18WgHTwj9pJTMzMu9RNehBZwZkHUwzIARUMz4xE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] POST at most once","postDate":"1169894308","msgId":7732,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDc5RTdGRkNCLTRENTgtNEU5NC04RTM3LTU1RjUwNjA0Q0EyOEBtYWMuY29tPg==","inReplyToHeader":"PEM0MzhFQTlDLThBRjAtNDlENS1CRjFGLTk4QTA2RkIyQzU3M0BtYWMuY29tPg==","referencesHeader":"PDExNjkyOTc0NjUuNTEzMC41NS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+IDw0NUIyNzQ0Mi4zMDMwMDAzQGRlaG9yYS5uZXQ+IDwxMTY5ODc1OTc1LjUzNjMuNDIuY2FtZWxAbG9jYWxob3N0LmxvY2FsZG9tYWluPiA8QzQzOEVBOUMtOEFGMC00OUQ1LUJGMUYtOThBMDZGQjJDNTczQG1hYy5jb20+"},"prevInTopic":7731,"nextInTopic":7733,"prevInTime":7731,"nextInTime":7733,"topicId":7646,"numMessagesInTopic":40,"msgSnippet":"... Well, to be fair,  credits for this actually go to Phil: http://www.imc.org/atom-protocol/mail-archive/msg08072.html Jan","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 56330 invoked from network); 27 Jan 2007 10:41:48 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m40a.grp.scd.yahoo.com with QMQP; 27 Jan 2007 10:41:48 -0000\r\nReceived: from unknown (HELO smtpout.mac.com) (17.250.248.186)\n  by mta11.grp.scd.yahoo.com with SMTP; 27 Jan 2007 10:41:48 -0000\r\nReceived: from mac.com (smtpin06-en2 [10.13.10.151])\n\tby smtpout.mac.com (Xserve/8.12.11/smtpout16/MantshX 4.0) with ESMTP id l0RAduBj001786\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 27 Jan 2007 02:39:56 -0800 (PST)\r\nReceived: from [10.0.1.2] (d054228.adsl.hansenet.de [80.171.54.228])\n\t(authenticated bits=0)\n\tby mac.com (Xserve/smtpin06/MantshX 4.0) with ESMTP id l0RAdraO007643\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 27 Jan 2007 02:39:55 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nIn-Reply-To: &lt;C438EA9C-8AF0-49D5-BF1F-98A06FB2C573@...&gt;\r\nReferences: &lt;1169297465.5130.55.camel@...&gt; &lt;45B27442.3030003@...&gt; &lt;1169875975.5363.42.camel@...&gt; &lt;C438EA9C-8AF0-49D5-BF1F-98A06FB2C573@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;79E7FFCB-4D58-4E94-8E37-55F50604CA28@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Sat, 27 Jan 2007 11:38:28 +0100\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-Brightmail-Tracker: AAAAAA==\r\nX-Brightmail-scanned: yes\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] POST at most once\r\nX-Yahoo-Group-Post: member; u=289191104; y=9oYID-iYsJVkIwphJx_b3Qjnz78pT4bIXx-3lIHsFqejtzdpS3odPn9W\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn 27.01.2007, at 11:32, Jan Algermissen wrote:\n\n&gt;\n&gt; I had another thought the other day:\n\nWell, to be fair,  credits for this actually go to Phil:\nhttp://www.imc.org/atom-protocol/mail-archive/msg08072.html\n\nJan\n\n&gt;\n&gt; The model I am thinking about to achieve POE is based on the use of\n&gt; Atom and the inclusion of an ID in the POST body (or an HTTP header).\n&gt; POE aware clients would receive the ID to use from a factory, non-POE\n&gt; aware clients would just do the normal POST.\n&gt;\n&gt; The problem with getting the IDs is of course that it violates GET&#39;s\n&gt; idempotency (every GET will result in a new ID). OTH, IDs are cheap\n&gt; and if we are not talking about hundreds of GETs per second to the\n&gt; factory, it is propably not that bad at all. It is after all just a\n&gt; resource changing over time.\n&gt;\n&gt; Another thought I had was that the client could probably create the\n&gt; ID itself (e.g. a tag: URI) and a new HTTP return code could indicate\n&gt; to the client that the ID was&#39;t suitable (together with a good one in\n&gt; the payload).\n&gt;\n&gt; Thoughts?\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;\n&gt;&gt; My proposal to POST null is designed to create the temporary\n&gt;&gt; resource from a factory with a stable url, solving this problem.\n&gt;&gt; * POST is consumed on the POE resource, and can&#39;t be used for other\n&gt;&gt; normal purposes. For example, I can&#39;t use this mechanism to create a\n&gt;&gt; factory resource. OTOH, the POST null approach only deals with\n&gt;&gt; creation\n&gt;&gt; of the resource. POST is available for normal uses on the created\n&gt;&gt; resource.\n&gt;&gt;\n&gt;&gt; On HTTPLR:\n&gt;&gt; * This seems fairly similar to the POST null proposal. In fact,\n&gt;&gt; step one\n&gt;&gt; of the upload protocol appears to be a null POST with step two\n&gt;&gt; being the\n&gt;&gt; PUT. I&#39;m not sure about the explicit client DELETE of the channel,  \n&gt;&gt; and\n&gt;&gt; thus I&#39;m not sure about the need for the channel concept at all. A\n&gt;&gt; server must be free to time out the new resource in case of premature\n&gt;&gt; client failure, so you can&#39;t guarantee delivery unless the request\n&gt;&gt; sequence completes before this timeout. In light of this I prefer the\n&gt;&gt; channel concept to simply be replaced by the concept of a created\n&gt;&gt; resource.\n&gt;&gt; * I think there is some danger that the message could be read to be a\n&gt;&gt; whole HTTP request or SOAP request or other request that needs to be\n&gt;&gt; delivered. That interpretation doesn&#39;t smell right to me, and I think\n&gt;&gt; that any suggestion of message transfer should be explicitly\n&gt;&gt; avoided in\n&gt;&gt; favour of state transfer.\n&gt;&gt; * The GET appears OK, though clearly the server must also be free to\n&gt;&gt; purge old messages once its buffers start to fill up. This is a  \n&gt;&gt; matter\n&gt;&gt; of summarisation that also affects pub/sub mechanisms.\n&gt;&gt;\n&gt;&gt; I think my suggestion remains intact and I&#39;ll look to implementing it\n&gt;&gt; where at most once delivery is required in my architecture. The\n&gt;&gt; current\n&gt;&gt; factory resource pattern where a new resource is created by POSTing\n&gt;&gt; its\n&gt;&gt; state to the factory is replaced by a two-phase operation. Phase\n&gt;&gt; one is\n&gt;&gt; the same POST but with no content:\n&gt;&gt;&gt;&gt; POST http://example.com/resourcefactory\n&gt;&gt; &lt;&lt; 201 Created\n&gt;&gt; &lt;&lt; Location: http://example.com/theresource\n&gt;&gt; Phase two is to PUT the content you would have otherwise POSTed:\n&gt;&gt;&gt;&gt; PUT http://example.com/theresource\n&gt;&gt;&gt;&gt; &lt;&lt;the resource state&gt;&gt;\n&gt;&gt; &lt;&lt; 200 OK\n&gt;&gt; Either step can be repeated safely so long as the client doesn&#39;t\n&gt;&gt; backtrack by dong a POST after a PUT has been sent and so long as the\n&gt;&gt; server doesn&#39;t time out the created resource before the client is  \n&gt;&gt; sure\n&gt;&gt; the creation has occured. If 200 is returned from the POST a reliable\n&gt;&gt; delivery is not possible and a regular POST should be attempted. To\n&gt;&gt; support a reliable POST the server must create a temporary resource\n&gt;&gt; from\n&gt;&gt; the POST.\n&gt;&gt;\n&gt;&gt; Benjamin.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}