{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"83w4tJF5hXpZCTt8oBuXHduJOt3qo73wq6ypGNwEyc9Gv_h_SWsPRYi78twn8BcFfaC6Kcss2Ns36yYVQ_2APjq1f1Z82ebT9xEHud7oNwI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Programming Model for REST Clients","postDate":"1166000350","msgId":7221,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEE5RTQwNjE2LTUwNzMtNEU1NS05REI3LUVGRDdGNURCNTM3MEBtYWMuY29tPg=="},"prevInTopic":0,"nextInTopic":7222,"prevInTime":7220,"nextInTime":7222,"topicId":7221,"numMessagesInTopic":11,"msgSnippet":"Hi, the following is only half-cooked, but I d like to share it anyhow; maybe it inspires somebody. One of the strengths of RESTful systems is that the server","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 60069 invoked from network); 13 Dec 2006 08:59:21 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m23.grp.scd.yahoo.com with QMQP; 13 Dec 2006 08:59:21 -0000\r\nReceived: from unknown (HELO smtpout.mac.com) (17.250.248.178)\n  by mta5.grp.scd.yahoo.com with SMTP; 13 Dec 2006 08:59:21 -0000\r\nReceived: from mac.com (smtpin04-en2 [10.13.10.149])\n\tby smtpout.mac.com (Xserve/8.12.11/smtpout08/MantshX 4.0) with ESMTP id kBD8xH7t023900\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 13 Dec 2006 00:59:17 -0800 (PST)\r\nReceived: from [10.0.1.2] (d116212.adsl.hansenet.de [80.171.116.212])\n\t(authenticated bits=0)\n\tby mac.com (Xserve/smtpin04/MantshX 4.0) with ESMTP id kBD8xBwI026455\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 13 Dec 2006 00:59:15 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nContent-Transfer-Encoding: 7bit\r\nMessage-Id: &lt;A9E40616-5073-4E55-9DB7-EFD7F5DB5370@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nTo: rest-discuss@yahoogroups.com\r\nDate: Wed, 13 Dec 2006 09:59:10 +0100\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-Brightmail-Tracker: AAAAAA==\r\nX-Brightmail-scanned: yes\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Programming Model for REST Clients\r\nX-Yahoo-Group-Post: member; u=289191104; y=JCzEBk-V6cbw30gXLNE59_ZzkuBdow56sB1l11JdN8cRKR2Bm6pLPP_g\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nHi,\n\nthe following is only half-cooked, but I&#39;d like to share it anyhow;  \nmaybe it inspires somebody.\n\nOne of the strengths of RESTful systems is that the server can change  \nthe state machine of an application at runtime because the client  \ndoes not rely on its own assumption about the sequence of  \ninteractions but is guided through the application by the server.\n\nThis works perfectly well for humans interacting with an application  \nbecause we can dynamically change our behaviour depending on the how  \nthe application proceeds. For non-human clients, I see a mismatch  \nbetween the &quot;hypermedia as engine of application state&quot; model and the  \ntraditional (sequential) way clients would actually carry out their  \ntasks.\n\nIOW, if clients are implemented as a sequence of HTTP requests, the  \nwhole idea of the servers being able to change the state machine at  \nruntime breaks.\n\nI used to think that a possible solution could be found in the area  \nof event based programming models (such as those models that GUI  \nlibraries use) but there has allways been a problem with the client  \nbeing an actor, not just a passive part of the interaction being  \ncalled upon.\n\nNow, what about this:\n\nAt the most granular level, a software client&#39;s purpose is to carry  \nout some interaction to reach an overall goal (&quot;buy a book at an  \nonline store&quot;).  To achive this goal, a number of sub-goals are known  \n(&quot;process/browse offers&quot; , &quot;accept an offer (== pich a book)&quot;, &quot;make  \npayment&quot;) have to be completed. These subgoals depend on each other  \nin  a certain way. These dependencies are what is inherent to the  \nbusiness process semantics; while the sequence of operations can be  \nromed from the design time decisions (which REST successfully did)  \nthe dependencies cannot - they need to be built into the client logic.\n\nIn addition, sub-goals can be given a priority (browsing for other  \noffers is independent of performing a purchase, but there definitely  \nis a priority that determines what to do if two subgoals are possible  \nto follow at a given point).\n\nThis I think is a rather accurate picture of how humans actually  \nproceed through a Web application.\n\nI think, the aboive can be formalized sufficiently to form the basis  \nfor a more suitable programming model for REST clients.\n\nThoughts greatly apprechiated....\n\nJan\n\n"}}