{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"t1dTbLNwBuyIjO4AM5YkDZzEWVBZ8BWSKL2DxyaooKOn06ee3teYPC10SH-4ypwbwSONSLHZhcGWt2_bc99V9DviXYFHyfjuLrmQKPXBdA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Design questions for applying REST","postDate":"1087275253","msgId":4466,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTE2LURBVjQzQVlNWjcxWVQwMDAzYzBmMUBob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTE2LURBVjYwc0w2N1FsTkQwMDAzNjZmNkBob3RtYWlsLmNvbT4gPDQwQzlCMjI5LjYwMDAxQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVYzME9SRlFHd1o0MDAwMzc4M2JAaG90bWFpbC5jb20+IDw0MENBRjkyMC42MDUwMDAyQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVY0OGhmQUVuUjlyMDAwMzg3ZWVAaG90bWFpbC5jb20+IDwwMGRiMDFjNDUxNDgkODgzMTY0NTAkMDkwMmE4YzBAV0FMREVOREVTS1RPUD4gPEJBWTE2LURBVjMzb203REJEaXIwMDAzOTNmMUBob3RtYWlsLmNvbT4gPDAwNjYwMWM0NTIwYiRiZmNjMWY0MCQ5NGQ0YThjMEBXQUxERU5OT1RFQk9PSz4="},"prevInTopic":4462,"nextInTopic":4473,"prevInTime":4465,"nextInTime":4467,"topicId":4447,"numMessagesInTopic":13,"msgSnippet":"... to ... difference ... server ... In my environment, I doubt the clients would maintain a mapping. ... I m thinking that if the URI is constructed only from","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 63268 invoked from network); 15 Jun 2004 04:54:10 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m22.grp.scd.yahoo.com with QMQP; 15 Jun 2004 04:54:10 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.186.223)\n  by mta2.grp.scd.yahoo.com with SMTP; 15 Jun 2004 04:54:10 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Mon, 14 Jun 2004 21:54:08 -0700\r\nReceived: from 207.202.171.254 by bay16-dav43.bay16.hotmail.com with DAV;\n\tTue, 15 Jun 2004 04:54:08 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &quot;Walden Mathews&quot; &lt;walden@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;BAY16-DAV60sL67QlND000366f6@...&gt; &lt;40C9B229.60001@...&gt; &lt;BAY16-DAV30ORFQGwZ40003783b@...&gt; &lt;40CAF920.6050002@...&gt; &lt;BAY16-DAV48hfAEnR9r000387ee@...&gt; &lt;00db01c45148$88316450$0902a8c0@WALDENDESKTOP&gt; &lt;BAY16-DAV33om7DBDir000393f1@...&gt; &lt;006601c4520b$bfcc1f40$94d4a8c0@WALDENNOTEBOOK&gt;\r\nDate: Mon, 14 Jun 2004 21:54:13 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nMessage-ID: &lt;BAY16-DAV43AYMZ71YT0003c0f1@...&gt;\r\nX-OriginalArrivalTime: 15 Jun 2004 04:54:08.0577 (UTC) FILETIME=[CAE3A310:01C45294]\r\nX-eGroups-Remote-IP: 65.54.186.223\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: Re: [rest-discuss] Design questions for applying REST\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n&gt;\n&gt; |  I&#39;m curious about the comparison of this approach to using PUT directly\nto\n&gt; | create/update input documents. From my understanding, the biggest\ndifference\n&gt; | is whether the client constructs a URI to the input document, or the\nserver\n&gt; | provides an opaque identifer and the client maintains a mapping between\n&gt; | submitted content and a server hosted resource.\n&gt;\n&gt; I&#39;m curious about your curiosity.  You&#39;re the guy who knows\n&gt; the application&#39;s constraints, such as whether the client is willing\n&gt; to maintain a mapping.\nIn my environment, I doubt the clients would maintain a mapping.\n\n&gt; Since (from below) the source doc ids\n&gt; are not URI, doesn&#39;t the client have to maintain a mapping either way?\nI&#39;m thinking that if the URI is constructed only from static elements and\nthe source doc IDs, then the mapping is purely algorithmic.\n\n&gt; | &gt; 2) design the merged document such that it contains, directly\n&gt; | &gt; or indirectly, an index to the input documents from which it has\n&gt; | &gt; been composed.  In other words, there may be yet another resource\n&gt; | &gt; subordinate to each merged document whose only function is to\n&gt; | &gt; be an index of inputs.  This is a list of URI at which the original\n&gt; | &gt; input documents are available verbatim for GET, PUT and DELETE.\n&gt; | Definitely possible, but I don&#39;t see the utility for the use cases I\nintend\n&gt; | to support. (I&#39;m putting a REST layer on top of an existing, critical\n&gt; | business function - this capability doesn&#39;t map to the existing uses of\nthe\n&gt; | system).\n&gt;\n&gt; Wow.  I thought this would be the key, since in previous discussion\n&gt; you were talking about algorithms and meta-specifications to tell the\n&gt; client how to construct a merge URI from a source URI or vice versa,\n&gt; (or something like that).\nI probably mis-communicated something - I don&#39;t think in my case I can use a\nmeta-specification to construct the merged document URI from a source ID. I\ncan use a meta-specification to construct the URI of an input document from\nthe client-owned document ID, but this implies the server uses the\nclient-owned ID in the URI rather than some internal identifier. I don&#39;t\nhave a problem with that & I actually think this approach makes initial\nintegration easier in general.\n\n\n&gt; In my mind, the identity of the input documents\n&gt; logically belongs as a sub-resource to the merged content resources,\n&gt; just as a bibliography exists in relation to a research paper.\nI&#39;m not sure what a &#39;sub-resource&#39; is. The merged content could have\nreferences sure, but in my situation I typically do not want to expose the\ninput documents that were used to generate the merged output document\n(although if my REST service were internal to the company, that wouldn&#39;t be\na big deal).\n\n&gt; This would relieve the client from having to maintain those relationships\n&gt; in its own space, if it doesn&#39;t want to.  And I thought that was also\n&gt; a key goal in your design...\nI think the approach I&#39;ll be taking is for the server to use the\nclient-owned document ID in the URI of the input document, which allows a\nclient to use PUT directly without needing a generic resource that accepted\nPOST (although  this could be supported as a convenience). Then I&#39;d have a\nresource that maps input documents to merged documents & the URI for the\nmapping resource could be constructed purely from client-owned document ID.\n\n&gt;\n&gt; |\n&gt; | &gt;\n&gt; | &gt; 3) Subsequent PUT or DELETE on the input doc URIs for a\n&gt; | &gt; given merge document have the expected verbatim effects on\n&gt; | &gt; those resources, plus some interesting side effects on the merge\n&gt; | &gt; document, but with the constraint that even those effects are\n&gt; | &gt; idempotent.  That is, if the client decides to change the content of\n&gt; | &gt; /input1 via a PUT, the server incorporates that change into the\n&gt; | &gt; merged document in a consistent and idempotent manner.\n&gt; | Yes, perfect. That&#39;s what I&#39;m shooting for. The question is, can the\nclient\n&gt; | do a PUT directly, without passing through the generic resource\ndescribed in\n&gt; | step 1? What are the specific tradeoffs?\n&gt;\n&gt; If a merged document contains a set of references to the input\n&gt; documents on which it is based, and the client is able to retrieve\n&gt; those as URI, then why couldn&#39;t the client do a PUT directly to\n&gt; one?  What sort of tradeoffs are you interested in?\nHow would it know which input document resource to PUT to?\n\n\n&gt;\n&gt; To me, the interesting part of this is that doing a PUT to an input\n&gt; document URI has a side effect on the merge document.  I don&#39;t\n&gt; know of a REST constraint (or HTTP constraint) that this violates.\nYes - this is the core design pattern for REST that I would like to explore.\nI&#39;m going to build it one way or the other, just looking for advice.\n\n&gt; Anyone?\n\n&gt; | These client-owned identifiers are something I am thinking are important\nto\n&gt; | expose in URIs. These identifiers are going to be scattered across\nmultiple\n&gt; | systems (internal and external)\n&gt;\n&gt; what does that mean?\nThese document IDs are stored as a column in a database by other groups\nwithin the company (not as a URI).  I&#39;d like to be able to provide a simple\nclient library (or documentation) which helps these other groups access my\nsystem which stores the input documents and the merged output document. I&#39;m\nlooking for something with the most bang for the buck and the least number\nof objections (&quot;what? another network request? Performance would suck! Who\nare you and where did you come from?!?&quot;)\n\n&gt;\n&gt; | and the simplest integration seems to be for\n&gt; | the service to support requests that are composed mainly of this\n&gt; | client-owned identifier.\n&gt;\n&gt; It seems to me that either your client is constrained to accessing\n&gt; these objects through an identification scheme that is already\n&gt; implemented, or it isn&#39;t, and there is no real middle ground.\nI think the clients are willing to use URIs but not necessarily to retrieve\na mapping from their IDs to the server&#39;s IDs.\n\n&gt;\n&gt; If  you&#39;re taking a legacy application and putting it &quot;on the Web&quot;,\n&gt; then your clients are going to have to accept a face lift, no?\nI&#39;d like to establish that the use of URIs (to make existing resources\nactually truly addressable) has value. After that I can get into location\nindependence via a request to a &#39;mapping resource&#39;. I might also be able to\nmove toward exposing these resources on the public Web (but I&#39;d need a layer\nin-between to map internal IDs to secure public-facing IDs).\n\n\n&gt; By sending a message, you can keep your client out\n&gt; of the URI manufacturing business.\nNot sure I understand. The only request I see that avoids constructing a URI\nis via the generic resource that accepts input document submissions and\nreturns the URI for direct access.\n\n&gt; Otherwise, I don&#39;t see the conflict between message orientation and\nresource orientation.\nFor me, the message orientation lacks URIs for stored documents (input\ndocuments and merged documents).\n\nThanks!\n\n"}}