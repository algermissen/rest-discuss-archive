{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"QIFsQPOhy526HzLQ_fZL0MD0oA2uRLyAZiaJliTGFFKLLbkIiZrEkD0UD5YP2OUuLO5-_cM8KhlDNebnNFPMhiROftq40kBhoE6ZUasBGg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RESTful batch transactions a red herring.","postDate":"1236857752","msgId":12213,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzEyMDUzNTUyLjMwM2M0YzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":0,"nextInTopic":12214,"prevInTime":12212,"nextInTime":12214,"topicId":12213,"numMessagesInTopic":15,"msgSnippet":"It seems to me most of the threads here in recent weeks are off-topic. It isn t the end of the world if a non-RESTful interface is included in an","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 22431 invoked from network); 12 Mar 2009 11:35:52 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m2.grp.sp2.yahoo.com with QMQP; 12 Mar 2009 11:35:52 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 12 Mar 2009 11:35:51 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 4829ED05A2\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Mar 2009 07:35:51 -0400 (EDT)\r\nDate: Thu, 12 Mar 2009 05:35:52 -0600\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20090312053552.303c4c19.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: RESTful batch transactions a red herring.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nIt seems to me most of the threads here in recent weeks are off-topic.\nIt isn&#39;t the end of the world if a non-RESTful interface is included in\nan otherwise-RESTful API.  Perhaps there should be an http-batch-\ndiscuss group?  There certainly are many interesting proposals floating\naround out there, none of which can ever meet the constraints of the\nuniform connector interface, unfortunately.  This makes sense:\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/12139\n\nNot only does HTTP not provide a mechanism to carry out multiple\noperations for *any* of its request methods, but neither would any\nRESTful protocol. The REST style is about the junction between the\napplication and the network.  The style allows the independent\nevolution of client and server logic in an application -- provided the\ninterface remains uniform for all resources.\n\nIf I create an HTML form with a list of URLs, each with its own\ncheckbox, and one &quot;DELETE&quot; button, it&#39;s trivial to write a POST handler\nto perform a batch delete in one transaction.  It&#39;s even RESTful, if\nmy application makes no other use of POST.  If I&#39;m also using POST\nto accept new content, though, my application&#39;s POST semantics become\nclear as mud.  Which is why the common case of deletion is separated\nout as its own method in a RESTful protocol to begin with.\n\nIn the common case of the Web, DELETE traffic is a tiny fraction of GET\ntraffic.  So it just doesn&#39;t _matter_ that some sort of client logic\nlike my HTML form can accomplish the same objective as discrete DELETE\nrequests in one round trip, in terms of bandwidth.  Splitting hairs.\nSame with batch updates.  The bandwidth conserved by caching GET\ntraffic is an order of magnitude greater than that consumed by fringe\ncases where bandwidth could be saved by batching multiple DELETE (or\nPUT or POST) requests.  REST optimizes for GET, not batch processing.\n\nIf my application supports RESTful, resource-by-resource deletion *and*\nprovides an HTML interface for performing batch deletion (or updates),\nno big deal!  There&#39;s nothing wrong with pragmatism or ease of use.\nEventually, forms technology will catch up (looks like), and these\noutmoded interfaces may be replaced.  Clients may evolve independently\nof the server.  So long as I understand that the Platonic (or Royonic)\nideal here is that eventually my application only assigns one meaning\nto POST, and the client logic fires off a bunch of DELETE requests.  In \nthe case of my HTML form, it wouldn&#39;t look any different to the user.\n\nHTTP leaves plenty of wiggle room for how its methods may be used.  The\nkey to a REST API is defining discrete semantics for each method.  The\nobjective is an application which &quot;constrain[s] the interface to a\nconsistent set of semantics for all resources&quot; under its control.  This\nmeans if you want POST to accept new content, then it means only that,\nfor all content-types.  NOT:  sometimes accept new content, sometimes\ndelete content, sometimes update content, depending on media type (or\nheader, or parameter) or some other metric or batch-response trigger.\n\nThe very notion of batch processing seems antithetical to REST, since\n(just like my HTML form) it decreases visibility and reliability for\nthe sake of optimizing for uncommon cases.  REST makes a fine hammer.\nBatch processing is a screw.\n\n-Eric\n\n"}}