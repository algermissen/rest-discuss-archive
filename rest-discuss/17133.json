{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"Jørn Wildt","from":"=?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"ueeEWJFKzLNtv8QzH4F3F11rySuUkBQ4FmzNBXcnh0NSXCqr1Ep1kMsrZEvA4XR2yN8cJDliJdzJ0xkRaSkJuHte3Mws24hdsGrA4EbL-QBXbxA_2Jomce0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] XForms vs. WSDL?","postDate":"1293367400","msgId":17133,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDQzU1Njk0RUYzMzQ1Njk5Rjc4NURBMEFERDVBNzIzQEpyblBDPg==","inReplyToHeader":"PDIwMTAxMjIzMTcxMzExLmNiMTg3MDI4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDA2OTlGRTY4Q0IxNzQyMjQ5MTgzMUNEQjdENUVEMkExQEpyblBDPiA8MjAxMDEyMjMxNzEzMTEuY2IxODcwMjguZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":17132,"nextInTopic":17134,"prevInTime":17132,"nextInTime":17134,"topicId":17114,"numMessagesInTopic":23,"msgSnippet":"... No, I was not saying it was a good thing (and I do see your smiley, thanks). I was trying to compare the two and understand why one is better than the ","rawEmail":"Return-Path: &lt;jw@...&gt;\r\nX-Sender: jw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20364 invoked from network); 26 Dec 2010 12:43:22 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m12.grp.re1.yahoo.com with QMQP; 26 Dec 2010 12:43:22 -0000\r\nX-Received: from unknown (HELO smtp1.cybercity.dk) (212.242.43.251)\n  by mta3.grp.re1.yahoo.com with SMTP; 26 Dec 2010 12:43:21 -0000\r\nX-Received: from uf7.cybercity.dk (uf7.cybercity.dk [212.242.42.164])\n\tby smtp1.cybercity.dk (Postfix) with ESMTP id 5096D58681B;\n\tSun, 26 Dec 2010 13:43:21 +0100 (CET)\r\nX-Received: from JrnPC (port439.ds1-aroe.adsl.cybercity.dk [212.242.220.134])\n\t(Authenticated sender: dsl164923)\n\tby uf7.cybercity.dk (Postfix) with ESMTPA id DE337B85D33;\n\tSun, 26 Dec 2010 13:43:20 +0100 (CET)\r\nMessage-ID: &lt;4CC55694EF3345699F785DA0ADD5A723@JrnPC&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;0699FE68CB17422491831CDB7D5ED2A1@JrnPC&gt; &lt;20101223171311.cb187028.eric@...&gt;\r\nIn-Reply-To: &lt;20101223171311.cb187028.eric@...&gt;\r\nDate: Sun, 26 Dec 2010 13:43:20 +0100\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;iso-8859-1&quot;;\n\treply-type=original\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Windows Mail 6.0.6002.18197\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.0.6002.18263\r\nFrom: =?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nSubject: Re: [rest-discuss] XForms vs. WSDL?\r\nX-Yahoo-Group-Post: member; u=242972596; y=Yonu0ry4R9JWLGnBNrNs95JV2KpOKnCVDHnxxhHy73n7FaURevSQi4koOXM\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\n&gt; &gt;\n&gt; &gt; If you then add a list of links to XForms, the list would be much\n&gt; &gt; like the WSDL list of methods/messages.\n&gt; &gt;\n&gt; You say that like it&#39;s a good thing?  ;-)\n\nNo, I was not saying it was a good thing (and I do see your smiley, thanks). \nI was trying to compare the two and understand why one is better than the \nother.\n\nMy point is - if I can show that a WSDL and &quot;something + XForm&quot; are \nequivalent then why is XForm better than WSDL? I think the discussion so far \nhave showed the differences. But it also seems that they to some degree are \nequivalent - and much of the difference lies in how they are consumed and \nthe mindset of those implementing the client and server.\n\nThanks for the feedback.\n\n/J�rn\n\n----- Original Message ----- \nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\nTo: &quot;J�rn Wildt&quot; &lt;jw@...&gt;\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\nSent: Friday, December 24, 2010 1:13 AM\nSubject: Re: [rest-discuss] XForms vs. WSDL?\n\n\nJ�rn Wildt wrote:\n&gt;\n&gt; I was reading Ian Robinsons &quot;Using typed links to forms&quot; (again, it&#39;s\n&gt; a good read)\n&gt;\n\nI disagree with the premise.  REST&#39;s uniform interface requires generic\nmedia and data types.  The example creates an application-specific media\nand data type (ordering one brand of coffee), where even domain-specific\nmedia and data types (ordering coffee) would be too fine-grained, where\nnetwork-specific (generic to IP) media and data types are called for\n(ordering anything).\n\nWhy not just use XForms forwards instead of backwards, using\nstandardized data types and link relations like the thesis says?  I\ndon&#39;t understand how this would be less pragmatic than the example\ngiven, particularly to the extent of using pragmatism to justify\ndeliberately avoiding the hypertext constraint in favor of increased\ncoupling.\n\nLink relations aren&#39;t coupling when they&#39;re standardized, i.e. common\nknowledge at the IP layer across numerous protocols and data types.  The\ndifference is the key difference in REST -- the uniform interface is\nnetwork-based, extended link relations are library-based (which is fine\nfor domain-specific vocabulary, not for directing application flow by\nbaking HTTP methods into them and such).  Methods, headers, data types\nand link relations nobody&#39;s ever heard of before you minted them are\n*not* the same thing as the standardized uniform interface Roy&#39;s thesis\ndescribes.\n\n&gt;\n&gt; and document out of band how to post data to that link\n&gt;\n\nDoesn&#39;t compute.  The whole point of the hypertext constraint is that\nhypertext controls are used to document this in-band, relying on the\ncommon-knowledge processing model of ubiquitous media types.  Maybe\nthis other proposed architectural style has merit, I&#39;m not judging,\nonly stating that it can&#39;t be REST if there&#39;s no hypertext constraint.\n\n&gt;\n&gt; have an XForm at the end of the link and then use that information as\n&gt; the online/inline/in-band documentation. I think that&#39;s quite a neat\n&gt; idea, but it strikes me that it&#39;s getting awfull close to a WSDL spec.\n&gt;\n\nExactly.  IDLs, and hypertext-driven APIs, aren&#39;t the same paradigm.\nIt hadn&#39;t occurred to me that XForms could be repurposed as an IDL, but\nmy advice is, don&#39;t.  IDL-driven APIs are NOT REST.\n\n&gt;\n&gt; Both XForm and WSDL defines how to POST data adhering to a specific\n&gt; XML schema.\n&gt;\n\nNot exactly.  IDLs are not self-documenting hypertext controls -- they\ncannot instruct a user-agent as to the default values, validate input\n(type=e-mail is one thing, black/whitelists are another) using code-on-\ndemand; nor do they provide any mechanism to link to documentation (or\nrender it outright as a pop-up) to inform the decision-making of the\nhumans or machines (RDFa doesn&#39;t make much sense in an IDL) interacting\nwith the API.\n\n&gt;\n&gt; If you then add a list of links to XForms, the list would be much\n&gt; like the WSDL list of methods/messages.\n&gt;\n\nYou say that like it&#39;s a good thing?  ;-)  There are two approaches to\nthe problem of distributing the object interface instead of distributing\nthe object.  One is to distribute a definition of your custom interface.\nThe other is to use the distributed uniform interface, which is generic\n-- if all objects use the same interface, what&#39;s left to describe in\nan IDL?\n\n&gt;\n&gt; The rel=&quot;&quot; types would specify WSDL message names.\n&gt;\n\nIn HTTP, REST&#39;s uniform interface includes, amongst other methods:  GET,\nPUT, POST, PATCH and DELETE.  If your interfaces are object-specific\n(hint, hint) then yeah, IDLs make sense, but I don&#39;t know how you start\nfrom tunneling custom methods (expressed as link relations) over POST\nand arrive at REST.\n\n&gt;\n&gt; In all we could  have an HTML 5 list like the one below and call it\n&gt; the WSDL method list:\n&gt;\n&gt;   &lt;dl&gt;\n&gt;     &lt;dt&gt;&lt;a rel=&quot;&quot; type=&quot;&quot; href=&quot;&quot;&gt;Title&lt;/a&gt;&lt;/dt&gt;\n&gt;     &lt;dd&gt;Description&lt;/dd&gt;\n&gt;   &lt;/dl&gt;\n&gt;\n&gt; Each of the achors then points to an XForm which in turn points to an\n&gt; XML schema definition and defines POST urls - just like WSDL does.\n&gt;\n&gt; Is this good or bad? Is it better or worse than WSDL and WADL? Other\n&gt; opinions?\n&gt;\n\nI really have no basis for comparing non-RESTful approaches.  REST is a\nhypertext-driven architectural style based on standardized media types\nand standardized link relations.  While extended link relations may be\nused to inform m2m decision-making, if the semantics of the interaction\nbetween connectors is that you can GET something and PUT it back then\njust use rel=&#39;edit&#39; instead of defining an unlimited number of link\nrelations to describe resource type (a server-side concern) to the\nclient in lieu of using standardized hypertext controls.\n\nNote that rel=&#39;edit&#39; says nothing about HTTP methods, or even HTTP,\nthough.  If you&#39;re assuming it means PUT, I have no idea how you&#39;d\nreach that conclusion, even if the media type were application/atom+xml,\nbecause only a hypertext control communicates method to me.  There&#39;s\nnothing in the communication between connectors which says &quot;RFC 5023 in\nuse&quot;.  Only hypertext controls provide such instructions, which may be\nto GET the rel=&#39;edit&#39;...\n\nOr, I may PATCH that resource -- but this is communicated through the\nhypertext representation, including the Allow and Accept(-*) headers.\nOne hypertext control indicates that the entire &quot;instance&quot; (to stick\nwith XForms) may be PUT as application/atom+xml, while another hypertext\ncontrol indicates that categories may be PATCHed using an instance of\napplication/atomcat+xml -- but this has no bearing on the link relation!\n\nI have no clue how any IDL- or schema-based approach supports the above\nparagraph, except as part of an API being driven by out-of-band\ninformation.  When folks start talking about RESTful IDLs, schemae and\noverloaded link relations, my reaction is WTF are you people even\n*talking* about, as I&#39;ve mentioned before.  My snappy comeback, is why\nnot just use rel=&#39;{HTTP method}&#39; and have done with it?  Things that\nare not hypertext controls:\n\nIDLs (even with a registered media type)\nmedia type definitions (registration doesn&#39;t indicate suitability)\nschemas (even with a registered media type)\nlink relations (even when standardized)\n\nThese things have their place, and I&#39;ve even mentioned how IDLs could\nbe used as a response to OPTIONS requests, but they are *not*\nsubstitutes for the hypertext constraint.  Inferring things out-of-band\nbad, self-documenting hypertext APIs good.\n\n-Eric \n\n\n"}}