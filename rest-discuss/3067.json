{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":132539868,"authorName":"Duncan Cragg","from":"Duncan Cragg &lt;rest@...&gt;","profile":"ciluxjxee","replyTo":"SENDER","senderId":"QIrFjNsWAwmYUAPm17k6Iy0OeQagH045f4AAVDvP8lwxcqtDx3ZM2uhVmhcuTKhaRiBXU-OEn5LAKpwpQK2SNf6S2Lg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Time axis in GET: P2P and Media","postDate":"1040170363","msgId":3067,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNERkZCRDdCLjEwOTAxMDlAY2lsdXgub3JnPg==","referencesHeader":"PDNERkRBNEI1LjcwMDAzMDdAY2lsdXgub3JnPiA8T0UxNHlaU2RBNmt2QWR4YVE2czAwMDAyMDE0QGhvdG1haWwuY29tPg=="},"prevInTopic":3059,"nextInTopic":3069,"prevInTime":3066,"nextInTime":3068,"topicId":3052,"numMessagesInTopic":11,"msgSnippet":"... So new events update the browser?  Why don t all news services use it? Why, indeed, do we need the comparatively over-done and bloated HTTPEvents, even??!!","rawEmail":"Return-Path: &lt;rest@...&gt;\r\nX-Sender: rest@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 18 Dec 2002 00:16:53 -0000\r\nReceived: (qmail 72011 invoked from network); 18 Dec 2002 00:16:53 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m4.grp.scd.yahoo.com with QMQP; 18 Dec 2002 00:16:53 -0000\r\nReceived: from unknown (HELO icu) (212.23.31.158)\n  by mta3.grp.scd.yahoo.com with SMTP; 18 Dec 2002 00:16:53 -0000\r\nReceived: from mac ([192.168.8.2] helo=cilux.org)\n\tby icu with esmtp (Exim 3.34 #1 (Debian))\n\tid 18OSPy-0008Js-00; Wed, 18 Dec 2002 00:50:34 +0000\r\nMessage-ID: &lt;3DFFBD7B.1090109@...&gt;\r\nDate: Wed, 18 Dec 2002 00:12:43 +0000\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.0.0) Gecko/20020529\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Time axis in GET: P2P and Media\r\nReferences: &lt;3DFDA4B5.7000307@...&gt; &lt;OE14yZSdA6kvAdxaQ6s00002014@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Duncan Cragg &lt;rest@...&gt;\r\nX-Yahoo-Group-Post: member; u=132539868\r\nX-Yahoo-Profile: ciluxjxee\r\n\r\n\n\n&gt; &gt; Is it RESTful (or even HTTP/1.1 compliant) to use GET with a &#39;time axis&#39;\n&gt; &gt; (i.e., as opposed to getting /all/ the data back as /soon/ as it&#39;s\n&gt; &gt; requested)?\n\n&gt; A simple client subscribes to this stream of events using a &#39;max_age&#39; to\n&gt; only get recent events. It&#39;s an IE5+ app, but its a &#39;live events in the\n&gt; browser&#39; thing...\n\nSo new events update the browser?  Why don&#39;t all news services use it?  \n\nWhy, indeed, do we need the comparatively over-done and bloated \nHTTPEvents, even??!!\n\nSurely the semantics of chunks like &#39;part 1 of 10, part 2 of 10, ...&#39; \nversus &#39;all current state, update to current state, update to current \nstate&#39; are so different that no normal browser would know what to do? \n There&#39;s nothing in the HTTP/1.1 spec that says what the semantics of \nchunking is, as far as I can see!\n\n\n\n&gt; &gt; Example 1.  Using HTTP/1.1 as a P2P protocol - the search for the\n&gt; &gt; Resource could take some time, so either the Response takes a minute and\n&gt; &gt; keeps the Request open (risking proxy timeout), or the line is &#39;pinged&#39;\n&gt; &gt; with void chunks while the peer is waiting. (GET\n&gt; &gt; http://p2psystem/britney32541) &lt;http://p2psystem/britney32541%29&gt;\n&gt; It doesn&#39;t keep the Request open, it keeps the connection open. If a\n&gt; Response could be sent on a separate connection, then you wouldn&#39;t risk\n&gt; proxy timeouts. Adding some way to correlate request message and response\n&gt; message is an increase in complexity but it pays of in increased\n&gt; functionality. This list discussed ways to do the correlation (and provide\n&gt; callback location in the request, etc.) sometime in the past...\n&gt;\n&gt; I&#39;m interested in pursuing the p2p angle with pure http. I&#39;ve looked at\n&gt; Gnutella & I see some obvious ways to use GET for much of the node \n&gt; discovery\n&gt; and searching aspects - but I&#39;m not sure what aspects of the behavior of\n&gt; Gnutella are important to preserve. I need to frame these questions & ask\n&gt; LucasG/etc. on the decentralization list... sometime.\n\nOK\n\n\n&gt;\n&gt; &gt;\n&gt; &gt; Example 2.  Using HTTP/1.1 as a media streaming protocol: there is\n&gt; &gt; /never/ any content length - the channel just goes on and on, sending\n&gt; &gt; chunks... (GET http://britney-radio/) &lt;http://britney-radio/%29&gt;\n&gt; &gt;\n&gt; Yes, that would work too.\n\nOK\n\n\n&gt;\n&gt;\n&gt; &gt; Example 3.  The Resource being fetched is not a simple file, but comes\n&gt; &gt; from a user interface (GET\n&gt; &gt; http://turing-test/is-it-britney?favourite+colour) \n&gt; &lt;http://turing-test/is-it-britney?favourite+colour%29&gt;\n&gt; &gt;\n&gt; Huh?\n\nI mean that you GET on my machine here, and I see your request and type \nsomething in for you to render on your browser!!  There is a delay \nbefore I notice that you&#39;ve requested my wisdom.  I was just using it as \na rather odd example of time-dependency or time-axis-in-GET. Sorry. \nShould&#39;ve explained better.\n\n\n&gt;\n&gt; &gt; Example 4.  The Resource is a user typing into a chat field at random\n&gt; &gt; times (GET http://britney-oracle/what-she-says-now) \n&gt; &lt;http://britney-oracle/what-she-says-now%29&gt;\n&gt; &gt;\n&gt; If the &#39;what-she-says-now&#39; has state of what she said in the past N \n&gt; minutes,\n&gt; then doing a GET for a snapshot would work. But if it is a buffer that \n&gt; gets\n&gt; cleared out pretty fast, doing a GET would result in getting from an empty\n&gt; buffer.\n&gt; It&#39;s easy to model the chat session as a resource and get message. Once\n&gt; again, see KnowNow&#39;s stuff.\n&gt;\n\nWhat I&#39;m saying is, not the state in the past N minutes, but the state \nfrom the point the GET was received, onwards.  So it would indeed be \nnothing at the time, and would be an HTTP/1.1 chunk per pearl of wisdom \nfrom then on, as it was cast.\n\nWould you be kind enough to elaborate a little on this (the what KnowNow \ndoes, chat part)?  \n\nAgain, chunking is just dividing up a single big data item, isn&#39;t it? \nNot for (a) &#39;time-staked&#39; events or (b) updates to previously sent data. \n After all, there&#39;s no standard page update syntax (chunk number 7: \n&quot;this line, and this line only, has changed&quot;)\n\n\nSo, anyway, just &#39;cos KnowNow does it, doesn&#39;t mean it&#39;s pure as \nnewly-laid snow to rest-discussers......  !!\n\nThe poor reaction to my email either indicates it&#39;s OK and REST-assured, \nor everyone is shaking their heads in dismay...  :-)\n\n\n\nFinally, assuming we can OK it with HTTP HQ, is such use of chunking to \nupdate state also cool with REST Centraal Kontrol?? MarkB? PaulP?\n\n\nDuncan Cragg\n\n\n\n"}}