{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210067383,"authorName":"Nick Gall","from":"Nick Gall &lt;nick.gall@...&gt;","profile":"nick_gall_1117","replyTo":"SENDER","senderId":"WUokFZZ6zqo9YmWMkX5fNpgZ7-UhYeE085p30LD1Tfh3eepf3FaHWOOPmFw_apLtOzvw43RW_4jRPtj0LMPcAjRyhiKb2Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &#39;No application data on client&#39; constraint? was: \tRESTful ordering and order-rejection","postDate":"1257198736","msgId":13981,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE2YTZkZjM2MDkxMTAyMTM1Mms2YTE0NDUwMnA4YjA2OTVlZmU2ZTU2YzgyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDkwRTU0MkE3LTJGNUMtNDAyNC04NjNFLTZBNDM0RDlFRURBNUBtYWMuY29tPg==","referencesHeader":"PDJCNkI4NDNFLTVGNDUtNENCQy05QzM5LTBBMkY4RDMwQTk1QUBtYWMuY29tPiAJPEJMVTEwMi1XMjY0QUU0MDVENDc4QTYxRjFBQUM4MkI1QjMwQHBoeC5nYmw+IDw5MEU1NDJBNy0yRjVDLTQwMjQtODYzRS02QTQzNEQ5RUVEQTVAbWFjLmNvbT4="},"prevInTopic":13979,"nextInTopic":13982,"prevInTime":13980,"nextInTime":13982,"topicId":13970,"numMessagesInTopic":18,"msgSnippet":"On Mon, Nov 2, 2009 at 4:16 PM, Jan Algermissen  ... I think I see what you are driving at with your distinction between session state","rawEmail":"Return-Path: &lt;nick.gall@...&gt;\r\nX-Sender: nick.gall@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 89510 invoked from network); 2 Nov 2009 21:53:38 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m14.grp.re1.yahoo.com with QMQP; 2 Nov 2009 21:53:38 -0000\r\nX-Received: from unknown (HELO mail-ew0-f220.google.com) (209.85.219.220)\n  by mta3.grp.sp2.yahoo.com with SMTP; 2 Nov 2009 21:53:37 -0000\r\nX-Received: by ewy20 with SMTP id 20so3142299ewy.40\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 02 Nov 2009 13:52:36 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.239.163.205 with SMTP id q13mr513844hbd.132.1257198756261; \n\tMon, 02 Nov 2009 13:52:36 -0800 (PST)\r\nIn-Reply-To: &lt;90E542A7-2F5C-4024-863E-6A434D9EEDA5@...&gt;\r\nReferences: &lt;2B6B843E-5F45-4CBC-9C39-0A2F8D30A95A@...&gt; \n\t&lt;BLU102-W264AE405D478A61F1AAC82B5B30@...&gt; &lt;90E542A7-2F5C-4024-863E-6A434D9EEDA5@...&gt;\r\nDate: Mon, 2 Nov 2009 16:52:16 -0500\r\nMessage-ID: &lt;a6a6df360911021352k6a144502p8b0695efe6e56c82@...&gt;\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001485f5ed4a47706404776a65c7\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nick Gall &lt;nick.gall@...&gt;\r\nSubject: Re: [rest-discuss] &#39;No application data on client&#39; constraint? was: \n\tRESTful ordering and order-rejection\r\nX-Yahoo-Group-Post: member; u=210067383; y=oKtMohRI9JztKeJtPfPO4nqi0MsDi8143M4kfptNWm_KnR3AScNr8OY\r\nX-Yahoo-Profile: nick_gall_1117\r\n\r\n\r\n--001485f5ed4a47706404776a65c7\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Mon, Nov 2, 2009 at 4:16 PM, Jan Algermissen &lt;algermissen1971@...&gt;\nwrote:\n&gt;\n&gt; On Nov 2, 2009, at 9:43 PM, Sebastien Lambla wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Application state is the state of the application, that spans both\n&gt;&gt; the client and the server. There is no constraint preventing state\n&gt;&gt; residing on the client, otherwise you couldn&#39;t have a local cache in\n&gt;&gt; your browser.\n&gt;\n&gt; A request in a local cache is not what I mean by application data.\n&gt; Suppose a service were designed in a way that it would require the\n&gt; client to store data besides URIs in order to make the next request.\n&gt; IOW, to continue its interaction with the service on another machine,\n&gt; it would not only need to take the appropriate URIs with it (e.g. send\n&gt; by mail) but also other data elements.\n&gt;\n&gt; I think that would be a violation of REST - I just cannot derive it\n&gt; from the other constraints.\n&gt;\n&gt; My hunch is that in a RESTful system\n&gt;\n&gt; a) all application state (aka session state) is on the client\n&gt; b) all application data resides on the server (as resource state)\n&gt;\n&gt; The question that drives me is what the significance of resource state\n&gt; is (what is its meaning/purpose in a given design? What are the design\n&gt; conditions that lead to the creation of new resource state? Etc.) I am\n&gt; trying to get away from the &quot;you could do this and you could do that\n&gt; but you also could do it that way&quot; kinds of answers to practical REST\n&gt; design questions.\n\nI think I see what you are driving at with your distinction between session\nstate vs resource state, but I don&#39;t think the distinction is so clean in\nREST. Here&#39;s a relevant passage from Roy&#39;s thesis\n(5.3.3&lt;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_3&gt;\n):\n\nThe application state is controlled and stored by the user agent and\ncan be composed\nof representations from multiple servers. In addition to freeing the server\nfrom the scalability problems of storing state, this allows the user to\ndirectly manipulate the state (e.g., a Web browser&#39;s history), anticipate\nchanges to that state (e.g., link maps and prefetching of representations),\nand jump from one application to another (e.g., bookmarks and URI-entry\ndialogs). [emphasis added]\n\n\nSo at least a copy of the resource state (in the form or a representation of\nthat resource) is intended to be stored and manipulated on the client side.\nFor example, I believe this 5.3.3 paragraph endorses the following scenario:\n\n   1. client receives a representation of the works of art in a museum\n   exhibit as list of art works (name of work, name of artist) from a museum\n   service on some museum server\n   2. the client extracts the name of an artist (a string) from the list and\n   submits it to Wikipedia on a different set of servers\n   3. It takes the representation from Wikipedia and formats it into a popup\n   for the user&#39;s UI visualization of the museum exhibit\n\nIn this scenario the client &quot;jumps from one application (museum service) to\nanother (Wikipedia)&quot;, submitting representation data it received from the\nfirst service to the second service. Your description above seems to\nprohibit such a scenario (&quot;to continue its interaction with the service on\nanother machine, it would not only need to take the appropriate URIs with it\n... but also other data elements&quot;).\n\nIt appears that REST endorses the use of &quot;application data&quot; stored on the\nclient, at least in the case where such data was at some point in the past\nreceived by the client as part of a representation of a server-based\nresource.\n\n-- Nick\n\r\n--001485f5ed4a47706404776a65c7\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Mon, Nov 2, 2009 at 4:16 PM, Jan Algermissen &lt;&lt;a href=3D&quot;mailto:alger=\r\nmissen1971@...&quot;&gt;algermissen1971@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&gt;&lt;br&gt;&gt; =\r\nOn Nov 2, 2009, at 9:43 PM, Sebastien Lambla wrote:&lt;br&gt;&gt;&lt;br&gt;&gt;&gt;&lt;br&gt;=\r\n\n\n&gt;&gt;&lt;br&gt;&gt;&gt; Application state is the state of the application, t=\r\nhat spans both&lt;br&gt;&gt;&gt; the client and the server. There is no constrain=\r\nt preventing state&lt;br&gt;&gt;&gt; residing on the client, otherwise you couldn=\r\n&#39;t have a local cache in&lt;br&gt;\n\n&gt;&gt; your browser.&lt;br&gt;&gt;&lt;br&gt;&gt; A =\r\nrequest in a local cache is not what I mean by application data.&lt;br&gt;&gt; Su=\r\nppose a service were designed in a way that it would require the&lt;br&gt;&gt; cl=\r\nient to store data besides URIs in order to make the next request.&lt;br&gt;\n\n&gt=\r\n; IOW, to continue its interaction with the service on another machine,&lt;br&gt;=\r\n&gt; it would not only need to take the appropriate URIs with it (e.g. send=\r\n&lt;br&gt;&gt; by mail) but also other data elements.&lt;br&gt;&gt;&lt;br&gt;&gt; I think tha=\r\nt would be a violation of REST - I just cannot derive it&lt;br&gt;\n\n&gt; from the=\r\n other constraints.&lt;br&gt;&gt;&lt;br&gt;&gt; My hunch is that in a RESTful system&lt;br=\r\n&gt;&gt;&lt;br&gt;&gt; a) all application state (aka session state) is on the client=\r\n&lt;br&gt;&gt; b) all application data resides on the server (as resource state)&lt;=\r\nbr&gt;\n\n&gt;&lt;br&gt;&gt; The question that drives me is what the significance of r=\r\nesource state&lt;br&gt;&gt; is (what is its meaning/purpose in a given design? Wh=\r\nat are the design&lt;br&gt;&gt; conditions that lead to the creation of new resou=\r\nrce state? Etc.) I am&lt;br&gt;\n\n&gt; trying to get away from the &quot;you could=\r\n do this and you could do that&lt;br&gt;&gt; but you also could do it that way&qu=\r\not; kinds of answers to practical REST&lt;br&gt;&gt; design questions.&lt;br&gt;&lt;br&gt;I t=\r\nhink I see what you are driving at with your distinction between session st=\r\nate vs resource state, but I don&#39;t think the distinction is so clean in=\r\n REST. Here&#39;s a relevant passage from Roy&#39;s thesis (&lt;a href=3D&quot;http=\r\n://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_=\r\n3&quot;&gt;5.3.3&lt;/a&gt;):&lt;br&gt;\n\n&lt;br&gt;&lt;div&gt;&lt;blockquote class=3D&quot;webkit-indent-blockquote&quot;=\r\n style=3D&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;The application =\r\nstate is controlled and stored by the user agent and\ncan be &lt;span class=3D&quot;=\r\nApple-style-span&quot; style=3D&quot;text-decoration: underline;&quot;&gt;composed of represe=\r\nntations from multiple servers&lt;/span&gt;. In addition\nto freeing the server fr=\r\nom the scalability problems of storing state,\nthis allows the user to direc=\r\ntly &lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;text-decoration: underline;&quot;&gt;=\r\nmanipulate&lt;/span&gt; the state (e.g., a Web\nbrowser&#39;s history), anticipate=\r\n changes to that state (e.g., link maps\nand prefetching of representations)=\r\n, and &lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;text-decoration: underline;=\r\n&quot;&gt;jump from one application to\nanother&lt;/span&gt; (e.g., bookmarks and URI-entr=\r\ny dialogs). [emphasis added]&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So at le=\r\nast a copy of the resource state (in the form or a representation of that r=\r\nesource) is intended to be stored and manipulated on the client side. For e=\r\nxample, I believe this 5.3.3 paragraph endorses the following scenario:&lt;/di=\r\nv&gt;\n\n&lt;div&gt;&lt;ol&gt;&lt;li&gt;client receives a representation of the works of art in a =\r\nmuseum exhibit as list of art works (name of work, name of artist) from a m=\r\nuseum service on some museum server&lt;/li&gt;&lt;li&gt;the client extracts the name of=\r\n an artist (a string) from the list and submits it to Wikipedia on a differ=\r\nent set of servers&lt;/li&gt;\n\n&lt;li&gt;It takes the representation from Wikipedia and=\r\n formats it into a popup for the user&#39;s UI visualization of the museum =\r\nexhibit&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;In this scenario the client &quot;jumps from one appl=\r\nication (museum service) to another (Wikipedia)&quot;, submitting represent=\r\nation data it received from the first service to the second service. Your d=\r\nescription above seems to prohibit such a scenario (&quot;to continue its i=\r\nnteraction with the service on another machine,=A0it would not only need to=\r\n take the appropriate URIs with it ...=A0but also other data elements&quot;=\r\n).&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It appears that REST endorses the use of &quo=\r\nt;application data&quot; stored on the client, at least in the case where s=\r\nuch data was at some point in the past received by the client as part of a =\r\nrepresentation of a server-based resource.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Ni=\r\nck&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--001485f5ed4a47706404776a65c7--\r\n\n"}}