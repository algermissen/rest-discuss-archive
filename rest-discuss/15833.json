{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"iCgYrj3O-g62ot0O_HVB1LxC6sIZWGRgy2FpoFHj9YvUZic6uZhChdiRWudikfXOI__jEUrT7RocMlL7dfqu_0r2MD-B9v_EmQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTTP reliability - in order msg delivery?","postDate":"1279049244","msgId":15833,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlucHc4MVdoanJoM0ZWNUF5NS01RjhuRmVibVl4Y2h2cjZ6TEhhZkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIxNjcyMS43OTcyNy5xbUB3ZWIxMTA3MTYubWFpbC5ncTEueWFob28uY29tPg==","referencesHeader":"PDkzODQ2NC4zMjUxNC5xbUB3ZWIyODMxNC5tYWlsLnVrbC55YWhvby5jb20+CTwyMTY3MjEuNzk3MjcucW1Ad2ViMTEwNzE2Lm1haWwuZ3ExLnlhaG9vLmNvbT4="},"prevInTopic":15832,"nextInTopic":15836,"prevInTime":15832,"nextInTime":15834,"topicId":15828,"numMessagesInTopic":32,"msgSnippet":"... Well it comes down to who cares about the message ordering - the client or the application. If the client does (i.e. the client is harmed by not having","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 51140 invoked from network); 13 Jul 2010 19:27:38 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m14.grp.re1.yahoo.com with QMQP; 13 Jul 2010 19:27:38 -0000\r\nX-Received: from unknown (HELO mail-gy0-f172.google.com) (209.85.160.172)\n  by mta2.grp.re1.yahoo.com with SMTP; 13 Jul 2010 19:27:38 -0000\r\nX-Received: by gyh3 with SMTP id 3so3400634gyh.3\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 13 Jul 2010 12:27:25 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.150.218.20 with SMTP id q20mr6804714ybg.264.1279049244745; \n\tTue, 13 Jul 2010 12:27:24 -0700 (PDT)\r\nX-Received: by 10.151.109.3 with HTTP; Tue, 13 Jul 2010 12:27:24 -0700 (PDT)\r\nIn-Reply-To: &lt;216721.79727.qm@...&gt;\r\nReferences: &lt;938464.32514.qm@...&gt;\n\t&lt;216721.79727.qm@...&gt;\r\nDate: Tue, 13 Jul 2010 12:27:24 -0700\r\nMessage-ID: &lt;AANLkTinpw81Whjrh3FV5Ay5-5F8nFebmYxchvr6zLHaf@...&gt;\r\nTo: Bryan Taylor &lt;bryan_w_taylor@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] HTTP reliability - in order msg delivery?\r\nX-Yahoo-Group-Post: member; u=401876259; y=IvwS-axV1RPAmEJTaNeI_HEonUago0LqWya3C6HesaMEgfxGpeegqw\r\nX-Yahoo-Profile: gaminginparis\r\n\r\nOn Tue, Jul 13, 2010 at 11:44 AM, Bryan Taylor &lt;bryan_w_taylor@...&gt; w=\r\nrote:\n&gt;\n&gt; =A0What&#39;s wrong with the simple approach: the client who has to k=\r\nnow the message\n&gt; order a priori, should number the messages to reflect del=\r\nivery order and do\n&gt; idempotent PUT of message N until it&#39;s verified delive=\r\nred. Then move to message\n&gt; N+1. When message N is successfully PUT, the re=\r\npresentation returned should\n&gt; contain the number N+1 and the URL for its P=\r\nUT, and this resource should be\n&gt; separately GET&#39;able. The client can drop =\r\nretention of any message numbered N or\n&gt; less.\n\nWell it comes down to who c=\r\nares about the message ordering - the\nclient or the application.\n\nIf the cl=\r\nient does (i.e. the client is &quot;harmed&quot; by not having messages\nprocessed in =\r\norder), then it&#39;s really up to the client to track it&#39;s\nactivity with the s=\r\nerver to ensure its overall experience.\n\nHowever, if the server cares are m=\r\nessage ordering, and the servers\napplication state is adversely affected, t=\r\nhen it&#39;s up to the server to\nenforce it. It can&#39;t simply rely on the client=\r\n to &quot;do the right\nthing&quot;. The example posited is one where the client faile=\r\nd and lost\ntrack of the message. Idempotent PUT can somewhat alleviate this=\r\n\nbehavior (in that message replay should be &quot;safe&quot;) but doesn&#39;t solve\nthe p=\r\nroblem of &quot;skipped&quot; messages.\n\n\n&gt; This works, but is it really RESTful? The=\r\n client&#39;s understanding of things like\n&gt; message order is a form of applica=\r\ntion state that isn&#39;t really hypermedia\n&gt; driven. You are really trying to =\r\ncreate an event driven architecture that uses\n&gt; HTTP as a transport. Which =\r\nis fine, sometimes you have that problem. But I think\n&gt; Roy made the point =\r\nto me in a different thread that we should acknowledge that\n&gt; event driven =\r\narchitectural styles are different that RESTful ones.\n\nI think it can. In t=\r\nheory each time you PUT a message  you could get\nan appropriate link for th=\r\ne &quot;next&quot; message. In this way, the\napplication maintains the message orderi=\r\nng, since each link can be\ntied to the message sequence. In theory this sho=\r\nuld also eliminate the\n&quot;skipped&quot; message issue since a client won&#39;t know ho=\r\nw to submit the\n5th message without having submitted the 4th.\n\nThe problem =\r\noccurs when the system gets out of sync, when the client\n&quot;thinks&quot; its sendi=\r\nng the 5th message, but the link is for the 4th. The\nonly real way to solve=\r\n that is to resend the entire message sequence\nor somehow figure out where =\r\nthe sequence got out of sync and restart\nfrom that point. That implies that=\r\n there&#39;s some error detection\nprotocol at the end, for example after sendin=\r\ng a message you get a\nlink to the next message or the &quot;finish transaction&quot;.=\r\n When you finish,\nyou should get a checksum of some kind (as simple as numb=\r\ner of\nmessages or complicated as a CRC) that matches what you sent, ensurin=\r\ng\nthat the clients intentions match the servers.\n\nRegards,\n\nWill Hartung\n(w=\r\nillh@...)\n\n"}}