{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"o15CkGr5kA_FwYiFUQp5kUlziDlwbygkEgHfkOUlGYsGnS2uIZUjkpaCQ28EF8iiP9pqHszY6CqbkP0RBOy2x3LHaogqeNtUHmTKzg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: REST is not just file storage","postDate":"1210051432","msgId":10743,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZ2b3ExOCtkbXNiQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEEzQjk3RjA3LUM2OTktNEE5QS04QzQ5LTU4MUIzQUVDREY1NkBnYml2LmNvbT4="},"prevInTopic":10740,"nextInTopic":10745,"prevInTime":10742,"nextInTime":10744,"topicId":10740,"numMessagesInTopic":7,"msgSnippet":"Yes! And it s not just here -- this same take on REST can be found all over the web. For some reason, people just don t appreciate the hypermedia engine aspect","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 77994 invoked from network); 6 May 2008 05:23:52 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m53.grp.scd.yahoo.com with QMQP; 6 May 2008 05:23:52 -0000\r\nX-Received: from unknown (HELO n49c.bullet.mail.sp1.yahoo.com) (66.163.168.183)\n  by mta15.grp.scd.yahoo.com with SMTP; 6 May 2008 05:23:52 -0000\r\nX-Received: from [216.252.122.218] by n49.bullet.mail.sp1.yahoo.com with NNFMP; 06 May 2008 05:23:52 -0000\r\nX-Received: from [66.218.69.2] by t3.bullet.sp1.yahoo.com with NNFMP; 06 May 2008 05:23:52 -0000\r\nX-Received: from [66.218.67.199] by t2.bullet.scd.yahoo.com with NNFMP; 06 May 2008 05:23:52 -0000\r\nDate: Tue, 06 May 2008 05:23:52 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;fvoq18+dmsb@...&gt;\r\nIn-Reply-To: &lt;A3B97F07-C699-4A9A-8C49-581B3AECDF56@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: REST is not just file storage\r\nX-Yahoo-Group-Post: member; u=221173245; y=QkDUL0-HazCnWmzaxwlmeqljoRCnNQmTrh_kyamFjckDElhwbA\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nYes! And it&#39;s not just here -- this same take on REST can be found all\nover=\r\n the web. For some reason, people just don&#39;t appreciate the\nhypermedia engi=\r\nne aspect of REST. Leaving it out is a bit like a joke\nwithout a punchline =\r\n-- an elaborate setup that&#39;s missing that final,\nkey element.\n\nUnfortunatel=\r\ny, the misinformation dominates the available (mostly\nonline) literature. M=\r\nany seem to venture into REST without spending\nthe time to understand or ev=\r\nen read your thesis, and then off they go\nblogging about the wonders of the=\r\nse CRUD-based &quot;RESTful&quot; interfaces,\nand it just gets worse.\n\nThere is a rea=\r\nl lack of good introductory information though. On your\nblog, you criticize=\r\nd the RESTful Web Services book of not stressing\nthe hypermedia engine enou=\r\ngh -- and its pretty much the best thing out\nthere.\n\nWorse, people haven&#39;t =\r\nbeen given any good examples to learn from.\nWell, we obviously have the HTM=\r\nL web -- but unfortunately there hasn&#39;t\nbeen too much success building auto=\r\nmated clients that can do much more\nthan follow links with GET. And machine=\r\n-driven agents are why most\npeople are interested in REST. There&#39;s the Atom=\r\n Publishing Protocol,\nbut let&#39;s face it -- while RESTful, it&#39;s really not T=\r\nHAT much more\nthan a big &quot;Save As...&quot; dialog is it? There&#39;s nothing wrong w=\r\nith that,\nbut it doesn&#39;t really help deal with the confusion.\n\nAn excellent=\r\n example IMHO that&#39;s been mostly ignored is CCXML\n(http://www.w3.org/TR/ccx=\r\nml/). It&#39;s an XML language for controlling\nphone calls (redirecting them, j=\r\noining them to conferences, etc.).\nUnfortunately, it has a steep learning c=\r\nurve for those not familiar\nwith telephony, especially if your goal is to l=\r\nearn from it rather\nthan use it. Its basic model -- a state machine that in=\r\nteracts with a\nset of local resources via events and with resources via HTT=\r\nP -- is\nfairly attractive though. Fortunately, this model is being distille=\r\nd\ninto SCXML (http://www.w3.org/TR/scxml/) which I think is very\npromising.=\r\n Disclaimer: I used to participate in the W3C working groups\nbehind these f=\r\normats so I&#39;m obviously biased. \n\nEven though both these languages use HTTP=\r\n pretty minimally (actually\nit&#39;s quite abysmal; they could be improved a lo=\r\nt in this regard) they\ndo a much better job of decoupling the client and th=\r\ne server than most\nof the ROA/CRUD stuff that gets thrown around. And they =\r\nare\nparticularly interesting because they aren&#39;t focused on presenting\ninfo=\r\nrmation to a human user. Rather, they provide an event-based\ncontroller tha=\r\nt acts as an adapter between client side resources and\nnetwork resources. T=\r\nhis is a very compelling architecture for\nmachine-driven agents, one that m=\r\neets the constraints of REST, but\nlikely wouldn&#39;t be deemed &quot;RESTful&quot; by ma=\r\nny.\n\nThe community desperately needs a good set of authoritative tutorials\n=\r\nand examples that gets the whole picture across. Something that&#39;s easy\nto d=\r\nigest and gets you off on the right foot. Something that&#39;s edited\nand/or ap=\r\nproved by the experts (you know who you are ;-). The\ninformation is out the=\r\nre, but you really have to dig to get to it. And\nit&#39;s impossible for the ne=\r\nwcomer to filter out the misinformation.\nThere has to be a way to make it e=\r\nasier...\n\nAndrew Wahbe\n\n--- In rest-discuss@yahoogroups.com, &quot;Roy T. Fieldi=\r\nng&quot; &lt;fielding@...&gt;\nwrote:\n&gt;\n&gt; There seems to be a common thread with most p=\r\nosts here.  People\n&gt; have been busy modeling everything as a resource and n=\r\now they\n&gt; want to know how to do everything in a PUT or DELETE instead of\n&gt;=\r\n any of the other HTTP methods.  That is wrong.  That is thinking\n&gt; HTTP is=\r\n just a &quot;Save as...&quot; dialog.\n&gt; \n&gt; REST is not limited to GET, PUT, and DELE=\r\nTE.  Anyone who says so\n&gt; is just making things up as they go along.  REST =\r\nis limited to the\n&gt; client being told what to do next by the current state =\r\nof where\n&gt; they are now, aside from the entry point(s) we call a bookmark.\n=\r\n&gt; That is feasible because the set of methods is uniform, not because\n&gt; it =\r\nis limited to CRUD.  POST is an equal party in the REST interface,\n&gt; partic=\r\nularly when actions are being applied to the resources that\n&gt; are a composi=\r\nte of multiple source resources.  So is PATCH.\n&gt; \n&gt; Doing RESTful actions o=\r\nn multiple resources is no different from\n&gt; selecting multiple tunes in iTu=\r\nnes and using the info dialog\n&gt; to set certain properties across all select=\r\ned tunes.  It is a UI issue.\n&gt; The UI builds a set of actions to perform an=\r\nd then performs them\n&gt; in whatever way is most efficiently provided by the =\r\nset of resources\n&gt; being operated upon.  If those resources (or, rather, th=\r\ne index to\n&gt; those resources) say they can be operated upon as a group by P=\r\nOST\n&gt; of a selection form, then so be it -- that is perfectly RESTful\n&gt; eve=\r\nn without the benefit of per-resource cache invalidation.\n&gt; Likewise for PA=\r\nTCH or PUT to a meta-resource, or PROPPATCH to a\n&gt; WebDAV resource, it is R=\r\nESTful if there is some engine described\n&gt; by a representation provided by =\r\nthe origin server that instructs\n&gt; the client on what to do next.\n&gt; \n&gt; The =\r\ngoals are to remove coupling and maximize the number of\n&gt; reusable resource=\r\ns.\n&gt; \n&gt; ....Roy\n&gt;\n\n\n\n"}}