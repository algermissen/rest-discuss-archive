{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130641183,"authorName":"Peters, Daniel R","from":"&quot;Peters, Daniel R&quot; &lt;daniel.r.peters@...&gt;","profile":"sternobumx","replyTo":"SENDER","senderId":"hkQYqssgoMnnhp0tha2ThSflJy_DaCHu2V26LOV7GJKzyesMkK7Q7I-Ht2cmQx3AMCz-WzXKmEUW9QcH3MQyLzBotQcSuLc6p0DxMkNeOldUtXsiTw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"REST and encapsulation","postDate":"1179865350","msgId":8534,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDMxMTY2MzhFQjZENUY3NERCQjlFMDMwOUZCQkNCMTQ0MDM2MjgzOTFAYXpzbXN4NDExLmFtci5jb3JwLmludGVsLmNvbT4=","inReplyToHeader":"PDQ2NTMwNzcyLjYwNjA3MDVAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":8532,"nextInTopic":8535,"prevInTime":8533,"nextInTime":8535,"topicId":8521,"numMessagesInTopic":21,"msgSnippet":"Hi, I m new to the world of REST web services.  I ve done a bit of study on the subject, and I m ready to start trying out some ideas.  Before I stumble","rawEmail":"Return-Path: &lt;daniel.r.peters@...&gt;\r\nReceived: (qmail 87452 invoked from network); 22 May 2007 21:15:10 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m43.grp.scd.yahoo.com with QMQP; 22 May 2007 21:15:09 -0000\r\nReceived: from unknown (HELO n29a.bullet.sp1.yahoo.com) (209.131.38.249)\n  by mta6.grp.scd.yahoo.com with SMTP; 22 May 2007 21:15:04 -0000\r\nReceived: from [216.252.122.218] by n29.bullet.sp1.yahoo.com with NNFMP; 22 May 2007 21:14:39 -0000\r\nReceived: from [66.218.69.4] by t3.bullet.sp1.yahoo.com with NNFMP; 22 May 2007 21:14:39 -0000\r\nReceived: from [66.218.66.82] by t4.bullet.scd.yahoo.com with NNFMP; 22 May 2007 21:14:38 -0000\r\nX-Sender: daniel.r.peters@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 34459 invoked from network); 22 May 2007 20:22:37 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m37.grp.scd.yahoo.com with QMQP; 22 May 2007 20:22:37 -0000\r\nReceived: from unknown (HELO mga02.intel.com) (134.134.136.20)\n  by mta5.grp.scd.yahoo.com with SMTP; 22 May 2007 20:22:37 -0000\r\nReceived: from orsmga001.jf.intel.com ([10.7.209.18])\n  by orsmga101.jf.intel.com with ESMTP; 22 May 2007 13:22:34 -0700\r\nX-ExtLoop1: 1\r\nX-IronPort-AV: E=Sophos;i=&quot;4.14,567,1170662400&quot;; \n   d=&quot;scan&#39;208,217&quot;;a=&quot;246128038&quot;\r\nReceived: from azsmsx334.amr.corp.intel.com ([10.2.121.57])\n  by orsmga001.jf.intel.com with ESMTP; 22 May 2007 13:22:33 -0700\r\nReceived: from azsmsx411.amr.corp.intel.com ([10.2.121.78]) by azsmsx334.amr.corp.intel.com with Microsoft SMTPSVC(6.0.3790.1830);\n\t Tue, 22 May 2007 13:22:33 -0700\r\nX-MIMEOLE: Produced By Microsoft Exchange V6.5\r\nContent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----_=_NextPart_001_01C79CAE.ED75AFEB&quot;\r\nDate: Tue, 22 May 2007 13:22:30 -0700\r\nMessage-ID: &lt;3116638EB6D5F74DBB9E0309FBBCB14403628391@...&gt;\r\nIn-reply-to: &lt;46530772.6060705@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: REST and encapsulation\r\nThread-index: AcecgzH/L0AOXeM5QkeePDAYgwBGdAAJbkyw\r\nTo: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nX-OriginalArrivalTime: 22 May 2007 20:22:33.0235 (UTC) FILETIME=[EDDE2630:01C79CAE]\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Peters, Daniel R&quot; &lt;daniel.r.peters@...&gt;\r\nSubject: REST and encapsulation\r\nX-Yahoo-Group-Post: member; u=130641183; y=8KsRQqbSYdamrd1R5fWed0PjG6nGqH1SztB9AGbrHLqnYLGvEQ\r\nX-Yahoo-Profile: sternobumx\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 22 May 2007 21:14:37 -0000\r\n\r\n\r\n------_=_NextPart_001_01C79CAE.ED75AFEB\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi,\n \nI&#39;m new to the world of REST web services.  I&#39;ve done a bit of study =\r\non\nthe subject, and I&#39;m ready to start trying out some ideas.  Before I\nstu=\r\nmble forward, though, I want to see what the general consensus is on\na few =\r\nissues that my reading hasn&#39;t really clarified.\n \nThe first one centers on =\r\nthe notion of encapsulation.  For example, if I\nam building an application =\r\nfrom objects, most good advice urges you to\nencapsulate the object&#39;s state =\r\nwhere possible.  For example, if I design\na class that can be either COMPLE=\r\nTE, or INCOMPLETE, a design that\nexposes methods like:\n \nobject.MarkComplet=\r\ne and\nobject MarkIncomplete\n \nto effect a change to the CompleteState and\n =\r\n\nobject.IsComplete and\nobject.IsIncomplete\n \nto observe the state seems to =\r\nbe generally preferred over a design that\ngives clients direct access to th=\r\ne object&#39;s state through &quot;setter&quot; and\n&quot;getter&quot; methods like:\n \nobject.SetCo=\r\nmpleteState(COMPLETE/INCOMPLETE) and\nobject.GetCompleteState\n \nor maybe \n \n=\r\nobject.IsComplete(bool) and\nbool object.IsComplete\n \nMy question is what to=\r\n do about exposing an object like this as a\nresource.  The basic approach t=\r\nhat seems most common would seem to\nprefer a &quot;setter/getter&quot; approach by pa=\r\nssing a representation like this:\n \n&lt;object&gt;\n    &lt;completeState&gt;INCOMPLETE&lt;=\r\n/completeState&gt;\n&lt;/object&gt;\n \ninto and out of the restful web service.  This =\r\nseems to me to fly in the\nface of the notion of encapsulation. \n \nAssuming =\r\nencapsulation of this sort is an important feature of RESTful\ndesign (Is it=\r\n?), I am thinking of different ways to approach this to\npreserve the encaps=\r\nulation.\n \nThe first idea I had would change the representation so that it&#39;=\r\ns\ncontents are more &quot;method-like&quot; than &quot;data-like&quot;:\n \n&lt;object&gt;\n    &lt;MarkCom=\r\nplete/&gt;\n&lt;/object&gt;\n \nor \n \n&lt;object&gt;\n    &lt;MarkIncomplete/&gt;\n&lt;/object&gt;\n \nfor PU=\r\nTs\n \nand \n  \n&lt;object&gt;\n    &lt;IsComplete/&gt;\n&lt;/object&gt;\n \nfor GETs\n \nSo when the =\r\nrepresentation is passed into the web service through a PUT\nor POST, the pr=\r\nesence of the tag is essentially an indication to the\nservice to apply the =\r\n&quot;MarkComplete&quot; method to the resource.  This seems\na lot like protocol tunn=\r\neling to me, so I assume it&#39;s poor design. Maybe\nthere&#39;s a distinction that=\r\n is eluding me, so I thought I would include\nit.\n \nThe next idea I had was =\r\nto expose resources representing the collection\nof &quot;complete&quot; items and the=\r\n collection of &quot;incomplete&quot; items.  In order\nto change the state of a resou=\r\nrce, I could POST the Uri of the resource\nto the proper collection and code=\r\n behind the scenes would take care of\nupdating the state appropriately.\n \nT=\r\nhis seems a lot more RESTful to me, but it seems to be problematic for\nthe =\r\nclient; the client will have to obtain the &quot;complete&quot; item list, for\nexampl=\r\ne, and then search it in order to see if a given item&#39;s state is\nCOMPLETE.\n=\r\n \nSo, next, I thought that perhaps I would embed the status into the\nrepres=\r\nentation for testing set membership, but only allow modifications\nusing the=\r\n list resources.  So the client would see something like\nbefore:\n \n&lt;object&gt;=\r\n\n    &lt;IsComplete/&gt;\n&lt;/object&gt;\n \nor more probably:\n  \n&lt;object&gt;\n    &lt;IsComplet=\r\ne/&gt; \n    ....\n    &lt;MarkComplete href=3D&#39;..../lists/completeItems&#39;/&gt;\n    &lt;Ma=\r\nrkIncomplete href=3D&#39;..../lists/IncompleteItems&#39;/&gt;\n&lt;/object&gt;\n \nor some simi=\r\nlar variation.\n \nChanging the &lt;IsComplete/&gt; to something else and then PUTt=\r\ning the new\nrepresentation back to the item&#39;s Url would be ignored.  The st=\r\nate would\nonly change if the client POSTed the Url of the item to the appro=\r\npriate\nlist.\n \nThis seems okay to me.  It protects encapsulation in that th=\r\ne client has\nno way to directly observe or change the resource&#39;s private st=\r\nate.  It\nalso seems to me (remember, I am a novice) to follow REST principl=\r\nes.\nThe lack of symmetry for observing and changing the state seems a littl=\r\ne\ncumbersome to me, though.\n \nSo, which of these approaches is best from a =\r\ndesign standpoint, and are\nthere others that are better?\n \nThanks in advanc=\r\ne for any insight.\n \n \n\r\n------_=_NextPart_001_01C79CAE.ED75AFEB\r\nContent-Type: text/html;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.=\r\nw3c.org/TR/1999/REC-html401-19991224/loose.dtd&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;\n&lt;META http-eq=\r\nuiv=3DContent-Type content=3D&quot;text/html; charset=3Dus-ascii&quot;&gt;&lt;!-- Network c=\r\nontent --&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2900.3059&quot; name=3DGENERATOR&gt;&lt;/HEAD&gt;=\r\n\n&lt;BODY style=3D&quot;BACKGROUND-COLOR: #ffffff&quot;&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22=\r\n052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;Hi,&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;=\r\n\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \n=\r\nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;=\r\nFONT face=3DArial color=3D#0000ff size=3D2&gt;I&#39;m \nnew to the world of REST we=\r\nb services.&nbsp; I&#39;ve done a bit of study on the \nsubject, and I&#39;m ready t=\r\no start trying out some ideas.&nbsp; Before I stumble \nforward, though, I w=\r\nant to see what the general consensus is on a few issues \nthat my reading h=\r\nasn&#39;t really clarified.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22=\r\n052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000f=\r\nf size=3D2&gt;The \nfirst one centers on the notion of encapsulation.&nbsp; For=\r\n example, if I am \nbuilding an application from objects, most good advice u=\r\nrges you to encapsulate \nthe object&#39;s state where possible.&nbsp; For examp=\r\nle, if I design a class that \ncan be either COMPLETE, or INCOMPLETE, a desi=\r\ngn that exposes methods \nlike:&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08733=\r\n3919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&n=\r\nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot;=\r\n color=3D#0000ff \nsize=3D2&gt;object.MarkComplete and&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV=\r\n&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000f=\r\nf \nsize=3D2&gt;object MarkIncomplete&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08=\r\n7333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN=\r\n&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial colo=\r\nr=3D#0000ff size=3D2&gt;to \neffect a change to the CompleteState and&lt;/FONT&gt;&lt;/S=\r\nPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08733391=\r\n9-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;object.IsCo=\r\nmplete and&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT =\r\nface=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;object.IsIncomplete&lt;/FONT&gt;&lt;/=\r\nSPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08733391=\r\n9-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;to \nobserve the stat=\r\ne seems to be generally preferred over a design that gives \nclients direct =\r\naccess to the object&#39;s state through &quot;setter&quot; and &quot;getter&quot; \nmethods like:&lt;/=\r\nFONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial=\r\n color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08=\r\n7333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;objec=\r\nt.SetCompleteState(COMPLETE/INCOMPLETE) and&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN =\r\nclass=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsize=\r\n=3D2&gt;object.GetCompleteState&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0873339=\r\n19-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbs=\r\np;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#=\r\n0000ff size=3D2&gt;or \nmaybe &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919=\r\n-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; col=\r\nor=3D#0000ff \nsize=3D2&gt;object.IsComplete(bool) and&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV=\r\n&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000f=\r\nf \nsize=3D2&gt;bool object.IsComplete&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0=\r\n87333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPA=\r\nN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial col=\r\nor=3D#0000ff size=3D2&gt;My \nquestion is what to do about exposing an object l=\r\nike this as a resource.&nbsp; \nThe basic approach that seems most common wo=\r\nuld seem to prefer a &quot;setter/getter&quot; \napproach by passing a representation =\r\nlike this:&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT =\r\nface=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPA=\r\nN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsi=\r\nze=3D2&gt;&lt;object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-2205=\r\n2007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;FONT color=3D#0000ff \n=\r\nsize=3D2&gt;&lt;completeState&gt;INCOMPLETE&lt;/completeState&gt;&lt;/FONT&gt;&lt;/FONT=\r\n&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier =\r\nNew&quot; color=3D#0000ff \nsize=3D2&gt;&lt;/object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;=\r\n&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=\r\n=3DArial color=3D#0000ff size=3D2&gt;into \nand out of the restful web service.=\r\n&nbsp; This seems to me&nbsp;to fly in the \nface of the notion of encapsula=\r\ntion. &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=\r\n=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN cl=\r\nass=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;Assum=\r\ning encapsulation of this sort is an important feature of RESTful \ndesign (=\r\nIs it?),&lt;/FONT&gt;&lt;/SPAN&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial \n=\r\ncolor=3D#0000ff size=3D2&gt; I am thinking of different ways to approach this =\r\nto \npreserve the encapsulation.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0873=\r\n33919-22052007&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&=\r\nnbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff size=3D2&gt;The \nfirst idea I had would change the representation s=\r\no that it&#39;s contents are more \n&quot;method-like&quot; than &quot;data-like&quot;:&lt;/FONT&gt;&lt;/SPAN=\r\n&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0=\r\n000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-220=\r\n52007&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;\n&lt;DIV&gt;&lt;SPAN class=3D08733=\r\n3919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;&lt;obje=\r\nct&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=\r\n=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;MarkComplete/&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=\r\n=3D#0000ff \nsize=3D2&gt;&lt;/object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=\r\n=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-2205=\r\n2007&gt;or &lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22=\r\n052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;&lt;object&gt;&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Cou=\r\nrier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;FONT color=3D#0000ff size=3D2&gt;&lt;MarkIncomp=\r\nlete/&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;=\r\n&lt;/SPAN&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT \nface=3D&quot;Courier New&quot; color=\r\n=3D#0000ff size=3D2&gt;&lt;/object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D=\r\n087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-2205200=\r\n7&gt;for PUTs&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;and &lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN c=\r\nlass=3D087333919-22052007&gt;&lt;SPAN class=3D087333919-22052007&gt;&nbsp;\n&lt;DIV&gt;&lt;SPA=\r\nN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot; color=3D#0000ff \nsi=\r\nze=3D2&gt;&lt;object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-2205=\r\n2007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;FONT color=3D#0000ff s=\r\nize=3D2&gt;&lt;IsComplete/&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0=\r\n87333919-22052007&gt;&lt;/SPAN&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT \nface=3D&quot;Co=\r\nurier New&quot; color=3D#0000ff size=3D2&gt;&lt;/object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DI=\r\nV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0=\r\n87333919-22052007&gt;for GETs&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN clas=\r\ns=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-220=\r\n52007&gt;So when the representation is passed into \nthe web service through a =\r\nPUT or POST, the presence of the tag is essentially an \nindication to the s=\r\nervice to apply the &quot;MarkComplete&quot; method to the \nresource.&nbsp; This seem=\r\ns a lot like protocol tunneling to me, so I assume it&#39;s \npoor design. Maybe=\r\n there&#39;s a distinction that is eluding me, so I thought I \nwould include it=\r\n.&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;D=\r\nIV&gt;&lt;SPAN class=3D087333919-22052007&gt;The next idea I had was to expose resou=\r\nrces \nrepresenting the collection of&nbsp;&quot;complete&quot; items and the collecti=\r\non of \n&quot;incomplete&quot; items.&nbsp; In order to change the state of a resource=\r\n, I could \nPOST the Uri of the resource to the proper collection and code b=\r\nehind the scenes \nwould take care of updating the state appropriately.&lt;/SPA=\r\nN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D087333919-22052007&gt;This seems a lot more RESTful to me, but it \n=\r\nseems to be problematic for the client; the client will have to obtain the =\r\n\n&quot;complete&quot; item list, for example, and then search it&nbsp;in order to see=\r\n if a \ngiven item&#39;s state is COMPLETE.&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0873=\r\n33919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;So=\r\n, next, I thought that perhaps I would \nembed the status into the represent=\r\nation for testing set membership, but only \nallow modifications using the l=\r\nist resources.&nbsp; So the client would see \nsomething like before:&lt;/SPAN&gt;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN=\r\n class=3D087333919-22052007&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT fa=\r\nce=3D&quot;Courier New&quot; color=3D#0000ff \nsize=3D2&gt;&lt;object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp=\r\n;&nbsp;&nbsp; \n&lt;FONT color=3D#0000ff size=3D2&gt;&lt;IsComplete/&gt;&lt;/FONT&gt;&lt;/F=\r\nONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&lt;SPAN class=\r\n=3D087333919-22052007&gt;&lt;FONT \nface=3D&quot;Courier New&quot; color=3D#0000ff size=3D2&gt;=\r\n&lt;/object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;=\r\n/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;or more probably:&lt;=\r\n/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;SPAN class=3D087333919-=\r\n22052007&gt;&nbsp;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier=\r\n New&quot; color=3D#0000ff \nsize=3D2&gt;&lt;object&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp;=\r\n \n&lt;FONT color=3D#0000ff size=3D2&gt;&lt;IsComplete/&gt; &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;=\r\n/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbs=\r\np;&nbsp;&nbsp; \n....&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052=\r\n007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;MarkComplete href=3D=\r\n&#39;..../lists/completeItems&#39;/&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0873=\r\n33919-22052007&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp; \n&lt;MarkIncom=\r\nplete href=3D&#39;..../lists/IncompleteItems&#39;/&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT=\r\n \nface=3D&quot;Courier New&quot; color=3D#0000ff size=3D2&gt;&lt;/object&gt;&lt;/FONT&gt;&lt;/SPA=\r\nN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D087333919-22052007&gt;or some similar \nvariation.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/SPA=\r\nN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;=\r\nDIV&gt;&lt;SPAN class=3D087333919-22052007&gt;Changing the &lt;IsComplete/&gt; to \ns=\r\nomething else and then PUTting the new representation back to the item&#39;s Ur=\r\nl \nwould be ignored.&nbsp; The state would only change if the client POSTed=\r\n the Url \nof the item to the appropriate list.&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN clas=\r\ns=3D087333919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-220=\r\n52007&gt;This seems okay to me.&nbsp; It protects \nencapsulation in that the c=\r\nlient has no way to directly observe or change the \nresource&#39;s private stat=\r\ne.&nbsp; It also seems to me (remember, I am a novice) to \nfollow REST prin=\r\nciples.&nbsp; The lack of symmetry for observing and changing \nthe state se=\r\nems a little cumbersome to me, though.&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D0873=\r\n33919-22052007&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;So=\r\n, which of these approaches is best from a \ndesign standpoint, and are ther=\r\ne others that are better?&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-2205200=\r\n7&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;Thanks in advan=\r\nce for any \ninsight.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-22052007&gt;&lt;FONT face=3DArial color=3D#0000=\r\nff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D087333919-220520=\r\n07&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;&lt;=\r\n/BODY&gt;&lt;/HTML&gt;\n\r\n------_=_NextPart_001_01C79CAE.ED75AFEB--\r\n\n"}}