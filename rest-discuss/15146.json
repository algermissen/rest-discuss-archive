{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"4YHKI_LRaalFumAj25zWTSgAaHftqT9iAapg0SIQCE1uDGKKmmQsvtj1iHwNNQnkHNztE0ILXRSTalZxPPdHg8QBgcf_VmN1V96AdjU6pg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] client keeps its state","postDate":"1270587293","msgId":15146,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNDA2MTQ1NDUzLjMxNmFlMmJjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGwyemE2YTZkZjM2MTAwNDA2MDEyNGw2Y2IxODZkOHM3NTM2OWYzNjAyNzAyMGQ2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGkydTU4MWJmNjE2MTAwNDAzMTgzM2s3YWRmZDk0Y3Q3ZjY4OWY2NGE1Zjc3ZTI0QG1haWwuZ21haWwuY29tPgk8MjAxMDA0MDUwMDI0NTIuZDc3M2I0MzguZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8bDJ6YTZhNmRmMzYxMDA0MDYwMTI0bDZjYjE4NmQ4czc1MzY5ZjM2MDI3MDIwZDZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":15137,"nextInTopic":15147,"prevInTime":15145,"nextInTime":15147,"topicId":15101,"numMessagesInTopic":33,"msgSnippet":"... Yeah, that paragraph is poorly worded, and is inconsistent with 5.2.3, A user agent uses a client connector to initiate a request and becomes the ultimate","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25999 invoked from network); 6 Apr 2010 20:55:27 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m4.grp.sp2.yahoo.com with QMQP; 6 Apr 2010 20:55:27 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 Apr 2010 20:55:27 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id B9993509DA;\n\tTue,  6 Apr 2010 16:55:23 -0400 (EDT)\r\nDate: Tue, 6 Apr 2010 14:54:53 -0600\r\nTo: Nick Gall &lt;nick.gall@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100406145453.316ae2bc.eric@...&gt;\r\nIn-Reply-To: &lt;l2za6a6df361004060124l6cb186d8s75369f36027020d6@...&gt;\r\nReferences: &lt;i2u581bf6161004031833k7adfd94ct7f689f64a5f77e24@...&gt;\n\t&lt;20100405002452.d773b438.eric@...&gt;\n\t&lt;l2za6a6df361004060124l6cb186d8s75369f36027020d6@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] client keeps its state\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nNick Gall wrote:\n&gt;\n&gt; Eric J. Bowman wrote:\n&gt; \n&gt; &gt; Guilherme Silveira wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; How should a client decide its next step?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; This thread needs a terminology scrub.  In REST, the application is\n&gt; &gt; defined as &quot;what the user is trying to accomplish&quot;, and the user&#39;s\n&gt; &gt; agent is the &quot;client&quot;.  The client never decides what to do next,\n&gt; &gt; only the user does.  The client is there to carry out the user&#39;s\n&gt; &gt; orders.\n&gt; &gt;\n&gt; &gt; The &quot;user&quot; of course, is not required to be human.  But, this\n&gt; &gt; thread is as clear as mud, because &quot;user&quot; and &quot;user-agent&quot; are\n&gt; &gt; being combined into &quot;client&quot;.  When I as a human am driving a REST\n&gt; &gt; application, I am not the &quot;client&quot; nor am I part of the &quot;client\n&gt; &gt; component&quot;.\n&gt; &gt;\n&gt; \n&gt; Eric, I agree with, and like, your distinctions among &quot;application,&quot;\n&gt; &quot;user&quot;, and &quot;user agent&quot;. But what needs the terminology scrub is not\n&gt; just this thread, but (at least) the 5.3.3 Data\n&gt; View&lt;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_3&gt;section\n&gt; of Roy&#39;s Thesis.\n&gt; \n\nYeah, that paragraph is poorly worded, and is inconsistent with 5.2.3,\n&quot;A user agent uses a client connector to initiate a request and becomes\nthe ultimate recipient of the response.  The most common example is a\nWeb browser...&quot;.  I give the thesis an A- ;-).  Roy has stated that\nwe&#39;re allowed to reasonably disagree with his thesis, yet all the same\nI somewhat expect to be clobbered on this...\n\nRoy, I&#39;m not attempting to re-write your thesis, the suggested edits\nwhich follow are meant to illustrate the problems we&#39;re having with\ndiscussing m2m in terms of the REST style.  My edits are off-the-cuff,\nnot the product of a doctoral effort, of course.\n\n&gt; \n&gt; Two observations:\n&gt; \n&gt;    1. Saying that a &quot;user agent&quot; can be a bot, a personal agent\n&gt; (presumably an automated one, not a human one), or a spider suggests\n&gt; that Roy is NOT making your distinction between user (human) and user\n&gt; agent (automaton).\n&gt;\n\nI agree with Roy entirely that REST ends at the user agent -- m2m\npresents a problem that&#39;s tangential to REST.  But, REST is a style,\nnot a blueprint.  What I&#39;m trying to accomplish is to apply REST&#39;s\nterminology to this problem area, for the reasons Stuart pointed out:\n\n&quot;Implementers clearly are curious how to retain the constraints of the\narchitecture and build m2m agents.   While the techniques for building\ngoal-directed agents aren&#39;t particular to REST, they&#39;re certainly of\ninterest to this audience, and it&#39;s been a sorely lacking area of\nexploration, IMO.&quot;\n\nI start by altering Table 5-2, &quot;resolver = DNS interface&quot; because\ncomponents don&#39;t care what the underlying resolver library is, they all\nhave the same generic interface, that to me is the resolver connector.\n\nThen I alter Table 5-3, &quot;dns = BIND (or other library) component&quot; and\n&quot;user = machine or human decider&quot;.  If I&#39;m wrong that BIND is a\ncomponent beyond the resolver connector, then the basis of my thinking\nabout &quot;user component&quot; is misguided.\n\n&gt;\n&gt;    2. Roy appears to use &quot;application&quot; in two different\n&gt; (inconsistent?) ways. First, to refer to &quot;a cohesive structure of\n&gt; information and control alternatives through which a user can perform\n&gt; a desired task&quot; (earlier in section 5.3.3). Second, to refer to a\n&gt; software component. For example, &quot;does not assume that all\n&gt; applications are browsers.&quot;\n&gt; \n\nI&#39;ve always had a problem with the last paragraph in 5.3.3, and I agree\nthat it&#39;s a hindrance to learning REST.  Elsewhere the term &quot;browser\napplication&quot; is used, and it would be nice if application without such\nprefix only referred to &quot;REST application&quot; in Chapter 5.  This holds\ntrue, except for the paragraph in question, but I don&#39;t recall Roy\nbeing called on it before...  :-)\n\n&gt;\n&gt; I&#39;d be curious to know if you agree with my observations, and if so,\n&gt; would you be willing to edit section 5.3.3 to clear up the confusion\n&gt; between user and user agent and between application as &quot;information\n&gt; and control alternatives&quot; vs application as informal expression for a\n&gt; software component such as a browser.\n&gt; \n\nHere goes:\n\n&quot;\nThe model user agent is therefore an engine that moves from one state\nto the next by examining the alternative state transitions in the\ncurrent set of representations, presenting these options to the user,\nand following the user&#39;s chosen transition.  Not surprisingly, this\nexactly matches the user interface of a hypermedia browser.  However,\nthe style does not assume that all user agents are browsers.  In fact,\nuser agent details are hidden from the server by the generic connector\ninterface, and thus a user agent could equally be an automated robot\nperforming information retrieval for an indexing service, a personal\nagent looking for data that matches certain criteria, or a maintenance\nspider busy patrolling the information for broken references or\nmodified content.\n&quot;\n\nGooglebot is dispatched by different Google &quot;machine users&quot;, so it&#39;s a\nuser agent for an m2m process -- one which works by crawling human-\noriented APIs.  A personal agent resupplying my toilet paper stocks is\na user agent for an m2m process on behalf of a human user.  A link-\nchecker is a user agent for an m2m or m2h(uman) process, depending on\nwhether it&#39;s reporting broken links to a human user or reporting broken\nlinks to an automated repair process.\n\nSo I think my approach is a valid application of the REST style, even\nif REST&#39;s wording isn&#39;t an exact match.  This approach lines up with my\nworldview that REST is a process, not a result.  I&#39;m using REST as a\ntool to understand and evaluate m2m development issues that are beyond\nthe scope of REST, by introducing the notion of a &quot;user component&quot; to\nhelp such development interoperate within the constraints of REST.\n\nMy devious agenda is to nip in the bud the notion that a RESTful system\nneeds separate APIs for humans and machines.  I feel it&#39;s important to\npoint out that a REST API designed to enable a task to be completed\nover the wire, can cater to both.  Common sense dictates that one API\nis easier to maintain than two APIs, particularly when they are both\ndesigned to enable the same tasks to be completed over the wire.  What\nmakes no sense, is a m2m API that can&#39;t be debugged by a human, because\nit&#39;s a different API than the one meant for humans.\n\nHaving two parallel APIs, one for machines and one for humans, doesn&#39;t\nviolate any constraint of REST.  I argue that it violates the spirit\nand intent of REST, again by introducing the notion of a &quot;user\ncomponent&quot; into the discussion as a layer worthy of consideration\ndespite being opaque behind the generic connector interface.\n\nSo to clarify, my position that having an API instruct a client how to\nproceed violates the layered-system constraint, is based on the\nacceptance of a &quot;user component&quot; as a layer in the system.  While that\nisn&#39;t strictly REST, I believe it&#39;s a valid extension of REST\nterminology to encompass a specific problem REST isn&#39;t meant to solve.\n\n-Eric\n\n"}}