{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":174970602,"authorName":"Donald Strong","from":"&quot;Donald Strong&quot; &lt;dstrong@...&gt;","profile":"illyrian_au","replyTo":"SENDER","senderId":"vVFkjepmkn0lueFAKrqMbK4GhUP9sMXSgX9Y30sza_2tUl_Ei6y9meuhTuS5UTm6VN3t6ArJSnaUjIxqxZRjA_CkWu6pccXfOWTmrfTfENKM6TX_","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Identifiers: higher precedence than other fields?","postDate":"1086668504","msgId":4441,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEVNRUFJQ0FHT1BPSUlGSk5QQkhKTUVBRkNMQUEuZHN0cm9uZ0BhZ2VudGlzc29mdHdhcmUuY29tPg=="},"prevInTopic":4438,"nextInTopic":4443,"prevInTime":4440,"nextInTime":4442,"topicId":4433,"numMessagesInTopic":18,"msgSnippet":"Hi David, Here is my two cents. If the following speel does not directly address the issues that concern you then consider this as some ideas that I am airing","rawEmail":"Return-Path: &lt;dstrong@...&gt;\r\nX-Sender: dstrong@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 80705 invoked from network); 8 Jun 2004 04:22:49 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m2.grp.scd.yahoo.com with QMQP; 8 Jun 2004 04:22:49 -0000\r\nReceived: from unknown (HELO agentis.com.au) (192.35.59.253)\n  by mta4.grp.scd.yahoo.com with SMTP; 8 Jun 2004 04:22:47 -0000\r\nReceived: from voldemort.agentis.net (typhoeus-dmz.agentis.net [192.35.59.129])\n\tby agentis.com.au (8.11.6/8.11.6) with ESMTP id i584Lja21944\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 8 Jun 2004 14:21:45 +1000\r\nReceived: from roc (roc.agentis.net [192.168.129.235])\n\tby voldemort.agentis.net (8.11.6/8.11.6) with SMTP id i584Lic31760\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 8 Jun 2004 04:21:45 GMT\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Tue, 8 Jun 2004 14:21:44 +1000\r\nMessage-ID: &lt;EMEAICAGOPOIIFJNPBHJMEAFCLAA.dstrong@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nX-eGroups-Remote-IP: 192.35.59.253\r\nFrom: &quot;Donald Strong&quot; &lt;dstrong@...&gt;\r\nSubject: Re: [rest-discuss] Identifiers: higher precedence than other fields?\r\nX-Yahoo-Group-Post: member; u=174970602\r\nX-Yahoo-Profile: illyrian_au\r\n\r\n\nHi David,\n\nHere is my two cents.\nIf the following speel does not directly address the issues that concern you\nthen consider this as some ideas that I am airing using your problem as an\nexample.\n\nI think there are a couple of issues here and it may help to separate them.\n\n1. For any particular artist you want to retrieve:\n      - name\n      - eye color\n      - style\n      - web site\n      - everything (ie. all of the above)\n\n   This is a set of information that you wish to be able to address\n   individually or collectively.\n\n2. You want to run queries on the set of artists:\n      - artists with green eyes\n      - rap singers\n\n3. You want to have arbitraty lists of artists:\n      - artists I like\n      - artists currently on tour\n\nOK, so that&#39;s not what you want but it will do to demonstrate the following\npoints.\n\na) It doesn&#39;t matter how you reference your artists as the url is opaque.\n   Consequently you can keep it simple.\n        GET /artist/LisaSimpson\n\n   The URI could be /artist/12345678. The ONLY difference between this and\n   /artist/LisaSimpson is that the latter is easier for a human to remember.\n\n   This might return some xml like this:\n\n    &lt;artist&gt;\n        &lt;name      id=&quot;/artist/LisaSimpson/name&quot;&gt;Lisa Simpson&lt;/name&gt;\n        &lt;eye-color id=&quot;./eye-color&quot;&gt;Green&lt;/eye-color&gt;\n        &lt;style     id=&quot;LisaSimpson/style&quot;&gt;Blues&lt;/style&gt;\n        &lt;web-site  id=&quot;./web-site&quot;\nhref=&quot;http://www.thesimpsons.com/lisa-simpson&quot; /&gt;\n    &lt;/artist&gt;\n\n   I have mixed various forms of relative URI for demonstration purposes.\nWhich one\n   you use doesn&#39;t really matter but you would probably choose one and stick\nwith it.\n\nb)  Each property within the artist record has its own relative URI which\nyou can dereference.\n    This means that the User Agent does not manufacture URIs. They are\nalways provided by\n    the Origin Server.\n\n    The relative URI id=&quot;./eye-color&quot;&quot; resolves to:\n         GET /artist/LisaSimpson/eye-color\n\n    This might return the following xml:\n\n    &lt;eye-color artist=&quot;..&quot;&gt;Blue&lt;/eye-color&gt;\n\n    Note that it is possible to get back to the artist from here. I&#39;m not\nsuggesting that you\n    have to do that, just pointing out that it is possible.\n\nc)  The entry can be created using a HTTP POST to the artist uri.\n\n      POST /artist\n\n      &lt;artist&gt;\n          &lt;name&gt;Bart Simpson&lt;/name&gt;\n          &lt;eye-color&gt;Blue&lt;/eye-color&gt;\n          &lt;style&gt;Rap&lt;/style&gt;\n          &lt;web-site&gt;http://www.thesimpsons.com/bart-simpson&lt;/web-site&gt;\n      &lt;/artist&gt;\n\n    The same could be done using HTML form encoding.\n\n    The artist can be deleted like this.\n\n    DELETE /artist/BartSimpson\n\nd)  You can query on existing attributes of the artist.\n\n    GET /artist?eye-color=Blue\n\n    &lt;artistlist&gt;\n        &lt;artistref href=&quot;/artist/LisaSimpson&quot;&gt;Lisa Simpson&lt;/artistref&gt;\n        &lt;artistref href=&quot;/artist/Madonna&quot;&gt;Madonna&lt;/artistref&gt;\n    &lt;/artistlist&gt;\n\n    GET /artist?name=Lisa%20Simpson\n\n    &lt;artistlist&gt;\n        &lt;artistref href=&quot;/artist/LisaSimpson&quot;&gt;Lisa Simpson&lt;/artistref&gt;\n    &lt;/artistlist&gt;\n\n    These queries can be generated by an HTML Form. The query part\n    of a URL is not opaque to the User Agent. The client is expected\n    to provide query parameters for use in searches.\n\n    Note that the http path, before the query, is still opaque.\n    It could be /artist or /search or /cgi-bin/artistquery.cgi.\n    However, I believe that the prefered restful practice is to direct\n    the query to the collection URL, /artist in this case, and map this\n    to the search utility, typically by an entry in the htaccess file.\n\ne)  You can have arbitrary lists of artists.\n\n    GET /artistlists/my-favorites\n\n    &lt;artistlist title=&quot;My favorite artists&quot;&gt;\n        &lt;artistref id=&quot;./LisaSimpson&quot; href=&quot;/artist/LisaSimpson&quot;&gt;Lisa\nSimpson&lt;/artistref&gt;\n        &lt;artistref id=&quot;./BartSimpson&quot; href=&quot;/artist/BartSimpson&quot;&gt;Bart\nSimpson&lt;/artistref&gt;\n    &lt;/artistlist&gt;\n\n    Note that each item in the list has its own URI.\n\n    An entry in this list can be deleted like this:\n\n    DELETE /artistlists/my-favorites/BartSimpson\n\n    An entry can be added to this list like this:\n\n    POST /artistlists/my-favorites\n\n    &lt;artistref href&quot;/artist/BartSimpson&quot;&gt;Bart Simpson&lt;/artistref&gt;\n\n\nPoints of note\n--------------\n\n1.  URIs are always generated by the origin server.\n\n2.  The client only calculates a URI in two circumstances:\n     a) it converts relative URIs, generated by the origin server,\n        into absolute URIs\n     b) it may add query parameters to the end of a search\n        URI provided by the origin server.\n\n3.  All xml elements that can be addressed individually are provided\n    with a relative URI by the origin server.\n\nI think this approach is restful, but I have thought that before and been\nwrong.\nI have not seen it suggested before, however, I have not trolled the archive\nso I\ncannot be certain.\n\nAlthough I have not attempted it, it should be possible to process all the\nxml above into HTML using a suitable transform or style sheet.\n\nI hope you find this interesting and maybe even helpful.\nRegards\nDonald.\n\n&gt; -----Original Message-----\n&gt; From: David Orchard [mailto:orchard@...]\n&gt; Sent: Thursday, 3 June 2004 9:33 AM\n&gt; To: rest-discuss@yahoogroups.com\n&gt; Subject: [rest-discuss] Identifiers: higher precedence than other\n&gt; fields?\n&gt;\n&gt;\n&gt; I was further thinking about modeling of identifiers in xml\n&gt; versus URIs and the use of them in relation to other fields for\n&gt; queries.  It seems that any XML identifier is problematic to\n&gt; algorithmically map to a URI.\n&gt;\n&gt; My scenario: I have an Artist List structure containing Artist\n&gt; structures with a Name and an uri reference, ie\n&gt; &lt;ArtistList&gt;&lt;Artist&gt;&lt;Name&gt;Thievery\n&gt; Corp&lt;/Name&gt;&lt;URI&gt;http://www.eslmusic.com/artists/thievery.html&lt;/URI\n&gt; &gt;&lt;/Artist&gt;&lt;/ArtistList&gt;\n&gt;\n&gt; I want to support getting the entire Artist information, or just\n&gt; a single field.  We earlier said that making the Artist\n&gt; identifier hierarchical is a Good Thing.  This would look like:\n&gt;\n&gt; GET /ArtistList/Artist/id/xyz.\n&gt;\n&gt; But in my xml data structure, I specified that the Name structure\n&gt; uniquely identifies the band in my database.  I end up having 2\n&gt; primary keys: one if I use URIs, and another if I were to do an\n&gt; XML based query.  If I used the Name as the key, the URI looks more like\n&gt;\n&gt; ./Artist/Name/Thievery%20Corp\n&gt;\n&gt; If I then want to get the value of the URI field where the\n&gt; Artist=Thievery Corp, my query might look something like:\n&gt;\n&gt; GET /ArtistList/Artist/Name/Thievery%20Corp/URI\n&gt; or\n&gt; GET /ArtistList/Artist/Name/Thievery%20Corp?field=URI\n&gt;\n&gt; I prefer the former because the URI field is hierarchical within\n&gt; the Artist structure, it&#39;s just that the darned Name messes up\n&gt; the hierarchy.  I don&#39;t want to use client side identifiers, ie\n&gt; fragment ids such as Artist#ThieveryCorp or even\n&gt; Artist/Name/Thievery%20Corp#thievery%20CorpURI\n&gt;\n&gt; So I then thought in cases where the field being requested was at\n&gt; the same or lower level than the identifier, I could use the path\n&gt; component to specify the Artist, as in\n&gt;\n&gt; GET /ArtistList/Artist;Name=Thievery%20Corp/URI\n&gt;\n&gt; Which I&#39;d interpret as for the Artist who&#39;s name field is\n&gt; thievery corp, get the URI field.  I wonder if this is a good way\n&gt; of modelling the query?\n&gt;\n&gt; I think you should now have the rough gist of the way that I&#39;m\n&gt; thinking about binding xml structures to URIs, and this has led\n&gt; to some questions:\n&gt;\n&gt; 1. What is the best design, or even the trade-offs to be made\n&gt; across designs, when binding xml identifiers to URIs\n&gt;\n&gt; 2. How should requests for a &quot;secondary resource&quot; in a component\n&gt; be expressed when the secondary resource is at the same level in\n&gt; the xml hierarchy as the xml identifier.\n&gt;\n&gt; I wasn&#39;t quite sure which way Roy was saying is the best way\n&gt; given the different examples of\nhttp://example.com/quotes/${exchange}/${symbol} and  /Artist/id/12345678.\nThat is, whether the URI for the resource is parameterizable and thus\ngenerated by a client, or whether the identifier is opaque and the client\nhas to do a 2nd pass to get it.  It seems like there&#39;s an important point\nabout naming of resources, which is that maybe the xml way of identifying\nresources doesn&#39;t work well with the Web.\n\nThanks again for all your time,\nDave\n\n\n"}}