{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":192402827,"authorName":"Mike Dierken","from":"&quot;Mike Dierken&quot; &lt;dierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"1jOdXR-ZoDJIO_zOQbbbM8xwwmg4-LW4LmsyDSxhxDRNd8GsUkM_TNAmiprN7THhjFLLnt-b47jXjoLNhG7ISAfwcEEfG_bwXg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Message queues","postDate":"1181774572","msgId":9004,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdjZDhlMDkzMDcwNjEzMTU0Mm82NTU3NjM4MXU1YWZmMjNjOGI5ZDM4NzkxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDcwNjEzMTgxNDU2LkdBMjU2QGdyZXlob3VuZC5sb2NhbD4=","referencesHeader":"PDIwMDcwNjEyMjAwODIwLkdEOTgwN0BzbGlua3AuY29tPgkgPDg3OHhhbzUydTYuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPgkgPDg3ZDR6ejlha3AuZnNmQG1pY3JvamV0LmF0aC5jeD4gPDIwMDcwNjEzMTU0NzMxLkdBMjQ5NDdAYmx1ZXpvby5vcmc+CSA8ODc0cGxiOTZkci5mc2ZAbWljcm9qZXQuYXRoLmN4PgkgPDIwMDcwNjEzMTgxNDU2LkdBMjU2QGdyZXlob3VuZC5sb2NhbD4="},"prevInTopic":9000,"nextInTopic":9005,"prevInTime":9003,"nextInTime":9005,"topicId":8955,"numMessagesInTopic":70,"msgSnippet":"Actually, it turns out that repeated DELETE requests on the same URI should return the same status code each time. The status code reflects whether or not the","rawEmail":"Return-Path: &lt;dierken@...&gt;\r\nX-Sender: dierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 12792 invoked from network); 13 Jun 2007 22:43:00 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m50.grp.scd.yahoo.com with QMQP; 13 Jun 2007 22:43:00 -0000\r\nReceived: from unknown (HELO nz-out-0506.google.com) (64.233.162.235)\n  by mta11.grp.scd.yahoo.com with SMTP; 13 Jun 2007 22:42:57 -0000\r\nReceived: by nz-out-0506.google.com with SMTP id l1so320299nzf\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 13 Jun 2007 15:42:52 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=X6uWG6C5JX7z0PuevtFj49QLJZxgLeUC0bpPRVWaM5HmtwXR9o1iGM/qM00OwRrjqpYmRCeI4m8WZmZeG5abqlTHrbe8OMdpbKzEw2eyN8isZI0an6wvi0PKNsTcChBbp7CuctaLMpdYoW8dvOUTamkAV4xT9VH0YYuojnS0YnI=\r\nReceived: by 10.142.100.1 with SMTP id x1mr58837wfb.1181774572433;\n        Wed, 13 Jun 2007 15:42:52 -0700 (PDT)\r\nReceived: by 10.142.100.6 with HTTP; Wed, 13 Jun 2007 15:42:52 -0700 (PDT)\r\nMessage-ID: &lt;7cd8e0930706131542o65576381u5aff23c8b9d38791@...&gt;\r\nDate: Wed, 13 Jun 2007 15:42:52 -0700\r\nTo: &quot;Chris Burdess&quot; &lt;dog@...&gt;, rest-discuss@yahoogroups.com\r\nCc: &quot;Yohanes Santoso&quot; &lt;yahoo-rest-discuss@...&gt;\r\nIn-Reply-To: &lt;20070613181456.GA256@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;20070612200820.GD9807@...&gt;\n\t &lt;878xao52u6.fsf@...&gt;\n\t &lt;87d4zz9akp.fsf@...&gt; &lt;20070613154731.GA24947@...&gt;\n\t &lt;874plb96dr.fsf@...&gt;\n\t &lt;20070613181456.GA256@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mike Dierken&quot; &lt;dierken@...&gt;\r\nSubject: Re: [rest-discuss] Message queues\r\nX-Yahoo-Group-Post: member; u=192402827; y=_NmOjzJ8_WpETffBd9Dtno9WpSNy6jdH7nV2PAKaRSiMOa8\r\nX-Yahoo-Profile: mdierken\r\n\r\nActually, it turns out that repeated DELETE requests on the same URI\nshould return the same status code each time.\nThe status code reflects whether or not the resource is gone at\ncompletion of the request. In two subsequent requests this is true -\nit doesn&#39;t matter that it happened to be gone at the start of the\nsecond request...\n\nBut I think you can do a conditional DELETE request to be sure the\nclient is the only one processing that message. However, there is no\nUNDELETE so if the client fails to process the message, it either\nneeds to resubmit the complete message, or mark the message as needing\nprocessing again (perhaps posting the message URI to a retry-queue or\nsomething)\n\nSo, it comes down to getting a list of messages and attempting to\nreserve one (or more) for processing. If the reservation can also\nreturn the content of the message then that cuts out a request. If the\nreservation is accepted on the server, but doesn&#39;t make it to the\nclient then either the reservation should be idempotent (or specific\nto the client) or that message becomes an orphan and times out\neventually.\nIf the completion of processing needs an acknowledgement (a &#39;message\nremoval&#39;) then there&#39;s an additional request.\nThe reservation is a way to avoid collisions among multiple consumers.\nThere may be other ways to avoid collisions (each client chooses a\nhash for itself and only processing the set of messages that have the\nsame hash value) but I don&#39;t think this is as simple or guaranteed as\nindividual message reservation.\n\n\n\n\n\nOn 6/13/07, Chris Burdess &lt;dog@...&gt; wrote:\n&gt; Yohanes Santoso wrote:\n&gt; &gt; Chris Burdess &lt;dog@...&gt; writes:\n&gt; &gt; &gt; I&#39;m still unclear why the queue cannot be implemented using DELETE to\n&gt; &gt; &gt; pop the queue entry.\n&gt; &gt;\n&gt; &gt; Because that would have been too easy, right? :)\n&gt; &gt;\n&gt; &gt; DELETE has to be idempotent. If it returns you message A the first\n&gt; &gt; time, then if there is nothing else happening afterwards, another\n&gt; &gt; DELETE should return message A again too.\n&gt;\n&gt; No. Another DELETE will return 404 because the message has been deleted.\n&gt; Note, we don&#39;t DELETE the queue URL, we DELETE the message URL.\n&gt;\n&gt; Idempotence doesn&#39;t mean that the DELETE will always return the same status\n&gt; code and/or entity on successive requests. It means that the state of the\n&gt; server will be the same whether you have 1 DELETE or more than 1 DELETE\n&gt; of the same URL.\n&gt;\n&gt; &gt; So, how do you advance to\n&gt; &gt; the next message? You would have to do something so that the next\n&gt; &gt; DELETE returns a different message, but that means DELETE alone is not\n&gt; &gt; doing the popping.\n&gt;\n&gt; As I said the queue provides a list of the message URLs.\n&gt;\n&gt; &gt; Furthermore, even if DELETE does the popping, the network is not\n&gt; &gt; reliable. There will be cases where you need to retry that\n&gt; &gt; operation. How do you do that if the popping is not retryable?\n&gt;\n&gt; Fair point.\n&gt; --\n&gt; Chris Burdess\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}