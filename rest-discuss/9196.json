{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189954903,"authorName":"Koranteng Ofosu-Amaah","from":"Koranteng Ofosu-Amaah &lt;amaah@...&gt;","profile":"amaah1","replyTo":"SENDER","senderId":"oEBqSEcsEJyciZGTiJGDFpTlK7H9DCgkd_OlL44Bqt3_TYurIeryWJS0sSbfuijsK4HxJy9dBUp2GL8cjV70Kn-9T0VZEXRJsrzCqYR6dh4","spamInfo":{"isSpam":false,"reason":"4"},"subject":"On resource modeling, intermediaries and deployment","postDate":"1182579325","msgId":9196,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDQ2N0NCQTdELjIwNjA4MDdAY29tY2FzdC5uZXQ+"},"prevInTopic":0,"nextInTopic":9197,"prevInTime":9195,"nextInTime":9197,"topicId":9196,"numMessagesInTopic":8,"msgSnippet":"Lots of recent discussions have sent me down a path thinking again about the REST take on extensibility and also about how new services and protocols are","rawEmail":"Return-Path: &lt;amaah@...&gt;\r\nReceived: (qmail 62672 invoked from network); 24 Jun 2007 00:39:02 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m52.grp.scd.yahoo.com with QMQP; 24 Jun 2007 00:39:02 -0000\r\nReceived: from unknown (HELO n24a.bullet.sp1.yahoo.com) (209.131.38.234)\n  by mta13.grp.scd.yahoo.com with SMTP; 24 Jun 2007 00:39:02 -0000\r\nReceived: from [216.252.122.216] by n24.bullet.sp1.yahoo.com with NNFMP; 24 Jun 2007 00:39:02 -0000\r\nReceived: from [66.218.69.5] by t1.bullet.sp1.yahoo.com with NNFMP; 24 Jun 2007 00:39:02 -0000\r\nReceived: from [66.218.66.85] by t5.bullet.scd.yahoo.com with NNFMP; 24 Jun 2007 00:39:02 -0000\r\nX-Sender: amaah@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 62747 invoked from network); 23 Jun 2007 07:11:10 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m42.grp.scd.yahoo.com with QMQP; 23 Jun 2007 07:11:10 -0000\r\nReceived: from unknown (HELO alnrmhc11.comcast.net) (206.18.177.51)\n  by mta11.grp.scd.yahoo.com with SMTP; 23 Jun 2007 07:11:10 -0000\r\nReceived: from [127.0.0.1] (c-24-7-97-163.hsd1.ca.comcast.net[24.7.97.163])\n          by comcast.net (alnrmhc11) with ESMTP\n          id &lt;20070623061518b1100i18o0e&gt;; Sat, 23 Jun 2007 06:15:19 +0000\r\nMessage-ID: &lt;467CBA7D.2060807@...&gt;\r\nDate: Fri, 22 Jun 2007 23:15:25 -0700\r\nUser-Agent: Thunderbird 2.0.0.0 (Windows/20070326)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:4:8:0\r\nFrom: Koranteng Ofosu-Amaah &lt;amaah@...&gt;\r\nSubject: On resource modeling, intermediaries and deployment\r\nX-Yahoo-Group-Post: member; u=189954903; y=byAw0upyWJg3x4ppMSLmqMAZjS4l_OBgH0bo_9kuUVX2\r\nX-Yahoo-Profile: amaah1\r\nX-Yahoo-Marked-Not-Spam: \r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: mdierken &lt;dierken@...&gt; via web; 24 Jun 2007 00:38:59 -0000\r\n\r\nLots of recent discussions have sent me down a path thinking again about \nthe REST take on extensibility and also about how new services and \nprotocols are deployed on the web.\n\nI started by observing lots of talk about deployment, which puzzled me a \nlittle. A priori, I would think that deployment concerns shouldn&#39;t drive \nthe way you do your resource modeling when you&#39;re designing. The advice \nI gave the JSF folks was [1]:\n\nSeek ye first the resource model and its righteousness; and all these \nthings shall be added unto you.\n\nI truly believe that. Spending time upfront developing a good resource \nmodel and discussing it with as many people as possible will save your \nbacon down the line. Good things follow from a resource model that is \naligned with the underlying architecture\n\nI continue to see far too many people starting with performance or \npremature optimizations in mind based on such things as\n1. an aversion to the link\n2. an aversion to &quot;too many HTTP requests&quot; and performance implications \nthereof\n3. worrying about a so-called explosion in URI space.\n\nAll of these as if important resources don&#39;t need to be identified, and \nas if linking wasn&#39;t singularly cheap, as if you couldn&#39;t model new \nresources for batch operations, or indeed as if the web wasn&#39;t fairly \noptimized for caching. That was much of the point of HTTP 1.1 right?\n\nBut I digress... On to intermediaries and all those caches.\n\nReading Mark Nottingham&#39;s recent take on the state of proxy caching [2], \nI&#39;m now wondering if intermediaries are going to be a limiting factor on \nexperimentation on the web, much like NATs have been inhibiting the \nend-to-end internet.\n\nA couple of things that immediately struck me\n\n1. intermediaries handle the major HTTP verbs well (GET/POST/PUT/DELETE \nare well understood), even as people on this list continue to eternally \ndebate their semantics. However he also points out that not all of the \ncaching intermediaries are taking full advantage of the idempotency of \nPUT and DELETE for further optimizations. Therein could lie a \ncompetitive advantage for those with an itch to scratch.\n\n2. newer verbs such as those introduced by WebDAV are poorly supported, \nif at all.\n\nWhich leads me to extensibility...\n\nTraditionally the HTTP/REST take on extensibility has been\n\n1. new verbs (as WebDAV added to HTTP)\n2. additional HTTP headers (I see lots X-* custom headers in many \napplications, Google&#39;s custom cache control headers are a case in point)\n3. code-on-demand\n4. URIs - minting new uris (which can probably be coalesced with the \nnext point)\n5. hypermedia as the engine of application state\n\nThat last is the crucial one in defining the line on extensibility, \nnamely REST seems to place the onus on the evolving set of hypermedia \nstandards that are exchanged.\n\nHave we come to a point were extensibility in REST is now de-facto \nlimited to points 2 to 5? And has deployment experience on the web now \nlimited the degrees of freedom available to designers?\n\nI guess the question boils down to this: what about the verbs?\n\nWe tend to preach about uniform interfaces, things that have globally \nunderstood semantics, and indeed, we harp on the small set of verbs as \nthe selling point of REST. &quot;Manipulation of resources through \nrepresentations&quot; using a few methods. But is the Rule of Four the best \nwe can hope for? Is it that the social problem of standardizing \nexchanged hypermedia is a more tractable one that dealing with an \nexpanded vocabulary.\n\n&quot;Think twice. We don&#39;t need more verbs.&quot;\n\nAs I project onto the wonderful world of Waka, that next generation \npanacea [3], I wonder about how these deployment concerns will be \naddressed. Has the web now come, like the internet it was built on, to \nhave to face the analogous challenge of the NAT/firewall hobgoblin. Will \nany new service will have to pay fealty to our caching masters?\n\nI&#39;d like to tie this in to the discussion around Microsoft&#39;s WEB3S [4], \nits resource model, and the proposal of a new HTTP verb: UPDATE.\n\nThe thing that ultimately resonates is not the catchy headlines that \nappear to bait to some [4], nor indeed is it the discussion about the \nresource model, schemas, hierarchies and the like [5]. I would suggest \nthat the main sticking point, and perhaps the sharpest criticism, is the \nintroduction of a new verb.\n\nNow I like verbs myself, And while I wouldn&#39;t have modeled things the \nway Yaron and company have, I don&#39;t particularly see what&#39;s wrong with a \nnew verb. That shouldn&#39;t be the onerous burden. In practice, however, it \nlooks, per Mark&#39;s findings, like that will be the limiting factor for \nadoption of their new RESTful protocol.\n\nMight this be another argument to shy away from new HTTP methods and \ninstead seek to model resources with the well known and understood \nsemantics of our four horsemen of the web? Perhaps we&#39;ll find that the \ncollections and entries of Atompub will be good enough for a large \nsubset. I hope, and I wonder at the same time.\n\nThe success of the web was predicated on that beautiful thing the uri, \nand on the browser, the servers, the ecosystem of HTTP libraries, and \nthose unsung heroes: the caches. Architecting for middlemen is part of \nthe genius of REST. The Caesar&#39;s Tax Collector Principle is one I \nsubscribe to and I like taxes as much as the next guy, but have we \nreached a stage where the taxman is getting more than his due?\n\nCaches of various sorts are the main intermediaries in the wild, but \nthere should be room for lots of innovation in this space. The pipe and \nfilter model should allow more types of filters. What is it in the HTTP \nspec that makes writing intermediaries so difficult that in practice \nthey can&#39;t handle extension methods? Is it the backwards compatibility \nwith HTTP 1.0? Do we need errata or clarifications written for HTTP 1.1? \nDo we need to round up the proxies? Or is it simply inertia, that no one \never upgrades their caches once in place until the hardware dies? All \nthat is certain in life is death and caches?\n\nWhy can&#39;t I have more verbs? Is it that N-squared business all the way \ndown? [7]\n\nAnyway just a few idle thoughts.\n\nI can think of a few follow-ups and maybe I&#39;ll write them in due course:\n\n- On resource modeling [8]\n- REST and the Holy Grail of Extensibility\n- The spy thriller: The cache who loved me. or alternatively\n- The horror flick: Fear of the cache\n\n[1] http://koranteng.blogspot.com/2007/04/crawl-before-you-walk.html\n\n[2] http://www.mnot.net/blog/2007/06/20/proxy_caching\n\n[3] http://gbiv.com/protocols/waka/200211_fielding_apachecon.ppt\n\n[4] http://dev.live.com/livedata/web3s.htm\n\n[5] \nhttp://www.25hoursaday.com/weblog/CommentView.aspx?guid=83d2bb00-4ad6-4af2-8c2c-d4686c446737\n\n[6] http://www.goland.org/appanddare/\n\n[7] \nhttp://www.dehora.net/journal/2006/03/now_they_have_nsquared_problems.html\n\n[8] Alan Dean&#39;s comment about the fundamental difficulty of resource \nmodeling. http://tech.groups.yahoo.com/group/rest-discuss/message/8673\n\nIt is a social process and there is a bit of black magic if you aren&#39;t \nused to doing it. I&#39;ll suggest that discussing with as many people the \ndetails of your resource model is the first step. And like everything \npractice makes perfect\n\n[9] On resource modeling: Joe Gregorio always does the View Source \nbusiness; also Sam and Leonard&#39;s book has 2 nice chapters on resource \nmodeling although it wasn&#39;t called out using that term. That&#39;s my first \ncritique of the book. The other would be the read-only versus read-write \ndistinction. It&#39;s all resource modeling to me...\n\nCheers,\n-- \nKoranteng Ofosu-Amaah\n--\nKoranteng&#39;s Toli\nhttp://koranteng.blogspot.com/\n--\nObservers are worried\n\n"}}