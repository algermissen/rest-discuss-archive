{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"pL9IBkgQcHvxfOqoXfsA-96gEPR-0XIDi9cPKo_4_sGl4CFanfHGTmUirUTxxS0fGVi3xWbX51YeuAuPqFR0bsqX9v3kNUdeekTXeQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Restful Approaches to some Enterprise Integration Problems","postDate":"1278631130","msgId":15819,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlEODBEQzlGLUU3QTItNEFEOS04QjJGLTUxMDg1MjUzMjVBN0BnYml2LmNvbT4=","inReplyToHeader":"PEIxREJFRUE0LUUzOUUtNENDMi1BQjA0LTFGNjI2ODE5Mjg0REBtYWMuY29tPg==","referencesHeader":"PDE0NzgzNC4zNzA1LnFtQHdlYjExMDcxNC5tYWlsLmdxMS55YWhvby5jb20+IDwzNjk5Mzg4Ny02MUY0LTQ3NTgtOTVBQi1GRUE4QkUzN0IzQTZAZ2Jpdi5jb20+IDxCMURCRUVBNC1FMzlFLTRDQzItQUIwNC0xRjYyNjgxOTI4NERAbWFjLmNvbT4="},"prevInTopic":15818,"nextInTopic":0,"prevInTime":15818,"nextInTime":15820,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"... In this case, yes, though it is true for any client. ... which it gets from the media type definition, yes. ... A user (or configured robot) will","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1362 invoked from network); 8 Jul 2010 23:18:51 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m3.grp.sp2.yahoo.com with QMQP; 8 Jul 2010 23:18:51 -0000\r\nX-Received: from unknown (HELO spaceymail-a4.g.dreamhost.com) (208.113.200.5)\n  by mta3.grp.re1.yahoo.com with SMTP; 8 Jul 2010 23:18:51 -0000\r\nX-Received: from di-524.corp.day.com (wsip-98-189-13-228.oc.oc.cox.net [98.189.13.228])\n\tby spaceymail-a4.g.dreamhost.com (Postfix) with ESMTP id A5D5816151B;\n\tThu,  8 Jul 2010 16:18:50 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v1081)\r\nContent-Type: text/plain; charset=us-ascii\r\nIn-Reply-To: &lt;B1DBEEA4-E39E-4CC2-AB04-1F626819284D@...&gt;\r\nDate: Thu, 8 Jul 2010 16:18:50 -0700\r\nCc: Bryan Taylor &lt;bryan_w_taylor@...&gt;,\n\trest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;9D80DC9F-E7A2-4AD9-8B2F-5108525325A7@...&gt;\r\nReferences: &lt;147834.3705.qm@...&gt; &lt;36993887-61F4-4758-95AB-FEA8BE37B3A6@...&gt; &lt;B1DBEEA4-E39E-4CC2-AB04-1F626819284D@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] Restful Approaches to some Enterprise Integration Problems\r\nX-Yahoo-Group-Post: member; u=175757792; y=gJMaBAAquTeOxO8bZ7NxpQDrtwLF_l9O5D4W9Z6aN99ITLNh7vAt\r\nX-Yahoo-Profile: roy_fielding\r\n\r\nOn Jul 6, 2010, at 1:00 AM, Jan Algermissen wrote:\n\n&gt; Roy,\n&gt; \n&gt; On Jul 6, 2=\r\n010, at 3:03 AM, Roy T. Fielding wrote:\n&gt; \n&gt; &gt; Reliable upload of multiple =\r\nfiles can be\n&gt; &gt; performed using a single zip file, but the assumption bein=\r\ng made\n&gt; &gt; here is that the client has a shared understanding of what the\n&gt;=\r\n &gt; server is intending to do with those files. That&#39;s coupling.\n&gt; \n&gt; Trying=\r\n to test my understanding:\n&gt; \n&gt; By &#39;client&#39; you are refering to &#39;user agent=\r\n&#39;?\n\nIn this case, yes, though it is true for any client.\n\n&gt; My understandin=\r\ng is that the user agent has no shared understanding beyond how to construc=\r\nt the submission resquest upon the activation of a hypermedia control. (Web=\r\n browsers know how to create a POST request from a user&#39;s submission of a f=\r\norm)\n\nwhich it gets from the media type definition, yes.\n\n&gt; The user howeve=\r\nr does have an understanding (expectation) of what the server is intending =\r\nto do with those files. This expectation is the basis for choosing to activ=\r\nate the hypermedia control in the first place.\n\nA user (or configured robot=\r\n) will understand their own intent,\nyes, but not necessarily how the server=\r\n intends to accomplish that\nfunctionality.  A user is unlikely to know that=\r\n a given service\nneeds guaranteed delivery, since best-effort delivery is t=\r\nhe norm.\nOne would have to add that to the interaction requirements, which\n=\r\nmeans standardizing that kind of interaction through additional\ndefinitions=\r\n in the media type or link relations and sending\nenough information with th=\r\ne request to enable the recipient to\nverify the received message integrity,=\r\n and both sides need to\nknow that the request needs to be repeated automati=\r\ncally if\nthe checks fail.  And that still doesn&#39;t tell us what to put in\nth=\r\ne representations being sent.  That&#39;s why this kind of\nfunctionality is mor=\r\ne likely found in javascript or a\nbrowser extension.\n\nThere is also no need=\r\n to limit yourself to one interface.\nLook at all the interfaces on Apache A=\r\nctiveMQ, for example\n\n  http://activemq.apache.org/protocols.html\n\nThe so-c=\r\nalled REST protocol calls for POST to a given\nqueue URI, which I&#39;ll just as=\r\nsume isn&#39;t guaranteed delivery.\nGuaranteed delivery could probably be added=\r\n with a simple\nmessage integrity check if the messages are unique, but I\nwo=\r\nuld prefer a more explicit pattern.\n\nFor example, we might define a message=\r\n sink with a URI such\nthat each client knows (by definition) that it should=\r\n append\nits own client-id (perhaps set by cookie) and a message counter\nto =\r\nthe request URI, as in\n\n   PUT URI/client-id/count HTTP/1.1\n   MIC: a162b17=\r\nf\n\nand then the client can send as many messages as it wants,\nprovided the =\r\ncount is incremented for each new message, and\nthe server must verify (and =\r\nstore) the MIC before responding\nwith a success code.  Each message can the=\r\nrefore be logged,\nverified, etc., just like a message queue with guarantees=\r\n.\n\nWe could try to standardize something like what I describe above,\nbut it=\r\n would require multiple independent implementations and a\nlot more free tim=\r\ne than it probably deserves.  In any case, it also\nbegs the question of why=\r\n would we want to do this using HTTP\n[aside from just avoiding firewall blo=\r\ncks, which is not a\nrational rationale].\n\nThe fact is that most people writ=\r\ne message queues for systems\nthat are more operational than informational -=\r\n- i.e., they are\ndoing something, usually at a high rate of speed, that isn=\r\n&#39;t\nintended to be viewed as an information service, except in\nthe form of a=\r\nn archive or summary of past events.  Would a\nmore RESTful message queue ha=\r\nve significant architectural\nproperties that outweigh the trade-off on perf=\r\normance, or\nwould it be better to use a tightly coupled eventing protocol\na=\r\nnd merely provide the resulting archive and summaries via\nnormal RESTful in=\r\nteraction?  That kind of question needs to\nbe answered by an architect fami=\r\nliar with all of the design\ncontraints for the proposed system.\n\n....Roy\n"}}