{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":205952623,"authorName":"luke82rm","from":"&quot;luke82rm&quot; &lt;luke82rm@...&gt;","profile":"luke82rm","replyTo":"SENDER","senderId":"TsrdbdQU8TIYSi4RXlvpyGryy3nqe2DD3-P9cE4I_IBXwvWVZRWZf54JzUmrF_AJBSpM-nckpVHlWPEd5WVnw4xV9kHiFw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: How to build a RESTful distibuted-computational application","postDate":"1100885581","msgId":4691,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNubGFvZCt0Y2lxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQxOUUyODk1LjdGMTJERDc5QHRvcGljbWFwcGluZy5jb20+"},"prevInTopic":4690,"nextInTopic":0,"prevInTime":4690,"nextInTime":4692,"topicId":4688,"numMessagesInTopic":3,"msgSnippet":"... both ... to ... isn t ... maybe storage) ... needed for each ... using REST, ... explain. My topic is to explain differencies between RESTful, XML-RPC, and","rawEmail":"Return-Path: &lt;luke82rm@...&gt;\r\nX-Sender: luke82rm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 96380 invoked from network); 19 Nov 2004 17:33:06 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m23.grp.scd.yahoo.com with QMQP; 19 Nov 2004 17:33:06 -0000\r\nReceived: from unknown (HELO n17a.bulk.scd.yahoo.com) (66.94.237.46)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 Nov 2004 17:33:06 -0000\r\nReceived: from [66.218.66.59] by n17.bulk.scd.yahoo.com with NNFMP; 19 Nov 2004 17:33:03 -0000\r\nReceived: from [66.218.67.128] by mailer8.bulk.scd.yahoo.com with NNFMP; 19 Nov 2004 17:33:03 -0000\r\nDate: Fri, 19 Nov 2004 17:33:01 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;cnlaod+tciq@...&gt;\r\nIn-Reply-To: &lt;419E2895.7F12DD79@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2403\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.46\r\nFrom: &quot;luke82rm&quot; &lt;luke82rm@...&gt;\r\nSubject: Re: How to build a RESTful distibuted-computational application\r\nX-Yahoo-Group-Post: member; u=205952623\r\nX-Yahoo-Profile: luke82rm\r\n\r\n\n--- In rest-discuss@yahoogroups.com, Jan Algermissen \n&gt; I am not sure that there are any conceptual differences at all. In\nboth\n&gt; cases you have a single application (the calculation) and you need\nto\n&gt; run all portions of the parallelized algorithm or your computation\nisn&#39;t\n&gt; done. The only issue about distributing a calculation is speed (or\nmaybe storage)\n&gt; and in both cases your calculation will just depend on the time\nneeded for each\n&gt; portion to finish. I have no idea what problem would be solved by\nusing REST,\n&gt; therefore I have no idea what the comparision would reveal.\n&gt; \n&gt; But maybe I am misunderstanding your point. If so, please try to\nexplain.\n\nMy topic is to explain differencies between RESTful, XML-RPC, and PVM\napproach to a parallelized algorithm. As you pointed out, there aren&#39;t\nmuch conceptual differences. What I aspect to do is compare this three\ndifferent approaches in term of:\n\n- Portability, scalability, reliability (REST (a network-based\nlibrary) vs. XML-RPC (a API-based library));\n- Security (SOAP vs. REST);\n- Kinds of coordination between client-component of my application, in\nterms of methods and velocity (PVM allows inter-process communication\nand a variety of Synchronization methods, the others approaches needs\nHTTP message passing)\n- Anything else?\n \n&gt; You could either write a server for the HTTP subset you need\nyourself\n&gt; or write an Apache module in C.\n&gt; \n&gt; I am not sure, but maybe libwww includes a server library also.\n\nYes, libwww includes a server library, but it is very complicated to\nuse, and it adds many features that I don&#39;t need: I&#39;m just searching\nfor a C library that allows me to build a minimal HTTP server and,\nmoreover, to bind (resource requested + HTTP method (GET, POST,\nDELETE, etc.), method to handle that).\nWrite an Apache module in C is something that overcome my topic too: I\njust need a minimal HTTP server, and Apache is not that case. :-)\n\n&gt; Why don&#39;t you compare WS-* vs. REST Web Services, with a special\n&gt; reserach on scalability and performance (&#39;Why does REST beat RPC\nwhen it\n&gt; comes to large scale?&#39;) or on network effect issues (e.g. Why RPC\nstyle\n&gt; cannot take advantage) or on why document based data integration is\n&gt; easier than API based integration.\n&gt; \n&gt; Dunno if that&#39;s within you subject at all, but maybe it gives you\n&gt; some ideas.\n\nThank you for all your suggestions, I hope I&#39;ll hear you again. :-)\n\nLuke.\n\n\n\n\n"}}