{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":364579677,"authorName":"Mike Kelly","from":"Mike Kelly &lt;mike@...&gt;","profile":"pleb1985","replyTo":"SENDER","senderId":"HLC7vCs3POFtF1SFvvJWcthJockXzsqRRXlR7PkoY-rfhpGamVpBw85yU18GQYiVfMzfU-D6TSHRGkMvWviQfpLcLErt8A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: HATEOAS: JSON-based examples?","postDate":"1239872877","msgId":12438,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5RTZGNTZELjIwOTAyMDJAbXlrYW5qby5jby51az4=","inReplyToHeader":"PDI4ZTI1NzExMDkwNDE1MjAwOXk3MjIxODZkMHc4ZmViODkyMzg2ZTc2ZmI2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIwMDkwNDEyMDIzNi4wNzU1NS5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ5RTRBN0M1LjMwNDA0MDVAcmVkaGF0LmNvbT4gPDIwMDkwNDE0MTgwMy40MDgxNC5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ1QzU0QzE0LTgzQjgtNERBMC1BRENCLUEwQUVFNzYyNjYwOEBzdWJidS5vcmc+CSA8NTVjNjBlMzcwOTA0MTQxMDMwdDE1OTdhYjFmdWIyMzllNzVhMjc0MjE4ZDJAbWFpbC5nbWFpbC5jb20+CSA8NDlFNENDMUIuNDA2MDAwM0ByZWRoYXQuY29tPiA8NDlFNEUwNTAuODAwMDMwMEBteWthbmpvLmNvLnVrPgkgPDQ5RTY3MTg2LjQwNzA3MDFAcmVkaGF0LmNvbT4JIDxmOGIzOWFjZTA5MDQxNTE3MzhxMTgxNjc3ZTd4ZWEwNjhhY2FhMTc5M2Y1MkBtYWlsLmdtYWlsLmNvbT4gPDI4ZTI1NzExMDkwNDE1MjAwOXk3MjIxODZkMHc4ZmViODkyMzg2ZTc2ZmI2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12437,"nextInTopic":12439,"prevInTime":12437,"nextInTime":12439,"topicId":12399,"numMessagesInTopic":66,"msgSnippet":"... If it was actually preferable to put all content negotiation into the one content-type header, then why would HTTP bother to provide an Accept-Language","rawEmail":"Return-Path: &lt;mike@...&gt;\r\nX-Sender: mike@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4767 invoked from network); 16 Apr 2009 09:08:09 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m7.grp.re1.yahoo.com with QMQP; 16 Apr 2009 09:08:09 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.171)\n  by mta1.grp.re1.yahoo.com with SMTP; 16 Apr 2009 09:08:09 -0000\r\nX-Received: from [192.168.255.126] (nsbbjx215_122.xband.newtelsolutions.net [213.133.215.122])\n\tby mrelayeu.kundenserver.de (node=mreu1) with ESMTP (Nemesis)\n\tid 0MKv1o-1LuNZH3fk1-000jEE; Thu, 16 Apr 2009 11:07:36 +0200\r\nMessage-ID: &lt;49E6F56D.2090202@...&gt;\r\nDate: Thu, 16 Apr 2009 10:07:57 +0100\r\nUser-Agent: Thunderbird 2.0.0.21 (Windows/20090302)\r\nMIME-Version: 1.0\r\nTo: Peter Williams &lt;pezra@...&gt;\r\nCc: craigmcc@..., rest-discuss@yahoogroups.com\r\nReferences: &lt;200904120236.07555.michael@...&gt;\t &lt;49E4A7C5.3040405@...&gt; &lt;200904141803.40814.michael@...&gt;\t &lt;45C54C14-83B8-4DA0-ADCB-A0AEE7626608@...&gt;\t &lt;55c60e370904141030t1597ab1fub239e75a274218d2@...&gt;\t &lt;49E4CC1B.4060003@...&gt; &lt;49E4E050.8000300@...&gt;\t &lt;49E67186.4070701@...&gt;\t &lt;f8b39ace0904151738q181677e7xea068acaa1793f52@...&gt; &lt;28e257110904152009y722186d0w8feb892386e76fb6@...&gt;\r\nIn-Reply-To: &lt;28e257110904152009y722186d0w8feb892386e76fb6@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: V01U2FsdGVkX1+R8COAyXIcZSUgPfOuwZJLmQQd8xmq5iZK7mT\n F2sbmKgCow2j+YqWEoFH6P0Tbvzp4Bi0bdR4ghbDupskEq4axv\n jr00cBHAnc5lApbKQlERcPW0Abj3y5Q\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mike Kelly &lt;mike@...&gt;\r\nSubject: Re: [rest-discuss] Re: HATEOAS: JSON-based examples?\r\nX-Yahoo-Group-Post: member; u=364579677; y=WJwkiF2Ym4oFJt3USSHMQxxH14-8sXicUNq687b2_pDHsxk\r\nX-Yahoo-Profile: pleb1985\r\n\r\nPeter Williams wrote:\n&gt; On Wed, Apr 15, 2009 at 6:38 PM, Craig McClanahan &lt;craigmcc@...&gt; wrote:\n&gt;   \n&gt;&gt; I&#39;ve had a little bit of experience in this area (we have not made\n&gt;&gt; dramatic changes, but we have modified some things), and so far the\n&gt;&gt; following set of rules has avoided the need to do any kind of\n&gt;&gt; versioning in my representations so far, but also avoided breaking old\n&gt;&gt; clients:\n&gt;&gt;\n&gt;&gt; * Clients MUST ignore fields in the representation that they don&#39;t\n&gt;&gt; understand\n&gt;&gt; (i.e. that are not defined in whatever version of the spec the client is\n&gt;&gt; programmed to expect).\n&gt;&gt;\n&gt;&gt; * Clients SHOULD indicate the version of the API specification they are\n&gt;&gt; programmed to expect. Because this has to happen on GET requests\n&gt;&gt; too, there&#39;s no representation to include it in, so we use a custom HTTP\n&gt;&gt; header -- sort of analogous to a User-Agent header that webapps\n&gt;&gt; can use to customize their responses. An alternative might be to use\n&gt;&gt; a request parameter, or bake the version number into the service URI\n&gt;&gt; or something like that.\n&gt;&gt;\n&gt;&gt; * Servers MUST respect the client&#39;s indication of version preference\n&gt;&gt; if it matters. Given the rules above, it&#39;s OK to include additional fields\n&gt;&gt; added in some later version -- the client should just ignore them --\n&gt;&gt; but it&#39;s not OK to remove a field that was required to be present\n&gt;&gt; in the version of the spec that the client specifies.\n&gt;&gt;\n&gt;&gt; * Servers MAY assume that a client not describing their version preference\n&gt;&gt; should get the latest and greatest version.\n&gt;&gt;\n&gt;&gt; * If the representation sent by a server includes links (per our HATEOAS\n&gt;&gt; threads), the server MAY send different URIs depending on the version,\n&gt;&gt; or MAY handle multiple versions at the same URI ... whatever it wants.\n&gt;&gt;     \n&gt;\n&gt; The above describes a great approach to versioning an API.  Clients\n&gt; must ignore parts of representations they don&#39;t understand.  New\n&gt; application semantics are added to existing representations in\n&gt; backwards compatible ways.  Clients have a way to tell the server they\n&gt; require it support a particular set of semantics.\n&gt;\n&gt; However, using a non-standard mechanism, like a custom HTTP head, to\n&gt; specify the version is deeply suboptimal.  The same behavior can be\n&gt; more easily and transparently provided by using media types .  The\n&gt; required set of semantics (backwards compatible version) can specified\n&gt; as a media type parameter (e.g.\n&gt; `application/vnd.myapp+json;level=42`).  And should you ever run into\n&gt; the a situation where a non-compatible change is absolutely required\n&gt; you can switch to a different media type.\n&gt;   \n\nIf it was actually preferable to put all content negotiation into the \none content-type header, then why would HTTP bother to provide an \nAccept-Language header?\n\nIt seems you get less self-descriptive messages by treating versioning \nas an accept-extension, and doing it that way also makes \nupdating/upgrading clients and server-side message routing more complicated.\n\nVersioning within representations is sub-optimal and costly because your \nserver will provide useless extra data to old clients - this cost could \nbe avoided with adequate conneg. As I mentioned before, clients that \nwished to receive evolving representations can simply omit the version \nheader altogether.\n\nRegards,\nMike\n\n"}}