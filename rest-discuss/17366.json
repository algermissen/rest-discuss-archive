{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":455444475,"authorName":"Jo St√∏rset","from":"=?iso-8859-1?Q?Jo_St=F8rset?= &lt;storset@...&gt;","profile":"jostorset","replyTo":"SENDER","senderId":"t61FNRsszGT9t797HzKywwar7QGghB41CCOuNzYF7vIcftd2NPhaVvpCZyw__mh40X4MNJUnFZfSHRroLQVYqxUjjKm1uHkBjZof-7SUtIKy39du6CXiDg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Leveraging &quot;legacy&quot; XML standards in restful web APIs?","postDate":"1298371075","msgId":17366,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PEY4OEI3NjA4LTM2NzctNEI5QS05QkY1LTZFQTMwQkI4NjEwNEBnbWFpbC5jb20+"},"prevInTopic":0,"nextInTopic":17376,"prevInTime":17365,"nextInTime":17367,"topicId":17366,"numMessagesInTopic":2,"msgSnippet":"Hi, I seem to keep finding myself in a position where I find it difficult to choose the right level of restful-ness and granularity, and how to represent","rawEmail":"Return-Path: &lt;storset@...&gt;\r\nReceived: (qmail 39095 invoked from network); 22 Feb 2011 14:32:46 -0000\r\nReceived: from unknown (66.196.94.107)\n  by m13.grp.re1.yahoo.com with QMQP; 22 Feb 2011 14:32:46 -0000\r\nReceived: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta3.grp.re1.yahoo.com with SMTP; 22 Feb 2011 14:32:45 -0000\r\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoogroups.com; s=lima; t=1298385165; bh=yGjmxrgda4dlPTpv2+S/uIDIkxCmmOntVDfqLgmogI4=; h=Received:Received:X-Sender:X-Apparently-To:X-Received:X-Received:X-Received:X-Received:X-Received:X-Received:Content-Type:Content-Transfer-Encoding:Date:Message-Id:To:Mime-Version:X-Mailer:X-Originating-IP:From:Subject:X-Yahoo-Group-Post:X-Yahoo-Profile:X-YGroups-SubInfo:Sender:X-Yahoo-Newman-Property:X-eGroups-Approved-By:X-eGroups-Auth; b=Ag5fMXgpC0h+PYSL3oRr1IFZRVsRr8EOk07xpPyihusSuf3UjJCH8BC8kN/D50/8PMCzkJav5YYWK43sM5/+ioX5S4/dunIO/mOo1tGJjuyWmnhZkkB8hBIVX8aejMBt\r\nReceived: from [69.147.65.174] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 22 Feb 2011 14:32:45 -0000\r\nReceived: from [98.137.34.184] by t12.bullet.mail.sp1.yahoo.com with NNFMP; 22 Feb 2011 14:32:45 -0000\r\nX-Sender: storset@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 71204 invoked from network); 22 Feb 2011 10:38:21 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m17.grp.re1.yahoo.com with QMQP; 22 Feb 2011 10:38:21 -0000\r\nX-Received: from unknown (HELO mail-iw0-f177.google.com) (209.85.214.177)\n  by mta3.grp.re1.yahoo.com with SMTP; 22 Feb 2011 10:38:21 -0000\r\nX-Received: by mail-iw0-f177.google.com with SMTP id 36so596679iwn.36\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 22 Feb 2011 02:38:21 -0800 (PST)\r\nX-Received: by 10.42.179.132 with SMTP id bq4mr3310444icb.199.1298371101345;\n        Tue, 22 Feb 2011 02:38:21 -0800 (PST)\r\nX-Received: from [192.168.0.10] ([116.68.91.171])\n        by mx.google.com with ESMTPS id d21sm6129000ibg.21.2011.02.22.02.38.18\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Tue, 22 Feb 2011 02:38:20 -0800 (PST)\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: quoted-printable\r\nDate: Tue, 22 Feb 2011 16:07:55 +0530\r\nMessage-Id: &lt;F88B7608-3677-4B9A-9BF5-6EA30BB86104@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nMime-Version: 1.0 (Apple Message framework v1082)\r\nX-Mailer: Apple Mail (2.1082)\r\nFrom: =?iso-8859-1?Q?Jo_St=F8rset?= &lt;storset@...&gt;\r\nSubject: Leveraging &quot;legacy&quot; XML standards in restful web APIs?\r\nX-Yahoo-Group-Post: member; u=455444475; y=mYwLd9SIdkpQlxu76WTo6RbxhDm1ostS384rDxG0DEmRwjOb\r\nX-Yahoo-Profile: jostorset\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 22 Feb 2011 14:32:44 -0000\r\n\r\nHi,\n\nI seem to keep finding myself in a position where I find it difficult =\r\nto choose the &quot;right&quot; level of restful-ness and granularity, and how to rep=\r\nresent references/links, in web api cases where there is a batch oriented &quot;=\r\nlegacy&quot; already in place. \n\nSince I haven&#39;t seen it discussed much in REST =\r\ncircles, I thought I&#39;d see if I could generate some discussion/feedback on =\r\nthis type of scenario. At least I find it a challenge, so maybe others do a=\r\ns well, and have experiences they could share?\n\nThe context is one where th=\r\nere are existing and fairly well-structured and internally consistent XML s=\r\ntandards for representing the domain and typically batch oriented/semi-manu=\r\nal processes that push chunks of large xml stuctures between systems. Lever=\r\naging this existing format and the technical infrastructure and processes s=\r\nurrounding it when implementing a more granular and flexible web api seem t=\r\no be a necessity and a no-brainer. Especially as the batch processes are no=\r\nt going to go away any time soon, not having maintain two completely separa=\r\nte &quot;api&quot; infrastructures seem to be important.\n\nBut this approach poses som=\r\ne challenges. More specifically I find it being difficult to 1) choose the =\r\nlevel of restful-ness and granularity to aim for, and 2) if I go for what I=\r\n find the most &quot;logical&quot; and &quot;serendipitous&quot; fine granularity, I always see=\r\nm to want to represent references or links differently in the two scenarios=\r\n.\n\nTo move in some kind of resource orientation for major concepts in the d=\r\nomain is easy, these concepts are already defined in the xml and generally =\r\nare easy to define. Reusing the xml fragments that represent a resource, wo=\r\nuld maybe simplified look something like (never mind the details :)\n\n...\n&lt;d=\r\nataSets&gt;\n  &lt;dataSet id=3D&quot;1&quot;&gt;\n    &lt;... lots of info... /&gt;\n    &lt;dataElements=\r\n&gt;\n      &lt;dataElementRef id=3D&quot;1&quot;/&gt;\n    &lt;/dataElements&gt;\n  &lt;/dataSet&gt;\n&lt;/dataS=\r\nets&gt;\n&lt;dataElements&gt;\n  &lt;dataElement id=3D&quot;1&quot;&gt;\n    &lt;... lots of info... /&gt;\n  =\r\n&lt;/dataElement&gt;\n&lt;/dataElements&gt;\n...\n\nWhat I would immediately want to do in =\r\nthe api context would be something like having separate resources for dataS=\r\net and dataElement and give represent them with fragments like this:\n\n&lt;data=\r\nSet id=3D&quot;1&quot; href=3D&quot;url&quot; &gt;\n  &lt;... lots of info... /&gt;\n  &lt;dataElements&gt;\n    =\r\n&lt;dataElementRef id=3D&quot;1&quot; href=3D&quot;url&quot; name=3D&quot;Descriptive name suitable for=\r\n link naming&quot; /&gt;\n  &lt;/dataElements&gt;\n&lt;/dataSet&gt;\n\n&lt;dataElement id=3D&quot;1&quot; href=\r\n=3D&quot;url&quot;&gt;\n  &lt;... lots of info... /&gt;\n  &lt;dataSets&gt;\n    &lt;dataSet id=3D&quot;1&quot; href=\r\n=3D&quot;url&quot; name=3D&quot;Descriptive name suitable for link naming&quot; /&gt;\n  &lt;/dataSets=\r\n&gt;\n&lt;/dataElement&gt;\n\nSo basically I would want to \n- use links as references\n-=\r\n it seems to be a good idea to include a minimal description of the resourc=\r\ne for more human readable contexts (think javascript with a json-variant of=\r\n this xml)\n- add two way referencing\n\nDoes this make sense? \n\nI am thinking=\r\n this makes sense, and I should be able to append the schema with optional =\r\ndefinitions of the added structure. It would break an existing parser valid=\r\nating against the old schema, but that should be possible to solve using so=\r\nme clever switching in the internal implementation that could drop these ex=\r\ntra elements (and namespace declaration) when talking to legacy infrastruct=\r\nure.\n\nBut, the xml schema I would come up with would never the less not be =\r\nthe same as the common standard that is shared knowledge. For unknowing cli=\r\nents I could try to add mechanisms for &quot;negotiating down&quot; to the  standard =\r\nxml. But it could be difficult to know this for &quot;unknown&quot;/loosely coupled p=\r\neer systems such that in the end the &quot;standard&quot; xml will end up being used =\r\nmost of the time. It would seem that the potential &quot;serendipitous&quot; benefits=\r\n of adding hypermedia and two-way linking would quickly end up being a rela=\r\ntively high cost with little benefit. Would it be better to just use the xm=\r\nl as defined in the standard and not aim for as much restfulness?\n\nIs it to=\r\no granular?\n\nI know this is really impossible to evaluate generally, but si=\r\nnce all existing infrastructure are working on larger chunks of xml, is the=\r\nre even a point in splitting the domain into the &quot;logical&quot; resources in the=\r\n web api. Might I just as well just move the existing &quot;import/export&quot; comma=\r\nnds to the web as course grained rpc style methods and save myself the trou=\r\nble of trying to combine a restful web api with legacy infrastructure that =\r\nI won&#39;t get rid of anyway?\n\nOr should I in the end just avoid trying to mer=\r\nge the two &quot;apis&quot; and let them work on separate optimized models, taking th=\r\ne double cost? \n\nI guess what I am asking, are there patterns to this kind =\r\nof challenge that can shed some light on how to approach it? It would seem =\r\nto be a kind of challenge others should have met as well :)\n\nJo\n\n"}}