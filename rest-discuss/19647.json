{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":323709912,"authorName":"Erik Wilde","from":"Erik Wilde &lt;dret@...&gt;","profile":"drethoo","replyTo":"SENDER","senderId":"9b4mB3VplSrNHIrddS5z6LL0b5OLqImsKGCK5UEvj9S7cG0YlFGPSINM8uhVrahBts35ogmsYVlcVQBcskGU5EkRafW8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400375713","msgId":19647,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzNzgwOUExLjEwNjAzMDdAYmVya2VsZXkuZWR1Pg==","inReplyToHeader":"PDQzNzY3MjExLnRndU1ianBydWlAZnVjaHNpYT4=","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPiA8NTM3N0MxODguNjAzMDcwMkBiZXJrZWxleS5lZHU+IDw0Mzc2NzIxMS50Z3VNYmpwcnVpQGZ1Y2hzaWE+"},"prevInTopic":19646,"nextInTopic":19648,"prevInTime":19646,"nextInTime":19648,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"hello michael. On 2014-05-17, 17:09, Michael Schuerig michael.lists@schuerig.de ... wow. this seems to happily combine apples and oranges as well as bacon, ","rawEmail":"Return-Path: &lt;dret@...&gt;\r\nX-Sender: dret@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11471 invoked by uid 102); 18 May 2014 01:12:25 -0000\r\nX-Received: from unknown (HELO mtaq2.grp.bf1.yahoo.com) (10.193.84.33)\n  by m2.grp.bf1.yahoo.com with SMTP; 18 May 2014 01:12:25 -0000\r\nX-Received: (qmail 15521 invoked from network); 18 May 2014 01:12:25 -0000\r\nX-Received: from unknown (HELO cm05fe.IST.Berkeley.EDU) (169.229.218.146)\n  by mtaq2.grp.bf1.yahoo.com with SMTP; 18 May 2014 01:12:25 -0000\r\nX-Received: from [24.130.84.248] (helo=dretair11.local)\n\tby cm05fe.ist.berkeley.edu with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.76)\n\t(auth plain:dret@...)\n\t(envelope-from &lt;dret@...&gt;)\n\tid 1WlpeI-0004rn-Ij; Sat, 17 May 2014 18:12:24 -0700\r\nMessage-ID: &lt;537809A1.1060307@...&gt;\r\nDate: Sat, 17 May 2014 18:15:13 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Thunderbird/24.5.0\r\nMIME-Version: 1.0\r\nTo: Michael Schuerig &lt;michael.lists@...&gt;, \n rest-discuss@yahoogroups.com\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt; &lt;5377C188.6030702@...&gt; &lt;43767211.tguMbjprui@fuchsia&gt;\r\nIn-Reply-To: &lt;43767211.tguMbjprui@fuchsia&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=323709912; y=_xyVLhbOIN4q0Oab1BYZ-tftaOAqEIAtMWqmJU15tvEu2g\r\nX-Yahoo-Profile: drethoo\r\nFrom: Erik Wilde &lt;dret@...&gt;\r\n\r\nhello michael.\n\nOn 2014-05-17, 17:09, Michael Schuerig michael.lists@... \n[rest-discuss] wrote:\n&gt;&gt;&gt; The &quot;reactive&quot; buzzword has been conspicuously absent from this\n&gt;&gt;&gt; list.\n&gt;&gt;&gt; I&#39;ll try to fill this much needed gap.\n&gt;&gt; haven&#39;t really seen it buzzing that much, but if you had to give it at\n&gt;&gt; least a little substance, how would you explain what it means? just\n&gt;&gt; something that&#39;s driven by events rather than clients?\n&gt; In the context of RESTful APIs, the interesting (tricky) part appears to\n&gt; be is how to make things event-driven. I take this to imply that\n&gt; communication over a channel is in general one-way. Clients send events\n&gt; to servers (without a reply payload), clients receive events from\n&gt; servers.\n&gt; For the long story: http://www.reactivemanifesto.org/\n\nwow. this seems to happily combine apples and oranges as well as bacon, \nwhiskey, and cup cakes. but it sure sounds like a good thing to have in \nthe end.\n\n&gt;&gt; sounds like websockets (maybe not technically, but as the general\n&gt;&gt; idea). to me, REST is on a different level than this plumbing. in the\n&gt;&gt; same way as you can do REST and notREST over HTTP, the same probably\n&gt;&gt; applies to any of the alternative interaction styles. as you point\n&gt;&gt; out, REST has more (and more abstract) constraints than just the\n&gt;&gt; protocol that&#39;s used.\n&gt; I&#39;m not convinced that REST is on a different level. The reason is that\n&gt; I think that a persistent connection between client and server counts as\n&gt; state that has to be managed by the server for each session. I&#39;m not\n&gt; saying that this is bad by itself, it just seems to me not to be in\n&gt; keeping with REST tenets. Which, in turn, wouldn&#39;t necessarily be a\n&gt; problem, either. I&#39;m not interested in passing judgment, but rather in\n&gt; understanding how the commandments of REST and reactive interact.\n\ni guess i am having trouble with looking at a connection as a resource \nwith state (unless you talk about network monitoring and management \nscenarios, which are an entirely different beast). to me, what changes \nmay be a sensor&#39;s state, and the question is how to get that information \nto consumers. whether you do it by pulling or pushing really does not \nchange the fact that after doing one or the other, the changed resource \nstate will be available on the consumer side. it&#39;s just that pulling it \nhas vastly different characteristics in terms of scaling, which is why \nthe web scales so nicely.\n\nbut it is entirely possible to envisage that HTTP pull is like UPS \nground and free, whereas there may be UPS overnight which costs a bit \nbut is faster. if you do that, you get to specify your identifier, and \nthen (and this is why i call this &quot;reverse REST&quot;) you become the \nresource to be pushed to, i.e. your resource needs to be known by the \nevent source. there are tons of PubSub approaches out there, only that \ncoming up with one that works robustly and in a scalable at web scale so \nfar hasn&#39;t worked. the main reason is that for pull, sources don&#39;t need \nto know the consumers, whereas for push that state needs to be \nmaintained, which is expensive.\n\nif you&#39;re interested to read a bit more, here&#39;s a starting point:\n\nhttp://dret.net/netdret/publications#pau11b\n\n&gt;&gt; not sure i agree that polling or long polling are the only (or best)\n&gt;&gt; alternatives. there&#39;s quite of stuff to be done in the area that i\n&gt;&gt; often refer to as &quot;reverse REST&quot;: clients subscribe, and then there&#39;s\n&gt;&gt; a push model. there are a variety of push protocols (PuSH, MQTT, APN,\n&gt;&gt; C2DM, sMAP) out there, but none so far has taken over the world.\n&gt; I don&#39;t know anything about these models/protocols. Do they work in\n&gt; practice at this time? In particular, if the client is a single-page\n&gt; application running in a browser?\n\nthese are two very different questions. they work very well in practice, \nfor example across all iOS devices (APN), across all android devices \n(C2DM), in building automation scenarios (sMAP), or in large sensor \nnetwork settings (MQTT). they all come with different design goals and \nconstraints, and it seems that you have something specific in mind as \nwell. as long as you don&#39;t better understand the specific constraints of \nthe scenario you have in mind, picking a solution (or writing down the \nrequirements for a new one) probably will be hard.\n\ncheers,\n\ndret.\n\n-- \nerik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n            | UC Berkeley  -  School of Information (ISchool) |\n            | http://dret.net/netdret http://twitter.com/dret |\n\n"}}