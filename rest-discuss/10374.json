{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"j6AmQ8tbWJ8Uzp_r6AcdHWHDe4nkwet7iKx5Etts-P-efLt0vJ23sLtDAkSg6Qeas3n3md9Ia2KP7UZyLg8XFcuhleJdlzqZ-tH6","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Is PHP more RESTful than J2EE, Django or\tRails?","postDate":"1202612253","msgId":10374,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwMjEwMDI1NzMzLkdCMjE4MzVAaGFycG8ubGFpdHMudXRleGFzLmVkdT4=","inReplyToHeader":"PDIwMDgwMjEwMDE1MzU0LkdMMjM3OThAa2xhbmdyYXVtPg==","referencesHeader":"PDM0M2VjYjNlMDgwMjA3MTYxNWc2NTM3ODU3YWw0NjE1NWU1M2ViMDE5MjNAbWFpbC5nbWFpbC5jb20+IDw0N0FCRTA4Ni43MDYwM0BhbmNvbmFmYW1pbHkuY29tPiA8MzQzZWNiM2UwODAyMDgwNDA4dzNjZDU4Yzhjczk3MGZiNGI4YjhmZTg2Y2JAbWFpbC5nbWFpbC5jb20+IDw5ZWViZjU3NDA4MDIwODA0NDh1MmU5YzQ5MWNvNmM4ZThkYWM1ZjhiODA2NkBtYWlsLmdtYWlsLmNvbT4gPDM0M2VjYjNlMDgwMjA4MDUwN2s0NzQyMjdlMmlhY2YyMWMzZjk1MGIxYjcyQG1haWwuZ21haWwuY29tPiA8OTI3NDQxYjMwODAyMDgxMTI3dTcxM2ZjMWJhbzNmMTEyZjZiMjljZmUwYTFAbWFpbC5nbWFpbC5jb20+IDwzNDNlY2IzZTA4MDIwODEyMDZ0MWU0ZDNlMDdsZmM0YmI2ZWE3Yjg3ZGY3ZUBtYWlsLmdtYWlsLmNvbT4gPDIwMDgwMjA4MjIwMjE1LkdBMjMwMDBAaGFycG8ubGFpdHMudXRleGFzLmVkdT4gPDIwMDgwMjEwMDE1MzU0LkdMMjM3OThAa2xhbmdyYXVtPg=="},"prevInTopic":10373,"nextInTopic":10375,"prevInTime":10373,"nextInTime":10375,"topicId":10356,"numMessagesInTopic":19,"msgSnippet":"... Well, in fact, I have built many PHP apps w/ lots of use & users and have never used PHP s built in session support -- in fact I generally advise against","rawEmail":"Return-Path: &lt;pkeane@...&gt;\r\nX-Sender: pkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 52128 invoked from network); 10 Feb 2008 02:57:34 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m55.grp.scd.yahoo.com with QMQP; 10 Feb 2008 02:57:34 -0000\r\nX-Received: from unknown (HELO harpo.laits.utexas.edu) (128.83.27.7)\n  by mta18.grp.scd.yahoo.com with SMTP; 10 Feb 2008 02:57:34 -0000\r\nX-Received: from harpo.laits.utexas.edu (pkeane@... [127.0.0.1])\n\tby harpo.laits.utexas.edu (8.14.1/8.14.1) with ESMTP id m1A2vXx1025368\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 9 Feb 2008 20:57:33 -0600 (CST)\r\nX-Received: (from pkeane@localhost)\n\tby harpo.laits.utexas.edu (8.14.1/8.14.1/Submit) id m1A2vXR0018751\n\tfor rest-discuss@yahoogroups.com; Sat, 9 Feb 2008 20:57:33 -0600 (CST)\r\nDate: Sat, 9 Feb 2008 20:57:33 -0600\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-ID: &lt;20080210025733.GB21835@...&gt;\r\nReferences: &lt;343ecb3e0802071615g6537857al46155e53eb01923@...&gt; &lt;47ABE086.70603@...&gt; &lt;343ecb3e0802080408w3cd58c8cs970fb4b8b8fe86cb@...&gt; &lt;9eebf5740802080448u2e9c491co6c8e8dac5f8b8066@...&gt; &lt;343ecb3e0802080507k474227e2iacf21c3f950b1b72@...&gt; &lt;927441b30802081127u713fc1bao3f112f6b29cfe0a1@...&gt; &lt;343ecb3e0802081206t1e4d3e07lfc4bb6ea7b87df7e@...&gt; &lt;20080208220215.GA23000@...&gt; &lt;20080210015354.GL23798@klangraum&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nIn-Reply-To: &lt;20080210015354.GL23798@klangraum&gt;\r\nUser-Agent: Mutt/1.5.16 (2007-06-09)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Re: Is PHP more RESTful than J2EE, Django or\n\tRails?\r\nX-Yahoo-Group-Post: member; u=11652427; y=v91Sz-rekoZ0V_ty3PU1GwYRiKxGkYaFb7dEREPxeHBeF5TtkO4421sB0A\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\nOn Sun, Feb 10, 2008 at 02:53:54AM +0100, Aristotle Pagaltzis wrote:\n&gt; * Peter Keane &lt;pkeane@...&gt; [2008-02-08 23:05]:\n&gt; &gt; I find that the shared-nothing mindset of PHP is certainly\n&gt; &gt; relevant and is quite &quot;REST&quot;-ish.\n&gt; \n&gt; Shared-nothing mindset? Sessions are built right into the core of\n&gt; PHP; AFAIK you can???t even compile a PHP binary that doesn???t have\n&gt; session support. Not that it would be much use for anything,\n&gt; because practically not a single PHP app in existence would run\n&gt; on such a thing.\n&gt; \nWell, in fact, I have built many PHP apps w/ lots of use & users and\nhave never used PHP&#39;s built in session support -- in fact I generally\nadvise against using it.\n\n&gt; Then again, the values I calculate in the templates of my\n&gt; Catalyst app start out undefined in every request, and likewise\n&gt; would if I were using Rails, Django or whatever else. The kind of\n&gt; shared-nothingness that PHP implements by default exists every\n&gt; bit as much in MVC frameworks as it does in PHP.\n&gt; \n\nSure, but for better or worse there is a persistant process that you\nneed to be at least mindful of if you are using mod_perl as opposed to\ncgi \n\n&gt; &gt; the success of PHP (i.e., it is widely deployed) is due, in\n&gt; &gt; some degree, to its inherent &quot;web&quot;-ness.\n&gt; \n&gt; Yes, the fact that each page is ultimately a CGI that terminates\n&gt; at the end of the request cycle means that PHP apps are\n&gt; ridiculously stable: there???s no long-running process that can get\n&gt; wedged, so you can leave them deployed and unmaintained for years\n&gt; and they???ll still work when you come back.\n&gt; \n\nIndeed, and in my field (Higher Ed), that&#39;s real important\n(unfortunately!). \n\n&gt; But that has nothing to do with any sort of RESTfulness. Natively\n&gt; PHP leads you toward a style where you structure your URI space\n&gt; around operations implemented by scripts which operate on things\n&gt; identified by a database key passed via query parameter. That???s\n&gt; crystal clear RPC style: you put the verb in the URI and use\n&gt; app-specific identifiers for your resources. PHP does not\n&gt; encourage a resource-oriented design at all.\n\nI never suggest it was RESTful, I DID say that there are qualities that\nREST and a terminating CGI share, in terms of mindset.  Others might\nrightly not feel that way.\n\nBut I need to take exception with &quot;Natively PHP leads you towards...&quot;\netc., as your description is nothing like any PHP app I have ever\nbuilt. Are there bad PHP programs (even widely popular ones) and\nbooks that promote bad practices? Yup. I have spent a good bit of time\nbuilding apps in Struts & Catalyst, but my favorite experiences were\nwith Template::Toolkit, Class::DBI (I suspect I&#39;d use DBIx::Class now),\nand a simple url dispatcher in mod_perl. While I&#39;d prefer to be working\nw/ Perl, I have found PHP to be a perfectly suitable way to build clean,\nstable, resource-oriented apps.\n\n&gt; The success of PHP as a web platform is in some sense due to\n&gt; the same reason as Excel???s success as a desktop programming\n&gt; environment.\n&gt; \n\n:-). Probably, true... And I will note -- if Perl or Python ends up with\na deployment option that&#39;s as ubiquitous and stable as PHP&#39;s I&#39;ll switch\nin a heartbeat. My sysadmins won&#39;t consider mod_perl OR mod_python.\n\n&gt; &gt; Often the database access layer itself can be exposed as a\n&gt; &gt; REST/HTTP interface, so that the entire application code is a\n&gt; &gt; set of RESTful interfaces that will be consumed -- either by a\n&gt; &gt; client or by the code itself.\n&gt; \n&gt; That???s an oversimplification, just like using an ORM directly as\n&gt; the model in an MVC app is an oversimplification. It may work,\n&gt; just like using an ORM as the model in an MVC app works in a\n&gt; pinch; but it???s not a particularly good way to go about things.\n&gt; The logic should all be in the model, with the database serving\n&gt; as a layer below it; the controller has no other responsibility\n&gt; than to translate from HTTP to your model. If your controller\n&gt; methods are routinely longer than 2 or 3 lines, you???re doing\n&gt; something wrong.\n\nWell, how about 5 lines? Note there is no db call, just a url pointer\nto the atom feed for the collection which&#39;ll be consumed by the XSLT\nstylesheet document() function, (i.e. the Atom feed is the &quot;model&quot;).\n\nclass CollectionHandler {\n\npublic static function browse() {\n\t$params = Dase::instance()-&gt;params;\n\t$tmp = new Dase_Xslt;\n\t$tmp-&gt;stylesheet = XSLT_PATH.&#39;collection/browse.xsl&#39;;\n\t$tmp-&gt;set(&#39;src&#39;,APP_ROOT.  &#39;/atom/collection/&#39; . $params[&#39;collection_ascii_id&#39;]);\n\tDase::display($tmp-&gt;transform());\n}\n....\n}\n&gt;\n&gt; \n&gt; &gt; All the framework you need for most (MVC) applications is a URL\n&gt; &gt; dispatcher, a database layer or ORM, and a templating/\n&gt; &gt; presentation layer.\n&gt; \n&gt; Errm, yes, you???ve just described an MVC framework.\n&gt; \n&gt; &gt; In PHP, you have PDO, etc. for database layer, Smarty, XSLT, or\n&gt; &gt; PHP itself for templating, and you can write a URL dispatcher\n&gt; &gt; w/o too much difficulty.\n&gt; \n&gt; Or you can use a framework and not bother reinventing the URI\n&gt; dispatcher wheel yet again.\n&gt; \n\nWell, the URL dispatcher isn&#39;t so difficult to create, and it happens to\nbe something that I want to do my own way (not Django&#39;s or Catalyst&#39;s or\nRail&#39;s). And thankfully for open source code, I get to see how all of\nthose folks do it, so I can glean good ideas.\n\nWhat would be ideal (for me) is a set of URL dispatchers I could choose\nfrom, the way I can choose my favorite ORM or Templating solution.\nCGI::Application comes to mind, and I have definitely enjoyed using\nthat.\n\nFrankly, you can write bad code in *any* language and when the only\nchoice is PHP, it is certainly possible to make solid apps. I&#39;d actually\nlike to see good practices encouraged in the PHP community rather than\nhave it all written off.\n\n--peter keane\n\n&gt; Regards,\n&gt; -- \n&gt; Aristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}