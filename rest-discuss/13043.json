{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343278744,"authorName":"Subbu Allamaraju","from":"Subbu Allamaraju &lt;subbu@...&gt;","profile":"sallamar","replyTo":"SENDER","senderId":"4TeWMHZKgIu3162BZDVWved-Wrkw8lfR29-_Tn5ejzFdCQmYNsEPu0vhJ2f-wfNIsmyNqx0j5sgaiKPzFV0pwXOBFHOeNSa-Pg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking non-hypertext","postDate":"1246390907","msgId":13043,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEYxOTEzOUQ0LUQ4RjAtNEMwRS04NDlDLThDQjZFRkQ1MjUwMEBzdWJidS5vcmc+","inReplyToHeader":"PDgxNThhZDc1MDkwNjMwMTEzMnI0NTkxMDg4NHY1MjE2ZGVhZjQ3NWEzYWU4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4gPDRBNDNGMzA5LjEwMTA0MDJAZGVob3JhLm5ldD4gPDRBNDQwNEY4LjMwMDAwMDhAcmVkaGF0LmNvbT4gPDRBNDQxNkQyLjUwODAzMDRAZGVob3JhLm5ldD4gPDI4NTA1MDY4LTE5M0EtNDIxNC1CNUY1LTE4RjNFOTdBOTZDNEBzdWJidS5vcmc+IDwyMTYwNmRjZjA5MDYzMDAzNDRnNGI5ZjdmYzNrYzUxNDYyNDc4NmVjMmNmZEBtYWlsLmdtYWlsLmNvbT4gPDBEQ0NBMEQwLUY0NUYtNEQ1Ni1BMjY2LTNCNTVCMzg0NTM3M0BzdWJidS5vcmc+IDw4MTU4YWQ3NTA5MDYzMDExMzJyNDU5MTA4ODR2NTIxNmRlYWY0NzVhM2FlOEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":13042,"nextInTopic":13044,"prevInTime":13042,"nextInTime":13044,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"Hi Peter, ... This still leaks many server-side details to the client. Here is an alternative. 1. The server has a cart resource, and product resources. 2.","rawEmail":"Return-Path: &lt;subbu@...&gt;\r\nX-Sender: subbu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 43982 invoked from network); 30 Jun 2009 19:41:29 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 30 Jun 2009 19:41:29 -0000\r\nX-Received: from unknown (HELO mail-px0-f175.google.com) (209.85.216.175)\n  by mta1.grp.sp2.yahoo.com with SMTP; 30 Jun 2009 19:41:29 -0000\r\nX-Received: by pxi5 with SMTP id 5so359612pxi.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 12:41:25 -0700 (PDT)\r\nX-Received: by 10.141.35.12 with SMTP id n12mr2253098rvj.267.1246390884692;\n        Tue, 30 Jun 2009 12:41:24 -0700 (PDT)\r\nReturn-Path: &lt;subbu@...&gt;\r\nX-Received: from wlanvpn-mc2e-246-194.corp.yahoo.com (fa0-1-wlan-rtr.corp.yahoo.com [216.145.49.5])\n        by mx.google.com with ESMTPS id g14sm1506960rvb.14.2009.06.30.12.41.23\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Tue, 30 Jun 2009 12:41:23 -0700 (PDT)\r\nCc: Sam Johnston &lt;samj@...&gt;,\n Bill de hOra &lt;bill@...&gt;,\n rest-discuss@yahoogroups.com,\n Mark Nottingham &lt;mnot@...&gt;\r\nMessage-Id: &lt;F19139D4-D8F0-4C0E-849C-8CB6EFD52500@...&gt;\r\nTo: Peter Keane &lt;pkeane@...&gt;\r\nIn-Reply-To: &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v935.3)\r\nDate: Tue, 30 Jun 2009 12:41:47 -0700\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt; &lt;4A43F309.1010402@...&gt; &lt;4A4404F8.3000008@...&gt; &lt;4A4416D2.5080304@...&gt; &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt; &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt; &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt; &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\r\nX-Mailer: Apple Mail (2.935.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Subbu Allamaraju &lt;subbu@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking non-hypertext\r\nX-Yahoo-Group-Post: member; u=343278744; y=rznzPBL0jldsD7FoT__UjyZxp8ah8IVjEayIRe1W2lxt-PU\r\nX-Yahoo-Profile: sallamar\r\n\r\nHi Peter,\n\n&gt; 1.  post the product to the cart &quot;collection&quot;\n&gt; 2.  add a link to a product pointing to the cart\n&gt; 3.  add a link to a cart resource pointing to the product\n&gt; 4.  create a new resource (presumably by POSTing to a known  \n&gt; endpoint) that\n&gt; is essentially a &quot;cart-product instance&quot; that has a link to each\n\nThis still leaks many server-side details to the client. Here is an  \nalternative.\n\n1. The server has a cart resource, and product resources.\n\n2. Each product resource found in a search will have a link\n\n&lt;link rel=&quot;http://shop.org/rels/buy&quot; href=&quot;http://shop.org/subbu/cart&quot;/&gt;\n\nThe definition of rel says that the client should use POST to add the  \nproduct to the cart.\n\n3. Client adds the product to the cart\n\nPOST /subbu/cart\nContent-Type: application/xml\n\nid=1234\n\n4. Server redirects back to the updated cart\n\n303 See Other\nLocation: http://shop.org/subbu/cart\n\nThis is just generalized version of a web based shopping cart, and  \nprovides a simplified interface to the client. As I said before,  \nexpecting the client to manage links is akin to clients posting SQL  \nstatements to servers.\n\nSubbu\n\n\n\n&gt; On Tue, Jun 30, 2009 at 11:59 AM, Subbu Allamaraju &lt;subbu@...&gt;  \n&gt; wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Sam,\n&gt;&gt;\n&gt;&gt; I don&#39;t disagree that there are use cases, but I am not sure if\n&gt;&gt; letting clients manage relations is the right way to implement\n&gt;&gt; distributed systems. The approach you describe below is similar to a\n&gt;&gt; client trying to setup foreign key relations between different\n&gt;&gt; database entities. This model leaks abstractions and is not ideal for\n&gt;&gt; writing large systems.\n&gt;&gt;\n&gt;&gt; For instance, take a simple shopping cart application. The server may\n&gt;&gt; have decided to use links to associate products to a cart, but that\n&gt;&gt; does not mean that, clients should be able to create/edit/delete  \n&gt;&gt; those\n&gt;&gt; links. Instead, links come into being when the client &quot;adds products\n&gt;&gt; to a cart&quot; and they go away when the client &quot;removes a product from\n&gt;&gt; the cart&quot;. That is the right level of abstraction for the client.\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; IMO, links are for servers to provide navigability between resources,\n&gt;&gt; and to let clients make state transitions via links.\n&gt;&gt;\n&gt;&gt; Subbu\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Jun 30, 2009, at 3:44 AM, Sam Johnston wrote:\n&gt;&gt;\n&gt;&gt;&gt; Hi Subbu,\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Tue, Jun 30, 2009 at 5:45 AM, Subbu Allamaraju  \n&gt;&gt;&gt; &lt;subbu@...&lt;subbu%40subbu.org&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; LINK is similar - how a LINK relationship is created/managed/\n&gt;&gt;&gt;&gt;&gt; destroyed is\n&gt;&gt;&gt;&gt; undefined.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Why isn&#39;t that up to the server(s) managing the resources? Links  \n&gt;&gt;&gt;&gt; are\n&gt;&gt;&gt;&gt; for servers to describe relations between resources, and not for\n&gt;&gt;&gt;&gt; clients to manage such relationships.\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Why so? This use case requires that clients be able to manage links:\n&gt;&gt;&gt; virtual\n&gt;&gt;&gt; infrastructure is modeled as compute, storage and network resources\n&gt;&gt;&gt; and\n&gt;&gt;&gt; clients create, delete and link them as they see fit. The server can\n&gt;&gt;&gt; too\n&gt;&gt;&gt; (for example, implicitly creating a storage resource and linking it\n&gt;&gt;&gt; when you\n&gt;&gt;&gt; create a compute resource) but the point of OCCI\n&gt;&gt;&gt; &lt;http://www.occi-wg.org/&gt;is to allow for client manipulation.\n&gt;&gt;&gt;\n&gt;&gt;&gt; We&#39;re not the only ones who see a need either... the original\n&gt;&gt;&gt; authors of the\n&gt;&gt;&gt; HTTP spec (RFC 2068) including LINK and\n&gt;&gt;&gt; UNLINK&lt;http://tools.ietf.org/html/rfc2068#section-19.6.1.2&gt;verbs for\n&gt;&gt;&gt; this around the same as this\n&gt;&gt;&gt; I-D &lt;\n&gt;&gt; http://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http- \n&gt;&gt; links-00.txt\n&gt;&gt;&gt;&gt; specifying\n&gt;&gt;&gt; same in more detail. This is what Mark Nottingham (author of the\n&gt;&gt;&gt; Link: header I-D among other things, copied) had to say this morning\n&gt;&gt;&gt; on\n&gt;&gt;&gt; apps-discuss:\n&gt;&gt;&gt;\n&gt;&gt;&gt; *- First and foremost, in the absence of the LINK and UNLINK verbs\n&gt;&gt;&gt; originally defined in RFC 2068[2] but specifically omitted from RFC\n&gt;&gt;&gt; 2616[3],\n&gt;&gt;&gt; what is the preferred mechanism for manipulating these links via\n&gt;&gt;&gt; HTTP? It\n&gt;&gt;&gt; appears that this header is intended for GET requests only, but\n&gt;&gt;&gt; presumably\n&gt;&gt;&gt; specifying it in POST and PUT requests would be one option that\n&gt;&gt;&gt; avoids the\n&gt;&gt;&gt; creation of [not so] &quot;new&quot; verbs (bearing in mind that short of\n&gt;&gt;&gt; accepting\n&gt;&gt;&gt; Link: headers from empty POST/PUT requests, it would be necessary to\n&gt;&gt;&gt; GET and\n&gt;&gt;&gt; then PUT the entire payload to update links - twice if they were\n&gt;&gt;&gt; reciprocal). While there was an attempt a dozen years ago to better\n&gt;&gt;&gt; define\n&gt;&gt;&gt; the relevant HTTP verbs[4], it strikes me as more sensible to follow\n&gt;&gt;&gt; the\n&gt;&gt;&gt; example of the Set-Cookie: header for this rather than WebDAV&#39;s\n&gt;&gt;&gt; example of\n&gt;&gt;&gt; creating new verbs (even if we&#39;ve seen them before) but you guys are\n&gt;&gt;&gt; the\n&gt;&gt;&gt; experts.*\n&gt;&gt;&gt;\n&gt;&gt;&gt; Undefined, but I imagine in a PUT/POST body does indeed make the\n&gt;&gt;&gt; most sense.\n&gt;&gt;&gt; Using the Link header in a request doesn&#39;t have well-defined\n&gt;&gt;&gt; semantics.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I wonder then whether it&#39;s not sensible to define these semantics in\n&gt;&gt;&gt; an[other] Internet Draft (ala Set-Cookie) rather than having  \n&gt;&gt;&gt; everyone\n&gt;&gt;&gt; running off and inventing their own in-band solutions... doing so\n&gt;&gt;&gt; would make\n&gt;&gt;&gt; for some really clever RESTful interfaces.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Sam\n&gt;&gt;\n&gt;&gt; \n&gt;&gt;\n\n\n"}}