{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"bLANOxQF6Kl-BYjy4cbMFTusxwJgCjQKbdK_752BqHJqZl8zy94lNr6u1wDPrLGq0au-VaZEkBetbggWZt0cNyy5Z1hssg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST without PUT and other things...","postDate":"1032121154","msgId":2557,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEODRFQjQyLjMwNzAyMDZAcHJlc2NvZC5uZXQ+","referencesHeader":"PDAwMTYwMWMyNWMyMSQxNGViNWI0MCRhMDAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":2554,"nextInTopic":2565,"prevInTime":2556,"nextInTime":2558,"topicId":2548,"numMessagesInTopic":6,"msgSnippet":"... It would simplify the rule that the client should never invent URIs except for query strings. But it would complicate content-management applications where","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 15 Sep 2002 20:19:16 -0000\r\nReceived: (qmail 66254 invoked from network); 15 Sep 2002 20:19:16 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 15 Sep 2002 20:19:16 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 15 Sep 2002 20:19:17 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8FKJGe25801;\n\tSun, 15 Sep 2002 13:19:16 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8FKJFi05903;\n\tSun, 15 Sep 2002 13:19:15 -0700\r\nMessage-ID: &lt;3D84EB42.3070206@...&gt;\r\nDate: Sun, 15 Sep 2002 13:19:14 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.1) Gecko/20020826\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n   rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] REST without PUT and other things...\r\nReferences: &lt;001601c25c21$14eb5b40$a000a8c0@seairthlaptop&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nSeairth Jacobs wrote:\n&gt;...\n\n&gt; \n&gt; I contend that PUT does not fit well with the REST model.  First, there is\n&gt; the issue of resource creation.  PUT is allowed to submit a &quot;non-existing&quot;\n&gt; request-URI as if it did exist.  This request-URI has no identity whatsoever\n&gt; (not even with the request-entity that will become the new resource).  From\n&gt; my ever-evolving understanding of REST, allowing the usage of URIs in this\n&gt; manner is just plain wrong.  I absolutely agree with this regardless of\n&gt; REST.  As I recently mentioned [1], I feel that using POST to create all\n&gt; resources is just as effective and keeps the URI rules simple.\n\nIt would simplify the rule that the client should never invent URIs \nexcept for query strings. But it would complicate content-management \napplications where the human end-user is choosing mmenonic URIs.\n\n&gt; Second, there is the issue of resource update.  PUT is designed to only\n&gt; replace an entire resource.  It is not capable of updating only a part of\n&gt; the resource. \n\nThere are two orthogonal issues here. One is &quot;I want to save bandwidth \nand only send a diff of what&#39;s changed since yesterday.&quot; I think we \ncould argue that both PUT and GET should allow this and in fact there is \nan unfinished proposal floating around. This is still appropriate for \nPUT because it is just an optimization of sending the whole resource. \nIt&#39;s a conceptual overwrite that happens to be optimized.\n\nThe second issue is: &quot;I know I want to change a particular element. I \ndon&#39;t know or care about the state of other surrounding elements.&quot; \nThat&#39;s where you use POST because it is a conceptual mutation and \noptimization is irrelevant.\n\n&gt; ... Not only is this very limited in terms of functionality, but\n&gt; POST can do the same thing!  So, why have a separate PUT verb when POST\n&gt; would work as well?  I can&#39;t think of a single good reason.\n\nI disagree. If anything, I would go in the opposite direction. I would \nsay that POST has too many meanings (sometimes it mutates a resource, \nsometimes it totally overwrites it, sometimes it creates a resource, \nsometimes it even has no side-effects at all). It is better to split \nthese out into independent methods so that you know exactly what is \ngoing to happen when you invoke a method on a server. PUT is a little \nlike &quot;copy&quot; on a command line. You know that after you invoke it what \nyou will end up with. POST is more like invoking a program. What happens \ndepends on the program.\n\nAlso, PUT&#39;s idempotency is important:\n\n  * http://www.prescod.net/reliable_http.html\n &gt; ...\n&gt; Part of the reason for suggesting that PUT should be depricated when working\n&gt; in the REST model is due to the REST model itself.  REST specifically talks\n&gt; of simple, uniform interfaces.  As is evident from threads on this list,\n&gt; having both a PUT and a POST is not a simple, uniform interface.  As I see\n&gt; it, within the context of REST, POST is necessary, while PUT is optional.\n&gt; Getting rid of PUT provides a simple, uniform interface as REST mentions.\n\nUniformity of interface is very important. Simplicity is much less \nimportant. I wouldn&#39;t mind an HTTP with 15 methods. As long as every \nHTTP client and server in the world understood those 15 methods, and \nevery resource had a reasonable answer for every one of them, that would \nbe a &quot;uniform interface&quot;. The point is that clients and servers should \nnot have to negotiate the meaning of the interfaces out of band. But we \noften DO have to negotiate the meaning of POST. So to me, more methods \nwould do a better job of living up to the potential of REST, rather than \nfewer. (for instance I would love to see WATCH, NOTIFY, etc.)\n\n&gt; Also, some (or maybe all) of you may be disagreeing with my usage of\n&gt; &quot;Location&quot; above.  However, this makes perfect sense to me.  Usage of\n&gt; Location in a POST request allows all of the functionality of PUT without\n&gt; having to embed any additional data in the request-entity itself.  Further,\n&gt; by use Location instead of the request-URI to indicate a new URI, we ensure\n&gt; that only existing URIs may be used for a request-URI.  This also adresses\n&gt; the ability for a client to be able to construct URIs.  A client could\n&gt; construct a new string that will become a URI and place it in the Location\n&gt; header.  The server could then act on it independent of the actual\n&gt; request-URI.  Therefore, the request-URI still stays opaque without losing\n&gt; any capabilities from the client&#39;s POV.\n\nBut what does the request-URI *mean*? What is its relationship to the \nLocation URI? It seems irrelevant which points me back to PUT with its \nsingle URI.\n\n  Paul Prescod\n\n\n"}}