{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":192402827,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;dierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"VL03W0oK45_sLyTNdqayIy8kQsnal2yCK5A-mX7RzknCznDDpBxoQiEHiZqSTIR9PpFlbtT_eox8ZgN_THzy-UnU_HsIP4KIhyyJfA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] AOL and REST?","postDate":"1167800000","msgId":7397,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1OWIzNmJlLjJkYzliMmQzLjBkOWMuMWJhZkBteC5nb29nbGUuY29tPg==","inReplyToHeader":"PDQ1OUFDNzRELjMwNDAwMDdAYW9sLm5ldD4="},"prevInTopic":7389,"nextInTopic":7398,"prevInTime":7396,"nextInTime":7398,"topicId":7292,"numMessagesInTopic":20,"msgSnippet":"... more parallel to User-Agent. ... Authorization: header, no? Yes, credentials go in the Authorization header. I m not sure have distince user-agent values","rawEmail":"Return-Path: &lt;dierken@...&gt;\r\nX-Sender: dierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 29916 invoked from network); 3 Jan 2007 04:53:54 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m21.grp.scd.yahoo.com with QMQP; 3 Jan 2007 04:53:54 -0000\r\nReceived: from unknown (HELO an-out-0708.google.com) (209.85.132.249)\n  by mta8.grp.scd.yahoo.com with SMTP; 3 Jan 2007 04:53:52 -0000\r\nReceived: by an-out-0708.google.com with SMTP id c2so1918444anc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 02 Jan 2007 20:53:19 -0800 (PST)\r\nReceived: by 10.100.191.5 with SMTP id o5mr2363548anf.1167799999423;\n        Tue, 02 Jan 2007 20:53:19 -0800 (PST)\r\nReturn-Path: &lt;dierken@...&gt;\r\nReceived: from NEMO ( [207.202.171.254])\n        by mx.google.com with ESMTP id c39sm11359180anc.2007.01.02.20.53.14;\n        Tue, 02 Jan 2007 20:53:18 -0800 (PST)\r\nTo: &quot;&#39;John Panzer&#39;&quot; &lt;jpanzer@...&gt;\r\nCc: &quot;&#39;Nic James Ferrier&#39;&quot; &lt;nferrier@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Tue, 2 Jan 2007 20:53:20 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook, Build 11.0.5510\r\nthread-index: AccusLWlxZNWDuMCRP6gU75YIVkr0QAQUc4g\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028\r\nIn-Reply-To: &lt;459AC74D.3040007@...&gt;\r\nMessage-ID: &lt;459b36be.2dc9b2d3.0d9c.1baf@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;S. Mike Dierken&quot; &lt;dierken@...&gt;\r\nSubject: RE: [rest-discuss] AOL and REST?\r\nX-Yahoo-Group-Post: member; u=192402827; y=gLtEqOkXRkdodW8fhVEljDfSXfGXgTWpxFyX6c2QpFzeJZA\r\nX-Yahoo-Profile: mdierken\r\n\r\n&gt; The application ID is actually a separate thing from the user ID and is\nmore parallel to User-Agent.  \n&gt; I think the user credentials would be the information passed in the\nAuthorization: header, no? \nYes, credentials go in the Authorization header. I&#39;m not sure have distince\nuser-agent values is useful in this case. The Authorization header can\neasily contain both the application-id and some transient token authorizing\nthat request. The server could reject the request on an application-wide\nbasis as well as per-resource (for example, if a user disallows a particular\napplication from mucking with their stuff).\n\n&gt; Finally, there is also an intent to be able to let a user control what\ndata is provided to different services \n&gt; (identified by application ID, again) -- something do-able with a token\nbut not with username/password combinations.  \nWhat if the request contained the username/password of the application, not\nthe end-user. And the user could allow/deny access on a per-application\nbasis. The user would not need to re-login for each and every third-pary\napplication (which might make them de-sensitized to guarding their\npassword).\n\n\n\n________________________________\n\n\tFrom: John Panzer [mailto:jpanzer@...] \n\tSent: Tuesday, January 02, 2007 12:58 PM\n\tTo: Mike Dierken\n\tCc: Nic James Ferrier; rest-discuss@yahoogroups.com\n\tSubject: Re: [rest-discuss] AOL and REST?\n\t\n\t\n\tMike,\n\t\n\tThanks for your comments.  A couple of followup questions for the\nlist:\n\t\n\tMike Dierken wrote: \n\n\t\tFirst, it looks like some folks spent a good deal of time\nwriting\n\t\textensive documentation - that&#39;s very nice.\n\t\tHere are a couple comments:\n\t\t\n\t\t1 Application ID\n\t\tThe application-id is placed in the URI, but it does not\nappear to\n\t\tactually change what data is being accessed - it&#39;s not part\nof a data\n\t\tidentifier. An alternative would be to use the Authorization\nrequest\n\t\theader (where username/passwords normally go) in order to\nspecify the\n\t\tapplication ID.\n\t\t Pro: closer to protocol specification for authentication\n\t\t Pro: common URI for a resource across applications provide\nmore\n\t\tchances for caching, hyperlink references, etc.\n\t\t Con: logging/processing of requests on the server would\nneed to\n\t\texamine more than just the URI (hopefully this isn&#39;t a\nchallenge for\n\t\tyour framework)\n\t\t  \n\n\tThe application ID is actually a separate thing from the user ID and\nis more parallel to User-Agent.  I think the user credentials would be the\ninformation passed in the Authorization: header, no?\n\t\n\tMotivation: The application ID is however related to authorization;\nit&#39;s the identity of a third party which is leveraging this API on behalf of\nan actual user.  For example a mashup site would have a unique application\nID.  This lets us do tracking of who&#39;s using the APIs, and also lets us do\nrate limiting if necessary (say, if someone wrote a virus and attempted a\nDDOS attack -- obtaining an application ID is a manual process).  It&#39;s not\nintended to really be a secure method of authorization, any more than\nUser-Agent is, but useful nonetheless.\n\t\n\n\t\t...\n\t\t\n\t\t3 User Sign In\n\t\tConsidering security and privacy of end-users is very good.\nHowever,\n\t\tthe approach of &#39;signing in&#39; seems odd, complex and not at\nall a\n\t\tservice API. Specifically, the authentication specification\ndescribes\n\t\tonly how to redirect a user&#39;s web browser to a particular\npage. For\n\t\tnon-browser based applications, this would be unhelpful.\n\t\tEssentially, the user&#39;s username/password is submitted via\nHTTPS and a\n\t\tresponse has a Location: header with a URI with an\nauth=[something]\n\t\tquery term. That auth value is then used to generate a token\nthat\n\t\t(temporarily) identifies the user, which is then later used\nin other\n\t\tuser-specific requests.\n\t\t  \n\n\tYes, authentication is a problem.  I believe the above is a\nconsequence of wanting to be able to control what the end user sees during\nauthentication, and up to the point of getting an auth token is intended to\nbe the same for all AOL APIs.   For example, some applications or user\naccounts may require two factor authentication, or captcha challenge.  (I\nbelieve that GData does something very similar.)  There are also complex\nissues involved with signing out and timing out.  Finally, there is also an\nintent to be able to let a user control what data is provided to different\nservices (identified by application ID, again) -- something do-able with a\ntoken but not with username/password combinations.  The latter seems to be\nthe current default for composing web services but it&#39;s not a very good one.\n(OpenID is another potential option but of course that also involves a round\ntrip through a web page.)\n\t\n\tAuthentication is a very challenging topic and I think it&#39;s one that\nis a going to be a gating factor in deployment of more sophisticated web\nservices of all kinds.  Note that the most used web services today don&#39;t\nrequire authentication, and I think that&#39;s partly because there isn&#39;t a\nreally good answer for this right now.  Any suggestions?\n\t\n\t\n\t-- \n\tAbstractioneer &lt;http://feeds.feedburner.com/aol/SzHO&gt; John Panzer\n\tSystem Architect\n\thttp://abstractioneer.org\n\t\n\n\n\n"}}