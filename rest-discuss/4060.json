{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"Seairth Jacobs &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"E8Ba0CiT9woYd6wzTTVE3GBKAJhfFEeOQlbxtgHT1hqE41dkHTGqyN9feovOuh_K2UzK0rnYJGosW1_ZNJJN7_K2YhVZ2ivvnWM5","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] PUT question","postDate":"1071347230","msgId":4060,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGREI3NjFFLjEwNjAwMDNAc2VhaXJ0aC5jb20+","inReplyToHeader":"PDAwMjAwMWMzYzBiOCQxMDE0YTYxMCQwOTAyYThjMEBBVFRJQzU2Q09WRT4=","referencesHeader":"PDNGRDlDMjMzLjkwNTAxMDlAc2VhaXJ0aC5jb20+IDwwMDIwMDFjM2MwYjgkMTAxNGE2MTAkMDkwMmE4YzBAQVRUSUM1NkNPVkU+"},"prevInTopic":4059,"nextInTopic":4061,"prevInTime":4059,"nextInTime":4061,"topicId":4057,"numMessagesInTopic":10,"msgSnippet":"There is not yet an architecture.  Actually, what brought this question up was the work going on with Atom [1], particularly with the API [2]. When editing an","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 6353 invoked from network); 13 Dec 2003 20:27:15 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m1.grp.scd.yahoo.com with QMQP; 13 Dec 2003 20:27:15 -0000\r\nReceived: from unknown (HELO lakemtao03.cox.net) (68.1.17.242)\n  by mta5.grp.scd.yahoo.com with SMTP; 13 Dec 2003 20:27:14 -0000\r\nReceived: from seairth.com ([68.96.198.105]) by lakemtao03.cox.net\n          (InterMail vM.5.01.06.05 201-253-122-130-105-20030824) with ESMTP\n          id &lt;20031213202714.BPHI2192.lakemtao03.cox.net@...&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Sat, 13 Dec 2003 15:27:14 -0500\r\nMessage-ID: &lt;3FDB761E.1060003@...&gt;\r\nDate: Sat, 13 Dec 2003 15:27:10 -0500\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.5) Gecko/20030925\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] PUT question\r\nReferences: &lt;3FD9C233.9050109@...&gt; &lt;002001c3c0b8$1014a610$0902a8c0@ATTIC56COVE&gt;\r\nIn-Reply-To: &lt;002001c3c0b8$1014a610$0902a8c0@ATTIC56COVE&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------030607070702090205090109&quot;\r\nX-eGroups-Remote-IP: 68.1.17.242\r\nFrom: Seairth Jacobs &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n\r\n--------------030607070702090205090109\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nThere is not yet an architecture.  Actually, what brought this question \nup was the work going on with Atom [1], particularly with the API [2].  \nWhen editing an Atom entry, the client will PUT an entry document of \nsome form or another.  However, the set of elements that may be \nappropriate to edit do not necessarily match the set of elements that \nwould be returned in a GET.  Examples:\n\n1) There is a &lt;modified&gt; element that contains the modification \ntimestamp.  It seems most appropriate for the server to set this value, \nnot the client.\n2) As is currently hinted at in the API, the server could generate the \n&lt;summary&gt; element from the &lt;content&gt; element.  However, it could be just \nas possible for the client to submit the &lt;summary&gt; itself.\n\nNow, of these examples, only the first falls within my question.  The \nsecond example potentially relates to my question if the client does not \nprovide the &lt;summary&gt;.\n\nOn the other hand, I suppose the whole thing could be avoided as \nfollows:  require to the client to PUT the entire document, including \nthe fields that do not change (e.g. created, issued, etc.) .  The server \nmakes sure that the values in the new version are the same as in the \ncurrent version, or else flags the new version as conflicting.  In this \ncase, the server must rely on the client giving accurate update \ntimestamps, an updated summary, etc.  In other words, the server only \nvalidates the data, but does not update it.  The disadvantage here is \nthat the client must understand the entire document.  It would not be \npossible for a server to add functionality (via namespaced elements) \nthat the client could safely ignore because, depending on the extension, \nthe server may think there&#39;s a conflict.\n\n*sigh* I dunno.  This approach doesn&#39;t quite feel right either.  Part of \nme feels that the actual use(s) of PUT is much more limited than a \ngeneric replace function, and part of me feels that the resource model \nis where the real problem is because I cannot use a simple PUT on it.\n\nSeairth\n\n[1] http://www.intertwingly.net/wiki/pie/\n[2] http://bitworking.org/projects/atom/draft-gregorio-09.html#Edit\n\n&quot;Walden Mathews&quot; wrote:\n\n&gt;Seairth,\n&gt;\n&gt;A good way to answer this might be to list the constraints from\n&gt;the REST architecture which you feel may have been violated,\n&gt;with citations from the architecture document itself [1].  Have you\n&gt;tried that?\n&gt;\n&gt;Thanks,\n&gt;Walden\n&gt;\n&gt;[1] http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm\n&gt;\n&gt;----- Original Message ----- \n&gt;From: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\n&gt;To: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\n&gt;Sent: Friday, December 12, 2003 8:27 AM\n&gt;Subject: [rest-discuss] PUT question\n&gt;\n&gt;\n&gt;: I am still unclear on something about PUT.  Suppose I PUT the following:\n&gt;:\n&gt;:\n&gt;: &lt;elem1&gt;\n&gt;:     &lt;elem2&gt;Value&lt;/elem2&gt;\n&gt;: &lt;/elem1&gt;\n&gt;:\n&gt;: Now, suppose that an immediate GET returns:\n&gt;:\n&gt;: &lt;elem1&gt;\n&gt;:     &lt;elem2&gt;Value&lt;/elem2&gt;\n&gt;:     &lt;elem3&gt;Value2&lt;/elem3&gt;\n&gt;: &lt;/elem1&gt;\n&gt;:\n&gt;: One additional constraint is that the client that did the PUT only\n&gt;: understands/processes &lt;elem1&gt; and &lt;elem2&gt;, ignoring all others.  As a\n&gt;: result, the client&#39;s behavior for the PUT version and the GET version is\n&gt;: exactly the same.  Is this RESTful?  Half of me says &quot;yes&quot; because the\n&gt;: client doesn&#39;t see any difference between the two representations, and\n&gt;: the other half says &quot;no&quot; because it isn&#39;t exactly the same (as a\n&gt;: generalized xml document, ignoring byte-wise comparison).\n&gt;:\n&gt;: Thoughts?\n&gt;:\n&gt;: Seairth\n&gt;  \n&gt;\n\r\n--------------030607070702090205090109\r\nContent-Type: text/html; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=ISO-8859-1&quot;&gt;\n  &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body text=&quot;#000000&quot; bgcolor=&quot;#ffffff&quot;&gt;\n&lt;meta content=&quot;text/html;charset=ISO-8859-1&quot; http-equiv=&quot;Content-Type&quot;&gt;\n&lt;title&gt;&lt;/title&gt;\nThere is not yet an architecture.&nbsp; Actually, what brought this\nquestion up was the work going on with Atom [1], particularly with the\nAPI [2].&nbsp; When editing an Atom entry, the client will PUT an entry\ndocument of some form or another.&nbsp; However, the set of elements that\nmay be appropriate to edit do not necessarily match the set of elements\nthat would be returned in a GET.&nbsp; Examples:&lt;br&gt;\n&lt;br&gt;\n1) There is a &lt;modified&gt; element that contains the modification\ntimestamp.&nbsp; It seems most appropriate for the server to set this value,\nnot the client.&lt;br&gt;\n2) As is currently hinted at in the API, the server could generate the\n&lt;summary&gt; element from the &lt;content&gt; element.&nbsp; However, it\ncould be just as possible for the client to submit the &lt;summary&gt;\nitself.&lt;br&gt;\n&lt;br&gt;\nNow, of these examples, only the first falls within my question.&nbsp; The\nsecond example potentially relates to my question if the client does\nnot provide the &lt;summary&gt;.&lt;br&gt;\n&lt;br&gt;\nOn the other hand, I suppose the whole thing could be avoided as\nfollows:&nbsp; require to the client to PUT the entire document, including\nthe fields that do not change (e.g. created, issued, etc.) .&nbsp; The\nserver makes sure that the values in the new version are the same as in\nthe current version, or else flags the new version as conflicting.&nbsp; In\nthis case, the server must rely on the client giving accurate update\ntimestamps, an updated summary, etc.&nbsp; In other words, the server only\nvalidates the data, but does not update it.&nbsp; The disadvantage here is\nthat the client must understand the entire document.&nbsp; It would not be\npossible for a server to add functionality (via namespaced elements)\nthat the client could safely ignore because, depending on the\nextension, the server may think there&#39;s a conflict.&lt;br&gt;\n&lt;br&gt;\n*sigh* I dunno.&nbsp; This approach doesn&#39;t quite feel right either.&nbsp; Part\nof me feels that the actual use(s) of PUT is much more limited than a\ngeneric replace function, and part of me feels that the resource model\nis where the real problem is because I cannot use a simple PUT on it.&lt;br&gt;\n&lt;br&gt;\nSeairth&lt;br&gt;\n&lt;br&gt;\n[1] &lt;a href=&quot;http://www.intertwingly.net/wiki/pie/&quot;\n class=&quot;moz-txt-link-freetext&quot;&gt;http://www.intertwingly.net/wiki/pie/&lt;/a&gt;&lt;br&gt;\n[2] &lt;a\n href=&quot;http://bitworking.org/projects/atom/draft-gregorio-09.html#Edit&quot;\n class=&quot;moz-txt-link-freetext&quot;&gt;http://bitworking.org/projects/atom/draft-gregorio-09.html#Edit&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&quot;Walden Mathews&quot; wrote:&lt;br&gt;\n&lt;blockquote cite=&quot;mid002001c3c0b8$1014a610$0902a8c0@ATTIC56COVE&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;Seairth,\n\nA good way to answer this might be to list the constraints from\nthe REST architecture which you feel may have been violated,\nwith citations from the architecture document itself [1].  Have you\ntried that?\n\nThanks,\nWalden\n\n[1] &lt;a\n href=&quot;http://www.ics.uci.edu/%7Efielding/pubs/dissertation/top.htm&quot;\n class=&quot;moz-txt-link-freetext&quot;&gt;http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&lt;/a&gt;\n\n----- Original Message ----- \nFrom: &quot;Seairth Jacobs&quot; &lt;a\n href=&quot;mailto:seairth@...&quot; class=&quot;moz-txt-link-rfc2396E&quot;&gt;&lt;seairth@...&gt;&lt;/a&gt;\nTo: &quot;rest-discuss&quot; &lt;a\n href=&quot;mailto:rest-discuss@yahoogroups.com&quot;\n class=&quot;moz-txt-link-rfc2396E&quot;&gt;&lt;rest-discuss@yahoogroups.com&gt;&lt;/a&gt;\nSent: Friday, December 12, 2003 8:27 AM\nSubject: [rest-discuss] PUT question\n\n\n: I am still unclear on something about PUT.  Suppose I PUT the following:\n:\n:\n: &lt;elem1&gt;\n:     &lt;elem2&gt;Value&lt;/elem2&gt;\n: &lt;/elem1&gt;\n:\n: Now, suppose that an immediate GET returns:\n:\n: &lt;elem1&gt;\n:     &lt;elem2&gt;Value&lt;/elem2&gt;\n:     &lt;elem3&gt;Value2&lt;/elem3&gt;\n: &lt;/elem1&gt;\n:\n: One additional constraint is that the client that did the PUT only\n: understands/processes &lt;elem1&gt; and &lt;elem2&gt;, ignoring all others.  As a\n: result, the client&#39;s behavior for the PUT version and the GET version is\n: exactly the same.  Is this RESTful?  Half of me says &quot;yes&quot; because the\n: client doesn&#39;t see any difference between the two representations, and\n: the other half says &quot;no&quot; because it isn&#39;t exactly the same (as a\n: generalized xml document, ignoring byte-wise comparison).\n:\n: Thoughts?\n:\n: Seairth\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------030607070702090205090109--\r\n\n"}}