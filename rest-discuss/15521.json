{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"2mn_uPbUI3tAKOBoEeIU681E5oXvzNDFAdERYNchFLCdN96aBe0swWZ4QPWNpo4WwagMHABsql9aZCnkO3l8m7kByyA_SaWOH6Y","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS","postDate":"1275529592","msgId":15521,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGltR2FFaHJCOUhVbm5LVjlBNGhMMTBaWlFzcUotUEVTWkNyYThtOUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlsdHVEOVczbWs0ejZLVWJPYW1BVXByS1RubGdjMUN1TXB3aVFhU0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlraVhveXd6dDEwTTQ4NGowY2ZaRVJRbjZqLUdUYkFsV0pEY2RNOUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlueFJUNUdvRm1sb2E4UEQtY3VLblYzQVBQMkprR0x6bjA3a25iMEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlsdHVEOVczbWs0ejZLVWJPYW1BVXByS1RubGdjMUN1TXB3aVFhU0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15520,"nextInTopic":15522,"prevInTime":15520,"nextInTime":15522,"topicId":15518,"numMessagesInTopic":11,"msgSnippet":"This was an over simplification. As I mentioned there is quite a bit of processing going on, this was just one example of rules becoming more scalable. I also","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48875 invoked from network); 3 Jun 2010 01:46:33 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 3 Jun 2010 01:46:33 -0000\r\nX-Received: from unknown (HELO mail-gy0-f170.google.com) (209.85.160.170)\n  by mta1.grp.sp2.yahoo.com with SMTP; 3 Jun 2010 01:46:33 -0000\r\nX-Received: by gyf2 with SMTP id 2so6349274gyf.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 02 Jun 2010 18:46:33 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.218.19 with SMTP id ho19mr1707833qcb.143.1275529592912; \n\tWed, 02 Jun 2010 18:46:32 -0700 (PDT)\r\nX-Received: by 10.229.232.5 with HTTP; Wed, 2 Jun 2010 18:46:32 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTiltuD9W3mk4z6KUbOamAUprKTnlgc1CuMpwiQaS@...&gt;\r\nReferences: &lt;AANLkTikiXoywzt10M484j0cfZERQn6j-GTbAlWJDcdM9@...&gt;\n\t&lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\n\t&lt;AANLkTiltuD9W3mk4z6KUbOamAUprKTnlgc1CuMpwiQaS@...&gt;\r\nDate: Wed, 2 Jun 2010 18:46:32 -0700\r\nMessage-ID: &lt;AANLkTimGaEhrB9HUnnKV9A4hL10ZZQsqJ-PESZCra8m9@...&gt;\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016363b826a493ca0048816600e\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS\r\nX-Yahoo-Group-Post: member; u=210009313; y=WCDFsY4rulpdQz77L0sm-PNUcTPrpHinsRlKylElagFuDIekF0g\r\nX-Yahoo-Profile: glenn_block\r\n\r\n\r\n--0016363b826a493ca0048816600e\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nThis was an over simplification. As I mentioned there is quite a bit of\nprocessing going on, this was just one example of rules becoming more\nscalable. I also am not proposing any inspection of URIs. Instead I am\nsimply saying that the hypermedia is driving the processing.\n\nRegars\nGlenn\n\nOn Wed, Jun 2, 2010 at 6:41 PM, Will Hartung &lt;willh@...&gt; wrote:\n\n&gt; At that level,  your client is &quot;pretty stupid&quot;. It&#39;s simply iterating\n&gt; through links in some pre-determined manner. May as well smash the &quot;Next\n&gt; Line&quot; button in your debugger.\n&gt;\n&gt; That&#39;s not, IMHO, what HATEOS is about, even, heck, especially, in m2m\n&gt; scenarios.\n&gt;\n&gt; HATEOS allows for several things.\n&gt;\n&gt; It allows for URI to be truly opaque. Simply, beyond a few well defined,\n&gt; &quot;cool URI&quot; entry points, you never need to create, or generate a URI. They\n&gt; are all given to you by the application. So, you can easily see, for\n&gt; example, an application at sales.example.com directing you to\n&gt; receiving.example.com, without your system even being aware of it --\n&gt; because your system never needs to look inside of the URIs.\n&gt;\n&gt; Why is it going to receiving.example.com? Who cares. That&#39;s not your\n&gt; concern. What is your concern is that the URI responds properly as the\n&gt; define media type said it would respond (i.e. when you go to the #shipping\n&gt; rel, with a xml/vnd.shipping document, the Right Stuff happens). Meanwhile\n&gt; the backend has all sorts of flexibility regarding allocation of resources,\n&gt; application distribution, etc.\n&gt;\n&gt; Second, HATEOS allows for extensible interfaces. For example, say that the\n&gt; company now offers Express Shipping. If it&#39;s media type is extensible enough\n&gt; (and it&#39;s not difficult to do this), they can simply add a properly flagged\n&gt; rel to expressshippping.example.com in the data.\n&gt;\n&gt; Now, your application will completely ignore Express Shipping. It has NO\n&gt; IDEA what Express Shipping is, what to do with it, when to call it. It&#39;s\n&gt; just a dumb computer application.\n&gt;\n&gt; But that&#39;s ok, because someone else read the latest documention, saw the\n&gt; update, decided they liked express shipping, and added support to their\n&gt; client. YOUR &quot;outdated&quot; client continues to function as it should, since the\n&gt; change made doesn&#39;t break backward compatibility. Meanwhile, update clients\n&gt; get to leverage the new functionality.\n&gt;\n&gt; This evolutionary API approach can be very robust, allowing system to\n&gt; upgrade and migrate gracefully.\n&gt;\n&gt; If and when some functionality get REMOVED from the system, then your\n&gt; system will start faulting because the #oldfeature rel is no longer in the\n&gt; payload. Your code said &quot;send data.xml to #oldfeature rel&quot;, and it failed.\n&gt; &quot;method not found&quot;, whatever. There is no URI to access. At this point you\n&gt; get a exploding error log and your phone rings asking why it suddenly stops\n&gt; working.\n&gt;\n&gt; Turns out, not a whole lot you can do about that. Perhaps you weren&#39;t on\n&gt; the mailing list discussing the changes. Perhaps the service provider were\n&gt; complete jerks and just yanked the API out from under you. But there you\n&gt; are.\n&gt;\n&gt; However, this is no different than any other procedure. You tell your\n&gt; assistant &quot;go to this site, buy pencils and click on the express shipping\n&gt; button&quot;. Then you get a call &quot;I can&#39;t find the express shipping button. What\n&gt; do I do now?&quot; Indeed, what does she do.\n&gt;\n&gt; What she does, or you do, is you read the screen and see perhaps what you\n&gt; can do instead, find some other button to push, some option to check. You\n&gt; relearn the API on the fly.\n&gt;\n&gt; The M2M machine can&#39;t do that, but you, the developer, can read the payload\n&gt; and try to reinterpret it, follow (ideally embedded) links to API docs, or\n&gt; whatever and fix your client.\n&gt;\n&gt; The only difference between the M2M client and the human client is that the\n&gt; human tends to be a bit more flexible and adaptable to changes, but you can\n&gt; see situations where even humans aren&#39;t that flexible. M2M programs need to\n&gt; be recoded to affect change. Humans need to make decisions or delegate and\n&gt; get referrals to make decisions (&quot;There&#39;s Turbo Shipping, should I click\n&gt; that instead?&quot;).\n&gt;\n&gt; HATEOS allows more separation and more abstractions. It helps remove\n&gt; assumption. You don&#39;t code your system to hit the order.example.com URI\n&gt; and then immediately followed by expressshipping.example.com, ASSUMING\n&gt; that it&#39;s the logical, appropriate, next step.\n&gt;\n&gt; No, the application TELLS you what the appropriate next steps are, and\n&gt; leads your client program through the process appropriately.\n&gt;\n&gt; IMHO it keeps both clients and server more flexible and more robust\n&gt; assuming properly written clients and servers.\n&gt;\n&gt; Regards,\n&gt;\n&gt; Will Hartung\n&gt;\n&gt;\n\r\n--0016363b826a493ca0048816600e\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div&gt;This was an over simplification. As I mentioned there is quite a bit o=\r\nf processing going on, this was just one example of rules becoming more sca=\r\nlable. I also am not proposing any inspection of URIs. Instead I am simply =\r\nsaying that the hypermedia is driving the processing.&lt;/div&gt;\n\n&lt;div&gt;=A0&lt;/div&gt;=\r\n\n&lt;div&gt;Regars&lt;/div&gt;\n&lt;div&gt;Glenn&lt;br&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On W=\r\ned, Jun 2, 2010 at 6:41 PM, Will Hartung &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;m=\r\nailto:willh@...&quot;&gt;willh@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;b=\r\nlockquote style=3D&quot;BORDER-LEFT: #ccc 1px solid; MARGIN: 0px 0px 0px 0.8ex; =\r\nPADDING-LEFT: 1ex&quot; class=3D&quot;gmail_quote&quot;&gt;At that level, =A0your client is &=\r\nquot;pretty stupid&quot;. It&#39;s simply iterating through links in some p=\r\nre-determined manner. May as well smash the &quot;Next Line&quot; button in=\r\n your debugger. \n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;That&#39;s not, IMHO, what HATEOS is =\r\nabout, even, heck, especially, in m2m scenarios.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div=\r\n&gt;HATEOS allows for several things.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;It allows for=\r\n URI to be truly opaque. Simply, beyond a few well defined, &quot;cool URI&=\r\nquot; entry points, you never need to create, or generate a URI. They are a=\r\nll given to you by the application. So, you can easily see, for example, an=\r\n application at &lt;a href=3D&quot;http://sales.example.com/&quot; target=3D&quot;_blank&quot;&gt;sal=\r\nes.example.com&lt;/a&gt; directing you to &lt;a href=3D&quot;http://receiving.example.com=\r\n/&quot; target=3D&quot;_blank&quot;&gt;receiving.example.com&lt;/a&gt;, without your system even be=\r\ning aware of it -- because your system never needs to look inside of the UR=\r\nIs.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;Why is it going to &lt;a href=3D&quot;http://receiv=\r\ning.example.com/&quot; target=3D&quot;_blank&quot;&gt;receiving.example.com&lt;/a&gt;? Who cares. T=\r\nhat&#39;s not your concern. What is your concern is that the URI responds p=\r\nroperly as the define media type said it would respond (i.e. when you go to=\r\n the #shipping rel, with a xml/vnd.shipping document, the Right Stuff happe=\r\nns). Meanwhile the backend has all sorts of flexibility regarding allocatio=\r\nn of resources, application distribution, etc.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;=\r\nSecond, HATEOS allows for extensible interfaces. For example, say that the =\r\ncompany now offers Express Shipping. If it&#39;s media type is extensible e=\r\nnough (and it&#39;s not difficult to do this), they can simply add a proper=\r\nly flagged rel to &lt;a href=3D&quot;http://expressshippping.example.com/&quot; target=\r\n=3D&quot;_blank&quot;&gt;expressshippping.example.com&lt;/a&gt; in the data.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;\n&lt;div&gt;Now, your application will completely ignore Express Shipping. I=\r\nt has NO IDEA what Express Shipping is, what to do with it, when to call it=\r\n. It&#39;s just a dumb computer application.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;But=\r\n that&#39;s ok, because someone else read the latest documention, saw the u=\r\npdate, decided they liked express shipping, and added support to their clie=\r\nnt. YOUR &quot;outdated&quot; client continues to function as it should, si=\r\nnce the change made doesn&#39;t break backward compatibility. Meanwhile, up=\r\ndate clients get to leverage the new functionality.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n=\r\n&lt;div&gt;This evolutionary API approach can be very robust, allowing system to =\r\nupgrade and migrate gracefully.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;If and when some=\r\n functionality get REMOVED from the system, then your system will start fau=\r\nlting because the #oldfeature rel is no longer in the payload. Your code sa=\r\nid &quot;send data.xml to #oldfeature rel&quot;, and it failed. &quot;metho=\r\nd not found&quot;, whatever. There is no URI to access. At this point you g=\r\net a exploding error log and your phone rings asking why it suddenly stops =\r\nworking.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;Turns out, not a whole lot you can do =\r\nabout that. Perhaps you weren&#39;t on the mailing list discussing the chan=\r\nges. Perhaps the service provider were complete jerks and just yanked the A=\r\nPI out from under you. But there you are.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;Howev=\r\ner, this is no different than any other procedure. You tell your assistant =\r\n&quot;go to this site, buy pencils and click on the express shipping button=\r\n&quot;. Then you get a call &quot;I can&#39;t find the express shipping but=\r\nton. What do I do now?&quot; Indeed, what does she do.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;\n&lt;div&gt;What she does, or you do, is you read the screen and see perhaps wh=\r\nat you can do instead, find some other button to push, some option to check=\r\n. You relearn the API on the fly.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;The M2M machin=\r\ne can&#39;t do that, but you, the developer, can read the payload and try t=\r\no reinterpret it, follow (ideally embedded) links to API docs, or whatever =\r\nand fix your client.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;The only difference between=\r\n the M2M client and the human client is that the human tends to be a bit mo=\r\nre flexible and adaptable to changes, but you can see situations where even=\r\n humans aren&#39;t that flexible. M2M programs need to be recoded to affect=\r\n change. Humans need to make decisions or delegate and get referrals to mak=\r\ne decisions (&quot;There&#39;s Turbo Shipping, should I click that instead?=\r\n&quot;).&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;HATEOS allows more separation and more=\r\n abstractions. It helps remove assumption. You don&#39;t code your system t=\r\no hit the &lt;a href=3D&quot;http://order.example.com/&quot; target=3D&quot;_blank&quot;&gt;order.exa=\r\nmple.com&lt;/a&gt; URI and then immediately followed by &lt;a href=3D&quot;http://express=\r\nshipping.example.com/&quot; target=3D&quot;_blank&quot;&gt;expressshipping.example.com&lt;/a&gt;, A=\r\nSSUMING that it&#39;s the logical, appropriate, next step.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;=\r\n&lt;/div&gt;\n&lt;div&gt;No, the application TELLS you what the appropriate next steps a=\r\nre, and leads your client program through the process appropriately.=A0&lt;/di=\r\nv&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;IMHO it keeps both clients and server more flexible=\r\n and more robust assuming properly written clients and servers.&lt;/div&gt;\n&lt;div&gt;=\r\n&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;Regards,&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font color=3D&quot;#888888&quot;&gt;\n&lt;div=\r\n&gt;Will Hartung&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0016363b826a493ca0048816600e--\r\n\n"}}