{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"dt7YvwNkqr2DEEBf7NGnYgTO0iXDxdXWtPlNImAyJ_T1QfaswmNwJzEKNPwY5ATdXLbqc89T96RCegQtwAqn1jOWjnZoZQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"OOP and object models","postDate":"1039052631","msgId":2989,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNERUVBRjU3LjEwOEBwcmVzY29kLm5ldD4=","inReplyToHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVFOTVAY2xpZmZvcmQuZGV2by5pbHguY29tPg==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVFOTVAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2987,"nextInTopic":2990,"prevInTime":2988,"nextInTime":2990,"topicId":2908,"numMessagesInTopic":50,"msgSnippet":"... I ve always seen polymorphism as being the core feature of the behaviour part of Identity, State, Behaviour. Objects carry around their behaviour.","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 5 Dec 2002 01:46:20 -0000\r\nReceived: (qmail 80048 invoked from network); 5 Dec 2002 01:46:20 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m3.grp.scd.yahoo.com with QMQP; 5 Dec 2002 01:46:20 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.scd.yahoo.com with SMTP; 5 Dec 2002 01:46:20 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.12.6/8.12.6) with ESMTP id gB51hq76024700;\n\tWed, 4 Dec 2002 17:43:52 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id gB51hqp25293;\n\tWed, 4 Dec 2002 17:43:52 -0800\r\nMessage-ID: &lt;3DEEAF57.108@...&gt;\r\nDate: Wed, 04 Dec 2002 17:43:51 -0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.2b) Gecko/20021016\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: &quot;Mathews, Walden&quot; &lt;walden.mathews@...&gt;\r\nCc: =?ISO-8859-1?Q?Bill_de_h=D3ra?= &lt;dehora@...&gt;,\n   &quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;,\n   rest-discuss@yahoogroups.com\r\nSubject: OOP and object models\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F64045EEE95@...&gt;\r\nIn-Reply-To: &lt;1373D6342FA1D4119A5100E029437F64045EEE95@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nMathews, Walden wrote:\n\n&gt; Terminology strikes again.  Object models and object oriented\n&gt; programming have separate lives, according to what I read.  Bill\n&gt; is talking about polymorphic method resolution, which is one\n&gt; feature of OO (the programming thing), while Paul&#39;s description\n&gt; of &quot;identity, state and behavior&quot; is the /sine qua non/ of the\n&gt; object model.\n\n\nI&#39;ve always seen polymorphism as being the core feature of the \n&quot;behaviour&quot; part of Identity, State, Behaviour. Objects carry around \ntheir behaviour. Structs, XML documents, RDF graphs and other &quot;pure data \nstructures&quot; do not.\n\n  Paul Prescod\n\n\n\n"}}