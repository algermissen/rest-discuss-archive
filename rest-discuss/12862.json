{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63369774,"authorName":"Eric Newcomer","from":"Eric Newcomer &lt;e_newcomer@...&gt;","profile":"e_newcomer","replyTo":"SENDER","senderId":"vfAOLCpIL6aG1cJAs3wDimPioFxp95TzOQJxnH1aiYfY4PwQN0eyS8XXbpn8g-CAxyPEPxYJyAKNN-5sFhZS1KJehdw_3L5dzeIX","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] rest transactions","postDate":"1244637103","msgId":12862,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzODU5LjQwMjM2LnFtQHdlYjM3NTA2Lm1haWwubXVkLnlhaG9vLmNvbT4=","inReplyToHeader":"PDNFMDE3RkVCLTNDQUYtNEQ1My1CMEZCLTg4RjUyMjU0RkI3RkB5YWhvby5jby51az4=","referencesHeader":"PDRBMjU0OEZFLjgwOTAxMDVAcmVkaGF0LmNvbT4gPDM0M2VjYjNlMDkwNjAyMDkwN20yOWQ5OThjNWtlY2QzZTk1M2RhN2I2Y2Y5QG1haWwuZ21haWwuY29tPiA8Q0E4M0NGRTUtNUY0RC00MEEzLUEwOTYtQUYwODE1QTBFNzNEQHlhaG9vLmNvLnVrPiA8MzQzZWNiM2UwOTA2MDcwNTI5aDcyN2FhZDkxbDRiNDAzN2MxYmI0MzBlZEBtYWlsLmdtYWlsLmNvbT4gPEJCNUJEQjVDLUQyRkEtNDY2Ni1COUFBLTRENUFDRDMzRTQyREB5YWhvby5jby51az4gPDM0M2VjYjNlMDkwNjA5MDYyN3cxZjUzYTM5ZXFlZmRkNThjOTBlNTVhNDM5QG1haWwuZ21haWwuY29tPiA8REVENjUzNjgtRDk2Ny00MkY3LTk0NDUtNDY5ODRCMzE1QkREQHlhaG9vLmNvLnVrPiA8MjI4MjMxNDUtNDVCNi00NjQ4LTk3M0UtQ0Y3NzFDNjBCOUQyQGdiaXYuY29tPiA8QzhDOTc5OEUtREY3Ni00MDFDLUFBNzgtMjRDMzlBNkE0Qjc0QGlubm9xLmNvbT4gPDEwOEM2RDdBLUFBODktNEE1OS04MUYwLTA4RUNFM0JCQ0E0Q0BnYml2LmNvbT4gPDM0M2VjYjNlMDkwNjA5MTIxMHEyMTIxZWQ1MnUxZDY2NWRhMjQxNzcwNjU0QG1haWwuZ21haWwuY29tPiA8M0UwMTdGRUItM0NBRi00RDUzLUIwRkItODhGNTIyNTRGQjdGQHlhaG9vLmNvLnVrPg=="},"prevInTopic":12861,"nextInTopic":12863,"prevInTime":12861,"nextInTime":12863,"topicId":12727,"numMessagesInTopic":54,"msgSnippet":"It does seem like a good idea to have an independent coordinator capable of notifying a group of participants (e.g. transactional resources) about an outcome","rawEmail":"Return-Path: &lt;e_newcomer@...&gt;\r\nX-Sender: e_newcomer@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47627 invoked from network); 10 Jun 2009 12:32:46 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m5.grp.sp2.yahoo.com with QMQP; 10 Jun 2009 12:32:46 -0000\r\nX-Received: from unknown (HELO web37506.mail.mud.yahoo.com) (209.191.91.153)\n  by mta1.grp.re1.yahoo.com with SMTP; 10 Jun 2009 12:32:46 -0000\r\nX-Received: (qmail 40266 invoked by uid 60001); 10 Jun 2009 12:31:44 -0000\r\nMessage-ID: &lt;53859.40236.qm@...&gt;\r\nX-YMail-OSG: T0XnHPsVM1mIqtVfEFom8l7Md2hjCNZFVn2ylCqcaLOUqcM7Y7ePBdZ7I8CzHG9Y4YlFccJ22apGuXOe7Uyx1_oSucJhnRbeHC2SX3WDX6C7mochRq.voNSbc1VKGl5mAcCiQfWGJLGNzdGs2Pv3eSQyH3EuaXRl9cZVcosGLv9XNX5hUFLpz2LuCPY.TI83Ya2rGPTwRNkZaXK1h2frj4wXza5JjWjPxApEsDhJamYn8.FFKhXblq3QzZmoYjNPvmXIr1fvl870I30hmpA3IRyF7h792RtX6UdZo6YytA2vZbSyx0C9lK5RvalgngXlwQyeVP8RXfTIvYuA_6aXro2vxKjPyc3CHzxzlx2g\r\nX-Received: from [66.189.89.220] by web37506.mail.mud.yahoo.com via HTTP; Wed, 10 Jun 2009 05:31:43 PDT\r\nX-Mailer: YahooMailRC/1357.17 YahooMailWebService/0.7.289.15\r\nReferences: &lt;4A2548FE.8090105@...&gt; &lt;343ecb3e0906020907m29d998c5kecd3e953da7b6cf9@...&gt; &lt;CA83CFE5-5F4D-40A3-A096-AF0815A0E73D@...&gt; &lt;343ecb3e0906070529h727aad91l4b4037c1bb430ed@...&gt; &lt;BB5BDB5C-D2FA-4666-B9AA-4D5ACD33E42D@...&gt; &lt;343ecb3e0906090627w1f53a39eqefdd58c90e55a439@...&gt; &lt;DED65368-D967-42F7-9445-46984B315BDD@...&gt; &lt;22823145-45B6-4648-973E-CF771C60B9D2@...&gt; &lt;C8C9798E-DF76-401C-AA78-24C39A6A4B74@...&gt; &lt;108C6D7A-AA89-4A59-81F0-08ECE3BBCA4C@...&gt; &lt;343ecb3e0906091210q2121ed52u1d665da241770654@...&gt; &lt;3E017FEB-3CAF-4D53-B0FB-88F52254FB7F@...&gt;\r\nDate: Wed, 10 Jun 2009 05:31:43 -0700 (PDT)\r\nTo: Mark Little &lt;nmcl2001@...&gt;, Bob Haugen &lt;bob.haugen@...&gt;\r\nCc: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;,\n  Stefan Tilkov &lt;stefan.tilkov@...&gt;,\n  REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;3E017FEB-3CAF-4D53-B0FB-88F52254FB7F@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-2006477343-1244637103=:40236&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Eric Newcomer &lt;e_newcomer@...&gt;\r\nSubject: Re: [rest-discuss] rest transactions\r\nX-Yahoo-Group-Post: member; u=63369774; y=vc9cEn9dy8AXnkBHqlsW7nZ3qSA7lix-53e4kpFzLO9uYRD22w\r\nX-Yahoo-Profile: e_newcomer\r\n\r\n\r\n--0-2006477343-1244637103=:40236\r\nContent-Type: text/plain; charset=us-ascii\r\n\r\nIt does seem like a good idea to have an independent &quot;coordinator&quot; capable of notifying a group of participants (e.g. transactional resources) about an outcome of potential significance to all participants...  That seems like a very logical extension of the RESTful model.\n\nEric\n\n\n\n\n________________________________\nFrom: Mark Little &lt;nmcl2001@...&gt;\nTo: Bob Haugen &lt;bob.haugen@...&gt;\nCc: Roy T. Fielding &lt;fielding@...&gt;; Stefan Tilkov &lt;stefan.tilkov@...&gt;; REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\nSent: Wednesday, June 10, 2009 4:40:51 AM\nSubject: Re: [rest-discuss] rest transactions\n\n\n\n\n\nFirst let&#39;s ignore ACID transactions. We can have a separate \ndiscussion about whether or not ACID makes sense in the context of \nREST in the same way there have been long discussions about whether or \nnot it makes sense in the concept of SOA or Web Services.\n\nSecond I think we&#39;re in agreement concerning not talking about the \nclient having to be aware of anything to do with the transaction. The \nact of &quot;start&quot; and &quot;commit&quot; (for want of some terms) is an implicit \nact by the client visiting specific pages/traverses specific links.\n\nTherefore what we&#39;re talking about here are extended transactions, \nwhere the various ACID properties have been relaxed in a controlled \nmanner, e.g., no atomicity guarantees, no requirement for durability. \nAlthough I think the scenario you outline is valid, here&#39;s another one \nto throw out there (there are others). Let&#39;s consider a scenario where \na client visits a number of different web sites, let&#39;s call them A, B \nand C. Now the act of visiting A, B and C cause state changes within \nthese services which may be reflected at the client in the form of \ndifferent pages/links to then traverse. In fact let&#39;s assume that the \nact of visiting A then causes the client to go to B and that \nsubsequently causes the client to visit C. It&#39;s possible that if the \nclient followed a different set of options then A may be followed by D \nand then E. Further let&#39;s assume that the work done at A, B and C is \nactually done, i.e., not provisional. One way to think about this is \nthat visiting B is &quot;the result&quot; of &quot;doing&quot; A and C is the same for B. \nAlso undoing the business transaction obviously doesn&#39;t have the same \naffect as a rollback on an ACID transaction, where the work is \nprovisional and typically we try hard not to expose dirty data to \nconcurrent users.\n\nNow each of these individual state changes are not coordinated, so if \nwe have a failure during C, the changes made at A and B remain in \neffect and the user has to solicit some compensation through another \nmedium if necessary, e.g., the phone or email (&quot;give me my money \nback.&quot;) Let&#39;s assume that we want to undo everything at A, B and C if \nwe don&#39;t get a success from C, but if we do get past C then failures \nat B aren&#39;t important to us, i.e., the transaction can be considered \nto &quot;commit&quot; as long as A and C are successfully applied, but it is \nonly allowed to attempt to &quot;commit&quot;/complete if C is available.\n\nIt&#39;s possible that the state changes at A, B and C could be \ncoordinated through some ad hoc approach, e.g., some session \ninformation embedded opaquely in the client response that allows each \nsite to know it&#39;s the same session (aka transaction in this case). In \nthat case the state changes for A and B could be undone if C fails and \nunder some well defined rules, e.g., that A and B don&#39;t hear from C \nwithin some predetermined period of time. But that protocol needs to \nbe defined. Another approach is to say that the coordinator/ service \ninteraction is entirely a back-end problem: somehow resources \nrepresenting A, B and C need to interact with each other (and \npresumably a coordinator) through some out-of-band protocol of which \nthe client is unaware. There are various problems with this, including \nthe fact that it means A, B and C somehow need to know they are within \nthe same transaction, where the coordinator is located, etc. Nothing \ninsurmountable, but maybe there&#39;s a better way?\n\nSo, another option is the following: when the client first visits A \nthat implicitly starts the transaction and enlists a resource at A \nwith some coordinator residing elsewhere (the way in which the \ncoordinator is manipulated is RESTful too, creating a resource that \nrepresents the transaction in question.) The client then gets to B, \nwhich obtains the transaction URI through the client interaction and \ndoes likewise with its own participant, before moving the state of the \nsystem (and client) on to C. Finally when the client is finished it \nclicks a &quot;complete&quot; link that ends the business transaction and as a \nresult instructs the transaction resource to do nothing in this case \n(success). However, if the client clicked the &quot;undo all&quot; or maybe \n&quot;undo B&quot; then the state change at B is undone, ultimately driving the \nclient to, say, C1. If there are failures, e.g., the client doesn&#39;t \nget to C, then the transaction may undo all of the work done by A and \nB automatically, or it may leave them as-is (typically defined by the \ncontract defined within the business transaction, set, say, by A if \nit&#39;s the initiator.)\n\nMark.\n\nOn 9 Jun 2009, at 20:10, Bob Haugen wrote:\n\n&gt; Here&#39;s a very sketchy version of what I had in mind:\n&gt;\n&gt; The scenario is an etailer getting bids, and then placing an order\n&gt; with the lowest bidder.\n&gt;\n&gt; The etailer POSTs a Request For Quotation (Amazon called these Request\n&gt; For Commitment in one meeting) to the appropriate URI of a few\n&gt; suppliers.  The RFQ contains a URI for the suppliers to POST a Quote\n&gt; in response.  Each Quote contains a URI (or two) for the etailer to\n&gt; follow up with an order or a rejection.\n&gt;\n&gt; The etailer then POSTs an order (still in a provisional state) to the\n&gt; successful bidder&#39;s URI. The order contains a URI for the supplier to\n&gt; accept the order, and maybe a URI for the supplier to decline the\n&gt; order if something has happened in the meantime that has made\n&gt; fulfillment impossible.\n&gt;\n&gt; When the etailer gets an acceptance from the supplier, the etailer\n&gt; might send rejection notices to the failed bidders.\n&gt;\n&gt; I&#39;m sure Mark Little could suggest several refinements, but this is\n&gt; just a sketch for discussion purposes.\n&gt;\n&gt; It&#39;s a 2-phase commit agreement scenario, but not ACID:  it&#39;s not\n&gt; Atomic, and the individual resources are not Isolated.\n&gt;\n&gt; Both the etailer and the suppliers play both client and server roles.\n&gt; Each message contains a URI or two for responses, where the recipient\n&gt; of a message will (possibly in a separate process) POST a response.\n&gt;\n&gt; My questions for Roy and this group:\n&gt;\n&gt; 1. Is this scenario RESTful?\n&gt;\n&gt; 2. If not, could it be made RESTful with some changes?\n&gt;\n&gt; 3. What else is wrong with it?\n&gt;\n&gt; Question for Mark:  what&#39;s wrong with it from a transaction protocol \n&gt; viewpoint?\n&gt;\n&gt; Thanks,\n&gt; Bob Haugen\n&gt;\n&gt;\n&gt; ------------ --------- --------- ------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n   \n\n\n      \r\n--0-2006477343-1244637103=:40236\r\nContent-Type: text/html; charset=us-ascii\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;&lt;!-- DIV {margin:0px;} --&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=&quot;font-family:times new roman,new york,times,serif;font-size:10pt&quot;&gt;&lt;div&gt;It does seem like a good idea to have an independent &quot;coordinator&quot; capable of notifying a group of participants (e.g. transactional resources) about an outcome of potential significance to all participants...&nbsp; That seems like a very logical extension of the RESTful model.&lt;br&gt;&lt;br&gt;Eric &lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-family: times new roman,new york,times,serif; font-size: 10pt;&quot;&gt;&lt;br&gt;&lt;div style=&quot;border-left: 2px solid rgb(16, 16, 255); margin: 5px 0px 5px 5px; padding-left: 5px; font-family: times new roman,new york,times,serif; font-size: 12pt;&quot;&gt;&lt;font face=&quot;Tahoma&quot; size=&quot;2&quot;&gt;&lt;hr size=&quot;1&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;From:&lt;/span&gt;&lt;/b&gt; Mark Little &lt;nmcl2001@...&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;To:&lt;/span&gt;&lt;/b&gt; Bob Haugen &lt;bob.haugen@...&gt;&lt;br&gt;&lt;b&gt;&lt;span\n style=&quot;font-weight: bold;&quot;&gt;Cc:&lt;/span&gt;&lt;/b&gt; Roy T. Fielding &lt;fielding@...&gt;; Stefan Tilkov &lt;stefan.tilkov@...&gt;; REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;Sent:&lt;/span&gt;&lt;/b&gt; Wednesday, June 10, 2009 4:40:51 AM&lt;br&gt;&lt;b&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;Subject:&lt;/span&gt;&lt;/b&gt; Re: [rest-discuss] rest transactions&lt;br&gt;&lt;/font&gt;&lt;br&gt;\n\n\n\n\n\n\n\n\n\n    &lt;div id=&quot;ygrp-text&quot;&gt;\n      \n      &lt;p&gt;First let&#39;s ignore ACID transactions. We can have a separate  &lt;br&gt;\ndiscussion about whether or not ACID makes sense in the context of  &lt;br&gt;\nREST in the same way there have been long discussions about whether or  &lt;br&gt;\nnot it makes sense in the concept of SOA or Web Services.&lt;br&gt;\n&lt;br&gt;\nSecond I think we&#39;re in agreement concerning not talking about the  &lt;br&gt;\nclient having to be aware of anything to do with the transaction. The  &lt;br&gt;\nact of &quot;start&quot; and &quot;commit&quot; (for want of some terms) is an implicit  &lt;br&gt;\nact by the client visiting specific pages/traverses specific links.&lt;br&gt;\n&lt;br&gt;\nTherefore what we&#39;re talking about here are extended transactions,  &lt;br&gt;\nwhere the various ACID properties have been relaxed in a controlled  &lt;br&gt;\nmanner, e.g., no atomicity guarantees, no requirement for durability.  &lt;br&gt;\nAlthough I think the scenario you outline is valid, here&#39;s another one  &lt;br&gt;\nto throw out there (there are others). Let&#39;s consider a scenario where  &lt;br&gt;\na client visits a number of different web sites, let&#39;s call them A, B  &lt;br&gt;\nand C. Now the act of visiting A, B and C cause state changes within  &lt;br&gt;\nthese services which may be reflected at the client in the form of  &lt;br&gt;\ndifferent pages/links to then traverse. In fact let&#39;s assume that the  &lt;br&gt;\nact of visiting A then causes the client to go to B and that  &lt;br&gt;\nsubsequently causes the client to visit C. It&#39;s possible that if the  &lt;br&gt;\nclient followed a different set of options then A may be followed by D  &lt;br&gt;\nand then E. Further let&#39;s assume that the work done at A, B and C is  &lt;br&gt;\nactually done, i.e., not provisional. One way to think about this is  &lt;br&gt;\nthat visiting B is &quot;the result&quot; of &quot;doing&quot; A and C is the same for B.  &lt;br&gt;\nAlso undoing the business transaction obviously doesn&#39;t have the same  &lt;br&gt;\naffect as a rollback on an ACID transaction, where the work is  &lt;br&gt;\nprovisional and typically we try hard not to expose dirty data to  &lt;br&gt;\nconcurrent users.&lt;br&gt;\n&lt;br&gt;\nNow each of these individual state changes are not coordinated, so if  &lt;br&gt;\nwe have a failure during C, the changes made at A and B remain in  &lt;br&gt;\neffect and the user has to solicit some compensation through another  &lt;br&gt;\nmedium if necessary, e.g., the phone or email (&quot;give me my money  &lt;br&gt;\nback.&quot;) Let&#39;s assume that we want to undo everything at A, B and C if  &lt;br&gt;\nwe don&#39;t get a success from C, but if we do get past C then failures  &lt;br&gt;\nat B aren&#39;t important to us, i.e., the transaction can be considered  &lt;br&gt;\nto &quot;commit&quot; as long as A and C are successfully applied, but it is  &lt;br&gt;\nonly allowed to attempt to &quot;commit&quot;/complete if C is available.&lt;br&gt;\n&lt;br&gt;\nIt&#39;s possible that the state changes at A, B and C could be  &lt;br&gt;\ncoordinated through some ad hoc approach, e.g., some session  &lt;br&gt;\ninformation embedded opaquely in the client response that allows each  &lt;br&gt;\nsite to know it&#39;s the same session (aka transaction in this case). In  &lt;br&gt;\nthat case the state changes for A and B could be undone if C fails and  &lt;br&gt;\nunder some well defined rules, e.g., that A and B don&#39;t hear from C  &lt;br&gt;\nwithin some predetermined period of time. But that protocol needs to  &lt;br&gt;\nbe defined. Another approach is to say that the coordinator/ service  &lt;br&gt;\ninteraction is entirely a back-end problem: somehow resources  &lt;br&gt;\nrepresenting A, B and C need to interact with each other (and  &lt;br&gt;\npresumably a coordinator) through some out-of-band protocol of which  &lt;br&gt;\nthe client is unaware. There are various problems with this, including  &lt;br&gt;\nthe fact that it means A, B and C somehow need to know they are within  &lt;br&gt;\nthe same transaction, where the coordinator is located, etc. Nothing  &lt;br&gt;\ninsurmountable, but maybe there&#39;s a better way?&lt;br&gt;\n&lt;br&gt;\nSo, another option is the following: when the client first visits A  &lt;br&gt;\nthat implicitly starts the transaction and enlists a resource at A  &lt;br&gt;\nwith some coordinator residing elsewhere (the way in which the  &lt;br&gt;\ncoordinator is manipulated is RESTful too, creating a resource that  &lt;br&gt;\nrepresents the transaction in question.) The client then gets to B,  &lt;br&gt;\nwhich obtains the transaction URI through the client interaction and  &lt;br&gt;\ndoes likewise with its own participant, before moving the state of the  &lt;br&gt;\nsystem (and client) on to C. Finally when the client is finished it  &lt;br&gt;\nclicks a &quot;complete&quot; link that ends the business transaction and as a  &lt;br&gt;\nresult instructs the transaction resource to do nothing in this case  &lt;br&gt;\n(success). However, if the client clicked the &quot;undo all&quot; or maybe  &lt;br&gt;\n&quot;undo B&quot; then the state change at B is undone, ultimately driving the  &lt;br&gt;\nclient to, say, C1. If there are failures, e.g., the client doesn&#39;t  &lt;br&gt;\nget to C, then the transaction may undo all of the work done by A and  &lt;br&gt;\nB automatically, or it may leave them as-is (typically defined by the  &lt;br&gt;\ncontract defined within the business transaction, set, say, by A if  &lt;br&gt;\nit&#39;s the initiator.)&lt;br&gt;\n&lt;br&gt;\nMark.&lt;br&gt;\n&lt;br&gt;\nOn 9 Jun 2009, at 20:10, Bob Haugen wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; Here&#39;s a very sketchy version of what I had in mind:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The scenario is an etailer getting bids, and then placing an order&lt;br&gt;\n&gt; with the lowest bidder.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The etailer POSTs a Request For Quotation (Amazon called these Request&lt;br&gt;\n&gt; For Commitment in one meeting) to the appropriate URI of a few&lt;br&gt;\n&gt; suppliers.  The RFQ contains a URI for the suppliers to POST a Quote&lt;br&gt;\n&gt; in response.  Each Quote contains a URI (or two) for the etailer to&lt;br&gt;\n&gt; follow up with an order or a rejection.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The etailer then POSTs an order (still in a provisional state) to the&lt;br&gt;\n&gt; successful bidder&#39;s URI. The order contains a URI for the supplier to&lt;br&gt;\n&gt; accept the order, and maybe a URI for the supplier to decline the&lt;br&gt;\n&gt; order if something has happened in the meantime that has made&lt;br&gt;\n&gt; fulfillment impossible.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; When the etailer gets an acceptance from the supplier, the etailer&lt;br&gt;\n&gt; might send rejection notices to the failed bidders.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I&#39;m sure Mark Little could suggest several refinements, but this is&lt;br&gt;\n&gt; just a sketch for discussion purposes.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; It&#39;s a 2-phase commit agreement scenario, but not ACID:  it&#39;s not&lt;br&gt;\n&gt; Atomic, and the individual resources are not Isolated.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Both the etailer and the suppliers play both client and server roles.&lt;br&gt;\n&gt; Each message contains a URI or two for responses, where the recipient&lt;br&gt;\n&gt; of a message will (possibly in a separate process) POST a response.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; My questions for Roy and this group:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 1. Is this scenario RESTful?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 2. If not, could it be made RESTful with some changes?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 3. What else is wrong with it?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Question for Mark:  what&#39;s wrong with it from a transaction protocol  &lt;br&gt;\n&gt; viewpoint?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Thanks,&lt;br&gt;\n&gt; Bob Haugen&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; ------------ --------- --------- ------&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Yahoo! Groups Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n \n\n    &lt;/div&gt;  \n\n\n\t\n\t&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;\n\n      &lt;/body&gt;&lt;/html&gt;\r\n--0-2006477343-1244637103=:40236--\r\n\n"}}