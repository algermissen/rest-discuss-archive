{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"f4w5o19WbC_M16YpgHZCG3oLjFv9UeBCF2xeIfGyjST8dp1UZBJfMJWOXu-972Yg4R9FzcWK9oSXHx5nskR4jABaz5WfNURuJA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST clarifications...","postDate":"1104275921","msgId":4723,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMDQyNzU5MjEuMjM1NzguMzAuY2FtZWxAcGhvZW5peD4=","inReplyToHeader":"PGNxcnJ0Mys4ZGxtQGVHcm91cHMuY29tPg==","referencesHeader":"PGNxcnJ0Mys4ZGxtQGVHcm91cHMuY29tPg=="},"prevInTopic":4722,"nextInTopic":4724,"prevInTime":4722,"nextInTime":4724,"topicId":4721,"numMessagesInTopic":25,"msgSnippet":"... It s hard to say generally, but I think you re seeing two different things: * an inherent similarity in the two methods, including a bit of a semantic","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 97472 invoked from network); 28 Dec 2004 23:16:36 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m8.grp.scd.yahoo.com with QMQP; 28 Dec 2004 23:16:36 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.142.253)\n  by mta5.grp.scd.yahoo.com with SMTP; 28 Dec 2004 23:16:35 -0000\r\nReceived: (qmail 2596 invoked by uid 1000); 28 Dec 2004 18:18:41 -0500\r\nTo: rlution &lt;rlution@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;cqrrt3+8dlm@...&gt;\r\nReferences: &lt;cqrrt3+8dlm@...&gt;\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: 7bit\r\nOrganization: Asynchronous.org\r\nMessage-Id: &lt;1104275921.23578.30.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 \r\nDate: Tue, 28 Dec 2004 18:18:41 -0500\r\nX-eGroups-Remote-IP: 216.114.142.253\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nReply-To: jsled@...\r\nSubject: Re: [rest-discuss] REST clarifications...\r\nX-Yahoo-Group-Post: member; u=93099516\r\nX-Yahoo-Profile: joshsled\r\n\r\nOn Tue, 2004-12-28 at 09:51, rlution wrote:\n\n&gt; 1) Some material on REST seems to reserve POST for &quot;create&quot; and PUT\n&gt; for &quot;update&quot; while others seem to blur the distinction.  Any insight\n&gt; here would be most helpful.\n\nIt&#39;s hard to say generally, but I think you&#39;re seeing two different\nthings:\n\n* an inherent similarity in the two methods, including a bit of a \n  semantic overlap with respect to PUT&#39;s specification of ability to \n  create things.\n\n* the fact that there&#39;s two different levels of REST: \n  GET+POST-does-everything-else  vs.  GET/PUT/POST/DELETE.  Not \n  differentiating the two can lead to confusion about which &quot;POST&quot;\n  is being used/described. [1]\n\n\n&gt; 2) The writings seem to direct one away from using the query string as\n&gt; much as possible.  While it is clear that .../somecgi.pl?action=delete\n&gt; is most unREST-ful I assume .../invoice?id=3224 is OK to refer to\n&gt; particular invoice (for example)?  I&#39;m confused by the apparent\n&gt; alternative URI to do the same thing .../invoice/3224  If the latter\n&gt; is preferable, why is that - especially when this seems to embody\n&gt; &quot;Common REST Mistake #3&quot;?  In short, when does one use the query\n&gt; string versus the .../container/contained notation?\n\nI think that queries should be used when querying / paramaterizing a\nresource space.  Likely, the query should return a collection of URIs\nwithin that space.  But specific resources should be identified by URIs.\n\nFor instance:\n\n&gt; /invoice/3224\n  # a specific invoice\n&gt; /invoice?forCustomer=/customer/1\n  # returns a list of /invoice/## IDs for the given customer.\n&gt; /invoice?byId=3224\n  # lookup by ID, in cases where the URI is not known.\n\nNote that practical concerns may lead one to use query parameters over\nreal resource-identifiers, though recently `mod_rewrite` can help one\npresent a &quot;clean&quot; URI space while also working around implementation\ndetails.\n\n\n&gt; 3) Does seems REST assumes the user will create a URI parser from\n&gt; scratch?  The writings seem to call for a &quot;central xml file&quot; to do\n&gt; this.  Do libwww-perl, Waterken, Cocoon, sqlREST enter in here? Could\n&gt; someone comment on this a bit more?\n\nDo you mean a client-side HTTP library, or a server-side HTTP\ndispatcher?  \n\nI&#39;ve found most client-side HTTP libs to be deficient-but-serviceable,\nwhile most server-side URI-handling frameworks to be less-than-helpful\nin trying to handle an application-resource-focused URI space.\n\nIn the server-side case, I would opt to write my own dispatcher [a\nservlet mapped to be responsible for &quot;/*&quot;, in java terms], which would\nprobably be configured from a simple [either line-oriented or XML-like]\nconfig file mapping URI-patterns to handling-function names.\n\n...jsled\n\n[1]: http://asynchronous.org/blog/archives/2004/08/25/levels_of_rest.html\n\n-- \nhttp://asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n\n"}}