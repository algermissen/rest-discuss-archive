{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":201150942,"authorName":"Greg Young","from":"Greg Young &lt;gregoryyoung1@...&gt;","profile":"gumboismadeoffish","replyTo":"SENDER","senderId":"Us51e9M0bFKsUI3DL4hKiNTJh72_9upM-WVJUcTyWW68RSHCZ854DRtuTYVT0PrzFFbisFYNLFzJlilS4KumMqWB-lcy3tPv6PCF","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Atom and prev links","postDate":"1372443005","msgId":19508,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQzlSUXRqVkZ4MFNRWW9xWjV5RFN0aFpmUHNMdFhEanNaSFE3VzRDaGZzNkg9Tj1hd0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEIzMDc2OEIzLUUwNkUtNEFFMi1CN0M4LUNENzExM0Q4RDk1NkBuaXZlbi1qZW5raW5zLmNvLnVrPg==","referencesHeader":"PENBQzlSUXRqK1IzVHZ1TjdSVGpFT0dNWFR1NmlZMU1NdEZtdmp2YnJTK3NpRHZmVEtvUUBtYWlsLmdtYWlsLmNvbT4JPDNDOEU1QzM1LUUwNEYtNEQ5RC1CQjZGLUQzNTI1QUIzODFEM0BuaXZlbi1qZW5raW5zLmNvLnVrPgk8Q0FDOVJRdGdlQ0szelc1b184TFhlPXFGWFo5MEMxVlVaaGF5RFlYUlQ9YVlQaEJEczNBQG1haWwuZ21haWwuY29tPgk8QjMwNzY4QjMtRTA2RS00QUUyLUI3QzgtQ0Q3MTEzRDhEOTU2QG5pdmVuLWplbmtpbnMuY28udWs+"},"prevInTopic":19507,"nextInTopic":19509,"prevInTime":19507,"nextInTime":19509,"topicId":19487,"numMessagesInTopic":23,"msgSnippet":"We could do all over prev next even with no archiving. Every uri we create is immutable. Spec defines additional logic needed for prev/next which is unneeded","rawEmail":"Return-Path: &lt;gregoryyoung1@...&gt;\r\nX-Sender: gregoryyoung1@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 28663 invoked from network); 28 Jun 2013 18:10:06 -0000\r\nX-Received: from unknown (98.137.63.212)\n  by m13.grp.sp2.yahoo.com with QMQP; 28 Jun 2013 18:10:06 -0000\r\nX-Received: from unknown (HELO mail-pb0-f54.google.com) (209.85.160.54)\n  by mtaq2.grp.sp2.yahoo.com with SMTP; 28 Jun 2013 18:10:06 -0000\r\nX-Received: by mail-pb0-f54.google.com with SMTP id ro2so2565466pbb.41\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 28 Jun 2013 11:10:06 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.68.171.226 with SMTP id ax2mr12583557pbc.201.1372443006030;\n Fri, 28 Jun 2013 11:10:06 -0700 (PDT)\r\nX-Received: by 10.68.138.170 with HTTP; Fri, 28 Jun 2013 11:10:05 -0700 (PDT)\r\nIn-Reply-To: &lt;B30768B3-E06E-4AE2-B7C8-CD7113D8D956@...&gt;\r\nReferences: &lt;CAC9RQtj+R3TvuN7RTjEOGMXTu6iY1MMtFmvjvbrS+siDvfTKoQ@...&gt;\n\t&lt;3C8E5C35-E04F-4D9D-BB6F-D3525AB381D3@...&gt;\n\t&lt;CAC9RQtgeCK3zW5o_8LXe=qFXZ90C1VUZhayDYXRT=aYPhBDs3A@...&gt;\n\t&lt;B30768B3-E06E-4AE2-B7C8-CD7113D8D956@...&gt;\r\nDate: Fri, 28 Jun 2013 21:10:05 +0300\r\nMessage-ID: &lt;CAC9RQtjVFx0SQYoqZ5yDSthZfPsLtXDjsZHQ7W4Chfs6H=N=aw@...&gt;\r\nTo: Ben Niven-Jenkins &lt;ben@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=047d7bacb51ed967c504e03ac908\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Greg Young &lt;gregoryyoung1@...&gt;\r\nSubject: Re: Atom and prev links\r\nX-Yahoo-Group-Post: member; u=201150942; y=n_veuxETAjz7AHPiDHCNyaLIFEo9oTxrUOLVkZywkJYj_jN1PNoZ5U81ikY\r\nX-Yahoo-Profile: gumboismadeoffish\r\n\r\n\r\n--047d7bacb51ed967c504e03ac908\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWe could do all over prev next even with no archiving. Every uri we create\n=\r\nis immutable. Spec defines additional logic needed for prev/next which is\nu=\r\nnneeded for us so archive gives us a simpler client API (also explicit\nthat=\r\n we are non lossy)\n\nOn Friday, June 28, 2013, Ben Niven-Jenkins wrote:\n\n&gt;\n&gt;=\r\n\n&gt; On 28 Jun 2013, at 18:32, Greg Young &lt;gregoryyoung1@...&lt;javascript=\r\n:_e({}, &#39;cvml&#39;, &#39;gregoryyoung1@...&#39;);&gt;&gt;\n&gt; wrote:\n&gt;\n&gt; Our whole feed i=\r\ns nonlossy and immutable.\n&gt;\n&gt;\n&gt; Can you expand on what you mean by this. Fe=\r\ned archiving doesn&#39;t lose\n&gt; information and doesn&#39;t require changes to a pa=\r\nge once it is first\n&gt; generated.\n&gt;\n&gt; Or do you mean the client cannot handl=\r\ne the content of the URI that\n&gt; represents the entry point into the feed ch=\r\nanging and expects the content\n&gt; of that URI to stay always constant so the=\r\n clients needs to page &quot;forward\n&gt; in time&quot; to find the latest entries?\n&gt;\n&gt; =\r\nBen\n&gt;\n&gt;\n&gt; On Friday, June 28, 2013, Ben Niven-Jenkins wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On =\r\n28 Jun 2013, at 11:16, Greg Young &lt;gregoryyoung1@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; &gt; =\r\nWe have a mature atom implementation for distribution of event streams\n&gt;&gt; &gt;=\r\n and as always the devil is in the details...\n&gt;&gt; &gt;\n&gt;&gt; &gt; The issue revolves =\r\naround prev links. At some point on an atom feed\n&gt;&gt; &gt; you will hit the curr=\r\nent item, prev will point to the next item that\n&gt;&gt; &gt; does not yet exist.\n&gt;&gt;=\r\n\n&gt;&gt; Why not use feed paging and use prev-archive to indicate the previous\n&gt;=\r\n&gt; page and keep your &quot;main&quot; feed as the current page.\n&gt;&gt;\n&gt;&gt; Client just pol=\r\nls the current page and if it needs to go further back in\n&gt;&gt; time it follow=\r\ns prev-archive links until it finds what it wants.\n&gt;&gt;\n&gt;&gt; You then avoid the=\r\n problem of links to things that don&#39;t exist or\n&gt;&gt; updating already archive=\r\nd pages.\n&gt;&gt;\n&gt;&gt; Ben\n&gt;\n&gt;\n&gt;\n&gt; --\n&gt; Le doute n&#39;est pas une condition agr=E9able=\r\n, mais la certitude est absurde.\n&gt;\n&gt;\n\n-- \nLe doute n&#39;est pas une condition =\r\nagr=E9able, mais la certitude est absurde.\n\r\n--047d7bacb51ed967c504e03ac908\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWe could do all over prev next even with no archiving. Every uri we create =\r\nis immutable. Spec defines additional logic needed for prev/next which is u=\r\nnneeded for us so archive gives us a simpler client API (also explicit that=\r\n we are non lossy)&lt;span&gt;&lt;/span&gt;&lt;br&gt;\n&lt;br&gt;On Friday, June 28, 2013, Ben Niven=\r\n-Jenkins  wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0=\r\n .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;&lt;div dir=3D&quot;auto&quot;&gt;&lt;div&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;On 28 Jun 2013, at 18:32, Greg Young &lt;&lt;a href=3D&quot;javas=\r\ncript:_e({}, &#39;cvml&#39;, &#39;gregoryyoung1@...&#39;);&quot; target=3D=\r\n&quot;_blank&quot;&gt;gregoryyoung1@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;blockquote t=\r\nype=3D&quot;cite&quot;&gt;&lt;div&gt;Our whole feed is nonlossy and immutable.&lt;span&gt;&lt;/span&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;Can you expand on what you mean by this.=\r\n Feed archiving doesn&#39;t lose information and doesn&#39;t require change=\r\ns to a page once it is first generated.=A0&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Or do you me=\r\nan the client cannot handle the content of the URI that represents the entr=\r\ny point into the feed changing and expects the content of that URI to stay =\r\nalways constant so the clients needs to page &quot;forward in time&quot; to=\r\n find the latest entries?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ben&lt;br&gt;&lt;blockquote type=\r\n=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;br&gt;On Friday, June 28, 2013, Ben Niven-Jenkins  wrote:&lt;br&gt;&lt;=\r\nblockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px=\r\n #ccc solid;padding-left:1ex&quot;&gt;&lt;br&gt;\n\n\n&lt;br&gt;\nOn 28 Jun 2013, at 11:16, Greg Yo=\r\nung &lt;&lt;a&gt;gregoryyoung1@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; We have a m=\r\nature atom implementation for distribution of event streams&lt;br&gt;\n&gt; and as=\r\n always the devil is in the details...&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The issue revolves=\r\n around prev links. At some point on an atom feed&lt;br&gt;\n&gt; you will hit the=\r\n current item, prev will point to the next item that&lt;br&gt;\n&gt; does not yet =\r\nexist.&lt;br&gt;\n&lt;br&gt;\nWhy not use feed paging and use prev-archive to indicate th=\r\ne previous page and keep your &quot;main&quot; feed as the current page.&lt;br=\r\n&gt;\n&lt;br&gt;\nClient just polls the current page and if it needs to go further bac=\r\nk in time it follows prev-archive links until it finds what it wants.&lt;br&gt;\n&lt;=\r\nbr&gt;\nYou then avoid the problem of links to things that don&#39;t exist or u=\r\npdating already archived pages.&lt;br&gt;\n&lt;br&gt;\nBen &lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;-- &lt;br&gt;Le=\r\n doute n&#39;est pas une condition agr=E9able, mais la certitude est absurd=\r\ne.&lt;br&gt;\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;-- &lt;br&gt;Le doute =\r\nn&#39;est pas une condition agr=E9able, mais la certitude est absurde.&lt;br&gt;\n\r\n--047d7bacb51ed967c504e03ac908--\r\n\n"}}