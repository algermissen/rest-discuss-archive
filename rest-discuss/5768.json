{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"WXu0fTUnWQLH5LV2q9rR8SbUKcPr10i43C98XlpRbSgmvmJMiBsUSxnf6r4mQE-LvKWeeo2NcUCUhisX60WXKk-UFesE8VU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Personalization as Representation","postDate":"1143177753","msgId":5768,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI0RUQ3ODMzLUIwNTMtNDBDMi04RTUwLTVFODc3MTg2MjYyOEBhcnRpbWEuY29tPg==","inReplyToHeader":"PDg3ZDVnY2xic2QuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","referencesHeader":"PDQ0MTg2RERELjYwMTAzMDVAam9ubmF5Lm5ldD4gPDQ0MjE5NEU5LjgwMDA2MDlAdmVpY29uLmNvbT4gPDg3YWNiaW1ncTIuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMUE5RjguNTA3MDUwM0B2ZWljb24uY29tPiA8NDQyMUY1MzAuODAwMDgwMkBzZWFpcnRoLmNvbT4gPDg3NHExcWx6NGMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMjMzNkMuNTAwMDMwN0BzZWFpcnRoLmNvbT4gPDg3eTd6MWw2Y28uZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NzNlYzU5OWQwNjAzMjMwNjA4cDJhYmU1MTRjdWNiNDUxZGNkMjQ0NjcxZDhAbWFpbC5nbWFpbC5jb20+IDw4N3ZldTVreTB4LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDczZWM1OTlkMDYwMzIzMTM0M3M0MjNjYmM5Mm80NjhmMGNlZjZlN2UwNmE4QG1haWwuZ21haWwuY29tPiA8ODdwc2tjbHQ5MS5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw5RThGN0U5MC01M0NFLTRBRjEtOTI0RS00RURGMDI2RkVEQzRAYXJ0aW1hLmNvbT4gPDg3aXJxNGxnZWcuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8OTlBODdBNjgtNjU5Qy00MDUyLTkwNzQtM0Q2RDE5NzFGMUZDQGFydGltYS5jb20+IDw4N2Q1Z2NsYnNkLmZzZkB0YXBzZWxsZmVycmllci5jby51az4="},"prevInTopic":5767,"nextInTopic":5769,"prevInTime":5767,"nextInTime":5769,"topicId":5693,"numMessagesInTopic":89,"msgSnippet":"... Thanks. I understand now what you mean. I ll think about that. ... I have thought about seeing each page as a little web service. I would send a small ball","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 99182 invoked from network); 24 Mar 2006 05:22:08 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m24.grp.scd.yahoo.com with QMQP; 24 Mar 2006 05:22:08 -0000\r\nReceived: from unknown (HELO artima2.inetu.net) (209.235.240.43)\n  by mta4.grp.scd.yahoo.com with SMTP; 24 Mar 2006 05:22:07 -0000\r\nReceived: (qmail 1110 invoked by uid 89); 24 Mar 2006 05:22:18 -0000\r\nReceived: from unknown (HELO ?192.168.251.21?) (67.102.66.234)\n  by artima2.inetu.net with SMTP; 24 Mar 2006 05:22:18 -0000\r\nIn-Reply-To: &lt;87d5gclbsd.fsf@...&gt;\r\nReferences: &lt;44186DDD.6010305@...&gt; &lt;442194E9.8000609@...&gt; &lt;87acbimgq2.fsf@...&gt; &lt;4421A9F8.5070503@...&gt; &lt;4421F530.8000802@...&gt; &lt;874q1qlz4c.fsf@...&gt; &lt;4422336C.5000307@...&gt; &lt;87y7z1l6co.fsf@...&gt; &lt;73ec599d0603230608p2abe514cucb451dcd244671d8@...&gt; &lt;87veu5ky0x.fsf@...&gt; &lt;73ec599d0603231343s423cbc92o468f0cef6e7e06a8@...&gt; &lt;87pskclt91.fsf@...&gt; &lt;9E8F7E90-53CE-4AF1-924E-4EDF026FEDC4@...&gt; &lt;87irq4lgeg.fsf@...&gt; &lt;99A87A68-659C-4052-9074-3D6D1971F1FC@...&gt; &lt;87d5gclbsd.fsf@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;B4ED7833-B053-40C2-8E50-5E8771862628@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 23 Mar 2006 21:22:33 -0800\r\nTo: Nic &lt;nferrier@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Personalization as Representation\r\nX-Yahoo-Group-Post: member; u=198693287; y=1LuhGBOevgop6vWTIh-1rkN7ylBYM9T8aeAKPZ1KlPWEmwmJId4\r\nX-Yahoo-Profile: billvenners\r\n\r\n\nOn Mar 23, 2006, at 8:14 PM, Nic wrote:\n\n&gt;&gt; I may have misinterpreted what Claude was saying, but I think you\n&gt;&gt; understood what I was saying. What do you mean by, &quot;Having a separate\n&gt;&gt; URI and NOT doing content neg is not the same thing.&quot;?\n&gt;\n&gt; the content neg request can indicate the location of the real resource\n&gt; with the Location header.\n&gt;\nThanks. I understand now what you mean. I&#39;ll think about that.\n\n&gt;&gt; I know my philosophy goes against the approach that seems recommended\n&gt;&gt; by the HTTP spec by its examples of content negotiation being done on\n&gt;&gt; Accept-Language. From a usability perspective, however, I believe\n&gt;&gt; taking that approach in my particular design case inappropriate.\n&gt;&gt; We&#39;re creating a network of sites, and each site will have one and\n&gt;&gt; only one locale. So if there&#39;s a English article on site A, the\n&gt;&gt; French translation of it, if any, would be on site B. Since each one\n&gt;&gt; of these sites will be mono-lingual, it doesn&#39;t make sense to do\n&gt;&gt; content negotiation on Accept-Language. Nevertheless, I will know if\n&gt;&gt; there&#39;s a French translation, and if they mention they prefer French\n&gt;&gt; over English in the Accept-Language header, I&#39;d like to be nice and\n&gt;&gt; mention to them that there&#39;s a French version of this article over at\n&gt;&gt; this URI at site B. I may decide to do that if I notice that the\n&gt;&gt; request is coming from an IP address in France, if that&#39;s something\n&gt;&gt; users find useful.\n&gt;\n&gt; Ok. What I find hard is the dynamic bit... why not just put the\n&gt; language links directly into the page statically? Client side could\n&gt; help pull that out as well in terms of UI I guess (not sure if script\n&gt; can see the i18n prefs).\n&gt;\nI have thought about seeing each page as a little web service. I  \nwould send a small ball of JavaScript that goes figures out what the  \ncustom page should look like to the user and goes back and asks for  \neach piece individually. This does seem more RESTful, in that there  \nare far fewer representations for each resource. I&#39;ll keep thinking  \nabout that, but one  thing I would like to do is degrade gracefully  \nif JavaScript is not enabled on the client. So I&#39;m leaning more  \ntowards sending a page that will work as is if JavaScript is not  \nenabled, and if JavaScript is enabled, the scripts will run and  \nchange the page in ways that take advantage of JavaScript. That&#39;s the  \ntheory. Not sure how hard that will be in practice.\n\n&gt;\n&gt;&gt; I think I am supporting the standard. In my case there isn&#39;t a French\n&gt;&gt; representation of the English article at that URI. By requesting that\n&gt;&gt; URI you are asking for an article in English, and I&#39;ll send you one.\n&gt;&gt;\n&gt;&gt; I definitely want to have lots of different languages being spoken in\n&gt;&gt; our network, but as I said, each site will be for users&#39; who can\n&gt;&gt; interact in a particular language.\n&gt;\n&gt; Why not follow what the specs want you to do and make one site but\n&gt; multi-lingual? Is there a business reason for having different sites?\n&gt; Or are they really the same site?\n&gt;\n&gt; I am really interested in this.\n&gt;\nIt is a self-imposed requirement. We currently have an RSS aggregator  \non Artima, which shows the latest things people are blogging about in  \nvarious topics around the community. It is primarily English, and  \nwhen a non-English entry shows up, it just feels noisy. Most users of  \nthis site can read it, though some can. The language everyone has in  \ncommon at this site is English, and I feel it will be most user- \nfriendly to try and keep each site in the network we&#39;re building  \nfocused on one language.\n\nThey will be in my mind different sites, but they will be part of one  \nnetwork of sites.\n\n&gt;\n&gt;&gt;&gt;&gt; Would this be the RESTful way to think about personalization of\n&gt;&gt;&gt;&gt; resources based on content negotiation?\n&gt;&gt;&gt;\n&gt;&gt;&gt; I don&#39;t think so. I think that you&#39;re methods won&#39;t be idempotent  \n&gt;&gt;&gt; and\n&gt;&gt;&gt; that&#39;s anti-REST.\n&gt;&gt;&gt;\n&gt;&gt; Why wouldn&#39;t the methods be idempotent?\n&gt;\n&gt; Because the results of the requests would be different depending on\n&gt; who you are. If I get the resource with my lang preference set one way\n&gt; then I&#39;ll get one thing, but if I get it another way I&#39;ll get another\n&gt; thing.\n&gt;\nTrue, but I think that&#39;s still idempotent, which to me means that  \ninvoking the same method multiple times doesn&#39;t hurt anything:\n\nhttp://www.artima.com/intv/distrib3.html\n\n&gt; Another thing: authentication methods are supposed to be flexible with\n&gt; HTTP but you&#39;re going to tie the system to one form of authentication\n&gt; (one where the username is transmitted to you). I&#39;m not sure if this\n&gt; is against REST per se... but it would not be best practice.\n&gt;\nI noticed that Roy&#39;s dissertation frowns upon using cookies and URL  \nrewriting for user sessions. I learned last week that the recommended  \nalternative is HTTP authentication. But try as I may I can&#39;t find a  \nway to use HTTP auth because of usability (can&#39;t give a nice login  \npage if JavaScript is disabled, hard or impossible to do single-sign  \non, etc...) and security issues (can&#39;t tell the client to &quot;log them  \noff&quot; once authenticated, or force the client to ask for the name and  \npassword again). The cookies I plan to use are really just auth  \ntokens, and I plan to try and avoid any real session state. So that  \npart is actually quite RESTful I think, at least in the area of  \nrepresenting state with URIs. I feel trying to understand REST really  \nhelped me in that area. But I&#39;ve found HTTP authentication in its  \ncurrent form to be unusable in practice, at least for my current  \nrequirements.\n\n&gt;&gt;&gt; However, I will admit I have a hard time undestanding how\n&gt;&gt;&gt; personalization can fit into REST. Client side script seems to be  \n&gt;&gt;&gt; the\n&gt;&gt;&gt; best solution.\n&gt;&gt;&gt;\n&gt;&gt; That&#39;s what I&#39;ve heard. The reason I brought this up is I can&#39;t\n&gt;&gt; personally see much difference between customizing a resource for\n&gt;&gt; user&#39;s preferred language (via Accept-Language content negotiation)\n&gt;&gt; and customizing it by mentioning their first name in a Welcome\n&gt;&gt; message. Why would one be a blessed-by-the-spec representation of the\n&gt;&gt; resource and the other be blatant disrespect of the spirit of HTTP\n&gt;&gt; and REST? One reason I can imagine this might be the case is that\n&gt;&gt; these kinds of customization are not intended by (or mentioned by)\n&gt;&gt; the HTTP designers.\n&gt;\n&gt; Because one works for everybody with the header set that way and the\n&gt; other works for only one person.\n&gt;\nThanks. That helps me see the difference.\n\n&gt; Server side storage of state outside the framework of resources is bad\n&gt; according to Roy. Most of us here believe he&#39;s right.\n&gt;\nWell then I guess you&#39;re right in that there&#39;s not much room in REST  \nfor personalization of resources. Because putting the customization  \nstate in the URI could be done, for example, by having the user&#39;s  \nnickname (such as &quot;chuck&quot;) in every URI after they log in. Yuck.  \nThat&#39;s seems unRESTful because each conceptual resource has one URI  \nfor each user. I think that&#39;s bad for usability too because I like to  \nuse the URI to indicate site structure, as I described here:\n\nhttp://www.artima.com/weblogs/viewpost.jsp?thread=153170\n\nThe approach I&#39;ve been talking about in this thread, instead of  \nhaving an explosion of URIs (one per resource per user) produces an  \nexplosion of representations and ETags (one per user per resource).\n\nIt seems the RESTful answer would really be the approach of viewing  \neach page as a ball of JavaScript that builds the user&#39;s view  \ndynamically, by pulling down each piece individually. I see no  \nproblem in having a URI with the name &quot;chuck&quot; in it for the piece  \nthat says, &quot;Welcome, Chuck!&quot;. Trouble is I don&#39;t want to require that  \nJavaScript be available on the client.\n\n&gt;\n&gt;&gt; What I&#39;d like to do over HTTP, though, is give the user the best\n&gt;&gt; experience by looking at whatever information comes in with a request\n&gt;&gt; (IP address, cookies, Accept-Language, referrer, whatever) and\n&gt;&gt; provide the most useful representation of the requested resource.\n&gt;&gt; If I give a unique ETag to each variant, then I think caching should\n&gt;&gt; work, and conceptually to me it just feels like each of these are\n&gt;&gt; personalized representations of a resource. What would doing this\n&gt;&gt; break? What would be the downside?\n&gt;\n&gt; Caching will work in as much as there will be almost no\n&gt; caching. Intermediaries won&#39;t be able to cache your pages because\n&gt; every single one (or nearlly every single one) will be unique.\n&gt;\nIn my case, I expect that most people will use these sites without  \nsigning in, so they can all share representations. Once someone signs  \nin, the caching is really just for them, but it can still be cached  \nand the ETags checked. It&#39;s just that the first request of a resource  \nper logged in user will always be a cache miss. But you&#39;re right it  \nis a tradeoff between personalization and scalability, and here I  \nthink personalization is more important in my case. The caching story  \ngets even worse if the client doesn&#39;t have cookies enabled and they  \nsign in and I start rewriting URLs by adding the auth token to the  \nend. That really breaks with REST and I hate those ugly URLs, but I  \ndon&#39;t want to require cookies and can&#39;t find a way to use HTTP auth.  \nSo in that case the caching isn&#39;t per user, but per user session,  \nwhich is even more of a tradeoff that sacrifices scalability and  \nbandwidth for usability.\n\nWhat I find odd is how hard it is to accomplish by following the  \nofficial recommended HTTP way the simple basic things almost every  \nwebsite wants to do.\n\nThanks.\n\nBill\n----\nBill Venners\nEditor-in-Chief\nArtima Developer\nhttp://www.artima.com\n\n\n"}}