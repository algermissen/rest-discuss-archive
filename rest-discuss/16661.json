{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"zCG4mqhh94cOuR13Dp4WiqDjR55-LTVxxARPvOH6NeNN19gQ2ZquvBg1u7rskRHEbPZhx1qYEsxmc8E89saSMmpM1BJIBZpYEfw1HKRXtg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and self-descriptiveness","postDate":"1285224105","msgId":16661,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTIzMDA0MTQ1LjlmYTAyMTI1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGlucERBMHE4MTFHNmU2QU5NaEVIMEJ4RGVqbmNYVFI5a21TOCthaEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlucERBMHE4MTFHNmU2QU5NaEVIMEJ4RGVqbmNYVFI5a21TOCthaEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16660,"nextInTopic":16662,"prevInTime":16660,"nextInTime":16662,"topicId":16634,"numMessagesInTopic":49,"msgSnippet":"... Self-descriptive messaging means all your headers and the data they contain may be easily understood by anybody, it isn t simply a matter of media type","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 77697 invoked from network); 23 Sep 2010 06:41:50 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 23 Sep 2010 06:41:50 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 23 Sep 2010 06:41:46 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 21F9B509DC;\n\tThu, 23 Sep 2010 02:41:45 -0400 (EDT)\r\nDate: Thu, 23 Sep 2010 00:41:45 -0600\r\nTo: Alan Dean &lt;alan.dean@...&gt;\r\nCc: REST Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100923004145.9fa02125.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTinpDA0q811G6e6ANMhEH0BxDejncXTR9kmS8+ah@...&gt;\r\nReferences: &lt;AANLkTinpDA0q811G6e6ANMhEH0BxDejncXTR9kmS8+ah@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST and self-descriptiveness\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAlan Dean wrote:\n&gt;\n&gt; The thought occurs to me that perhaps media type discovery /\n&gt; self-description itself would be better if the type name was a URI,\n&gt; e.g. http://example.com/media-types/application/custom-type\n&gt; \n\nSelf-descriptive messaging means all your headers and the data they\ncontain may be easily understood by anybody, it isn&#39;t simply a matter\nof media type identifier -- the GET method is self-descriptive, the FOO\nmethod isn&#39;t, regardless of protocol.\n\nThat being said, your thought has occurred to Tim Berners-Lee, also:\n\n&quot;\n[A]s another example, the headers in an HTTP request which specify\nattributes of the object. These are defined within the scope of\nparticular specifications. There is always pressure to extend these\nspecifications in a flexible way. HTTP header names are generally\nextended arbitrarily by those doing experiments. The same can also be\ntrue of HTML elements and extension mechanisms have been proposed for\nboth. If we look generically at the very wide space of all such\nmetadata attribute names, we find something in which the dictionary\nwould be so large that ad hoc arbitrary extension would be just as\nchaotic as central registration would be stifling.\n&quot;\n\nhttp://www.w3.org/DesignIssues/Metadata.html\n\nIt&#39;s that last bit there that&#39;s important.  A central registry may\nindeed stifle innovation; however, ad-hoc extension defeats the goal of\ngeneric interoperability.  You can&#39;t expect method=FOO to interoperate\nany better than if you use foo:// as your URI scheme or &#39;foo&#39; as an\nidentifier, unless they&#39;re registered, and no distributed registry\nmechanism has yet been defined for anything with any bearing on self-\ndescriptiveness.\n\nMore from Tim:\n\n&quot;\nThere is an open question as to what the process should be for\nformulating new URI schemes, but it is clear that to allow unfettered\nproliferation would be a serious mistake. In almost all other areas,\nproliferation of new designs is welcomed and the Web can be used as a\ndistributed registry of them, but not for the case of URI schemes.\n&quot;\n\nhttp://www.w3.org/DesignIssues/Architecture.html\n\nClearly, there&#39;s some friction between Tim&#39;s view and Roy&#39;s view.  The\nquestion is whether it&#39;s appropriate to use the Web as a distributed\nregistry for media type identifiers.  I don&#39;t believe I&#39;ve offered any\nopinion on that (beyond Google not being a registry); I&#39;ve only pointed\nout that there is no definition in any of the specs which supports\nanything other than the IANA registry for media type identifiers,\ntherefore only IANA-registered identifiers (which point to a spec, not\na 404) may be considered self-descriptive on the Web today.\n\nBut, here&#39;s the problem with allowing ad-hoc extensibility:\n\n&quot;\nThe introduction of any other method apart from GET which has no\nside-effects and is simply a function of the URI is also incorrect,\nbecause the results of such an operation effectively form a separate\naddress space, which violates the universality.\n&quot;\n\nhttp://www.w3.org/DesignIssues/Architecture.html\n\nA distributed registry for HTTP methods would allow FOO to have the\nsame semantics as GET, just as a distributed registry for identifiers\nwould allow application/foo+xml to identify the same processing model\nas application/xhtml+xml -- which defeats the goal of generic\ninteroperability by splitting the identifier namespace.  While media\ntypes may have multiple identifiers, each processing model has a\none-to-one mapping to an identifier in the IANA standards tree, which I\nsee as the benefit of a central registry.\n\n&gt;\n&gt; For backwards compatibility, the absence of a URI would indicate an\n&gt; implicit link to the IANA, i.e. thus application/sparql-query would\n&gt; implicitly link to\n&gt; http://www.iana.org/assignments/media-types/application/#sparql-query\n&gt; (although the IANA website would probably need a tweak to support\n&gt; this cleanly and redirect to the actual doc; so\n&gt; http://www.iana.org/assignments/media-types/application/sparql-query\n&gt; could be used)\n&gt; \n\nThis thought has also occurred to Tim:\n\n&quot;\nIn HTTP, the format of data is defined by a &quot;MIME type&quot;. This formally\nrefers to a central registry kept by IANA. However, architecturally\nthis is an unnecessary central point of control, and there is no reason\nwhy the Web itself should not be used as a repository for new types.\nIndeed, a transition plan, in which unqualified MIME types are taken as\nrelative URIs within a standard reference URI in an online MIME\nregistry, would allow migration of MIME types to become first class\nobjects.\n&quot;\n\nhttp://www.w3.org/DesignIssues/Architecture.html\n\nOK, sure, nobody is saying the IANA registry is the best solution --\njust that it&#39;s the only *existing* solution (no &quot;transition plan&quot;\nexists).  So, how are you going to make this change?  HTTP re-uses\nMIME.  It&#39;s understood that this is sub-optimal for HTTP:\n\n&quot;\nThe problem with MIME syntax is that it assumes the transport is\nlossy, deliberately corrupting things like line breaks and content\nlengths. The syntax is therefore verbose and inefficient for any system\nnot based on a lossy transport, which makes it inappropriate for HTTP.\nSince HTTP/1.1 has the capability to support deployment of incompatible\nprotocols, retaining the MIME syntax won&#39;t be necessary for the next\nmajor version of HTTP, even though it will likely continue to use the\nmany standardized protocol elements for representation metadata.\n&quot;\n\nhttp://www.ics.uci.edu/~fielding/pubs/dissertation/evaluation.htm\n\n(Representation metadata includes media type identifier, btw.)\n\nSo, are you suggesting that HTTP be changed/replaced, or that MIME be\nchanged?  Changing MIME to allow some other registry mechanism isn&#39;t\njust a change to HTTP, but a fundamental change to the Internet.  My\npoint remains that absent some successor to the IANA registry, there is\nno other way to meet the self-descriptive messaging constraint on the\nWeb and *expect* widespread interoperability, not that IANA is the\nbest-and-only alternative end-of-story -- just the current reality.\n\nWhat transition plan are you anti-IANA-registry folks proposing?  Or do\nwe just use Google as a registry without any transition plan or formal\ndeclaration anywhere in the specs allowing that as an option?\n\n-Eric\n\n"}}