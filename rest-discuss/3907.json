{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"S-6pIlOuiQD-3eBMLNxaRs6TtZiKMTZv2mEfGwhi4z7AAleTyJxu3DJvahPi3jHHT__jDjBnKRg9KgnaXb9h_JiK","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] ReST vs MoST Messaging","postDate":"1060814093","msgId":3907,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQzNDQ3MjA5Ny4xMDYwNzk5NjkzQGxvY2FsaG9zdD4=","inReplyToHeader":"PDAwODYwMWMzNjFkZCQ5NzEzYTZhMCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDM1NDIxMTUyOS4xMDYwNzE5NDYyQGxvY2FsaG9zdD4gPDAwMDAwMWMzNjE5NyRhNDNiNDZkMCRhMDAwYThjMEBTZWFpcnRoQTMxPiA8NDEwMTE1NDQ0LjEwNjA3NzUzMzZAbG9jYWxob3N0PiA8MDA2ODAxYzM2MWMxJGUwMWVjMDgwJGEwMDBhOGMwQFNlYWlydGhBMzE+IDw0MjIyNTkyMzYuMTA2MDc4NzQ4MEBsb2NhbGhvc3Q+IDwwMDg2MDFjMzYxZGQkOTcxM2E2YTAkYTAwMGE4YzBAU2VhaXJ0aEEzMT4="},"prevInTopic":3906,"nextInTopic":3911,"prevInTime":3906,"nextInTime":3908,"topicId":3880,"numMessagesInTopic":23,"msgSnippet":"--On Wednesday, August 13, 2003 4:58 PM -0400 Seairth Jacobs ... Since this is a debate about the merits of ReST vs MoST, your ReSTful Notification","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 49854 invoked from network); 13 Aug 2003 22:35:05 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 13 Aug 2003 22:35:05 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (208.45.6.97)\n  by mta2.grp.scd.yahoo.com with SMTP; 13 Aug 2003 22:35:04 -0000\r\nReceived: from [192.168.123.103] (m288d36d0.tmodns.net [208.54.141.40])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid 8851989358; Wed, 13 Aug 2003 18:35:03 -0400 (EDT)\r\nDate: Wed, 13 Aug 2003 18:34:53 -0400\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n\trest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] ReST vs MoST Messaging\r\nMessage-ID: &lt;434472097.1060799693@localhost&gt;\r\nIn-Reply-To: &lt;008601c361dd$9713a6a0$a000a8c0@SeairthA31&gt;\r\nReferences: &lt;354211529.1060719462@localhost&gt;\n &lt;000001c36197$a43b46d0$a000a8c0@SeairthA31&gt; &lt;410115444.1060775336@localhost&gt;\n &lt;006801c361c1$e01ec080$a000a8c0@SeairthA31&gt; &lt;422259236.1060787480@localhost&gt;\n &lt;008601c361dd$9713a6a0$a000a8c0@SeairthA31&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\n--On Wednesday, August 13, 2003 4:58 PM -0400 Seairth Jacobs \n&lt;seairth@...&gt; wrote:\n&gt;&gt; Since my one line spec does exactly that.  Why do I need all the RNA\n&gt;&gt; docs?\n&gt;\n&gt; Obviously, you don&#39;t.  Go on doing things the way you are.  If you want to\n&gt; have a conversation of REST and MoST, that&#39;s fine.  But I&#39;d appreciate it\n&gt; we can do it without telling me that RNA is pointless.\n\nSince this is a debate about the merits of ReST vs MoST, your ReSTful \nNotification Architecture is exhibit A.\n\nMy goal in this discussion is actually to convince you that RNA as it \nstands IS pointless.  More generally, my goal is to show all the people who \nare defining &quot;ReSTful interfaces&quot; that what they are doing is unnecessary. \nThat they just need content-types.  All of you are smart people and my hope \nis that you will put your efforts into more valuable tasks.\n\nIf you are interested in a notification mechanism for HTTP, what I, \npersonally, would really like to see is a WATCH http method.\n\nCreate a watch resource for watchedURI\nC: WATCH watchedURI\nC: Location: watcherURI\nS: 201 CREATED\nS: Location: watchURI\n\nSee what URI is doing the watching\nC: GET watchURI\nS: 200 OK\nS:\nS: watcherURI\n\nChange it\nC: PUT watchURI\nC:\nC: newWatcherURI\nS: 200 OK\n\nStop watching\nC: DELETE watchURI\nS: 200 OK\n\nThis method creates a watchResource that replicates the current state of \nwatchedURI to watcherURI.  Things that need refinement:\n* what latency should the watcher expect?\n* what happens if the watcherURI is unreachable?\n* can the watchURI simply PUT the current state of the watchedURI rather \nthan transmitting all the intermediate POSTs?\n* can we use eTags to prevent loops?\n\nThe value of this HTTP method would be to decouple server functionality \nfrom resource management.  You could then have standalone webservers whose \njob is to maintain the integrity of resources.  Anyone else can implement \nfunctionality associated with a resource change independent of the actual \nweb server managing the resource.\n\n\n&gt;&gt; &gt;&gt; Nope.  You still don&#39;t have a content-type for identity or inbox.\n&gt;&gt; &gt;\n&gt;&gt; &gt; What are you talking about?  Resources dont have content-types!  Only\n&gt; the\n&gt;&gt; &gt; representations of them do.\n&gt;&gt;\n&gt;&gt; That is the subject of the current debate.  My claim is that POST\n&gt;&gt; requires that resources MUST have content-types and that those resource\n&gt;&gt; content-types MUST be exposed whenever a client make a GET requests\n&gt; without\n&gt;&gt; an Accept header.\n&gt;\n&gt; Well, this is where I disagree.\n\nI&#39;ve given lots of reasons to believe that resources have content-types.\nCare to provide a reason why you don&#39;t?\n\n&gt;&gt; How the server stores the resource is irrelevant.  The server must BEHAVE\n&gt;&gt; as if the content-type is whatever it says in response to a raw GET.\n&gt;\n&gt; I do not see in the RFC where POST means anything about GET (or vice\n&gt; versa) for the same resource.  Could you point it out for me?\n\nI already did in my last reply to Roy.  Did you read it?\nHere is the URL for your convenience:\n&lt;http://groups.yahoo.com/group/rest-discuss/message/3887&gt;\n\nIf a server accepts PUT, a subsequent GET of the resource MUST return the \nsame data with the same content-type.  And again, RFC2616 says that POST \nmeans create a resource subordinate to resource designed by the POSTed URI. \nIt make no sense to talk about subordinate resources if resource structure \nis hidden.  The way you expose resource structure in HTTP is via the \ncontent-type header.\n\nDo you have an alternate interpretation of subordinate resource?\n\n&gt;&gt; &gt; For instance, suppose you have a resource that is an image of me.\n&gt;&gt;\n&gt;&gt; What does it mean for the resource to be an image of you?  You have a\n&gt;&gt; resource that is an image.  RFC2616 requires that the server behave as if\n&gt;&gt; the image is stored in whatever content-type it declares in response to a\n&gt;&gt; GET or HEAD request.\n&gt;\n&gt; It does?  Where does it claim that?\n\nAgain, read my last reply to Roy.\n\n&gt;&gt; You are confusing conneg with raw GET.  The client *should* think of the\n&gt;&gt; resource as being a text/xml+svg resource IF that is the content-type the\n&gt;&gt; server supplies in response to a GET without an Accept header.\n&gt;\n&gt; If the client only knows about the text/xml+svg content-type, then that\n&gt; will be its world-view of the resource regardless of what other\n&gt; representations could be returned.  On the other hand, if the client\n&gt; knows both the text/xml+svg and the image/gif content-types, and the\n&gt; resource can be expressed as either, then I think it&#39;s foolish for the\n&gt; client to think that the resource is just text/xml+svg.\n\nQuoting myself from my last reply to Roy:\n&quot;&quot;&quot;&quot;&quot;&quot;\n&quot;&quot;&quot;\nThe GET method means retrieve whatever information (in the form of an\nentity) is identified by the Request-URI.\n[...]\nThe Accept request-header field can be used to specify certain media types\nwhich are acceptable for the response.\n[...]\nIf no Accept header field is present, then it is assumed that the client\naccepts all media types.\n&quot;&quot;&quot;\n[RFC2616]\n\nSo when a client sends a GET, it expects the information identified by the\nresource. If &quot;whatever information&quot; means ALL information without data\nloss, the client can reasonably interpret the response to a GET to *BE* the\nserver&#39;s representation. (Obviously when the client sends an Accept\nheader, it accepting non-fidelity to the server&#39;s actual representation,\nbut that is really beside the point here. GET without an Accept header\nimplies fidelity).\n&quot;&quot;&quot;&quot;&quot;&quot;\n\n&gt;&gt; &gt; That is an implementation detail that has nothing to do\n&gt;&gt; &gt; with the client-server relationship. Likewise, neither the Identity or\n&gt;&gt; &gt; Inbox resources should have a content-type.\n&gt;&gt;\n&gt;&gt; If they don&#39;t have a content-type, it is not really meaningfully to talk\n&gt;&gt; about POSTing to it because without a content-type you lack a notion of\n&gt;&gt; subordinate resources.\n&gt;&gt;\n&gt;&gt; In what way is a notification subordnate to an Inbox or an Agreement\n&gt;&gt; subordinate to an Identity?  How can a client know that?\n&gt;\n&gt; What does this matter to the client?\n\nBecause otherwise the client isn&#39;t POSTing according to the definition in \nRFC2616.  It is just using another method that is also called POST (in \nviolation of HTTP).\n\n&gt;&gt; &gt; Because POST is sufficient.  I don&#39;t see that creating a new method \nwould\n&gt;&gt; &gt; be any more helpful.\n&gt;&gt;\n&gt;&gt; You are *already* creating a new method, the only question is whether you\n&gt;&gt; can or should call it POST.  Since the HTTP spec reserves the POST method\n&gt;&gt; name, to comply with HTTP, you must choose another name.\n&gt;\n&gt; Hmm.. this seems to be the rub (or one of them, anyhow).  I think that\n&gt; RNA&#39;s use of POST falls cleanly within the HTTP&#39;s intended use for POST.\n&gt; You don&#39;t.\n\nHere, again, is the definition of POST:\n&quot;&quot;&quot;\nThe POST method is used to request that the origin server accept the entity\nenclosed in the request as a new subordinate of the resource identified by\nthe Request-URI in the Request-Line.\n&quot;&quot;&quot;\n[RFC2616]\n\nIn what sense does POSTing an RNA notification imply a request that it be \naccepted as a new subordinate of the inbox?\nWhat does it mean for a notification to be a new subordinate of an inbox?\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n"}}