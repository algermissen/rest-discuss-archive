{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"GRFe0UlFBHHomTr-nGBLdOUgDNeqy2RGwUCrSD1Xd6YCgx7pxznxSAUfJ30s5nGnKUGirDmDfWNwVGFux2Y6ppHa0nUL_Eh680znMK9OtQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and HATEOAS in the context of native applications?","postDate":"1311895005","msgId":17643,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwNzI4MTcxNjQ1LjVjM2I0ODFmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDI2OTNDQzk5LUZEQjEtNEY5OC1CQkVGLUYyNzAyM0I5MkE2QkBzdWJidS5vcmc+","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPgk8ODd0eWE3cDU5cS53bCViZXJlbmRAcG9ib3guY29tPgk8OTcwNzc5ODItRkI3NS00MEFCLUE5MUItQkY3RkU3M0FCRDZEQG1lLmNvbT4JPEVBOTc3OTE0LTBDMDMtNEVGMi1BMDc0LTQ4NjFCOUE2RTU2QUBzdWJidS5vcmc+CTw4NDg5QTNEQy1BQUFFLTQ2MjEtODA3NC01RjhFQzBEQjIwNzJAbWUuY29tPgk8RUFEQUU0QzUtNUEyNS00OTNBLUI1MTYtOEFDRkU0N0ZBN0JDQHN1YmJ1Lm9yZz4JPDIwMTEwNzI4MTM0NTI0LmM5MmViYWJkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDI2OTNDQzk5LUZEQjEtNEY5OC1CQkVGLUYyNzAyM0I5MkE2QkBzdWJidS5vcmc+"},"prevInTopic":17642,"nextInTopic":17644,"prevInTime":17642,"nextInTime":17644,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"... REST s uniform interface constraints aren t meant as classification tools.  My take on REST comes more from Chapter 6, e.g. REST... capture[s] all of","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 72359 invoked from network); 28 Jul 2011 23:16:59 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m15.grp.re1.yahoo.com with QMQP; 28 Jul 2011 23:16:59 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 28 Jul 2011 23:16:59 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 9173150A65;\n\tThu, 28 Jul 2011 19:16:58 -0400 (EDT)\r\nDate: Thu, 28 Jul 2011 17:16:45 -0600\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;, Berend de Boer\n &lt;berend@...&gt;, Daniel Roussel &lt;daniel@...&gt;,\n rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20110728171645.5c3b481f.eric@...&gt;\r\nIn-Reply-To: &lt;2693CC99-FDB1-4F98-BBEF-F27023B92A6B@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt;\n\t&lt;87tya7p59q.wl%berend@...&gt;\n\t&lt;97077982-FB75-40AB-A91B-BF7FE73ABD6D@...&gt;\n\t&lt;EA977914-0C03-4EF2-A074-4861B9A6E56A@...&gt;\n\t&lt;8489A3DC-AAAE-4621-8074-5F8EC0DB2072@...&gt;\n\t&lt;EADAE4C5-5A25-493A-B516-8ACFE47FA7BC@...&gt;\n\t&lt;20110728134524.c92ebabd.eric@...&gt;\n\t&lt;2693CC99-FDB1-4F98-BBEF-F27023B92A6B@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST and HATEOAS in the context of native\n applications?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nSubbu Allamaraju wrote:\n&gt; \n&gt; Eric J. Bowman wrote:\n&gt; \n&gt; &gt; Disagree.\n&gt; \n&gt; Fair enough.\n&gt; \n&gt; &gt;  I see REST as the long-term goal of an evolving system, an\n&gt; &gt; ideal against which to measure development.  If REST mismatches are\n&gt; &gt; ignored, what yardstick is the system&#39;s development to be measured\n&gt; &gt; by? So I see REST as black-and-white, but with no implied criticism\n&gt; &gt; towards systems which don&#39;t measure up.  There are aspects of my\n&gt; &gt; own system which aren&#39;t RESTful:  in some cases they&#39;re considered\n&gt; &gt; bugs, while in others I simply don&#39;t care because being strictly\n&gt; &gt; RESTful brings nothing to the table -- but my understanding of the\n&gt; &gt; mismatches is critical to my knowing the difference and being able\n&gt; &gt; to categorize/prioritize.  I don&#39;t see what is to be gained by\n&gt; &gt; pretending those mismatches don&#39;t exist.\n&gt; \n&gt; There is no pretension. There are folks who are blindly looking at\n&gt; these classifications trying to comply without understanding why they\n&gt; should or should not care. Then there are hecklers picking the same\n&gt; classifications and asking to show something RESTful in real world.\n&gt; This is the reality today, and uncompromising guidance is not what is\n&gt; needed.\n&gt; \n\nREST&#39;s uniform interface constraints aren&#39;t meant as classification\ntools.  My take on REST comes more from Chapter 6, e.g. &quot;REST... \ncapture[s] all of those aspects of a distributed hypermedia system that\nare considered central to the behavioral and performance requirements\nof the Web, such that optimizing behavior within the model will result\nin optimum behavior within the deployed Web architecture.&quot;\n\nThe hypertext constraint isn&#39;t more or less important than, say, self-\ndescriptive messaging; those four constraints taken *together* are what\ndistinguishes a network-based API from a library-based API (6.5.1).\nThis is the paradigm shift HTTP unwittingly stumbled upon (which Roy&#39;s\nthesis is about):  that instead of distributing objects, generic object\ninterfaces may be distributed with tremendous benefits (Chapter 2.3).\nRoy puts it best in 6.5.2:\n\n&quot;\nWhat makes HTTP significantly different from RPC is that the requests\nare directed to resources using a generic interface with standard\nsemantics that can be interpreted by intermediaries almost as well as\nby the machines that originate services. The result is an application\nthat allows for layers of transformation and indirection that are\nindependent of the information origin, which is very useful for an\nInternet-scale, multi-organization, anarchically scalable information\nsystem. RPC mechanisms, in contrast, are defined in terms of language\nAPIs, not network-based applications.\n&quot;\n\nRoy&#39;s elaboration on that statement, are the four uniform (generic)\ninterface constraints.  How is that possible without hypertext driving\napplication state?  If you leave that out, you don&#39;t have a network-\nbased application.  The same can be said for all the uniform interface\nconstraints; without them other constraints, like caching, cannot bring\nabout the desired properties in Chapter 2.  Grasping them as a set\nleads to the inevitable &quot;I have seen the light&quot; moment (which inspired\nRoy to write &#39;em down), and charges of shamanism, pedantry or of being\nuncompromising.\n\nWhich is my long-standing criticism of REST -- this makes it hard to\nteach to the point it diminishes the value of REST.  But I contend that\nit&#39;s no more valuable to water REST down to include library-based APIs,\nwhich as far as I know (as nobody has convincingly falsified Roy&#39;s\nthesis) are all that&#39;s possible without any of the uniform interface\nconstraints, even if the results are cacheable.  It isn&#39;t just missing\na constraint, it&#39;s missing the point.\n\n-Eric\n\n"}}