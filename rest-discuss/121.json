{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"uDWvCAHkMWrzqgmr1R7PJ622gS4_Q3KY1UVOP6eNa2JAZOvYLwyBHerii89ZHRryBBYZzaBXTko0pd7prOpZr_I0neVFlQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] &quot;Reliability&quot;","postDate":"1011707722","msgId":121,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hEQ0VLTkZJQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDNDNEQwRERDLjRDOTQ0OUEyQHByZXNjb2QubmV0Pg=="},"prevInTopic":119,"nextInTopic":122,"prevInTime":120,"nextInTime":122,"topicId":118,"numMessagesInTopic":7,"msgSnippet":"I have been considering this requirement as a feature of store-and-forward.  In a S-F model, once the message is emitted there is software to make every effort","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 22 Jan 2002 13:56:15 -0000\r\nReceived: (qmail 85836 invoked from network); 22 Jan 2002 13:56:15 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m6.grp.snv.yahoo.com with QMQP; 22 Jan 2002 13:56:15 -0000\r\nReceived: from unknown (HELO mail3.panix.com) (166.84.0.167)\n  by mta3.grp.snv.yahoo.com with SMTP; 22 Jan 2002 13:56:15 -0000\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mail3.panix.com (Postfix) with SMTP id B59A69840E\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 22 Jan 2002 08:56:14 -0500 (EST)\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] &quot;Reliability&quot;\r\nDate: Tue, 22 Jan 2002 08:55:22 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDCEKNFIAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nIn-Reply-To: &lt;3C4D0DDC.4C9449A2@...&gt;\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\nI have been considering this requirement as a feature of store-and-forward.  In\na S-F model, once the message is emitted there is software to make every effort\nto get it delivered, including queueing, retries, expiration, failure\nnotification, etc.  Note that SMTP infrastructure already covers all of this,\nand that the SMTP/HTTP binding I proposed should support it as well.\n\n&gt; Beyond asynch, the other buzzword that HTTP seems to miss is\n&gt; &quot;reliability&quot;. One part of reliability is disk-backed queuing in case of\n&gt; crashes. I think that&#39;s a software issue, not a protocol issue.\n&gt;\n&gt; Another part of reliable messaging as it is normally implemented is\n&gt; queuing. I think that this is probably an orthogonal issue to actual\n&gt; reliability.\n&gt;\n&gt; The main part is once and only once delivery. This only matters for\n&gt; non-idempotent methods (primarily POST). As far as I know, the only\n&gt; protocol issue (as opposed to software issue) is some form of ID that\n&gt; ensures that the same thing (e.g. purchase order) is not POSTed twice.\n&gt; Should there be a convention for doing it so that it need not be always\n&gt; done at the application level? There must be a reason that HTTP doesn&#39;t\n&gt; have this already.\n&gt;\n&gt;  Paul Prescod\n\n\n"}}