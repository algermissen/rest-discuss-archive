{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":98624433,"authorName":"bhaugen32","from":"&quot;bhaugen32&quot; &lt;bhaugen32@...&gt;","profile":"bhaugen32","replyTo":"SENDER","senderId":"OoojZk9QN4XjxrddyiEgcrksnwfb5cQ_LtkxLdG5sHcFJZGW_pKNQC2mzERfsnh-i_mrHRXWVV35LQeHYtdaGNCQ__4FMmnI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REST and state transitions","postDate":"1024329374","msgId":1538,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFlbDBxdStqbzRnQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNEMEQ1OTIyLjJCNzkxMEM4QHByZXNjb2QubmV0Pg=="},"prevInTopic":1533,"nextInTopic":0,"prevInTime":1537,"nextInTime":1539,"topicId":1533,"numMessagesInTopic":2,"msgSnippet":"... that ... Paul, it s a wonderful article, but I don t get the message that REST doesn t encourage state machines .  I get the message that REST","rawEmail":"Return-Path: &lt;bhaugen32@...&gt;\r\nX-Sender: bhaugen32@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 17 Jun 2002 15:56:38 -0000\r\nReceived: (qmail 20478 invoked from network); 17 Jun 2002 15:56:37 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m5.grp.scd.yahoo.com with QMQP; 17 Jun 2002 15:56:37 -0000\r\nReceived: from unknown (HELO n12.grp.scd.yahoo.com) (66.218.66.67)\n  by mta2.grp.scd.yahoo.com with SMTP; 17 Jun 2002 15:56:37 -0000\r\nReceived: from [66.218.67.150] by n12.grp.scd.yahoo.com with NNFMP; 17 Jun 2002 15:56:17 -0000\r\nDate: Mon, 17 Jun 2002 15:56:14 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: REST and state transitions\r\nMessage-ID: &lt;ael0qu+jo4g@...&gt;\r\nIn-Reply-To: &lt;3D0D5922.2B7910C8@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3609\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;bhaugen32&quot; &lt;bhaugen32@...&gt;\r\nX-Yahoo-Group-Post: member; u=98624433\r\nX-Yahoo-Profile: bhaugen32\r\n\r\nPaul Prescod wrote:\n&gt; Many people think of protocols in terms of state machines and state\n&gt; transitions. REST doesn&#39;t encourage this. I&#39;ve written an article \nthat\n&gt; discusses this:\n&gt; \n&gt; http://www.prescod.net/rest/state_transition.html\n\nPaul, it&#39;s a wonderful article, but I don&#39;t get the message \nthat &quot;REST doesn&#39;t encourage state machines&quot;.  I get the message \nthat &quot;REST discourages *implicit* state machines&quot; where states are \nnot available as Web resources.  \n\nThen you go on to describe RESTful techniques for implementing state \nmachines.\n\nI think for example that business deals are state machines, it&#39;s \ninescapable.  Moreover, I think that your techniques can be \ncomputationally equivalent to state machines hidden behind service \naccess points.\n\nDo you think I am missing the point, that you do really mean to \ndiscourage state-machine-thinking more generally?  If not, it may be \ntactically better to tell people that they can solve their problem \nRESTfully, rather than making statements that suggest they cannot \nsolve their problem RESTfully, in which case they will stay with SOAP.\n\nThat being said, for business problems, I think it is more accurate \nto model the state machines as states of resources rather than states \nof a conversation or a process anyway.  In other words, I think the \nway you approach it - modeling states in terms of Web resources - is \nbetter on many dimensions for business problems than the usual &quot;state \nof conversation&quot; model.\n\nFor example, a purchase order as a Web resource is a collection of \nbusiness commitments, which themselves can be Web resources.  A PO \nline item is a commitment from one party to deliver some goods or \nservices, and from the other party to pay for them.  \n\nThe computation of completeness (or any other interesting state) is \nsimple via Web resources. When all of the commitments are fulfilled, \nthe PO is complete.  Computation of completeness or any other \ninteresting state in terms of a &quot;state of conversation&quot; model can be \nvery difficult, and it is easy to construct state machines that \ndeadlock or never terminate.\n\nIn general, I really like the article.  There are some statements \nthat I don&#39;t understand, though:\n\n&quot;Business rules can be expressed in terms of the state of the \ntransaction at a particular moment rather than in terms of the \ncurrent state of the transaction.&quot; -- What&#39;s the difference?\n\n&quot;Another nice thing is that if it makes sense for the service, the \nclient could go back and change its existing answers merely by PUT-\nting to the appropriate URIs. If you change your mind about your \nquest, just go in and change the data! The server is always in \ncontrol of data in its namespace, however, so it could also make that \nURI read-only.&quot;  -- I understand what you mean there, unlike the \nprevious example. But it drives me nuts if I am reading this article \nas a way to implement state-dependent conversations in a RESTful \nmanner.  Changing an answer that has already conditioned further \nstate changes could have scarey consequences.  I know, that&#39;s what&#39;s \nbad about state dependencies in the first place, but I don&#39;t know how \nto eliminate them from real problems - only ways to move the \ncomplexities around so as to be more manageable.  In other words, if \nthe article is about avoiding state-dependent behavior, it&#39;s a good \nstatement.  If the article is about implementing state-dependent \nbehavior RESTfully, it boggles my mind.\n\nQuestion:  Is the Stateless Example similar to, a variation of, or \nthe same as continuation passing style?\n\nBut to recap, I love the article! Thanks,\nBob Haugen\n\n\n\n"}}