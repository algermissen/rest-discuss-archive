{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"ZaHpOGc44sTjO9dM-CYsRTziT6zdq90kdIQYMfYfhksGQEGdOpgT-qinoRgKD-Kl0U4tD7iBw1rgTAl4OEe_psZghwHeZT0w337z8jUdbaaqZi1Okeh2jpfy","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Representations","postDate":"1256650749","msgId":13962,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhjNnQ1dCtqYzJtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDM5MTVjNjlkMDkxMDI2MTAxOW8xZDgxMjY5MXk5Y2U1MmM4ZWE2OTBlN2E5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":13960,"nextInTopic":0,"prevInTime":13961,"nextInTime":13963,"topicId":13922,"numMessagesInTopic":36,"msgSnippet":"Hello Will. The thread is looong and taking into account too many HTTP specifics, which if you read my comments I tend to be away from. Also, it seems Roy","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19746 invoked from network); 27 Oct 2009 13:39:09 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 27 Oct 2009 13:39:09 -0000\r\nX-Received: from unknown (HELO n37b.bullet.mail.sp1.yahoo.com) (66.163.168.151)\n  by mta1.grp.sp2.yahoo.com with SMTP; 27 Oct 2009 13:39:09 -0000\r\nX-Received: from [69.147.65.172] by n37.bullet.mail.sp1.yahoo.com with NNFMP; 27 Oct 2009 13:39:09 -0000\r\nX-Received: from [98.137.34.34] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 27 Oct 2009 13:39:09 -0000\r\nDate: Tue, 27 Oct 2009 13:39:09 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hc6t5t+jc2m@...&gt;\r\nIn-Reply-To: &lt;3915c69d0910261019o1d812691y9ce52c8ea690e7a9@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Representations\r\nX-Yahoo-Group-Post: member; u=124198377; y=H2Ar4nXFpZ9_bHigVb4MdIhQVsQYl8_bHVHuEp-INAxHqOuR\r\nX-Yahoo-Profile: willmarpo\r\n\r\nHello Will.\nThe thread is looong and taking into account too many HTTP spec=\r\nifics, which if you read my comments I tend to be away from.\nAlso, it seems=\r\n Roy already answered what I was going to write.\n\nAnyway, I will write it :=\r\nD\n\n--- In rest-discuss@yahoogroups.com, Will Hartung &lt;willh@...&gt; wrote:\n&gt;\n&gt;=\r\n Thinking about this a little more, I have a question I&#39;d like clarified.\n&gt;=\r\n \n&gt; We talked about unique naming and how there shouldn&#39;t be /resource.xml\n=\r\n&gt; and /resource.json, but rather /resource and two representations based\n&gt; =\r\non the Accept header.\n&gt; \n\nThe naming of /resource.ext should not mean anyth=\r\ning to the client, but taking into account the human part, it will lead the=\r\n developer to think the .ext part of the URI is a type indicator. \n\n&gt; But i=\r\nn hindsight, what&#39;s the difference between\n&gt; \n&gt; GET /resource.xml\n&gt; GET /re=\r\nsource.json\n&gt; \n&gt; and\n&gt; \n&gt; GET /resource\n&gt; Accept: application/xml\n&gt; \n&gt; GET =\r\n/resource\n&gt; Accept: application/json\n&gt; \n\nWell, the difference, in the REST =\r\ncontext, is clear: They are three different URIs, and thus under the eyes o=\r\nf the client they are three different resources (although not necessarily t=\r\nhree different ones!).\nWhat I mean is, you have there three different &quot;name=\r\ns&quot; or ID for resources, and to the client they are three resources, period.=\r\n Now, since a resource can have more than one name, then they may be the sa=\r\nme resource. Note that I&#39;m not talking about files here, but resources. In =\r\nfact, there may be only one resource with two representations (a service th=\r\nat generates XML of JSON on request), and each URI approaches the same reso=\r\nurce in a different way. But all is hidden in the implementation, and clien=\r\nt does not know that.\n\nIt may not mean a major difference from your insider=\r\n view, but from the client view it is more complicated. See?\n\nBTW, that app=\r\nroach of service allows for expansion and evolution. YOu can add new repres=\r\nentation whenever you like. But, in that case, the generic /resource plus A=\r\nCCEPT is the best choice.\n \n&gt; Semantically, the queries can be identical. L=\r\nogically, one would\n&gt; ASSUME they&#39;re identical.\n&gt; \nQueries is a word that i=\r\ntches here, but that is already mentioned somewhere else.\n\nTo the client, i=\r\nt may be requesting any of three URIs, no queries, and each URI will return=\r\n something different. One will return only xml representation, the other on=\r\nly JSON representation (and may not be related to the URI composition!) and=\r\n the last one allows negotiation of the type. Simple.\n\n&gt; From a caching poi=\r\nnt of view, they are separate requests. A cache that\n&gt; has the XML represen=\r\ntation won&#39;t be able to answer a JSON query, so\n&gt; both have a similar cachi=\r\nng impact in terms of ensuring that the cache\n&gt; is properly synced with bot=\r\nh representations.\n&gt;\n\nTo a cache system, it depends. For instance, in DB wo=\r\nrld: If you cache systems identifies cached results by exact query, then an=\r\ny two SQL statement that differs in one space, or in the order of the Where=\r\n clauses, will create a copy of results to cache.\n\nNow, if the cache is an =\r\nintelligent one, it will identify the result by its properties, rather by t=\r\nhe SQL statement that generated them. So, later, another SQL statement that=\r\n may require a subset of the result that is already in cache, will make the=\r\n cache activate and avoid another DB call! Even more, the cache can see if =\r\npart of the query is already answered in cache, and then not to perform the=\r\n complete query since it already has some data. \n\nIn this example, fear not=\r\n of the URIs, but of your cache intelligence.\nTaking into account that you =\r\ncan have 100 URIs all pointing to the same resource, the cache that works a=\r\ngainst a canonical resource name will have no problem, but if it works with=\r\n the URI, then it will load 100 copies of the same thing.\n \nCheers!\n\nWillia=\r\nm Martinez Pomares\n\n\n"}}