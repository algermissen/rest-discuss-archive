{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":5226678,"authorName":"Jason Diamond","from":"&quot;Jason Diamond&quot; &lt;jason@...&gt;","profile":"injektilo12","replyTo":"SENDER","senderId":"GmHJZbsCJzYFTTmS8amXZAxUuZNiBVBxbzo8MlwYdSagPne9llKIJpJAWSsINa_TGM6Ov8HSW5f7rVeV2PradURCtXpWYMGkfFQ1EQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] a RESTful architecture?","postDate":"1023893963","msgId":1465,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwOTEwMWMyMTIyMSRiZDhhZGJkMCQ2NDAxYThjMEBpbmpla3RpbG8+","referencesHeader":"PDAxNjAwMWMyMTFiNiQ2MmYzMDkxMCQ4YTI2NWZhNkBDQVJMU0IxSkFESUFNTz4gPDUuMS4wLjE0LjAuMjAwMjA2MTIyMDQxMDguMDFhZWUyZThAMTkyLjE2OC4wLjU+"},"prevInTopic":1464,"nextInTopic":1471,"prevInTime":1464,"nextInTime":1466,"topicId":1457,"numMessagesInTopic":27,"msgSnippet":"... Ah. Thanks for pointing that out! I like your approach much better. ... activities... ... different bits of information. We call an order type a procedure.","rawEmail":"Return-Path: &lt;jason@...&gt;\r\nX-Sender: jason@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 12 Jun 2002 15:01:23 -0000\r\nReceived: (qmail 46751 invoked from network); 12 Jun 2002 15:01:22 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m11.grp.scd.yahoo.com with QMQP; 12 Jun 2002 15:01:22 -0000\r\nReceived: from unknown (HELO smtprelay2.dc3.adelphia.net) (24.50.78.5)\n  by mta3.grp.scd.yahoo.com with SMTP; 12 Jun 2002 15:01:22 -0000\r\nReceived: from injektilo ([68.68.56.32]) by\n          smtprelay2.dc3.adelphia.net (Netscape Messaging Server 4.15)\n          with SMTP id GXLLMX00.VEB; Wed, 12 Jun 2002 10:59:21 -0400 \r\nMessage-ID: &lt;009101c21221$bd8adbd0$6401a8c0@injektilo&gt;\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Robert Leftwich&quot; &lt;robert@...&gt;\r\nReferences: &lt;016001c211b6$62f30910$8a265fa6@CARLSB1JADIAMO&gt; &lt;5.1.0.14.0.20020612204108.01aee2e8@192.168.0.5&gt;\r\nSubject: Re: [rest-discuss] a RESTful architecture?\r\nDate: Wed, 12 Jun 2002 07:59:23 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Jason Diamond&quot; &lt;jason@...&gt;\r\nX-Yahoo-Group-Post: member; u=5226678\r\nX-Yahoo-Profile: injektilo12\r\n\r\nRobert Leftwich &lt;robert@...&gt; wrote:\n\n&gt; I&#39;m not sure about the /new as it looks suspiciously like a verb and\n&gt; REST resources should be nouns. I&#39;d be tempted to use /patients/schema\n&gt; or /patients/structure on which a GET will return the required fields\n&gt; list (alternatively the list returned from a GET to /patients could\n&gt; include a link to the patients required field structure, see also my ps\n&gt; below). You would then do a POST containing the appropriate data to\n&gt; /patients to create a new patient.\n\nAh. Thanks for pointing that out! I like your approach much better.\n\n&gt; I&#39;m a bit confused on the relationship between orders/activities and\nprocedures, as you say :\n&gt;\n&gt; &gt;Each patient has a list of orders....Each order has a list of\nactivities...\n&gt; &gt;There can be many different types of orders. Each different type requires\ndifferent bits of information. We call an order type a procedure.\n&gt;\n&gt; and later you say:\n&gt;\n&gt; &gt;This list of orders will contain a link to the page that lists all of the\nprocedures that can be used to create a new order for this type of patient.\n&gt;\n&gt; I don&#39;t understand this sentence at all.\n\nYeah, it&#39;s a little awkward. I probably shouldn&#39;t have mentioned the\ndifferent types of patients since I left out the details about those\nearlier. A procedure (in our vocabulary) can just be thought of as the\nschema for an order. In our application, when you create a new order for a\npatient, you&#39;re presented with a list of procedures. The fields that you get\nto fill in for your new order differ depending on which procedure you chose.\n\n&gt; I was thinking you might have the following resource structure:\n&gt;\n&gt; /orders\n&gt;\n&gt; on which a GET returns a list of all the available procedures( aka order\ntypes)\n&gt;\n&gt; /orders/procedure1\n&gt; /orders/procedure2\n&gt; /orders/procedure3\n&gt; ...\n&gt;\n&gt; A GET on /orders/procedureN would return the structure of that particular\norder type, including the activities, i.e.\n&gt;\n&gt; &lt;order type=&#39;procedureN&#39;&gt;\n&gt;     &lt;activities&gt;\n&gt;         &lt;activity type=&#39;activity1&#39; mandatory=true&gt;\n&gt;              ...add required activity info specification\n&gt;         &lt;/activity&gt;\n&gt;         ....\n&gt;     &lt;/activities&gt;\n&gt; &lt;/order&gt;\n&gt;\n&gt; Note that you could allow a POST to /orders/procedureN as long as the\n&gt; posted info contained a valid UUID of the patient to add the order to.\n&gt; This would allow you a bit of symmetry in the /orders and /patients URI&#39;s.\n\nSince I wasn&#39;t focusing on the vocabulary yet, it hadn&#39;t occurred to me that\nthe patient UUID could be in the submitted XML to the generic procedure\nresources. The type of order (procedure) could also be indicated in the\nmarkup like you showed. That avoids the awkward URIs where every procedure\nhas a path under every patient.\n\n&gt; If activities are always subordinate to orders do you need the\n&gt; separate /activities URI&#39;s? Could you use /patients/uuid/orders/uuid\n&gt; or alternatively /patients/uuid/orders/procedureN/activityN to POST\n&gt; the data containing the required activity information?\n\nIt&#39;s possible that an activity can change it&#39;s parent order. This could\nhappen during the merge patient process. If it&#39;s determined that two orders\nfor the two patients are the same, the activities from one get moved to the\nother and the now empty order would get deleted. I know that it sounds a\nlittle odd but it occasionally happens that the same patient and/or order\ngets entered on different disconnected clients and this has to be resolved\nwhen the clients reconnect and upload their work back to the server.\n\n&gt; PS One thing that has been bothering me in the REST examples I have\n&gt; seen - how are the required formats/structures discovered by the user?\n&gt; For example, in the case of REST-ifying the UserLand XML storage api\n&gt;\n(http://internet.conveyor.com/RESTwiki/moin.cgi/RestifyingUserlandsXmlStorag\neSystem)\n&gt; it says:\n&gt; &quot;xmlStorageSystem.registerUser()\n&gt; This method creates a new user account, or updates an existing one on\n&gt; the server. This could quite easily have been done with either an XML\n&gt; document containing this information...&quot;\n&gt;\n&gt; How do I as a user or a system find out what structure the XML document\n&gt; should be?\n\nEven if there was some standard way of obtaining the schema for a service,\napplications can never really &quot;know&quot; what those elements and attributes\n&quot;mean&quot;. Some understanding between the two parties has to be achieved before\nyou can start making use of it. RDF might change things but until then, I&#39;m\nresigned to the fact that it&#39;s impossible to expect to use a web service\n(SOAP or REST) without some development effort.\n\nThank you very much for your comments!\n\nJason\n\n\n\n\n"}}