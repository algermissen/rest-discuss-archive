{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"-PfP64wQ0fMz6y5VArBANouCgwTTR5bUm0HHjGc2blPlIu3ZbRMovZzvKsiLTSGUrmZtpy7Cx0NgTUT-4ajIw1avesNb2lA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] The &quot;purist&quot; C# REST client?","postDate":"1260546322","msgId":14126,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkxMjExMDc0NXU3YzEwZmU2Yms0YjRkYzBlY2E2ZWU3NGMxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRCMjI2NjgzLjIwNzA5MDdAaGFja2NyYWZ0Lm5ldD4=","referencesHeader":"PEI1QUM5MEYyODQ5MzQ5OEI5MEU2MjAzRERFMkE0RTY1QEpyblBDPgkgPDM5MTVjNjlkMDkxMjA5MTU0OGk1N2Q4MTZiZGszY2QxMzAxODYzYzVlM2I3QG1haWwuZ21haWwuY29tPgkgPDE2NEQwMjQ2MDRGMDRDNkVCQjlDOEI5MUFGNkMwN0M0QEpyblBDPgkgPDRCMjI1RDY0LjYwOTAwMDVAaGFja2NyYWZ0Lm5ldD4gPDRCMjI2NjgzLjIwNzA5MDdAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":14125,"nextInTopic":14130,"prevInTime":14125,"nextInTime":14127,"topicId":14110,"numMessagesInTopic":12,"msgSnippet":"My experience was that binding caching too tightly to the request object (burying it, really) was not a good idea.  When I m coding my HTTP apps, I want","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 28765 invoked from network); 11 Dec 2009 15:45:39 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m13.grp.re1.yahoo.com with QMQP; 11 Dec 2009 15:45:39 -0000\r\nX-Received: from unknown (HELO mail-fx0-f219.google.com) (209.85.220.219)\n  by mta3.grp.re1.yahoo.com with SMTP; 11 Dec 2009 15:45:39 -0000\r\nX-Received: by fxm19 with SMTP id 19so1111963fxm.17\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 11 Dec 2009 07:45:22 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.4.144 with SMTP id 16mr1665161far.36.1260546322666; Fri, \n\t11 Dec 2009 07:45:22 -0800 (PST)\r\nIn-Reply-To: &lt;4B226683.2070907@...&gt;\r\nReferences: &lt;B5AC90F28493498B90E6203DDE2A4E65@JrnPC&gt;\n\t &lt;3915c69d0912091548i57d816bdk3cd1301863c5e3b7@...&gt;\n\t &lt;164D024604F04C6EBB9C8B91AF6C07C4@JrnPC&gt;\n\t &lt;4B225D64.6090005@...&gt; &lt;4B226683.2070907@...&gt;\r\nDate: Fri, 11 Dec 2009 10:45:22 -0500\r\nX-Google-Sender-Auth: b0ce271c6edeafb0\r\nMessage-ID: &lt;b548df650912110745u7c10fe6bk4b4dc0eca6ee74c1@...&gt;\r\nTo: Jon Hanna &lt;jon@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] The &quot;purist&quot; C# REST client?\r\nX-Yahoo-Group-Post: member; u=69164307; y=VbIue12r-J8ZwB-1CIbepgzntZ0xI2XP1ZXB5fhjsoaP\r\nX-Yahoo-Profile: mamund\r\n\r\nMy experience was that binding caching too tightly to the request\nobject (b=\r\nurying it, really) was not a good idea.  When I&#39;m coding my\nHTTP apps, I wa=\r\nnt control over this, not auto-magic stuff. Also,\nsometimes I can count on =\r\nan existing cache infrastructure between my\napp (client or server) and the =\r\nWWW. When that happens, I need very\nlittle caching work done within the lib=\r\nrary itself.\n\nIMO, the really important item in this area is proper support=\r\n for\nconditional requests. Supporting GET is pretty straight-forward, PUT\ng=\r\nets messy.\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn Fri, Dec 11, 2009 at 10:34=\r\n, Jon Hanna &lt;jon@...&gt; wrote:\n&gt; Jon Hanna wrote:\n&gt;&gt; Allowing your =\r\nframework to have it&#39;s means of obtaining a WebRequest\n&gt;&gt; overridden, may b=\r\ne all you need to allow for such cache handling as a\n&gt;&gt; separate component.=\r\n\n&gt;\n&gt; Oh wait. Now I remember wanting to have caching at the level just abov=\r\ne\n&gt; this (object caching) based on HTTP caching declarations. I never did\n&gt;=\r\n entirely decide whether that would be a good idea or not.\n&gt;\n&gt;\n&gt;\n&gt; --------=\r\n----------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}