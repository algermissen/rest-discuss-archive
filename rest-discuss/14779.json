{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"X3GV8bkkKWuHFYX_CJSVcbuDJ9HIvmoK-2PLm9-HiToX-MUKhIASqEIjxt3N1my24BIxULEX_IUAN0lvDtbrdkYSJGxutCA-vqF7tt7O7Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Content Negotiation","postDate":"1266459223","msgId":14779,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwMjE3MTkxMzQzLmQwODczMjVjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwMjE3MTg1MTQ0LmMzM2M3YjJjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGhsYmdjNStrcm5oQGVHcm91cHMuY29tPgk8MjAxMDAyMTUyMzI0NTcuYTdiYzI5YWUuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjhGNTE4MTUtMEI4RC00ODczLUJDRjQtODI3QTlDN0QyRDZEQGlubm9xLmNvbT4JPDIwMTAwMjE3MTMzNDEwLjM0YjFhOTUyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDdCNDQ4NTVCLTVBQ0EtNEM3MC05OThBLUEyRjU4Q0FBQ0NGM0Bpbm5vcS5jb20+CTw1ODFiZjYxNjEwMDIxNzE0MjJoZTQyYjVjaThjMTgyYTlkNmExNGMwNjdAbWFpbC5nbWFpbC5jb20+CTwyMDEwMDIxNzE4NTE0NC5jMzNjN2IyYy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":14778,"nextInTopic":14782,"prevInTime":14778,"nextInTime":14780,"topicId":14753,"numMessagesInTopic":21,"msgSnippet":"... There is a REST mismatch in my XSLT code, sometimes I m doing substring- before($known-string) when generating URLs.  This is a pragmatic solution to the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 42818 invoked from network); 18 Feb 2010 02:14:00 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m14.grp.re1.yahoo.com with QMQP; 18 Feb 2010 02:14:00 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 18 Feb 2010 02:14:00 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 658AD509DC;\n\tWed, 17 Feb 2010 21:13:59 -0500 (EST)\r\nDate: Wed, 17 Feb 2010 19:13:43 -0700\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Guilherme Silveira &lt;guilherme.silveira@...&gt;, Stefan Tilkov\n &lt;stefan.tilkov@...&gt;, javier &lt;vrhj2000@...&gt;,\n rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100217191343.d087325c.eric@...&gt;\r\nIn-Reply-To: &lt;20100217185144.c33c7b2c.eric@...&gt;\r\nReferences: &lt;hlbgc5+krnh@...&gt;\n\t&lt;20100215232457.a7bc29ae.eric@...&gt;\n\t&lt;28F51815-0B8D-4873-BCF4-827A9C7D2D6D@...&gt;\n\t&lt;20100217133410.34b1a952.eric@...&gt;\n\t&lt;7B44855B-5ACA-4C70-998A-A2F58CAACCF3@...&gt;\n\t&lt;581bf6161002171422he42b5ci8c182a9d6a14c067@...&gt;\n\t&lt;20100217185144.c33c7b2c.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Content Negotiation\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt; \n&gt; The demo I recently posted shows exactly what is meant by URI opacity\n&gt; in REST.  The client-side XSLT code (which describes the API) could\n&gt; care less about the URI allocation scheme, aside from sometimes\n&gt; checking for the presence of a fragment (like &#39;/&#39; and &#39;?&#39;, the\n&gt; octothorpe is a reserved character in URIs), or generating relative\n&gt; URLs based on the hierarchy of my allocation scheme.\n&gt; \n\nThere is a REST mismatch in my XSLT code, sometimes I&#39;m doing substring-\nbefore($known-string) when generating URLs.  This is a pragmatic\nsolution to the limitations of Xpath 1 -- I&#39;d rather do substring-before\n(last-instance-of-&#39;/&#39;), which would be a more opaque handling of the\nURL, but the resulting code would be more complex than would be worth\nmaintaining.  So a comment is placed in the code, noting the deficiency.\n\n-Eric\n\n"}}