{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"bryan_w_taylor","from":"&quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"H8khRqwJ7QPYczbqzMWXAy7BrW9wvwGI1C384gU34Hou1evem6DORPx8b8xo5dkhXMZjPMC_oPJV_QzhwH7vWsB7LPY0HzJPKNzufoNlhq7Mgg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Restful Approaches to some Enterprise Integration Problems","postDate":"1278148343","msgId":15783,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGkwbXV0bis5dG91QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDlCM0EyRjY4LUQzNTYtNEIyOS04QUMyLUNCNjM0QzEyRUY2M0BtYWMuY29tPg=="},"prevInTopic":15782,"nextInTopic":15784,"prevInTime":15782,"nextInTime":15784,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"... OK, I ll look for this, or just accept that there was some additional context not in Roy s conclusion. ... I have trouble seeing this. On it s face, the","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 65358 invoked from network); 3 Jul 2010 09:12:39 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m14.grp.re1.yahoo.com with QMQP; 3 Jul 2010 09:12:39 -0000\r\nX-Received: from unknown (HELO n38b.bullet.mail.sp1.yahoo.com) (66.163.168.152)\n  by mta1.grp.sp2.yahoo.com with SMTP; 3 Jul 2010 09:12:39 -0000\r\nX-Received: from [69.147.65.173] by n38.bullet.mail.sp1.yahoo.com with NNFMP; 03 Jul 2010 09:12:25 -0000\r\nX-Received: from [98.137.34.73] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 03 Jul 2010 09:12:25 -0000\r\nDate: Sat, 03 Jul 2010 09:12:23 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i0mutn+9tou@...&gt;\r\nIn-Reply-To: &lt;9B3A2F68-D356-4B29-8AC2-CB634C12EF63@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: Restful Approaches to some Enterprise Integration Problems\r\nX-Yahoo-Group-Post: member; u=119533972; y=z0FOLLaUwQ2xYGvjVEuVryy1ONWtvgSGTLuTiHgBikFphLnIoGzjdFE\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...=\r\n&gt; wrote:\n\n&gt; There was discussion of REST-* on this list when it came out an=\r\nd IIRC the criticism was quite well explained in those posts. Check out the=\r\n postings around the date of the quoted posting by Roy.\n\nOK, I&#39;ll look for =\r\nthis, or just accept that there was some additional context not in Roy&#39;s co=\r\nnclusion.\n\n&gt; Basically the problem is that REST-* attempts to bend REST to =\r\nmatch the usuall enterprisey mind set, claiming that this and that would be=\r\n a must-have. What should really happen is that &quot;enterprise people&quot; learn f=\r\nrom the Web and adjust their mind set to pruodcue systems that are less com=\r\nplex and more easily evolvable.\n\nI have trouble seeing this. On it&#39;s face, =\r\nthe JBoss efforts looks like an attempt to solve several problems in what a=\r\nppears to be a sincere attempt to be RESTful. It appears many believe it is=\r\n a failed attempt, so I guess I want to know if there are other competing a=\r\nttempts that get it right.\n\n&gt; It just makes no sense to claim complexity is=\r\n necessary just because one fails to understand how to make things simpler.=\r\n REST-* originates from this kind of thinking and hence claims that there a=\r\nre lots of things that need to be addressed.\n\n&gt;&gt; He makes two assertions th=\r\nat follow:\n&gt;&gt; - Distributed transactions are an architectural component of =\r\nnon-REST interaction.\n&gt;\n&gt; which is true because they violate REST&#39;s statele=\r\nss server constraint (among others I guess).\n\nI can see this: isolation, th=\r\ne I in ACID, is inherently a form of conversational state. This raises the =\r\nquestion, can I have ACD and be RESTful? If I relax C to eventual consisten=\r\ncy (E), I think I see how I can have AED in a RESTful setting by submitting=\r\n batch requests, persisting them on arrival, and using guaranteed delivery =\r\nto all affected servers.\n\n&gt;&gt; - Message queues are a common integration tech=\r\nnique for non-REST architectures.\n&gt;&gt;\n&gt;\n&gt; Yes, because they violate the hype=\r\nrmedia contraint (would need to check which else).\n\nThis isn&#39;t obvious to m=\r\ne, so I&#39;m going to ask you to elaborate if you don&#39;t mind. It is, however a=\r\n little beyond what I&#39;ve asked for in this thread: a queue is sufficient bu=\r\nt not necessary for guaranteed delivery. I&#39;ll move this discussion to anoth=\r\ner thread.\n\n[...]\n\n&gt;&gt; There are patterns of integration, and I expect to fi=\r\nnd them in every architectural style.\n&gt;\n&gt; This is an interesting topic beca=\r\nuse you can start this train of thought one level up: If your problem space=\r\n requires interation (the Web does, and enterprise IT clearly also does) th=\r\nen it is much wiser to pick an architectural style that is tailored towards=\r\n dealing with integration. Such a style must constrain the connectors (thin=\r\nk component API) to be uniform because only then can you avoid to have to d=\r\no point to point integration every time two components talk to each other.\n=\r\n&gt;\n&gt; REST is such a style (surprise, surprise :-) through and through. REST =\r\nhas been designed to deal with integration problems (complexity and change)=\r\n.\n\nI don&#39;t follow this argument. Every architectural style used to solve in=\r\ntegration problems makes a claim to have been designed to deal with integra=\r\ntion problems. Certainly MQ protocols do this.\n\n&gt; Interestingly, no OO-base=\r\nd pattern (especially not the service pattern) out there attempts to constr=\r\nain the connectors of components. That is why all these attempts (e.g. SOA)=\r\n are essentially meaningless when it comes to reducing integration complexi=\r\nty. IOW, they cannot guarrantee reduced complexity and good evolvability - =\r\nREST does because it limits the variation of the component interface (to be=\r\n uniform).\n\nSOA and REST are orthogonal architectural styles. SOA mandates =\r\nloose coupling, abstration, reusability, autonomy, statelessnes, discoverab=\r\nility, and composability, and does so in a way relies on service contracts =\r\nto enforce governance. Each of these principles has benefits for integratio=\r\nn in an enterprise setting, which is why nearly every enterprise adopts the=\r\nm. REST adds other constraints (uniform interface, HATEOAS) and overlaps wi=\r\nth a few of the above (statelessness). These also provide benefits for inte=\r\ngration. My view is that if we adopt an architecture within intersection of=\r\n the two styles, the result will be good.\n\n&gt;&gt; It may be that a distributed =\r\ntransaction pattern must must violate one of the RESTful architecure princi=\r\nples, but this is far from obvious.\n&gt;\n&gt; It requires understanding of REST, =\r\nyes. OTH, most of the problems people have (at least I did) is due to the f=\r\nact that &#39;they&#39; lack proper knowledge of software architecture in general (=\r\nSee Perry&Wolf, Garlan&Shaw, Taylor&Medvidovic and the first half of Roy&#39;s =\r\ndissertation). If you started with that knowledge already - understanding R=\r\nEST would be pretty quick as would be understanding the rationale behind th=\r\ne mentioned constraint violation. (Personally the journey took me about 8 y=\r\nears and I keep having epiphanies :-)\n\nIf the goal is to reduce integration=\r\n complexity, solutions that require 8 years to understand before they are u=\r\nseful fail. Hopefully, 80%, 95%, or 99% understanding is enough to solve mo=\r\nst problems, and I hope these levels of understanding can be obtained in sh=\r\norter timeframes.\n\n&gt;&gt; Maybe this is some deep corollary of the CAP theory o=\r\nr something. Or perhaps not.\n&gt;&gt;\n&gt;&gt; The corresponding statement about messag=\r\ne queues seems baffling. These solve a harder problem than guaranteed deliv=\r\nery. Queues solve guaranteed delivery to exactly one consumer among competi=\r\nng consumers with some fairness guarantees.\n&gt;\n&gt; Well, that is a layer 4 iss=\r\nue (transport). What do MQs do in terms of reducing integration complexity =\r\nor making a system more easily changeable? All the latter is a layer 7 issu=\r\ne.\n\nLet me explain my language. As I use the term, delivery is a layer 7 is=\r\nsue: a message is delivered when the receiving application says it is deliv=\r\nered subject to any desired application-level conditions. EG: this could in=\r\nvolve the successful completion of any long running operation. Message arri=\r\nval is the corresponding layer 4 concept. Clearly arrival is a prerequisite=\r\n for delivery. For example, the taxi must arrive, but the customer is &quot;deli=\r\nvered&quot; to the taxi when a contract is formed that may involve an out of ban=\r\nd negotiation and acceptance by both parties.\n\nAs to the benefits of messag=\r\ning generally, this is all explained well in Hophe and Woolf&#39;s book Enterpr=\r\nise Integration Patterns.\n\n&gt;&gt; How would I implement a RESTful way to have a=\r\nirport passengers acquire taxi transportation at the airport in a fair way?=\r\n\n\nI shouldn&#39;t have asked this question in this thread, as the merits of que=\r\nues are off topic to what I asked. I&#39;ll open another thread and re-ask my q=\r\nuestion.\n\n\n\n"}}