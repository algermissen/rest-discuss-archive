{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"etiRyfpWQCBVc9g4HBSF4zt5lu9VMyhdpoaor6Yv9nVGQCCYin_jmgl5hMJOE8qa0_lLtSZZk9o2JELPPHiSLcc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Use verbs in URIs? [was: REST Best Practices]","postDate":"1024419532","msgId":1555,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMEY2NkNDLjIwNzA3MDZAYnJpdm8ubmV0Pg==","referencesHeader":"PDAwNTQwMWMyMTZlMCRhMjQ5NjZjMCQwMjAxYThjMEB1bHlzc2VzPg=="},"prevInTopic":1554,"nextInTopic":1556,"prevInTime":1554,"nextInTime":1556,"topicId":1517,"numMessagesInTopic":30,"msgSnippet":"For this example, and to make it more RESTful, I would change it to this... ... NEW: Order order = new Order( http://www.parts-depot.com/orders/32432 ); ","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 18 Jun 2002 16:56:52 -0000\r\nReceived: (qmail 38031 invoked from network); 18 Jun 2002 16:56:52 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m4.grp.scd.yahoo.com with QMQP; 18 Jun 2002 16:56:52 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.238)\n  by mta3.grp.scd.yahoo.com with SMTP; 18 Jun 2002 16:56:52 -0000\r\nReceived: (qmail 6491 invoked from network); 18 Jun 2002 16:56:51 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.103]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 18 Jun 2002 16:56:51 -0000\r\nMessage-ID: &lt;3D0F66CC.2070706@...&gt;\r\nDate: Tue, 18 Jun 2002 12:58:52 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Use verbs in URIs? [was: REST Best Practices]\r\nReferences: &lt;005401c216e0$a24966c0$0201a8c0@ulysses&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\nFor this example, and to make it more RESTful, I would change it to this...\n\nOLD:\n&gt;   CMethod order_parts(&quot;http://www.parts-depot.com/parts/order&quot;);\n&gt;   CStringTable params;\n&gt;   params.addItem(&quot;partNumber&quot;, &quot;01234&quot;);\n&gt;   order_parts.execute(params);\n\nNEW:\nOrder order = new Order(&quot;http://www.parts-depot.com/orders/32432&quot;);\norder.addPart( new PartNumber(01234));\n\n// RESTful magic setting state, /NOT/ calling method\norder.complete();\n\n// The Transfer part of Representational State Transfer\ntransfer(order.toXML());\n\nNotice how we just manipulate the state of the object.  We do it twice, \nonce when we add Parts and once when we declare this order as complete. \n  The server does not get the new state of the order until we transfer \nit (by PUTing the order on top of the old one, using the same URI).\n\nHow does the server know when to process orders?  By checking the state \nof the objects PUT to the server.  The server has a state machine \nlooking for particular states of objects.\n\nRemember, in REST you are not calling methods.  You are merely \ntransfering the state of objects.  Leave it up to the handler of the \nresource to do something smart with it.  It&#39;s only the client&#39;s job to \nmanipulate that object&#39;s state and PUT it back.\n\n&gt; The above URI is clearly *not* a noun resource, unless you see the method as a\n&gt; noun resource that can be invoked like a verb.  Bit of a stretch.  In general,\n&gt; my aim is to make it easy as possible for programmers to invoke behavior in\n&gt; their distributed while being as RESTful as possible.  I guess what people are\n&gt; advocating is something more like this:\n\nActually, I would argue that the above URI \n(&quot;http://www.parts-depot.com/parts/order/34254&quot;) *is* a noun, it&#39;s \nidentifying a particular order.  If your aim is to make it easy for \nprogrammers, take away method calls and actions all together.  That way, \nthere is no API to show them or have them mess up.  All they have to do \nis unstand the object hierarchy of your business domain.\n\n&gt;   CMethod order_parts(&quot;http://www.parts-depot.com/parts/01234&quot;);\n&gt;   CStringTable params;\n&gt;   params.addItem(&quot;action&quot;, &quot;order&quot;)\n&gt;   order_parts.doPost(params);\n&gt; \n&gt; If this is more RESTful, then it would be easy to refactor my method concept to\n&gt; work this way.  Is there a more RESTful way to approach this example?\n\nI believe my example above is more RESTful.  Here you are declaring an \naction to be performed on that order object.  All you really want to do \nis set the state of the object order to something that means &quot;Done&quot;. \nThen let the server do to it whatever it wants to.\n\n\n&gt; The only thing holding me back is making sure it&#39;s coherent enough for us to\n&gt; work with.  Then I hope we can really sit down and hash through these concepts.\n\nI think one of the key things to remember here is that you are just \ntransfering objects around the network.  Don&#39;t try to send programatic \ninstructions along with the object.  Let the server&#39;s state machine \nhandle what to do.  Let your programmers just manipulate objects and \ntransfer them around.  It greatly simplifies your API to nothing but the \nobject tree.\n\nPlease let me know if that makes sense, or helps you out.  I believe the \nonly verbs you want are PUT, DELETE, and GET.\n\nSeth\n\n\n"}}