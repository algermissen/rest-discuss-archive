{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"3gkI2S13672GTYviNIEnyc-tZvEwPWoJG2RItS0PK8FdQ-C2UISO0HZzcBnJR3HGPSCjCIYuNLa_Joh1rK6VQ74Ms3tZgU2Tq-jTHc8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Beating my head against the &quot;session management&quot; wall","postDate":"1030329984","msgId":2217,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMDkwMWMyNGNhYSRjNTRhYTUzMCQ2NDAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":0,"nextInTopic":2218,"prevInTime":2216,"nextInTime":2218,"topicId":2217,"numMessagesInTopic":13,"msgSnippet":"*sigh*  Do you ever have the feeling that the solutions set before you are all not-quite-good-enough, each in their own way?  Currently, this is how I am","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 02:45:40 -0000\r\nReceived: (qmail 65725 invoked from network); 26 Aug 2002 02:45:40 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 26 Aug 2002 02:45:40 -0000\r\nReceived: from unknown (HELO mail.bbglobex.com) (208.251.163.4)\n  by mta1.grp.scd.yahoo.com with SMTP; 26 Aug 2002 02:45:42 -0000\r\nReceived: from seairthlaptop [68.10.252.58] by mail.bbglobex.com with ESMTP\n  (SMTPD32-7.12) id A56A8700C0; Sun, 25 Aug 2002 22:41:46 -0400\r\nMessage-ID: &lt;000901c24caa$c54aa530$6400a8c0@seairthlaptop&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Beating my head against the &quot;session management&quot; wall\r\nDate: Sun, 25 Aug 2002 22:46:24 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n*sigh*  Do you ever have the feeling that the solutions set before you are\nall not-quite-good-enough, each in their own way?  Currently, this is how I\nam feeling about session management when it comes to REST...\n\nKnown options:\n\n1) HTTP Authentication:  This is a simple, non-intrusive solution.  However,\n&quot;basic&quot; is insecure and &quot;digest&quot; is not consistently implemented.\n\n2) Generating your own &quot;session id&quot;.  This has the problem that you must\nprovide an &quot;intrusive&quot; login screen/process.  Further, you then need to\ncontinue tracking the session id.  With this, there are two techniques\n(well, three sorta):\n\n    a) Session Cookie:  If done properly, this is effectively no different\nthan http authentication in the sense that the browser is sending an\n&quot;authenticating&quot; identifier with each request.  Session cookies are somewhat\nnicer than http authentication in that they are potentially more secure (if\ndone correctly) and that it is easier for the server to handle them (e.g.\ndeleting them, updating them, etc.).  The major down side is that current\nbrowsers allow the users to reject session cookies.\n\n    b) Query String:  This one, from a REST POV, seems like a really bad\ntechnique.  This effectively creates non-permanent unique URL spaces for\neach user session.  Further, the session id may not actually be related to\nthe resource that the URL (with the query string) is pointing to.  However,\nthe good thing about query strings is that, short of a user typing an\naddress into the browser or using a stored link, the server has control over\nthem and the user does not have the ability to reject them.\n\n    c) Hidden Field: if you are not using the QueryString method and are\nhave a form, you could put the session id in a hidden field.  However, you\nare then limited to using only the POST method.  Otherwise, the browser will\ngenerate a URL with your hidden field showing up in a QueryString.  But, if\nthe request is guaranteed to be idempotent, then it is my understanding that\nthe GET method should be used, not POST.\n\n\nNow, I know that all of the above methods (with the possible exception of\ndigest authentication, if done correctly and at a certain cost) still allows\nsomeone to sniff the connection and get enough information to potentially\nmimic the session.  This could all be taken care of using SSL (at which\npoint, even basic authentication is secure), but that seems to be adding a\nlot of overhead.  When I only need to authenticate the request, not secure\nthe response, this seems like overkill (and it can be expensive too).\n\n\n\nFrankly, I think I am leaning towards session cookies at this point.  Since\nthe site will primarily be for web developers, I am hoping that they at\nleast accept session cookies.  I would have liked to go the HTTP\nauthentication route, but it just seems to unsecure for my taste\n(considering the fact that I am not using SSL).  If anyone out there can\nconvince my why I should not follow this route, esp. as far as REST is\nconcerned, please say so.  I really would like to be convinced of another\nmethod.\n\n\nIN THE MEANTIME....\n\nI have been thinking of this dilemma (the one above).  And I have an idea.\nI am wondering whether the idea would work well with the REST model or not.\nIf it would, I would like to get a group of people together to formalize it\nand get it submitted to the right people.\n\nWhat I propose is that web browsers should support a new HTTP header called\n&quot;session-id&quot;.  This header would conform to the following rules:\n\n1) The header works sort of like a session cookie.  When the header is sent\nto the browser, you can specify the domain and path (http authentication\nrealm?) and an expiration timestamp.  The timestamp only ensures that the\nheader will stop being sent back to the server if the browser is not closed\nby that point.  Just like current cookies, setting the timestamp to the past\nwill cause the session-id header to become immediately stale.\n\n2) THE USER MAY NOT REJECT THE HEADER.  Browsers that allow optional\nrejection will be considered NON-STANDARDS-COMPLIANT.  Proxies SHOULD NOT\nREJECT THE HEADER.  I would prefer to make this MAY NOT, but I doubt it\nwould stick.  What are proxies allowed to do with the www-authenticate\nheader?\n\n3) the www-authenticate and session-id headers are mutually exclusive.  In\nother words, if a browser receives a session-id header which matches the\nexisting realm, the browser dumps the www-authenticate response and uses\nsession-id instead.  This allows the http authentication methods to still be\nused, but also allows the request headers to be replaced with something that\nis more controllable by the server.\n\n\nThough I know that more thought needs to be put into the idea, I feel it\nwould provide the consistency of basic authentication, the flexibility and\noverhead of cookies, and the security of digest authentication.  Note that\nit is not even necessary to use HTML forms, since http authentication could\nbe used as the first step then replaced as in #3 above.  However, if one\n*really* wants the nice look, they could do that as well.\n\nSo, what do you all think?  Would this interfere with the REST model?\n\n---\nSeairth Jacobs\nseairth@...\n\n\n\n\n"}}