{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"31rTRsUD4WF3ppNBECn-yaMRVAHviWFxAtWwjiFqpnjNbVmaYgzGIFGORoRN_zjeN93d8Cw8SofU5zn8uaj6Jbkb4q8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST vs COM","postDate":"1156238363","msgId":6497,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0RUFDQzFCLjEwOTA3QGhhY2tjcmFmdC5uZXQ+","inReplyToHeader":"PDQ0RUEzNDdBLjcwNTAyMDNAaG9tZS5zZT4=","referencesHeader":"PDQ0RUEzNDdBLjcwNTAyMDNAaG9tZS5zZT4="},"prevInTopic":6496,"nextInTopic":6498,"prevInTime":6496,"nextInTime":6498,"topicId":6493,"numMessagesInTopic":19,"msgSnippet":"... COM passes dead representations around. COM hides the deadness , REST doesn t, though a RESTful system can. Experience shows that hiding the reality of","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67683 invoked from network); 22 Aug 2006 09:20:24 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m31.grp.scd.yahoo.com with QMQP; 22 Aug 2006 09:20:24 -0000\r\nReceived: from unknown (HELO postie1.hosting365.ie) (82.195.128.118)\n  by mta6.grp.scd.yahoo.com with SMTP; 22 Aug 2006 09:20:24 -0000\r\nReceived: from [192.168.100.14] (unknown [83.70.80.115])\n\tby postie1.hosting365.ie (Postfix) with ESMTP id 6FAAD1696581A\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 22 Aug 2006 10:19:19 +0100 (IST)\r\nMessage-ID: &lt;44EACC1B.10907@...&gt;\r\nDate: Tue, 22 Aug 2006 10:19:23 +0100\r\nUser-Agent: Mozilla Thunderbird 1.0.2 (Windows/20050317)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nReferences: &lt;44EA347A.7050203@...&gt;\r\nIn-Reply-To: &lt;44EA347A.7050203@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] REST vs COM\r\nX-Yahoo-Group-Post: member; u=164939419; y=3ox6dApQ1CjXs_JoR1RKrYN7H-n6Httc68cI0cd4oz1eIJT1\r\nX-Yahoo-Profile: hack_poet\r\n\r\n&gt; On a 1000 feet level it seems to me that REST, COM, Corba etc solve a \n&gt; similar problem, namely how to componetize a system and how the \n&gt; components communicate. One main difference is that in REST &#39;dead&#39; \n&gt; representations of objects are passed around, and in COM et al. live \n&gt; objects are passed around.\n\nCOM passes &quot;dead&quot; representations around. COM hides the &quot;deadness&quot;, REST \ndoesn&#39;t, though a RESTful system can.\n\nExperience shows that hiding the reality of the network leads to poor \ndecisions, but also that at some point you really do need to hide it \nsome of the time to concentrate on can.\n\n&gt; Has anyone here worked with both approaches? What are the strengths and \n&gt; weaknesses of the two?\n\nI have. There&#39;s a bit of comparing apples and oranges here, or more \naccurately comparing apple pies and oranges (COM hides how the apples \ngot into the pie - and maybe like McDonald&#39;s apple pie, it isn&#39;t as much \napple as you&#39;re led to believe [take a look at the ingredients some day]).\n\n&gt; On the client side it seems like COM can be much easier to use. You just \n&gt; get your COM objects and use them like normal objects.\n\nHave you ever hand-hacked a COM object&#39;s marshalling code? Even just \nslighly hand-hacking the VTable like one had to do in VB6 to get certain \nthings to happen is pretty hairy (even before considering that VB6 \nreally wasn&#39;t designed to let you do that). REST is way easier.\n\nAgain, COM is easy because there are toolkits that help you deal with \nthem, but you&#39;re comparing REST with COM + toolkit.\n\n &gt; When using REST\n&gt; you have to figure out the URI, parse the representation, and generate \n&gt; representations to send back to the server. But I haven&#39;t used COM that \n&gt; much so it might be trickier in practice (I&#39;ve read that e.g. the \n&gt; reference counting used in some implementations is quite error prone; \n&gt; another problem might be versioning).\n\nReference counting in COM is pretty easy when it&#39;s handled for you, but \nyes once you have to deal with it yourself it&#39;s still pretty easy, but a \nnightmare to debug if you slipped up. Versioning is tricky too (though \nIMO, Microsoft have gone from understating the issue - when COM was \ntheir current baby - to overstating it - now that .NET is).\n\n&gt; In COM you get some objects and then you make your operations directly \n&gt; on the objects. In REST, on the other hand, you have to go to one \n&gt; destination, the server, for all operations. That makes COM appear to \n&gt; follow object orientation more closely and easier to use, but I&#39;m not \n&gt; sure that&#39;s the case.\n\nIn COM you get distribution, marshalling, serialisation and a few other \nthings. In REST you get distribution - again the comparison isn&#39;t quite \nright.\n\n&gt; Is REST inherently more inefficient, in terms of performance and memory \n&gt; consumption? Regarding performance I&#39;m mainly thinking of generating / \n&gt; parsing the representations (XML or other format), but perhaps \n&gt; marshalling in COM is equally expensive? Regarding memory consumption \n&gt; I&#39;m thinking of the real objects and the representations, i.e. the \n&gt; data&#39;s in two locations. Do you think REST can be used on a device with \n&gt; restricted resources, such as a mobile phone or PDA?\n\nSerialisation is hard to compare (XML has some advantages over binary \nformats, and some disadvantages). That the data is in two locations is a \nmisleading point - this is also happening with COM (some data may not be \nsent until needed, but you can do that with REST too).\n\nFurther a binary format can still be used with REST. I don&#39;t think those \nwho favour REST would be often inclined towards binary formats for \nvarious reasons, but it&#39;s not an inherent part of the system - the \nserialisation of a COM object that referred to other objects by URIs \n(hence keeping hypertext, of a sort, as the engine) could be transferred \nby a RESTful protocol.\n\nWhere REST does offer some gains (sometimes massive gains) is in its \ncaching model, which in some cases (i.e. when it is possible to tell \nwhen a resource was last meaningfully changed, possible to know it would \nnever change, possible to know it won&#39;t change until a certain date, \npossible to know changes in the next x minutes won&#39;t be crucial to \noperations, etc.) offers huge reductions on network usage.\n\n&gt; Is it possible to put a REST layer on top of a COM solution?\n\nYes, any well-built (that is, works well with the web&#39;s architecture, \nrather than fighting it) Classic ASP application is a REST application \nbuilt on top of a COM application (Classic ASP used COM internally, and \nmost used COM for e.g. data-access). I&#39;m pretty sure this isn&#39;t what you \nmean though.\n\nYou can also (I have done so) build a COM client for RESTfully \ntransmitted data that a COM (Classic ASP again) web application provides.\n\n"}}