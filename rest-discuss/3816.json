{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":40455398,"authorName":"Julian Reschke","from":"&quot;Julian Reschke&quot; &lt;julian.reschke@...&gt;","profile":"JulianReschke","replyTo":"SENDER","senderId":"rclguSSvWQtHnu4wg4Dmd5v5Jimx9zy2SyLiEIyKWMJAEQP9V6HMxcG3oxihIC8wV8oH8dPOUH0D9wPT5waC-b8jE_99uVZUEf8o75qTgg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] HTTP 4xx response entities","postDate":"1059633091","msgId":3816,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEpJRUdJTkNITUxBQkhKQklHS0JDTUVHRUlBQUEuanVsaWFuLnJlc2Noa2VAZ214LmRlPg==","inReplyToHeader":"PDAwNzkwMWMzNTcwNSRjNWM3YmI0MCRhMDAwYThjMEBTZWFpcnRoQTMxPg=="},"prevInTopic":3812,"nextInTopic":3817,"prevInTime":3815,"nextInTime":3817,"topicId":3812,"numMessagesInTopic":6,"msgSnippet":"I think it s a good idea, but it seems you re re-inventing something that already exists in WebDAV protocols: ","rawEmail":"Return-Path: &lt;julian.reschke@...&gt;\r\nX-Sender: julian.reschke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 32874 invoked from network); 31 Jul 2003 06:32:11 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m7.grp.scd.yahoo.com with QMQP; 31 Jul 2003 06:32:11 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta1.grp.scd.yahoo.com with SMTP; 31 Jul 2003 06:32:11 -0000\r\nReceived: (qmail 16527 invoked by uid 65534); 31 Jul 2003 06:31:59 -0000\r\nReceived: from p3EE24825.dip.t-dialin.net (HELO lisa) (62.226.72.37)\n  by mail.gmx.net (mp023) with SMTP; 31 Jul 2003 08:31:59 +0200\r\nTo: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;,\n\t&quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] HTTP 4xx response entities\r\nDate: Thu, 31 Jul 2003 08:31:31 +0200\r\nMessage-ID: &lt;JIEGINCHMLABHJBIGKBCMEGEIAAA.julian.reschke@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nIn-Reply-To: &lt;007901c35705$c5c7bb40$a000a8c0@SeairthA31&gt;\r\nImportance: Normal\r\nFrom: &quot;Julian Reschke&quot; &lt;julian.reschke@...&gt;\r\nX-Yahoo-Group-Post: member; u=40455398\r\nX-Yahoo-Profile: JulianReschke\r\n\r\nI think it&#39;s a good idea, but it seems you&#39;re re-inventing something that\nalready exists in WebDAV protocols:\n\n\thttp://greenbytes.de/tech/webdav/rfc3253.html#rfc.section.1.6\n\nNote that the format doesn&#39;t do all that your proposal does, but it is\nextensible. It also avoids the issue of code collisions by marshalling XML\nerror elements instead.\n\n--\n&lt;green/&gt;bytes GmbH -- http://www.greenbytes.de -- tel:+492512807760\n\n&gt; -----Original Message-----\n&gt; From: Seairth Jacobs [mailto:seairth@...]\n&gt; Sent: Thursday, July 31, 2003 3:48 AM\n&gt; To: rest-discuss\n&gt; Subject: [rest-discuss] HTTP 4xx response entities\n&gt;\n&gt;\n&gt; Typically, entities in a 4xx response have been html messages\n&gt; giving details\n&gt; of the error.  This is fine if the client is a web browser, but\n&gt; more or less\n&gt; useless if the client doesn&#39;t work with html.  For instance, suppose you\n&gt; have a client that GETs, POSTs, PUTs, and DELETEs XML documents.  If a PUT\n&gt; fails, then an appropriate error response must be returned (e.g. 403\n&gt; Forbidden).  Ideally, the response entity would given an\n&gt; indication of what\n&gt; went wrong and the format of the entity would be something that the client\n&gt; understood.  In this case, it makes sense that the response entity would\n&gt; likely be XML since it was the content-type of the request entity.\n&gt;\n&gt; So, where to go from here?  Is there a specification for conveying &quot;error&quot;\n&gt; information? If not, I would like to propose the following:\n&gt;\n&gt; The general format would be something like:\n&gt;\n&gt; &lt;responseMetadata level=&quot;&quot; code=&quot;&quot;&gt;\n&gt;     details\n&gt; &lt;/responseMetadata&gt;\n&gt;\n&gt; &quot;level&quot; can be either &quot;HTTP&quot; or &quot;APPLICATION&quot;.  &quot;HTTP&quot; would be used to\n&gt; provide extended response information beyond what HTTP currently allows.\n&gt; For instance, if the response were 406 (Not Acceptable), the details could\n&gt; list the possible content-types that could be returned.\n&gt; &quot;APPLICATION&quot; would\n&gt; be used to provide extended response information about the processing\n&gt; application.  For instance, when the PUT of an XML document fails\n&gt; due to an\n&gt; invalid value, this level would be used to indicate the failure was not at\n&gt; the HTTP level.\n&gt;\n&gt;     Note: &quot;realm&quot; or &quot;type&quot; may be a better name than &quot;level&quot;.\n&gt;\n&gt; &quot;code&quot; is a akin to an error number.  The type of code used depends on the\n&gt; value of &quot;level&quot;.  If level=&quot;HTTP&quot;, then the code would be the same as the\n&gt; HTTP response code (e.g., if a 403 response is sent, then code=&quot;403&quot;).  If\n&gt; level=&quot;APPLICATION&quot;, then the possible values of code are\n&gt; application-specific.\n&gt;\n&gt;     Note: Maybe for level=&quot;HTTP&quot;, the &quot;code&quot; would be left off, as it is\n&gt; redundant.\n&gt;\n&gt; The &quot;details&quot; would be additional markup specific to the level and code\n&gt; given.  In the case of level=&quot;HTTP&quot;, this specification would be\n&gt; fleshed out\n&gt; to include &quot;standard&quot; markup for each response code (if there is\n&gt; any).  For\n&gt; level=&quot;APPLICATION&quot;, the nature of the markup is entirely\n&gt; application-specific.\n&gt;\n&gt; For example:\n&gt;\n&gt; 1) POST an &quot;application/xml&quot; document returns:\n&gt;\n&gt; HTTP/1.1 403 Forbidden\n&gt; Content-Type: application/responseMetadata+xml\n&gt;\n&gt; &lt;responseMetadata level=&quot;APPLICATION&quot; code=&quot;14&quot;&gt;\n&gt;     &lt;!-- code=&quot;14&quot; indicates a missing element in\n&gt;         the request. In this case, &quot;identity&quot;. --&gt;\n&gt;     &lt;element name=&quot;identity&quot;/&gt;\n&gt; &lt;/responseMetadata&gt;\n&gt;\n&gt; 2) GET an &quot;text/oddball&quot; document returns:\n&gt;\n&gt; HTTP/1.1 406 Not Acceptable\n&gt; Content-Type: application/responseMetadata+xml\n&gt;\n&gt; &lt;responseMetadata level=&quot;HTTP&quot;&gt;\n&gt;     &lt;!-- listed in order of preference? --&gt;\n&gt;     &lt;content-type value=&quot;text/xml&quot;/&gt;\n&gt;     &lt;content-type value=&quot;application/xml&quot;/&gt;\n&gt;     &lt;content-type value=&quot;image/gif&quot;/&gt;\n&gt;     &lt;content-type value=&quot;text/html&quot;/&gt;\n&gt; &lt;/responseMetadata&gt;\n&gt;\n&gt;\n&gt;\n&gt; Additional notes:\n&gt;\n&gt; 1) This could also be used for 5xx responses.\n&gt;\n&gt; 2) This could technique *could* be used to respond to OPTIONS\n&gt; request (with\n&gt; a 200 response).  For level=&quot;HTTP&quot;, additional information about\n&gt; the list of\n&gt; understood request headers and their possible values could be given.  For\n&gt; level=&quot;APPLICATION&quot;, additional application-specific information about the\n&gt; resource could be given.\n&gt;\n&gt; 3) Though this response could be used for requests other than POSTing and\n&gt; PUTing of XML documents, an additional level of &quot;XML&quot; may be\n&gt; provided, where\n&gt; a series of codes and detail would be provided which correspond to the\n&gt; well-formedness rules in the XML specification.  Is there maybe a\n&gt; list like\n&gt; this already?\n&gt;\n&gt; At any rate, you all get the idea... what do you think?\n&gt;\n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@...\n&gt;\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n"}}