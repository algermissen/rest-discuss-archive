{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"a5te0g29IYEE2rp_iRwvY5ydkzkOcrUBWsEvIobfFseDutImJ_0HhEKcbfacDEdiEkXQ7qBu78BkBj3GSlmTF0nDkSQi4d_icji5ZMUC8Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011979535","msgId":274,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMzkxNnpHT2pFbzBUT3drNEQwMDAwZWViMkBob3RtYWlsLmNvbT4=","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI1MDgxMTUyMC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":272,"nextInTopic":276,"prevInTime":273,"nextInTime":275,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... From: S. Alexander Jacobson  ... They use a persistent response. If the connection is closed, they re-open it. That might be where the","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 25 Jan 2002 17:25:38 -0000\r\nReceived: (qmail 63253 invoked from network); 25 Jan 2002 17:25:36 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m6.grp.snv.yahoo.com with QMQP; 25 Jan 2002 17:25:36 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.96)\n  by mta1.grp.snv.yahoo.com with SMTP; 25 Jan 2002 17:25:36 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 25 Jan 2002 09:25:36 -0800\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;Pine.WNT.4.43.0201250811520.1400-100000@...&gt;\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nDate: Fri, 25 Jan 2002 09:25:35 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4807.1700\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4807.1700\r\nMessage-ID: &lt;OE3916zGOjEo0TOwk4D0000eeb2@...&gt;\r\nX-OriginalArrivalTime: 25 Jan 2002 17:25:36.0618 (UTC) FILETIME=[4D3EB4A0:01C1A5C5]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\n\n&gt;\n&gt; I just took a look at the two knownow demos...\n&gt; If you are talking about the knownow web clients,\n&gt; they don&#39;t open a peristent GET, they just make\n&gt; repeated requests, (polling the server).  This is\n&gt; a workaround for the lack of sockets in\n&gt; javascript.  And is much less efficient than a\n&gt; straight socket conection would be.\nThey use a persistent response. If the connection is closed, they re-open\nit. That might be where the &#39;repeated requests&#39; are coming from. Those are\nvery infrequent.\n\n&gt;\n&gt; If you are talking about the knownow event\n&gt; routers, it sounds like they are implementing\n&gt; listservs.  If they are sending out 10k concurrent\n&gt; email messages, that is very nice.  If they are\n&gt; sending out only 100-1000 concurrent messages and\n&gt; just claim a max of 10k listeners, that is\n&gt; incredibly unimpressive.\nOh. Remember, I don&#39;t have real numbers as I do not work there - it could be\nbigger and I would have no way of knowing.\nThese are 10K concurrent listeners, I don&#39;t know the fan-out of an event\n(how many listeners per event average).\nThis is only one node in a cluster - I don&#39;t know that there is a limit to\nthe cluster size.\n\n&gt;\n&gt; Either way, this has little to do with persistent\n&gt; GET and the merits of HTTP for presence\n&gt; applications.  The main point is that HTTP is\n&gt; suboptimal for this application (but you may need\n&gt; it if the client is a web browser).\nIf the client were another server, would http be sufficient?\n\n&gt;\n&gt; &gt; &gt; Again, that may be, but since you also have to\n&gt; &gt; &gt; write a custom client, I don&#39;t see the bonus of\n&gt; &gt; &gt; HTTP here.\n&gt; &gt; I wrote a buddy list/IM clone in just HTML & JavaScript - sure it was\n&gt; &gt; &#39;custom&#39;, but I can now give it away to 10K script kiddies to innovate\nwith.\n&gt; &gt; Change graphics, chat with their thermometers, etc.\n&gt; &gt; The bonus is that the client is just like 10 million other clients, with\na\n&gt; &gt; large support staff - all are different dynamically loaded modules\nwithin\n&gt; &gt; the WebApp called WWW.\n&gt;\n&gt; Yeah. Me too.  How many chat clients can your web server support?\n10,000. Like I said, the KN server can handle 10k concurrent browser clients\nper cluster node.\n\n&gt; According to (1), a typical test\n&gt; Apache server can handle ~250 requests per second.\n&gt; Assuming your clients poll once per second, you\n&gt; max out at 250 simulatenous clients.  That sucks!\nYeah - good thing nobody except strawman.org does that.\n\n&gt; Even if your server could handle higher capacity\n&gt; the bandwidth of handling large numbers of pings\n&gt; will also eventually overwhelm you.\n&gt;\n&gt; Alternatively, you could also document a\n&gt; more scalable protocol like Jabber, IRC, or Kazaa,\n&gt; give away the source, get the same hackers to\n&gt; work on it, and perhaps get bought by AOL!\nOr examine your assumptions.\n\nNobody here is suggesting polling is the preferred way to go. A server that\ntransparently handled polling for backward compatibility would help in many\nsituations, as long as the scalability/traffic problems don&#39;t surface.\n\n\n\n"}}