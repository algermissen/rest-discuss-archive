{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":320904186,"authorName":"unmesh_joshi","from":"&quot;unmesh_joshi&quot; &lt;unmeshjoshi@...&gt;","profile":"unmesh_joshi","replyTo":"SENDER","senderId":"IU7fqaNUMcIDVl6e2CPGUFesb5YhKtGvuaeVRfGYGLAcsNTEXY9VR8Ae4ljUW8aTvoTMcb172dH_7OiCPGvk-olWdHew5fOsQtbbF_4","spamInfo":{"isSpam":false,"reason":"3"},"subject":"HMAC based authorization - Security for REST services","postDate":"1360303396","msgId":19261,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtmMjRmNCtybTR2QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":19263,"prevInTime":19260,"nextInTime":19262,"topicId":19261,"numMessagesInTopic":3,"msgSnippet":"Hi, For building secure RESTful services, its common practice to have digital signature (HMAC hash) in the Authorization Header, along with the secret key id.","rawEmail":"Return-Path: &lt;unmeshjoshi@...&gt;\r\nX-Sender: unmeshjoshi@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 2208 invoked from network); 8 Feb 2013 06:03:17 -0000\r\nX-Received: from unknown (10.193.84.151)\n  by m5.grp.bf1.yahoo.com with QMQP; 8 Feb 2013 06:03:17 -0000\r\nX-Received: from unknown (HELO ng14-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.118)\n  by mta5.grp.bf1.yahoo.com with SMTP; 8 Feb 2013 06:03:17 -0000\r\nX-Received: from [98.139.164.126] by ng14.bullet.mail.bf1.yahoo.com with NNFMP; 08 Feb 2013 06:03:17 -0000\r\nX-Received: from [10.193.94.46] by tg7.bullet.mail.bf1.yahoo.com with NNFMP; 08 Feb 2013 06:03:17 -0000\r\nDate: Fri, 08 Feb 2013 06:03:16 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;kf24f4+rm4v@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: &quot;unmesh_joshi&quot; &lt;unmeshjoshi@...&gt;\r\nSubject: HMAC based authorization - Security for REST services\r\nX-Yahoo-Group-Post: member; u=320904186; y=u1O8MKzsV32HK0HGo06dDzLuIqcv9fdRTZ43Wq0D3Oc_9XDT77I6\r\nX-Yahoo-Profile: unmesh_joshi\r\n\r\nHi,\n\nFor building secure RESTful services, its common practice to have digi=\r\ntal signature (HMAC hash) in the Authorization Header, along with the secre=\r\nt key id. The implementation seems fairly standard where\n1. Client adds Dat=\r\ne: header to the request.\n2. Client builds digital signature with url path =\r\nparameters and query parameters and headers. \n3. Client puts Authorization =\r\nHeader as \n   Authorization: &lt;Client Secret Key ID&gt;:&lt;HMAC hash for stringto=\r\nsign&gt;\n\nOn Server side.\n1. Server checks existence of required header.\n2. Se=\r\nrver retrieves the private key for the secrete key id provided in the Autho=\r\nrization Header (Note: This can be typically done by calling a Key Manageme=\r\nnt service over SSL, which is deployed in a secured network)\n3. Server comp=\r\nutes HMAC has with the same method that client has used.\n4. Server matches =\r\nthe hash with the one provided by the client.\n5. If the hash matches, serve=\r\nr forwards the request for further processing.\n6. If hashes dont match, ser=\r\nver returns 401 UnAuthorized response to client.\n\nIt is also a standard pat=\r\nterns in Web Services world to use Message Interceptor Gateway (listed in h=\r\nttp://www.coresecuritypatterns.com/patterns.htm).\nThis way security gateway=\r\n is a separate tier between client and the actual web service endpoint.\n\nTh=\r\nis logic is very standard and I think this can be implemented as a Apache p=\r\nlugin, which can intercept the request before forwarding it to Application =\r\nServer.\n\nIs there any such standard plugin developed for Apache or any othe=\r\nr web server?\n\n\n"}}