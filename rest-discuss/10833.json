{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":236158268,"authorName":"Simon Reinhardt","from":"Simon Reinhardt &lt;simon.reinhardt@...&gt;","profile":"shepard4711","replyTo":"SENDER","senderId":"NVuv4OsD-m9HKQ3WXefq3TC_oD6RmBDUOQRwdONaV3HFYiXpZt6he3p_pfZ9obux9ZYmMWzQPs6GQO6oGklsUyeV7cDKasJhlE4R28sU_-Vl","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] CSRF attacks in RESTful authenticated web applications","postDate":"1211913454","msgId":10833,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ4M0M1NEVFLjIwOTAwMDdAa29lbG4uZGU+","inReplyToHeader":"PGU1YzZlY2FiMDgwNTI2MTUxNWg4MDM4ZGEzZ2QyNDdjZDg5ZWM3MWQ4MjFAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDQ4M0IxRUJGLjMwMzA5MDNAa29lbG4uZGU+IDxlNWM2ZWNhYjA4MDUyNjE1MTVoODAzOGRhM2dkMjQ3Y2Q4OWVjNzFkODIxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10831,"nextInTopic":10834,"prevInTime":10832,"nextInTime":10834,"topicId":10818,"numMessagesInTopic":21,"msgSnippet":"First of all, thanks to you all for your insightful comments! ... How exactly would that work? If the URIs are unguessable then they have to be unrelated to","rawEmail":"Return-Path: &lt;simon.reinhardt@...&gt;\r\nX-Sender: simon.reinhardt@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74740 invoked from network); 27 May 2008 18:36:07 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m43.grp.scd.yahoo.com with QMQP; 27 May 2008 18:36:07 -0000\r\nX-Received: from unknown (HELO caipi.ops.eusc.inter.net) (84.23.254.151)\n  by mta17.grp.scd.yahoo.com with SMTP; 27 May 2008 18:36:07 -0000\r\nX-Received: from [10.154.1.1] (helo=sour.ops.eusc.inter.net)\n\tby caipi.ops.eusc.inter.net with esmtp (Exim 4.69) \n\tid 1K141m-0001qU-IY\n\tfor rest-discuss@yahoogroups.com; Tue, 27 May 2008 20:36:06 +0200\r\nX-Trace: 507c73696d6f6e2e7265696e68617264747c37382e33342e3134392e3135367c31\n\t4b3134316d2d303030396f442d38677c31323131393133333636\r\nX-Received: from sour.ops.eusc.inter.net ([10.154.10.22] helo=localhost)\n\tby sour.ops.eusc.inter.net with esmtpa (Exim 4.69) \n\tid 1K141m-0009oD-8g\n\tfor rest-discuss@yahoogroups.com; Tue, 27 May 2008 20:36:06 +0200\r\nMessage-ID: &lt;483C54EE.2090007@...&gt;\r\nDate: Tue, 27 May 2008 20:37:34 +0200\r\nUser-Agent: Thunderbird 2.0.0.14 (Windows/20080421)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nReferences: &lt;483B1EBF.3030903@...&gt; &lt;e5c6ecab0805261515h8038da3gd247cd89ec71d821@...&gt;\r\nIn-Reply-To: &lt;e5c6ecab0805261515h8038da3gd247cd89ec71d821@...&gt;\r\nX-FOAF: http://simon-reinhardt.de/foaf.rdf\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-AntiVirus: checked by AntiVir MailGuard (Version: 8.0.0.18; AVE: 8.1.0.46; VDF: 7.0.4.101)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Simon Reinhardt &lt;simon.reinhardt@...&gt;\r\nSubject: Re: [rest-discuss] CSRF attacks in RESTful authenticated web applications\r\nX-Yahoo-Group-Post: member; u=236158268; y=sSmuWksIFq42_hSuvvIGz58n7GPPgP2mMbjmgHkKV9IaLNw-ZPk\r\nX-Yahoo-Profile: shepard4711\r\n\r\nFirst of all, thanks to you all for your insightful comments!\n\nDaniel Yokomizo wrote:\n&gt; Using HATEOAS you can avoid the first issue: the\n&gt; client of the app must use the links in the response to navigate to\n&gt; the next states, so the server can generate URIs that are unguessable\n&gt; (e.g. GUIDs, cryptography) and the attacker is unable to name a\n&gt; resource used in the session.\n\nHow exactly would that work? If the URIs are unguessable then they have to be unrelated to anything the client knows, i.e. they contain random tokens. But the server would have to remember those tokens and relate them to the user (which is really just sessions with a session ID in a request parameter) and then you have server state. How is that still RESTful? Treating sessions as resources always seemed to me like just phrasing things differently and pretending them to be better.\nWhat I don&#39;t like about this is that:\n- you get ugly URIs\n- sending them to friends leads to problems\n- you have several URIs for one and the same resource\n- you just need to have one URI which doesn&#39;t contain the session ID (maybe a link to a wiki related to your application which is coded as a separate application but integrated into the same framing template with menus and stuff) and you are &quot;logged out&quot;; clicking on links in the menu will not lead you back into the application in an authenticated state.\nSo even pages which contain public, non-personalised content need to contain authentication hints. Doesn&#39;t this muddle identifying resources and authentication?\n\nWell, I didn&#39;t intend to let this turn into a discussion of the basic principles of REST, maybe I don&#39;t understand them enough yet, maybe I&#39;m not convinced enough. This has all surely been discussed elsewhere extensively.\n\nThanks,\nSimon\n\n"}}