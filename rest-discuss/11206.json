{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":274299176,"authorName":"Rickard Ã–berg","from":"=?ISO-8859-1?Q?Rickard_=D6berg?= &lt;rickardoberg@...&gt;","profile":"rickardoberg","replyTo":"SENDER","senderId":"xh7lApFR1VKlydD8wtjbYMPYmsMLxn-Ya3uc4lGAIZRq5SSVFqtERteCKtoD7LSuCJtmwQehQhXFd4zNx7judC_-gNX9g84pdQPsy9T7RxPPI6bWjm4x-RTlats8JEVw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST+SPARQL for Java domain model","postDate":"1218969909","msgId":11206,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ4QTgwMTM1LjgwOTA5MDlAZ21haWwuY29tPg==","inReplyToHeader":"PDlmMDU3ODI5MDgwODE2MTMyOHQ1ODRhMDYxNWc2MTI4YWZiZDNiMTJhMDRhQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ4QTU4NTI4LjEwODA2MDRAZ21haWwuY29tPiA8OWYwNTc4MjkwODA4MTYxMzI4dDU4NGEwNjE1ZzYxMjhhZmJkM2IxMmEwNGFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":11205,"nextInTopic":11207,"prevInTime":11205,"nextInTime":11207,"topicId":11204,"numMessagesInTopic":12,"msgSnippet":"... Pretty much! ... The schema is generated internally, so the plan is to add HTTP-access of it. But as you say it is based on the Java model, so the names","rawEmail":"Return-Path: &lt;rickardoberg@...&gt;\r\nX-Sender: rickardoberg@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38530 invoked from network); 17 Aug 2008 10:45:14 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m48.grp.scd.yahoo.com with QMQP; 17 Aug 2008 10:45:14 -0000\r\nX-Received: from unknown (HELO ti-out-0910.google.com) (209.85.142.188)\n  by mta15.grp.scd.yahoo.com with SMTP; 17 Aug 2008 10:45:13 -0000\r\nX-Received: by ti-out-0910.google.com with SMTP id y8so874425tia.5\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 17 Aug 2008 03:45:12 -0700 (PDT)\r\nX-Received: by 10.110.3.15 with SMTP id 15mr4396795tic.48.1218969912619;\n        Sun, 17 Aug 2008 03:45:12 -0700 (PDT)\r\nReturn-Path: &lt;rickardoberg@...&gt;\r\nX-Received: from rickard-obergs-computer.local ( [118.100.133.137])\n        by mx.google.com with ESMTPS id a14sm1584087tia.0.2008.08.17.03.45.09\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Sun, 17 Aug 2008 03:45:11 -0700 (PDT)\r\nMessage-ID: &lt;48A80135.8090909@...&gt;\r\nDate: Sun, 17 Aug 2008 18:45:09 +0800\r\nUser-Agent: Thunderbird 2.0.0.16 (Macintosh/20080707)\r\nMIME-Version: 1.0\r\nTo: Erling Wegger Linde &lt;erlingwl@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;48A58528.1080604@...&gt; &lt;9f0578290808161328t584a0615g6128afbd3b12a04a@...&gt;\r\nIn-Reply-To: &lt;9f0578290808161328t584a0615g6128afbd3b12a04a@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Rickard_=D6berg?= &lt;rickardoberg@...&gt;\r\nSubject: Re: [rest-discuss] REST+SPARQL for Java domain model\r\nX-Yahoo-Group-Post: member; u=274299176; y=qzb45tAkid8kPmuHbPav7BnkguHsiarYzzFGYCLa-PNPJ29dVXFl\r\nX-Yahoo-Profile: rickardoberg\r\n\r\nErling Wegger Linde wrote:\n&gt; Qi4j looked pretty cool. You use semantic technology like RDF/XML and\n&gt; SPARQL (and probably reasoning?) to make it very easy to write client\n&gt; code for interacting with a server (almost transparently) if I get i\n&gt; right?\n\nPretty much!\n\n&gt; However, I think it might be difficult for other clients to use the\n&gt; servers, especially if the clients are written with other programmring\n&gt; languages etc. I mean the representations would change whenever you\n&gt; change the object model because The RDF vocabulary are generated from\n&gt; the (Java) object model right? And also the RDF models are implicit in\n&gt; the Java object model so a non-Qi4j client cannot download an RDF\n&gt; schema and perform its own reasoning right? (perhaps it would be\n&gt; possible to generate and export such a schema? and maybe you already\n&gt; generate such as schema internally?)\n\nThe schema is generated internally, so the plan is to add HTTP-access of \nit. But as you say it is based on the Java model, so the names are a bit \nfunky, and when the Java model changes the RDF model changes.\n\nOne idea I have to deal with that is to simple be able to add metadata \nto the Java model to help the RDF generation, such as being able to say \nthat a Java property equals a DC-attribute or similar. Another way to do \nit is to generate the RDF using the XML model, but then attach a XSLT \nprocessing instruction to convert it to some more stable schema. Or, \nmake an ontology with equivalences that do the same thing, which is the \nmore RDFy approach I think. None is implemented right now, so any ideas \non &quot;what works&quot; would be appreciated.\n\n&gt; I guess since there&#39;s probably not enough existing (RDF) vocabularies\n&gt; out there that you could use, you have to create your own sometimes.\n&gt; But what if you had a Person model that correlated pretty much with a\n&gt; foaf:Person, or a Project model that where almost a fit with\n&gt; doap:Project, could you then use these (with the correct namespaces\n&gt; etc.)? I think that would be of great value to other non-Qi4j clients,\n&gt; and expose more of the potential from having a RESTful interface.\n\nRight, so as above, there is going to be ways to set more (re)useful \nnames, but I&#39;m not sure right now what&#39;s the best way to do it. Just \nreplacing the names with DC/FOAF/DOAP names is one way, but then \ninformation is lost, so I&#39;m more keen on using subclassing (i.e. the \nJava classes extend standard ones) or equivalences. But I don&#39;t have \nenough experience to know which one works best in practice.\n\nI definitely agree that once this has been sorted out it will have great \nvalue for non-Qi4j non-Java clients!\n\n/Rickard\n\n"}}