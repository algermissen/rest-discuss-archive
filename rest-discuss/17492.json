{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"SOoCpThi7ZemffP--WJuZGQiLTJlWcgizlplX6_vgUSZ6-WWqLOtXTUpIvkAZSRDySyt2KaABFzjHN3p5gn9NkrPJL-2bvgm-w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Domain Application Protocol in practice","postDate":"1303336629","msgId":17492,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBTkxrVGluczRwZWFxWEdaMWJlNGl6OVpiMDNYUjhCMmNBQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDUwMEE1RDYxLTREMjUtNDcyQy04OTk0LTg4QTY0M0E5RUZFQUBtYWMuY29tPg==","referencesHeader":"PEJBTkxrVGlrb2JVaVNwY2FCSGcwdk5WK2VPRlRHcDVkOFZnQG1haWwuZ21haWwuY29tPgk8ODY1ODc0QzAtQzgxMi00RjBBLThCRTktMUE4OUNGQ0QyMTAxQG1hYy5jb20+CTxCQU5Ma1RpbXNERWsrcU5DNkpnUWFyTEhpRmZGVE93TF80d0BtYWlsLmdtYWlsLmNvbT4JPDUwMEE1RDYxLTREMjUtNDcyQy04OTk0LTg4QTY0M0E5RUZFQUBtYWMuY29tPg=="},"prevInTopic":17491,"nextInTopic":17493,"prevInTime":17491,"nextInTime":17493,"topicId":17488,"numMessagesInTopic":8,"msgSnippet":"... The quality of the client does not affect the RESTyness of an application. You can have a full boat REST application and stupid clients that choose (for","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8354 invoked from network); 20 Apr 2011 21:57:11 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 20 Apr 2011 21:57:11 -0000\r\nX-Received: from unknown (HELO mail-vw0-f45.google.com) (209.85.212.45)\n  by mta1.grp.sp2.yahoo.com with SMTP; 20 Apr 2011 21:57:10 -0000\r\nX-Received: by vws17 with SMTP id 17so1048787vws.4\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 20 Apr 2011 14:57:10 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.52.89.49 with SMTP id bl17mr327587vdb.207.1303336630040; Wed,\n 20 Apr 2011 14:57:10 -0700 (PDT)\r\nX-Received: by 10.52.168.135 with HTTP; Wed, 20 Apr 2011 14:57:09 -0700 (PDT)\r\nIn-Reply-To: &lt;500A5D61-4D25-472C-8994-88A643A9EFEA@...&gt;\r\nReferences: &lt;BANLkTikobUiSpcaBHg0vNV+eOFTGp5d8Vg@...&gt;\n\t&lt;865874C0-C812-4F0A-8BE9-1A89CFCD2101@...&gt;\n\t&lt;BANLkTimsDEk+qNC6JgQarLHiFfFTOwL_4w@...&gt;\n\t&lt;500A5D61-4D25-472C-8994-88A643A9EFEA@...&gt;\r\nDate: Wed, 20 Apr 2011 14:57:09 -0700\r\nMessage-ID: &lt;BANLkTins4peaqXGZ1be4iz9Zb03XR8B2cA@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Mike Kelly &lt;mike@...&gt;, Alessandro Nadalin &lt;alessandro.nadalin@...&gt;, \n\trest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=20cf307d03d2db3aa004a160b448\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Domain Application Protocol in practice\r\nX-Yahoo-Group-Post: member; u=401876259; y=MZghInEfaswDV6epb3SMusSVtOhFSMSXa0r8cFhmSBMRWqpTbh5kGw\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--20cf307d03d2db3aa004a160b448\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Wed, Apr 20, 2011 at 1:32 PM, Jan Algermissen &lt;algermissen1971@...&gt;wrote:\n\n&gt;\n&gt; &gt;\n&gt; &gt; Agreeing on application flow at design time, if the clients are\n&gt; &gt; machine-directed, is actually a Good Idea because the server will be\n&gt; &gt; under no illusion as to what changes it can enact, and it avoids the\n&gt; &gt; costs associated with trying to define application flows in more\n&gt; &gt; &#39;dynamic&#39; terms.\n&gt;\n&gt; Hmm, maybe. But it is simply not REST then.\n&gt;\n\nThe quality of the client does not affect the RESTyness of an application.\nYou can have a full boat REST application and stupid clients that choose\n(for whatever reason) to ignore it and tromp on their way doing whatever\nthey do. Whether it&#39;s a hard coded client shoving requests at the server, or\nsimply a  user that simply can not navigate the interface (doesn&#39;t see the\nlinks, doesn&#39;t understand them, whatever, wasn&#39;t trained to click the X\nbutton, was trained to click the Y button -- and the Y button is no longer\nthere).\n\nMotivation to create a more flexible and adaptable client is tied to the\ndifficulty of maintaining that client, the consequences of failure, and the\nvelocity of change on the service that client is using. If someone writes a\nperl script against an interface that&#39;s been stable for 5 years, for\nsomething that can withstand failure IF the service changes, that has no\neffect on the capabilities and robustness of the service itself.\n\nClients can simply choose how they document their procedures against the\nservice. How many tutorials and such have you seen that are little more than\na bunch of screenshots with blanks to fill in an buttons to press circled in\nred, yet with effectively NO explanation as to WHY the blanks are being\nfilled, where that information comes from, what that information is for,\netc. And when the interface changes, when a new step is added to the wizard,\nthe tutorial completely fails, along with the poor new user trying to follow\nit.\n\nThat&#39;s a client error (in this case the tutorial documentation and the\nignorance of the user), not the applications weakness.\n\nSo, write clients as you like. It&#39;s the REST applications promise to provide\nthe proper information for a client to make better decisions, but it can&#39;t\nforce the clients to use that information appropriately, rather all it can\ndo it try and protect itself when they don&#39;t.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\r\n--20cf307d03d2db3aa004a160b448\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Apr 20, 2011 at 1:32 PM, Jan Alg=\r\nermissen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:algermissen1971@...&quot;&gt;a=\r\nlgermissen1971@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_=\r\nquote&quot; style=3D&quot;margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, =\r\n204, 204); padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-colo=\r\nr: rgb(255, 255, 255);&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div class=3D&quot;im&quot;&gt;\n=\r\n&gt; &lt;br&gt;\n&gt; Agreeing on application flow at design time, if the clients =\r\nare&lt;br&gt;\n&gt; machine-directed, is actually a Good Idea because the server w=\r\nill be&lt;br&gt;\n&gt; under no illusion as to what changes it can enact, and it a=\r\nvoids the&lt;br&gt;\n&gt; costs associated with trying to define application flows=\r\n in more&lt;br&gt;\n&gt; &#39;dynamic&#39; terms.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nHmm, maybe. But i=\r\nt is simply not REST then.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;The=\r\n quality of the client does not affect the RESTyness of an application. You=\r\n can have a full boat REST application and stupid clients that choose (for =\r\nwhatever reason) to ignore it and tromp on their way doing whatever they do=\r\n. Whether it&#39;s a hard coded client shoving requests at the server, or s=\r\nimply a=A0 user that simply can not navigate the interface (doesn&#39;t see=\r\n the links, doesn&#39;t understand them, whatever, wasn&#39;t trained to cl=\r\nick the X button, was trained to click the Y button -- and the Y button is =\r\nno longer there).&lt;br&gt;\n&lt;br&gt;Motivation to create a more flexible and adaptabl=\r\ne client is tied to the difficulty of maintaining that client, the conseque=\r\nnces of failure, and the velocity of change on the service that client is u=\r\nsing. If someone writes a perl script against an interface that&#39;s been =\r\nstable for 5 years, for something that can withstand failure IF the service=\r\n changes, that has no effect on the capabilities and robustness of the serv=\r\nice itself.&lt;br&gt;\n&lt;br&gt;Clients can simply choose how they document their proce=\r\ndures against the service. How many tutorials and such have you seen that a=\r\nre little more than a bunch of screenshots with blanks to fill in an button=\r\ns to press circled in red, yet with effectively NO explanation as to WHY th=\r\ne blanks are being filled, where that information comes from, what that inf=\r\normation is for, etc. And when the interface changes, when a new step is ad=\r\nded to the wizard, the tutorial completely fails, along with the poor new u=\r\nser trying to follow it.&lt;br&gt;\n&lt;br&gt;That&#39;s a client error (in this case th=\r\ne tutorial documentation and the ignorance of the user), not the applicatio=\r\nns weakness.&lt;br&gt;&lt;br&gt;So, write clients as you like. It&#39;s the REST applic=\r\nations promise to provide the proper information for a client to make bette=\r\nr decisions, but it can&#39;t force the clients to use that information app=\r\nropriately, rather all it can do it try and protect itself when they don&#3=\r\n9;t.&lt;br&gt;\n&lt;br&gt;Regards,&lt;br&gt;&lt;br&gt;Will Hartung&lt;br&gt;(&lt;a href=3D&quot;mailto:willh@mirth=\r\ncorp.com&quot;&gt;willh@...&lt;/a&gt;)&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--20cf307d03d2db3aa004a160b448--\r\n\n"}}