{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":83951433,"authorName":"Michael Schuerig","from":"Michael Schuerig &lt;michael@...&gt;","profile":"mschuerig","replyTo":"SENDER","senderId":"jHLkEGRRJ1wg6X4Mnn9LqfXnOuIKsR6HpBcAjzWN04kIsaB46WAaZBHrhq0YhiA2kdl27mJPQK51SGUeX1Hcl5oWgsT8LXo70Mv8BBg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Credit Card Validation","postDate":"1242055134","msgId":12601,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwNTExMTcxOC41NDk0Mi5taWNoYWVsQHNjaHVlcmlnLmRlPg==","inReplyToHeader":"PDg3azU0bjNmcHguZnNmQGR1bGxpby5uZWRlcndhcmUubmw+","referencesHeader":"PDg3b2N1MDQ0YjcuZnNmQGR1bGxpby5uZWRlcndhcmUubmw+IDwyMDA5MDUxMTE1MzQuNDgwODMubWljaGFlbEBzY2h1ZXJpZy5kZT4gPDg3azU0bjNmcHguZnNmQGR1bGxpby5uZWRlcndhcmUubmw+"},"prevInTopic":12600,"nextInTopic":12602,"prevInTime":12600,"nextInTime":12602,"topicId":12587,"numMessagesInTopic":13,"msgSnippet":"... I m not really interested credit card validation, but let s see if this approach can be extended to my running example of a movie database with movies,","rawEmail":"Return-Path: &lt;michael@...&gt;\r\nX-Sender: michael@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95426 invoked from network); 11 May 2009 15:22:35 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m8.grp.re1.yahoo.com with QMQP; 11 May 2009 15:22:35 -0000\r\nX-Received: from unknown (HELO mo-p00-ob.rzone.de) (81.169.146.161)\n  by mta3.grp.re1.yahoo.com with SMTP; 11 May 2009 15:22:35 -0000\r\nX-RZG-AUTH: :IWUHfUGtd9+vBOPSU2tipXsK9ccDFFfW1WHk1q7FaEbep/oL5XvzwcVB/cagp8/D\r\nX-RZG-CLASS-ID: mo00\r\nX-Received: from debby.localnet\n\t(xdsl-81-173-144-60.netcologne.de [81.173.144.60])\n\tby post.strato.de (fruni mo47) (RZmta 18.34)\n\twith ESMTP id K06f1cl4BFFeFh for &lt;rest-discuss@yahoogroups.com&gt;;\n\tMon, 11 May 2009 17:18:50 +0200 (MEST)\r\nTo: rest-discuss@yahoogroups.com\r\nDate: Mon, 11 May 2009 17:18:54 +0200\r\nUser-Agent: KMail/1.11.2 (Linux/2.6.29-1-686; KDE/4.2.2; i686; ; )\r\nReferences: &lt;87ocu044b7.fsf@...&gt; &lt;200905111534.48083.michael@...&gt; &lt;87k54n3fpx.fsf@...&gt;\r\nIn-Reply-To: &lt;87k54n3fpx.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: Text/Plain;\n  charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nMessage-Id: &lt;200905111718.54942.michael@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Michael Schuerig &lt;michael@...&gt;\r\nSubject: Re: Credit Card Validation\r\nX-Yahoo-Group-Post: member; u=83951433; y=cs2T9nt0RZ2jFyXx0JkUnD8_6KVyuU7h4o6YTMZtTbK8wc1E\r\nX-Yahoo-Profile: mschuerig\r\n\r\nOn Monday 11 May 2009, Berend de Boer wrote:\n&gt; &gt;&gt;&gt;&gt;&gt; &quot;Michael&quot; == Michael Schuerig &lt;michael@...&gt; writes:\n&gt;     &gt;&gt; Do you mean: just determine if this is a valid credit card,\n&gt;     &gt;&gt; but don&#39;t do anything else?  Then I would agree with GET.\n&gt;\n&gt;     Michael&gt; In this case, what would be the resource targeted by the\n&gt;     Michael&gt; request and what would the URL look like? What would be\n&gt; a Michael&gt; RESTful response?  &quot;yes&quot;/&quot;no&quot;, &quot;true&quot;/&quot;false&quot; in the\n&gt; Michael&gt; body? Or something more involved?  Maybe just a header\n&gt; Michael&gt; with an empty body?\n&gt;\n&gt; This url:\n&gt;\n&gt;   /valid-credit-cards/&lt;4111111111111111&gt;\n&gt;\n&gt; can be responded to with an HTTP response of 200 OK. So basically\n&gt; this url is for the list of all valid credit cards. And a 404 would\n&gt; be a perfect response for an invalid credit card (isn&#39;t in that\n&gt; list).\n\nI&#39;m not really interested credit card validation, but let&#39;s see if this \napproach can be extended to my running example of a movie database with \nmovies, people, awards, and awardings (for lack of a better word).\n\nI need a way to create an awarding given an award, a year, a movie, and \na person. However, this operation might fail with a conflict if the \naward is already given to someone else for that year. This makes for a \nbad user experience at the client end. An earlier indication that an \nawarding may not be possible would surely be appreciated.\n\nBefore, I was considering some kind of RPC-ish query asking &quot;is this \ncombination of year, award, person, movie possible?&quot;. Now, I think it \nwould be better to ask &quot;give me the awarding for this award and year&quot;. A \nHEAD request would be sufficient; response status 200 and 404 could be \ninterpreted as &quot;conflict&quot; and &quot;go ahead&quot; respectively. Of course, given \nconcurrency, such a response is only advisory.\n\nMichael\n\n-- \nMichael Schuerig\nmailto:michael@...\nhttp://www.schuerig.de/michael/\n\n\n"}}