{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"PrG0o3m6e7OlF4BOZcETbozvL4aIs7pIjAeC5v2Ac9ak9GrCb15YskkkzKTx6WZ0C3P2gkH8teuG9kyMxLdjPjUDuhNfkkHMULhX0xEh7A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: It&#39;s the architecture, stupid.","postDate":"1287366939","msgId":16746,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMDE3MTk1NTM5LmRiMzZmYWVhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGk9d19rdD1PZG92TTAxc2ZuT0dyVjRmQXUzcXR1S3ZMSng2am1qS0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGk9aXZNUnFIbmJyZHc5cDVScHViN3hxUWVwT3FwQ3lxMkNLM2ZnZUBtYWlsLmdtYWlsLmNvbT4JPGk5Y2M4NCthMGp2QGVHcm91cHMuY29tPgk8QUFOTGtUaT13X2t0PU9kb3ZNMDFzZm5PR3JWNGZBdTNxdHVLdkxKeDZqbWpLQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":16745,"nextInTopic":0,"prevInTime":16745,"nextInTime":16747,"topicId":16728,"numMessagesInTopic":15,"msgSnippet":"... Even in a P2P protocol like BitTorrent, each discrete transfer still has a client and a server, just like how an intermediary cache is either a client or a","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 10372 invoked from network); 18 Oct 2010 01:55:49 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 18 Oct 2010 01:55:49 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 18 Oct 2010 01:55:49 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 96613509DD;\n\tSun, 17 Oct 2010 21:55:48 -0400 (EDT)\r\nDate: Sun, 17 Oct 2010 19:55:39 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: izuzak &lt;izuzak@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20101017195539.db36faea.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=w_kt=OdovM01sfnOGrV4fAu3qtuKvLJx6jmjK@...&gt;\r\nReferences: &lt;AANLkTi=ivMRqHnbrdw9p5Rpub7xqQepOqpCyq2CK3fge@...&gt;\n\t&lt;i9cc84+a0jv@...&gt;\n\t&lt;AANLkTi=w_kt=OdovM01sfnOGrV4fAu3qtuKvLJx6jmjK@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: It&#39;s the architecture, stupid.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt;\n&gt; Would there be much of a distinction between clients and servers on a\n&gt; p2p web?\n&gt; \n\nEven in a P2P protocol like BitTorrent, each discrete transfer still\nhas a client and a server, just like how an intermediary cache is\neither a client or a server depending on what it&#39;s doing.  I think the\nright question is whether there&#39;s still a distinction between user-\nagent and origin server.  I think the answer to that is yes -- the\nuser-agent makes a request from the origin server (tracker).  When\nserving files, it&#39;s acting as an intermediary in the transactions\nbetween some other user-agents and the origin server (tracker).\n\n(Or perhaps there are multiple origin servers, i.e. the tracker and\nwhatever systems are seeding the actual file.  It would be interesting\nto use the approach in Roy&#39;s thesis to describe a BitTorrent\narchitectural style.  Which is exactly what the starting point should\nhave been before embarking on Web Sockets -- even if you&#39;re not a fan\nof REST-the-style, there&#39;s a methodology there for the disciplined\ndevelopment of new Web protocols.  It&#39;s possible to add other styles\nbesides what&#39;s in Chapter 3, as appropriate, to introduce constraints\nwhich aren&#39;t in REST, based on the desirable properties of prior art.)\n\nOr at least this is the explanation I come up with, to square Roy&#39;s\nstatement that Waka is P2P with the client-server constraint.  There&#39;s\nstill independent evolvability of components, and separation of user\ninterface (selecting a torrent from a tracker) from data storage, which\nare the purposes of the constraint.  If the purpose of the constraint\nis met, claiming P2P is a violation would be nitpicking semantics.\n\nIn HTTP long-polling, the origin server is essentially a tracker, in\nthat it knows a bunch of clients are after the same data.  In a P2P\nprotocol, this could work much like BitTorrent, where the tracker\norchestrates the clients to distribute the response amongst themselves\nafter seeding a few power-users.  But I don&#39;t think any amount of\nscripted tunneling can make HTTP work like that in existing browsers,\nWeb Sockets or otherwise.  It would be interesting to be proved wrong on\nthat, however.\n\n-Eric\n\n"}}