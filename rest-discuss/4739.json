{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":40455398,"authorName":"Julian Reschke","from":"Julian Reschke &lt;julian.reschke@...&gt;","profile":"JulianReschke","replyTo":"SENDER","senderId":"7JhzKUrQ4oVy6hh1fi3XAUZdGWcArQO3f2SUulLi2OZByKcaE_5cyG_2z9Xk9CzwDJrtKF2Xwz3SkjPDfyK-ejVOm_mC4ONMzpsRSkI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and the design of HTTP methods","postDate":"1104447825","msgId":4739,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxRDQ4OTUxLjIwOTA2MDJAZ214LmRlPg==","inReplyToHeader":"PEU4OEIxQjRCLTVBQjAtMTFEOS1CM0FGLTAwMEQ5MzMyNEFENkBnYml2LmNvbT4=","referencesHeader":"PGNxcnJ0Mys4ZGxtQGVHcm91cHMuY29tPiA8MTEwNDI3NTkyMS4yMzU3OC4zMC5jYW1lbEBwaG9lbml4PiA8QzUxMDY4ODQtNTk0Mi0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8MTEwNDMzMTY3OC4yMzU2My4yMy5jYW1lbEBwaG9lbml4PiA8N0VCQ0VEM0YtNUEwQS0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8QkFZMTAxLURBVjE2NDVCRjIyODlGRkNCRTIxMThGRkREODlDMEBwaHguZ2JsPiA8NDFENDIzNzYuODA2MDVAZ214LmRlPiA8RTg4QjFCNEItNUFCMC0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPg=="},"prevInTopic":4738,"nextInTopic":4740,"prevInTime":4738,"nextInTime":4740,"topicId":4721,"numMessagesInTopic":25,"msgSnippet":"... Could you please expand on what you mean by they operate by way of a third party (is this about the Depth request header?)? For instance, the results for","rawEmail":"Return-Path: &lt;julian.reschke@...&gt;\r\nX-Sender: julian.reschke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 75439 invoked from network); 30 Dec 2004 23:03:56 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m18.grp.scd.yahoo.com with QMQP; 30 Dec 2004 23:03:56 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta5.grp.scd.yahoo.com with SMTP; 30 Dec 2004 23:03:55 -0000\r\nReceived: (qmail invoked by alias); 30 Dec 2004 23:03:53 -0000\r\nReceived: from p548568A4.dip.t-dialin.net (EHLO [192.168.0.2]) (84.133.104.164)\n  by mail.gmx.net (mp027) with SMTP; 31 Dec 2004 00:03:53 +0100\r\nX-Authenticated: #1915285\r\nMessage-ID: &lt;41D48951.2090602@...&gt;\r\nDate: Fri, 31 Dec 2004 00:03:45 +0100\r\nUser-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nCc: rest discuss &lt;rest-discuss@yahoogroups.com&gt;, \n &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nReferences: &lt;cqrrt3+8dlm@...&gt; &lt;1104275921.23578.30.camel@phoenix&gt; &lt;C5106884-5942-11D9-B3AF-000D93324AD6@...&gt; &lt;1104331678.23563.23.camel@phoenix&gt; &lt;7EBCED3F-5A0A-11D9-B3AF-000D93324AD6@...&gt; &lt;BAY101-DAV1645BF2289FFCBE2118FFDD89C0@...&gt; &lt;41D42376.80605@...&gt; &lt;E88B1B4B-5AB0-11D9-B3AF-000D93324AD6@...&gt;\r\nIn-Reply-To: &lt;E88B1B4B-5AB0-11D9-B3AF-000D93324AD6@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Remote-IP: 213.165.64.20\r\nFrom: Julian Reschke &lt;julian.reschke@...&gt;\r\nSubject: Re: [rest-discuss] REST and the design of HTTP methods\r\nX-Yahoo-Group-Post: member; u=40455398\r\nX-Yahoo-Profile: JulianReschke\r\n\r\nRoy T. Fielding wrote:\n&gt; On Dec 30, 2004, at 7:49 AM, Julian Reschke wrote:\n&gt; \n&gt;&gt; OK, I have filled out what I think the properties of the WebDAV methods\n&gt;&gt; are (feedback appreciated):\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;      method     safe    idempotent   semantics    resource     cacheable\n&gt;&gt;               -----------------------------------------------------------\n&gt;&gt;     GET       |  X          X            X           X             X    |\n&gt;&gt;     HEAD      |  X          X            X           X             X    |\n&gt;&gt;     PUT       |             X            X           X                  |\n&gt;&gt;     POST(a)   |                          /                              |\n&gt;&gt;     POST(p)   |                                                         |\n&gt;&gt;     DELETE    |             X            X           X                  |\n&gt;&gt;     OPTIONS   |  X          X            X                         O    |\n&gt;&gt;               -----------------------------------------------------------\n&gt;&gt;     PROPFIND  |  X          X            X           X                  |\n&gt;&gt;     PROPPATCH |             X            X           X                  |\n&gt;&gt;     MKCOL     |             X            X           X                  |\n&gt;&gt;     COPY      |                          X           X                  |\n&gt;&gt;     MOVE      |                          X           X                  |\n&gt;&gt;     LOCK      |                          X           X                  |\n&gt;&gt;     UNLOCK    |                          X           X                  |\n&gt;&gt;               -----------------------------------------------------------\n&gt; \n&gt; \n&gt; PROPFIND, PROPPATCH, LOCK, and UNLOCK do not have identifiable resources\n&gt; (they all operate by way of a third party).  Is PROPPATCH always \n\nCould you please expand on what you mean by &quot;they operate by way of a \nthird party&quot; (is this about the Depth request header?)? For instance, \nthe results for a PROPFIND applied to the same Request-URI will vary for \nDepth 0 (just the Request-URI), 1 (+ internal members) and infinity (+ \nall descendants).\n\n&gt; idempotent?\n\nI would think so. PROPPATCH can either set (&quot;PUT&quot;) or remove (aka \n&quot;DELETE&quot;) a property. Of course I can imagine a server getting this \nwrong, but for the same reason it may get GET and PUT wrong. Possibly \nthis is something that should be clarified in RFC2518bis.\n\n&gt; COPY and MOVE are a bit weird due to HTTP&#39;s limitation of the target URI.\n&gt;\n&gt; I think we should add all of the webdav methods, not just 2518.  Most \n&gt; people\n&gt; have no idea what has been added/proposed for versioning and bindings.\n\nThat&#39;s correct (a good summary about what the state of affairs is can be \nfound at &lt;http://greenbytes.de/tech/webdav&gt;), but let&#39;s get the entries \nfor base WebDAV right first :-)\n\nJulian\n\n-- \n&lt;green/&gt;bytes GmbH -- http://www.greenbytes.de -- tel:+492512807760\n\n"}}