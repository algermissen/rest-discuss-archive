{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"JwNe8mUYrv58HPlxjOeuAgwzq4YaRpAVIxM7u9rVbb3maDE2GI37UnJyjViSBC4z3TXlDga19Czf5KgQhbWoVT0mSVGaUg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Client-composed URI","postDate":"1032195654","msgId":2567,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEODYwRTQ2LjMwMjA4MDdAcHJlc2NvZC5uZXQ+","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVDRUJAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2566,"nextInTopic":2569,"prevInTime":2566,"nextInTime":2568,"topicId":2566,"numMessagesInTopic":22,"msgSnippet":"... WSDL and WRDL both have facilities to allow this. ... Yes, XForms supports query construction. WSDL and WRDL are design-time standards. XForms is a runtime","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 16 Sep 2002 17:01:02 -0000\r\nReceived: (qmail 35544 invoked from network); 16 Sep 2002 17:01:02 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m15.grp.scd.yahoo.com with QMQP; 16 Sep 2002 17:01:02 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 16 Sep 2002 17:01:02 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8GH0ue08135\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon, 16 Sep 2002 10:00:56 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g8GH0ti27011\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon, 16 Sep 2002 10:00:55 -0700\r\nMessage-ID: &lt;3D860E46.3020807@...&gt;\r\nDate: Mon, 16 Sep 2002 10:00:54 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.1) Gecko/20020826\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Client-composed URI\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F64045EECEB@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nMathews, Walden wrote:\n&gt; Paul,\n&gt; \n&gt; In your &quot;first principles&quot; posting of last Friday, there was\n&gt; an interesting bit on queries and how the client can, by following\n&gt; instructions from the server, participate in the composition of\n&gt; query-extended URI.\n&gt; \n&gt; I want to ask a general question about how this should work, independent\n&gt; of HTML and current browser technology, where I understand its\n&gt; working well enough.\n&gt; \n&gt; Making no assumptions about the format of the entities, what can\n&gt; be said about a standard for providing (server) and following (client)\n&gt; instructions for extending URI with query parameters?\n\nWSDL and WRDL both have facilities to allow this.\n\n&gt; Here&#39;s my real-life example from a current project.  A Portfolio\n&gt; resource (let&#39;s say it&#39;s at URI: &quot;/Portfolio&quot;) undergoes changes, but\n&gt; can be retrieved via &quot;as of&quot; snapshots.  The client does not care\n&gt; exactly when the Portfolio changed; it only needs to know &quot;what was\n&gt; my Portfolio as-of 2002-09-16 end-of-business?&quot;.  The server may\n&gt; choose to impose the convention of appending a simple yyyymmdd\n&gt; encoding of the &#39;as-is&#39; parameter, thusly: &quot;/Portfolio/20020916&quot;.\n&gt; How does it encode instructions for the client to do this in some\n&gt; standard way, barring HTML as a specific solution?  Does Xforms\n&gt; address this problem?\n\nYes, XForms supports query construction. WSDL and WRDL are design-time \nstandards. XForms is a runtime standard. So it depends on which you \nwant. But if you are doing it at runtime, then consider using a \nhyperlink instead. It requires less client-side knowledge to navigate a \nhyperlink.\n\n&gt; Would there be any particular reason to prefer\n&gt; &quot;/Portfolio?asof=20020916&quot; or some other encoding over the one\n&gt; above?\n\nThere are two resources:\n\n/Portfolio\n/Portfolio/20020916\n\nCommon wisdom (Jeff Bone would say &quot;dogma&quot;) in the Web architecture \nworld is that the client should not construct the URI for latter from \nthe former. Basically if you tell the client to do that, then you are \ncommitting to that exact naming scheme forever. For instance someone \ncould make a hyperlink today to a document that will come into existence \nin 2003. On the other hand, if you put in a level of indirection between \nthe resources then the client is told that you reserve the right to \nchange your naming convention any time. Here&#39;s how you do that:\n\n--&gt;\nGET /Portfolio?asof=20020916\n\n&lt;--\n200 OK\n&lt;resource asof=&quot;20020916&quot; href=&quot;/Portfolio/20020916&quot;/&gt;\n\nThen client applications dereference through that query to get at the \nconcrete resource associated with a particular date. The query language \ncould be arbitrarily complex. As in:\n\n--&gt;\nGET /Portfolio?from=20020913;to=20020918\n\n&lt;--\n200 OK\n&lt;resources&gt;\n&lt;resource asof=&quot;20020913&quot; href=&quot;/Portfolio/20020913&quot;/&gt;\n&lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020914&quot;/&gt;\n&lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020915&quot;/&gt;\n&lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020916&quot;/&gt;\n&lt;/resources&gt;\n\nAdmittedly the indirection has costs. But essentially your &quot;contract&quot; is \nnow only to maintain the indirection service, not to keep the same URI \nnaming scheme forever. Your successor might appreciate the freedom. The \nsame might go for anyone implementing duplicates of your service \nelsewhere in the world. Maybe they want to serve portfolio snapshots \nthrough ftp: or from a seperate server @....\n\nThat said, you can achieve a similar effect using redirect status codes. \n  I think that the difference is in the contract you are signing up for.\n\n  Paul Prescod\n\n\n"}}