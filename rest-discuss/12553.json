{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223379095,"authorName":"groovepapa82","from":"&quot;groovepapa82&quot; &lt;luke.crouch@...&gt;","profile":"groovepapa82","replyTo":"SENDER","senderId":"YLI50Rf4E6OhwrL7TXEeG3_vZqqeV7-RQpN1KlZuDrqFbgbWOdtFvcob8yr44E1JcFmvuHBwCYyzhT31pRHYmUW73eXFNTdXO5utcoQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: MVC style REST scenarios","postDate":"1241387379","msgId":12553,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGd0bDNoaitlazFtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGQxMDQ5NWFhMDkwNTAxMTQ0NHMxMjUxYjU1NW5kNGUwNmYwZmNjNGI0YWRhQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12551,"nextInTopic":12554,"prevInTime":12552,"nextInTime":12554,"topicId":12529,"numMessagesInTopic":8,"msgSnippet":"A work-in-progress in this area is a collection of new Zend_Rest_* classes in the Zend Framework for PHP. ","rawEmail":"Return-Path: &lt;luke.crouch@...&gt;\r\nX-Sender: luke.crouch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86039 invoked from network); 3 May 2009 21:49:59 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.sp2.yahoo.com with QMQP; 3 May 2009 21:49:59 -0000\r\nX-Received: from unknown (HELO n39b.bullet.mail.sp1.yahoo.com) (66.163.168.153)\n  by mta3.grp.re1.yahoo.com with SMTP; 3 May 2009 21:49:59 -0000\r\nX-Received: from [69.147.65.151] by n39.bullet.mail.sp1.yahoo.com with NNFMP; 03 May 2009 21:49:41 -0000\r\nX-Received: from [98.137.34.184] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 03 May 2009 21:49:41 -0000\r\nDate: Sun, 03 May 2009 21:49:39 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;gtl3hj+ek1m@...&gt;\r\nIn-Reply-To: &lt;d10495aa0905011444s1251b555nd4e06f0fcc4b4ada@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;groovepapa82&quot; &lt;luke.crouch@...&gt;\r\nSubject: Re: MVC style REST scenarios\r\nX-Yahoo-Group-Post: member; u=223379095; y=dFU-mJXluiwq_q-SiKBBmdkf_S2YAgXTxyzDtOg4TzDJgfgeOa2i\r\nX-Yahoo-Profile: groovepapa82\r\n\r\nA work-in-progress in this area is a collection of new Zend_Rest_* classes =\r\nin the Zend Framework for PHP.\n\nhttp://framework.zend.com/wiki/display/ZFPR=\r\nOP/Zend_Controller_Router_Route_Rest+-+Luke+Crouch\n\nWe are using this kind =\r\nof MVC design + RESTful architecture on our API and I&#39;m enjoying it. Of cou=\r\nrse, I wrote it so I&#39;m 100% biased. :) But hopefully it can give you some a=\r\ndditional ideas.\n\n-L\n\n--- In rest-discuss@yahoogroups.com, Anand Ramanathan=\r\n &lt;rcanand@...&gt; wrote:\n&gt;\n&gt; Thanks, Peter.\n&gt; \n&gt; That was very useful. Is your=\r\n API built with this model public? It\n&gt; would be  useful to play with it to=\r\n get a first hand experience.\n&gt; \n&gt; Thanks much\n&gt; Anand\n&gt; \n&gt; On Fri, May 1, =\r\n2009 at 1:14 PM, Peter Keane &lt;pkeane@...&gt; wrote:\n&gt; &gt; On Fri, May 1, 2009 at=\r\n 2:16 PM, rcanand &lt;rcanand@...&gt; wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; Hi,\n&gt; &gt;&gt;\n&gt; &gt;&gt; Can any=\r\none share their experiences with designing REST APIs using MVC style\n&gt; &gt;&gt; f=\r\nrameworks (such as Rails, Django,PHP MVC, etc.)?\n&gt; &gt;&gt;\n&gt; &gt;&gt; There seem to be=\r\n two ways to design such APIs when accompanied with UI -\n&gt; &gt;&gt; 1) APIs and U=\r\nIs in separate spaces (having a separate URI path for API\n&gt; &gt;&gt; versus UI fo=\r\nr the same resource)\n&gt; &gt;&gt; 2) Same URI for each resource, but using some for=\r\nm of content negotiation to\n&gt; &gt;&gt; return UI formats like html or API formats=\r\n like XML.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Do you have any thoughts on the advantages and disadva=\r\nntages of using either\n&gt; &gt;&gt; approach?\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Hi Anand-\n&gt; &gt;\n&gt; &gt; I went=\r\n back and forth on this very thing, and ultimately decide to mix\n&gt; &gt; everyt=\r\nhing together. The URI path only supplies the &quot;model&quot; (actually\n&gt; &gt; control=\r\nler, but those generally map to domain models), and the\n&gt; &gt; controller itse=\r\nlf dispatches on method (GET,PUT,POST,DELETE), resource\n&gt; &gt; (we use URI reg=\r\nex-based routing w/ in each controller) and format.\n&gt; &gt; Formats are specifi=\r\ned by extension (.json,.html,.atom).\n&gt; &gt;\n&gt; &gt; So the &quot;widgets&quot; controller ha=\r\ns a routing map:\n&gt; &gt;\n&gt; &gt; $routes =3D array(\n&gt; &gt; =EF=BF=BD =EF=BF=BD &#39;/&#39; =3D=\r\n&gt; &#39;widgets&#39;, =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =\r\n=EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD// http://myapp/widgets\n&gt; =\r\n&gt; =EF=BF=BD =EF=BF=BD &#39;/{widget_id}&#39; =3D&gt; &#39;widget&#39; =EF=BF=BD =EF=BF=BD =EF=\r\n=BF=BD =EF=BF=BD// http://myapp/widget/23\n&gt; &gt; =EF=BF=BD);\n&gt; &gt;\n&gt; &gt; And defin=\r\nes functions by a convention: {method}{resource}{format} for example:\n&gt; &gt;\n&gt;=\r\n &gt; function getWidgetJson($request) {\n&gt; &gt;\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; function putWidgetA=\r\ntom($request) {\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=\r\n=BF=BD $widget_id =3D $request-&gt;get(&#39;widget_id&#39;);\n&gt; &gt; =EF=BF=BD =EF=BF=BD =\r\n=EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BDetc....\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; function getWi=\r\ndgetsHtml($request) {\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD=\r\ncreate HTML displayin list of widgets\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; function postToWidgets(=\r\n$request) {\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD $posted =\r\n=3D $request-&gt;getBody();\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=\r\n=BD $mime_type =3D $request-&gt;getMediaType();\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=\r\n=BD =EF=BF=BD =EF=BF=BD dispatch here based on mime_type of posted resource=\r\n (usually atom)\n&gt; &gt; =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD =EF=BF=BD etc..=\r\n..\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; I have found this organizational structure to work well. =\r\n=EF=BF=BDThe main\n&gt; &gt; problem (which I did not show here) is the need to de=\r\nfine\n&gt; &gt; authentication type either per handler or (as is usuallly the case=\r\n)\n&gt; &gt; per method. =EF=BF=BDWe use three auth types: =EF=BF=BDHTTP basic, a =\r\ncookie-based\n&gt; &gt; Auth, and no auth. =EF=BF=BDOther than that, it works well=\r\n.\n&gt; &gt;\n&gt; &gt; --peter keane\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;&gt; Thanks\n&gt; &gt;&gt; Anand\n&gt; &gt;&gt;\n&gt; &gt;&gt; \n&gt; &gt;\n&gt;=\r\n\n\n\n\n"}}