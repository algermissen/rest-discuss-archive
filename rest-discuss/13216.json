{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"Yi5V6DZJNZ4OasG-GeXeYpAOjZctn2LVslNY3ocPqBay8Os3yJJL7oRs-Ayp-DsmoueFOtAFtiKgcf_2DYS4jVpVCPOwD4JZ6ZJKqsMpGnU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Seeking advice while designing a transaction-based RESTful service","postDate":"1252405147","msgId":13216,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGQjAwRjA2LTU2RDQtNEU5RS1CNkJFLTA1Q0M4MTVBRTNCN0BtYWMuY29tPg==","inReplyToHeader":"PGg4NHN2Nys0Y2I4QGVHcm91cHMuY29tPg==","referencesHeader":"PGg4NHN2Nys0Y2I4QGVHcm91cHMuY29tPg=="},"prevInTopic":13215,"nextInTopic":0,"prevInTime":13215,"nextInTime":13217,"topicId":13215,"numMessagesInTopic":2,"msgSnippet":"Hi thedesignofsoftware, ... Good. ... Good. Important is though, that the client does discovover the property URIs from hypermedia instead of having them or","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 7368 invoked from network); 8 Sep 2009 10:19:16 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.re1.yahoo.com with QMQP; 8 Sep 2009 10:19:16 -0000\r\nX-Received: from unknown (HELO asmtpout012.mac.com) (17.148.16.87)\n  by mta1.grp.sp2.yahoo.com with SMTP; 8 Sep 2009 10:19:16 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [10.0.1.6] (p549074B0.dip.t-dialin.net [84.144.116.176])\n by asmtp012.mac.com\n (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec 16 2008; 32bit))\n with ESMTPSA id &lt;0KPN0084UDZWZ810@...&gt; for\n rest-discuss@yahoogroups.com; Tue, 08 Sep 2009 03:19:12 -0700 (PDT)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-id: &lt;3FB00F06-56D4-4E9E-B6BE-05CC815AE3B7@...&gt;\r\nTo: thedesignofsoftware &lt;online@...&gt;\r\nIn-reply-to: &lt;h84sv7+4cb8@...&gt;\r\nDate: Tue, 08 Sep 2009 12:19:07 +0200\r\nReferences: &lt;h84sv7+4cb8@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Seeking advice while designing a transaction-based\n RESTful service\r\nX-Yahoo-Group-Post: member; u=289191104; y=OhyKsvTl5DSWjJklxff9I2ERTORRMrLYiIHu2aT_ULlmr9dWG5vZNril\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nHi thedesignofsoftware,\n\nOn Sep 8, 2009, at 8:18 AM, thedesignofsoftware wrote:\n\n&gt; Hi everyone,\n&gt;\n&gt; I just finished reading O&#39;Reilly&#39;s &quot;Restful web services&quot; book, and  \n&gt; I am\n&gt; in the middle of designing an upcoming web service.\n&gt;\n&gt; For this system, the server is handling two types of transactions  \n&gt; (jobs)\n&gt; on behalf of multiple clients. For each new job, the client first\n&gt; performs a POST to the URI that represents the job type. The server\n&gt; creates a job number and returns the full URI to the client. The two  \n&gt; job\n&gt; types are virtually identical, except that one is stored permanently  \n&gt; on\n&gt; the server.\n&gt;\n&gt; client =&gt; POST /jobtype1\n&gt; server =&gt; 201 Created + http://jobserver/jobtype1/1234   (where 1234\n&gt; represents the job number)\n\nGood.\n\n&gt;\n&gt; From here, the client PUTs various attributes of the job to the  \n&gt; server,\n&gt; (PUT /jobtype1/1234/attribute1, PUT /jobtype1/1234/attribute2),  \n&gt; until it\n&gt; is ready for the server to process the job. There is a predefined  \n&gt; set of\n&gt; attributes of which the client is aware, so PUT is acceptable.\n\nGood. Important is though, that the client does discovover the  \nproperty URIs from\nhypermedia instead of having them or their suffixes hard coded. In any  \ncase,\nmake sure there is no implicit shared knowledge.\n\n&gt;\n&gt; I am then considering whether the client should GET\n&gt; /jobtype1/1234/result , at which point the server will hold the  \n&gt; request\n&gt; open\n\nWhat does &#39;hold open&#39; mean?\n\n&gt; and eventually return the result along with 200 OK. Or whether the\n&gt; client should POST to /jobtype1/results with the job number included  \n&gt; in\n&gt; the entity body. The server would return 202 Accepted along with the\n&gt; result URI (http://jobserver/jobtype1/1234/result). The client would\n&gt; then periodically GET the result URI until successful.\n\n202 and polling seems more appropriate. But the real question is: what  \nis starting the job?\nThe initial POST or the setting of some attribute?\n\n&gt;\n&gt; Any advice on this job result pattern would be greatly appreciated.\n&gt;\n&gt; Second, I am concerned that splitting jobtype1 and jobtype2 into\n&gt; different &#39;factory&#39; resources might be unnecessary and cause  \n&gt; additional\n&gt; repetition during coding, but I&#39;m not sure. Perhaps it would be better\n&gt; to simply POST to a /job URI and include a POST parameter to indicate\n&gt; the job type?\n\nThis should not make too much of a difference ragarding the backend  \ncode.\n\n&gt; The job types are functionally very similar, except that\n&gt; they are stored differently on the server. However, in the business\n&gt; domain, it is *very* important that they are considered separate as\n&gt; there are major implications to the fact that jobs of one type are\n&gt; allowed to be stored, whereas jobs of the second type must never be\n&gt; stored beyond the computation and delivery of results.\n\nI&#39;d keep an eye on the domains used for the URIs. Maybe it is a good  \nidea to\ndistinguish the services by domain so you can later on partition them  \nto physical machines\nand use DNS to direct the URIs to the correct machine.\n\nHTH,\nJan\n\n&gt;\n&gt; Thanks for reading over my questions, I really appreciate it.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}