{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7519858,"authorName":"Mark Baker","from":"&quot;Mark Baker&quot; &lt;distobj@...&gt;","profile":"gonga_thrash","replyTo":"SENDER","senderId":"7omoU4rJxpyJIpG6VfQINgJbYEF6iFM0k7H-o_Z9xEnfoLB48I703GQVnZWk41BbuRaaQ53aDV-aKhLexT3_4P6RSgMu","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Another potential problem with the 311 proposal","postDate":"1171555156","msgId":7883,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM3MGJjODVkMDcwMjE1MDc1OWo2NzhiYTU4YXAxMTVkZGY5YzcxNDA2MDA4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGVyMXZiZys5N3IzQGVHcm91cHMuY29tPg==","referencesHeader":"PGM3MGJjODVkMDcwMjE1MDcxOXYxZmFjOWNmM21mYWJiMTVjNGFmOWE4NWRmQG1haWwuZ21haWwuY29tPgkgPGVyMXZiZys5N3IzQGVHcm91cHMuY29tPg=="},"prevInTopic":7881,"nextInTopic":7884,"prevInTime":7882,"nextInTime":7884,"topicId":7871,"numMessagesInTopic":23,"msgSnippet":"... Then they can use an ... Seriously?  I already gave an example of why they might need to be different; because the requirements and/or design goals may be ","rawEmail":"Return-Path: &lt;mbaker@...&gt;\r\nX-Sender: mbaker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 6759 invoked from network); 15 Feb 2007 16:01:20 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m45.grp.scd.yahoo.com with QMQP; 15 Feb 2007 16:01:20 -0000\r\nReceived: from unknown (HELO wr-out-0506.google.com) (64.233.184.229)\n  by mta11.grp.scd.yahoo.com with SMTP; 15 Feb 2007 16:01:18 -0000\r\nReceived: by wr-out-0506.google.com with SMTP id 69so806662wri\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 15 Feb 2007 07:59:17 -0800 (PST)\r\nReceived: by 10.114.47.1 with SMTP id u1mr1104789wau.1171555156997;\n        Thu, 15 Feb 2007 07:59:16 -0800 (PST)\r\nReceived: by 10.70.125.19 with HTTP; Thu, 15 Feb 2007 07:59:16 -0800 (PST)\r\nMessage-ID: &lt;c70bc85d0702150759j678ba58ap115ddf9c71406008@...&gt;\r\nDate: Thu, 15 Feb 2007 10:59:16 -0500\r\nTo: &quot;=?ISO-8859-1?Q?J=E9r=F4me_Louvel?=&quot; &lt;contact@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;er1vbg+97r3@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;c70bc85d0702150719v1fac9cf3mfabb15c4af9a85df@...&gt;\n\t &lt;er1vbg+97r3@...&gt;\r\nX-Google-Sender-Auth: 7ce9f1cc23a40493\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mark Baker&quot; &lt;distobj@...&gt;\r\nSubject: Re: [rest-discuss] Re: Another potential problem with the 311 proposal\r\nX-Yahoo-Group-Post: member; u=7519858; y=OWQrrsMwbZfKWL2TKTi0epTIgrMHeykP6oBjrjJihc_FKA4Kw6kH\r\nX-Yahoo-Profile: gonga_thrash\r\n\r\nOn 2/15/07, J=E9r=F4me Louvel &lt;contact@...&gt; wrote:\n&gt; Hi Mark,\n&gt;\n&gt; &gt;=\r\n I agree.  Moreover, I also think you generally have different design\n&gt; &gt; g=\r\noals with client and server APIs.  For example performance is\n&gt; &gt; normally =\r\na lot more important for servers than clients.  Also, a\n&gt; &gt; simple API migh=\r\nt be more desirable on the client than on the server\n&gt; &gt; (again, because of=\r\n performance).  For these reasons it will likely do\n&gt; &gt; more harm than good=\r\n to try to use server abstractions in a client API\n&gt; &gt; or vice-versa.\n&gt;\n&gt; I=\r\n understand your point of view, but we also have to take into account\n&gt; app=\r\nlications that need high performance for clients too.\n\nThen they can use an=\r\n\n\n&gt; Implementating transparent RESTful proxies for non-RESTful\n&gt; applicatio=\r\nns is a common use case where you need excellent\n&gt; performance, multi-threa=\r\nding on both sides of your application.\n&gt;\n&gt; FYI, we provide two client HTTP=\r\n connectors (pluggable and using the\n&gt; same API), one based on JDK&#39;s HttpUR=\r\nLConnection and another based on\n&gt; Apache HTTP Client library.\n&gt;\n&gt; Also, in=\r\n our case, you can directly set the client&#39;s output\n&gt; representation refere=\r\nnce as the server&#39;s output representation,\n&gt; without reading/buffering anyt=\r\nhing. An optimized implementation of the\n&gt; Restlet API could even directly =\r\nmove bytes from client socket to\n&gt; server socket without consuming JVM memo=\r\nry thanks to Java&#39;s NIO.\n&gt;\n&gt; Anyway, we didn&#39;t find the sharing of common c=\r\nlasses between the\n&gt; server-side and the client-side of the API to be an is=\r\nsue, it&#39;s even\n&gt; the opposite. For this design, we leveraged the notion of =\r\nREST uniform\n&gt; interface (see our org.restlet.Uniform class) and the generi=\r\nc HTTP\n&gt; message aspects (entity headers common to both HTTP requests and\n&gt;=\r\n responses). Just think about representations metadata (ETag, media\n&gt; type,=\r\n encoding, etc.), their are strictly the same.\n&gt;\n&gt; Even the HTTP specificat=\r\nion doesn&#39;t provide two separate definitions\n&gt; for requests and responses d=\r\nepending on whether you see the\n&gt; communication from the client end or from=\r\n the server end of the\n&gt; connection, so why redefine them twice at the API =\r\nlevel?\n\nSeriously?  I already gave an example of why they might need to be\n=\r\ndifferent; because the requirements and/or design goals may be\ndifferent.\n\n=\r\nThat&#39;s not saying there won&#39;t be any shared API - I expect you could\nshare =\r\na bunch of &quot;util&quot; classes.  But I don&#39;t think it should be a\ngoal to be abl=\r\ne to share important chunks of the API between client\nand server.  If that =\r\nhappens because the goals are similar enough,\ngreat, but it shouldn&#39;t itsel=\r\nf be an objective IMO.\n\nMark.\n-- \nMark Baker.  Ottawa, Ontario, CANADA.    =\r\n     http://www.markbaker.ca\nCoactus; Web-inspired integration strategies  =\r\nhttp://www.coactus.com\n\n"}}