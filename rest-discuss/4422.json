{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"Seairth Jacobs &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"bjdb_AGeuEuSOIVqzw9XGAPZVObl512JeILD5MIOQAWx2Tn_fyuBtDhz5S9Zr5Ywnwwfd6xpjd9SY_D4gmq806X_gDzaBdAQJhPd","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re-using information fields for queries in REST","postDate":"1086134067","msgId":4422,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwQkQxNzMzLjQwNTA1MDlAc2VhaXJ0aC5jb20+","inReplyToHeader":"PDMyRDU4NDVBNzQ1QkZCNDI5Q0JEQkFEQTU3Q0Q0MUFGMDdFNjY5RDRAdXNzamV4MDEuYW1lci5iZWEuY29tPg==","referencesHeader":"PDMyRDU4NDVBNzQ1QkZCNDI5Q0JEQkFEQTU3Q0Q0MUFGMDdFNjY5RDRAdXNzamV4MDEuYW1lci5iZWEuY29tPg=="},"prevInTopic":4421,"nextInTopic":4423,"prevInTime":4421,"nextInTime":4423,"topicId":4417,"numMessagesInTopic":23,"msgSnippet":"... Suppose you defined the semantics of the query response format to provide such constraints/rules necessary to construct URIs.  As long as the client","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 59581 invoked from network); 1 Jun 2004 23:54:34 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m21.grp.scd.yahoo.com with QMQP; 1 Jun 2004 23:54:34 -0000\r\nReceived: from unknown (HELO lakermmtao05.cox.net) (68.230.240.34)\n  by mta6.grp.scd.yahoo.com with SMTP; 1 Jun 2004 23:54:34 -0000\r\nReceived: from seairth.com ([68.96.198.233]) by lakermmtao05.cox.net\n          (InterMail vM.6.01.03.02 201-2131-111-104-20040324) with ESMTP\n          id &lt;20040601235434.CTJC22310.lakermmtao05.cox.net@...&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Tue, 1 Jun 2004 19:54:34 -0400\r\nMessage-ID: &lt;40BD1733.4050509@...&gt;\r\nDate: Tue, 01 Jun 2004 19:54:27 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.6) Gecko/20040113\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;32D5845A745BFB429CBDBADA57CD41AF07E669D4@...&gt;\r\nIn-Reply-To: &lt;32D5845A745BFB429CBDBADA57CD41AF07E669D4@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------080204090905030707020405&quot;\r\nX-eGroups-Remote-IP: 68.230.240.34\r\nFrom: Seairth Jacobs &lt;seairth@...&gt;\r\nSubject: Re: [rest-discuss] Re-using information fields for queries in REST\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n\r\n--------------080204090905030707020405\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&quot;David Orchard&quot; wrote:\n\n&gt;&gt;-----Original Message-----\n&gt;&gt;From: Walden Mathews [mailto:walden@...]\n&gt;&gt;\n&gt;&gt;That looks more like a collection or subset to me.  A single\n&gt;&gt;artist resource might be more like /Artist/123.  An important\n&gt;&gt;question is: how does the client discover that URI?  The &quot;hyptertext\n&gt;&gt;engine&quot; constraint of REST really wants it to be discovered, not\n&gt;&gt;fabricated by client as a parameter list.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Why is discovery of a particular URI &quot;better&quot; than discovery of the construction technique for a URI?  This argues that HTML FORM GETs are a bad way of creating URIs because they are fabricated.\n&gt;  \n&gt;\nSuppose you defined the semantics of the query response format to \nprovide such constraints/rules necessary to construct URIs.  As long as \nthe client understands the semantics of the format, you are basically \nwhere HTML forms are.  However, just listing the URIs themselves would \nbe much more straight forward.  The URI is an opaque identifier.  As \nsuch, the client can stay dumb and loosely coupled.  If, at some later \ntime, you should choose to change the URI construction (say from \n/artist/123 to /artist/tu123 or /a23423992359652), the client continues \nworking unchanged.  The constructed URI approach, on the other hand, \nwould be brittle.  You would either need to construct your URIs in a \nbackward-compatible manner or require the clients to learn the new \nconstruction rules, neither of which are a very desirable choice.\n\nSuppose you want to reference artists on another site that uses an \nentirely different URI format.  Are you going to reverse-engineer those \nURIs and add yet more semantics to the query response format for those URIs?\n\nAlso, there&#39;s a propensity for humans to see patterns in structures.  \nURIs are often such a structure.  I agree that a person seeing \n/artist/123 may be inclined to try artist/124.  However, I think people \nare more inclined to see /artist?id=123 and try /artist?id=124.  The \nmoment you tell people that there is a pattern, they expect the \npattern.  You can&#39;t stop people from seeing patterns where there may not \nbe any, but you can certainly stop from telling people there is a \npattern where you know there is not one.\n\n--\nSeairth Jacobs\n\n\r\n--------------080204090905030707020405\r\nContent-Type: text/html; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=ISO-8859-1&quot; http-equiv=&quot;Content-Type&quot;&gt;\n  &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\n&quot;David Orchard&quot; wrote:\n&lt;blockquote\n cite=&quot;mid32D5845A745BFB429CBDBADA57CD41AF07E669D4@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;-----Original Message-----\nFrom: Walden Mathews [&lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;mailto:walden@...&quot;&gt;mailto:walden@...&lt;/a&gt;]\n\nThat looks more like a collection or subset to me.  A single\nartist resource might be more like /Artist/123.  An important\nquestion is: how does the client discover that URI?  The &quot;hyptertext\nengine&quot; constraint of REST really wants it to be discovered, not\nfabricated by client as a parameter list.\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nWhy is discovery of a particular URI &quot;better&quot; than discovery of the construction technique for a URI?  This argues that HTML FORM GETs are a bad way of creating URIs because they are fabricated.\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nSuppose you defined the semantics of the query response format to\nprovide such constraints/rules necessary to construct URIs.&nbsp; As long as\nthe client understands the semantics of the format, you are basically\nwhere HTML forms are.&nbsp; However, just listing the URIs themselves would\nbe much more straight forward.&nbsp; The URI is an opaque identifier.&nbsp; As\nsuch, the client can stay dumb and loosely coupled.&nbsp; If, at some later\ntime, you should choose to change the URI construction (say from\n/artist/123 to /artist/tu123 or /a23423992359652), the client continues\nworking unchanged.&nbsp; The constructed URI approach, on the other hand,\nwould be brittle.&nbsp; You would either need to construct your URIs in a\nbackward-compatible manner or require the clients to learn the new\nconstruction rules, neither of which are a very desirable choice.&lt;br&gt;\n&lt;br&gt;\nSuppose you want to reference artists on another site that uses an\nentirely different URI format.&nbsp; Are you going to reverse-engineer those\nURIs and add yet more semantics to the query response format for those\nURIs?&lt;br&gt;\n&lt;br&gt;\nAlso, there&#39;s a propensity for humans to see patterns in structures.&nbsp;\nURIs are often such a structure.&nbsp; I agree that a person seeing\n/artist/123 may be inclined to try artist/124.&nbsp; However, I think people\nare more inclined to see /artist?id=123 and try /artist?id=124.&nbsp; The\nmoment you tell people that there is a pattern, they expect the\npattern.&nbsp; You can&#39;t stop people from seeing patterns where there may\nnot be any, but you can certainly stop from telling people there is a\npattern where you know there is not one.&lt;br&gt;\n&lt;br&gt;\n--&lt;br&gt;\nSeairth Jacobs&lt;br&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------080204090905030707020405--\r\n\n"}}