{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":323709912,"authorName":"Erik Wilde","from":"Erik Wilde &lt;dret@...&gt;","profile":"drethoo","replyTo":"SENDER","senderId":"3eDVvnQRQGkg8CXOHYh1GysqggdqMzpKnWzXzVq2YUZuV3FFqcdx3hTlLaJm_R0AfUFXc3L1epVV1DOGlr-zwBCHpo0D","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400357256","msgId":19645,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzNzdDMTg4LjYwMzA3MDJAYmVya2VsZXkuZWR1Pg==","inReplyToHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPg==","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPg=="},"prevInTopic":19644,"nextInTopic":19646,"prevInTime":19644,"nextInTime":19646,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"hello michael. On 2014-05-17, 10:33, Michael Schuerig michael.lists@schuerig.de ... haven t really seen it buzzing that much, but if you had to give it at ","rawEmail":"Return-Path: &lt;dret@...&gt;\r\nX-Sender: dret@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 56934 invoked by uid 102); 17 May 2014 20:04:46 -0000\r\nX-Received: from unknown (HELO mtaq5.grp.bf1.yahoo.com) (10.193.84.36)\n  by m15.grp.bf1.yahoo.com with SMTP; 17 May 2014 20:04:46 -0000\r\nX-Received: (qmail 13249 invoked from network); 17 May 2014 20:04:46 -0000\r\nX-Received: from unknown (HELO cm03fe.IST.Berkeley.EDU) (169.229.218.144)\n  by mtaq5.grp.bf1.yahoo.com with SMTP; 17 May 2014 20:04:46 -0000\r\nX-Received: from [24.130.84.248] (helo=dretair11.local)\n\tby cm03fe.ist.berkeley.edu with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.76)\n\t(auth plain:dret@...)\n\t(envelope-from &lt;dret@...&gt;)\n\tid 1Wlkqa-0002M6-Bn; Sat, 17 May 2014 13:04:45 -0700\r\nMessage-ID: &lt;5377C188.6030702@...&gt;\r\nDate: Sat, 17 May 2014 13:07:36 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Thunderbird/24.5.0\r\nMIME-Version: 1.0\r\nTo: Michael Schuerig &lt;michael.lists@...&gt;, \n rest-discuss@yahoogroups.com\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt;\r\nIn-Reply-To: &lt;1415814.4WWGmn9cMu@fuchsia&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=323709912; y=gCfKCu5iuyoildj7-QOQhewGXjZg7nkkpH0bj7xFIs1zHA\r\nX-Yahoo-Profile: drethoo\r\nFrom: Erik Wilde &lt;dret@...&gt;\r\n\r\nhello michael.\n\nOn 2014-05-17, 10:33, Michael Schuerig michael.lists@... \n[rest-discuss] wrote:\n&gt; The &quot;reactive&quot; buzzword has been conspicuously absent from this list.\n&gt; I&#39;ll try to fill this much needed gap.\n\nhaven&#39;t really seen it buzzing that much, but if you had to give it at \nleast a little substance, how would you explain what it means? just \nsomething that&#39;s driven by events rather than clients?\n\n&gt; I&#39;ve recently watched a presentation by Jafar Husain\n&gt;    http://www.infoq.com/presentations/netflix-reactive-rest\n&gt; where he describes something he calls &quot;Reactive REST&quot;. I agree on the\n&gt; &quot;reactive&quot;, however I have doubts about the &quot;REST&quot;. In this particular\n&gt; case, all communication between a client and a server is over persistent\n&gt; connection to a single endpoint. If there&#39;s anything resembling\n&gt; resources, they are not identified by URIs. The persistent connection\n&gt; IMHO is a case of &quot;conversational&quot; state that REST is rather opposed to.\n&gt; No HATEOAS in sight.\n\nsounds like websockets (maybe not technically, but as the general idea). \nto me, REST is on a different level than this plumbing. in the same way \nas you can do REST and notREST over HTTP, the same probably applies to \nany of the alternative interaction styles. as you point out, REST has \nmore (and more abstract) constraints than just the protocol that&#39;s used.\n\n&gt; What I&#39;m pondering is whether an API can be RESTful and reactive at the\n&gt; same time or if is impossible as a matter of principle. AFAICT, a\n&gt; reactive API requires some way for the server to send events to the\n&gt; client. I don&#39;t think polling qualifies, which leaves a persistent\n&gt; connection. In effect, the server has to keep some amount of state for\n&gt; each session.\n\nnot sure i agree that polling or long polling are the only (or best) \nalternatives. there&#39;s quite of stuff to be done in the area that i often \nrefer to as &quot;reverse REST&quot;: clients subscribe, and then there&#39;s a push \nmodel. there are a variety of push protocols (PuSH, MQTT, APN, C2DM, \nsMAP) out there, but none so far has taken over the world.\n\nit&#39;ll be interesting to see how this plays out in june at the w3c&#39;s web \nof things workshop. clearly, in sensor scenarios, it would be very \nconvenient to have these kind of alerts, have them in a loosely coupled \nand scalable way, and have them via protocols that are universally \nsupported. it may be the case that w3c will start working on something \nin that space, but we&#39;ll know more after that workshop.\n\nhttp://www.w3.org/2014/02/wot/\n\nhttp://dret.net/netdret/publications#wil14a is a position paper that we \nhave submitted to this workshop. it may be the case that activity \nstreams take over as the new atom. we&#39;ll see about that, but they are \nnot all that different, and they use JSON, so all is good.\n\nand in the same way as you can layer PuSH on atom to have a push model \non top of atom&#39;s data model, you can do the same for activity streams. \nthat might be the way open push protocols are going: you can poll for \nactivities, or you can subscribe to an activity hub that pushes to you \nwhatever you has subscribed to.\n\nin my eyes, this could still be RESTful, only that of course you would \nend up having more resources (such as subscriptions that need to be \nmanaged and so on).\n\nanyway, a very good question, a very interesting field, and with the \nwhole IoT/WoT movement now getting a serious hype push, maybe we&#39;ll get \nto something open, useful, and RESTful in the next couple of years.\n\n&gt; Keeping session state has traditionally been regarded as a hindrance to\n&gt; scalability. Has technology advanced so much, eg with asynchronous,\n&gt; event-driven (&quot;reactive&quot;) servers, that this is no longer a problem?\n\njust a question of cost. different protocols have different solutions \n(PuSH subscriptions time out automatically, sMAP subscriptions never \ntime out), based on different scenarios. anything push-based is more \nexpensive than pure pull, because services/hubs need to keep track of \nsubscribers. but if the cost is smaller that the benefit, then this will \nhappen one way or another.\n\n&gt; Frankly, I&#39;m lacking experience with systems where this kind of\n&gt; scalability would be required, so I&#39;d happily use persistent\n&gt; connections, at least to begin with. Nonetheless, I&#39;m interested in your\n&gt; insights.\n\nweb of things scenarios simply cannot work with long polling. if you \nwant to be connected to thousands of sensors in your building to figure \nout when one is telling you that there is a fire, then you cannot have \nopen connections to all of them. the answer here is a layered \narchitecture, maybe some of it hidden as implementation details (sensors \njust speaking MQTT to a hub), and other things exposed on the web level \n(you being able to subscribe to that hub and get alerts). many solutions \nhave been built around this general pattern, but so far we lack a single \nand coherent answer where to draw the boundary between the \nimplementation details and the open part, and what we should use for \nthat open part. as mentioned above, maybe that workshop will bring \ntogether enough interested parties to start working on that issue.\n\ncheers,\n\ndret.\n\n-- \nerik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n            | UC Berkeley  -  School of Information (ISchool) |\n            | http://dret.net/netdret http://twitter.com/dret |\n\n"}}