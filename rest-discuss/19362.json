{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":493355712,"authorName":"Markus Lanthaler","from":"&quot;Markus Lanthaler&quot; &lt;markus.lanthaler@...&gt;","profile":"mark_lanthaler","replyTo":"SENDER","senderId":"e9Xawqg6UUT0hFGc1foQv2rdabOnlYjhfbfvO5WQW6P1k8x1WQ5HZiGTOuOq0LN_RkbDAIVL2do8PwScZwykBgNVFlTRZUrsMr2ZUkFDvGSOo7Lm","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] the meaning of stateless","postDate":"1366877711","msgId":19362,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwODUwMWNlNDE4ZCQwMjFiNzBiMCQwNjUyNTIxMCRAbGFudGhhbGVyQGdteC5uZXQ+","inReplyToHeader":"PDVGQ0E0MzE0LTY5OUUtNENBMS04NDJDLUU0QTY3OUVBMTA4OUBuZXdjbGFyaXR5Lm5ldD4=","referencesHeader":"PENBR1ZiWEw2X09IT2hPVFMwa2YwU0tjV0EtPXpLWWJLTFFXVldmQm9US09tZzd2WHhFQUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG03bmtZV3lRZTVmUWVqWUJ0aTl1TlUtdTZ3WGZnZ0VjTEhuOUZYRytNTm01QUBtYWlsLmdtYWlsLmNvbT4gPENBR1ZiWEw0QWh0QkJKS1VCQUx2WXFBcTdHSnNnQkZLeFctN1pYWDVXM0c3OWtjSmJUUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG03ODBmZ0w2SHBlTnk4ZXZ6TjlqMHo9N1JiZzdEcDZVZ1R3QnJrakhoYkhrd0BtYWlsLmdtYWlsLmNvbT4gPENBR1ZiWEw0TmIxWEd3NTN4KzVaPTRDaD1PV1JfSCttVHRnS3FzdT1tcS05Wit5X05EZ0BtYWlsLmdtYWlsLmNvbT4gPENBTGNvWmlvUXo4Nm8tRmQ3WW5PZ0RocHJnS1U5azVHUytIUWRhbXJRTjNHZGJQY2J0UUBtYWlsLmdtYWlsLmNvbT4gPENBR1ZiWEw1R0dWSlZvNDlWQ3NlNEs9VE1DdHZ1V25VY0ZuV1BMZlFOMzBWTTBPNlJGQUBtYWlsLmdtYWlsLmNvbT4gPENBTGNvWmlyVXprN0N1dUtaSEZOd1FrTXdrMS13UCstNjdVZTJMSGhTQjlmX1BjajlSQUBtYWlsLmdtYWlsLmNvbT4gPDkxQzkyODZDLUUxM0UtNDNGOC1BMUZELTAwNTEyNkQ1RTAyQkBuZXdjbGFyaXR5Lm5ldD4gPENBTGNvWmlvVksyTDFBWlBpQkdGZ3pLXzdaTzh1RGNNc1M0bWRaZzY3My1Renh4enZkd0BtYWlsLmdtYWlsLmNvbT4gPEExOEE0ODM0LTI0QUYtNDAwMC1BQUUxLTU0RTc2NDc2NUI2RkBuZXdjbGFyaXR5Lm5ldD4gPENBTGNvWmlvT3RmME89ekdMZzJTdnloenRVTUxNVlUtZ1NZeE4tVyswUEZ3dEFwOEdTd0BtYWlsLmdtYWlsLmNvbT4gPDVGQ0E0MzE0LTY5OUUtNENBMS04NDJDLUU0QTY3OUVBMTA4OUBuZXdjbGFyaXR5Lm5ldD4="},"prevInTopic":19361,"nextInTopic":19363,"prevInTime":19361,"nextInTime":19363,"topicId":19309,"numMessagesInTopic":86,"msgSnippet":"Hi Mike, I m trying to consolidate all your questions in the various sub-threads answer them in a single mail. ... That s true and I think that s where your","rawEmail":"Return-Path: &lt;markus.lanthaler@...&gt;\r\nX-Sender: markus.lanthaler@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19927 invoked by uid 102); 25 Apr 2013 08:15:16 -0000\r\nX-Received: from unknown (HELO mta2.grp.bf1.yahoo.com) (10.193.84.150)\n  by m8.grp.bf1.yahoo.com with SMTP; 25 Apr 2013 08:15:16 -0000\r\nX-Received: (qmail 9661 invoked from network); 25 Apr 2013 08:15:16 -0000\r\nX-Received: from unknown (HELO mout.gmx.net) (212.227.15.19)\n  by mta2.grp.bf1.yahoo.com with SMTP; 25 Apr 2013 08:15:16 -0000\r\nX-Received: from mailout-de.gmx.net ([10.1.76.28]) by mrigmx.server.lan\n (mrigmx001) with ESMTP (Nemesis) id 0LosgX-1Uyabf04hX-00grn8 for\n &lt;rest-discuss@yahoogroups.com&gt;; Thu, 25 Apr 2013 10:15:16 +0200\r\nX-Received: (qmail invoked by alias); 25 Apr 2013 08:15:15 -0000\r\nX-Received: from 84-115-182-43.dynamic.surfer.at (EHLO Vostro3500) [84.115.182.43]\n  by mail.gmx.net (mp028) with SMTP; 25 Apr 2013 10:15:15 +0200\r\nX-Authenticated: #419883\r\nX-Provags-ID: V01U2FsdGVkX1+7fVtETse74Q16gfeQUpQE0ffQJrISeaiqq8Kt2f\n\tLBK9i5qzEWNENn\r\nTo: &quot;&#39;Rest List&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;CAGVbXL6_OHOhOTS0kf0SKcWA-=zKYbKLQWVWfBoTKOmg7vXxEA@...&gt; &lt;CAPW_8m7nkYWyQe5fQejYBti9uNU-u6wXfggEcLHn9FXG+MNm5A@...&gt; &lt;CAGVbXL4AhtBBJKUBALvYqAq7GJsgBFKxW-7ZXX5W3G79kcJbTQ@...&gt; &lt;CAPW_8m780fgL6HpeNy8evzN9j0z=7Rbg7Dp6UgTwBrkjHhbHkw@...&gt; &lt;CAGVbXL4Nb1XGw53x+5Z=4Ch=OWR_H+mTtgKqsu=mq-9Z+y_NDg@...&gt; &lt;CALcoZioQz86o-Fd7YnOgDhprgKU9k5GS+HQdamrQN3GdbPcbtQ@...&gt; &lt;CAGVbXL5GGVJVo49VCse4K=TMCtvuWnUcFnWPLfQN30VM0O6RFA@...&gt; &lt;CALcoZirUzk7CuuKZHFNwQkMwk1-wP+-67Ue2LHhSB9f_Pcj9RA@...&gt; &lt;91C9286C-E13E-43F8-A1FD-005126D5E02B@...&gt; &lt;CALcoZioVK2L1AZPiBGFgzK_7ZO8uDcMsS4mdZg673-Qzxxzvdw@...&gt; &lt;A18A4834-24AF-4000-AAE1-54E764765B6F@...&gt; &lt;CALcoZioOtf0O=zGLg2SvyhztUMLMVU-gSYxN-W+0PFwtAp8GSw@...&gt; &lt;5FCA4314-699E-4CA1-842C-E4A679EA1089@...&gt;\r\nIn-Reply-To: &lt;5FCA4314-699E-4CA1-842C-E4A679EA1089@...&gt;\r\nDate: Thu, 25 Apr 2013 10:15:11 +0200\r\nMessage-ID: &lt;008501ce418d$021b70b0$06525210$@lanthaler@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 12.0\r\nthread-index: Ac5BaygTrXtiHc4AT6evcT+xUDHLFgAHsaFA\r\nContent-Language: de\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Markus Lanthaler&quot; &lt;markus.lanthaler@...&gt;\r\nSubject: RE: [rest-discuss] the meaning of stateless\r\nX-Yahoo-Group-Post: member; u=493355712; y=WFBXGAn7mb1Ez3jKZQITryhgwQOgol1I7Qj98igw6fwzGa0g_H-8z8Q\r\nX-Yahoo-Profile: mark_lanthaler\r\n\r\nHi Mike,\n\nI&#39;m trying to consolidate all your questions in the various sub-threads\nanswer them in a single mail.\n\n&gt; If that is absolutely true, then how can REST implement workflow or\n&gt; transactions? For example (admittedly trivial, but the pattern could\n&gt; be applied to something much less than trivial):\n&gt; \n&gt; GET /client/abc123/accounts\n&gt; ---&gt; 200 ok, [ { &quot;account&quot;: &quot;checking&quot;, &quot;balance&quot;: 500.00 },\n&gt;                { &quot;account&quot;: &quot;savings&quot;, &quot;balance&quot;: 100.00 }]\n&gt; POST /client/abc123/account-transfer/new\n&gt; ---&gt; 200 ok, Location: /account-transfer/12345\n&gt; PUT /client/abc123/account-transfer/12345/checking\n&gt; balance=350\n&gt; ---&gt; 200 ok\n&gt; \n&gt; PUT /client/abc123/account-transfer/12345/savings\n&gt; balance=250\n&gt; ---&gt; 200 ok\n&gt; \n&gt; POST /client/abc123/account-transfer/12345\n&gt; action=commit\n&gt; ---&gt; 200 ok\n&gt; \n&gt; In the real world I can come up with all kind of other examples where\n&gt; an action based on a POST would be different based on POSTs and PUTs\n&gt; that came before it, or the thing that needs to be accomplished cannot\n&gt; be. So my intuition tells me that there must be some kind of state\n&gt; that is okay and some kind of state that is bad but the more questions\n&gt; I ask the less I&#39;m confident that I understand the answer. Based on\n&gt; your comment I would be driven to think that systems cannot implement\n&gt; workflow or transactions and still be RESTful.\n\nThat&#39;s true and I think that&#39;s where your confusion comes from. There are\nindeed two types of states: application state and resource state.\n\nThe statelessness of REST is about the application state. The client is\nresponsible for the application state. For example, if you browse through a\npaginated collection the server must not keep track of the last page the\nclient visited. That&#39;s up to client. Obviously the server could store that\ninformation in a session record but that would lead to reduced scalability.\n\nOn the other hand there&#39;s resource state. That&#39;s the state the server is\nresponsible for. Every HTML page you are able to retrieve on the Web\nrepresents such resource state. The difference is that that state is not\nbound to a single client but available to all clients (given they are\nauthorized).\n\nThe example above is stateless in that respect. Any client knowing the\naccount transfer ID can go and modify it. I would change the last POST to a\nPUT because otherwise you wouldn&#39;t be able to repeat the commit if the POST\nfails. If the server receives another commit for an already committed\ntransfer it can simply ignore it. Obviously cancelling a committed transfer\nwould have to result in an error. \n\n\n&gt; On Apr 24, 2013, at 1:23 PM, Markus Lanthaler wrote:\n&gt; &gt; No, it&#39;s not their &quot;implicitness&quot; it is because the server has to keep\n&gt; &gt; track of the clients. The server typically creates a small file (or DB\n&gt; &gt; entry) in which he puts session information about the client. You need\n&gt; &gt; to replicate that to all servers if you want to scale such a system.\n&gt; \n&gt; So earlier in the thread I asked[1] if a shopping cart or transaction\n&gt; that creates a DB entry violates the stateless requirement and the\n&gt; only person who answered said it did not[2].\n\nThat&#39;s true. It does not because it is resource state. In a Web API a\nshopping cart IMO however doesn&#39;t make much sense. Just create directly an\norder.\n\n\n&gt; Is he wrong and if so then are RESTful systems not able to do workflow\n&gt; or transactions?  Or is he correct and there is some other nuance that\n&gt; differentiates between a session and a shopping cart or a transaction?\n\nHope the explanation above answered this question.\n\n\n&gt; &gt; Yes.. you should also add that a request *must not* depend on a\n&gt; &gt; previous request (the use of a session ID, e.g., does)\n&gt; \n&gt; I just asked Mark Baker today about this giving an example transaction\n&gt; that does depend on a previous request[3] which was similar to what\n&gt; was recommended in Richardson & Ruby&#39;s REST book. So I&#39;ll repeat the\n&gt; above question: are RESTful systems not able to do workflow or\n&gt; transactions?  Or is there some other nuance that differentiates\n&gt; between a session and a shopping cart or a transaction?\n\nSee above.\n\n\n&gt; I&#39;m not trolling, I&#39;m honestly trying to come up with a way to\n&gt; understand Roy&#39;s Rules of REST in a concrete,  objective and\n&gt; unambiguous manner so I can be sure that I&#39;m always employing them\n&gt; correctly and I don&#39;t feel I can do that yet.\n\nNo need to apologize :-)\n\n\n&gt; On Apr 24, 2013, at 9:34 PM, Mark Baker &lt;distobj@...&gt; wrote:\n&gt; &gt; Remember the days before electronic banking when we had to fill out\n&gt; &gt; slips and submit them to a teller?\n&gt; &gt; \n&gt; &gt; POST /transfer-request\n&gt; &gt; {&quot;from&quot;: &quot;http://example.org/acct/12345&quot;,\n&gt; &gt; &quot;to&quot;: &quot;http://example.org/acct/12346&quot;,\n&gt; &gt; &quot;amount&quot;: 300 }\n\nThis is a particularly bad example IMHO. What would do if the POST fails?\nFor example if you lose your WiFi connection before you get a response?\nObviously you can&#39;t just repeat it. Mike&#39;s approach is much better in that\nregard.\n\n\n&gt; Anyway, let me take your example which I assume is RESTful and ask my\n&gt; question another way. It seems to me that if I started with a state of\n&gt; &quot;500&quot; in account &quot;12345&quot; and &quot;0&quot; in account &quot;12346&quot; and do your POST\n&gt; example I end up with &quot;200&quot; and &quot;300&quot; in the accounts, respectively.\n&gt; \n&gt; However if I now do your POST example *again* it will fail, because I\n&gt; don&#39;t have enough money in the &quot;from&quot; account to complete the\n&gt; transaction.  So how are the account balances not &quot;state&quot; in the\n&gt; context of Roy&#39;s &quot;stateless&quot; requirement?\n\nThey are state - resource state however.\n\n\n&gt; If you tell me the reality is that most non-trivial uses-cases for a\n&gt; web APIs actually need to be stateful in some ways and that the\n&gt; &quot;stateless&quot; requirement for REST is an ideal that has benefits when it\n&gt; can be achieved but is often impossible to realize then I think I&#39;d be\n&gt; finally coming to an understanding of the stateless requirement.  :-)\n&gt; \n&gt; But if you say &quot;No, stateless can be achieved in most cases&quot; then I&#39;m\n&gt; even more lost than when I started asking questions on this thread a\n&gt; few days ago. :-(\n\nAll that counts is that the server doesn&#39;t need to keep track of client\nstate (= application state). As long as you do that, you can throw more\nstateless boxes in front of your database (managing the resource state) to\nscale your service. If the servers would need to manage client sessions\n(again, application state) you can&#39;t do that so easily because.\n\n\nCheers,\nMarkus\n\n\n\n--\nMarkus Lanthaler\n@markuslanthaler\n\n\n"}}