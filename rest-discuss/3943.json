{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"36LwPsOu7PeXNgWYpi64iTyrPe8Ho1JCX2LM0mfRCjtRD6JI_SRHlFRlxJRBkVB2oDNQ1pTHkuK6Rs05n-9vztYsJjZV1v1K-_fAseQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"SID (was Re:Simple URI Discovery Syntax)","postDate":"1062724279","msgId":3943,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMGUwMWMzNzM0YSQ5ZDU3OGE4MCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDAwMTgwMWMzNmIzYiQ1ZTBlOGMwMCRhMDAwYThjMEBTZWFpcnRoQTMxPiA8MDAxNTAxYzM2YjNmJDEzMzE1ZTIwJDA5MDJhOGMwQEFUVElDNTZDT1ZFPiA8MDAxNzAxYzM2YjY3JDczNDhhNGQwJGEwMDBhOGMwQFNlYWlydGhBMzE+IDwxNTkwNTQwMzcuMTA2MjY5OTY3NEBsb2NhbGhvc3Q+"},"prevInTopic":0,"nextInTopic":3949,"prevInTime":3942,"nextInTime":3944,"topicId":3943,"numMessagesInTopic":2,"msgSnippet":"Welcome back to this world.  :) In answer to your question: simplicity.  SID (which replaced SUDS) can be learned in a matter of minutes.  No, it is not a","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 48526 invoked from network); 5 Sep 2003 01:11:33 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m12.grp.scd.yahoo.com with QMQP; 5 Sep 2003 01:11:33 -0000\r\nReceived: from unknown (HELO lakemtao04.cox.net) (68.1.17.241)\n  by mta5.grp.scd.yahoo.com with SMTP; 5 Sep 2003 01:11:33 -0000\r\nReceived: from SeairthA31 ([68.96.198.4]) by lakemtao04.cox.net\n          (InterMail vM.5.01.06.04 201-253-122-130-104-20030726) with SMTP\n          id &lt;20030905011120.INBZ29613.lakemtao04.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Thu, 4 Sep 2003 21:11:20 -0400\r\nMessage-ID: &lt;000e01c3734a$9d578a80$a000a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;001801c36b3b$5e0e8c00$a000a8c0@SeairthA31&gt; &lt;001501c36b3f$13315e20$0902a8c0@ATTIC56COVE&gt; &lt;001701c36b67$7348a4d0$a000a8c0@SeairthA31&gt; &lt;159054037.1062699674@localhost&gt;\r\nSubject: SID (was Re:Simple URI Discovery Syntax)\r\nDate: Thu, 4 Sep 2003 21:11:19 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nWelcome back to this world.  :)\n\nIn answer to your question: simplicity.  SID (which replaced SUDS) can be\nlearned in a matter of minutes.  No, it is not a perfect solution for all\nsituations (what is?).  But I think there is a great (or at least\nincreasing) need for better introspection, and I think that something like\nWSDL is overkill for many.\n\n---\nSeairth Jacobs\nseairth@...\n\n\n----- Original Message ----- \nFrom: &quot;Alex Jacobson&quot; &lt;alex@...&gt;\nTo: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;; &quot;rest-discuss&quot;\n&lt;rest-discuss@yahoogroups.com&gt;\nSent: Thursday, September 04, 2003 6:21 PM\nSubject: Re: [rest-discuss] Simple URI Discovery Syntax (SUDS)\n\n\n&gt; Seairth,\n&gt;\n&gt; Why not use IDL or WSDL?  Why use HTTP methods?\n&gt;\n&gt; -Alex-\n&gt;\n&gt;\n&gt; ___________________________________________________________________\n&gt; S. Alexander Jacobson                   i2x Media\n&gt; 1-212-787-1914 voice                    1-603-288-1280 fax\n&gt;\n&gt; --On Monday, August 25, 2003 8:17 PM -0400 Seairth Jacobs\n&gt; &lt;seairth@...&gt; wrote:\n&gt;\n&gt; &gt; Heh.  I warned that it was a rough draft.... :)\n&gt; &gt;\n&gt; &gt; From: &quot;Walden Mathews&quot; &lt;waldenm@...&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; 1. Does a remote application want to discover URIs, or does it want\n&gt; &gt;&gt; to discover resources?\n&gt; &gt;\n&gt; &gt; I agree that a remote application wants to discover resources.  However,\n&gt; &gt; in order to work with those resources, it must do so through URIs and\n&gt; &gt; representations.  The objective of SUDS to get ahold of the URI of a\n&gt; &gt; resource, not the resource itself. I need to go reword all of that\nstuff.\n&gt; &gt;\n&gt; &gt;&gt; 2. What is a &quot;resource URI&quot;, as opposed to a regular URI?\n&gt; &gt;\n&gt; &gt; I didn&#39;t see &quot;resource URI&quot; in the document.  Oh wait, that was in the\n&gt; &gt; e-mail.  In answer, there is no difference.  It probably would have been\n&gt; &gt; better to read as &quot;resource&#39;s URI&quot;.  After all, what you are after is\nthe\n&gt; &gt; URI, not the resource (that&#39;s what you use the aquired URI for).\n&gt; &gt;\n&gt; &gt;&gt; 3. In practice, what would SUDS actually be used for?  A focused\n&gt; &gt;&gt; scenario would help.  In mean, isn&#39;t the web really about the discovery\n&gt; &gt;&gt; of resources, one within the context of another?  And if that&#39;s the\n&gt; &gt;&gt; case, then where does this scheme fit in?\n&gt; &gt;\n&gt; &gt; I don&#39;t know if that&#39;s what the web is all about, but it certainly is a\n&gt; &gt; part of the equation.   However, the ability to do this effectively\nseems\n&gt; &gt; fairly limited.  For instance, for any given resource, how can one know\n&gt; &gt; if it meets the needs of your client?  How can a client know what a\n&gt; &gt; resource can and cannot do (or what can be done to the resource)?  If\n&gt; &gt; there is a resource that provides a specific representation through a\n&gt; &gt; given URI, how do you find that URI?  It may be that the URI you\n&gt; &gt; currently have for the resource returns HTML, and it may be that the\nhtml\n&gt; &gt; document contains &lt;link&gt; elements to point to this same information.\n&gt; &gt; However, this requires a client to be capable of parsing html and &lt;link&gt;\n&gt; &gt; elements.  But it may be that the URI you have returns another\n&gt; &gt; content-type.  It would then be necessary for the client to understand\n&gt; &gt; that format to get the same information (assuming the information was\n&gt; &gt; available).  SUDS, on the other hand, provides clients to query this\n&gt; &gt; information at the resource level instead of the representation level.\n&gt; &gt;\n&gt; &gt; As for a scenario, let&#39;s see...  Suppose you have a blog entry at\n&gt; &gt; http://www.example.com/sudsIsTheFuture.  Now, here are the things you\n&gt; &gt; could do with SUDS for that URI:\n&gt; &gt;\n&gt; &gt; 1) Discover which content-types are available (which your client also\n&gt; &gt; understands).\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; content-type=&quot;text/xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;application/atom+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; content-type=&quot;application/pdf&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; returns\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/sudsIsTheFuture.rss2&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; content-type=&quot;text/xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/sudsIsTheFuture.atom&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;application/atom+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;/&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; 2) Discover where you can POST comments to.\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;POST&quot; conent-type=&quot;application/atom+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; returns\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/sudsIsTheFuture.comments&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;POST&quot; conent-type=&quot;application/atom+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Another scenario...  suppose robots.txt files and p3p were given a mime\n&gt; &gt; type (or do they already have one?).  In this case, a query like the\n&gt; &gt; following could be submitted to http://www.example.com/:\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;text/robots&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;application/p3p+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;image/jpeg&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; which would return\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/policies/robots.txt&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;text/robots&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/policies/p3p.xml&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;application/p3p+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/logo.jpg&quot;&gt;\n&gt; &gt;         &lt;returns http-method=&quot;GET&quot; conent-type=&quot;image/jpeg&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; Yet another scenario...  suppose you have a URI\n&gt; &gt; (http://www.example.com/groups/rest-discuss) to a &quot;container&quot; resource.\n&gt; &gt; You need to know what the client can and cannot do with/to the resource\n&gt; &gt; via the given URI.  So, you POST the following:\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;&quot;&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;DELETE&quot;/&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;GET&quot;/&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;POST&quot;/&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;PUT&quot;/&gt;\n&gt; &gt;         &lt;accepts content-encoding=&quot;gzip&quot;/&gt;\n&gt; &gt;         &lt;accepts conent-type=&quot;text/html&quot;/&gt;\n&gt; &gt;         &lt;accepts conent-type=&quot;text/xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; returns\n&gt; &gt;\n&gt; &gt; &lt;suds&gt;\n&gt; &gt;     &lt;sud uri=&quot;http://www.example.com/groups/rest-discuss&quot;&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;GET&quot;/&gt;\n&gt; &gt;         &lt;accepts http-method=&quot;POST&quot; conent-type=&quot;text/xml&quot;/&gt;\n&gt; &gt;         &lt;accepts content-encoding=&quot;gzip&quot;/&gt;\n&gt; &gt;         &lt;returns content-type=&quot;text/xml&quot;/&gt;\n&gt; &gt;         &lt;returns content-type=&quot;application/pdf&quot;\ncontent-encoding=&quot;gzip&quot;/&gt;\n&gt; &gt;         &lt;returns content-type=&quot;text/xhtml+xml&quot;/&gt;\n&gt; &gt;     &lt;/sud&gt;\n&gt; &gt; &lt;/suds&gt;\n&gt; &gt;\n&gt; &gt; (hmm... maybe this should be about interfaces, not URIs... Resource\n&gt; &gt; Interface Discovery Syntax (RIDS)?)\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I have another example using an extended SUDS document, which is\nconnected\n&gt; &gt; to my RNA stuff, but I&#39;m not ready to show that one yet...\n&gt; &gt;\n&gt; &gt; So, how does any of this work for you?\n&gt; &gt;\n&gt; &gt; ---\n&gt; &gt; Seairth Jacobs\n&gt; &gt; seairth@...\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; To unsubscribe from this group, send an email to:\n&gt; &gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Your use of Yahoo! Groups is subject to\nhttp://docs.yahoo.com/info/terms/\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n&gt;\n\n\n"}}