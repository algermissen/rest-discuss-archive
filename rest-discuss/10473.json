{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":340209025,"authorName":"Martin Grotzke","from":"Martin Grotzke &lt;mg@...&gt;","profile":"martin.grotzke","replyTo":"SENDER","senderId":"iJztvtPnCEj2YkYxbSDN4wb4qNFIuz_zt8EcfbIuRgfjE5H8il3poMgll0GvKDd_y3u96fdg6Jh4fT2G7YFI68-4Og","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How to design validation of e.g. username,\temail-address, password","postDate":"1205394991","msgId":10473,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyMDUzOTQ5OTEuMzIxMi4zMi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4udGxkPg==","inReplyToHeader":"PGU1YzZlY2FiMDgwMzEyMTUxNXU5OTIxYmNia2RhNWFiZTY2ZjhkZDljNjVAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDEyMDUzNTI5MTQuMzE3NS4xNjguY2FtZWxAbG9jYWxob3N0LmxvY2FsZG9tYWluLnRsZD4JIDxlNWM2ZWNhYjA4MDMxMjE1MTV1OTkyMWJjYmtkYTVhYmU2NmY4ZGQ5YzY1QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10470,"nextInTopic":10476,"prevInTime":10472,"nextInTime":10474,"topicId":10467,"numMessagesInTopic":11,"msgSnippet":"Hi, ... But we do not want that users can use the email-address of another user as username. Additionally we validate email-addresses slightly different than","rawEmail":"Return-Path: &lt;mg@...&gt;\r\nX-Sender: mg@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86943 invoked from network); 13 Mar 2008 07:56:34 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m55.grp.scd.yahoo.com with QMQP; 13 Mar 2008 07:56:34 -0000\r\nX-Received: from unknown (HELO mail.baseserver.net) (80.190.253.131)\n  by mta18.grp.scd.yahoo.com with SMTP; 13 Mar 2008 07:56:34 -0000\r\nX-Received: from [192.168.2.228] (unknown [195.177.48.115])\n\tby mail.baseserver.net (Postfix) with ESMTP id 69A679B276\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 13 Mar 2008 08:56:32 +0100 (CET)\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;e5c6ecab0803121515u9921bcbkda5abe66f8dd9c65@...&gt;\r\nReferences: &lt;1205352914.3175.168.camel@...&gt;\n\t &lt;e5c6ecab0803121515u9921bcbkda5abe66f8dd9c65@...&gt;\r\nContent-Type: multipart/signed; micalg=pgp-sha1; protocol=&quot;application/pgp-signature&quot;; boundary=&quot;=-M2QGv+UuJi0WAYJnMlc0&quot;\r\nDate: Thu, 13 Mar 2008 08:56:31 +0100\r\nMessage-Id: &lt;1205394991.3212.32.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.12.3 (2.12.3-3.fc8) \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Martin Grotzke &lt;mg@...&gt;\r\nSubject: Re: [rest-discuss] How to design validation of e.g. username,\n\temail-address, password\r\nX-Yahoo-Group-Post: member; u=340209025; y=RBztOd9yic5LhPhZ3IDolUeotopNsRv8Ht24yiRHO5cgE_KMJT0ymLs\r\nX-Yahoo-Profile: martin.grotzke\r\n\r\n\r\n--=-M2QGv+UuJi0WAYJnMlc0\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi,\n\n&gt; Why not just HEAD /user/{username}? If the status code is 404 then i=\r\nt\n&gt; is free for use. If username isn&#39;t the UID for users in the URI you\n&gt; c=\r\nan use queries for that: HEAD /user?username=3D{username}. For email\n&gt; some=\r\nthing similar can be used. You can have both username and email as\n&gt; UID to=\r\n find a single user with HEAD /user/{uid}, if both identifiers\n&gt; give an un=\r\nique user, there&#39;s no reason to choose just one.\nBut we do not want that us=\r\ners can use the email-address of another user\nas username. Additionally we =\r\nvalidate email-addresses slightly different\nthan usernames. So it&#39;s importa=\r\nnt what&#39;s validated - username of\nemail-address.\nBut just for the username =\r\nHEAD sounds well. So 404 would be the status\ncode if the username is still =\r\navailable, 409 if the username is already\ntaken, and 400 if the username is=\r\n not well formed?\n\n&gt; &gt;  Or would it be better to have it at s.th.\n&gt; &gt;  like=\r\n /username/validation/{username}, /email/validation/{email}\n&gt; \n&gt; Unless use=\r\nrname and email are resources in your app, it makes more\n&gt; sense to go to t=\r\nhe top level resource (i.e. user) and query it.\nGiven that we have to disti=\r\nnguish between username and email, you would\nsuggest to have s.th. like /us=\r\ners/validation/email/{email}?\n\n&gt; &gt;  And what were possible response status =\r\ncodes? I&#39;d think this could\n&gt; &gt;  always be 200, with more details in the re=\r\nsponse body, as even a GET\n&gt; &gt;  with a username that is syntactically not c=\r\norrect would be a valid\n&gt; &gt;  request. Or should 200 be only returned if eve=\r\nrything is ok, and 400 if\n&gt; &gt;  the email address is not correct, and 409 if=\r\n the username is already\n&gt; &gt;  taken?\n&gt; \n&gt; 400 for syntax errors (e.g. inval=\r\nid characters in username/email)\n&gt; should be ok. 409 shouldn&#39;t be used in t=\r\nhis case, because the request\n&gt; completed without errors, a 409 should be i=\r\nssued only if the request\n&gt; could not be completed.\nI thought 409 would be =\r\ngood to indicate s.th. like &quot;usename already\ntaken&quot;. But this would occur i=\r\nn a PUT/POST request, not during a GET\nrequest, what HEAD is related to. Do=\r\nes this mean, that if I want to be\nable to return 409 to indicate a conflic=\r\nt, that I would have to use\nPUT/POST? How else would it be possible to dist=\r\ninguish between &quot;not well\nformed&quot; (400) and &quot;already taken&quot; (??) using resp=\r\nonse status codes?\n\n&gt; &gt;  I find it really hard to model such operations as =\r\nresources, just to\n&gt; &gt;  mention this :)\n&gt; \n&gt; Instead of thinking about the =\r\ninteraction (i.e. validating a username)\n&gt; try to focus on what resources a=\r\nre necessary to interact with. So we\n&gt; can quickly figure out that the user=\r\ns resource is a good way to find\n&gt; an user by username, so we ask for it an=\r\nd if there&#39;s none we know the\n&gt; username is available.\nI&#39;m trying hard, rea=\r\nlly! :) The username of course is an easy one. Using\nothers gets more compl=\r\nicated...\n\nThanx a lot,\ncheers,\nMartin\n\n\n\nOn Wed, 2008-03-12 at 19:15 -0300=\r\n, Daniel Yokomizo wrote:\n&gt; On Wed, Mar 12, 2008 at 5:15 PM, Martin Grotzke =\r\n&lt;mg@...&gt; wrote:\n&gt; &gt; Hi,\n&gt; &gt;\n&gt; &gt;  in the context of the registration of=\r\n a new user we want to allow\n&gt; &gt;  external applications to immediatly show =\r\nthe user, if the selected\n&gt; &gt;  username, email-address or password is valid=\r\n (in terms for syntax or\n&gt; &gt;  availability). So the question is how to prov=\r\nide this functionality in a\n&gt; &gt;  RESTful way...\n&gt; &gt;\n&gt; &gt;  Would one create a=\r\n resource &quot;validation&quot; and use the kind\n&gt; &gt;  (username/email/password) as s=\r\nubresource, so that there were URLs\n&gt; &gt;  like /validation/username/{usernam=\r\ne}, /validation/email/{email} etc.\n&gt; &gt;  that would allow GET?\n&gt; \n&gt; Why not =\r\njust HEAD /user/{username}? If the status code is 404 then it\n&gt; is free for=\r\n use. If username isn&#39;t the UID for users in the URI you\n&gt; can use queries =\r\nfor that: HEAD /user?username=3D{username}. For email\n&gt; something similar c=\r\nan be used. You can have both username and email as\n&gt; UID to find a single =\r\nuser with HEAD /user/{uid}, if both identifiers\n&gt; give an unique user, ther=\r\ne&#39;s no reason to choose just one.\n&gt; \n&gt; &gt;  Or would it be better to have it =\r\nat s.th.\n&gt; &gt;  like /username/validation/{username}, /email/validation/{emai=\r\nl}\n&gt; \n&gt; Unless username and email are resources in your app, it makes more\n=\r\n&gt; sense to go to the top level resource (i.e. user) and query it.\n&gt; \n&gt; &gt;  A=\r\nnd what were possible response status codes? I&#39;d think this could\n&gt; &gt;  alwa=\r\nys be 200, with more details in the response body, as even a GET\n&gt; &gt;  with =\r\na username that is syntactically not correct would be a valid\n&gt; &gt;  request.=\r\n Or should 200 be only returned if everything is ok, and 400 if\n&gt; &gt;  the em=\r\nail address is not correct, and 409 if the username is already\n&gt; &gt;  taken?\n=\r\n&gt; \n&gt; 400 for syntax errors (e.g. invalid characters in username/email)\n&gt; sh=\r\nould be ok. 409 shouldn&#39;t be used in this case, because the request\n&gt; compl=\r\neted without errors, a 409 should be issued only if the request\n&gt; could not=\r\n be completed.\n&gt; \n&gt; &gt;  I find it really hard to model such operations as re=\r\nsources, just to\n&gt; &gt;  mention this :)\n&gt; \n&gt; Instead of thinking about the in=\r\nteraction (i.e. validating a username)\n&gt; try to focus on what resources are=\r\n necessary to interact with. So we\n&gt; can quickly figure out that the users =\r\nresource is a good way to find\n&gt; an user by username, so we ask for it and =\r\nif there&#39;s none we know the\n&gt; username is available.\n&gt; \n&gt; &gt;  I&#39;m very thank=\r\nful for any suggestions/advice!\n&gt; &gt;\n&gt; &gt;  Cheers,\n&gt; &gt;  Martin\n&gt; \n&gt; Best rega=\r\nrds,\n&gt; Daniel Yokomizo.\n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt; \n-- \nMar=\r\ntin Grotzke\nBernstorffstr. 17, 22767 Hamburg\nTel.      +49 (0) 40.98239888\n=\r\nMobil     +49 (0) 170.9365656\nE-Mail    mg@...\nOnline    http://www.ja=\r\nvakaffee.de\n\r\n--=-M2QGv+UuJi0WAYJnMlc0\r\nContent-Type: application/pgp-signature; name=signature.asc\r\nContent-Description: This is a digitally signed message part\r\n\r\n[ Attachment content not displayed ]\r\n--=-M2QGv+UuJi0WAYJnMlc0--\r\n\n"}}