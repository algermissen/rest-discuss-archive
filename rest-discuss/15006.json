{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"O41CLG7CtWqKKTKRWHCQsubwvHD53vrxjnjvahyvvGWrNQNFek-weO0NbMYnYpoX3z6dIq-d63P8RQqsWBdrEvnbx67d1-o","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website","postDate":"1267841052","msgId":15006,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMzA1MTgwNHA3MTdkZTUwZXg2NjdlYmM4ZDZjYmFmMDhiQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDk2NTYwMS40MDQxLnFtQHdlYjU1OTA4Lm1haWwucmUzLnlhaG9vLmNvbT4=","referencesHeader":"PGY4YjM5YWNlMTAwMzA1MDg0OHc1MTYzNjU2OHlkMjIxMzg5YWRkN2NkZTRkQG1haWwuZ21haWwuY29tPgkgPDk2NTYwMS40MDQxLnFtQHdlYjU1OTA4Lm1haWwucmUzLnlhaG9vLmNvbT4="},"prevInTopic":15005,"nextInTopic":15007,"prevInTime":15005,"nextInTime":15007,"topicId":14978,"numMessagesInTopic":41,"msgSnippet":"It sounds like you are asking about how to handle authorization (not authentication). If so, that s not really a REST issue, but an implementation detail for","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 61371 invoked from network); 6 Mar 2010 02:04:14 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 6 Mar 2010 02:04:14 -0000\r\nX-Received: from unknown (HELO mail-fx0-f210.google.com) (209.85.220.210)\n  by mta1.grp.sp2.yahoo.com with SMTP; 6 Mar 2010 02:04:13 -0000\r\nX-Received: by fxm2 with SMTP id 2so5486764fxm.36\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 05 Mar 2010 18:04:13 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.75.156 with SMTP id y28mr1957598faj.30.1267841052899; Fri, \n\t05 Mar 2010 18:04:12 -0800 (PST)\r\nIn-Reply-To: &lt;965601.4041.qm@...&gt;\r\nReferences: &lt;f8b39ace1003050848w51636568yd221389add7cde4d@...&gt;\n\t &lt;965601.4041.qm@...&gt;\r\nDate: Fri, 5 Mar 2010 21:04:12 -0500\r\nX-Google-Sender-Auth: 32e80e98f6929237\r\nMessage-ID: &lt;b548df651003051804p717de50ex667ebc8d6cbaf08b@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0015174beca696f8c10481183f47\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website\r\nX-Yahoo-Group-Post: member; u=69164307; y=LdToT9orpF3FUMZxzRcGYlMPdTAhoo3_xahDnNqS3JOl\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--0015174beca696f8c10481183f47\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nIt sounds like you are asking about how to handle authorization (not\nauthentication). If so, that&#39;s not really a REST issue, but an\nimplementation detail for HTTP apps.\n\nIn my HTTP applications I refer to a list of URIs (or regexp-based URI\ntemplates) plus a list of HTTP methods for each authenticated user; storage\nand representation can vary to taste. Consider a user-centered\nrepresentation of an application&#39;s access control list for a user:\n\n&lt;user id=&quot;mamund&quot;&gt;\n  &lt;acl href=&quot;/(.*)&quot; methods=&quot;GET,HEAD,OPTIONS&quot; /&gt; &lt;!-- default access --&gt;\n  &lt;acl href=&quot;/admin/(.*)&quot; methods=&quot;!&quot;/&gt; &lt;!-- deny all methods --&gt;\n  &lt;acl href=&quot;/mamund/(.*)&quot; methods=&quot;*&quot;/&gt; &lt;!-- allow all methods --&gt;\n&lt;/user&gt;\n\nAll that is left is to compare the incoming request&#39;s METHOD + URI against\nthe above list. Any access failures result in a &quot;403 Forbidden&quot; response.\n\nAnother possible (non HTTP-centric) public ontology for access control can\nbe found here:\nhttp://dig.csail.mit.edu/2009/Papers/ISWC/rdf-access-control/paper.pdf\n\nmca\nhttp://amundsen.com/blog/\n\n\n\nOn Fri, Mar 5, 2010 at 20:09, Kevin Duffey &lt;andjarnic@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hey guys,\n&gt;\n&gt; I do realize you authenticate every request, you taught me that Craig. ;)\n&gt; What I meant is, do I ALSO look at the /orders/&lt;id&gt; (id value) and compare\n&gt; it to the auth header id to make sure it too is valid? If for example Craig\n&gt; and I can both authenticate to the same service, and I give Craig my\n&gt; /orders/&lt;id&gt; (with my auth ID), when Craig tries to make the call to say,\n&gt; delete the order, his authentication will pass the Auth check to be able to\n&gt; access the method/API call, but as far as I can tell, the service would also\n&gt; need to check the /orders/&lt;id&gt; to make sure it matches the authenticated\n&gt; users id.\n&gt;\n&gt; In order for Craig to delete my order, I would have to have given him some\n&gt; special token the service looks at and knows that he is allowed to delete my\n&gt; order on my behalf. I think OAuth calls this a 3-legged auth. So, my\n&gt; question, to reiterate is HOW does a service, without a 3-legged auth, know\n&gt; if Craig or I am actually deleting my order without checking that the ID\n&gt; passed in the URI matches the ID of the user making the call? OR, more to\n&gt; the point of my question, should EVERY API call not only authenticate a\n&gt; user, but validate that for a given call if an ID is passed in the URI that\n&gt; it matches the authenticated user&#39;s id. I think I repeated myself. :D\n&gt;\n&gt;\n&gt; --- On *Fri, 3/5/10, Craig McClanahan &lt;craigmcc@...&gt;* wrote:\n&gt;\n&gt;\n&gt; From: Craig McClanahan &lt;craigmcc@...&gt;\n&gt; Subject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven\n&gt; website\n&gt; To: &quot;Mark Wonsil&quot; &lt;wonsil@...&gt;\n&gt; Cc: &quot;Kevin Duffey&quot; &lt;andjarnic@...&gt;, rest-discuss@yahoogroups.com,\n&gt; &quot;Jorn Wildt&quot; &lt;jw@...&gt;\n&gt; Date: Friday, March 5, 2010, 8:48 AM\n&gt;\n&gt;\n&gt;\n&gt; On Fri, Mar 5, 2010 at 7:28 AM, Mark Wonsil &lt;mark_wonsil@ yahoo.com&lt;http://mc/compose?to=mark_wonsil@...&gt;\n&gt; &gt; wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Hi Keven,\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; &gt; Generally, you wouldn&#39;t hand me your URIs that you got back, but a\n&gt;&gt; man-in-the-middle could easily\n&gt;&gt; &gt; catch those URIs (assuming that person defeated SSL when going over\n&gt;&gt; SSL). So how is such a scenario\n&gt;&gt; &gt; handled.. or should be handled by REST apis?\n&gt;&gt;\n&gt;&gt; The method I see most often is to use the security in HTTP and a token\n&gt;&gt; system like OAuth. For example:\n&gt;&gt;\n&gt;&gt; http://developers. sun.com/identity /reference/ techart/restwebs\n&gt;&gt; ervices.html&lt;http://developers.sun.com/identity/reference/techart/restwebservices.html&gt;\n&gt;&gt;\n&gt;&gt; Mark W.\n&gt;&gt;\n&gt;&gt;\n&gt; For whichever security scheme you choose, yes you must check authN/authZ on\n&gt; every single request (no different from any webapp in this respect, although\n&gt; webapps typically do authN implicitly based on the inclusion of a valid\n&gt; session id token).  That way, if you give me a URI to one of your orders and\n&gt; I try to access it with my credentials, I&#39;ll get either a 403 (forbidden) or\n&gt; a 404 (if the server doesn&#39;t even want me to know that the URI happens to\n&gt; reference a valid order, just not one of mine).\n&gt;\n&gt; Craig\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n\r\n--0015174beca696f8c10481183f47\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nIt sounds like you are asking about how to handle authorization (not authen=\r\ntication). If so, that&#39;s not really a REST issue, but an implementation=\r\n detail for HTTP apps.=A0&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In my HTTP applications I refe=\r\nr to a list of URIs (or regexp-based URI templates) plus a list of HTTP met=\r\nhods for each authenticated user; storage and representation can vary to ta=\r\nste. Consider a user-centered representation of an application&#39;s access=\r\n control list for a user:&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;user id=3D&quot;mam=\r\nund&quot;&gt;&lt;/div&gt;&lt;div&gt;=A0=A0&lt;acl href=3D&quot;/(.*)&quot; methods=3D&q=\r\nuot;GET,HEAD,OPTIONS&quot; /&gt; &lt;!-- default access --&gt;&lt;/div&gt;&lt;div&gt;=\r\n=A0=A0&lt;acl href=3D&quot;/admin/(.*)&quot; methods=3D&quot;!&quot;/&gt; &=\r\nlt;!-- deny all methods --&gt;&lt;/div&gt;\n&lt;div&gt;=A0=A0&lt;acl href=3D&quot;/mamun=\r\nd/(.*)&quot; methods=3D&quot;*&quot;/&gt; &lt;!-- allow all methods --&gt;&lt;=\r\n/div&gt;&lt;div&gt;&lt;/user&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;All that is left is to com=\r\npare the incoming request&#39;s METHOD + URI against the above list. Any ac=\r\ncess=A0failures result in a &quot;403 Forbidden&quot; response.&lt;/div&gt;\n&lt;div&gt;=\r\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Another possible (non HTTP-centric) public ontology for acce=\r\nss control can be found here:=A0&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;http://dig.csail.mit.=\r\nedu/2009/Papers/ISWC/rdf-access-control/paper.pdf&quot;&gt;http://dig.csail.mit.edu=\r\n/2009/Papers/ISWC/rdf-access-control/paper.pdf&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;div=\r\n&gt;mca&lt;br&gt;&lt;a href=3D&quot;http://amundsen.com/blog/&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;=\r\n&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Mar 5, 2010 at 20:09, K=\r\nevin Duffey &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:andjarnic@...&quot;&gt;an=\r\ndjarnic@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;=\r\n\n\n\n\n\n\n\n\n        \n\n\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\n&lt;table cellspacing=3D&quot;0&quot; cellpa=\r\ndding=3D&quot;0&quot; border=3D&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=3D&quot;top&quot; style=3D&quot;font:inheri=\r\nt&quot;&gt;Hey guys,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I do realize you authenticate every request=\r\n, you taught me that Craig. ;) What I meant is, do I ALSO look at the /orde=\r\nrs/&lt;id&gt; (id value) and compare it to the auth header id to make sure =\r\nit too is valid? If for example Craig and I can both authenticate to the sa=\r\nme service, and I give Craig my /orders/&lt;id&gt; (with my auth ID), when =\r\nCraig tries to make the call to say, delete the order, his authentication w=\r\nill pass the Auth check to be able to access the method/API call, but as fa=\r\nr as I can tell, the service would also need to check the /orders/&lt;id&gt=\r\n; to make sure it matches the authenticated users id.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;In order for Craig to delete my order, I would have to have given him =\r\nsome special token the service looks at and knows that he is allowed to del=\r\nete my order on my behalf. I think OAuth calls this\n a 3-legged auth. So, m=\r\ny question, to reiterate is HOW does a service, without a 3-legged auth, kn=\r\now if Craig or I am actually deleting my order without checking that the ID=\r\n passed in the URI matches the ID of the user making the call? OR, more to =\r\nthe point of my question, should EVERY API call not only authenticate a use=\r\nr, but validate that for a given call if an ID is passed in the URI that it=\r\n matches the authenticated user&#39;s id. I think I repeated myself. :D&lt;/di=\r\nv&gt;\n&lt;div&gt;&lt;br&gt;&lt;br&gt;--- On &lt;b&gt;Fri, 3/5/10, Craig McClanahan &lt;i&gt;&lt;&lt;a href=3D&quot;m=\r\nailto:craigmcc@...&quot; target=3D&quot;_blank&quot;&gt;craigmcc@...&lt;/a&gt;&gt;&lt;/i&gt;&lt;=\r\n/b&gt; wrote:&lt;br&gt;&lt;blockquote style=3D&quot;border-left:2px solid rgb(16, 16, 255);m=\r\nargin-left:5px;padding-left:5px&quot;&gt;\n&lt;br&gt;From: Craig McClanahan &lt;&lt;a href=3D=\r\n&quot;mailto:craigmcc@...&quot; target=3D&quot;_blank&quot;&gt;craigmcc@...&lt;/a&gt;&gt;&lt;br=\r\n&gt;Subject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven webs=\r\nite&lt;br&gt;To: &quot;Mark Wonsil&quot; &lt;&lt;a href=3D&quot;mailto:wonsil@...&quot;=\r\n target=3D&quot;_blank&quot;&gt;wonsil@...&lt;/a&gt;&gt;&lt;br&gt;\nCc: &quot;Kevin Duffey&quo=\r\nt; &lt;&lt;a href=3D&quot;mailto:andjarnic@...&quot; target=3D&quot;_blank&quot;&gt;andjarnic@y=\r\nahoo.com&lt;/a&gt;&gt;, &lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot; target=3D=\r\n&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;, &quot;Jorn Wildt&quot;\n &lt;&lt;a h=\r\nref=3D&quot;mailto:jw@...&quot; target=3D&quot;_blank&quot;&gt;jw@...&lt;/a&gt;&=\r\ngt;&lt;br&gt;Date: Friday, March 5, 2010, 8:48 AM&lt;br&gt;&lt;br&gt;&lt;div&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n&lt;sp=\r\nan&gt;=A0&lt;/span&gt;\n\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div class=3D&quot;gmail_q=\r\nuote&quot;&gt;&lt;div class=3D&quot;im&quot;&gt;On Fri, Mar 5, 2010 at 7:28 AM, Mark Wonsil &lt;span d=\r\nir=3D&quot;ltr&quot;&gt;&lt;&lt;a rel=3D&quot;nofollow&quot; href=3D&quot;http://mc/compose?to=3Dmark_wons=\r\nil@...&quot; target=3D&quot;_blank&quot;&gt;mark_wonsil@ yahoo.com&lt;/a&gt;&gt;&lt;/span&gt; wrote=\r\n:&lt;br&gt;\n&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:1px soli=\r\nd rgb(204, 204, 204)&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:rgb(255=\r\n, 255, 255)&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;&lt;div class=3D&quot;im&quot;=\r\n&gt;\n      \n      \n      &lt;p&gt;Hi Keven,&lt;/p&gt;&lt;div&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; Generally, you wo=\r\nuldn&#39;t hand me your URIs that you got back, but a man-in-the-middle cou=\r\nld easily &lt;br&gt;\n&gt; catch those URIs (assuming that person defeated SSL whe=\r\nn going over SSL). So how is such a scenario &lt;br&gt;\n&gt; handled.. or should =\r\nbe handled by REST apis?&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nThe method I see most often is to u=\r\nse the security in HTTP and a token system like OAuth. For example:&lt;br&gt;\n&lt;br=\r\n&gt;\n&lt;/div&gt;&lt;a rel=3D&quot;nofollow&quot; href=3D&quot;http://developers.sun.com/identity/refe=\r\nrence/techart/restwebservices.html&quot; target=3D&quot;_blank&quot;&gt;http://developers. su=\r\nn.com/identity /reference/ techart/restwebs ervices.html&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nMark =\r\nW.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;div&gt;&lt;br&gt;=\r\nFor whichever security scheme you choose, yes you must check authN/authZ on=\r\n every single request (no different from any webapp in this respect, althou=\r\ngh webapps typically do authN implicitly based on the inclusion of a valid =\r\nsession id token).=A0 That way, if you give me a URI to one of your orders =\r\nand I try to access it with my credentials, I&#39;ll get either a 403 (forb=\r\nidden) or a 404 (if the server doesn&#39;t even want me to know that the UR=\r\nI happens to reference a valid order, just not one of mine).&lt;br&gt;\n\n&lt;br&gt;Craig=\r\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;\n\n\n    &lt;/div&gt;\n     \n\n\n\n \n\n\n\n\n\n&lt;/div&gt;&lt;/blockquote&gt;=\r\n&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;\n\n      \n\n\n\n\n\n&lt;br&gt;\n\n    \n    \n&lt;br&gt;\n\n\n\n\n=\r\n&lt;div width=3D&quot;1&quot; style=3D&quot;color:white;clear:both&quot;&gt;&lt;/div&gt;\n\n\n\n&lt;/div&gt;&lt;/div&gt;&lt;/b=\r\nlockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--0015174beca696f8c10481183f47--\r\n\n"}}