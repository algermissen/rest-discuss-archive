{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":490985547,"authorName":"Daniel Roussel","from":"&quot;Daniel Roussel&quot; &lt;daniel@...&gt;","profile":"manichelo","replyTo":"SENDER","senderId":"9vyf75j0XXMN47JLkIgqgyNth_gKmHsultJaVfNRwG8lZKzdp96DnBzRNEmZsi6Ep2xq733wVEZQztHuGXH5gNPe21w-g6rHr1sKA8w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REST and HATEOAS in the context of native applications?","postDate":"1311873791","msgId":17621,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGowczV0ditkNWpvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPg=="},"prevInTopic":17620,"nextInTopic":17622,"prevInTime":17620,"nextInTime":17622,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"Sometimes, we can go on and develop a client solution using web apps, but sometime there is no way out and we need to do a native application. I read some","rawEmail":"Return-Path: &lt;daniel@...&gt;\r\nX-Sender: daniel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 33695 invoked from network); 28 Jul 2011 17:23:12 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m16.grp.re1.yahoo.com with QMQP; 28 Jul 2011 17:23:12 -0000\r\nX-Received: from unknown (HELO n37b.bullet.mail.sp1.yahoo.com) (66.163.168.151)\n  by mta2.grp.re1.yahoo.com with SMTP; 28 Jul 2011 17:23:11 -0000\r\nX-Received: from [69.147.65.150] by n37.bullet.mail.sp1.yahoo.com with NNFMP; 28 Jul 2011 17:23:11 -0000\r\nX-Received: from [98.137.34.155] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 28 Jul 2011 17:23:11 -0000\r\nDate: Thu, 28 Jul 2011 17:23:11 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;j0s5tv+d5jo@...&gt;\r\nIn-Reply-To: &lt;j0pb7d+iadi@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Daniel Roussel&quot; &lt;daniel@...&gt;\r\nSubject: Re: REST and HATEOAS in the context of native applications?\r\nX-Yahoo-Group-Post: member; u=490985547; y=QEcF9lhiR4e7h2ExzOb40IdveVUJ6ULQesDuPZtbIRnV0NYy\r\nX-Yahoo-Profile: manichelo\r\n\r\nSometimes, we can go on and develop a client solution using web apps, but s=\r\nometime there is no way out and we need to do a native application.\n\nI read=\r\n some parts of Mr. Fielding thesis again and many of his comments on his bl=\r\nog and I think what wasn&#39;t clear (still not totally I fear) to me was what =\r\nknowledge should be exposed &quot;a priori&quot; and what should be learned &quot;a poster=\r\niori&quot;.  My initial understanding was that &quot;almost&quot; nothing was to be known =\r\na priori and that did not make any sense because without some semantic know=\r\nledge of the received media, a client application can do nothing useful.  W=\r\nhat good is it to get a bunch of URI if I have no idea what they are!\n\nNow,=\r\n my understanding of it is that what MUST be known a priori are the Media T=\r\nypes which will be exchanged along with the possible relationship.  A parti=\r\ncular client would obviously be coded to support this/those media types.  J=\r\nust as a browser understands a resource of type text/html, image/jpeg, etc,=\r\n my app would understand resources of type application/rent-a-room+xml for =\r\nexample.  \n\nThis is the semantic knowledge needed to perform useful work.  =\r\nThis is how a client knows what relation types to look for to navigate.  Th=\r\nis is how it can know what to present to the screen and how.  So in essence=\r\n, I believe that my theoretical &quot;Room Rental&quot; application could be compared=\r\n to a web browser which handles &quot;Rent-a-Rooms&quot; documents instead of HTML do=\r\ncuments.  And what this means, is that this &quot;Rent-a-Room&quot; browser could nav=\r\nigate any server that is serving resources of the type &quot;application/rent-a-=\r\nroom+xml&quot; and on the flip side, a server could provide room rental services=\r\n to anyone who understand this content type without anyone knowing any impl=\r\nementation details.\n\nAm I far off or am I starting to get it a bit more?\n\n-=\r\n-- In rest-discuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...&gt; w=\r\nrote:\n&gt;\n&gt; \n&gt; On Jul 27, 2011, at 5:35 PM, Daniel Roussel wrote:\n&gt; \n&gt; &gt; Hi,\n=\r\n&gt; &gt; \n&gt; &gt; I&#39;ve been reading a lot about how to do &quot;proper&quot; REST this week an=\r\nd the more I read, the more I&#39;m lost, especially the HATEOAS part I fear.\n&gt;=\r\n \n&gt; Don&#39;t worry - it was the same for me. It takes your whole mind to shift=\r\n. Mostly, dumping off OO-brain damage :-)\n&gt; \n&gt; &gt; \n&gt; &gt; First, to give some c=\r\nontext, the company I work for develops mobile applications for clients. Mo=\r\nst of the time, they want to get an iPhone native application, an Android a=\r\npplication and a traditional Web based Application to cover the other mobil=\r\ne phones out there.\n&gt; &gt; \n&gt; &gt; The way we are currently doing things is the g=\r\nood old (bad?) RPC over HTTP way. We define a bunch of URI which are coded =\r\ninside the different apps, we exchange data as JSON, etc.  This week, tryin=\r\ng to do things in a better way, I&#39;ve begin a more serious study of REST and=\r\n how to do it properly.\n&gt; &gt; \n&gt; &gt; What I really can&#39;t wrap my head around is=\r\n how, technically, have HATEOAS in a native application? I mean, when build=\r\ning a native application, I have tables to display lists, buttons to do som=\r\ne things, etc. My understanding is that all those should be displayed based=\r\n on the data (hypermedia) received from the server. Is that right?\n&gt; \n&gt; Yes=\r\n, just like a browser works.\n&gt; \n&gt; \n&gt; &gt; \n&gt; &gt; A concrete example would be a h=\r\notel room rental service. The person would open the application and have fi=\r\nelds to enter the from/to dates. It would then tap a &quot;Get Available Rooms&quot;.=\r\n The app would call the server and get back a list of rooms along with pric=\r\nes and other details. From there the person could select one room and rent =\r\nit. \n&gt; &gt; \n&gt; &gt; The RPC way of coding this is obvious to me but I have no ide=\r\na how I&#39;d do that in a proper REST way! \n&gt; \n&gt; Well, if the end user is a hu=\r\nman - use HTML.\n&gt; \n&gt; &gt; What bugs me is that every way I look at it, the cli=\r\nent application would still be tightly coupled to the service. I understand=\r\n how I would only need to GET the http://rent-a-room.com URI hardcoded and =\r\nthen in the response I would have the http://rent-a-room.com/available-room=\r\ns URI given. But... My application would expect each &quot;call&quot; to return some =\r\npre-defined data and &quot;rel&quot;, those can&#39;t appear out of the blue?!\n&gt; \n&gt; Right=\r\n - your client side code should only *react* on stuff it finds, not *expect=\r\n* it. If there is a human user directly involved, let the human do the &#39;exp=\r\necting&#39; (much like you expect certain stuff from Amazon.com even if your br=\r\nowser does not).\n&gt; \n&gt; If the client side code needs to do more stuff withou=\r\nt user involvement than a browser (e.g. browser fetches stylesheets, JS, im=\r\nages) you need to roll you own media type and build your app based on the h=\r\nypermedia controls you define in that media type.\n&gt; \n&gt; &gt; \n&gt; &gt; I guess what =\r\nI&#39;m trying to say is that both the business process and the data exchanged =\r\nmust be known to my client application at the moment of coding it, and thos=\r\ne can&#39;t change without breaking existing clients. But reading about REST, e=\r\nvery is talking about loose coupling and not breaking clients... I just don=\r\n&#39;t see it.\n&gt; &gt; \n&gt; &gt; What am I missing?\n&gt; &gt; \n&gt; \n&gt; Nothing, really. You are s=\r\npot on. The thing is that in networked systems the client can never be sure=\r\n that the server does not change. Instead, the client must be coded to take=\r\n the least for granted and make the most out of HTTP&#39;s error responses to f=\r\nail most gracefully.\n&gt; \n&gt; REST does not make the problem go away that is hi=\r\ndden by RPC-style approaches. REST simply makes the fact explicit that cont=\r\nrol over uncontrollable peers is an illusion. - and comes with a bunch of s=\r\nuggestions how to suffer the least from the effects of evolving peers.\n&gt; \n&gt;=\r\n Most of all REST changes the way you think about networked applications in=\r\n the first place.\n&gt; \n&gt; Jan\n&gt; \n&gt; \n&gt; &gt; Thanks a lot and sorry if it is a stup=\r\nid question!\n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n--- In rest-discuss@yahoogroups.com, &quot;Daniel Rous=\r\nsel&quot; &lt;daniel@...&gt; wrote:\n&gt;\n&gt; Hi,\n&gt; \n&gt; I&#39;ve been reading a lot about how to =\r\ndo &quot;proper&quot; REST this week and the more I read, the more I&#39;m lost, especial=\r\nly the HATEOAS part I fear.\n&gt; \n&gt; \n&gt; First, to give some context, the compan=\r\ny I work for develops mobile applications for clients.  Most of the time, t=\r\nhey want to get an iPhone native application, an Android application and a =\r\ntraditional Web based Application to cover the other mobile phones out ther=\r\ne.\n&gt; \n&gt; The way we are currently doing things is the good old (bad?) RPC ov=\r\ner HTTP way.  We define a bunch of URI which are coded inside the different=\r\n apps, we exchange data as JSON, etc.  This week, trying to do things in a =\r\nbetter way, I&#39;ve begin a more serious study of REST and how to do it proper=\r\nly.\n&gt; \n&gt; What I really can&#39;t wrap my head around is how, technically, have =\r\nHATEOAS in a native application?  I mean, when building a native applicatio=\r\nn, I have tables to display lists, buttons to do some things, etc.  My unde=\r\nrstanding is that all those should be displayed based on the data (hypermed=\r\nia) received from the server.  Is that right?\n&gt; \n&gt; A concrete example would=\r\n be a hotel room rental service.  The person would open the application and=\r\n have fields to enter the from/to dates.  It would then tap a &quot;Get Availabl=\r\ne Rooms&quot;.  The app would call the server and get back a list of rooms along=\r\n with prices and other details.  From there the person could select one roo=\r\nm and rent it.  \n&gt; \n&gt; The RPC way of coding this is obvious to me but I hav=\r\ne no idea how I&#39;d do that in a proper REST way!  What bugs me is that every=\r\n way I look at it, the client application would still be tightly coupled to=\r\n the service.  I understand how I would only need to GET the http://rent-a-=\r\nroom.com URI hardcoded and then in the response I would have the http://ren=\r\nt-a-room.com/available-rooms URI given. But...  My application would expect=\r\n each &quot;call&quot; to return some pre-defined data and &quot;rel&quot;, those can&#39;t appear =\r\nout of the blue?!  \n&gt; \n&gt; I guess what I&#39;m trying to say is that both the bu=\r\nsiness process and the data exchanged must be known to my client applicatio=\r\nn at the moment of coding it, and those can&#39;t change without breaking exist=\r\ning clients.  But reading about REST, every is talking about loose coupling=\r\n and not breaking clients... I just don&#39;t see it.\n&gt; \n&gt; What am I missing?\n&gt;=\r\n \n&gt; Thanks a lot and sorry if it is a stupid question!\n&gt;\n\n\n\n"}}