{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":465410965,"authorName":"Nathan","from":"Nathan &lt;nathan@...&gt;","profile":"nathanrixham","replyTo":"SENDER","senderId":"Y4aVfPZnACvgqqXSIkPbEli0OP0qvq0wqRah0HbM6fDUUVeLhzMLirX1qvYBL-7rUT_VVK3_5gC_Wa_Z5zr4oA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Mapping Inheritance Hierarchies to URIs","postDate":"1284655272","msgId":16617,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDOTI0OEE4LjYwNTA3MDVAd2VicjMub3JnPg==","inReplyToHeader":"PGk2dGdrdittZGI4QGVHcm91cHMuY29tPg==","referencesHeader":"PGk2dGdrdittZGI4QGVHcm91cHMuY29tPg=="},"prevInTopic":16616,"nextInTopic":16618,"prevInTime":16616,"nextInTime":16618,"topicId":16616,"numMessagesInTopic":7,"msgSnippet":"... IMHO, the domain inheritance (schema) and the names (URIs) for each thing (Animal) are completely orthogonal. The canonical URIs you suggest (one for each","rawEmail":"Return-Path: &lt;nathan@...&gt;\r\nX-Sender: nathan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 15430 invoked from network); 16 Sep 2010 16:41:45 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 16 Sep 2010 16:41:45 -0000\r\nX-Received: from unknown (HELO p3plsmtpa01-10.prod.phx3.secureserver.net) (72.167.82.90)\n  by mta3.grp.sp2.yahoo.com with SMTP; 16 Sep 2010 16:41:45 -0000\r\nX-Received: (qmail 883 invoked from network); 16 Sep 2010 16:41:44 -0000\r\nX-Received: from unknown (86.134.5.136)\n  by p3plsmtpa01-10.prod.phx3.secureserver.net (72.167.82.90) with ESMTP; 16 Sep 2010 16:41:44 -0000\r\nMessage-ID: &lt;4C9248A8.6050705@...&gt;\r\nDate: Thu, 16 Sep 2010 17:41:12 +0100\r\nOrganization: webr3\r\nUser-Agent: Thunderbird 2.0.0.24 (Windows/20100228)\r\nMIME-Version: 1.0\r\nTo: bryan_w_taylor &lt;bryan_w_taylor@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;i6tgkv+mdb8@...&gt;\r\nIn-Reply-To: &lt;i6tgkv+mdb8@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nathan &lt;nathan@...&gt;\r\nReply-To: nathan@...\r\nSubject: Re: [rest-discuss] Mapping Inheritance Hierarchies to URIs\r\nX-Yahoo-Group-Post: member; u=465410965; y=aPWwxQDGWcftGi8cfUdP5f4Xa8UUVhymaLJU6_UBsXYebzEANIXk\r\nX-Yahoo-Profile: nathanrixham\r\n\r\nbryan_w_taylor wrote:\n&gt; I&#39;m trying to help my company develop standard idioms for identifying resources so that service implementation teams don&#39;t have to rehash the same arguments every time. One issue that seems to be giving us grief is how to map an inheritance hierarchy.\n&gt; \n&gt; Suppose I am a zoo or vetrinary clinic and I am modelling resources for animals. My object and XML representations involve a hierarchy of specializations:\n&gt;  Animal\n&gt;   |- Mammal\n&gt;      |- Dog\n&gt;      |- Cat\n&gt;   |- Reptile\n&gt;      |- Snake\n&gt;      |- Lizard\n&gt; \n&gt; Anyway, suppose I store information about individual animals in my system and I want to present operations on them in a RESTful way.\n&gt; \n&gt; My thinking is that I should give them a canonical representation like:\n&gt; http://animalsRus.com/animals/123\n&gt; \n&gt; I should **NOT** additionally create aliased URIs like:\n&gt; http://animalsRus.com/dogs/123\n&gt; for several reasons. I may have to create the animal before I know it is a dog, or I may have to correct a data entry error. \n&gt; \n&gt; I am hesitant to put the inheritance chain in the the URI like\n&gt; http://animalsRus.com/animals/mammals/dogs/123\n&gt; because refactoring of the class hierarchy shouldn&#39;t create tension between it and the URI structure. I view the class hierarchy as an implementation detail, but it does refer to concepts that are meaningful in the business domain.\n&gt; \n&gt; I would generally search for any animial like this:\n&gt; http://animalsRus.com/animals?owner=Joe\n&gt; \n&gt; But I might allow searching just for dogs like so:\n&gt; http://animalsRus.com/dogs?owner=Joe\n&gt; \n&gt; Does this seem reasonable? What approaches have others taken to domain nouns that are organized into an inheritance tree?\n\nIMHO, the domain inheritance (schema) and the names (URIs) for each \nthing (Animal) are completely orthogonal. The canonical URIs you suggest \n(one for each animal) appears to make sense and I agree that the aliased \nURIs are unneeded.\n\nAs for the searching side of things, all I&#39;ll add in to the equation is, \nwhy not the following?\n   http://animalsRus.com/animals?owner=Joe&type=dog\n\nQuite sure somebody will reply with a full on REST answer soon,\n\nRegards,\n\nNathan\n\n\n\n"}}