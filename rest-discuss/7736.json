{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":237604743,"authorName":"Bill de hOra","from":"Bill de hOra &lt;bill@...&gt;","profile":"bdehora","replyTo":"SENDER","senderId":"z0admDr1iBhJp9iDc9DNPVmbf5SXUDn4-JK6RewofXAwQxQ1O9BRefPC0HaaXC-cT8ciLD8BNCynhF4vWYhUQLwR4AjO","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] POST at most once","postDate":"1169911731","msgId":7736,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1QkI2RkIzLjIwODAxMDFAZGVob3JhLm5ldD4=","inReplyToHeader":"PDExNjk4NzU5NzUuNTM2My40Mi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","referencesHeader":"PDExNjkyOTc0NjUuNTEzMC41NS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8NDVCMjc0NDIuMzAzMDAwM0BkZWhvcmEubmV0PiA8MTE2OTg3NTk3NS41MzYzLjQyLmNhbWVsQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4="},"prevInTopic":7735,"nextInTopic":7737,"prevInTime":7735,"nextInTime":7737,"topicId":7646,"numMessagesInTopic":40,"msgSnippet":"... Perhaps. You could guarantee delivery by having the client restart the exchange if the server indicates a timeout (or generally ending the exchange). It s","rawEmail":"Return-Path: &lt;bill@...&gt;\r\nX-Sender: bill@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 55148 invoked from network); 27 Jan 2007 15:29:01 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m38a.grp.scd.yahoo.com with QMQP; 27 Jan 2007 15:29:01 -0000\r\nReceived: from unknown (HELO chilco.textdrive.com) (207.7.108.242)\n  by mta2.grp.scd.yahoo.com with SMTP; 27 Jan 2007 15:29:01 -0000\r\nReceived: from [192.168.2.180] (unknown [83.70.225.120])\n\tby chilco.textdrive.com (Postfix) with ESMTP id A5CEFDCD76\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 27 Jan 2007 15:28:54 +0000 (UTC)\r\nMessage-ID: &lt;45BB6FB3.2080101@...&gt;\r\nDate: Sat, 27 Jan 2007 15:28:51 +0000\r\nUser-Agent: Thunderbird 1.5.0.9 (X11/20070103)\r\nMIME-Version: 1.0\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;1169297465.5130.55.camel@...&gt;\t &lt;45B27442.3030003@...&gt; &lt;1169875975.5363.42.camel@...&gt;\r\nIn-Reply-To: &lt;1169875975.5363.42.camel@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: Bill de hOra &lt;bill@...&gt;\r\nSubject: Re: [rest-discuss] POST at most once\r\nX-Yahoo-Group-Post: member; u=237604743; y=39w4d5AOQm7IGxybLYY_tvZF7a1Ax-uSScDc0TPx3ALXhQ\r\nX-Yahoo-Profile: bdehora\r\n\r\nBenjamin Carlyle wrote:\n&gt; \n&gt; On HTTPLR:\n&gt; * This seems fairly similar to the POST null proposal. In fact, step one\n&gt; of the upload protocol appears to be a null POST with step two being the\n&gt; PUT. I&#39;m not sure about the explicit client DELETE of the channel, and\n&gt; thus I&#39;m not sure about the need for the channel concept at all. A\n&gt; server must be free to time out the new resource in case of premature\n&gt; client failure, so you can&#39;t guarantee delivery unless the request\n&gt; sequence completes before this timeout. \n\nPerhaps. You could guarantee delivery by having the client restart the \nexchange if the server indicates a timeout (or generally ending the \nexchange). It&#39;s another confused client scenario. IME, the operational \nscenario are exchanges that are started but a client will never finish \n(phantoms), which is why I documented them.\n\n\nIn light of this I prefer the\n&gt; channel concept to simply be replaced by the concept of a created\n&gt; resource.\n\nMaybe. Where you&#39;re worried about the reality of timeouts, I&#39;m worried \nabout the reality of HTTPLR acting as a gateway for MOMs.\n\n\n&gt; * I think there is some danger that the message could be read to be a\n&gt; whole HTTP request or SOAP request or other request that needs to be\n&gt; delivered. That interpretation doesn&#39;t smell right to me, and I think\n&gt; that any suggestion of message transfer should be explicitly avoided in\n&gt; favour of state transfer.\n\nAgain, maybe. Did you see any testable/operational consequences?\n\n\n&gt; * The GET appears OK, though clearly the server must also be free to\n&gt; purge old messages once its buffers start to fill up. This is a matter\n&gt; of summarisation that also affects pub/sub mechanisms.\n&gt; \n&gt; I think my suggestion remains intact and I&#39;ll look to implementing it\n&gt; where at most once delivery is required in my architecture. \n\nFair enough; at most isn&#39;t the same guaranteed. I had thought once about \nclients and serves being able to negitiate the SLA, but profile \nnegotiation in internet protocols never seems to work out just so.\n\ncheers\nBill\n\n"}}