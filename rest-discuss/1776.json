{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"kc_Sd0dlGivb4ouc0Vwj-ocoMmMvlaVhkqdYfZaYUaL2XMjXfqBma8V8_c2TZyBhEItcrIoGEKilBN3iFVqw4W0t2EcA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP/Linda, and versioning/locking rant","postDate":"1026249337","msgId":1776,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI5NTBCQ0E5LjNDRUUlamJvbmVAZGVlcGZpbGUuY29tPg==","inReplyToHeader":"PDNEMkIyOUYxLjcwOTAxMDlAYnJpdm8ubmV0Pg=="},"prevInTopic":1775,"nextInTopic":1778,"prevInTime":1775,"nextInTime":1777,"topicId":1733,"numMessagesInTopic":74,"msgSnippet":"... Not really that Java specific --- I ve run into this issue every time I ve had to wrestle with object persistence in the face of schema evolution.  The old","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 9 Jul 2002 21:15:38 -0000\r\nReceived: (qmail 18735 invoked from network); 9 Jul 2002 21:15:37 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m3.grp.scd.yahoo.com with QMQP; 9 Jul 2002 21:15:37 -0000\r\nReceived: from unknown (HELO blanco.deepfile.com) (24.242.137.237)\n  by mta1.grp.scd.yahoo.com with SMTP; 9 Jul 2002 21:15:37 -0000\r\nReceived: from [207.8.92.100] (cust-92-100.customer.jump.net [207.8.92.100] (may be forged))\n\t(authenticated)\n\tby blanco.deepfile.com (8.11.6/8.11.6) with ESMTP id g69LE6x04491;\n\tTue, 9 Jul 2002 16:14:06 -0500\r\nUser-Agent: Microsoft-Entourage/10.0.0.1331\r\nDate: Tue, 09 Jul 2002 16:15:37 -0500\r\nSubject: Re: [rest-discuss] HTTP/Linda, and versioning/locking rant\r\nTo: Seth Ladd &lt;seth@...&gt;, &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-ID: &lt;B950BCA9.3CEE%jbone@...&gt;\r\nIn-Reply-To: &lt;3D2B29F1.7090109@...&gt;\r\nMime-version: 1.0\r\nContent-type: text/plain; charset=&quot;US-ASCII&quot;\r\nContent-transfer-encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOn 7/9/02 1:22 PM, &quot;Seth Ladd&quot; &lt;seth@...&gt; wrote:\n\n&gt; \n&gt; We&#39;ve wrestled with this problem for a long time.  The tuplespace (in\n&gt; this case, javaspaces) is very core to our system.  As our application\n&gt; evolves over time, we&#39;ve found that our data evolves over time.  We&#39;ve\n&gt; had to keep good track of our Java classes so that we don&#39;t create\n&gt; incompatible serialization issues.  Granted, this is very Java specific.\n\nNot really that Java specific --- I&#39;ve run into this issue every time I&#39;ve\nhad to wrestle with object persistence in the face of schema evolution.  The\nold object-relational tools (i.e., Persistence - anybody remember that?) had\nthis problem in spades, Python&#39;s pickle has this problem to a certain lesser\nextent, etc.  It&#39;s really troublesome in statically-typed languages with\nwhat I think of as &quot;rigid&quot; object models, i.e. C++.  Languages where objects\nare really just slot containers / dictionaries / etc. --- e.g. Python ---\nthis is often less troublesome.\n\n&gt; \n&gt; What I&#39;d love for our application to do is use XML + RDF as our\n&gt; information serialization.  We can then become a lot more flexible with\n&gt; interpreting and parsing the documents (especially when using RDF).\n\nWrt XML tuplespaces, sounds like a job for Ruple. :-)\n\nWrt schema drift and RDF, one of the most significant problems with RDF is\nthat facts can reference facts outside of a local factset / administrative\ndomain, which can evolve in an uncoordinated and therefore destructive\nfashion.  Until the various parties involve *deeply* address these and\nrelated problems, there will be no Semantic Web other than very local\nfactsets. :-/  The good news is that, assuming immutability of (certain)\nresources i.e., true idempotency of GET over time, the problem is rather\ntrivial...\n\nBTW, I&#39;m a big fan of predicate calculus as a data model, but I&#39;m not sure\nwhat RDF buys you over arbitrary n-ary tuples when you&#39;re talking about\ngenerative communication...  Perhaps you could talk about that a bit?\n\n&gt; \n&gt; But data definitions are mutable in the real world, and in some cases\n&gt; (java serialization) can cause big headaches.\n\nMake sure instances of some schema embed a reference to an immutable copy of\ntheir schema.  It also helps to have named, declarative descriptions of\ntransformations between schema versions that can be referenced...  In XML,\nfor instance, this could perhaps be an XSLT that transforms XML schemas.\n\nJb\n\n\n"}}