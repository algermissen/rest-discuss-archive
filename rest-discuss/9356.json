{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"45yJbAJ9IZPdLQ1Nt8Ov8gZ9E_-Hz-CvozR1lsOgNrdqX_uXt8yY-q9eATOAdfifoRuXicwm8WTZxS7ltnkuKN2vWhDUHPv-uCCSE5gRuQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re:To PUT things right [was: The Ambiguous Semantics of PUT: Complete     o","postDate":"1183758996","msgId":9356,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc1NTczMjE4NDc2MjY5MDMxMTgzNzU4OTk2QG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9348,"nextInTopic":9427,"prevInTime":9355,"nextInTime":9357,"topicId":9304,"numMessagesInTopic":8,"msgSnippet":"... Sorry, but your response has it exactly backwards, and I don t believe you even read my post, as you are reversing the meaning of my words in order to make","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 97822 invoked from network); 6 Jul 2007 21:56:43 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m53.grp.scd.yahoo.com with QMQP; 6 Jul 2007 21:56:43 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta13.grp.scd.yahoo.com with SMTP; 6 Jul 2007 21:56:43 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nReceived: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 49719790D0\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri,  6 Jul 2007 21:56:38 +0000 (UTC)\r\nTo: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W5573218476269031183758996@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Fri, 06 Jul 2007 21:56:36 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re:To PUT things right [was: The Ambiguous Semantics of PUT: Complete \n    o\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;Wow! That&#39;s quite inventive reasoning, but I believe it is exactly backwards.\n&gt;\n\nSorry, but your response has it exactly backwards, and I don&#39;t believe \nyou even read my post, as you are reversing the meaning of my words in \norder to make your point.  REST defines an architectural style for \nbuilding distributed hypermedia applications which may use HTTP.  This \nplaces constraints on HTTP which are not written into RFC 2616.  Uniform \nInterface comes to mind -- where does RFC 2616 impose such a restriction?  \nIt doesn&#39;t, which is why I continually stress that HTTP is not REST.\n\n&gt;\n&gt;The passage you cite from the REST thesis tells me the exact opposite: the \n&gt;protocols for FTP, Gopher, and WAIS must be &quot;restricted to the semantics of \n&gt;[] REST&quot; -- not the other way around. So just because FTP&#39;s STOR method might  \n&gt;be (but does not have to be) mapped to PUT (thus giving PUT in this \n&gt;particular case replacement semantics), this doesn&#39;t imply that PUT must be \n&gt;restricted to replacement semantics in all cases.\n&gt;\n\nSo you&#39;re saying that FTP, Gopher and WAIS must be restricted to the \nsemantics of a REST connector in a RESTful app, but that app is free to \nredefine those semantics when HTTP is the protocol?  I think not.  That \npassage states that seamless back-compat with older protocols is \npossible, but only if the application&#39;s connectors implement a generic \ninterface.  Therefore, if the connector semantics in a given app \n(regardless of protocol choice) are _not_ seamlessly backwards-compatible \nwith FTP, Gopher and WAIS then the connector semantics don&#39;t meet the \n&quot;principle of generality&quot; (which is all about re-use) so critical to \nREST.\n\nThe semantics of a REST connector may include &quot;retrieve&quot;, &quot;replace&quot;, \n&quot;remove&quot;, &quot;append&quot; and &quot;info&quot;.  This does not mean they can&#39;t include \n&quot;merge&quot;, but it does mean you&#39;ll need a different method (HTTP PATCH \ncomes to mind) to implement &quot;merge&quot; because HTTP PUT is already clearly \ntaken to mean &quot;replace&quot; in a REST application.  If you bork PUT into \n&quot;merge&quot; semantics *and* PUT is the only method with &quot;replace&quot; semantics \n(Is there any dispute about that?) then you have assigned two different \nmeanings to HTTP PUT.  While this may be allowed under RFC 2616 (I \nstill don&#39;t believe that was the intent), this clearly breaks REST&#39;s \nUniform Interface constraint.\n\nThe problem, if you define PUT as &quot;merge&quot;, becomes one of how does a \nclient or intermediary infer that the request does not mean the same \nthing as STOR, except by making unrestricted assumptions about the \nimplementation of the PUT interaction?  This is not a function of media \ntype, this is a function of the REST network API, i.e. connector.\n\n&gt;\n&gt;In other words, just because for some applications of HTTP the PUT method \n&gt;is described as having replacement semantics, this provides no evidence that \n&gt;RFC 2616 itself always restricts PUT to such semantics.\n&gt;\n\nWhere have I ever made the claim that REST is defined by RFC 2616?  This \nis exactly the opposite of the point I repeatedly try to make, which is \nthat REST places constraints on the implementation of HTTP which are not \npart of HTTP in any by-the-letters interpretation of RFC 2616.  POST \ntunneling of PUT request using a made-up &quot;x-no-really&quot; extension \nheader is perfectly legit under RFC 2616, because nowhere in RFC 2616 is \nthe &quot;universal interface constraint&quot; written.\n\n&gt;\n&gt;By your argument, the mapping of POST to FTP&#39;s APPE is evidence that \n&gt;RFC 2616 intends POST to have ONLY &quot;append semantics,&quot; which is clearly a \n&gt;wrong argument.\n&gt;\n\nThis is by your blatant misrepresentation of my argument, or a misreading \nof RFC 2616, there is nothing in HTTP which &quot;clearly&quot; states that POST \nmeans anything _but_ annotate or append.  Roy has clearly stated, in this \ngroup, that POST means annotate / append in terms of REST.  What I assert, \nis that the Uniform Interface constraint in REST, when applied to HTTP and \nFTP as described in the dissertation, clearly requires a direct mapping \nbetween STOR and PUT because that &quot;socket&quot; on the network API (REST \nconnector) means &quot;replace&quot;.  The principle of generality also requires the \nother mappings I indicate.  The REST connector has a &quot;socket&quot; with \n&quot;append&quot; semantics, the most-appropriate method from any protocol used in \nthe application must &quot;plug in&quot; to the universal interface:  APPE or POST.\n\n-Eric\n\n\n\n\n"}}