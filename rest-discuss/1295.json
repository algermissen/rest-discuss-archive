{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"XrofuzAu1qbSXBYXoq9Vcq401F9nJC-KkzzBq0vRKlmFdBoUQdVcoM9HLtm0IuWx9tesf0PuSbsix1xK33Vzljlh-_Kse1Ov-NCqBnYcTQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST Tutorial","postDate":"1021871003","msgId":1295,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNTc2YzZvZ2hCZVByYk5oUXAwMDAwMWVmOUBob3RtYWlsLmNvbT4=","referencesHeader":"PE9GMkIyNzkyNDQuMUEzRTZBMjUtT044NTI1NkJCRi4wMDE1NzBDOC04NTI1NkJCRi4wMDE3QjUyNkByYWxlaWdoLmlibS5jb20+"},"prevInTopic":1294,"nextInTopic":1296,"prevInTime":1294,"nextInTime":1296,"topicId":1272,"numMessagesInTopic":21,"msgSnippet":"... From: Sam Ruby  ... I would like to see these two in counterpoint also. Comparisons of other systems to the facets of REST can help","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 20 May 2002 05:00:00 -0000\r\nReceived: (qmail 60930 invoked from network); 20 May 2002 05:00:00 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m10.grp.scd.yahoo.com with QMQP; 20 May 2002 05:00:00 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.192)\n  by mta3.grp.scd.yahoo.com with SMTP; 20 May 2002 05:00:00 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Sun, 19 May 2002 22:00:00 -0700\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;OF2B279244.1A3E6A25-ON85256BBF.001570C8-85256BBF.0017B526@...&gt;\r\nSubject: Re: [rest-discuss] REST Tutorial\r\nDate: Sun, 19 May 2002 22:03:23 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE576c6oghBePrbNhQp00001ef9@...&gt;\r\nX-OriginalArrivalTime: 20 May 2002 05:00:00.0479 (UTC) FILETIME=[31EEDEF0:01C1FFBB]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Sam Ruby&quot; &lt;rubys@...&gt;\n\n&gt;\n&gt; I am actually trying to tease out the distinction between REST and HTTP.\nI would like to see these two in counterpoint also. Comparisons of other\nsystems to the facets of REST can help illuminate - for example a comparison\nof RDBMS systems with aspects of REST and the reasons they differ. I&#39;d also\nlike to see a &#39;how to use REST with JMS&#39; - I belived that would foster\ndiscussion of the architectural issues separate from HTTP.\n\n&gt; I see people outraged when SOAP uses POST when it could have equally\nvalidly\n&gt; used GET.  Few of these people seem outraged when GET is used in a\n&gt; non-idempotent manner.\nProbably because 99% of the time it is used correctly, and all architectural\nand design discussions talk about using GET correctly - the 1% (or so) of\nabusers aren&#39;t considered restless heathens mainly because people do it out\nof ignorance or desparation and most understand the issues once they are\nexplained and fix it themselves. The protocol isn&#39;t broken, the servers\naren&#39;t broken - people are just used in a non-conformant way.\n\nPromoting at the design, implementation and cultural level a non-conformant\nuse is more of a catastrophe. Kind of like if I suggested a shortened\nend-tag syntax for soap to cut down on size - like &lt;/&gt; instead of\n&lt;/end-tag&gt;. I wouldn&#39;t have to get it in the spec, I&#39;d just check the code\ninto Apache code base and let people choose use it when they wanted better\nperformance. Nothing wrong with that is there? The programmers would like\nit... faster parsing, less memory...\n\n&gt; In many cases, this makes me wonder if the thing\n&gt; most people find appealing is actually the concept of a URI and not of the\n&gt; underlying architecture or even the validity of the usage of HTTP.\nThe URI basis is probably the single greatest strength of the Web. All else\ncould be trimmed and there would be value there - without the other aspects\nof REST it won&#39;t be as strong or as complete, but if you are constrained for\ntime or resources in coming up with an architecture it may be a viable\napproach.\nOr if you are implementing an isolated system, at least using the URI aspect\nof REST (and the Web) provides a lot of value.\n\nFor example, if you use JMS to implement an event notification system you\ncan easily pick a JMS property for the &#39;resource id&#39; that the message is\n&#39;about&#39;. Subscriptions can match against this header and do things.\nDistributed session caches can start listening and start purging their\ndata - a nice add-on benefit. But then you have to start saying more about\nthe message, like did the resource change or not. Then you get into\nop-codes, and how do you tell the cache which operations imply a read vs\nwrite vs delete from the point of view of the cache... and so on. You end up\nworking toward the features identified by REST - the underlying architecture\nof the Web, regardless of the validity of using HTTP.\n\n\n\n\n"}}