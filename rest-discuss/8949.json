{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"wpV29I4V1LmSBIprvhZ1G7JHqScvNOECxaj28laOwrtXu3PWtwZcPnWOBzSsvir-X-Zpx0mMLYtwvLRwCPGPO_GSwR4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful design questions","postDate":"1181644359","msgId":8949,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NkU3NjQ3LjQwODAzMDFAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PGY0aXFxZytncjVvQGVHcm91cHMuY29tPg==","referencesHeader":"PGY0aXFxZytncjVvQGVHcm91cHMuY29tPg=="},"prevInTopic":8945,"nextInTopic":8950,"prevInTime":8946,"nextInTime":8950,"topicId":8940,"numMessagesInTopic":6,"msgSnippet":"... And then it isn t cachable any more. Note that Cache-Control: no-cache doesn t mean something doesn t get cached, but that the cache is not used without","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 23146 invoked from network); 12 Jun 2007 10:34:26 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m44.grp.scd.yahoo.com with QMQP; 12 Jun 2007 10:34:26 -0000\r\nReceived: from unknown (HELO mail.arena1.com) (63.116.216.131)\n  by mta8.grp.scd.yahoo.com with SMTP; 12 Jun 2007 10:34:26 -0000\r\nReceived: from UnknownHost [83.70.80.115] by mail.arena1.com with SMTP;\n   Tue, 12 Jun 2007 06:32:37 -0400\r\nMessage-ID: &lt;466E7647.4080301@...&gt;\r\nDate: Tue, 12 Jun 2007 11:32:39 +0100\r\nUser-Agent: Thunderbird 2.0.0.0 (Windows/20070326)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;f4iqqg+gr5o@...&gt;\r\nIn-Reply-To: &lt;f4iqqg+gr5o@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [83.70.80.115]\r\nX-Declude-Spoolname: -157461856502.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.14 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [4] at 06:32:44 on 12 Jun 2007\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] RESTful design questions\r\nX-Yahoo-Group-Post: member; u=164939419; y=MPGOe1eg6vcK2KsD0WbEhb_DS59gtsSLIeSH4PZh01W5qVBW\r\nX-Yahoo-Profile: hack_poet\r\n\r\nBrad Schick wrote:\n&gt; 1. Let&#39;s say I have an obvious resource; user photos. And expose it\n&gt; like this:\n&gt; \n&gt; ../users/ID/photos\n&gt; \n&gt; When an request comes in, the identity of the requester is used to\n&gt; authorize access to only certain photos. It would be nice if the\n&gt; resulting representation could be cached and remain (relatively)\n&gt; secure. One approach would be to include a difficult to guess token in\n&gt; the URI with a short cache life. But where to put the token?\n\nAnd then it isn&#39;t cachable any more.\n\nNote that Cache-Control: no-cache doesn&#39;t mean something doesn&#39;t get \ncached, but that the cache is not used without checking the origin. \nAlternatively a max-age of 0 and a must-revalidate will also mean the \norigin server gets checked.\n\nHence you can insist upon your authentication headers being passed all \nthe way through.\n\nIf allowing copies on an intermediate server is not secure enough for \nyour needs then Cache-Control: private means only private caches will be \nused.\n\nFinally (not relevant to you, but fills out the caching vs. privacy \nspectrum) Cache-Control: no-store is what you want if security needs \nmean all caches must be mistrusted.\n\n&gt; A query string param seems natural, but some web accelerators &\n&gt; caches ignore URLs with query parameters (i.e. google web\n&gt; accelerator). I guess too often they have side effects (or expose\n&gt; private data). \n\nRead-ahead caches have no header information about links until after \nthey&#39;ve done a GET so they have to avoid such URIs to avoid \nmal-functioning sites where GET have side-effects.\n\nWeb caches only avoid caching reponses to such URIs as a default if \nthere are no relevant headers (Expires, Cache-control, etc) for the same \nreasons. If you have the headers there then the caching will happen.\n\nThe reason for avoiding the quesry string param is that you are creating \na bunch of different resources (one for each URI) that all do the same \njob. This needless increase in complexity has several negative side-effects.\n\n&gt; 2. Simpler question following the same example. What would be a\n&gt; RESTful way to add ratings to photos. Maybe just a PUT on something like:\n&gt; \n&gt; ../users/ID/photos/ID/ratings\n&gt; \n&gt; I wanted to avoid a deep URI hierarchy, but this seems to fit. Am I\n&gt; heading in the right direction?\n\n\nWhy avoid a deep heirarchy?\n\n From the REST point of view /users/ID/photos/ID/ratings and \nphotos?user=x&ratings=y and /daf/fsdw3ur082/dsf are all the same.\n\n From a wider point of view, the above seems fine to me, what&#39;s your \nconcern?\n\n\n"}}