{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"buQafn1lHwHYCGZ6uchHEOp3O6pYvPTj_27Sx0vw36uQfEJYWChuF8UZ2YUR6Jo5WQDM-UHaqjlj8YkByUnDbloA_bfDUeUZY-wYdQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"REST and the design of HTTP methods","postDate":"1104373710","msgId":4732,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdFQkNFRDNGLTVBMEEtMTFEOS1CM0FGLTAwMEQ5MzMyNEFENkBnYml2LmNvbT4=","inReplyToHeader":"PDExMDQzMzE2NzguMjM1NjMuMjMuY2FtZWxAcGhvZW5peD4=","referencesHeader":"PGNxcnJ0Mys4ZGxtQGVHcm91cHMuY29tPiA8MTEwNDI3NTkyMS4yMzU3OC4zMC5jYW1lbEBwaG9lbml4PiA8QzUxMDY4ODQtNTk0Mi0xMUQ5LUIzQUYtMDAwRDkzMzI0QUQ2QGdiaXYuY29tPiA8MTEwNDMzMTY3OC4yMzU2My4yMy5jYW1lbEBwaG9lbml4Pg=="},"prevInTopic":4729,"nextInTopic":4733,"prevInTime":4731,"nextInTime":4733,"topicId":4721,"numMessagesInTopic":25,"msgSnippet":"... Yes, it was certainly a mistake when the NCSA team introduced HTML forms processing via POST (which at the time meant the same as NNTP s post) without","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 70977 invoked from network); 30 Dec 2004 02:29:42 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m17.grp.scd.yahoo.com with QMQP; 30 Dec 2004 02:29:42 -0000\r\nReceived: from unknown (HELO picanmix.dev.day.com) (212.249.34.130)\n  by mta3.grp.scd.yahoo.com with SMTP; 30 Dec 2004 02:29:41 -0000\r\nReceived: from eu-mail.day.com (eu-mail.dev.day.com [10.0.0.30])\n        by picanmix.dev.day.com (DAY) with ESMTP id iBU2SYM25860;\n        Thu, 30 Dec 2004 03:28:35 +0100 (MET)\r\nReceived: from [10.2.8.58] ([10.2.8.58])\n          by eu-mail.day.com (Lotus Domino Release 5.0.8)\n          with ESMTP id 2004123003283383:22281 ;\n          Thu, 30 Dec 2004 03:28:33 +0100 \r\nIn-Reply-To: &lt;1104331678.23563.23.camel@phoenix&gt;\r\nReferences: &lt;cqrrt3+8dlm@...&gt; &lt;1104275921.23578.30.camel@phoenix&gt; &lt;C5106884-5942-11D9-B3AF-000D93324AD6@...&gt; &lt;1104331678.23563.23.camel@phoenix&gt;\r\nMime-Version: 1.0 (Apple Message framework v619)\r\nMessage-Id: &lt;7EBCED3F-5A0A-11D9-B3AF-000D93324AD6@...&gt;\r\nCc: rest discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Wed, 29 Dec 2004 18:28:30 -0800\r\nTo: jsled@...\r\nX-Mailer: Apple Mail (2.619)\r\nX-MIMETrack: Itemize by SMTP Server on eu-mail/Day(Release 5.0.8 |June 18, 2001) at 12/30/2004\n 03:28:34 AM,\n\tSerialize by Router on eu-mail/Day(Release 5.0.8 |June 18, 2001) at 12/30/2004\n 03:28:36 AM,\n\tSerialize complete at 12/30/2004 03:28:36 AM\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nX-eGroups-Remote-IP: 212.249.34.130\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: REST and the design of HTTP methods\r\nX-Yahoo-Group-Post: member; u=175757792\r\nX-Yahoo-Profile: roy_fielding\r\n\r\nOn Dec 29, 2004, at 6:47 AM, Josh Sled wrote:\n&gt; As per HTTP, POST has two meanings ... &quot;submit data-block for\n&gt; data-handling&quot; as well as &quot;resource {creation,annotation,extension}&quot;.\n&gt; These represent very different designs; I still think it&#39;s critical to\n&gt; distinguish the two.  But, yes, they&#39;re &quot;levels of HTTP&quot;, not &quot;levels \n&gt; of\n&gt; REST&quot;.\n\nYes, it was certainly a mistake when the NCSA team introduced HTML\nforms processing via POST (which at the time meant the same as NNTP&#39;s \npost)\nwithout introducing a distinctive method for &quot;process this&quot;.  However, \nwe\nshould also understand why it did not seem important at the time, and\nalso why it &quot;just doesn&#39;t matter&quot; to REST how many meanings are embodied\nin HTTP&#39;s POST.\n\n                                    visible   identifiable\n   method     safe    idempotent   semantics    resource     cacheable\n            -----------------------------------------------------------\n    GET     |  X          X            X           X             X    |\n    HEAD    |  X          X            X           X             X    |\n    PUT     |             X            X           X                  |\n    POST(a) |                          /                              |\n    POST(p) |                                                         |\n    OPTIONS |  X          X            X                         O    |\n            -----------------------------------------------------------\n\nPOST(a), as &quot;append this&quot;, is unsafe, non-idempotent, non-cacheable,\noperates on an unknown resource, and has only minor visibility since\nthere is no way for an intermediary to anticipate the state of the\nresource after the append aside from &quot;some state was added&quot;.  POST(p),\nas &quot;process this&quot;, doesn&#39;t even have that minor visibility.  Thus, an\narchitectural style like REST can only improve the performance of a\nPOST-based architecture by finding ways to escape POST (e.g., 201).\n\nNote that POST, regardless of which meaning is being used, has none of\nthe characteristics that would make it useful for the architecture to\nknow exactly what is going on.  At most, we can obtain an identifiable\nresource if the response is 201 and Content-Location, but that is true\nof any extension method.  That is why it is more efficient in a true\nREST-based architecture for there to be a hundred different methods\nwith distinct (non-duplicating), universal semantics, than it is to\ninclude method semantics within the body of a POST.  Inspecting message\nbodies to determine message semantics will always be slower than\nplacing the method up front.\n\nI really should extend the table to include all of the methods that\nwebdav has added, just to show how disastrous it was to create PROP*\n(duplicating semantics) instead of linking to the set of properties\nas a separate resource. Maybe someone else has time to add that to the \nwiki.\n\n....Roy\n\n\n"}}