{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"cDmpWkJ1DY-rMVOidX9jZDH60LL2RdYkc5gPG2sTMuD_2vh7BL5bvX7zIKS-kI75ai3Bl9PLdCl5ZMXNj8qgF22pWM-G7dDqAQjGdmArri9dvJ3yQDs4QXcm","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: composition of REST services","postDate":"1255033777","msgId":13762,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhbGkzaCs5czNnQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRBQ0REQkIwLjIwNjAxMDFAYWNhZC5iZz4="},"prevInTopic":13761,"nextInTopic":13772,"prevInTime":13761,"nextInTime":13763,"topicId":13728,"numMessagesInTopic":26,"msgSnippet":"Hello Nina. Too much writing for me to read, so I will take on from this summary you presented. 1. Let s clearly differentiate Server from Resource from Data. ","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 81615 invoked from network); 8 Oct 2009 20:29:38 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 8 Oct 2009 20:29:38 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 20:29:38 -0000\r\nX-Received: from [69.147.65.171] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 08 Oct 2009 20:29:38 -0000\r\nX-Received: from [98.137.34.72] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 08 Oct 2009 20:29:37 -0000\r\nDate: Thu, 08 Oct 2009 20:29:37 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hali3h+9s3g@...&gt;\r\nIn-Reply-To: &lt;4ACDDBB0.2060101@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: composition of REST services\r\nX-Yahoo-Group-Post: member; u=124198377; y=w7vN7nyATKwXlqKev5dymVmlJYx90uXgZSFSCi4lCn9FZVMG\r\nX-Yahoo-Profile: willmarpo\r\n\r\nHello Nina.\nToo much writing for me to read, so I will take on from this su=\r\nmmary you presented.\n\n1. Let&#39;s clearly differentiate Server from Resource f=\r\nrom Data.\nServers, don&#39;t think on them on REST. Just know that they are the=\r\nre at implementation time.\nResources can be anything, live anywhere, identi=\r\nfied by an URI. Anything means a resources can be more things than just dat=\r\na. So, imagine your resource as being a process. That process may need a da=\r\ntabase, who cares. REST does not care about it. The only important thing is=\r\n that resource is accessible with a URI. That is, do not thing any data in =\r\nyour app needs to be a resource.\nFinally, the resource type you mention? No=\r\nt sure what do you mean by a resource that can read/write data. We don&#39;t ca=\r\nre, it is a resource somewhere. And do not think of resources living in one=\r\n server.\n\n2. Now, your app needs an entry point, and a client workflow. Tha=\r\nt means, you model your client interaction making it do what it needs to do=\r\n naturally. Please, do not make your client do thinks that are application =\r\nrelated. For instance, if I want a loan, I present the forms filled and wai=\r\nt. Do not make the client to fill the form, deliver it to the credit people=\r\n, make it go to managers for signing, and to the vault to get the money. Se=\r\ne what I mean?\n\nSo, anything that needs to be done, that the client does no=\r\nt need to know, may be done by internal guys. If your client asks resource =\r\nB (which is a magic troll that performs things producing data) and request =\r\nsomething with a form, and that ends up with a resource created, there is n=\r\no problem is B calls A (using whatever it needs) to generate the resource, =\r\nsimply because A knows how to create resources. Do not make B send back to =\r\nclient a complex URL so client requests its own resource creation, if the c=\r\nlient does not need to know that. \n\n3. Security. Following point 2, Client =\r\nauthenticates against B, and B against A. Client does not need to be authen=\r\nticated against A. \nNow, if needed, and client is not human, a two way SSL =\r\nmay be a good option. Already implemented everywhere.\n\n4. If both parties (=\r\nA and B) do not know each other, and the client does, then you can let the =\r\nclient drive the composition, using A and B alternatively, even sending URL=\r\ns from one to the other to complete the work.\nNow, if the client does not k=\r\nnow either, the someone needs to know. In this case, a services is placed i=\r\nn the middle. Client talks to that middle service asking for composed servi=\r\nces, and that middle service calls the other two to accomplish the request.=\r\n Simple.\n\nSummary:\nIf composition can be made at app level, do not mess wit=\r\nh the client.\nIf composition needs to be made from the client, either the c=\r\nlient knows and drives the composition, or a middle service does, abstracti=\r\nng that from the client (which is always the best option).\nSecurity may not=\r\n be concern, two way ssl being one option, or simple HTTP security the othe=\r\nr one.\nConsider chained security: from client to middle service, from that =\r\nservice to the other services.\n\nHope this helps.\n\nWilliam Martinez Pomares.=\r\n\n\n--- In rest-discuss@yahoogroups.com, Nina Jeliazkova &lt;nina@...&gt; wrote:\n&gt;\n=\r\n&gt; Hello Jim,\n&gt; \n&gt; Jim Webber wrote:\n&gt; &gt; Hello Nina,\n&gt; &gt;\n&gt; &gt;   \n&gt; &gt;&gt; All the=\r\nse seem to fall in the category where the client talks only  \n&gt; &gt;&gt; to a\n&gt; &gt;=\r\n&gt; single server, regardless of what complexity that server hides;  \n&gt; &gt;&gt; wh=\r\nile my\n&gt; &gt;&gt; original point was a client talking to multiple independent ser=\r\nvers,\n&gt; &gt;&gt; being able not only to retrieve data from multiple servers (as i=\r\nn\n&gt; &gt;&gt; mashups), but do some processing with the help of servers that offer=\r\n\n&gt; &gt;&gt; processing capabilities.\n&gt; &gt;&gt;     \n&gt; &gt;\n&gt; &gt; Using hypermedia, a servic=\r\ne can generate links which are understood by  \n&gt; &gt; client automata which do=\r\n not resolve to its own URI space. For example  \n&gt; &gt; (shameless book plug f=\r\nollows, sorry!), in our forthcoming book, Savas,  \n&gt; &gt; Ian, and I show how =\r\nwe could outsource the payment of coffee orders to  \n&gt; &gt; a third party usin=\r\ng a hypermedia-driven protocol.\n&gt; &gt;\n&gt; &gt; The automata client &quot;writes&quot; data t=\r\no at least two services in this use- \n&gt; &gt; case. Does that qualify as servic=\r\ne composition? If so I can elaborate,  \n&gt; &gt; if not I&#39;m stuck.\n&gt; &gt;   \n&gt; Yes,=\r\n please elaborate. What I&#39;m interested is how clients and REST\n&gt; services w=\r\nork in the following setting, rather than whether the correct\n&gt; name is ser=\r\nvice composition.\n&gt; \n&gt;     * Several REST services,exposing the (subsets of=\r\n the) same API\n&gt;     * There are two types of resources in our use case - o=\r\nne (A) that\n&gt;       can read/write data and others (B) that can only proces=\r\ns given\n&gt;       data in some magic way and generate more data on the fly; o=\r\nr try\n&gt;       to create a resource of type (A) somewhere else, not necessar=\r\ny on\n&gt;       the same server where (B) is running;\n&gt;     * Client(s) (and p=\r\nerhaps services) being aware of the other services\n&gt;     * Client(s) being =\r\nable to talk to multiple REST services\n&gt; \n&gt; \n&gt; Summarizing the discussion u=\r\np to this point:\n&gt; \n&gt;     * The clients/services can be made aware of exist=\r\nence of other REST\n&gt;       services by default configuration or some custom=\r\n solution for\n&gt;       registration of the services (e.g. REST UDDI ;)\n&gt;    =\r\n * We don&#39;t really care if magic resource (B) behaves in a RESTfull\n&gt;      =\r\n way or not when processing the request and generating data,\n&gt;       withou=\r\nt assigning an URI to it;\n&gt;     * OpenID (eventually) can be used for clien=\r\nt authentication,\n&gt;       provided the client is a browser.  If a client is=\r\n not a browser,\n&gt;       or if a service needs to be authenticated to talk t=\r\no another\n&gt;       service, it&#39;s an open question;\n&gt;     * Authorization of =\r\nusers, authenticated by OpenID for resource\n&gt;       access is an open quest=\r\nion, also in the case when one service\n&gt;       needs to talk to another one=\r\n, on behalf of the client.\n&gt; \n&gt; \n&gt; Best regards,\n&gt; Nina\n&gt; &gt; Jim\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;=\r\n ------------------------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt;=\r\n &gt;\n&gt;\n\n\n\n"}}