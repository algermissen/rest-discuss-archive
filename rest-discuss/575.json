{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"CdOpnWqtZlpR_BLxwVjAZeaxsVPlrLy3QQYDiC0dFZad0FYodp4yQGpkADuLxTjKFrRMCTd0bPrsWzh_MrsnR-xdYcjzYg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Etags","postDate":"1012601770","msgId":575,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNUIxM0FBLkM5OTcyMEQzQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDNUEyRjQ5LjdBQzZCNzQ1QGp1bXAubmV0PiA8M0M1QTQ1REIuQ0ZFMzdERkBwcmVzY29kLm5ldD4gPDNDNUFBRkU5LkRFQ0IwNzg2QGp1bXAubmV0PiA8M0M1QUYyOEIuMTY5MEI1QTRAcHJlc2NvZC5uZXQ+IDwzQzVCMDE4Qi44QTZGMTQ0N0BqdW1wLm5ldD4="},"prevInTopic":569,"nextInTopic":580,"prevInTime":574,"nextInTime":576,"topicId":561,"numMessagesInTopic":4,"msgSnippet":"... Be careful there...if this is true then we get back to treating PUT as PUSH CONTENT and POST as PUSH DELTA. ... Will this happen often enough to worry","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 1 Feb 2002 22:17:20 -0000\r\nReceived: (qmail 55833 invoked from network); 1 Feb 2002 22:17:20 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m4.grp.snv.yahoo.com with QMQP; 1 Feb 2002 22:17:20 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 1 Feb 2002 22:17:20 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g11MHGN10604\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 1 Feb 2002 14:17:16 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g11MHFe28075\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 1 Feb 2002 14:17:15 -0800\r\nMessage-ID: &lt;3C5B13AA.C99720D3@...&gt;\r\nDate: Fri, 01 Feb 2002 14:16:10 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Etags\r\nReferences: &lt;3C5A2F49.7AC6B745@...&gt; &lt;3C5A45DB.CFE37DF@...&gt; &lt;3C5AAFE9.DECB0786@...&gt; &lt;3C5AF28B.1690B5A4@...&gt; &lt;3C5B018B.8A6F1447@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt;...\n&gt; \n&gt; Consider that a subscriber is really in a sense a cache for the subscribed\n&gt; resource.  \n\nBe careful there...if this is true then we get back to treating PUT as\nPUSH CONTENT and POST as PUSH DELTA.\n\n&gt; ... \n&gt; Using such information would permit caches to avoid extraneous GET / refresh\n&gt; operations.  Consider:  notification to a list of subscribers is likely to take\n&gt; time.  A subscribed resource changes.  During the notification process but\n&gt; before a particular subscriber is notified, that subscriber does a GET and\n&gt; obtains the current representational state.  They then receive a notification\n&gt; that the state is changed, but in fact they have the current and correct state.\n\nWill this happen often enough to worry about? Why would the client do a\nGET before it is notified? Maybe just dumb luck. Maybe clairvoyance.\nNeither seem important enough to worry about.\n\n&gt; This is important for servers because it lightens the GET load when things\n&gt; change;\n\nBut maybe standard caching handles that. The client gets a notification\nof a change. It asks its local caching proxy for the document. The\ncaching proxy uses all of the standard HTTP voodoo to say whether its\nlocal copy is fresh &quot;enough&quot;.\n\nOn the other hand, the etag might be useful to let the client push\nthrough the proxy and really get the latest version if necessary. This\nis the more compelling use-case for me. The client says to its local\ncaching proxy: &quot;I just got this notification that version X of a\nresource is available. Please give me a version that is at least that\nrecent.&quot;\n\n&gt;...  it&#39;s important both for servers and traditional proxy caches as it can\n&gt; potentially significantly reduce the burden of keeping the cache fresh.  It&#39;s\n&gt; important to clients because, as mentioned, clients are conceptually nothing\n&gt; more than specialized caches;  the benefits to proxies apply as well to clients.\n\nI don&#39;t mind having optimizations as a SHOULD. They are best practices\nthat clients and intermediaries do not rely upon but may use to improve\nperformance. Arguably, all optimizations should be MAY or SHOULD. If you\nwant to write this up as an optimization SHOULD or MAY, I&#39;d buy it.\n\n Paul Prescod\n\n"}}