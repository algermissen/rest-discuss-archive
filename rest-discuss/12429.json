{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"&quot;Peter Williams&quot; &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"6NT9HWvOB7HEeIi30xYbMNo8NX9gP7jmUX9gHPnumNeryWGYG2GDyIN2UKvlYr_7TRpopecs1y8fErNKXKeu0QQ4LJPSgI1K0hN_jO4SW78","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HATEOAS: JSON-based examples?","postDate":"1239803338","msgId":12429,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdzNG9rYSs0Y2J0QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ5RTVBNTQwLjkwMzA2MDJAbXlrYW5qby5jby51az4="},"prevInTopic":12428,"nextInTopic":12430,"prevInTime":12428,"nextInTime":12430,"topicId":12399,"numMessagesInTopic":66,"msgSnippet":"... Application specific media types that change as the API is versioned are definitely the way to go.  For example,","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21989 invoked from network); 15 Apr 2009 13:49:06 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m7.grp.re1.yahoo.com with QMQP; 15 Apr 2009 13:49:06 -0000\r\nX-Received: from unknown (HELO n17c.bullet.sp1.yahoo.com) (69.147.64.126)\n  by mta2.grp.sp2.yahoo.com with SMTP; 15 Apr 2009 13:49:05 -0000\r\nX-Received: from [69.147.65.171] by n17.bullet.sp1.yahoo.com with NNFMP; 15 Apr 2009 13:48:59 -0000\r\nX-Received: from [98.137.34.35] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 15 Apr 2009 13:48:59 -0000\r\nDate: Wed, 15 Apr 2009 13:48:58 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;gs4oka+4cbt@...&gt;\r\nIn-Reply-To: &lt;49E5A540.9030602@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Peter Williams&quot; &lt;pezra@...&gt;\r\nSubject: Re: HATEOAS: JSON-based examples?\r\nX-Yahoo-Group-Post: member; u=304236879; y=0AHAdKJpRdZ-nUrTIRM88PwMdkMqsCpNer9Z7rZNqSD3BcHyCbnB8_2_sw\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\n--- In rest-discuss@yahoogroups.com, Mike Kelly &lt;mike@...&gt; wrote:\n&gt;\n&gt; Peter=\r\n Williams wrote:\n&gt; &gt; --- In rest-discuss@yahoogroups.com, Solomon Duskis &lt;s=\r\nduskis@&gt; wrote:\n&gt; &gt;   \n&gt; &gt;&gt; Why should a client or server care about explic=\r\nit versioning?  What does it\n&gt; &gt;&gt; buy you?  You say that &quot;representations a=\r\nre highly likely to have changed.&quot;\n&gt; &gt;&gt; Shouldn&#39;t a RESTful interaction inh=\r\nerently handle those changes gracefully?\n&gt; &gt;&gt;     \n&gt; &gt;\n&gt; &gt; REST does provid=\r\ne a rather graceful way to handle versioning.  By exposing the application =\r\nsemantics explicitly in the representations, the application semantics can =\r\nbe change just by changing the representations.  Of course, this has the po=\r\ntential to break clients if such changes are implemented unilaterally.\n&gt; &gt;\n=\r\n&gt; &gt; HTTP&#39;s content negotiations provides a powerful implementation of this =\r\napproach.  The client and server get to negotiate which of the available fl=\r\navor of representations, and there by application semantics, to use.  The s=\r\nerver can prevent breakage by supporting multiple flavors/versions of the r=\r\nepresentations simultaneously.\n&gt; &gt;   \n&gt; \n&gt; Would you do this with custom ve=\r\nrsioned media types, or with standard \n&gt; media types and an extra version h=\r\neader?\n&gt;\n\nApplication specific media types that change as the API is versio=\r\nned are definitely the way to go.  For example, &quot;application/vnd.mycompany.=\r\nfancyapp-v1+json&quot;.  \n\nSticking the version in a parameter is not acceptable=\r\n because parameters are not allowed to change the basic meaning of a media =\r\ntype.  I don&#39;t like the version header because it is non-standard, and ther=\r\nefore ignored by the content negotiation support that exists in both http c=\r\nlient and servers infrastructure.\n\nPeter\nhttp://barelyenough.org\n\n\n\n\n"}}