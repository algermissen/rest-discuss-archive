{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":154469508,"authorName":"Justin Sampson","from":"&quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;","profile":"justin_t_sampson","replyTo":"SENDER","senderId":"An1MvZChKbnYuoD1xVYLa07pMn9wu7HefABUyOF3tQZcW1YlRHObsa-XOATsFN1oKguCDJR5KUD8-6R-0WqbkGqiBh9BdKVK8J1UAC_KBiVvKl51mOjMTapn","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] REST Transaction Process","postDate":"1076613724","msgId":4175,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNCQjNGOTNDODBCOTA1NEQ4NTM2RDUxQTNENzEzMDEzMThDMTA4QG1haWwtMDEuc3Bva2Vzb2Z0d2FyZS5jb20+"},"prevInTopic":4173,"nextInTopic":4176,"prevInTime":4174,"nextInTime":4176,"topicId":4141,"numMessagesInTopic":67,"msgSnippet":"... Ooh, good catch. Yes, the state of a transaction really consists of the log of all queries and updates performed in the context of that transaction. ","rawEmail":"Return-Path: &lt;Justin.Sampson@...&gt;\r\nX-Sender: Justin.Sampson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 14747 invoked from network); 12 Feb 2004 19:22:21 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m17.grp.scd.yahoo.com with QMQP; 12 Feb 2004 19:22:21 -0000\r\nReceived: from unknown (HELO mail-01.spokesoftware.com) (209.213.222.38)\n  by mta6.grp.scd.yahoo.com with SMTP; 12 Feb 2004 19:22:21 -0000\r\nContent-Class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-MimeOLE: Produced By Microsoft Exchange V6.0.6470.0\r\nDate: Thu, 12 Feb 2004 11:22:04 -0800\r\nMessage-ID: &lt;3BB3F93C80B9054D8536D51A3D71301318C108@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] REST Transaction Process\r\nthread-index: AcPxgPa894o3Hf6LTJaVLs2+QB/AcQAGr4nw\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nX-eGroups-Remote-IP: 209.213.222.38\r\nFrom: &quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;\r\nSubject: RE: [rest-discuss] REST Transaction Process\r\nX-Yahoo-Group-Post: member; u=154469508\r\nX-Yahoo-Profile: justin_t_sampson\r\n\r\nS. Alexander Jacobson wrote:\n\n&gt; Yes. All HTTP requests within a transaction=\r\n have to be POSTed\n&gt; to transaction resource itself because otherwise you e=\r\nnd up\n&gt; with secret headers and pull resources out of URI space.\n&gt; Moreover=\r\n GETs are NOT idempotent in transaction space because\n&gt; they have the side =\r\neffect of making the transaction dependent\n&gt; on whether the GET resource ch=\r\nanged (Isolation).\n\nOoh, good catch. Yes, the state of a transaction really=\r\n consists\nof the log of all queries and updates performed in the context of=\r\n\nthat transaction.\n\nTherefore your following suggestion seems to me to be t=\r\nhe only\nvalid way to do it.\n\nThen XA-style distributed transactions would s=\r\nimply include the\nglobal transaction ID in the original POST to /transactio=\r\nns on\neach server that will be involved.\n\nBut a proper two-phase commit doe=\r\ns require locks between the\nprepare and the final commit, even if the rest =\r\nof the transaction\nwas performed optimistically.\n\nJustin\n\n&gt; The process sho=\r\nuld look something like this:\n&gt;\n&gt; C: POST /transactions\n&gt; C: &lt;transaction/&gt;=\r\n\n&gt;\n&gt; S: 201 CREATED\n&gt; S: Location: /transactions/123\n&gt;\n&gt; C: POST /transacti=\r\nons/123\n&gt; C: &lt;GET path=3D&quot;http://someURL&quot; reqID=3D&quot;abc123&quot;/&gt;\n&gt;\n&gt; S: 200 OK\n=\r\n&gt; S: ...[result of GET in transaction context]\n&gt;\n&gt; C: POST /transactions/12=\r\n3\n&gt; C: &lt;POST path=3D&quot;http://someURL2&quot; content-type=3D&quot;text/plain&quot;\nreqID=3D&quot;=\r\ndef456&quot;&gt;\n&gt; C: body of POST\n&gt; C: &lt;/POST&gt;\n&gt;\n&gt; S: 200 OK\n&gt; S: ...[result of PO=\r\nST]...\n&gt;\n&gt; C: POST /transactions/123\n&gt; C: PREPARE\n&gt;\n&gt; S: 200 OK\n&gt;\n&gt; C: POST=\r\n /transactions/123\n&gt; C: COMMIT\n&gt;\n&gt; S: 200 OK\n&gt;\n&gt; The transaction manager ca=\r\nn give an error if it can&#39;t guarantee\n&gt; ACID for a resource involved with t=\r\nhe transaction. There are no\n&gt; non-URI accesible resources. Note, I don&#39;t k=\r\nnow how you\n&gt; implement PREPARE over the internet as it requires servers to=\r\n\n&gt; allow long running locks, so perhaps you allow only COMMIT (and\n&gt; assume=\r\n optimistic concurrency).\n&gt;\n&gt; -Alex-\n\n"}}