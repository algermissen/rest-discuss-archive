{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"w-IZlRZNYMsXNBWp-c4eGNlc1Nt4yhyhw_YsOgxYWIqnZXLW4U2pdv5D6ACGi_KlXs8qABVqKiJZ7bVxctGLg7YNQZc-Tyk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281119548","msgId":16203,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluYnVFSGIxcndKQkQweUQyWFFRd3pubm05R1JTV1ZfdHhTWnpjZUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPg==","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPg=="},"prevInTopic":16202,"nextInTopic":16205,"prevInTime":16202,"nextInTime":16204,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":" ...  If this is about crafting media types and at which level to apply them, here s how I go about it: DESIGNING MEDIA-TYPES First, when crafting","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74960 invoked from network); 6 Aug 2010 18:33:30 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m6.grp.sp2.yahoo.com with QMQP; 6 Aug 2010 18:33:30 -0000\r\nX-Received: from unknown (HELO mail-fx0-f43.google.com) (209.85.161.43)\n  by mta2.grp.sp2.yahoo.com with SMTP; 6 Aug 2010 18:33:29 -0000\r\nX-Received: by fxm18 with SMTP id 18so5312822fxm.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Aug 2010 11:32:28 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.103.251.10 with SMTP id d10mr1166220mus.3.1281119548652; Fri, \n\t06 Aug 2010 11:32:28 -0700 (PDT)\r\nX-Received: by 10.102.87.23 with HTTP; Fri, 6 Aug 2010 11:32:28 -0700 (PDT)\r\nIn-Reply-To: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\r\nDate: Fri, 6 Aug 2010 14:32:28 -0400\r\nX-Google-Sender-Auth: rKX2wlOkYsm-a61cqG_2O0hCGM0\r\nMessage-ID: &lt;AANLkTinbuEHb1rwJBD0yD2XQQwznnm9GRSWV_txSZzce@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=69164307; y=M0k4RlE_2HEL_qYQCAJOOR5k5Y2uLB_T-LoLoFCpHU1E\r\nX-Yahoo-Profile: mamund\r\n\r\n&lt;snip&gt;\n&gt; The issue I am dealing with is this: What is the appropriate degre=\r\ne of specificity of the media type for lists of orders. Especially I am won=\r\ndering whether it is enough for the user agent to say\n&gt;\n&gt; =A0Accept: applic=\r\nation/atom+xml;type=3Dfeed\n&gt;\n&gt;\n&gt; or whether the Accept header should includ=\r\ne the user agent capabilities regarding the individual order entries, e.g.\n=\r\n&gt;\n&gt; =A0Accept: application/orderlist\n&lt;/snip&gt;\n\nIf this is about crafting med=\r\nia types and at which level to apply\nthem, here&#39;s how I go about it:\n\nDESIG=\r\nNING MEDIA-TYPES\nFirst, when crafting a media type (which is rare, but it h=\r\nappens), I\naim for the &quot;application-level&quot; or higher. IOW, I plan on being =\r\nable\nto use it for most all representation transfers within some defined\nap=\r\nplication space. Usually that application space applies to a\ncommonly-under=\r\nstood boundary such as &quot;the order management\napplication&quot; or &quot;my twitter-cl=\r\none&quot;, etc. If possible, I try to craft\nmy media type to be useful _across_ =\r\napplication boundaries. IOW, I aim\nfor a commonly-understood &quot;process&quot; or &quot;=\r\nworkflow&quot; that appears within\nmultiple application boundaries such as &quot;mana=\r\nge my shopping cart&quot; or\n&quot;manage a photo gallery&quot;, etc.\n\nDESIGNING REPRESENT=\r\nATIONS\nSecond, when determining how the application controls appear within =\r\na\nrepresentation (e.g. &lt;img /&gt;-style, &lt;a rel=3D&quot;...&quot; /&gt;-style, &lt;form\nenctyp=\r\ne=3D&quot;...&quot; /&gt;-style etc.) I use the following rules of thumb.\nIf the represe=\r\nntation of the target URI will _always_ be of the same\nmedia type (e.g. alw=\r\nays use application/shopping+xml), then I favor\nusing the &lt;img /&gt;-style app=\r\nroach (e.g. &lt;shopping ... /&gt;). This reduces\n&quot;noise&quot; in the representation a=\r\nnd makes it easy for clients to parse\nout the details.\n\nIf, however, the re=\r\npresentation of the target URI can be one of\nmultiple formats (e.g. applica=\r\ntion/shopping+xml,\napplication/shopping+json, etc.), then I favor the &lt;a /&gt;=\r\n-style\napproach (e.g. &lt;shopping accept:application/atom+xml /&gt;) . This give=\r\ns\nthe server a chance to give the client hints in the representation and\nal=\r\nso allows the client a chance to handle data format negotiation if\nthat&#39;s a=\r\nppropriate.\n\nI use the same general approach for &quot;out-bound&quot; representation=\r\ns (e.g.\nFORM-type elements). I allow the server to send an @enctype attribu=\r\nte\nin the representation and it&#39;s presence give the client a chance at\nmodi=\r\nfying it as needed.\n\nREL TAGS\nFinally, I do not use the @rel attribute to a=\r\nct as a stand-in for\nmedia-types or semantics. IOW, in my implementations, =\r\nrel=3D&quot;shopping&quot;\ndoes not tell the client anything about the media-type in =\r\nuse. This\nallows both servers and clients to keep the @rel semantics (what\n=\r\nshould i expect) clear from the data formats (here the representation\nforma=\r\nt i can handle for that @rel).\n\n\nmca\nhttp://amundsen.com/blog/\nhttp://mamun=\r\nd.com/foaf.rdf#me\n\n\n\n\nOn Fri, Aug 6, 2010 at 07:05, Jan Algermissen &lt;algerm=\r\nissen1971@...&gt; wrote:\n&gt; Something I have been trying to wrap my head ar=\r\nound:\n&gt;\n&gt; Suppose we are dealing with the procurement domain. Also suppose =\r\nwe plan on dealing with lists of orders (e.g. maybe there is a system that =\r\nmanages orders and exposes the new ones, processsed ones or the ones being =\r\nshipped. There will be clients that do something with these order lists suc=\r\nh as compiling a report.\n&gt;\n&gt; Also suppose we have defined a link semantic t=\r\nhat allows a server to point a client to, for example, the list of new orde=\r\nrs.\n&gt;\n&gt; It is not important how that link semantic looks, but it could be &lt;=\r\nnewOrders href=3D&quot;/foo/bar&quot; /&gt; or &lt;link rel=3D&quot;new-orders&quot; href=3D&quot;/foo/bar=\r\n&quot;/&gt; or an AtomPub collection with a special category: &lt;collection href=3D&quot;/=\r\nfoo/bar&quot;&gt;&lt;category term=3D&quot;new-orders&quot; scheme=3D&quot;..&quot;/&gt;&lt;/collection&gt;.\n&gt;\n&gt; I =\r\npersonally &#39;call&#39; any of those &#39;link semantics&#39; and for the purpose of my q=\r\nuestion it only matters that the useragent ends up knowing that\n&gt;\n&gt;\n&gt; =A0 /=\r\nfoo/bar =A0is the URI of a resource that represents the list of new orders.=\r\n\n&gt;\n&gt; An equivalent from the HTML world would be that &lt;img src=3D&quot;/baz.gif&quot;/=\r\n&gt; tells the client that\n&gt;\n&gt; =A0/baz.gif is a resource that is &#39;an image&#39;[1]=\r\n\n&gt;\n&gt;\n&gt; The issue I am dealing with is this: What is the appropriate degree =\r\nof specificity of the media type for lists of orders. Especially I am wonde=\r\nring whether it is enough for the user agent to say\n&gt;\n&gt; =A0Accept: applicat=\r\nion/atom+xml;type=3Dfeed\n&gt;\n&gt;\n&gt; or whether the Accept header should include =\r\nthe user agent capabilities regarding the individual order entries, e.g.\n&gt;\n=\r\n&gt; =A0Accept: application/orderlist\n&gt;\n&gt;\n&gt; Take a step back and lets think ab=\r\nout what is happening here. At one level, the server informs that client ab=\r\nout the nature of a resource and at another (lower) level the client inform=\r\ns the server about its technical capabilities that allow it to process resp=\r\nonses for a request to the given resource.\n&gt;\n&gt; I think it is important to d=\r\nistinuish these levels because the actual request the client makes does not=\r\n express any assumptions about the nature of the resource, only about the t=\r\nechnical capability.\n&gt;\n&gt; The assumption (e.g. that the requested resource i=\r\ns &#39;an image&#39;) happens before that.\n&gt;\n&gt; Browsers are implemented to follow &lt;=\r\nimg src=3D&quot;&quot;/&gt; links and process the response by inlining the received imag=\r\nes into the rendered page. Other HTML-aware clients might be implemented to=\r\n produce a fine-printed book of all images found via &lt;img src=3D&quot;&quot;/&gt; links.=\r\n\n&gt;\n&gt; The actual request will (usually) contain an Accept header of the form=\r\n:\n&gt;\n&gt; Accept: image/gif,image/jpeg,image/png,image/*\n&gt;\n&gt; What this accept h=\r\neader is saying is *not*\n&gt;\n&gt; =A0 =A0&quot;I expect that the requested resource i=\r\ns &#39;an image&#39;&quot;\n&gt;\n&gt; but\n&gt;\n&gt; =A0 =A0 =A0 &quot;I can process a response to this req=\r\nuest if you give me any of the accepted formts&quot;\n&gt; =A0 IOW:&quot;I can do whateve=\r\nr I want to do if the response comes in any of these formats&quot;\n&gt;\n&gt;\n&gt; Before =\r\nthis gets boring, lets shift to the example of the list of new orders. Supp=\r\nose I am implementing a user agent that compiles a list of all items ordere=\r\nd in the list of new orders.\n&gt;\n&gt; Such a user agent would be implemented to =\r\nfind (or just be given or have bookmarked) the URI of the resource that rep=\r\nresents the list of new orders (in the same sense as browsers get hold of t=\r\nhe URI of &#39;an image&#39;).\n&gt;\n&gt; How do I have to implement the user agent&#39;s cons=\r\ntruction of the GET request to /foo/bar?\n&gt;\n&gt; Suppose we are using a media t=\r\nype application/order for order representations and have also decided to bu=\r\nild upon Atom for dealing with lists of stuff in our domain. We might const=\r\nruct the request as:\n&gt;\n&gt; GET /foo/bar\n&gt; Accept: application/atom+xml;type=\r\n=3Dfeed\n&gt;\n&gt; and the server might send something like (excuse flaws in the X=\r\nML, pls)\n&gt;\n&gt;\n&gt; 200 Ok\n&gt; Content-Type: application/atom+xml[1]\n&gt;\n&gt; &lt;feed&gt;\n&gt; =\r\n=A0&lt;entry&gt;\n&gt; =A0 =A0&lt;content type=3D&quot;application/order&gt;\n&gt; =A0 =A0 =A0&lt;order=\r\n&gt;....&lt;/order&gt;\n&gt; =A0 =A0&lt;/content&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; =A0&lt;entry&gt;\n&gt; =A0 =A0&lt;cont=\r\nent type=3D&quot;application/order&gt;\n&gt; =A0 =A0 =A0&lt;order&gt;....&lt;/order&gt;\n&gt; =A0 =A0&lt;/=\r\ncontent&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; &lt;/feed&gt;\n&gt;\n&gt; Is that sufficient? Does the acept hea=\r\nder sufficiently express the processing capabilities in the Accept header? =\r\nCan the server know that the user agent wants to receive the entries as app=\r\nlication/order? Is it ok to just program the user agent to ignore the entri=\r\nes of which it does not understand the type?\n&gt;\n&gt; Would we end up with the c=\r\norrect list of ordered items if all entries come back as HTML and the user =\r\nagent ignores them?\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; I think that there is a great danger of creat=\r\ning a nightmare of hidden coupling because in my opinion the user agent sim=\r\nply can *not* fullfil its processing goal given simply &#39;an atom feed&#39;. An A=\r\ntom feed reader *can* do that (because it has a different goal) but a newly=\r\n-ordered-items-list compiling user agent can not do that it it must express=\r\n that in the Accept header.\n&gt;\n&gt; I&#39;d rather define a media type application/=\r\norderlist (defined as an Atom feed containing entries of application/order)=\r\n and have the user agent be explicit:\n&gt;\n&gt; GET /foo/bar\n&gt; Accept: applicatio=\r\nn/orderlist\n&gt;\n&gt;\n&gt; 200 Ok\n&gt; Content-Type: application/orderlist\n&gt;\n&gt; &lt;feed&gt;\n&gt;=\r\n =A0&lt;entry&gt;\n&gt; =A0 =A0&lt;content type=3D&quot;application/order&gt;\n&gt; =A0 =A0 =A0&lt;orde=\r\nr&gt;....&lt;/order&gt;\n&gt; =A0 =A0&lt;/content&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; =A0&lt;entry&gt;\n&gt; =A0 =A0&lt;con=\r\ntent type=3D&quot;application/order&gt;\n&gt; =A0 =A0 =A0&lt;order&gt;....&lt;/order&gt;\n&gt; =A0 =A0&lt;=\r\n/content&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; &lt;/feed&gt;\n&gt;\n&gt;\n&gt; What do others think?\n&gt;\n&gt; (See also=\r\n [3])\n&gt;\n&gt; Jan\n&gt;\n&gt; [1] &#39;An image&#39; is as good as it gets in terms of definiti=\r\nons, BTW.\n&gt; =A0 =A0&lt;http://www.w3.org/TR/html401/struct/objects.html#edef-I=\r\nMG&gt;\n&gt; =A0 =A0Note that the HTML spec also provides some sort of hint what m=\r\nedia types are involved when dealing with images.\n&gt;\n&gt; [2] conneged on the t=\r\nype param already, so no need to repeat it in the Content-Type header\n&gt;\n&gt; [=\r\n3] There is also the issue of returning a feed that consists of references =\r\nto entries that the user agent can then GET as Accept: application/order in=\r\ndividually. Certainly we aould not want to define a list format that constr=\r\nains the references to only references application;order resource. The user=\r\n agent would basically have to report an error if the referenced order is n=\r\not available as application/order (that is upon a 406 on a GET subrequest)\n=\r\n&gt;\n&gt; An alternative would be to have the user agent Accept: application/atom=\r\n+xml;type=3Dfeed but report an error if an entry in the feed is not provide=\r\nd as application/order (be it inline or via a sub-request).\n&gt;\n&gt;\n&gt; ---------=\r\n--------------------------\n&gt; =A0Jan Algermissen, Consultant\n&gt; =A0NORD Softw=\r\nare Consulting\n&gt;\n&gt; =A0Mail: algermissen@...\n&gt; =A0Blog: http://www.nords=\r\nc.com/blog/\n&gt; =A0Work: http://www.nordsc.com/\n&gt; ---------------------------=\r\n--------\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Grou=\r\nps Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}