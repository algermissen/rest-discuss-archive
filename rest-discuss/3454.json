{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119744001,"authorName":"Chuck Hinson","from":"Chuck Hinson &lt;cmhinson@...&gt;","replyTo":"SENDER","senderId":"BZoGrP0F6i3Yx5Y0j9HSuOKIatCNua5yF687USr7WIrGbxd7IGMvCxnnwhk3M4FxE-uM1vVRJEbWQ9G1ZZGmlT1oRIxfQgM","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements","postDate":"1046547915","msgId":3454,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNFNjEwRENCLjcwOTA4QHBvbmQuY29tPg==","inReplyToHeader":"PEUxOHA0SFktMDAwMVRqLTAwQGNhbnRlZW4+","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDMwMjI3MjAzOTUyMC4xMDcyLTEwMDAwMEBmYW5hdGljPiA8M0U1RUUwQkYuMzA1MDcwOUBwb25kLmNvbT4gPEUxOHA0SFktMDAwMVRqLTAwQGNhbnRlZW4+"},"prevInTopic":3438,"nextInTopic":3455,"prevInTime":3453,"nextInTime":3455,"topicId":3351,"numMessagesInTopic":49,"msgSnippet":"... I have to confess that the above paper is way too dense for my humber brain.  It would appear that I lack the necessary background. ... I m at a","rawEmail":"Return-Path: &lt;cmhinson@...&gt;\r\nX-Sender: cmhinson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 1 Mar 2003 19:45:17 -0000\r\nReceived: (qmail 10458 invoked from network); 1 Mar 2003 19:45:17 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m15.grp.scd.yahoo.com with QMQP; 1 Mar 2003 19:45:16 -0000\r\nReceived: from unknown (HELO smtp.comcast.net) (24.153.64.2)\n  by mta2.grp.scd.yahoo.com with SMTP; 1 Mar 2003 19:45:16 -0000\r\nReceived: from pond.com (pcp01418644pcs.umrion01.pa.comcast.net [68.80.15.97])\n by mtaout02.icomcast.net\n (iPlanet Messaging Server 5.2 HotFix 1.12 (built Feb 13 2003))\n with ESMTP id &lt;0HB3002UB5JFYA@...&gt; for\n rest-discuss@yahoogroups.com; Sat, 01 Mar 2003 14:45:15 -0500 (EST)\r\nDate: Sat, 01 Mar 2003 14:45:15 -0500\r\nSubject: Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements\r\nIn-reply-to: &lt;E18p4HY-0001Tj-00@canteen&gt;\r\nTo: Tyler Close &lt;tyler@...&gt;\r\nCc: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;,\n rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;3E610DCB.70908@...&gt;\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-transfer-encoding: 7BIT\r\nX-Accept-Language: en-us, en\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.2.1)\n Gecko/20021130\r\nReferences: &lt;Pine.WNT.4.43.0302272039520.1072-100000@fanatic&gt;\n &lt;3E5EE0BF.3050709@...&gt; &lt;E18p4HY-0001Tj-00@canteen&gt;\r\nFrom: Chuck Hinson &lt;cmhinson@...&gt;\r\nX-Yahoo-Group-Post: member; u=119744001\r\n\r\n\n\nTyler Close wrote:\n\n&gt;On Friday 28 February 2003 00:08, Chuck Hinson wrote:\n&gt;  \n&gt;\n&gt;&gt;While I&#39;m sure there are possibilities that I&#39;ve not thought of,\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Quite a number actually. The basic mechanism that Alex proposed,\n&gt;inserting an unguessable random number into a URL, can be used to\n&gt;implement distributed capability security. The capability security\n&gt;model has been used to secure a wide range of software, from\n&gt;operating systems to end-user applications.\n&gt;\n&gt;  \n&gt;\n&gt;&gt;I&#39;m\n&gt;&gt;having difficulty imagining a scenario where that is a reasonable\n&gt;&gt;solution.\n&gt;&gt;\n&gt;&gt;The way I see it, having a URL per user has several disdvantages:\n&gt;&gt;1. exponential explosion of URIs - one URL per resource per user - makes\n&gt;&gt;content management much harder than it needs to be\n&gt;&gt;2. can&#39;t share URIs between authorized users since everyone has their\n&gt;&gt;own personal URI for a resource\n&gt;&gt;3. kills caching since every unique user will use a different name for\n&gt;&gt;the same resource\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;It appears that you&#39;re only thinking about protecting read-access\n&gt;to a read-only resource. I base this on your assumption that many\n&gt;users have access to a shared (and cacheable!) resource.\n&gt;\n&gt;This really isn&#39;t a very good example to use when trying to\n&gt;understand the benefits of capability-based security. For\n&gt;starters, the example isn&#39;t one in which there are any actually\n&gt;enforceable security properties. You can&#39;t prevent users from\n&gt;sharing access to the resource with &quot;unauthorized&quot; users. There is\n&gt;also very little sense is revoking read-access to a cacheable\n&gt;resource: why get it from the site at all when you&#39;ve still got it\n&gt;in your cache.\n&gt;\n&gt;For a better overview of capability-based security, I suggest the\n&gt;paper at:\n&gt;\n&gt;http://www.erights.org/elib/capability/ode/index.html\n&gt;\n&gt;The paper explains capability-based security using tradeable\n&gt;electronic credit as an example. This is a better example to use\n&gt;when explaining capability-based security.\n&gt;  \n&gt;\n\nI have to confess that the above paper is way too dense for my humber \nbrain.  It would appear that I lack the necessary background.\n\n&gt;For an explanation of how capability-based security could be\n&gt;applied using REST design principles, I suggest my own paper at:\n&gt;\n&gt;http://www.waterken.com/dev/Web/Calculus/\n&gt;\n&gt;The paper also uses tradeable electronic credit as an example, but\n&gt;with a different design. The paper describes a RESTful interface\n&gt;for tradeable electronic credit.\n&gt;  \n&gt;\nI&#39;m at a disadvantage here since I really don&#39;t understand the \ncapability model that&#39;s being described.  However, reading the paper, I \ngot the sense that security is provided as a result of traversing a \ngraph.  This doesnt seem terribly useful - why should I have to traverse \na graph to get to a resource every time I want to access the resource? \n Why can&#39;t I just directly access it.\n\n&gt;  \n&gt;\n&gt;&gt;4. provides no real security since all you need is a URI in order to\n&gt;&gt;access a supposedly protected resource\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;A lot of people get hung up on this, since they are so used to\n&gt;username/password. Consider that a randomly-generated 128 bit\n&gt;number contains more entropy than any password you could possibly\n&gt;remember. If it were possible to guess a random 128 bit number, it\n&gt;would also be possible to break any symmetric-key encryption\n&gt;algorithm. A symmetric encryption key is typically also 128 bits.\n&gt;  \n&gt;\nI really dont get this.  Perhaps I&#39;m dense, but it just doesn&#39;t seem \nuseful to have a world where everybody gets their own URI to a single \nresource.  What happens to sharing and linking?\n\n--Chuck\n\n\n\n"}}