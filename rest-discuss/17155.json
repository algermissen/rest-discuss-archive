{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Sa20czYkSSdZKVVemQq-_ahCVPVznzifb1swSkifZkiMFX8CvdAzDxfyLEJICzK2tiUXM6wVdUTwOV8COO-lI6qhcAEsUA4JsOOs3kcwpA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1293578393","msgId":17155,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMjI4MTYxOTUzLmRjOWQ0MDZkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPg==","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPg=="},"prevInTopic":17154,"nextInTopic":17156,"prevInTime":17154,"nextInTime":17156,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"... Re-inventing  may be *easier* (I wouldn t know as I ve always avoided platforms and tooling entirely, particularly those geared towards the SOA","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5843 invoked from network); 28 Dec 2010 23:19:46 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m7.grp.sp2.yahoo.com with QMQP; 28 Dec 2010 23:19:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Dec 2010 23:19:46 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 8525E509EB;\n\tTue, 28 Dec 2010 18:19:45 -0500 (EST)\r\nDate: Tue, 28 Dec 2010 16:19:53 -0700\r\nTo: =?ISO-8859-1?Q?J=F8rn?= Wildt &lt;jw@...&gt;\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20101228161953.dc9d406d.eric@...&gt;\r\nIn-Reply-To: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJ=F8rn Wildt wrote:\n&gt;\n&gt; But using html for embedding machine-readable repre=\r\nsentations of\n&gt; complex data structures for reading seems a bit like bendin=\r\ng over\n&gt; backwards to do something which is straight forward with XML.\n&gt;\n\nR=\r\ne-inventing &lt;table&gt; may be *easier* (I wouldn&#39;t know as I&#39;ve always\navoided=\r\n platforms and tooling entirely, particularly those geared\ntowards the SOA =\r\napproach which is fundamentally different from REST --\nif the problem here =\r\nis preserving the investment in SOA toolchains and\nexpecting REST to result=\r\n, I don&#39;t know how I can help), but &lt;table&gt; has\n*simplicity* going for it.\n=\r\n\nThe design of &lt;table&gt; markup predates the Web, there&#39;s nothing about it\nth=\r\nat can&#39;t be tooled, even if your tools disregard it as a\nserialization for =\r\ntabular data.  XSLT is both a great deployment and\ndevelopment tool; your t=\r\noolchain probably allows you to execute a\ntransformation from whatever it i=\r\ns willing to generate for tabular\ndata, into &lt;table&gt; markup, as a pre-deplo=\r\nyment operation.\n\nI&#39;ve never felt like I&#39;m bending over backwards to serial=\r\nize tabular\ndata using &lt;table&gt; markup, because it&#39;s so straightforward to m=\r\ne as to\nhave become second-nature.  The essence of REST is the re-use of\nco=\r\nmmon data structures.\n\n&gt; \n&gt; But how would the machine readable HTML look li=\r\nke? Maybe:\n&gt; \n&gt;   &lt;div property=3D&quot;case&quot;&gt;\n&gt;     &lt;div property=3D&quot;title&quot;&gt;My =\r\ntitle&lt;/div&gt;\n&gt;   &lt;/div&gt;\n&gt; \n\nNo, the whole point of using HTML is that its ma=\r\nrkup expresses very\ncommon semantics for any sort of document.  I&#39;d put the=\r\n title inside\n&lt;head&gt;&lt;title&gt;, assuming one case per document.  There&#39;s no ne=\r\ned to re-\ninvent the document title as a microformat, or tell anyone (h or =\r\nm)\nwhat you mean by &lt;head&gt;&lt;title&gt; in HTML.  Attaching a title to a\nhypertex=\r\nt document is a problem that&#39;s long been solved, why re-visit\nthe issue?\n\n&gt;=\r\n\n&gt; Many people turns to REST for simplicity. For me this also means\n&gt; simpl=\r\ne and commonly available tools. That&#39;s not the case with the\n&gt; HTML seriali=\r\nzation and for this reason I shy away from the HTML\n&gt; representation - it&#39;s=\r\n too difficult to work with.\n&gt; \n\nYou&#39;re mistaking &#39;simplicity&#39; for &#39;ease-of=\r\n-use&#39;, at least in terms of\nRoy&#39;s thesis.  In REST, simplicity means (in th=\r\nis case) that instead of\nevery type of document having its own data type wi=\r\nth its own definition\nof the document title, we have a generic document dat=\r\na type such that\nany type of document has the same definition of title.  RE=\r\nST&#39;s power\nlies in the fact that most APIs can be modeled in terms of docum=\r\nent\norientation, just as UNIX&#39;s power lies in the fact that most everything=\r\n\nmay be modeled in terms of a file descriptor (filesystem and media type\nse=\r\nrving the same generic role in each).\n\n&gt; \n&gt; Now I am only dreaming up some =\r\nideas: what if there were a standard\n&gt; XML dialect which included links and=\r\n schema references?\n&gt;\n\nLike HTML?  If the system is document-oriented, then=\r\n this generic\ndialect will need to express common semantics like lists, hea=\r\ndings,\ntitle, tabular data, paragraphs and the like.  Which is why HTML\next=\r\nensibility is such a big issue -- it seems like less work to me to\nextend H=\r\nTML, than it is to start over from scratch with a custom media\ntype.\n\n&gt; \n&gt; =\r\nI would be happy to use HTML all over the place if it wasn&#39;t for the\n&gt; fact=\r\n that I haven&#39;t seen any useful serialization tools.\n&gt; \n\nLeading you to def=\r\nine your own serialization, requiring out-of-band\ndocumentation explaining =\r\nthe network-opaque algorithm behind it.  This\nisn&#39;t the REST style -- in RE=\r\nST, you aren&#39;t required to document the\nalgorithm behind your HTML &lt;table&gt;,=\r\n because that&#39;s a standardized part\nof the data types your media type ident=\r\nifies for IP networks.\n\n-Eric\n\n"}}