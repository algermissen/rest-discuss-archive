{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"hZiQwK4O1HRCaMl7CiQp5W8SRs1WZAIT-ZBt31ubl2IYYWBKkWKhMcy_JchNVWGQrSBV4_HxILKrx9BG2uMcMAXh6PJDmw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] One-shot notifications","postDate":"1012771614","msgId":640,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hESUVHTkZLQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDNDNURBMjc5LjJEQkEyRkNGQGp1bXAubmV0Pg=="},"prevInTopic":638,"nextInTopic":644,"prevInTime":639,"nextInTime":641,"topicId":609,"numMessagesInTopic":24,"msgSnippet":"... Your response to point #4 is the same thing that I meant.  Quoting you to you: you want to return both the appropriate response to the GET *and*","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 3 Feb 2002 21:27:56 -0000\r\nReceived: (qmail 50619 invoked from network); 3 Feb 2002 21:27:56 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m9.grp.snv.yahoo.com with QMQP; 3 Feb 2002 21:27:56 -0000\r\nReceived: from unknown (HELO mail3.panix.com) (166.84.0.167)\n  by mta1.grp.snv.yahoo.com with SMTP; 3 Feb 2002 21:27:56 -0000\r\nReceived: from mailspool1.panix.com (mailspool1.panix.com [166.84.0.210])\n\tby mail3.panix.com (Postfix) with ESMTP\n\tid E15EC98259; Sun,  3 Feb 2002 16:27:55 -0500 (EST)\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mailspool1.panix.com (Postfix) with SMTP\n\tid D884812E41; Sun,  3 Feb 2002 16:27:51 -0500 (EST)\r\nTo: &quot;Jeff Bone&quot; &lt;jbone@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] One-shot notifications\r\nDate: Sun, 3 Feb 2002 16:26:54 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDIEGNFKAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nIn-Reply-To: &lt;3C5DA279.2DBA2FCF@...&gt;\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\n\n&gt; &gt; 3) Eventually the sink performs a request for the new state.  As part of the\n&gt; &gt; request the sink resubscribes.  (A combined operation will be hard\n&gt; to model in\n&gt; &gt; HTTP, but this message is not the place to articulate the problems.)\n&gt;\n&gt; Can you expand on this?  IMO, it seems trivial to me --- the sink\n&gt; merely requests\n&gt; notification and indicates the sink resource in-band with the GET of\n&gt; the new state,\n&gt; ala WD-Proxy.\n\nYour response to point #4 is the same thing that I meant.  Quoting you to you:\n&quot;you want to return both the appropriate response to the GET *and* information\nrelating to the notification commitment or lack thereof.&quot;\n\nYou need to both pick up the new state of the watched resource and post to the\nsubscription resource.  Since these address separate resources, encapsulating\nthem in a single request is request-in-request.\n\nThe natural solution is to require that two requests be performed, one to\nrequest the resource and one to renew your sub.  Performing two requests (one to\nthe watched resource, one to the subscription resource) may be an unacceptable\nefficiency issue.  Given that the size of a subscription request is low and that\nthe connection can be kept alive, this isn&#39;t a real efficiency blow.\n\nA more pressing problem is that there&#39;s a race condition between the time you\npick up the new state of the resource and the time your renewal is processed.\nIf the resource changes between those times then you&#39;ll lose intervening states.\n...my instinct is to say that there needs to be a way of locking these two\ntransactions together.  ...but perhaps there is a simple solution -- to say that\nevery subscription may specify a baseline state.  If the current state of the\nresource at the time the request is received differs from the baseline state, a\nnotification is immediately fired.  All subscriptions would be:\n\n1) Requester requests current state of watched resource.\n2) Requester requests subscription.  Subscription headers include the hash of\nthe last known state.\n3) Source compares last-known hash with current hash and, if there is a\ndifference, fires a notification.\n\nThe race condition is not unique to renewals.  New subscriptions would also\nsuffer from it, so the above algorithm should be the same across all\ninteractions.\n\nI supposed a default value of the hash that means &quot;I don&#39;t care about the race\ncondition, just use your current state as a baseline&quot; would do good things for\nhello world implementations...\n\n\n\n\n\n\n\n\n"}}