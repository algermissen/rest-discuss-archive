{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"jHwSdF3S55oj7Uy56sFhd40Kun_ctbURvnVsK_aNUaiUcqOFxns_qAXRujFZiEvortE-TjCan2x7PVOlGl5Wn9fcCIY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: composition of REST services","postDate":"1255000286","msgId":13736,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQ0RDOERFLjMwMDAwMDdAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PGhha2Vxcitibmk1QGVHcm91cHMuY29tPg==","referencesHeader":"PGhha2Vxcitibmk1QGVHcm91cHMuY29tPg=="},"prevInTopic":13735,"nextInTopic":13737,"prevInTime":13735,"nextInTime":13737,"topicId":13728,"numMessagesInTopic":26,"msgSnippet":"... Maybe there is. We re just talking about a design style here. There s nothing in OO to directly deal with making things appear on a screen, but there are ","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57364 invoked from network); 8 Oct 2009 11:11:56 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.re1.yahoo.com with QMQP; 8 Oct 2009 11:11:56 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 11:11:56 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Thu, 8 Oct 2009 07:11:20 -0400\r\nMessage-ID: &lt;4ACDC8DE.3000007@...&gt;\r\nDate: Thu, 08 Oct 2009 12:11:26 +0100\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;hakeqr+bni5@...&gt;\r\nIn-Reply-To: &lt;hakeqr+bni5@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: 2147386497577.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 07:11:28 on 08 Oct 2009\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: composition of REST services\r\nX-Yahoo-Group-Post: member; u=164939419; y=s3ZLBDgUyETxY9ci_hDSE-7u9G1wz_r7DJc_XpGgZihWQMIH\r\nX-Yahoo-Profile: hack_poet\r\n\r\nNinaJeliazkova wrote:\n&gt; So it&#39;s a configuration issue, or inventing a custom solution for resource registration and availability. It&#39;s a pity there is no search engine looking for resources of specific media type to help us with HATEOAS.\n\nMaybe there is.\n\nWe&#39;re just talking about a design style here. There&#39;s nothing in OO to \ndirectly deal with making things appear on a screen, but there are \nplenty of OO implementations. Likewise, someone may very well have \nalready invented this wheel in a RESTful manner unbeknownst to me.\n\nPersonally I&#39;ve built:\n\nSystems where one server would talk to several others (generally through \nmeans spec&#39;d by third parties and a mixture of SOAP, XML-over-HTTP and \nRESTful XML-over-HTTP in decreasing order of how long they took me to \nintegrate) and dealt RESTfully with clients who didn&#39;t care what those \nservers where or even that they existed.\n\nSystems where one server would query another for information based on \nentities received by the client referring it to resources on that second \nserver.\n\nSystems where one server knew about users and of the second and could \nauthenticate the identity of those users for the second to then treat \naccordingly.\n\nAll of which had custom constraints and custom specs. and so while cases \nof multiple server interaction may not give any direct parallels to what \nyou are doing. (And of course, also plenty of cases where there were \nmultiple servers in a farm, but since they are conceptually a single \nserver to a client, that doesn&#39;t really count).\n\nMaybe other people here have looked at the issue in more general terms, \nwhich would be nice.\n\n&gt; Do you mean &quot;told by the _rel_ element&quot; in the link? IMHO that&#39;s rather vaguely defined.\n\nI mean told by whatever it is they are receiving. HTML with rel could be \nthe perfect solution, or custom XML, or an already defined format, or \nJSON or a document written in the style of Jane Austen (assuming you&#39;ve \nsecretly broken several hard AI problems and have a client that can \nprocess a document written in the style of Jane Austen ;)\n\nAll of these approaches are RESTful as long as the document contains the \nrelevant URI references and all are useful as long as the document can \nbe processed by the client.\n\n&gt; Both are fine, given service A is told about Server B by some external means. An interesting point is how 1) or 3b) are different from the RPC approach - in both cases server A is not affecting any resource directly, it just receives a request and conveys some information to Server B for further processing.  How does it fit with the RESTfull design?\n\nWell, there is no reason why a resource on Server B need not be a \nresource on Server A.\n\nThe resource &lt;http://example.net/A&gt; could be the resource \n&lt;http://example.com/B&gt; or, if you don&#39;t mind showing your workings \n(which might be either more flexible or more brittle depending on other \nfactors) we might use &lt;http://example.net/example.com/B&gt;.\n\nThe simplest such implementation of this would be to work out the URI \nthe other server uses for the same resource and pass on the request and \nreturn the response. This would also be a completely pointless \nimplementation (one could just go to the second server and forget about \nthis), but the interaction between client and example.net and between \nexample.net (acting as a client) and example.com can both be completely \nRESTful.\n\nObviously, you have some reason for doing something more involved than \njust this, or else why bother with talking to the first server at all, \nbut demonstrates the point.\n\nA slightly more sensible example is a resource at \n&lt;http://example.net/someHandler&gt; that receives a POSTed entity and does \nsome sort of complicated operation that affects a resource at \n&lt;http://example.com/someResource&gt; which is what the client is then \ninterested in. Here the client doesn&#39;t care about the details of what is \ndone, it POSTs what it POSTs, some black-box magic that it is none of \nits concern happens, and then a 303 See Other directs it to GET \n&lt;http://example.com/someResource&gt;.\n\nA myriad other models of interaction could be thought up, but their \nrelevance to what you are talking about, I can&#39;t really guess at.\n\n\n"}}