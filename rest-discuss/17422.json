{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"algermissen1971","from":"algermissen1971 &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"QxrkuqfwAU2uH14PlnRHL7mnWIOM3rfLG1rey7w8HiolTMR_3pBnrYStZrg8DaaXjOPwJGGR5PZ7I-bqj7GbL6kWdrUycbDdWgRGTca6jlI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] PUT for partial update of an existing resource","postDate":"1302675589","msgId":17422,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY0ZmY0MWY3LWIwYjItZTk1ZS04MTA4LWNlNTE3ZDc5MTU2MEBtZS5jb20+","inReplyToHeader":"PDg1NjE4MC41OTA0NC5xbUB3ZWIxMTA3MDUubWFpbC5ncTEueWFob28uY29tPg=="},"prevInTopic":17421,"nextInTopic":17424,"prevInTime":17421,"nextInTime":17423,"topicId":17415,"numMessagesInTopic":59,"msgSnippet":"... Out of curiosity: why? ... Then use POST. Jan ... On 13 Apr, 2011,at 06:53 AM, Bryan Taylor  wrote: This seems like a reasonable","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8357 invoked from network); 13 Apr 2011 06:20:46 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 13 Apr 2011 06:20:46 -0000\r\nX-Received: from unknown (HELO asmtpout023.mac.com) (17.148.16.98)\n  by mta2.grp.sp2.yahoo.com with SMTP; 13 Apr 2011 06:20:46 -0000\r\nMIME-version: 1.0\r\nContent-type: multipart/alternative;\n boundary=&quot;Boundary_(ID_ZeNJNNSsIdffpHzgKyeqig)&quot;\r\nX-Received: from spool003.mac.com ([10.150.69.53])\n by asmtp023.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01\n 64bit (built Nov 21 2010)) with ESMTP id &lt;0LJK00MVDUX2TI30@...&gt;\n for rest-discuss@yahoogroups.com; Tue, 12 Apr 2011 23:19:51 -0700 (PDT)\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.2.15,1.0.148,0.0.0000\n definitions=2011-04-13_03:2011-04-13,2011-04-13,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=2 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1104120203\r\nX-Received: from localhost ([10.150.79.234])\n by spool003.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTP id &lt;0LJK000C2UX2NXC0@...&gt;; Tue,\n 12 Apr 2011 23:19:50 -0700 (PDT)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=2 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1104120203\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.2.15,1.0.148,0.0.0000\n definitions=2011-04-13_03:2011-04-13,2011-04-13,1970-01-01 signatures=0\r\nTo: Bryan Taylor &lt;bryan_w_taylor@...&gt;\r\nCc: mike amundsen &lt;mamund@...&gt;, rest-discuss@yahoogroups.com\r\nDate: Wed, 13 Apr 2011 06:19:49 +0000 (GMT)\r\nX-Mailer: MobileMe Mail (1C3224)\r\nMessage-id: &lt;f4ff41f7-b0b2-e95e-8108-ce517d791560@...&gt;\r\nIn-reply-to: &lt;856180.59044.qm@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: algermissen1971 &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] PUT for partial update of an existing resource\r\nX-Yahoo-Group-Post: member; u=289191104; y=39mMk0SPTLOaLM36jznlMNOGM-BrNyim4dPpq3QPbQpIOJt0ruv4d8Ht\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\r\n--Boundary_(ID_ZeNJNNSsIdffpHzgKyeqig)\r\nContent-type: text/plain; charset=utf-8; format=flowed\r\nContent-transfer-encoding: quoted-printable\r\n\r\n\n\nOn 13 Apr, 2011,at 06:53 AM, Bryan Taylor &lt;bryan_w_taylor@...&gt; wrot=\r\ne:\n\n&gt;\n&gt; This seems like a reasonable approach once you accept that you want=\r\n to allow\n&gt; PATCH. In my development organization, we&#39;ve defined our unifor=\r\nm interface to be\n&gt; the HTTP methods of RFC 2616, =EF=BB=BF\n \nOut of curios=\r\nity: why?\n\n\n&gt; so PATCH isn&#39;t an option for me.\n \nThen use POST.\n\nJan\n\n&gt;\n&gt;\n&gt;=\r\n If you read the PATCH RFC, it starts out with the assertion &quot;The PUT metho=\r\nd is\n&gt; already defined to overwrite a resource with a complete new body, an=\r\nd cannot be\n&gt; reused to do partial changes.&quot; I&#39;m not exactly sure why they =\r\nbelieve the\n&gt; &quot;complete new body&quot; part, and I don&#39;t think this even makes s=\r\nense. The body of a\n&gt; PUT is a representation, not a resource, so I don&#39;t k=\r\nnow what it means to\n&gt; overwrite a resource with a representation. Recall F=\r\nielding&#39;s definition of a\n&gt; resource as a function that defines a time vary=\r\ning set of representations. I\n&gt; don&#39;t see anything in section 9.6 of RFC 26=\r\n16 that suggests that the body of the\n&gt; PUT contains the &quot;complete&quot; resourc=\r\ne state. It says &quot;The PUT method requests\n&gt; that the enclosed entity be sto=\r\nred under the supplied Request-URI.&quot; I note it\n&gt; says &quot;under&quot; and not &quot;as&quot;.=\r\n I think PUT could be re-expressed as &quot;take the\n&gt; submitted representation =\r\nand make the corresponding state of the resource\n&gt; match&quot;.\n&gt;\n&gt;\n&gt; Consider a=\r\n resource that offers two representations, one in text and one in\n&gt; SVG. Th=\r\ne SVG is drawing and includes some text as a caption within the SVG\n&gt; drawi=\r\nng. The text representation is just the caption. Why can I not PUT a new\n&gt; =\r\ntext representation and expect it to change the caption? This illustrates t=\r\nhat\n&gt; GET returns a representation in a single negotiated media type, which=\r\n is a the\n&gt; value of projecting the resource onto that media type. I see no=\r\n reason to\n&gt; interpret PUT any differently than GET in this regard.\n&gt;\n&gt;\n&gt;\n&gt;=\r\n ----- Original Message ----\n&gt; From: mike amundsen &lt;mamund@...&gt;\n&gt; To:=\r\n Bryan Taylor &lt;bryan_w_taylor@...&gt;\n&gt; Cc: rest-discuss@yahoogroups.com=\r\n\n&gt; Sent: Tue, April 12, 2011 5:58:22 PM\n&gt; Subject: Re: [rest-discuss] PUT f=\r\nor partial update of an existing resource\n&gt;\n&gt; Bryan:\n&gt;\n&gt; Regarding partial =\r\nupdates over HTTP, I do the following:\n&gt;\n&gt; 1) When I want to replace an exi=\r\nsting resource, I use PUT + ETag on\n&gt; the URI of the existing resource.\n&gt; 2=\r\n) When I want to amend/repair an existing resource, I use PATCH +\n&gt; ETag on=\r\n the URI of the existing resource.\n&gt;\n&gt; PUT\n&gt; In the case of #1, the entity =\r\nbody I transfer contains a\n&gt; representation that is a &quot;whole&quot; representatio=\r\nn of the existing\n&gt; resource. It may not have all the fields in the existin=\r\ng resource\n&gt; (e.g. the resource id, the creation date, or other server-gene=\r\nrated\n&gt; values) but it is usually pretty easy to see that this entity\n&gt; rep=\r\nresents a resource. The media types I use for these entities is\n&gt; often app=\r\nlication/x-www-form-urlencoded, but I sometimes use\n&gt; application/xml, appl=\r\nication/{my-media-type}+xml, or JSON\n&gt; representations, etc.\n&gt;\n&gt; PATCH\n&gt; In=\r\n the case of #2, the entity body I transfer contains a\n&gt; representation of =\r\na &quot;DIFF&quot; format that has instructions on how to\n&gt; partially modify the exis=\r\nting resource. It is, essentially, a bag of\n&gt; instructions on how to handle=\r\n a modification of select elements of the\n&gt; resource. It doesn&#39;t look anyth=\r\ning like the existing resource. I\n&gt; currently use a simple XML format as th=\r\ne custom media type for this\n&gt; work. I use this XML diff format without reg=\r\nard to the native (or\n&gt; negotiated) media type used for responses for the t=\r\narget resource.\n&gt;\n&gt; I&#39;ve also used the PATCH w/ DIFF pattern to apply to a =\r\nset of\n&gt; resources on the target serer (e.g. &quot;replace discount rate on all\n=\r\n&gt; twelve instances of product X in the catalog&quot;, etc.).\n&gt;\n&gt; In cases where =\r\nthe target server does not support the PATCH verb (but\n&gt; _does_ support the=\r\n application/diff+xml media type), the server will\n&gt; support POST + checksu=\r\nm on a special URI (/products/;patch). This can\n&gt; be less desirable cache-w=\r\nise, but works just fine for most cases.\n&gt;\n&gt; FINAL REMARKS\n&gt; I keep these t=\r\nwo separate (PUT=3Dreplace, PATCH=3Damend) primarily to make\n&gt; it easier fo=\r\nr devs to know what to expect for each case. When you want\n&gt; to amend a vie=\r\nw items for an existing resource, use PATCH and the DIFF\n&gt; format. When you=\r\n want to simply replace an existing resource, just use\n&gt; PUT and the usual =\r\nentity formats.\n&gt;\n&gt; Hopefully this gives you some ideas on how to handle yo=\r\nur cases.\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt; http://twitter.com@mamund\n&gt;=\r\n http://mamund.com/foaf.rdf#me\n&gt;\n&gt;\n&gt; #RESTFest 2010\n&gt; http://rest-fest.goog=\r\nlecode.com\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Tue, Apr 12, 2011 at 14:30, Bryan Taylor &lt;bryan_w_t=\r\naylor@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; I&#39;ve been pondering whether or not it is OK=\r\n to use PUT for a partial update of\n&gt; &gt;a\n&gt; &gt; resource. When I look at the H=\r\nTTP spec it says &quot;The PUT method requests that\n&gt; &gt;the\n&gt; &gt; enclosed entity b=\r\ne stored under the supplied Request-URI.&quot; This seems to be\n&gt; &gt;a\n&gt; &gt; little =\r\nloosy goosy to me, as the entity is a represenation and the Request-URI\n&gt; &gt;=\r\n identifies a resource and so the thing I create (the resource) is logicall=\r\ny\n&gt; &gt; different than one particular representation of it. To illustrate thi=\r\ns,\n&gt; suppose\n&gt; &gt; my media type allows an optional create-timestamp field an=\r\nd my server supplies\n&gt; &gt; the value using its own clock if the resource does=\r\n not already exist. I might\n&gt; &gt; want to allow PUT operations to do updates,=\r\n but not allow them to include the\n&gt; &gt; create-timestamp. In fact, I might e=\r\nxplicitly define in the media type that\n&gt; PUT\n&gt; &gt; requests will be rejected=\r\n if they include the create-timestamp.\n&gt; &gt;\n&gt; &gt; I don&#39;t think this violates =\r\nany requirement for PUT that I can find.\n&gt; &gt; Specifically, I don&#39;t think I =\r\nsee anything that requires that a if I put\n&gt; &gt; representation X to resource=\r\n Y and follow it by a GET that I have to get back\n&gt; &gt; the same representati=\r\non. In fact, I don&#39;t think anything requires that if I\n&gt; use\n&gt; &gt; PUT I have=\r\n to support GET at all, let alone with the same media type, let\n&gt; alone\n&gt; &gt;=\r\n with the same representation provided by PUT. All that I see required is t=\r\nhat\n&gt; &gt; PUT is idempotent and that the enclosed entity be stored under the =\r\nsupplied\n&gt; &gt; Request-URI, which doesn&#39;t seem (to me) to imply that it must =\r\nbe all that is\n&gt; &gt; stored. I would think that each media type can define th=\r\ne semantics of PUT in\n&gt; &gt; terms of how resource state is affected.\n&gt; &gt;\n&gt; &gt; =\r\nIf the above create-timestamp is OK, then why not PUT for wholesale partial=\r\n\n&gt; &gt; updates? If I create a car resource with an engine within its state an=\r\nd then I\n&gt; &gt; PUT a new engine why can I not expect to store this engine und=\r\ner the original\n&gt; &gt; car resource, so that a subsequent GET returns the car?=\r\n\n&gt; &gt;\n&gt; &gt; Sam Ruby in his blog\n&gt; &gt; http://intertwingly.net/blog/2008/02/15/E=\r\nmbrace-Extend-then-Innovate wrote\n&gt; &gt; &quot;Having some servers interpret the re=\r\nmoval of elements (such as content) as a\n&gt; &gt; modification, and others inter=\r\npret the requests in such a way that elided\n&gt; &gt; elements are to be left alo=\r\nne is hardly uniform or self-descriptive.&quot; I think\n&gt; &gt; this is easily dispo=\r\nsed of. It isn&#39;t the server that interprets what to do, it\n&gt; &gt; should be de=\r\nfined by the media type.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; What do other people think of PUT for =\r\npartial updates?\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ------------------------------------\n&gt; &gt;\n&gt;=\r\n &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt;\n&gt; ----------------------------=\r\n--------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\r\n--Boundary_(ID_ZeNJNNSsIdffpHzgKyeqig)\r\nContent-type: multipart/related;\n boundary=&quot;Boundary_(ID_nk1EPpZg4TqoDttXdbNTIw)&quot;; type=&quot;text/html&quot;\r\n\r\n\r\n--Boundary_(ID_nk1EPpZg4TqoDttXdbNTIw)\r\nContent-type: text/html; CHARSET=US-ASCII\r\nContent-transfer-encoding: 7BIT\r\n\r\n&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;On 13 Apr, 2011,at 06:53 AM, Bryan Taylor &lt;bryan_w_taylor@...&gt; wrote:&lt;br&gt;&lt;br&gt;&lt;div&gt;&lt;blockquote type=&quot;cite&quot;&gt;&lt;div class=&quot;msg-quote&quot;&gt;&lt;div class=&quot;_stretch&quot;&gt;&lt;br&gt;\nThis seems like a reasonable approach once you accept that you want to allow &lt;br&gt;\nPATCH. In my development organization, we&#39;ve defined our uniform interface to be &lt;br&gt;\nthe HTTP methods of RFC 2616, &lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span&gt;&nbsp;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Out of curiosity: why?&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;blockquote type=&quot;cite&quot;&gt;&lt;div class=&quot;msg-quote&quot;&gt;&lt;div class=&quot;_stretch&quot;&gt;so PATCH isn&#39;t an option for me.&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span&gt;&nbsp;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Then use POST.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Jan&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote type=&quot;cite&quot;&gt;&lt;div class=&quot;msg-quote&quot;&gt;&lt;div class=&quot;_stretch&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nIf you read the PATCH RFC, it starts out with the assertion &quot;The PUT method is &lt;br&gt;\nalready defined to overwrite a resource with a complete new body, and cannot be &lt;br&gt;\nreused to do partial changes.&quot; I&#39;m not exactly sure why they believe the &lt;br&gt;\n&quot;complete new body&quot; part, and I don&#39;t think this even makes sense. The body of a &lt;br&gt;\nPUT is a representation, not a resource, so I don&#39;t know what it means to &lt;br&gt;\noverwrite a resource with a representation. Recall Fielding&#39;s definition of a &lt;br&gt;\nresource as a function that defines a time varying set of representations. I &lt;br&gt;\ndon&#39;t see anything in section 9.6 of RFC 2616 that suggests that the body of the &lt;br&gt;\nPUT contains the &quot;complete&quot; resource state. It says &quot;The PUT method requests &lt;br&gt;\nthat the  enclosed entity be stored under the supplied Request-URI.&quot; I note it  &lt;br&gt;\nsays &quot;under&quot; and not &quot;as&quot;. I think PUT could be re-expressed as &quot;take  the &lt;br&gt;\nsubmitted representation and make the corresponding state of the  resource &lt;br&gt;\nmatch&quot;. &lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nConsider a resource that offers two representations, one in text and one  in &lt;br&gt;\nSVG. The SVG is drawing and includes some text as a  caption within the SVG &lt;br&gt;\ndrawing. The text representation is just the caption. Why can I not PUT a new &lt;br&gt;\ntext representation and expect it to change the caption? This illustrates that &lt;br&gt;\nGET returns a representation in a single negotiated media type, which is a the &lt;br&gt;\nvalue of projecting the resource onto that media type. I see no reason to &lt;br&gt;\ninterpret PUT any differently than GET in this regard.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n----- Original Message ----&lt;br&gt;\nFrom: mike amundsen &lt;&lt;a href=&quot;mailto:mamund@...&quot; _mce_href=&quot;mailto:mamund@...&quot;&gt;mamund@...&lt;/a&gt;&gt;&lt;br&gt;\nTo: Bryan Taylor &lt;&lt;a href=&quot;mailto:bryan_w_taylor@...&quot; _mce_href=&quot;mailto:bryan_w_taylor@...&quot;&gt;bryan_w_taylor@...&lt;/a&gt;&gt;&lt;br&gt;\nCc: &lt;a href=&quot;mailto:rest-discuss@yahoogroups.com&quot; _mce_href=&quot;mailto:rest-discuss@yahoogroups.com&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;&lt;br&gt;\nSent: Tue, April 12, 2011 5:58:22 PM&lt;br&gt;\nSubject: Re: [rest-discuss] PUT for partial update of an existing resource&lt;br&gt;\n&lt;br&gt;\nBryan:&lt;br&gt;\n&lt;br&gt;\nRegarding partial updates over HTTP, I do the following:&lt;br&gt;\n&lt;br&gt;\n1) When I want to replace an existing resource, I use PUT + ETag on&lt;br&gt;\nthe URI of the existing resource.&lt;br&gt;\n2) When I want to amend/repair an existing resource, I use PATCH +&lt;br&gt;\nETag on the URI of the existing resource.&lt;br&gt;\n&lt;br&gt;\nPUT&lt;br&gt;\nIn the case of #1, the entity body I transfer contains a&lt;br&gt;\nrepresentation that is a &quot;whole&quot; representation of the existing&lt;br&gt;\nresource. It may not have all the fields in the existing resource&lt;br&gt;\n(e.g. the resource id, the creation date, or other server-generated&lt;br&gt;\nvalues) but it is usually pretty easy to see that this entity&lt;br&gt;\nrepresents a resource. The media types I use for these entities is&lt;br&gt;\noften application/x-www-form-urlencoded, but I sometimes use&lt;br&gt;\napplication/xml, application/{my-media-type}+xml, or JSON&lt;br&gt;\nrepresentations, etc.&lt;br&gt;\n&lt;br&gt;\nPATCH&lt;br&gt;\nIn the case of #2, the entity body I transfer contains a&lt;br&gt;\nrepresentation of a &quot;DIFF&quot; format that has instructions on how to&lt;br&gt;\npartially modify the existing resource. It is, essentially, a bag of&lt;br&gt;\ninstructions on how to handle a modification of select elements of the&lt;br&gt;\nresource. It doesn&#39;t look anything like the existing resource. I&lt;br&gt;\ncurrently use a simple XML format as the custom media type for this&lt;br&gt;\nwork. I use this XML diff format without regard to the native (or&lt;br&gt;\nnegotiated) media type used for responses for the target resource.&lt;br&gt;\n&lt;br&gt;\nI&#39;ve also used the PATCH w/ DIFF pattern to apply to a set of&lt;br&gt;\nresources on the target serer (e.g. &quot;replace discount rate on all&lt;br&gt;\ntwelve instances of product X in the catalog&quot;, etc.).&lt;br&gt;\n&lt;br&gt;\nIn cases where the target server does not support the PATCH verb (but&lt;br&gt;\n_does_ support the application/diff+xml media type), the server will&lt;br&gt;\nsupport POST + checksum on a special URI (/products/;patch). This can&lt;br&gt;\nbe less desirable cache-wise, but works just fine for most cases.&lt;br&gt;\n&lt;br&gt;\nFINAL REMARKS&lt;br&gt;\nI keep these two separate (PUT=replace, PATCH=amend) primarily to make&lt;br&gt;\nit easier for devs to know what to expect for each case. When you want&lt;br&gt;\nto amend a view items for an existing resource, use PATCH and the DIFF&lt;br&gt;\nformat. When you want to simply replace an existing resource, just use&lt;br&gt;\nPUT and the usual entity formats.&lt;br&gt;\n&lt;br&gt;\nHopefully this gives you some ideas on how to handle your cases.&lt;br&gt;\n&lt;br&gt;\nmca&lt;br&gt;\n&lt;a href=&quot;http://amundsen.com/blog/&quot; _mce_href=&quot;http://amundsen.com/blog/&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;http://twitter.com@mamund&quot; _mce_href=&quot;http://twitter.com@mamund&quot;&gt;http://twitter.com@mamund&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;http://mamund.com/foaf.rdf#me&quot; _mce_href=&quot;http://mamund.com/foaf.rdf#me&quot;&gt;http://mamund.com/foaf.rdf#me&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n#RESTFest 2010&lt;br&gt;\n&lt;a href=&quot;http://rest-fest.googlecode.com&quot; _mce_href=&quot;http://rest-fest.googlecode.com&quot;&gt;http://rest-fest.googlecode.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nOn Tue, Apr 12, 2011 at 14:30, Bryan Taylor &lt;&lt;a href=&quot;mailto:bryan_w_taylor@...&quot; _mce_href=&quot;mailto:bryan_w_taylor@...&quot;&gt;bryan_w_taylor@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I&#39;ve been pondering whether or not it is OK to use PUT for a partial update of &lt;br&gt;\n&gt;a&lt;br&gt;\n&gt; resource. When I look at the HTTP spec it says &quot;The PUT method requests that &lt;br&gt;\n&gt;the&lt;br&gt;\n&gt; enclosed entity be stored under the    supplied Request-URI.&quot; This seems to be &lt;br&gt;\n&gt;a&lt;br&gt;\n&gt; little loosy goosy to me, as the entity is a represenation and the Request-URI&lt;br&gt;\n&gt; identifies a resource and so the thing I create (the resource) is logically&lt;br&gt;\n&gt; different than one particular representation of it. To illustrate this, &lt;br&gt;\nsuppose&lt;br&gt;\n&gt; my media type allows an optional create-timestamp field and my server supplies&lt;br&gt;\n&gt; the value using its own clock if the resource does not already exist. I might&lt;br&gt;\n&gt; want to allow PUT operations to do updates, but not allow them to include the&lt;br&gt;\n&gt; create-timestamp. In fact, I might explicitly define in the media type that &lt;br&gt;\nPUT&lt;br&gt;\n&gt; requests will be rejected if they include the create-timestamp.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I don&#39;t think this violates any requirement for PUT that I can find.&lt;br&gt;\n&gt; Specifically, I don&#39;t think I see anything that requires that a if I put&lt;br&gt;\n&gt; representation X to resource Y and follow it by a GET that I have to get back&lt;br&gt;\n&gt; the same representation. In fact, I don&#39;t think anything requires that if I &lt;br&gt;\nuse&lt;br&gt;\n&gt; PUT I have to support GET at all, let alone with the same media type, let &lt;br&gt;\nalone&lt;br&gt;\n&gt; with the same representation provided by PUT. All that I see required is that&lt;br&gt;\n&gt; PUT is idempotent and that the enclosed entity be stored under the    supplied&lt;br&gt;\n&gt; Request-URI, which doesn&#39;t seem (to me) to imply that it must be all that is&lt;br&gt;\n&gt; stored. I would think that each media type can define the semantics of PUT in&lt;br&gt;\n&gt; terms of how resource state is affected.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; If the above create-timestamp is OK, then why not PUT for wholesale partial&lt;br&gt;\n&gt; updates? If I create a car resource with an engine within its state and then I&lt;br&gt;\n&gt; PUT a new engine why can I not expect to store this engine under the original&lt;br&gt;\n&gt; car resource, so that a subsequent GET returns the car?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Sam Ruby in his blog&lt;br&gt;\n&gt; &lt;a href=&quot;http://intertwingly.net/blog/2008/02/15/Embrace-Extend-then-Innovate&quot; _mce_href=&quot;http://intertwingly.net/blog/2008/02/15/Embrace-Extend-then-Innovate&quot;&gt;http://intertwingly.net/blog/2008/02/15/Embrace-Extend-then-Innovate&lt;/a&gt; wrote&lt;br&gt;\n&gt; &quot;Having some servers interpret the removal of elements (such as content) as a&lt;br&gt;\n&gt; modification, and others interpret the requests in such a way that elided&lt;br&gt;\n&gt; elements are to be left alone is hardly uniform or self-descriptive.&quot; I think&lt;br&gt;\n&gt; this is easily disposed of. It isn&#39;t the server that interprets what to do, it&lt;br&gt;\n&gt; should be defined by the media type.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; What do other people think of PUT for partial updates?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Yahoo! Groups Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n------------------------------------&lt;br&gt;\n&lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit your group on the web, go to:&lt;br&gt;\n    &lt;a href=&quot;http://groups.yahoo.com/group/rest-discuss/&quot; _mce_href=&quot;http://groups.yahoo.com/group/rest-discuss/&quot;&gt;http://groups.yahoo.com/group/rest-discuss/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your email settings:&lt;br&gt;\n    Individual Email | Traditional&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings online go to:&lt;br&gt;\n    &lt;a href=&quot;http://groups.yahoo.com/group/rest-discuss/join&quot; _mce_href=&quot;http://groups.yahoo.com/group/rest-discuss/join&quot;&gt;http://groups.yahoo.com/group/rest-discuss/join&lt;/a&gt;&lt;br&gt;\n    (Yahoo! ID required)&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings via email:&lt;br&gt;\n    &lt;a href=&quot;mailto:rest-discuss-digest@yahoogroups.com&quot; _mce_href=&quot;mailto:rest-discuss-digest@yahoogroups.com&quot;&gt;rest-discuss-digest@yahoogroups.com&lt;/a&gt; &lt;br&gt;\n    &lt;a href=&quot;mailto:rest-discuss-fullfeatured@yahoogroups.com&quot; _mce_href=&quot;mailto:rest-discuss-fullfeatured@yahoogroups.com&quot;&gt;rest-discuss-fullfeatured@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from this group, send an email to:&lt;br&gt;\n    &lt;a href=&quot;mailto:rest-discuss-unsubscribe@yahoogroups.com&quot; _mce_href=&quot;mailto:rest-discuss-unsubscribe@yahoogroups.com&quot;&gt;rest-discuss-unsubscribe@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;br&gt;\n    &lt;a href=&quot;http://docs.yahoo.com/info/terms/&quot; _mce_href=&quot;http://docs.yahoo.com/info/terms/&quot;&gt;http://docs.yahoo.com/info/terms/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n\r\n--Boundary_(ID_nk1EPpZg4TqoDttXdbNTIw)--\r\n\n\r\n--Boundary_(ID_ZeNJNNSsIdffpHzgKyeqig)--\r\n\n"}}