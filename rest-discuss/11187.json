{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"w3i_HLXnxnHUh-AfraN1K_ICWdhfZ_92G8Z2m3KFUJXJO-KLPp2SHJ99kBQBxN8QYoF6LQwW055mqFKh9LPC8KGMn6q77cVe","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Designing URI for a subset","postDate":"1218634198","msgId":11187,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDc5OTMzMGMzMDgwODEzMDYyOW4xNTA3MzU0ZnhlYmYxMGNlZjVlMGIzNGI0QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGc3dDBhZitjMmpjQGVHcm91cHMuY29tPg==","referencesHeader":"PGc3dDBhZitjMmpjQGVHcm91cHMuY29tPg=="},"prevInTopic":11186,"nextInTopic":11188,"prevInTime":11186,"nextInTime":11188,"topicId":11184,"numMessagesInTopic":9,"msgSnippet":"... As Eric and Alex have said, there is nothing in this that isn t RESTful. The problem with it is to do with SEO: Some search engines simply don t index","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34831 invoked from network); 13 Aug 2008 13:30:00 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m56.grp.scd.yahoo.com with QMQP; 13 Aug 2008 13:30:00 -0000\r\nX-Received: from unknown (HELO nf-out-0910.google.com) (64.233.182.191)\n  by mta16.grp.scd.yahoo.com with SMTP; 13 Aug 2008 13:30:00 -0000\r\nX-Received: by nf-out-0910.google.com with SMTP id h3so1080728nfh.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 13 Aug 2008 06:29:58 -0700 (PDT)\r\nX-Received: by 10.210.66.1 with SMTP id o1mr11879780eba.135.1218634198201;\n        Wed, 13 Aug 2008 06:29:58 -0700 (PDT)\r\nX-Received: by 10.210.117.12 with HTTP; Wed, 13 Aug 2008 06:29:58 -0700 (PDT)\r\nMessage-ID: &lt;799330c30808130629n1507354fxebf10cef5e0b34b4@...&gt;\r\nDate: Wed, 13 Aug 2008 14:29:58 +0100\r\nTo: randalx &lt;randalx@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;g7t0af+c2jc@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;g7t0af+c2jc@...&gt;\r\nX-Google-Sender-Auth: a6359ffc6a9a4e55\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] Designing URI for a subset\r\nX-Yahoo-Group-Post: member; u=189321215; y=X7QsP2aEbeIYcF7QWoEqDKBprxJ5CNQwAQVEAVmPxz_Tbg3ItmvofZ1Z\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\nOn Tue, Aug 12, 2008 at 10:45 PM, randalx &lt;randalx@...&gt; wrote:\n&gt; Hi,\n&gt;\n&gt; I&#39;ve just started a new project and would very much like to follow\n&gt; RESTful principles. The problem I&#39;ve just encountered is regarding\n&gt; the best way to design my URI for data that is a subset of the parent\n&gt; resource and can be filtered by multiple parameters.\n&gt;\n&gt; For example lets say I have a collection of Books and I&#39;d like to\n&gt; optionally filter by Category and/or Year published.\n&gt;\n&gt; My first (probably not very restful idea) was to create something like:\n&gt; /books?category=scifi&year=2008\n\nAs Eric and Alex have said, there is nothing in this that isn&#39;t RESTful.\n\nThe problem with it is to do with SEO: Some search engines simply\ndon&#39;t index pages by query string. Which is why so many retail sites\nhave gone to the effort of producing SEO-friendly URIs in the last few\nyears.\n\n&gt; Then I thought about a hierarchy\n&gt; /books/{category}/{year}\n&gt; but then I would also need\n&gt; /books/{year}/{category}\n&gt; But this makes it seem like one category is a child of year or vice\n&gt; versa which isn&#39;t correct. Plus as I add filters I&#39;d need all sorts\n&gt; of combinations.\n\nAs Eric pointed out, /books/{category}/{year} and\n/books/{year}/{category} are synonymous (they refer to the same\nresource - although the ordering might be different).\n\nFirst question is: can you be certain that no categories will be\n&#39;year-like&#39;? That is to say, if you had a category of &#39;1999&#39;, how\nwould you distinguish the year from the category for a request URI of:\n\n/books/1999/2008\n\nAlso, it is harder to write the URI routing for such a case on the server.\n\n&gt; The other option I read about involves putting them at the same level\n&gt; separated by a comma or semicolon:\n&gt; /books/{year},{category}\n&gt; But then seems king of messy since it&#39;s possible to omit a filter and\n&gt; then I&#39;d have something like\n&gt; /books/,sci-fi\n&gt;\n&gt; So far the original query variable URI still seems to make the most\n&gt; sense to me. Does anybody have a better suggestion or opinion on how\n&gt; best to do this?\n&gt;\n&gt; Thanks for taking the time to read my post and I look forward to\n&gt; reading you opinions.\n&gt;\n&gt; Cheers,\n&gt; Randal\n\nI would decide what is the primary way that you want to break down the\nset of all books. Probably (but not necessarily) this will be\ncategory. If so, make /books/{category} your main routing as this will\nallow human users to easily edit the address bar of their browser to,\nsay:\n\n/books/scifi\nor\n/books/fantasy\netc\n\nPower users like this sort functionality (me, for one).\n\nNext, you can represent the year subdivision by enclosing it in square\nbrackets (as an example: choose your own preferred scheme), e.g.\n\n/books/scifi[2008]\nor\n/books/[2008] for all 2008 books of any category.\n\nYou can extend this kind of approach to more schemes. Let&#39;s say that\nyou paginate the results, you can represent this by, for example,\nenclosing the page in parentheses:\n\n/books/scifi(2)\nor\n/books/scifi[2008](2)\nor\n/books/[2008](2)\n\nMaybe you want to publisher on the URI as well:\n\n/books/scifi&lt;penguin&gt;\n\nThis is much easier to write URI routing for on the server. Of course,\nthere are only a limited set of characters you can use for this but\nyou get the general idea.\n\nI would reserve use of query string parameters for things like sorting\nor minor filtering:\n\n/books/scifi&lt;penguin&gt;[2008]?sort=price&rating=5\n\nOne thing to beware of from an SEO perspective is to not dilute your\npage ranking. Therefore, decide upon your canonical URI pattern and\nredirect to that as necessary. For example, let&#39;s say that you decide\nthat the following is canonical:\n\n/books/{category}[{year}]&lt;{publisher}&gt;({page})\n\nIf the representations are all the same, then the following non-canonical URIs:\n\n/books/scifi&lt;penguin&gt;[2008](2)\n/books/scifi[2008](2)&lt;penguin&gt;\n\nwould be permanently redirected:\n\nHTTP/1.1 301 Moved Permanently\nLocation: /books/scifi[2008]&lt;penguin&gt;(2)\n\nIf the representations differ, then you should use the\nContent-Location header to indicate the canonical URI (although I\ndon&#39;t know how well search engines support Content-Location).\n\nI want to emphasise that none of the above advice has anything to do\nwith RESTfulness. As far as REST is concerned, URIs are opaque. But\nthat doesn&#39;t mean we can&#39;t or shouldn&#39;t give our users a good, clean,\naddress space which is &#39;hackable&#39; (in a good way) and which search\nengines will rank well.\n\nRegards,\nAlan Dean\n\n"}}