{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"EWF38h4UVcjtSyOBqzAdIR3zJ0HJv5hKu-dnPyz1IRvKqu2dIw8OwswNL_y8wJLZMsZOu1FmkOTcTSD70nSNJEQ63fzKT08","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] User dependent Resources","postDate":"1315278842","msgId":17722,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBUFdfOG01aW9kN2JDYkV3VTAxczYyaHI1ZHV1UTBMYzlwWEdHblp1TE9WTnhySEtQQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEVDQzhDMTQxLUI2QjctNDY1Ri04NDAxLUNCREVFRkU2NjJGNkBnbWFpbC5jb20+","referencesHeader":"PGo0MGs4bitodDNvQGVHcm91cHMuY29tPgk8Q0FQV184bTVOVjZ1QkV0VFluVWFTS1o3N1JmPTBxWE1GN19iSktlTGJQdXhXek9yMm9nQG1haWwuZ21haWwuY29tPgk8Q0FQV184bTRBWVhPRTJBNj13RG12RTBMYmNxSCtkWV8yeVBzR1NVazNwTnFaODdSaStnQG1haWwuZ21haWwuY29tPgk8QkNGNDY0OUEtOUJCMy00QTZDLThBMkQtNTZDNzVGM0U1NkYzQGdtYWlsLmNvbT4JPENBUFdfOG01M3pzY2dKZVZEOGt3SnF4RE56TXlTQy1hZWdSUms5eDRFbnRHMkdFRDdiUUBtYWlsLmdtYWlsLmNvbT4JPENBTnFpWkpiRnRSdWVEVz1Oa0VETDRDVUhYY2ZzY3EtME1kd1BzQlo2Y2QwYVlWb0xXZ0BtYWlsLmdtYWlsLmNvbT4JPEVDQzhDMTQxLUI2QjctNDY1Ri04NDAxLUNCREVFRkU2NjJGNkBnbWFpbC5jb20+"},"prevInTopic":17721,"nextInTopic":17725,"prevInTime":17721,"nextInTime":17723,"topicId":17714,"numMessagesInTopic":12,"msgSnippet":"Dilip: seems like your comments are shifting from caching and authentication issues to authorization issues. this stuff is outside the boundaries of Fielding s","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 779 invoked from network); 6 Sep 2011 03:14:04 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m11.grp.sp2.yahoo.com with QMQP; 6 Sep 2011 03:14:04 -0000\r\nX-Received: from unknown (HELO mail-ww0-f45.google.com) (74.125.82.45)\n  by mta5.grp.sp2.yahoo.com with SMTP; 6 Sep 2011 03:14:04 -0000\r\nX-Received: by wwg9 with SMTP id 9so4650381wwg.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 05 Sep 2011 20:14:03 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.171.3 with SMTP id q3mr2464296wel.50.1315278842933; Mon,\n 05 Sep 2011 20:14:02 -0700 (PDT)\r\nX-Received: by 10.216.38.194 with HTTP; Mon, 5 Sep 2011 20:14:02 -0700 (PDT)\r\nIn-Reply-To: &lt;ECC8C141-B6B7-465F-8401-CBDEEFE662F6@...&gt;\r\nReferences: &lt;j40k8n+ht3o@...&gt;\n\t&lt;CAPW_8m5NV6uBEtTYnUaSKZ77Rf=0qXMF7_bJKeLbPuxWzOr2og@...&gt;\n\t&lt;CAPW_8m4AYXOE2A6=wDmvE0LbcqH+dY_2yPsGSUk3pNqZ87Ri+g@...&gt;\n\t&lt;BCF4649A-9BB3-4A6C-8A2D-56C75F3E56F3@...&gt;\n\t&lt;CAPW_8m53zscgJeVD8kwJqxDNzMySC-aegRRk9x4EntG2GED7bQ@...&gt;\n\t&lt;CANqiZJbFtRueDW=NkEDL4CUHXcfscq-0MdwPsBZ6cd0aYVoLWg@...&gt;\n\t&lt;ECC8C141-B6B7-465F-8401-CBDEEFE662F6@...&gt;\r\nDate: Mon, 5 Sep 2011 23:14:02 -0400\r\nX-Google-Sender-Auth: JbomxeET2ODsxT0-JTF7i6EAyqQ\r\nMessage-ID: &lt;CAPW_8m5iod7bCbEwU01s62hr5duuQ0Lc9pXGGnZuLOVNxrHKPA@...&gt;\r\nTo: Dilip Krishnan &lt;dilip.krishnan@...&gt;\r\nCc: Mike Kelly &lt;mike@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016363ba5f436b10904ac3d38cd\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] User dependent Resources\r\nX-Yahoo-Group-Post: member; u=69164307; y=RUvIfdWLkWkX1X3Whw_IxxwuLnIr8uGKm_h7WrNNDYpk\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--0016363ba5f436b10904ac3d38cd\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nDilip:\n\nseems like your comments are shifting from caching and authentication issues\nto authorization issues. this stuff is outside the boundaries of Fielding&#39;s\nREST model, but still (to me) interesting. i&#39;ll focus on those items for\nnow.\n\n1) my preference for unique URIs has nothing to do w/ security (authN or\nauthZ). I prefer unique URIs in order to keep clear separation of resource\nrepresentations primarily for improved caching accuracy.  Even in anonymous\nrequests, I still strive to use unique URIs and to prevent tunneling of\nmultiple content payloads through a single URI.\n\n2) &quot;What if we have resources categorized into taxonomies for e.g. business\nunits (/us/texas/sales) and these have authorization rules. How does model\nthis? especially given that taxonomies notoriously change.&quot;\n\nIf i understand your Q here, you&#39;re asking about how servers can map\nauthorization details to content once the request&#39;s identify has been\nestablished. I usually employ a rather simple authorization model: the URI\nalone. I usually map URIs to protocol actions (GET, PUT, POST, DELETE, etc.)\nand apply that &quot;permission&quot; to a user identify (or group of them).\n\nWhile it is helpful to use URIs that make applying authZ rules easy, that&#39;s\na server-side convenience that clients need not know about. On the\nimplementation detail side, applying a regexp to a URI works quite well  for\nme when checking authZ details. This works with a wide range of URIs,\nwhether they have easily discernible patterns or not. keeping the authZ\nde-coupled from the actual content *and* using an algorithm for checking the\nidentifiers (URIs) means future modifications to the  URI name space have a\nlimited impact on the overall system.\n\nalso, while it is possible invent URI namespaces that defy application of\nalgorithms like regexp in order to preform authZ, i stay away from adopting\nthese perverse cases. finally, since URIs are opaque to clients, when i\nstumble upon a case where the URIs are too difficult to work with (for any\nnumber of reasons) i simply change them and make the needed modifications to\ncaching and redirection rules to help existing client apps make the\ntransition. since hypermedia clients do not &quot;code to the URIs&quot; but instead\nrely on hypermedia affordances within responses, this approach works well.\n\n3) &quot;While I did assume that j-o-e in the uri contains identity, I see this\nas some form of possibly a unique\nuri&lt;http://en.wikipedia.org/wiki/Security_through_obscurity&gt; in\noption #1 or #2.&quot;\n\nFWIW, there is nothing in &quot;obscurity&quot; that i find useful in this case. my\nselection of URIs are often de-coupled from shared user identity to protect\nuser privacy, not improve security on the network.\n\nmca\nhttp://amundsen.com/blog/\nhttp://twitter.com@mamund\nhttp://mamund.com/foaf.rdf#me\n\n\n#RESTFest 2011 - Aug 18-20\nhttp://restfest.org\n\n\nOn Mon, Sep 5, 2011 at 22:38, Dilip Krishnan &lt;dilip.krishnan@...&gt;wrote:\n\n&gt;\n&gt;&gt; As I mentioned in the post, in option #3, the URI no longer accurately\n&gt;&gt; identifies the resource representation. The same URI now returns multiple\n&gt;&gt; resource representations. This is the only example I supplied where this is\n&gt;&gt; true.\n&gt;&gt;\n&gt;\n&gt; Agreed, I see your point about the uri having different representations\n&gt; based context. Couple of observations\n&gt;\n&gt; - What if we have resources categorized into taxonomies for e.g. business\n&gt; units (/us/texas/sales) and these have authorization rules. How does model\n&gt; this? especially given that taxonomies notoriously change.\n&gt; - This brings up a question on reliance on uri design. Seems like a smell\n&gt; to me when this happens.\n&gt;\n&gt;\n&gt;&gt; Possibly you assume that the appearance of the three characters &quot;j-o-e&quot;\n&gt;&gt; mean that the URI _contains_ identity information. This need not be the case\n&gt;&gt; at all. The URI could contain any set of characters and I would perfer it as\n&gt;&gt; long as that set of chracters resulted in a _unique_ URI (not necessarily at\n&gt;&gt; _descriptive_ URI).\n&gt;&gt;\n&gt;\n&gt; While I did assume that j-o-e in the uri contains identity, I see this as\n&gt; some form of possibly a unique uri&lt;http://en.wikipedia.org/wiki/Security_through_obscurity&gt; in\n&gt; option #1 or #2.\n&gt;\n&gt;\n&gt; If it&#39;s a private resource it&#39;s probably not intermediary cacheable anyway,\n&gt; since there will likely be auth involved on the server side. Visibility is\n&gt; going to suffer whatever happens, for me it&#39;s safest to stick to HTTP idioms\n&gt; as much as possible because it keeps the complexity &#39;on the network&#39;.\n&gt;\n&gt;\n&gt; It seems like in addition to visibility, the server side needs to protect\n&gt; the resources regardless of the option we pick.\n&gt;\n&gt; - Return user-specific response from /my-tasks; mark it as privately\n&gt; cacheable and include Content-Location linking to a specific resource (could\n&gt; make use of the html5 history API to reflect the more specific URI in the\n&gt; browser location bar)\n&gt;\n&gt; - Return redirect from /my-tasks; mark is as privately cacheable with a\n&gt; longish max-age (this will prevent the subsequent &#39;round tripping&#39;\n&gt; associated with the redirect method)\n&gt;\n&gt;\n&gt; Interesting ideas, it seems like a good compromise. I think all of this\n&gt; brings up the general question on how does one model authentication and\n&gt; authorization without relying on security by obscurity to protect &quot;private&quot;\n&gt; resources. What is typically considered good form in these kinds of\n&gt; situations; especially in situations where resources need to rely on open\n&gt; id/oauth providers external to the system in question.\n&gt;\n&gt;\n&gt; Regards,\n&gt; Dilip Krishnan\n&gt; dilip.krishnan@...\n&gt;\n&gt;\n\r\n--0016363ba5f436b10904ac3d38cd\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nDilip:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;seems like your comments are shifting from cachin=\r\ng and authentication issues to authorization issues. this stuff is outside =\r\nthe boundaries of Fielding&#39;s REST model, but still (to me) interesting.=\r\n i&#39;ll focus on those items for now.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1) my pre=\r\nference for unique URIs has nothing to do w/=A0security=A0(authN or authZ).=\r\n I prefer unique URIs in order to keep clear separation of resource represe=\r\nntations primarily for improved caching accuracy. =A0Even in anonymous requ=\r\nests, I still strive to use unique URIs and to prevent tunneling of multipl=\r\ne content payloads through a single URI.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2) &quot=\r\n;What if we have resources categorized into taxonomies for e.g. business un=\r\nits (/us/texas/sales) and these have authorization rules. How does model th=\r\nis? especially given that taxonomies=A0notoriously=A0change.&quot;&lt;/div&gt;\n&lt;d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If i understand your Q here, you&#39;re asking about how =\r\nservers can map authorization details to content once the request&#39;s ide=\r\nntify has been established. I usually employ a rather simple authorization =\r\nmodel: the URI alone. I usually map URIs to protocol actions (GET, PUT, POS=\r\nT, DELETE, etc.) and apply that &quot;permission&quot; to a user identify (=\r\nor group of them). =A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;While it is helpful to use=\r\n URIs that make applying authZ rules easy, that&#39;s a server-side=A0conve=\r\nnience=A0that clients need not know about. On the implementation detail sid=\r\ne, applying a regexp to a URI works quite well =A0for me when checking auth=\r\nZ details. This works with a wide range of URIs, whether they have easily=\r\n=A0discernible=A0patterns or not. keeping the authZ de-coupled from the act=\r\nual content *and* using an algorithm for checking the identifiers (URIs) me=\r\nans future modifications to the =A0URI name space have a limited impact on =\r\nthe overall system.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;also, while it is possible in=\r\nvent URI namespaces that defy application of algorithms like regexp in orde=\r\nr to preform authZ, i stay away from adopting these perverse cases. finally=\r\n, since URIs are opaque to clients, when i stumble upon a case where the UR=\r\nIs are too difficult to work with (for any number of reasons) i simply chan=\r\nge them and make the needed modifications to caching and redirection rules =\r\nto help existing client apps make the transition. since hypermedia clients =\r\ndo not &quot;code to the URIs&quot; but instead rely on hypermedia affordan=\r\nces within=A0responses, this approach works well.&lt;/div&gt;\n&lt;div&gt;=A0=A0=A0&lt;/div=\r\n&gt;&lt;div&gt;3) &quot;While I did assume that j-o-e in the uri contains identity, =\r\nI see this as some form of=A0&lt;a href=3D&quot;http://en.wikipedia.org/wiki/Securi=\r\nty_through_obscurity&quot; target=3D&quot;_blank&quot;&gt;possibly a unique uri&lt;/a&gt;=A0in opti=\r\non #1 or #2.&quot;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;FWIW, there is nothing in &quo=\r\nt;obscurity&quot; that i find useful in this case. my selection of URIs are=\r\n often de-coupled from shared user identity to protect user privacy, not im=\r\nprove security on the network.=A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;mca&lt;br&gt;&lt;a href=\r\n=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/&lt;=\r\n/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://twitter.com&quot; target=3D&quot;_blank&quot;&gt;http://twitter.com&lt;=\r\n/a&gt;@mamund&lt;br&gt;&lt;a href=3D&quot;http://mamund.com/foaf.rdf#me&quot; target=3D&quot;_blank&quot;&gt;h=\r\nttp://mamund.com/foaf.rdf#me&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;#RESTFest 2011 - Aug 18-20&lt;br&gt;=\r\n&lt;a href=3D&quot;http://restfest.org&quot; target=3D&quot;_blank&quot;&gt;http://restfest.org&lt;/a&gt;&lt;b=\r\nr&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Sep 5, 2011 at 22:38, Dilip K=\r\nrishnan &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:dilip.krishnan@...&quot;&gt;d=\r\nilip.krishnan@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail=\r\n_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:=\r\n1ex;&quot;&gt;\n&lt;div style=3D&quot;word-wrap:break-word&quot;&gt;&lt;div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;blockquo=\r\nte type=3D&quot;cite&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;blockquote class=3D&quot;gmail_quot=\r\ne&quot; style=3D&quot;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:0=\r\n.8ex;border-left-width:1px;border-left-color:rgb(204, 204, 204);border-left=\r\n-style:solid;padding-left:1ex&quot;&gt;\n&lt;div&gt;&lt;br&gt;\n\n\n\n\nAs I mentioned in the post, i=\r\nn option #3, the URI no longer accurately identifies the resource represent=\r\nation. The same URI now returns multiple resource representations. This is =\r\nthe only example I supplied where this is true.&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;/=\r\nblockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Agreed, I see your point about the uri=\r\n having different representations based context. Couple of observations&lt;/di=\r\nv&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- What if we have resources categorized into taxonomi=\r\nes for e.g. business units (/us/texas/sales) and these have authorization r=\r\nules. How does model this? especially given that taxonomies=A0notoriously=\r\n=A0change.&lt;/div&gt;\n&lt;div&gt;- This brings up a question on reliance on uri design=\r\n. Seems like a smell to me when this happens.=A0&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br=\r\n&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;blockquote class=3D&quot;=\r\ngmail_quote&quot; style=3D&quot;margin-top:0px;margin-right:0px;margin-bottom:0px;mar=\r\ngin-left:0.8ex;border-left-width:1px;border-left-color:rgb(204, 204, 204);b=\r\norder-left-style:solid;padding-left:1ex&quot;&gt;\n&lt;div&gt;&lt;div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;=\r\ndiv&gt;&lt;div&gt;Possibly you assume that the appearance of the three characters &q=\r\nuot;j-o-e&quot; mean that the URI _contains_ identity information. This nee=\r\nd not be the case at all. The URI could contain any set of characters and I=\r\n would perfer it as long as that set of chracters resulted in a _unique_ UR=\r\nI (not necessarily at _descriptive_ URI). =A0&lt;/div&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquot=\r\ne&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;While I did assume that j-o-e in =\r\nthe uri contains identity, I see this as some form of=A0&lt;a href=3D&quot;http://e=\r\nn.wikipedia.org/wiki/Security_through_obscurity&quot; target=3D&quot;_blank&quot;&gt;possibly=\r\n a unique uri&lt;/a&gt;=A0in option #1 or #2.&lt;div class=3D&quot;im&quot;&gt;\n&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div&gt;If it&#39;s a p=\r\nrivate resource it&#39;s probably not intermediary cacheable anyway, since =\r\nthere will likely be auth involved on the server side. Visibility is going =\r\nto suffer whatever happens, for me it&#39;s safest to stick to HTTP idioms =\r\nas much as possible because it keeps the complexity &#39;on the network&#39=\r\n;.&lt;/div&gt;\n&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;It seems like in addi=\r\ntion to visibility, the server side needs to protect the resources regardle=\r\nss of the option we pick.=A0&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockqu=\r\note type=3D&quot;cite&quot;&gt;\n&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div&gt;- Return user-specific r=\r\nesponse from /my-tasks; mark it as privately cacheable and include Content-=\r\nLocation linking to a specific resource (could make use of the html5 histor=\r\ny API to reflect the more specific URI in the browser location bar)&lt;/div&gt;\n&lt;=\r\n/div&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div=\r\n&gt;- Return redirect from /my-tasks; mark is as privately cacheable with a lo=\r\nngish max-age (this will prevent the subsequent &#39;round tripping&#39; as=\r\nsociated with the redirect method)&lt;/div&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Interesting ideas, it seems like a good compromise. I thi=\r\nnk all of this brings up the general question on how does one model authent=\r\nication and authorization without relying on security by obscurity to prote=\r\nct &quot;private&quot; resources. What is typically considered good form in=\r\n these kinds of situations; especially in situations where resources need t=\r\no rely on open id/oauth providers external to the system in question.&lt;/div&gt;=\r\n\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;=\r\n&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Dilip Krish=\r\nnan&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;mailto:dilip.krishnan@...&quot; target=3D&quot;_blank&quot;=\r\n&gt;dilip.krishnan@...&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/bloc=\r\nkquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--0016363ba5f436b10904ac3d38cd--\r\n\n"}}