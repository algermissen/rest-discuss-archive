{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"-9v_-D7R3KLRm-ykHVFxbKg0gyncyliDTnPh5XW9Kta_SBOxDaeveWUoKo5abDTL0DosNu-GKeC8jb_f0vGCyPjVTGpSUtJnM_zKkS5Arz4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?","postDate":"1251645133","msgId":13211,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDFDMDg4RDIxLTYxQjMtNEQ0NS1CQUI5LUNCNEQ0NzEyMUEzM0BtYWMuY29tPg==","inReplyToHeader":"PDU0NDhjZmQ5MDkwODI4MTkyNXkyMzNlOGI3dTVjZGMyMWY0MWI1NjJkNjhAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDc3RTlCQTVBLTBCRkItNDJGQi04NjQzLTRCMzhERUU3OTYwREBpbm5vcS5jb20+IDw2NDU2RUM3MC05RjNDLTRFNkEtOTIxMy04NENBODRERDI2RjhAbWFjLmNvbT4gPDU0NDhjZmQ5MDkwODI4MTkyNXkyMzNlOGI3dTVjZGMyMWY0MWI1NjJkNjhAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13210,"nextInTopic":13409,"prevInTime":13210,"nextInTime":13212,"topicId":11221,"numMessagesInTopic":44,"msgSnippet":"... Another possible phrase to get rid of type or kind is client expectations . The specification of the linking semantics cause the client to have","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26047 invoked from network); 30 Aug 2009 15:12:41 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.re1.yahoo.com with QMQP; 30 Aug 2009 15:12:41 -0000\r\nX-Received: from unknown (HELO asmtpout021.mac.com) (17.148.16.96)\n  by mta3.grp.sp2.yahoo.com with SMTP; 30 Aug 2009 15:12:41 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.5.36] (nmd.sbx10788.miamioh.wayport.net [98.99.10.102])\n by asmtp021.mac.com\n (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec 16 2008; 32bit))\n with ESMTPSA id &lt;0KP7000GK3KD7L70@...&gt; for\n rest-discuss@yahoogroups.com; Sun, 30 Aug 2009 08:12:17 -0700 (PDT)\r\nCc: Stefan Tilkov &lt;stefan.tilkov@...&gt;,\n REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;1C088D21-61B3-4D45-BAB9-CB4D47121A33@...&gt;\r\nTo: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nIn-reply-to: &lt;5448cfd90908281925y233e8b7u5cdc21f41b562d68@...&gt;\r\nDate: Sun, 30 Aug 2009 11:12:13 -0400\r\nReferences: &lt;77E9BA5A-0BFB-42FB-8643-4B38DEE7960D@...&gt;\n &lt;6456EC70-9F3C-4E6A-9213-84CA84DD26F8@...&gt;\n &lt;5448cfd90908281925y233e8b7u5cdc21f41b562d68@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?\r\nX-Yahoo-Group-Post: member; u=289191104; y=nBL-S9xgJCoOUaEQOShO_T-FxFl1X2bNadtgMznCZikT3WnIm5gi5-Is\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Aug 28, 2009, at 10:25 PM, Benjamin Carlyle wrote:\n\n&gt; Stefan,\n&gt;\n&gt; On Sep 2, 2008, at 1:41 AM, Stefan Tilkov wrote:\n&gt;&gt; What do you call the concept of &quot;classes&quot; or &quot;types&quot; of resources in\n&gt;&gt; your RESTful designs? E.g. when you decide to turn each &quot;customer&quot;\n&gt;&gt; into its own identifiable resource - http://example.com/customers/ \n&gt;&gt; 1234\n&gt;&gt; - what does http://example.com/customers/{id} describe? Both  \n&gt;&gt; &quot;resource\n&gt;&gt; class&quot; and &quot;resource type&quot; would work, but don&#39;t seem really\n&gt;&gt; convincing.\n&gt;\n&gt; Resources all have the same type in a formal sense. The same methods\n&gt; are legal, and the same responses can be expected. The media types\n&gt; used are standard throughout the architecture. However, different\n&gt; resources have different semantics.\n&gt;\n&gt; The discovery of semantics from a client perspective always comes from\n&gt; context. The URL might come from a file on disk, with associated\n&gt; semantics such as &quot;home page&quot; or &quot;banking site&quot;. In a hypermedia\n&gt; system the semantics will be encoded into representations returned\n&gt; from other resources via hyperlinks. Again the context performs the\n&gt; function of supplying semantics, often semantics relative to these\n&gt; other resources. The uniform interface constraint requires that the\n&gt; semantics be either human/AI-readable and encoded into free-form\n&gt; content or machine-readable and encoded into some standard somewhere\n&gt; that says what semantics can be implied from the context of the link.\n&gt; For example, HTML contains &quot;a&quot; elements with supporting human-readable\n&gt; semantics. Atom contains links with attributes like rel=&quot;self&quot; to\n&gt; indicate the semantics that the client can expect from the linked\n&gt; resource. These standard machine-readable context semantics play some\n&gt; of the role in the architecture that a service contract might have\n&gt; played in a classical SOA.\n&gt;\n&gt; The fact that you are talking about a customer resource should\n&gt; indicate that the client is aware of these &quot;customer&quot; semantics, and\n&gt; more: They should be more or less aware of which customer the resource\n&gt; is talking about, or at least which customer in relation to some other\n&gt; resource. It might be the &quot;joe blo&quot; customer, or the &quot;customer for\n&gt; invoice 1234&quot;. Those are the semantics that the client should have\n&gt; in-hand in relation to the resource.\n&gt;\n&gt; From a client or a server perspective I would be perfectly happy\n&gt; talking a &quot;customer resource&quot;. That is at least the &quot;kind&quot; of resource\n&gt; it is... but perhaps even kind is not the right term.\n\nAnother possible phrase to get rid of &quot;type&quot; or &quot;kind&quot; is &quot;client\nexpectations&quot;. The specification of the linking semantics cause\nthe client to have certain expectations about the effect of interactions\nwith a given resource. These expectations constitute what is\noften called &quot;resource semantics&quot;.\n\nA related set of resource semantics (discoverable at run time\nthrough hypermedia) constitutes a &quot;REST API&quot;. This is probably\nthe reason why it is common to document REST APIs by\nlisting resource &quot;kinds&quot;.\n\n----\n\nWhat I am currently trying to get my head around is this:\n\nWhen viewing a REST API as essentially a set of link semantics how\ncan we version such APIs? And do we need to version them at all?\n\nI looked at the Atom Publishing Protocol and it does not say that it\nis a particular version. Suppose we&#39;d add another top level document\ntype that brings in new capabilities - would that lead to APP 2.0? And\nhow would one communicate this to clients?\n\n\n\n\nJan\n\n\n&gt; There is an\n&gt; element of classification to the concept, but primarily we are talking\n&gt; about the semantics and therefore what kind of transactions this\n&gt; resource might become involved with as compared to other resources. I\n&gt; think that if we were to get formal we might talk about type\n&gt; describing the interface of the resource, which of course is standard\n&gt; across all resources. All resources have the same type. On the other\n&gt; hand, perhaps they do not have the same class. In the same sense that\n&gt; several different Java classes might implement the same interface,\n&gt; perhaps we could talk about different classes of resource implementing\n&gt; the same uniform interface.\n&gt;\n&gt; Still, I guess class doesn&#39;t ring true to me either on a gut level...\n&gt; and formality may best be avoided :) In that case we might again fall\n&gt; back to a less formal &quot;kind&quot; terminology, or similar.\n&gt;\n&gt; Benjamin.\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}