{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":75094910,"authorName":"bhaugen32","from":"&quot;bhaugen32&quot; &lt;bhaugen32@...&gt;","profile":"bhaugen32","replyTo":"SENDER","senderId":"e4XlT9H3bsyrrB1PYaObJNgEYS_055AMzwqz1ZQqYr9gvnQiLdQPtPHi14JZAbX20FRGev01j_rH_PHS3WQyyxsBz1NAXyjc24I","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Idea: Simple Web Service Behaviour Language","postDate":"1013781793","msgId":729,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE0ajRmMStvdW5iQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNDNkMzOTBCLjExNEEzRjhAcHJlc2NvZC5uZXQ+"},"prevInTopic":728,"nextInTopic":730,"prevInTime":728,"nextInTime":730,"topicId":725,"numMessagesInTopic":41,"msgSnippet":"I have been lurking on the REST conversations since Mark Baker started them on FoRK, and even before then on the distributed objects mailing list. I think","rawEmail":"Return-Path: &lt;bhaugen32@...&gt;\r\nX-Sender: bhaugen32@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 15 Feb 2002 14:03:15 -0000\r\nReceived: (qmail 50526 invoked from network); 15 Feb 2002 14:03:14 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m8.grp.snv.yahoo.com with QMQP; 15 Feb 2002 14:03:14 -0000\r\nReceived: from unknown (HELO n12.groups.yahoo.com) (216.115.96.62)\n  by mta1.grp.snv.yahoo.com with SMTP; 15 Feb 2002 14:03:14 -0000\r\nReceived: from [216.115.96.177] by n12.groups.yahoo.com with NNFMP; 15 Feb 2002 14:03:14 -0000\r\nDate: Fri, 15 Feb 2002 14:03:13 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: Idea: Simple Web Service Behaviour Language\r\nMessage-ID: &lt;a4j4f1+ounb@...&gt;\r\nIn-Reply-To: &lt;3C6C390B.114A3F8@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 6968\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;bhaugen32&quot; &lt;bhaugen32@...&gt;\r\nX-Yahoo-Group-Post: member; u=75094910\r\nX-Yahoo-Profile: bhaugen32\r\n\r\nI have been lurking on the REST conversations since Mark Baker \nstarted them on FoRK, and even before then on the distributed objects \nmailing list.\n\nI think you-all are changing minds all over the place, and you have \nmy sincere thanks and congratulations.\n\nI have been trying to pick my time to try to join the conversation.  \nAfter a few false starts, maybe this SWSBL topic is a good opening\n\nI really like Paul Prescod&#39;s recent articles. He&#39;s starting to try to \nwork with business concepts like Purchase Orders, which are part of \nmy domain.  \n\nHowever, I see this also happen a lot in other Web Service examples:  \nThe business logic behind the examples is often not very realistic, \nand so the solutions may not be realistic either.  \n\nI think I can provide some realistic business examples, and learn \nsomething about how to model them as REST resources.\n\nI&#39;m not sure how deep you-call want to get into business processes, \nbut I have some time to discuss the issues in the next week or two \nand so will put the question on the table now.  Please forgive the \nlong message.  It contains some info on where I&#39;m coming from, some \ncomments on business processes, and a couple of RESTification \nattempts.\n\nI&#39;m coming from heavy involvement with ebXML and its follow-on \nactivities in eBTWG:\nhttp://www.ebxml.org\nhttp://www.ebtwg.org\n\nThese groups are trying to define standards for B2B collaborations.\nThe background of many of the participants is traditional EDI, which \nmeans peer-to-peer document transfer.  They assume that the documents \njust flow over the wire from one internal business system to another \nand never surface as Web resources.  Thus you will see ebXML projects \nlike the Registry act like private database systems when they would \nhave better as catalogs of Web resources.  (Similar to UDDI.)\n\nMy goal in joining your discussion is to take some of the business \nconcepts from ebXML and RESTify them.  I hope to influence ebXML and \nrelated efforts to move in the REST direction.\n\nI find it fairly natural to model business objects as suites of Web \nresources.  (Paul Prescod:  refering to one of your recent opponents \non the xml-dev list, I think it is perfectly feasible to model almost \neverything in any business application system (ERP, CRM, etc.) in Web \nresources.) \n\nI&#39;m having some trouble getting the business *conversations* \nRESTified correctly, though, and maybe you can help.\n\nFor example:\nThe business protocol for a Order is Offer-Acceptance.\nA Purchase Order is an offer to buy.  \nTo be binding, it must be explicitly accepted by the supplier.\nThe offer must have a time constraint - it is not good forever.  \n\nSo a Purchase Order as a Web resource is also an element in a dialog \nbetween Customer and Supplier.  \n\nThe offer-acceptance protocol for a Purchase Order in RosettaNet and \nebXML includes stages of requesting and responding messages with \ntimeouts:\n1. The Customer places the Purchase Order.\n2. The Supplier sends a receiptAcknowledgment quickly signifying both \nreceipt and schema validation.\n3. The Supplier sends an acceptance or rejection (for which they \nwould typically have more time).  Acceptance means contract formation \nor binding - a Purchase Order is a type of contract.\n4. The Customer sends a receiptAck of the acceptance or rejection.\n\nThere are reasons for these signals.  If the receiptAck times out, \nthe Customer may retry or go to another Supplier without wasting any \nmore time.  If the acceptance times out, the offer failed.  B2B \norders are usually not like consumer ones where the customer prepays \nusing a credit card.  B2B orders are often postpaid, on credit.  So \nbusiness state alignment is important:  meaning both parties must \nagree explicitly and deterministically on whether the order was \naccepted (or not).\n\n&quot;Business state alignment&quot; implies that a Purchase Order has a state \nmodel:  for example, pending, accepted, rejected, fulfilled, etc.\n(That was not a complete list of states, by the way.)\n\nAllowed actions will be constrained by PO state:  for example, a PO \nin the &quot;fulfilled&quot; state cannot be canceled; a &quot;rejected&quot; order \nshould not be fulfilled.  In other words, orchestration of actions is \nconditioned by resource state.  (Not by message sequence.)\n\nebXML (among other initiatives) is attempting to express the \norchestration rules as XML documents.  Which means the business \nprocess can become a Web resource as well as the business objects.  I \nthink this is very similar to what Paul is trying to do with SWSBL, \nexcept that (1) it may be more complex than what you have in mind, \nand (2) the ebXML guys for the most part do not have a Web resource \nmodel in their collective mind.\n\nOk, one feeble attempt to model this all as hierarchies of REST \nresources:\n\nProductCatalog\n  Product102\nPurchaseOrders\n  PO203\n    OrderLines\n    Deliveries\n    Payments\n    TransactionLog\n      NegotiationTransactions\n      DeliveryTransactions\n      PaymentTransactions\n      ProblemResolutionTransactions\nPurchasingProcess\n  ActivityModel\n    ProcessStages\n      NegotiationStage\n      DeliveryStage\n      PaymentStage\n      ProblemResolution\n  ObjectModels\n    PurchaseOrder\n      StateModel\n    Delivery\n      StateModel\n    Payment\n      StateModel\n  TransactionPatterns\n    Offer-Acceptance\n    Notify-Confirm\n\n(Note:  Notify-Confirm is the protocol for deliveries and payments.)\n\nMy current vague idea for RESTifying the conversations is for the \nparticipants to Post or Put documents to the TransactionLog, which \nwill process them according to the state of the related business-\nobject-resource (following the rules of the Purchasing Process) and \npossibly change the state of the resource accordingly, while adding \nthe document to the TransactionLog.\n\nTimeouts and acks might be Notifications.\n\nOne really interesting issue is where do the Web resources live?  \nThat is, who hosts them: Customer, Supplier or trusted 3rd party?  \nThe realities of business say: \n(a) both parties want their own copies in their own internal systems \nand neither fully trusts the other to maintain an &quot;official&quot; version;\n(b) trading partner relationships are usually unbalanced, that is, \none partner is dominant, and the dominant partner would most \nnaturally host the Web resources.\n\nAll three of the possible hosts can be found in practice:\n3rd parties like CommerceOne and Ariba;\ncustomer hosts like big companies who publish Web orders for their \nsmaller suppliers;\nbig suppliers who provide Web ordering facilities for their customers.\n\nI have not seen the business processes as Web resources yet.\n\nHere is another attempt to RESTify some business objects, assembled \nby one of my business partners from anonymized real-world cake mix \ncontracts:\nhttp://homepage.interaccess.com/~linkage/Contracts/CakeMix.htm\n\nDon&#39;t look critically at the HTML - the author is a supply chain \nmanager, not a technical person.  Just look at how easy he found it \nto RESTify this stuff.  \n\n\n"}}