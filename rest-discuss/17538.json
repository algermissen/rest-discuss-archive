{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":322284523,"authorName":"aakash dharmadhikari","from":"aakash dharmadhikari &lt;aakashd@...&gt;","profile":"aakashdharma","replyTo":"SENDER","senderId":"4BsdsH2Ij2PdFEjhOCO7-UhXhbLbc7y1DTsSsl_r8YoA-niSAd4dv7r2jAiDfiVkTDxB4RvaWg6LAsYVeqyeUeRa7VLfL-r-yms0KQWLbA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Should GET be used if request has unintended side effects","postDate":"1305780962","msgId":17538,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRERDRBMkUyLjgwNzA4MDZAZ21haWwuY29tPg==","inReplyToHeader":"PEJBTkxrVGludU1DelZ1S3hhaHZyY0E3RUptaFBZMXZKSHB3QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDRERDE2ODU1LjgwNzA5MDRAZ21haWwuY29tPgk8NjBFNzIwRDctOUYxNy00NzcxLThDNTQtMkQ0NkM4NjQyM0QzQGFzdHJvLmdsYS5hYy51az4JPDRERDJCRTg0LjkwMjA4MDhAZ21haWwuY29tPgk8QkFOTGtUaWtKK2dCbi1oYjZ0UjAzdStSN1ZvPWN4REFheXdAbWFpbC5nbWFpbC5jb20+CTw0REQyQzE4Qy45MDMwMDAxQGdtYWlsLmNvbT4JPEJBTkxrVGluVllOTEJ6TkNGQTFLTDZVZ2JQS1NHR1ZOMjhnQG1haWwuZ21haWwuY29tPgk8NEREMzQ0NzMuODAxMDYwNUBnbWFpbC5jb20+IDxCQU5Ma1RpbnVNQ3pWdUt4YWh2cmNBN0VKbWhQWTF2Skhwd0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17536,"nextInTopic":0,"prevInTime":17537,"nextInTime":17539,"topicId":17527,"numMessagesInTopic":11,"msgSnippet":"Thanks Will, In this approach, the GET request does not remain idempotent and it changes the state of the system (unintentional side effect); but that s ","rawEmail":"Return-Path: &lt;aakashd@...&gt;\r\nX-Sender: aakashd@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 3465 invoked from network); 19 May 2011 04:56:09 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m13.grp.re1.yahoo.com with QMQP; 19 May 2011 04:56:09 -0000\r\nX-Received: from unknown (HELO mail-pv0-f175.google.com) (74.125.83.175)\n  by mta1.grp.re1.yahoo.com with SMTP; 19 May 2011 04:56:09 -0000\r\nX-Received: by pvc30 with SMTP id 30so1064478pvc.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 May 2011 21:56:08 -0700 (PDT)\r\nX-Received: by 10.142.9.36 with SMTP id 36mr1520076wfi.125.1305780967849;\n        Wed, 18 May 2011 21:56:07 -0700 (PDT)\r\nReturn-Path: &lt;aakashd@...&gt;\r\nX-Received: from Precious.local ([122.179.89.17])\n        by mx.google.com with ESMTPS id k7sm1989573wfa.14.2011.05.18.21.56.04\n        (version=SSLv3 cipher=OTHER);\n        Wed, 18 May 2011 21:56:06 -0700 (PDT)\r\nMessage-ID: &lt;4DD4A2E2.8070806@...&gt;\r\nDate: Thu, 19 May 2011 10:26:02 +0530\r\nOrganization: C42 Engineering\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.17) Gecko/20110414 Lightning/1.0b2 Thunderbird/3.1.10\r\nMIME-Version: 1.0\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;4DD16855.8070904@...&gt;\t&lt;60E720D7-9F17-4771-8C54-2D46C86423D3@...&gt;\t&lt;4DD2BE84.9020808@...&gt;\t&lt;BANLkTikJ+gBn-hb6tR03u+R7Vo=cxDAayw@...&gt;\t&lt;4DD2C18C.9030001@...&gt;\t&lt;BANLkTinVYNLBzNCFA1KL6UgbPKSGGVN28g@...&gt;\t&lt;4DD34473.8010605@...&gt; &lt;BANLkTinuMCzVuKxahvrcA7EJmhPY1vJHpw@...&gt;\r\nIn-Reply-To: &lt;BANLkTinuMCzVuKxahvrcA7EJmhPY1vJHpw@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------010808010703060407040402&quot;\r\nFrom: aakash dharmadhikari &lt;aakashd@...&gt;\r\nSubject: Re: [rest-discuss] Should GET be used if request has unintended side\n effects\r\nX-Yahoo-Group-Post: member; u=322284523; y=4uFDf8CgxgEIax8rMYGLImTGEtY1DjZ9sMAr2v4lA4KaRErnH-mI3qwM1Q0-9CRh8FSXNzsEv3zu5Os\r\nX-Yahoo-Profile: aakashdharma\r\n\r\n\r\n--------------010808010703060407040402\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nThanks Will,\n\nIn this approach, the GET request does not remain idempotent and it \nchanges the state of the system (unintentional side effect); but that&#39;s \nperfectly fine as we are not only restricting certain HTTP rules even \ntwisting others to fit the REST way. The resource here is new_items, by \nwhatever definition server chooses to believe.\n\nThis is pretty much what I thought as well, except I was not sure if \nthis was the right way to look at things. Thanks again.\n\nRegards,\nAakash Dharmadhikari\nhttp://c42.in/\n\n\nOn 18/05/11 11:24 PM, Will Hartung wrote:\n&gt;\n&gt;\n&gt;\n&gt; On Tue, May 17, 2011 at 9:00 PM, aakash dharmadhikari \n&gt; &lt;aakashd@... &lt;mailto:aakashd@...&gt;&gt; wrote:\n&gt;\n&gt;     2. I have gone through the RFC2616 & some resources for REST; just to\n&gt;\n&gt;     find that HTTP talks about user&#39;s intention & REST talks about server\n&gt;     state. When we use both of them together, there is a lot of confusion\n&gt;     about which prevails over the other.\n&gt;\n&gt;\n&gt; There is no &quot;conflict&quot; here. REST is REST. HTTP is HTTP. REST != HTTP. \n&gt; There are many, unRESTful properties to HTTP and ways to use HTTP in \n&gt; an unRESTful manner.\n&gt;\n&gt; If you wish to build a REST system on top of HTTP, then you need to \n&gt; constrain your use of HTTP so that it stays within the boundaries of a \n&gt; REST architecture.\n&gt;\n&gt; Also, there are several examples of resources that use GET but do not \n&gt; return the same payload each time.\n&gt;\n&gt; GET /current_temperature\n&gt; GET /random_number\n&gt; GET /new_items\n&gt;\n&gt; The premise is that you are not using GET to change state. If state \n&gt; changes on the server, then that&#39;s the servers problem. That&#39;s an \n&gt; issue for the developer of the service, but it doesn&#39;t change the \n&gt; contract for the client.\n&gt;\n&gt; If GET /new_items returns a list of items and then you call it again \n&gt; and get an empty list (because the server implementation feels that \n&gt; since it served the items up once, then the items are no longer \n&gt; &quot;new&quot;), well that&#39;s the server&#39;s problem. Not the clients.\n&gt;\n&gt; You do GET /new_items, and you got all of the &quot;new items&quot;. You didn&#39;t \n&gt; call GET /new_items to change the state of the items from &quot;new&quot; to \n&gt; &quot;not new&quot;, you called it to get &quot;new items&quot; using whatever criteria \n&gt; the server set for &quot;new-ness&quot;, in contrast to whatever your definition \n&gt; of &quot;new-ness&quot; is. It&#39;s the servers resource, not yours. It could give \n&gt; you the same or growing list all day long and reset abruptly at 12am.\n&gt;\n&gt; Now, you can question the wisdom of the server implementation, but \n&gt; that&#39;s a different discussion.\n&gt;\n&gt; Regards,\n&gt;\n&gt; Will Hartung\n&gt; (willh@... &lt;mailto:willh@...&gt;)\n&gt;\n&gt;\n&gt;\n&gt; \n\r\n--------------010808010703060407040402\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta content=&quot;text/html; charset=ISO-8859-1&quot;\n      http-equiv=&quot;Content-Type&quot;&gt;\n  &lt;/head&gt;\n  &lt;body text=&quot;#000000&quot; bgcolor=&quot;#ffffff&quot;&gt;\n    Thanks Will,&lt;br&gt;\n    &lt;br&gt;\n    In this approach, the GET request does not remain idempotent and it\n    changes the state of the system (unintentional side effect); but\n    that&#39;s perfectly fine as we are not only restricting certain HTTP\n    rules even twisting others to fit the REST way. The resource here is\n    new_items, by whatever definition server chooses to believe.&lt;br&gt;\n    &lt;br&gt;\n    This is pretty much what I thought as well, except I was not sure if\n    this was the right way to look at things. Thanks again.&lt;br&gt;\n    &lt;pre class=&quot;moz-signature&quot; cols=&quot;72&quot;&gt;Regards,\nAakash Dharmadhikari\n&lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://c42.in/&quot;&gt;http://c42.in/&lt;/a&gt;\n&lt;/pre&gt;\n    &lt;br&gt;\n    On 18/05/11 11:24 PM, Will Hartung wrote:\n    &lt;blockquote\n      cite=&quot;mid:BANLkTinuMCzVuKxahvrcA7EJmhPY1vJHpw@...&quot;\n      type=&quot;cite&quot;&gt;\n      &lt;span style=&quot;display: none;&quot;&gt;&nbsp;&lt;/span&gt;\n      \n          &lt;div id=&quot;ygrp-text&quot;&gt;\n            &lt;p&gt;&lt;br&gt;\n              &lt;br&gt;\n            &lt;/p&gt;\n            &lt;div class=&quot;gmail_quote&quot;&gt;On Tue, May 17, 2011 at 9:00 PM,\n              aakash dharmadhikari &lt;span dir=&quot;ltr&quot;&gt;&lt;&lt;a\n                  moz-do-not-send=&quot;true&quot; href=&quot;mailto:aakashd@...&quot;&gt;aakashd@...&lt;/a&gt;&gt;&lt;/span&gt;\n              wrote:&lt;br&gt;\n              &lt;blockquote class=&quot;gmail_quote&quot; style=&quot;border-left: 1px\n                solid rgb(204, 204, 204);&quot;&gt;\n                &lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span&gt;\n                  &lt;/span&gt;2. I have gone through the RFC2616 &amp; some\n                  resources for REST; just to &lt;br&gt;\n                  &lt;div&gt;\n                    &lt;div&gt;\n                      &lt;div&gt;\n                        &lt;p&gt;\n                          find that HTTP talks about user&#39;s intention\n                          &amp; REST talks about server &lt;br&gt;\n                          state. When we use both of them together,\n                          there is a lot of confusion &lt;br&gt;\n                          about which prevails over the other.&lt;br&gt;\n                          &lt;br&gt;\n                        &lt;/p&gt;\n                      &lt;/div&gt;\n                    &lt;/div&gt;\n                  &lt;/div&gt;\n                &lt;/div&gt;\n              &lt;/blockquote&gt;\n              &lt;div&gt;&lt;br&gt;\n                There is no &quot;conflict&quot; here. REST is REST. HTTP is HTTP.\n                REST != HTTP. There are many, unRESTful properties to\n                HTTP and ways to use HTTP in an unRESTful manner.&lt;br&gt;\n                &lt;br&gt;\n                If you wish to build a REST system on top of HTTP, then\n                you need to constrain your use of HTTP so that it stays\n                within the boundaries of a REST architecture.&lt;br&gt;\n                &lt;br&gt;\n                Also, there are several examples of resources that use\n                GET but do not return the same payload each time.&lt;br&gt;\n                &lt;br&gt;\n                GET /current_temperature&lt;br&gt;\n                GET /random_number&lt;br&gt;\n                GET /new_items&lt;br&gt;\n                &lt;br&gt;\n                The premise is that you are not using GET to change\n                state. If state changes on the server, then that&#39;s the\n                servers problem. That&#39;s an issue for the developer of\n                the service, but it doesn&#39;t change the contract for the\n                client.&lt;br&gt;\n                &lt;br&gt;\n                If GET /new_items returns a list of items and then you\n                call it again and get an empty list (because the server\n                implementation feels that since it served the items up\n                once, then the items are no longer &quot;new&quot;), well that&#39;s\n                the server&#39;s problem. Not the clients.&lt;br&gt;\n                &lt;br&gt;\n                You do GET /new_items, and you got all of the &quot;new\n                items&quot;. You didn&#39;t call GET /new_items to change the\n                state of the items from &quot;new&quot; to &quot;not new&quot;, you called\n                it to get &quot;new items&quot; using whatever criteria the server\n                set for &quot;new-ness&quot;, in contrast to whatever your\n                definition of &quot;new-ness&quot; is. It&#39;s the servers resource,\n                not yours. It could give you the same or growing list\n                all day long and reset abruptly at 12am.&lt;br&gt;\n                &lt;br&gt;\n                Now, you can question the wisdom of the server\n                implementation, but that&#39;s a different discussion.&lt;br&gt;\n                &lt;br&gt;\n                Regards,&lt;br&gt;\n                &lt;br&gt;\n                Will Hartung&lt;br&gt;\n                (&lt;a moz-do-not-send=&quot;true&quot;\n                  href=&quot;mailto:willh@...&quot;&gt;willh@...&lt;/a&gt;)&lt;br&gt;\n                &lt;br&gt;\n                &lt;br&gt;\n                &lt;br&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n          \n      \n      &lt;!-- end group email --&gt;\n    &lt;/blockquote&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------010808010703060407040402--\r\n\n"}}