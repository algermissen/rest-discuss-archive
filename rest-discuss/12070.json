{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210067383,"authorName":"Nick Gall","from":"Nick Gall &lt;nick.gall@...&gt;","profile":"nick_gall_1117","replyTo":"SENDER","senderId":"ikf5Ml5v5WQ4Z4g5YkPQAQTms5ndWd8skn4_C4xcM76hzuCHl1XZGaa8GkZt2f89m8E4w-lfho7k2ZsMOE36Cd4-cfamlw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful URLs?","postDate":"1233610341","msgId":12070,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE2YTZkZjM2MDkwMjAyMTMzMm43ZmE3ODRiNW43NzBjZTc4NzIzYTE2MTYyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDUwMzdiNmU0MDkwMjAyMTIwMXQzZTgzYjhiMXdjNDcyNDRhNzgxZTg0NWY5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ5ODUyMjVBLjMwODA5MDRAZ21haWwuY29tPgkgPDIwMDkwMjAyMTM0MjQ3LkdBMjA2MThAa2xhbmdyYXVtLnBsYXNtYXN0dXJtLm9yZz4JIDxhNmE2ZGYzNjA5MDIwMjA3MzZpMWRjMzBlYTF3NDc5MTJlNmEyZjE4MjI1ZEBtYWlsLmdtYWlsLmNvbT4JIDw5Mjc0NDFiMzA5MDIwMjA4MDV0ZDdhMzQ3YXc3NjVhMGUxNjk3YjI4MzRlQG1haWwuZ21haWwuY29tPgkgPGE2YTZkZjM2MDkwMjAyMTAzNms2YTY5NjBjMnMyY2UzYmMyZmZlZTZkYzVjQG1haWwuZ21haWwuY29tPgkgPEJMVTEwMi1EUzRBMjRBQzk5N0I5QkQ4NkY3NjExQkI1QzUwQHBoeC5nYmw+CSA8NTAzN2I2ZTQwOTAyMDIxMjAxdDNlODNiOGIxd2M0NzI0NGE3ODFlODQ1ZjlAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12069,"nextInTopic":12071,"prevInTime":12069,"nextInTime":12071,"topicId":12048,"numMessagesInTopic":54,"msgSnippet":"... template ... that ... Great point Assaf! I d completely forgotten about OpenSearch. OpenSearch is effectively an architecture for bookmarking search URI","rawEmail":"Return-Path: &lt;nick.gall@...&gt;\r\nX-Sender: nick.gall@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86633 invoked from network); 2 Feb 2009 21:32:23 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m46.grp.scd.yahoo.com with QMQP; 2 Feb 2009 21:32:23 -0000\r\nX-Received: from unknown (HELO mail-gx0-f20.google.com) (209.85.217.20)\n  by mta15.grp.scd.yahoo.com with SMTP; 2 Feb 2009 21:32:23 -0000\r\nX-Received: by mail-gx0-f20.google.com with SMTP id 13so1439053gxk.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 02 Feb 2009 13:32:23 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.15.10 with SMTP id i10mr400521iba.56.1233610341280; Mon, \n\t02 Feb 2009 13:32:21 -0800 (PST)\r\nIn-Reply-To: &lt;5037b6e40902021201t3e83b8b1wc47244a781e845f9@...&gt;\r\nReferences: &lt;4985225A.3080904@...&gt;\n\t &lt;20090202134247.GA20618@...&gt;\n\t &lt;a6a6df360902020736i1dc30ea1w47912e6a2f18225d@...&gt;\n\t &lt;927441b30902020805td7a347aw765a0e1697b2834e@...&gt;\n\t &lt;a6a6df360902021036k6a6960c2s2ce3bc2ffee6dc5c@...&gt;\n\t &lt;BLU102-DS4A24AC997B9BD86F7611BB5C50@...&gt;\n\t &lt;5037b6e40902021201t3e83b8b1wc47244a781e845f9@...&gt;\r\nDate: Mon, 2 Feb 2009 16:32:21 -0500\r\nMessage-ID: &lt;a6a6df360902021332n7fa784b5n770ce78723a16162@...&gt;\r\nTo: Assaf Arkin &lt;assaf@...&gt;\r\nCc: Sebastien Lambla &lt;seb@...&gt;, Hugh Winkler &lt;hughw@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00221532ccc42eeb900461f64a31\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nick Gall &lt;nick.gall@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful URLs?\r\nX-Yahoo-Group-Post: member; u=210067383; y=1bh4Rk-ECw7M9GUJ73uNgsc4XtAL7mqTMWCKHRMZYW2RiVpL2xCmsJ4\r\nX-Yahoo-Profile: nick_gall_1117\r\n\r\n\r\n--00221532ccc42eeb900461f64a31\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Mon, Feb 2, 2009 at 3:01 PM, Assaf Arkin &lt;assaf@...&gt; wrote:\n&gt; On Mon, Feb 2, 2009 at 10:52 AM, Sebastien Lambla &lt;seb@...&gt;\nwrote:\n&gt;&gt; You don&#39;t bookmark the way to build a search, you bookmark the result of\n&gt;&gt; the\n&gt;&gt; search.\n&gt;\n&gt; I do. Some sites support auto-discovery and OpenSearch, you can find a lot\n&gt; of search templates here [1], or when all else fails, enter the URL\ntemplate\n&gt; directly. Most of the searches I run are initiated from the address bar or\n&gt; the search bar and go through one of these templates to construct a URL\nthat\n&gt; is then sent to the server. I rarely go to the site itself to initiate a\n&gt; search.\n&gt; Assaf\n&gt;\n&gt; [1] http://mycroft.mozdev.org/search-engines.html\n\nGreat point Assaf! I&#39;d completely forgotten about OpenSearch. OpenSearch is\neffectively an architecture for &quot;bookmarking&quot; search URI templates in\nbrowsers. I currently have about a dozen of so search templates stored in\nFirefox.\n\nSo I guess the question is whether or not the\nOpenSearch&lt;http://www.opensearch.org/&gt;media type and its intended use\nis RESTful. When a user agent (eg browser)\nretrieves the OpenSearch XML Description Document (media\ntype application/opensearchdescription+xml), it extracts the URL template\nand stores it for use indefinitely. When, for example, it is used to augment\nthe search edit box in a browser, it is used to generate the search query\nURL with the text entered into the search edit box as a parameter.\n\nSo, does the semi-permanent storage (&quot;bookmarking&quot;) of the template by the\nbrowser violate HATEOAS? Should a browser actually do two HTTP requests each\nand every time a user does a search from the search bar:\n\n   1. Request the OpenSearch Description Document (ie never store the\n   description)\n   2. Extract the URL template from the Description Document and compose the\n   search query URL\n\nPerhaps a better approach for dealing with an out-of-date Description\nDocument would be for the OpenSearch resource to do some form of redirect by\nreturning a new Description Document with the appropriate (303?) status\ncode. The user agent would then store the new description before using it to\ncompose a new search query URL.\n\nSo perhaps the answer to bookmarking URL templates isn&#39;t that it is right or\nwrong per se, but that the right way to bookmark URL templates it to provide\na mechanism for informing the client when it should use a new URL template,\neg via a 303 response code? Would such an approach be legal use of HTTP? Can\na 303 response to a search query request be not (just) a new search URL but\nalso some hypertext with the new template description document?\n\nIf all this is indeed RESTful and legal HTTP behavior then HATEOAS could\nsupport a generalized approach to &quot;soft state&quot; URL templates -- persisted by\nthe client until told by a server response that the template should be\nreplaced by the response. What would be clearly unRESTful would be a design\nbased on &quot;hardcoded&quot; URL templates (say in developer documentation) in which\nthere was no mechanism for such URL templates to be updated automatically by\nuser agents via normal Web interactions.\n\r\n--00221532ccc42eeb900461f64a31\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Mon, Feb 2, 2009 at 3:01 PM, Assaf Arkin &lt;&lt;a href=3D&quot;mailto:assaf@lab=\r\nnotes.org&quot;&gt;assaf@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&gt; On Mon, Feb 2, 2009 at=\r\n 10:52 AM, Sebastien Lambla &lt;&lt;a href=3D&quot;mailto:seb@...&quot;&gt;seb@se=\r\nrialseb.com&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt;&gt; You don&#39;t bookmark the way to b=\r\nuild a search, you bookmark the result of&lt;br&gt;&gt;&gt; the&lt;br&gt;&gt;&gt; searc=\r\nh.&lt;br&gt;&gt;&lt;br&gt;&gt; I do. Some sites support auto-discovery and OpenSearch, =\r\nyou can find a lot&lt;br&gt;&gt; of search templates here [1], or when all else f=\r\nails, enter the URL template&lt;br&gt;\n&gt; directly. Most of the searches I run =\r\nare initiated from the address bar or&lt;br&gt;&gt; the search bar and go through=\r\n one of these templates to construct a URL that&lt;br&gt;&gt; is then sent to the=\r\n server. I rarely go to the site itself to initiate a&lt;br&gt;\n&gt; search.&lt;br&gt;&=\r\ngt; Assaf&lt;br&gt;&gt; &nbsp;&lt;br&gt;&gt; [1] &lt;a href=3D&quot;http://mycroft.mozdev.org/s=\r\nearch-engines.html&quot;&gt;http://mycroft.mozdev.org/search-engines.html&lt;/a&gt;&lt;br&gt;&lt;b=\r\nr&gt;&lt;div&gt;Great point Assaf! I&#39;d completely forgotten about OpenSearch. Op=\r\nenSearch is effectively an architecture for &quot;bookmarking&quot; search =\r\nURI templates in browsers. I currently have about a dozen of so search temp=\r\nlates stored in Firefox.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So I guess the question =\r\nis whether or not the &lt;a href=3D&quot;http://www.opensearch.org/&quot;&gt;OpenSearch&lt;/a&gt;=\r\n media type and its intended use is RESTful. When a user agent (eg browser)=\r\n retrieves the OpenSearch XML Description Document (media type&nbsp;applica=\r\ntion/opensearchdescription+xml), it extracts the URL template and stores it=\r\n for use &lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-style: italic; &quot;&gt;in=\r\ndefinitely&lt;/span&gt;. When, for example, it is used to augment the search edit=\r\n box in a browser, it is used to generate the search query URL with the tex=\r\nt entered into the search edit box as a parameter.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;di=\r\nv&gt;So, does the semi-permanent storage (&quot;bookmarking&quot;) of the temp=\r\nlate by the browser violate HATEOAS? Should a browser actually do two HTTP =\r\nrequests each and every time a user does a search from the search bar:&lt;/div=\r\n&gt;\n&lt;div&gt;&lt;ol&gt;&lt;li&gt;Request the OpenSearch Description Document (ie never store =\r\nthe description)&lt;/li&gt;&lt;li&gt;Extract the URL template from the Description Docu=\r\nment and compose the search query URL&lt;/li&gt;&lt;/ol&gt;Perhaps a better approach fo=\r\nr dealing with an out-of-date&nbsp;Description Document would be for the Op=\r\nenSearch resource to do some form of redirect by returning a new Descriptio=\r\nn Document with the appropriate (303?) status code. The user agent would th=\r\nen store the new description before using it to compose a new search query =\r\nURL.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So perhaps the answer to bookmarking URL tem=\r\nplates isn&#39;t that it is right or wrong per se, but that the right way t=\r\no bookmark URL templates it to provide a mechanism for informing the client=\r\n when it should use a new URL template, eg via a 303 response code? Would s=\r\nuch an approach be legal use of HTTP? Can a 303 response to a search query =\r\nrequest be not (just) a new search URL but also some hypertext with the new=\r\n template description document?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If all this is in=\r\ndeed RESTful and legal HTTP behavior then HATEOAS could support a generaliz=\r\ned approach to &quot;soft state&quot; URL templates -- persisted by the cli=\r\nent until told by a server response that the template should be replaced by=\r\n the response. What would be clearly unRESTful would be a design based on &=\r\nquot;hardcoded&quot; URL templates (say in developer documentation) in whic=\r\nh there was no mechanism for such URL templates to be updated automatically=\r\n by user agents via normal Web interactions.&lt;/div&gt;\n\r\n--00221532ccc42eeb900461f64a31--\r\n\n"}}