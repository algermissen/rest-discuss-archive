{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"auaGaw40KZeqOnKEqBJckr3fBo8WnQDzqhzWsTZQ9L78pg_QvH-jvwMgLeoFGl7UCyNueU5rKK1swikI944ekgxwGdkuEA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: More for Paul","postDate":"1015640726","msgId":946,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODk3Mjk2LjFEMkI2NURGQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDODY5ODNGLjFDRkIxN0VBQGp1bXAubmV0PiA8M0M4NjlGMDQuNEJBNDk1MzRAcHJlc2NvZC5uZXQ+IDwzQzg2QTZDQy5CM0M3OUE1MUBqdW1wLm5ldD4gPDNDODZBQjA3LjhFRjlDNDMxQHByZXNjb2QubmV0PiA8M0M4NkFFMTUuNTEzRTA0MjJAanVtcC5uZXQ+IDwzQzg2QjJERC5ENERCMUYwOEBwcmVzY29kLm5ldD4gPDNDODZDQkM3LjUyQjU3RTM0QGp1bXAubmV0PiA8M0M4NkQxNEEuOEQwRkE5RTdAcHJlc2NvZC5uZXQ+IDwzQzg2REQ4RC5ENDQwOEI3NUBqdW1wLm5ldD4gPDNDODZFODIyLkI5MDM0NjJAcHJlc2NvZC5uZXQ+IDwzQzg3MEJBNy45Q0M5QjZCMUBqdW1wLm5ldD4gPDNDODdBRDhGLjEzQ0RENDE0QHByZXNjb2QubmV0PiA8M0M4ODA5QTkuMkM5RTZBNkFAanVtcC5uZXQ+IDwzQzg4MTFCMC5DMEU3QjAwREBwcmVzY29kLm5ldD4gPDNDODg0OEMxLkRBODQyQjY1QGp1bXAubmV0PiA8M0M4ODVCNTQuRDBDN0MxQTNAcHJlc2NvZC5uZXQ+IDwzQzg4RTIxNy44N0ExRDc1NkBqdW1wLm5ldD4gPDNDODkxMEY5LjkzNDAyOUU0QHByZXNjb2QubmV0PiA8M0M4OTM5NTkuNzM3RTlEOEFAanVtcC5uZXQ+"},"prevInTopic":944,"nextInTopic":947,"prevInTime":945,"nextInTime":947,"topicId":944,"numMessagesInTopic":13,"msgSnippet":"I ve read your Wiki and all I can find that makes sense to me is: No, Really, WTF Is It Good For? ... And, in general, they are only reachable if somebody","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 9 Mar 2002 02:28:15 -0000\r\nReceived: (qmail 49523 invoked from network); 9 Mar 2002 02:28:14 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m12.grp.snv.yahoo.com with QMQP; 9 Mar 2002 02:28:14 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 9 Mar 2002 02:28:14 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g292S5b30790\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 8 Mar 2002 18:28:06 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g292S4L00420\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 8 Mar 2002 18:28:04 -0800\r\nMessage-ID: &lt;3C897296.1D2B65DF@...&gt;\r\nDate: Fri, 08 Mar 2002 18:25:26 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: More for Paul\r\nReferences: &lt;3C86983F.1CFB17EA@...&gt; &lt;3C869F04.4BA49534@...&gt; &lt;3C86A6CC.B3C79A51@...&gt; &lt;3C86AB07.8EF9C431@...&gt; &lt;3C86AE15.513E0422@...&gt; &lt;3C86B2DD.D4DB1F08@...&gt; &lt;3C86CBC7.52B57E34@...&gt; &lt;3C86D14A.8D0FA9E7@...&gt; &lt;3C86DD8D.D4408B75@...&gt; &lt;3C86E822.B903462@...&gt; &lt;3C870BA7.9CC9B6B1@...&gt; &lt;3C87AD8F.13CDD414@...&gt; &lt;3C8809A9.2C9E6A6A@...&gt; &lt;3C8811B0.C0E7B00D@...&gt; &lt;3C8848C1.DA842B65@...&gt; &lt;3C885B54.D0C7C1A3@...&gt; &lt;3C88E217.87A1D756@...&gt; &lt;3C8910F9.934029E4@...&gt; &lt;3C893959.737E9D8A@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nI&#39;ve read your Wiki and all I can find that makes sense to me is:\n\n&quot;No, Really, WTF Is It Good For?&quot;\n\nJeff Bone wrote:\n&gt; \n&gt;...\n&gt; \n&gt; No.  The above is an artificially bogus problem statement, I wouldn&#39;t do that to you.  The problem I have offered\n&gt; is a much more realistic problem statement grounded in the *fact* that, while there are addressible objects on the\n&gt; Web, not all of them are necessarily part of any hypertext structure.\n\nAnd, in general, they are only reachable if somebody wants you to reach\nthem. The &quot;web way&quot; for them to express that is to give you either a\nhard-coded address or a hypertext document. Inventing a new way for\ndescribing sets of documents buys no new power, only complexity.\n\n&gt; &gt; How do we find things that are part of the Web but not hyperlinked?\n&gt; \n&gt; You get URLs to them in e-mail, or on napkins, or whatever.  You ever noticed that field in your browser that you\n&gt; can type things into, or do you always get to every piece of content you access by following links from your home\n&gt; page? ;-)\n\nOnce I type them in I defacto have a hyperlink. \n\n&gt;...\n&gt; &gt; If you invent a generative grammar language for the Web, I will write a\n&gt; &gt; CGI program that allows generative grammars to generate hypertext\n&gt; &gt; documents so that the Web subsumes that functionality *through\n&gt; &gt; hypertext*.\n&gt; \n&gt; Ok.  ;-)  But first, just to warm up, maybe you should start as follows:  write a program that lists all the\n&gt; natural numbers.  Report back. ;-)  (The fact that you can write a grammar for something doesn&#39;t imply that you\n&gt; can practically generate the possibly infinite set of things that the grammar *can* generate.)\n\ndef natural_numbers(startpos, endpos):\n   for i in xrange(startpos, endpos):\n      print &quot;&lt;num&gt;%d&lt;/num&gt;&quot; % i\n\nNow you can &quot;address&quot; all of the natural numbers through this function.\n\n&gt; &gt; If we define hypertext as &quot;text with links&quot; then it becomes clear that\n&gt; &gt; anything you can represent with plan 9 namespaces I can represent with\n&gt; &gt; text with links.\n&gt; \n&gt; It&#39;s not a question of representation, it&#39;s a question of whether generative, dynamic representations are\n&gt; equivalent to static, declarative representations for all purposes.  They aren&#39;t.  Cf. the Wiki for more detailes,\n&gt; but the following should suggest the problem:  while I may be able to write a grammar that generates all possible\n&gt; strings that the grammar can generate, that set may be infinite and might not be enumerable.\n\nYou don&#39;t have to enumerate them because you are only ever interested in\na subset.\n\n&gt; &gt; The only question is whether the system is closed over\n&gt; &gt; hypertext or closed over namespaces or neither. If we obey the opacity\n&gt; &gt; principle then it will become closed over hypertext because things\n&gt; &gt; without links to them would by definition not be on the Web.\n&gt; \n&gt; This is exactly correct!  And the conclusion I&#39;ve drawn is that (a) the original intent of at least the URI and\n&gt; HTTP architectural components of the Web was that the Web was a superset of the hypertext structure, and (b) the\n&gt; deviation away from those precepts is a cultural artifact of the increasing focus and interest on the part of a\n&gt; few people (TBL) on markup-based KR.  But it&#39;s not at all clear that markup-based KR can or can best capture all\n&gt; the kinds of information that inhabits a universal information space.\n\nI feel like I&#39;m arguing with you about libertarianism. You aren&#39;t trying\nto solve a real problem that you&#39;ve experienced in practice, just trying\nto achieve a sort of hypertext-less purity. Well I&#39;m trying to achieve a\nhypertext-centric purity. Having the Web be closed over hypertext makes\nit a much simpler information space. As you say, generative grammars\ndon&#39;t handle anything either. Next we&#39;ll be shipping Javascript\ndocuments with the only goal of generating hyperlinks on the client\nside. That&#39;s powerful enough that we could do away with hyperlinks and\ngenerative grammars altogether.\n\n&gt; &gt; But thanks\n&gt; &gt; to query parameters and URIs the set of things with links to them is\n&gt; &gt; infinite.\n&gt; \n&gt; Yes, but pushing hierarchical / graph-structure inormation into the flat space of query parameters *loses*\n&gt; information.  This is badness.  See the Wiki.\n\nNo, it doesn&#39;t lose information. Queries generate *indexes* over\nhierarchical information space. The existence of the Google index does\nnot destroy the hierarchy of MSDN, one of the things it may index.\n\n&gt; &gt;\n&gt; &gt; &gt; Yes, you are reduced to &quot;hacking&quot; in this case --- *because* of opacity.\n&gt; &gt;\n&gt; &gt; No, I&#39;m reduced to hacking because I&#39;m trying to get access to\n&gt; &gt; information (the listing of files) that was not provided to me.\n&gt; \n&gt; This is incorrect.  I am trying to find objects in a space that is not and perhaps cannot be (or cannot\n&gt; efficiently be) enumerated.  \n\nThe relevant subsets of the information can be enumerated. The idea &quot;ls\n/1999/*/02&quot; you can be expressed as a query with the appropriate\nwildcard. The indexed documents may have whatever URI hierarchy you\nwant, and separately may have whatever HTTP hierarchy you want.\n\n&gt; ... And I&#39;m not &quot;hacking,&quot; I&#39;m using information about the organization of that space\n&gt; that was explicitly provided to me by the owner of that space to do so.\n\nThe Web has a way for them to provide that information to you. It is a\nhypertext index. Go to images.google.com. The Web way deals with both\nhighly structured AND highly unstructured namespaces.\n\n&gt;...\n&gt; This wouldn&#39;t be an appropriate problem for generative names, it would be like the problem I gave you earlier of\n&gt; enumerating an infinite set.  Generative names aren&#39;t appropriate for this --- but neither is hypertext, if the\n&gt; set is truly infinite or even very large.  I&#39;m not suggesting that generative naming can or should tackle this\n&gt; kind of problem.  I am, however, suggesting that there are information spaces which are well-organized, dense, and\n&gt; regular for which this is an efficient and useful technique.  Infospaces organized along time and space are good\n&gt; examples.  See the Wiki.\n\nYou&#39;re an infospace designer. You have two options, one is to provide\naccess to the infospace through indexes and hypertext. The other is to\nprovide it through a generative grammer. In the former, all computation\ncan be done entirely on the server side, requires no more a priori\nagreement beyond that necessary to use today&#39;s web and allows all\nstandard web tools to work with the index. The latter requires a new\nlanguage: &quot;generative grammars for the web&quot;. It requires an agreement to\nuse this new namespace schema language. It requires new client side\ncode. The logical index generated on the client side with this\ngenerative technique is not &quot;on the web&quot; (has no URI) and cannot be used\nas an input to web processes.\n\nGenerating the index on the server reifies it with a URI and generally\nbuilds on existing web infrastructure better.\nhttp://www.somefiles.com/images?subset=/1999/*/02\n\n Paul Prescod\n\n"}}