{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"Jørn Wildt","from":"=?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"Qp28FUE4JzB0GUVKV2UjUiAlfXGRP_hbFFxhZr7-xoudCgKh927m9aGACY6fACATt4g4EBGocKXQp2gGFT3VU6T866j4yExTvuyNP3G4q74t6pjpaYLH7Tc","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] Re: Rel attributes?","postDate":"1336164340","msgId":18813,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg2NUZCRjhCQjkxQjQ3QzNCREFCMkREQ0YxQURFNDFEQEpvcm5QQz4=","inReplyToHeader":"PDFDRDU1RjA0NTM4REVBNEY4NUYzQURGNzc0NTQ2NEFGMDUyNDVFQFMtQlNDLU1CWDQubnJuLm5yY2FuLmdjLmNhPg==","referencesHeader":"PGprYWU0NCttOGNqQGVHcm91cHMuY29tPiA8am51Nmk5K3FjamJAZUdyb3Vwcy5jb20+IDwxQ0Q1NUYwNDUzOERFQTRGODVGM0FERjc3NDU0NjRBRjA1MjQ1RUBTLUJTQy1NQlg0Lm5ybi5ucmNhbi5nYy5jYT4="},"prevInTopic":18812,"nextInTopic":18814,"prevInTime":18812,"nextInTime":18814,"topicId":18659,"numMessagesInTopic":23,"msgSnippet":"... I would say that you can do rel= CreateWithPost and declare that in the link-rel documentation. But you loose something by doing so: allowing the server","rawEmail":"Return-Path: &lt;jw@...&gt;\r\nX-Sender: jw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30482 invoked from network); 4 May 2012 20:45:25 -0000\r\nX-Received: from unknown (98.137.35.162)\n  by m9.grp.sp2.yahoo.com with QMQP; 4 May 2012 20:45:25 -0000\r\nX-Received: from unknown (HELO smtp1.cybercity.dk) (212.242.43.251)\n  by mta6.grp.sp2.yahoo.com with SMTP; 4 May 2012 20:45:24 -0000\r\nX-Received: from uf4.cybercity.dk (uf4.cybercity.dk [212.242.42.51])\n\tby smtp1.cybercity.dk (Postfix) with ESMTP id 7EC0C586825;\n\tFri,  4 May 2012 22:45:27 +0200 (CEST)\r\nX-Received: from JornPC (port439.ds1-aroe.adsl.cybercity.dk [212.242.220.134])\n\t(Authenticated sender: dsl164923)\n\tby uf4.cybercity.dk (Postfix) with ESMTPA id 03B0E1328DCB;\n\tFri,  4 May 2012 22:45:22 +0200 (CEST)\r\nMessage-ID: &lt;865FBF8BB91B47C3BDAB2DDCF1ADE41D@JornPC&gt;\r\nTo: &quot;paul_k_moore&quot; &lt;paul.k.moore@...&gt;,\n\t&quot;Rushforth, Peter&quot; &lt;peter.rushforth@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;jkae44+m8cj@...&gt; &lt;jnu6i9+qcjb@...&gt; &lt;1CD55F04538DEA4F85F3ADF7745464AF05245E@...&gt;\r\nIn-Reply-To: &lt;1CD55F04538DEA4F85F3ADF7745464AF05245E@...&gt;\r\nDate: Fri, 4 May 2012 22:45:40 +0200\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;iso-8859-1&quot;;\n\treply-type=original\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Windows Mail 6.0.6002.18197\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.0.6002.18463\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: =?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nSubject: Re: [rest-discuss] Re: Rel attributes?\r\nX-Yahoo-Group-Post: member; u=242972596; y=eodQkAtw3zZ2ByEhpDj2Z83zYXUd-jJHw9fGKnhJKvNmGwQy8337R0CwG1g\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\n&gt; &gt; It is not good if you use rel to denote other information,\n&gt; &gt; like saying rel=&quot;CreateWithPost&quot; to hint the agent to\n&gt; &gt; use the link&#39;s URI with a POST to create something.\n&gt; &gt; That is not the intended use and it is a bad practice.\n\n&gt; It seems reasonable to me, I don&#39;t see why it is a bad practice.\n&gt; It looks a lot like the atom:link@rel=&quot;edit&quot;, or html&#39;s @method=&quot;POST&quot;.\n\nI would say that you can do rel=&quot;CreateWithPost&quot; and declare that in the \nlink-rel documentation. But you loose something by doing so: allowing the \nserver to specify HTTP method and payload encoding at runtime (since that \nknowledge would have to be a hardcoded part of the link-rel knowledge).\n\nHad the link &quot;Create&quot; instead lead to a form of some kind then the form \ncould specifiy HTTP method at runtime, thus letting the server evolve over \ntime (changing HTTP method) without updating the clients (as they are \nexpected to understand the full form language).\n\nI haved tried to illustrate this in \nhttps://groups.google.com/d/msg/hypermedia-web/mtdVPRks_QI/ZEK3_9QBVtoJ - \ncheck the &quot;evolving server, stable client&quot; scenarios in example 1, 2 and 3.\n\n/J�rn\n\n----- Original Message ----- \nFrom: Rushforth, Peter\nTo: paul_k_moore\nCc: rest-discuss@yahoogroups.com\nSent: Friday, May 04, 2012 2:28 PM\nSubject: RE: [rest-discuss] Re: Rel attributes?\n\n\n\nHi Paul,\n\nIn atompub, the rel=&quot;edit&quot; link relation means you can PUT or DELETE to the \nhref.\n\nAlso in atompub, app:collection/accept/text() tells you you can POST the \napp:collection/@href whatever MIME types are\nlisted in the app:accept text().\n\nGoing by that as an exemplar, it seems to me that it is the hypermedia \nformat which is defining what can and can&#39;t be\ndone against the URL.  Maybe that is out of band knowledge, but then again, \nknowing what @method=&quot;POST&quot; means\ncould be considered out of band too.   It has to be written down somewhere \nand agreed to.  So the sharing of the semantics\nwidely is key to interoperability.  Hence a public link relations registry. \nIt is the shared semantics that allows us to\nprogram user agents to do predictable things when they come across a \nparticular hypermedia construct.\n\nMaybe it is important that when a GET is done on a resource, that the \nresponse metadata also declare the available methods.\nMessage metadata is authoritative.\n\nBut you should not have to do that GET, because it is a waste of bandwidth, \nand the representation format has already\ndefined (in the registry) and declared (in the instance in which you find \nthe href) the (possibly implicit) method availabilities.\n\n&gt; 3. It is important to understand that the rel is the relation the resource \n&gt; identified by the link&#39;s URI, has with the actual resource/uri/document. \n&gt; It is not good if you use rel to denote other information, like saying \n&gt; rel=&quot;CreateWithPost&quot; to hint the agent to use the link&#39;s URI with a POST \n&gt; to create something. That is not the intended use and it is a bad \n&gt; practice.\n\nIt seems reasonable to me, I don&#39;t see why it is a bad practice.  It looks a \nlot like the atom:link@rel=&quot;edit&quot;, or html&#39;s @method=&quot;POST&quot;.\n\nCheers,\nPeter\n\n\n\n\n\nFrom: rest-discuss@yahoogroups.com [mailto:rest-discuss@yahoogroups.com] On \nBehalf Of paul_k_moore\nSent: May 3, 2012 11:00\nTo: rest-discuss@yahoogroups.com\nSubject: [rest-discuss] Re: Rel attributes?\n\n\n\n\n\nWilliam\n\nThis is very useful - thank you.\n\nJust to confirm my (refined) understanding here, I consider the meaning of \n&#39;rel&#39; to be an orthogonal concern to the HTTP methods.\n\nTo expound slightly, I had erroneously conflated the HTTP methods (avaialble \nat the target URI) into the meaning of &#39;rel&#39;. If we consider the following \ntwo examples:\n\nExample 1: Use of a &#39;rel&#39; such as &#39;http://relations.example.com/order&#39; \nreasonably conveys to the user-agent that there is something &#39;order&#39;-like at \nthe target URI. It is then up to the client (the client intent) to follow \nthis rel (using an implicit GET request) to retrieve the representation of \nthe &#39;order&#39;-like thing (as rendered in a specific media-type).\n\nExample 2: Use of a &#39;rel&#39; such as &#39;http://relations.example.com/new&#39; to \n(unreasonably) convey that the user agent can POST an item of the type \ncommunicated by it&#39;s current context. This is the problem, I don&#39;t need to \n&#39;say&#39; to the user-agent that it can POST at a specific URI, because the \navailable HTTP methods tell me what I can do with the resource. What I need \nto do is examine the permitted methods (either by inspection of the &#39;Allow&#39; \nheader, or an OPTIONS request) AND not try to convey the permutations of \nmethod in the &#39;rel&#39;.\n\nDoes that make sense?\n\nThanks in advance\n\nPaul\n\n--- In rest-discuss@yahoogroups.com, &quot;William Martinez Pomares&quot; \n&lt;wmartinez@...&gt; wrote:\n&gt;\n&gt; Hi nikonguy74!\n&gt; Just to complement what Jan is saying:\n&gt; 1. Links represent resources you can work with. The idea of links is that \n&gt; you can usually follow them (issuing a GET operation), but then there are \n&gt; lots of questions you may have about them: what do I do with the actual \n&gt; resource (say, web page) I&#39;m in? What is this link referring to? What \n&gt; other operations apart from GET can I execute with it? Can I add query \n&gt; parameters to it? What media type will it return? What media type may it \n&gt; expect if I can issue a POST?, etc...\n&gt;\n&gt; 2. rel is an attribute to add more information about a link. I denotes a \n&gt; value, keyword, hint of what relation the link has with the current \n&gt; resource/IRI. Say you are in a book page, that is your current resources \n&gt; and it has a URI. A link with rel=&quot;next&quot; will hint that following that \n&gt; link will get you to the next page of the book.\n&gt;\n&gt; 3. It is important to understand that the rel is the relation the resource \n&gt; identified by the link&#39;s URI, has with the actual resource/uri/document. \n&gt; It is not good if you use rel to denote other information, like saying \n&gt; rel=&quot;CreateWithPost&quot; to hint the agent to use the link&#39;s URI with a POST \n&gt; to create something. That is not the intended use and it is a bad \n&gt; practice.\n&gt;\n&gt; 4. You may need actual business intelligence in your client. If you are \n&gt; looking at a blog comment, a rel=&quot;parent&quot; will tell you the links points \n&gt; to the actual blog post. Having that information, you can start asking \n&gt; that parent for information, or even send a comment to it using POST \n&gt; operation. That is natural simply because much of this interaction is \n&gt; already designed in the specs, and the agent may not need to be statically \n&gt; programmed, but it will need intelligence.\n&gt;\n&gt; 5. So, you have there standard metainformation (like how to handle media \n&gt; types, the semantics of POST and PUT, the semantics or link and rel), etc. \n&gt; Plus, you have business specific semantics (the actual value of the rel \n&gt; may mean something applicable only to, say, banking applications). With \n&gt; that info you can program intelligent clients.\n&gt;\n&gt; 6. Finally, some other &quot;link&quot; tags like anchor and image are special links \n&gt; that have a standard meaning and established processing. If you found an \n&gt; &lt;img&gt; tag you automatically know that link is referring to an image, and \n&gt; if you are in HTML page in a browser, the supposed processing it to fetch \n&gt; that image with a GET and display it based on context and additional \n&gt; attributes. All that is told by the tag name, and everybody in the world \n&gt; knows it. So, links are difficult to understand at first but once you have \n&gt; it clear they are simple to use. Only don&#39;t expect the link rel attribute \n&gt; will tell you everything.\n&gt;\n&gt; Cheers\n&gt;\n&gt; William Martinez.\n&gt; --- In rest-discuss@yahoogroups.com, Jan Algermissen &lt;jan.algermissen@&gt; \n&gt; wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Mar 19, 2012, at 6:40 PM, nikonguy74 wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; I know one of the first questions i had was on rel link. I understand \n&gt; &gt; &gt; the basic premise behind rel attributes(to provide a general \n&gt; &gt; &gt; documentation for how to interact with the link provider).\n&gt; &gt;\n&gt; &gt; The premise of the rel attribute on links is (in the case of the HTML or \n&gt; &gt; Atom media types) to provide information about the meaning of the link \n&gt; &gt; beyond &#39;this is a link&#39;. If you register your rel name in the IANA \n&gt; &gt; registry, you can use the short name you registered, e.g. &#39;next&#39; or \n&gt; &gt; &#39;up&#39;. If you did not register your rel, you need to provide a URI. \n&gt; &gt; Simply for the matter of making your rel unambiguous.\n&gt; &gt;\n&gt; &gt; If that URI points to a human readable page explaining the relation, \n&gt; &gt; then that is even better.\n&gt; &gt;\n&gt; &gt; There is no magic (not even in REST :-) that removes the need to \n&gt; &gt; implement in code (or configure) what the user agent should do when it \n&gt; &gt; sees your link rel value.\n&gt; &gt;\n&gt; &gt; &lt;link rel=&quot;http://foo/customerDetails&quot; ... /&gt; is conceptually the same \n&gt; &gt; as &lt;link rel=&quot;working-copy&quot; .../&gt; and also as HTML&#39;s &lt;img src=&quot;...&quot;/&gt; or \n&gt; &gt; AtomPub&#39;s &lt;collection href=&quot;...&quot;/&gt;. It is just hypermedia ... that a \n&gt; &gt; user agent needs to be programmed to do something with ... in order to \n&gt; &gt; have it do something with it.\n&gt; &gt;\n&gt; &gt; IOW, your browser downloads that image because it is programmed to do \n&gt; &gt; so. This same concept also applies to other hypermedia - your user agent \n&gt; &gt; component will act on the hypermedia it comes across in the way it is \n&gt; &gt; programmed (or configured) to do.\n&gt; &gt;\n&gt; &gt; No magic.\n&gt; &gt;\n&gt; &gt; The effect of the hypermedia constraint is actually more felt in the \n&gt; &gt; obligations you have as a client side programmer (to react to the \n&gt; &gt; hypermedia you actually come across instead of the one you presume to \n&gt; &gt; come across) than it is felt in the aspect of loose coupling.\n&gt; &gt;\n&gt; &gt; REST mostly makes explicit that there isn&#39;t any control over the server \n&gt; &gt; side in networked systems. REST encourages you to deal with that rather \n&gt; &gt; than magically solves a problem that cannot be solved. And on top of \n&gt; &gt; that, REST provides a number of mechanism that optimize for *dealing \n&gt; &gt; with* the problem (e.g. content negotiation).\n&gt; &gt;\n&gt; &gt; HTH,\n&gt; &gt;\n&gt; &gt; Jan\n&gt; &gt;\n&gt; &gt; &gt; The question is what would you see if you go to the rel link? Is it \n&gt; &gt; &gt; something a person is suppose to interact with (say to get \n&gt; &gt; &gt; documentation for new links added to a specific response) or something \n&gt; &gt; &gt; code can interact with to determine what it needs to do? Unfortunately \n&gt; &gt; &gt; in the book they don&#39;t give an example of what a &quot;rel&quot; page would look \n&gt; &gt; &gt; like. For example the link:\n&gt; &gt; &gt; &lt;link rel=&quot;http://relations.restbucks.com/payment&quot;\n&gt; &gt; &gt; href:=&quot;http://restbucks.com/payment/1234&quot; /&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; If you typed in &quot;http://relations.restbucks.com/payment&quot; into your web \n&gt; &gt; &gt; browser what would you see?\n&gt; &gt; &gt;\n&gt; &gt; &gt; thanks...\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n \n\n\n"}}