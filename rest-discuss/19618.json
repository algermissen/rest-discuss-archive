{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":509323802,"authorName":"Matt McClure","from":"Matt McClure &lt;matthewlmcclure@...&gt;","profile":"matthewlmcclure","replyTo":"SENDER","senderId":"CqUZnnux0JYORuoYNtCv1V8UPe_7EbGTNTWXajAootslsxnE12lHw6MJSg33ZnvrYie7XWJmkiM5C99CkyDzROC3RiGJUPmbL6YhkLA0Yg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] User Hypermedia format","postDate":"1393614787","msgId":19618,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAxN0ExRTFFLTk4RkMtNEIwMC04NDBELThFQUZGMjAyMUM5RUBnbWFpbC5jb20+","inReplyToHeader":"PENBUFdfOG02VEhoVk01MlhIS3dMWVpBTG5yeDh4Rk94RXMraUxQcU1YR0ZZdTZvcWhFd0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBUFdfOG03ZjBFNjhrTmtKTkxCR0hSdGllOFpRSkZtVWJwR185RmpoNG9lY2t6OXgzQUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxFMDRYVVJoRHJhLVQ3djNhZ0t2VUVCM1NTTFlOV1B3T2tIU2tkYkVyeCtnQUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG03cGVLR19iK0xTVU1YMnZtdTNMWHc1ZitnS1VTLUxkX0VkMC1jdW5TWC1ZUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01cG41WDlramFhb2lzSj1MQU9Pa1JYbUpSVUM9akxYOXYzY0FEUktlYUpKUUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxHUytuNFBaMkdNZW55Zj1aOXQxbmVQc1pNK0tpd1ByZjhBU0ZkZnhXUjJOZ0BtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01OVkwOHA3NTFZaHJYQVUxK0oyX1NxUD03VVdtPXhVZmJobVF6dTBzUjFkUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG02VEhoVk01MlhIS3dMWVpBTG5yeDh4Rk94RXMraUxQcU1YR0ZZdTZvcWhFd0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":19617,"nextInTopic":19619,"prevInTime":19617,"nextInTime":19619,"topicId":19617,"numMessagesInTopic":4,"msgSnippet":"I m concerned about verbosity of the messages as well as programmer time and experience. For example, I ve been working with high resolution time series","rawEmail":"Return-Path: &lt;matthewlmcclure@...&gt;\r\nX-Sender: matthewlmcclure@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 364 invoked by uid 102); 28 Feb 2014 19:14:03 -0000\r\nX-Received: from unknown (HELO mtaq5.grp.bf1.yahoo.com) (10.193.84.36)\n  by m5.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 19:14:03 -0000\r\nX-Received: (qmail 32191 invoked from network); 28 Feb 2014 19:14:02 -0000\r\nX-Received: from unknown (HELO mail-pd0-f180.google.com) (209.85.192.180)\n  by mtaq5.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 19:14:02 -0000\r\nX-Received: by mail-pd0-f180.google.com with SMTP id y10so1114369pdj.39\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 28 Feb 2014 11:14:02 -0800 (PST)\r\nX-Received: by 10.68.138.227 with SMTP id qt3mr5550591pbb.6.1393614842318;\n        Fri, 28 Feb 2014 11:14:02 -0800 (PST)\r\nReturn-Path: &lt;matthewlmcclure@...&gt;\r\nX-Received: from [10.176.9.82] (mobile-166-147-083-123.mycingular.net. [166.147.83.123])\n        by mx.google.com with ESMTPSA id ki3sm8780056pbc.6.2014.02.28.11.14.00\n        for &lt;multiple recipients&gt;\n        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);\n        Fri, 28 Feb 2014 11:14:01 -0800 (PST)\r\nReferences: &lt;CAPW_8m7f0E68kNkJNLBGHRtie8ZQJFmUbpG_9Fjh4oeckz9x3A@...&gt; &lt;CAJELnLE04XURhDra-T7v3agKvUEB3SSLYNWPwOkHSkdbErx+gA@...&gt; &lt;CAPW_8m7peKG_b+LSUMX2vmu3LXw5f+gKUS-Ld_Ed0-cunSX-YQ@...&gt; &lt;CAPW_8m5pn5X9kjaaoisJ=LAOOkRXmJRUC=jLX9v3cADRKeaJJQ@...&gt; &lt;CAJELnLGS+n4PZ2GMenyf=Z9t1nePsZM+KiwPrf8ASFdfxWR2Ng@...&gt; &lt;CAPW_8m59Y08p751YhrXAU1+J2_SqP=7UWm=xUfbhmQzu0sR1dQ@...&gt; &lt;CAPW_8m6THhVM52XHKwLYZALnrx8xFOxEs+iLPqMXGFYu6oqhEw@...&gt;\r\nMime-Version: 1.0 (1.0)\r\nIn-Reply-To: &lt;CAPW_8m6THhVM52XHKwLYZALnrx8xFOxEs+iLPqMXGFYu6oqhEw@...&gt;\r\nContent-Type: multipart/alternative;\n\tboundary=Apple-Mail-F181C088-BB87-4AAB-B826-9692C83FABDE\r\nContent-Transfer-Encoding: 7bit\r\nMessage-Id: &lt;017A1E1E-98FC-4B00-840D-8EAFF2021C9E@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: iPhone Mail (11B651)\r\nDate: Fri, 28 Feb 2014 12:13:07 -0700\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Matt McClure &lt;matthewlmcclure@...&gt;\r\nSubject: Re: [rest-discuss] User Hypermedia format\r\nX-Yahoo-Group-Post: member; u=509323802; y=2XSsRY0PT8NAgpm8kV-80gXNiK5dIKoz0fMM6r6KtkIcQiW_2937VgtQ\r\nX-Yahoo-Profile: matthewlmcclure\r\n\r\n\r\n--Apple-Mail-F181C088-BB87-4AAB-B826-9692C83FABDE\r\nContent-Type: text/plain;\n\tcharset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI&#39;m concerned about verbosity of the messages as well as programmer time an=\r\nd experience. \n\nFor example, I&#39;ve been working with high resolution time se=\r\nries fitness data. Conceptually it&#39;s array like. There might be tens of sam=\r\nples per second of 1-10 different metrics, and 30 minutes is a typical dura=\r\ntion. I&#39;d like a format that just let me represent that part of a message a=\r\ns a compact first class array.\n\n-- \nhttp://matthewlmcclure.com\n\n&gt; On Feb 28=\r\n, 2014, at 11:58 AM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt; \n&gt; (copying =\r\nback to the list)\n&gt; \n&gt; all good Qs...\n&gt; \n&gt; &quot;How does the XML format represe=\r\nnt true, false, and null?&quot;\n&gt; ****\n&gt; so far, the approach i have is to treat=\r\n this all as text data:\n&gt; &lt;data transclude=3D&quot;false&quot; /&gt;\n&gt; \n&gt; it&#39;s possible =\r\nto go further into this space using XML Schema, but I am not really interes=\r\nted in backing that into the format design. You could *definitely* use it b=\r\ny adding a &lt;data url=3D&quot;...&quot; rel=3D&quot;schema&quot; /&gt; element at the top of a repr=\r\nesentation. if that&#39;s what you want do to.\n&gt; ****\n&gt; \n&gt; &quot;How does the XML fo=\r\nrmat represent objects and arrays? (Some sadist will put JSON in there unle=\r\nss we have a better answer.)&quot;\n&gt; ****\n&gt; in XML there is no intrinsic Array p=\r\nattern, just an implied one\n&gt; &lt;data rel=3D&quot;collection&quot; ...&gt;\n&gt;   &lt;data rel=\r\n=3D&quot;item&quot; ... /&gt;\n&gt;   &lt;data rel=3D&quot;item&quot; ... /&gt;\n&gt; &lt;/data&gt;\n&gt; \n&gt; is usually co=\r\nnverted into an array in code.\n&gt; \n&gt; JSON does this differently, of course b=\r\ny *requiring* explicit use of Array in the representation.\n&gt; ****\n&gt; \n&gt; &quot;Mor=\r\ne generally, I imagine your intent is to constrain clients to adopt more of=\r\n a tolerant reader approach and use less automatic serialization and deseri=\r\nalization.&quot;\n&gt; ****\n&gt; bingo! ;)\n&gt; \n&gt; my designs almost always attempt to dow=\r\nnplay direct serialization into/from code. The trouble is programming langu=\r\nages can change over time and I&#39;d like to make sure my designs don&#39;t favor =\r\n(or become dependent) upon a sub-set of programming languages.\n&gt; ****\n&gt; \n&gt; =\r\n&quot;At the same time, I think there&#39;s potential value in making compound, comp=\r\nlex data more of a first class citizen. Allowing bare object and array data=\r\n representations (not serialized into a quoted string) would let clients an=\r\nd servers reach inside the data without additional explicit deserialization=\r\n steps.&quot;\n&gt; ****\n&gt; Keeping in mind what you describe here is a &quot;programmer o=\r\nptimization&quot; there are lots of ways to do this. We all got used to converti=\r\nng XML into code by way of &quot;black box&quot; functions in a language. We also got=\r\n used to converting JSON into code in languages that didn&#39;t have the same i=\r\nnternal structure as javascript. we did this w/ black box code. \n&gt; \n&gt; We ca=\r\nn do the same with Uber (or any format, really). We need a DOM for that ,bu=\r\nt it&#39;s not too hard; esp. with something like Uber that allows for recursio=\r\nn in the model.\n&gt; ****\n&gt; \n&gt; &quot;I guess one risk of allowing objects and array=\r\ns is the antipattern of using a single data element whose value is a very c=\r\nomplex object.&quot;\n&gt; ****\n&gt; right, the killer is that messages become &quot;envelop=\r\nes&quot; for code. this is what i am trying to avoid. I am trying to design form=\r\nat where messages are messages &quot;all the way down&quot; ;)\n&gt; \n&gt; this means there =\r\nis &quot;heavy lifting&quot; in creating the message (serialization) and parsing it f=\r\nor use (&quot;de-serialization&quot;) and I want to keep that heavy lifting in code o=\r\nn each end - not in the message design itself.   For example the appeal of =\r\nJSON is that there is &quot;zero&quot; lifting if you are writing javascript. However=\r\n, that value dwindles as you get into other languages (erlang, python, etc.=\r\n). \n&gt; \n&gt; &quot;What are the tradeoffs you&#39;re trying to balance?&quot;\n&gt; ****\n&gt; i&#39;m ex=\r\nperimenting here with ways to make it easier to express a wide range of use=\r\n cases in a minimal format. and ways to make it easier to parse/validate th=\r\ne message regardless of platform or language.\n&gt; \n&gt; in my Cj design i actual=\r\nly created a design that gave a bit &quot;middle finger&quot; to serializers everywhe=\r\nre&lt;g&gt;. i also tried to make to really hard to pass recursive messages by fo=\r\nrcing a very flat structure in the message model.\n&gt; \n&gt; with Uber, i am work=\r\ning on the other end of that set of values. i want to create a model that l=\r\neads devs into creating recursive messages. but I am still working to thwar=\r\nt attempts to create code envelopes. Uber is a kind of &quot;proxy&quot; for objects =\r\non either end of the convo, not a &quot;high-fidelity object tree tunnel&quot; (if th=\r\nat makes any sense).\n&gt; \n&gt; hope this helps and love to hear more from you on=\r\n this.\n&gt; \n&gt; \n&gt; \n&gt; mamund\n&gt; +1.859.757.1449\n&gt; skype: mca.amundsen\n&gt; http://a=\r\nmundsen.com/blog/\n&gt; http://twitter.com/mamund\n&gt; https://github.com/mamund\n&gt;=\r\n http://linkedin.com/in/mamund\n&gt; \n&gt; \n&gt;&gt; On Thu, Feb 27, 2014 at 1:40 PM, Ma=\r\ntt McClure &lt;matthewlmcclure@...&gt; wrote:\n&gt;&gt; Mike,\n&gt;&gt; \n&gt;&gt; \n&gt;&gt;&gt; On Monda=\r\ny, February 24, 2014, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt;&gt; I&#39;ve also=\r\n added some text to the &quot;value&quot; definition to say JSON format MUST only be =\r\nset to string, number, or literals (true, false, null) and MUST NOT be set =\r\nto object or array. What is then implied (not yet stated in the prose) is t=\r\nhat, to pass arrays or objects in the &quot;value&quot; attribute, you need to *escap=\r\ne* the object/array and pass as a string. \n&gt;&gt; \n&gt;&gt; How does the XML format r=\r\nepresent true, false, and null?\n&gt;&gt; \n&gt;&gt; How does the XML format represent ob=\r\njects and arrays? (Some sadist will put JSON in there unless we have a bett=\r\ner answer.)\n&gt;&gt; \n&gt;&gt; More generally, I imagine your intent is to constrain cl=\r\nients to adopt more of a tolerant reader approach and use less automatic se=\r\nrialization and deserialization.\n&gt;&gt; \n&gt;&gt; At the same time, I think there&#39;s p=\r\notential value in making compound, complex data more of a first class citiz=\r\nen. Allowing bare object and array data representations (not serialized int=\r\no a quoted string) would let clients and servers reach inside the data with=\r\nout additional explicit deserialization steps.\n&gt;&gt; \n&gt;&gt; I guess one risk of a=\r\nllowing objects and arrays is the antipattern of using a single data elemen=\r\nt whose value is a very complex object.\n&gt;&gt; \n&gt;&gt; What are the tradeoffs you&#39;r=\r\ne trying to balance?\n&gt;&gt; \n&gt;&gt; Matt\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; -- \n&gt;&gt; Matt McClure\n&gt;&gt; http://m=\r\natthewlmcclure.com\n&gt;&gt; http://www.mapmyfitness.com/profile/matthewlmcclure\n&gt;=\r\n \n&gt; \n&gt; \n\r\n--Apple-Mail-F181C088-BB87-4AAB-B826-9692C83FABDE\r\nContent-Type: text/html;\n\tcharset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=3D&quot;content-type&quot; content=3D&quot;text/html; charset=\r\n=3Dutf-8&quot;&gt;&lt;/head&gt;&lt;body dir=3D&quot;auto&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;span style=3D&quot;background-col=\r\nor: rgba(255, 255, 255, 0); -webkit-text-size-adjust: auto;&quot;&gt;I&#39;m concerned =\r\nabout verbosity of the messages as well as programmer time and experience.&=\r\nnbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;-webkit-text-size-adjust: auto; backg=\r\nround-color: rgba(255, 255, 255, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;=\r\n-webkit-text-size-adjust: auto; background-color: rgba(255, 255, 255, 0);&quot;&gt;=\r\nFor example, I&#39;ve been working with high resolution time series fitness dat=\r\na. Conceptually it&#39;s array like. There might be tens of samples per second =\r\nof 1-10 different metrics, and 30 minutes is a typical duration. I&#39;d like a=\r\n format that just let me represent that part of a message as a compact firs=\r\nt class array.&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;span style=3D&quot;-webkit-text-size-adjust: aut=\r\no;&quot;&gt;--&nbsp;&lt;/span&gt;&lt;div style=3D&quot;-webkit-text-size-adjust: auto;&quot;&gt;&lt;a href=\r\n=3D&quot;http://matthewlmcclure.com&quot;&gt;http://matthewlmcclure.com&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;=\r\ndiv style=3D&quot;-webkit-text-size-adjust: auto;&quot;&gt;&lt;br&gt;On Feb 28, 2014, at 11:58=\r\n AM, mike amundsen &lt;&lt;a href=3D&quot;mailto:mamund@...&quot;&gt;mamund@...=\r\n&lt;/a&gt;&gt; wrote:&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote type=3D&quot;cite&quot; style=3D&quot;-webkit-tex=\r\nt-size-adjust: auto;&quot;&gt;&lt;div&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n&lt;span style=3D&quot;display:none&quot;&gt;&nb=\r\nsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;ygrp-text&quot;&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div di=\r\nr=3D&quot;ltr&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;(copying back to the list)&lt;br&gt;&lt;br&gt;&lt;div=\r\n dir=3D&quot;ltr&quot;&gt;all good Qs...&lt;div class=3D&quot;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&quot;&lt;span style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;How does the XML format r=\r\nepresent true, false, and null?&quot;&lt;/span&gt;&lt;/div&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;font face=3D&quot;ari=\r\nal, sans-serif&quot;&gt;****&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;so =\r\nfar, the approach i have is to treat this all as text data:&lt;/font&gt;&lt;/div&gt;&lt;di=\r\nv&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;data transclude=3D&quot;false&quot; /&gt;&lt;/fon=\r\nt&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\n\n\nit&#39;s possible to go further into this space =\r\nusing XML Schema, but I am not really interested in backing that into the f=\r\normat design. You could *definitely* use it by adding a &lt;data url=3D&quot;...=\r\n&quot; rel=3D&quot;schema&quot; /&gt; element at the top of a representation. if that&#39;s wh=\r\nat you want do to.&lt;/div&gt;\n\n\n&lt;div&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div style=3D&quot;fon=\r\nt-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px;&quot;&gt;&quot;How does the XML format represent ob=\r\njects and arrays? (Some sadist will put JSON in there unless we have a bett=\r\ner answer.)&quot;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-=\r\nsize:13px;&quot;&gt;****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:=\r\n13px;&quot;&gt;in XML there is no intrinsic Array pattern, just an implied one&lt;/div=\r\n&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;\n\n\n&lt;data re=\r\nl=3D&quot;collection&quot; ...&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;fo=\r\nnt-size:13px;&quot;&gt;&nbsp; &lt;data rel=3D&quot;item&quot; ... /&gt;&lt;/div&gt;&lt;div style=3D&quot;fo=\r\nnt-family:arial,sans-serif;font-size:13px;&quot;&gt;&nbsp; &lt;data rel=3D&quot;item&quot; ..=\r\n. /&gt;&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;=\r\n&gt;&lt;/data&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13=\r\npx;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;=\r\nis usually converted into an array in code.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-fami=\r\nly:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:ar=\r\nial,sans-serif;font-size:13px;&quot;&gt;JSON does this differently, of course by *r=\r\nequiring* explicit use of Array in the representation.&lt;/div&gt;\n\n\n&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;=\r\n&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div=\r\n style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&quot;More generally, I =\r\nimagine your intent is to constrain clients to adopt more of a tolerant rea=\r\nder approach and use less automatic serialization and deserialization.&quot;&lt;/di=\r\nv&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;****=\r\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;bingo! ;)=\r\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;\n\n\nmy designs =\r\nalmost always attempt to downplay direct serialization into/from code. The =\r\ntrouble is programming languages can change over time and I&#39;d like to make =\r\nsure my designs don&#39;t favor (or become dependent) upon a sub-set of program=\r\nming languages.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-siz=\r\ne:13px;&quot;&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div style=3D&quot;font-family:arial,sans-ser=\r\nif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;fo=\r\nnt-size:13px;&quot;&gt;&quot;At the same time, I think there&#39;s potential value in making=\r\n compound, complex data more of a first class citizen. Allowing bare object=\r\n and array data representations (not serialized into a quoted string) would=\r\n let clients and servers reach inside the data without additional explicit =\r\ndeserialization steps.&quot;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-=\r\nserif;font-size:13px;&quot;&gt;****&lt;br&gt;Keeping in mind what you describe here is a =\r\n&quot;programmer optimization&quot; there are lots of ways to do this. We all got use=\r\nd to converting XML into code by way of &quot;black box&quot; functions in a language=\r\n. We also got used to converting JSON into code in languages that didn&#39;t ha=\r\nve the same internal structure as javascript. we did this w/ black box code=\r\n.&nbsp;&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;We c=\r\nan do the same with Uber (or any format, really). We need a DOM for that ,b=\r\nut it&#39;s not too hard; esp. with something like Uber that allows for recursi=\r\non in the model.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-si=\r\nze:13px;&quot;&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div style=3D&quot;font-family:arial,sans-se=\r\nrif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;f=\r\nont-size:13px;&quot;&gt;&quot;I guess one risk of allowing objects and arrays is the ant=\r\nipattern of using a single data element whose value is a very complex objec=\r\nt.&quot;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px=\r\n;&quot;&gt;****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;ri=\r\nght, the killer is that messages become &quot;envelopes&quot; for code. this is what =\r\ni am trying to avoid. I am trying to design format where messages are messa=\r\nges &quot;all the way down&quot; ;)&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-seri=\r\nf;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;fon=\r\nt-size:13px;&quot;&gt;this means there is &quot;heavy lifting&quot; in creating the message (=\r\nserialization) and parsing it for use (&quot;de-serialization&quot;) and I want to ke=\r\nep that heavy lifting in code on each end - not in the message design itsel=\r\nf. &nbsp; For example the appeal of JSON is that there is &quot;zero&quot; lifting if=\r\n you are writing javascript. However, that value dwindles as you get into o=\r\nther languages (erlang, python, etc.).&nbsp;&lt;/div&gt;\n\n&lt;div class=3D&quot;&quot;&gt;\n&lt;div s=\r\ntyle=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&quot;What are the tradeoffs y=\r\nou&#39;re trying to balance?&quot;&lt;/div&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px;&quot;&gt;\n\n\n****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-ser=\r\nif;font-size:13px;&quot;&gt;i&#39;m experimenting here with ways to make it easier to e=\r\nxpress a wide range of use cases in a minimal format. and ways to make it e=\r\nasier to parse/validate the message regardless of platform or language.&lt;/di=\r\nv&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;in my Cj design=\r\n i actually created a design that gave a bit &quot;middle finger&quot; to serializers=\r\n everywhere&lt;g&gt;. i also tried to make to really hard to pass recursive=\r\n messages by forcing a very flat structure in the message model.&lt;/div&gt;\n\n\n&lt;d=\r\niv style=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;with Uber, i am workin=\r\ng on the other end of that set of values. i want to create a model that lea=\r\nds devs into creating recursive messages. but I am still working to thwart =\r\nattempts to create code envelopes. Uber is a kind of &quot;proxy&quot; for objects on=\r\n either end of the convo, not a &quot;high-fidelity object tree tunnel&quot; (if that=\r\n makes any sense).&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-=\r\nsize:13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:=\r\n13px;&quot;&gt;hope this helps and love to hear more from you on this.&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;font-family:arial,sans-serif;font-size:13px;&quot;&gt;\n\n\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;di=\r\nv class=3D&quot;gmail_extra&quot;&gt;&lt;div class=3D&quot;&quot;&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;div dir=3D&quot;=\r\nltr&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;mamund&lt;div&gt;&lt;span&gt;&lt;span title=3D&quot;Call with Google Voice&quot;=\r\n&gt;&lt;span title=3D&quot;Call with Google Voice&quot;&gt;&lt;a href=3D&quot;tel:%2B1.859.757.1449&quot; v=\r\nalue=3D&quot;+18597571449&quot; target=3D&quot;_blank&quot;&gt;+1.859.757.1449&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/=\r\nspan&gt;&lt;br&gt;\n\n\nskype: mca.amundsen&lt;br&gt;&lt;a href=3D&quot;http://amundsen.com/blog/&quot; ta=\r\nrget=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://twitter.=\r\ncom/mamund&quot; target=3D&quot;_blank&quot;&gt;http://twitter.com/mamund&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;h=\r\nttps://github.com/mamund&quot; target=3D&quot;_blank&quot;&gt;https://github.com/mamund&lt;/a&gt;&lt;b=\r\nr&gt;\n\n\n&lt;a href=3D&quot;http://linkedin.com/in/mamund&quot; target=3D&quot;_blank&quot;&gt;http://lin=\r\nkedin.com/in/mamund&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=3D&quot;=\r\nh5&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Feb 27, 2014 at 1:40 PM, Matt McClur=\r\ne &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:matthewlmcclure@...&quot; target=\r\n=3D&quot;_blank&quot;&gt;matthewlmcclure@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;blockquot=\r\ne class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:1px #ccc solid;&quot;&gt;\nMike,&lt;div&gt;&lt;b=\r\nr&gt;&lt;br&gt;On Monday, February 24, 2014, mike amundsen &lt;&lt;a href=3D&quot;mailto:mam=\r\nund@...&quot; target=3D&quot;_blank&quot;&gt;mamund@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&lt;blockq=\r\nuote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:1px #ccc solid;&quot;&gt;\n\n\n\n&lt;div d=\r\nir=3D&quot;ltr&quot;&gt;&lt;div&gt;I&#39;ve also added some text to the &quot;value&quot; definition to say =\r\nJSON format MUST only be set to string, number, or literals (true, false, n=\r\null) and MUST NOT be set to object or array. What is then implied (not yet =\r\nstated in the prose) is that, to pass arrays or objects in the &quot;value&quot; attr=\r\nibute, you need to *escape* the object/array and pass as a string.&nbsp;&lt;/d=\r\niv&gt;\n\n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;How does the XML format=\r\n represent true, false, and null?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;How does the XML=\r\n format represent objects and arrays? (Some sadist will put JSON in there u=\r\nnless we have a better answer.)&lt;/div&gt;\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;More generally=\r\n, I imagine your intent is to constrain clients to adopt more of a tolerant=\r\n reader approach and use less automatic serialization and deserialization.&lt;=\r\n/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;At the same time, I think there&#39;s potential value =\r\nin making compound, complex data more of a first class citizen. Allowing ba=\r\nre object and array data representations (not serialized into a quoted stri=\r\nng) would let clients and servers reach inside the data without additional =\r\nexplicit deserialization steps.&lt;/div&gt;\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I guess one ri=\r\nsk of allowing objects and arrays is the antipattern of using a single data=\r\n element whose value is a very complex object.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Wha=\r\nt are the tradeoffs you&#39;re trying to balance?&lt;/div&gt;\n\n\n&lt;span&gt;&lt;font color=3D&quot;=\r\n#888888&quot;&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Matt&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;-- =\r\n&lt;br&gt;Matt McClure&lt;br&gt;&lt;a href=3D&quot;http://matthewlmcclure.com&quot; target=3D&quot;_blank=\r\n&quot;&gt;http://matthewlmcclure.com&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.mapmyfitness.com/=\r\nprofile/matthewlmcclure&quot; target=3D&quot;_blank&quot;&gt;http://www.mapmyfitness.com/prof=\r\nile/matthewlmcclure&lt;/a&gt;&lt;br&gt;\n\n\n\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n\n\n\n\n\n&lt;!-- e=\r\nnd group email --&gt;\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail-F181C088-BB87-4AAB-B826-9692C83FABDE--\r\n\n"}}