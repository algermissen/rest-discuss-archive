{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210067383,"authorName":"Nick Gall","from":"Nick Gall &lt;nick.gall@...&gt;","profile":"nick_gall_1117","replyTo":"SENDER","senderId":"-IGry_vnD2wDOEp-YVjIjkTVmTtsbwqpkDcoXQGSjVUSr487Iz6AzR0XCeCgANfEV4ggezKe67n-kG5CPRvroOEW4oBPbw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful URLs?","postDate":"1233921800","msgId":12093,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE2YTZkZjM2MDkwMjA2MDQwM282Zjg4Njc4NHljZjY1NjBmZDRmMjJiNjQyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ2MTRGQ0E5LTk2QkUtNDU4Mi04NzExLTIwQzE3Q0I4RUI1REBnYml2LmNvbT4=","referencesHeader":"PDIwMDkwMjAzMjIzNDQzLkdBNzE2NkBrbGFuZ3JhdW0ucGxhc21hc3R1cm0ub3JnPgkgPGdtZDJwMCtzdGVkQGVHcm91cHMuY29tPgkgPDUwMzdiNmU0MDkwMjA0MTQzMGwzZTA1MzQ5M25mNjM3NWI3YmYxMDRiMDE3QG1haWwuZ21haWwuY29tPgkgPDQ5OEI5NjRDLjYwMjA0MDNAZGVob3JhLm5ldD4JIDw0NjE0RkNBOS05NkJFLTQ1ODItODcxMS0yMEMxN0NCOEVCNURAZ2Jpdi5jb20+"},"prevInTopic":12091,"nextInTopic":12094,"prevInTime":12092,"nextInTime":12094,"topicId":12048,"numMessagesInTopic":54,"msgSnippet":"... Roy, thanks for responding. I completely agree that way REST dynamically provides the next relevant set of URIs via HATEOAS is highly dynamic, and dynamic","rawEmail":"Return-Path: &lt;nick.gall@...&gt;\r\nX-Sender: nick.gall@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 23753 invoked from network); 6 Feb 2009 12:03:21 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m43.grp.scd.yahoo.com with QMQP; 6 Feb 2009 12:03:21 -0000\r\nX-Received: from unknown (HELO yw-out-1718.google.com) (74.125.46.152)\n  by mta18.grp.scd.yahoo.com with SMTP; 6 Feb 2009 12:03:20 -0000\r\nX-Received: by yw-out-1718.google.com with SMTP id 5so312215ywr.40\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Feb 2009 04:03:20 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.30.137 with SMTP id u9mr229067ibc.30.1233921800314; Fri, \n\t06 Feb 2009 04:03:20 -0800 (PST)\r\nIn-Reply-To: &lt;4614FCA9-96BE-4582-8711-20C17CB8EB5D@...&gt;\r\nReferences: &lt;20090203223443.GA7166@...&gt;\n\t &lt;gmd2p0+sted@...&gt;\n\t &lt;5037b6e40902041430l3e053493nf6375b7bf104b017@...&gt;\n\t &lt;498B964C.6020403@...&gt;\n\t &lt;4614FCA9-96BE-4582-8711-20C17CB8EB5D@...&gt;\r\nDate: Fri, 6 Feb 2009 07:03:20 -0500\r\nMessage-ID: &lt;a6a6df360902060403o6f886784ycf6560fd4f22b642@...&gt;\r\nTo: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nCc: Bill de hOra &lt;bill@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00032557416a96a1d704623ece0d\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nick Gall &lt;nick.gall@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful URLs?\r\nX-Yahoo-Group-Post: member; u=210067383; y=zknontSyVzn2TDGymGv9B1n3XRDi_8hvR0syToseeGYm8is_jQ18d5A\r\nX-Yahoo-Profile: nick_gall_1117\r\n\r\n\r\n--00032557416a96a1d704623ece0d\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Fri, Feb 6, 2009 at 12:54 AM, Roy T. Fielding &lt;fielding@...&gt; wrote:\n&gt;\n&gt; On Feb 5, 2009, at 5:45 PM, Bill de hOra wrote:\n&gt; &gt; Assaf Arkin wrote:\n&gt; &gt;\n&gt; &gt;&gt; On the other hand, in my experience it&#39;s easier to build code\n&gt; &gt;&gt; around a\n&gt; &gt;&gt; fixed URL structure, and if you only imagine having one (or few)\n&gt; &gt;&gt; clients\n&gt; &gt;&gt; to a single service, hypermedia might be an overkill.\n&gt; &gt;\n&gt; &gt; Also, hypertext for simple case tends to need two calls, one the\n&gt; &gt; bootstrap document to find the link, and two, to the actual link you\n&gt; &gt; care about. Whereas a fixed url scheme on the client means one call.\n&gt;\n&gt; Yes, a RESTful system is at least one level of indirection away\n&gt; from a strongly coupled system. A fixed URL scheme is essentially\n&gt; the same as baking the first representation into each client.\n&gt;\n&gt; Is that surprising?\n&gt;\n&gt; Likewise, a RESTful system is always going to be less efficient\n&gt; than a system designed for a static set of clients accessing\n&gt; a small set of services that never change.\n&gt;\n&gt; A lot of people think of systems as static things. Dead things.\n&gt; REST is not going to appeal to those people. All of its constraints\n&gt; are designed to keep systems living longer than we are willing\n&gt; or able to anticipate.\n\nRoy, thanks for responding. I completely agree that way REST dynamically\nprovides the next relevant set of URIs via HATEOAS is highly dynamic, and\ndynamic systems live longer than non-dynamic ones.\n\nBut you didn&#39;t address the (apparent) tension between\nbookmarking/deep-linking and REST, which was my original question.\nBookmarking takes a dynamically generated bookmark and effectively makes it\nstatic -- at least it&#39;s static (persisted) on the client side. As more and\nmore clients bookmark more and more of the URIs they receive, the more they\nare incrementally &quot;fixing&quot; the original URI space.\n\nHence my point: encouraging promiscuous bookmarking of (deep) links seems to\nbe at odds with REST&#39;s desire to minimize &quot;entry point&quot; URIs. Do you see the\ntension as well, or am I missing something that resolves the tension?\n\nDevdatta makes the excellent point earlier in the thread about &quot;how blogs\nrequire you to permalink instead of the page you are viewing.&quot; It seems that\nperhaps there is an implicit REST constraint that is beginning to become\nmore explicit. Roughly, REST distinguishes two types of URIs:\n\n\n   1. &quot;entry point&quot; type URIs, which may be bookmarked indefinitely. These\n   are Cool URIs.\n   2. &quot;transitional&quot; type URIs, which may not be bookmarked indefinitely.\n   These are unCool URIs. I call then &quot;transitional&quot; given that their role is\n   typically to enable transition to the next state.\n\nI&#39;m not wedded to the names (you could call them internal/external), but I\ndo think this distinction between types of URIs is an important aspect of\nREST that, so far, has not been clearly outlined. It certainly seems to be\nin play in the permathread debates regarding whether &quot;URIs should be RESTful\nor not&quot; (and whether that designation is even a meaningful one). I also\nthink the distinction is a bit at odds with the common understanding of URIs\non the Web that ANY URI should be a bookmarkable URI, ie that ALL URIs\nshould strive to be Cool.\n\nI think it&#39;s a pretty major change in Web architectural thinking (or at\nleast emphasis) to now say (effectively) that a significant class of\nURIs should\nNOT be cool, ie one should NOT expect them to be useable indefinitely. In a\nway, this harks all the way back to Parnas&#39;s admonition that we hide\ninformation that is likely to change. Using modern web-speak, REST seems to\nadmonish us to &quot;hide&quot; the URIs that are likely to change (unCool URIs) and\n&quot;expose&quot; only those URIs that are likely to stay the same (Cool URIs). But\nnothing I&#39;ve seen in the desciptions of Web Architecture (eg AWWWv1)\nremotely suggests that some URIs should effectively be hidden, or per my\nprevious point, not bookmarked. If anything, Web Architecture descriptions\nat least imply that all URIs SHOULD be &quot;exposed&quot; and bookmarkable.\n\nAny light you can shed on this issue would be sincerely appreciated.\n\n-- Nick\n\r\n--00032557416a96a1d704623ece0d\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Fri, Feb 6, 2009 at 12:54 AM, Roy T. Fielding &lt;&lt;a href=3D&quot;mailto:fiel=\r\nding@...&quot;&gt;fielding@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&gt;&lt;br&gt;&gt; On Feb 5, 2=\r\n009, at 5:45 PM, Bill de hOra wrote:&lt;br&gt;&gt; &gt; Assaf Arkin wrote:&lt;br&gt;&gt=\r\n; &gt;&lt;br&gt;\n&gt; &gt;&gt; On the other hand, in my experience it&#39;s easie=\r\nr to build code&lt;br&gt;&gt; &gt;&gt; around a&lt;br&gt;&gt; &gt;&gt; fixed URL struct=\r\nure, and if you only imagine having one (or few)&lt;br&gt;&gt; &gt;&gt; clients&lt;b=\r\nr&gt;&gt; &gt;&gt; to a single service, hypermedia might be an overkill.&lt;br&gt;\n&=\r\ngt; &gt;&lt;br&gt;&gt; &gt; Also, hypertext for simple case tends to need two cal=\r\nls, one the&lt;br&gt;&gt; &gt; bootstrap document to find the link, and two, to t=\r\nhe actual link you&lt;br&gt;&gt; &gt; care about. Whereas a fixed url scheme on t=\r\nhe client means one call.&lt;br&gt;\n&gt;&lt;br&gt;&gt; Yes, a RESTful system is at leas=\r\nt one level of indirection away&lt;br&gt;&gt; from a strongly coupled system. A f=\r\nixed URL scheme is essentially&lt;br&gt;&gt; the same as baking the first represe=\r\nntation into each client.&lt;br&gt;\n&gt;&lt;br&gt;&gt; Is that surprising?&lt;br&gt;&gt;&lt;br&gt;&=\r\ngt; Likewise, a RESTful system is always going to be less efficient&lt;br&gt;&gt;=\r\n than a system designed for a static set of clients accessing&lt;br&gt;&gt; a sma=\r\nll set of services that never change.&lt;br&gt;\n&gt;&lt;br&gt;&gt; A lot of people thin=\r\nk of systems as static things. Dead things.&lt;br&gt;&gt; REST is not going to ap=\r\npeal to those people. All of its constraints&lt;br&gt;&gt; are designed to keep s=\r\nystems living longer than we are willing&lt;br&gt;\n&gt; or able to anticipate.&lt;br=\r\n&gt;&lt;br&gt;&lt;div&gt;Roy, thanks for responding. I completely agree that way REST dyna=\r\nmically provides the next relevant set of URIs via HATEOAS is highly dynami=\r\nc, and dynamic systems live longer than non-dynamic ones.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;But you didn&#39;t address the (apparent) tension between bookmark=\r\ning/deep-linking and REST, which was my original question. Bookmarking take=\r\ns a dynamically generated bookmark and effectively &lt;span class=3D&quot;Apple-sty=\r\nle-span&quot; style=3D&quot;font-style: italic;&quot;&gt;makes it static&lt;/span&gt; -- at least i=\r\nt&#39;s static (persisted) on the client side. As more and more clients boo=\r\nkmark more and more of the URIs they receive, the more they are incremental=\r\nly &quot;fixing&quot; the original URI space.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hen=\r\nce my point: encouraging promiscuous bookmarking of (deep) links seems to b=\r\ne at odds with REST&#39;s desire to minimize &quot;entry point&quot; URIs. =\r\nDo you see the tension as well, or am I missing something that resolves the=\r\n tension?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Devdatta makes the excellent point earl=\r\nier in the thread about &quot;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;bor=\r\nder-collapse: collapse; &quot;&gt;how blogs require you&nbsp;to permalink instead o=\r\nf the page you are viewing.&quot; It seems that perhaps there is an implici=\r\nt REST constraint that is beginning to become more explicit. Roughly, REST =\r\ndistinguishes two types of URIs:&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span class=3D&quot;Apple-sty=\r\nle-span&quot; style=3D&quot;border-collapse: collapse;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li=\r\n&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: collapse; &quot;&gt;&qu=\r\not;entry point&quot; type URIs, which may be bookmarked indefinitely. These=\r\n are Cool URIs.&lt;/span&gt;&lt;br&gt;\n&lt;/li&gt;&lt;li&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;border-collapse: collapse;&quot;&gt;&quot;transitional&quot; type URIs, which m=\r\nay not be bookmarked indefinitely. These are unCool URIs. I call then &quot=\r\n;transitional&quot; given that their role is typically to enable transition=\r\n to the next state.&lt;/span&gt;&lt;/li&gt;\n&lt;/ol&gt;I&#39;m not wedded to the names (you c=\r\nould call them internal/external), but I do think this distinction between =\r\ntypes of URIs is an important aspect of REST that, so far, has not been cle=\r\narly outlined. It certainly seems to be in play in the permathread debates =\r\nregarding whether &quot;URIs should be RESTful or not&quot; (and whether th=\r\nat designation is even a meaningful one). I also think the distinction is a=\r\n bit at odds with the common understanding of URIs on the Web that ANY URI =\r\n&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-style: italic;&quot;&gt;should be&lt;/s=\r\npan&gt; a bookmarkable URI, ie that ALL URIs should strive to be Cool.&lt;/div&gt;\n&lt;=\r\ndiv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I think it&#39;s a pretty major change in Web architectu=\r\nral thinking (or at least emphasis) to now say (effectively) that a signifi=\r\ncant class of URIs &lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-style: it=\r\nalic;&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-weight: bold;&quot;&gt;should=\r\n NOT be cool&lt;/span&gt;&lt;/span&gt;, ie one should NOT expect them to be useable ind=\r\nefinitely. In a way, this harks all the way back to Parnas&#39;s admonition=\r\n that we hide information that is likely to change. Using modern web-speak,=\r\n REST seems to admonish us to &quot;hide&quot; the URIs that are likely to =\r\nchange (unCool URIs) and &quot;expose&quot; only those URIs that are likely=\r\n to stay the same (Cool URIs). But nothing I&#39;ve seen in the desciptions=\r\n of Web Architecture (eg AWWWv1) remotely suggests that some URIs should ef=\r\nfectively be hidden, or per my previous point, not bookmarked. If anything,=\r\n Web Architecture descriptions at least &lt;span class=3D&quot;Apple-style-span&quot; st=\r\nyle=3D&quot;font-style: italic;&quot;&gt;imply&lt;/span&gt;&nbsp;that all URIs SHOULD be &quot=\r\n;exposed&quot; and bookmarkable.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Any light you ca=\r\nn shed on this issue would be sincerely appreciated.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;d=\r\niv&gt;-- Nick&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--00032557416a96a1d704623ece0d--\r\n\n"}}