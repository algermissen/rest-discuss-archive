{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":482294859,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"r1s_3u8qeGIeAGMw4P9j2zwQBYR_pPy-Yd1vw7R0S-lK3_IM6n664XKSW68QGmOl9XPqz_GYVEKTds4bF_zbr25fXl8oEa9eFj-GEwGErw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST and HATEOAS in the context of native applications?","postDate":"1311853532","msgId":17620,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg2MDhGRTQ4LTZEMkMtNEM0My1CRUVELUQxMTMzNTlFMDlCNEBtZS5jb20+","inReplyToHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPg==","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPg=="},"prevInTopic":17619,"nextInTopic":17621,"prevInTime":17619,"nextInTime":17621,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"... Don t worry - it was the same for me. It takes your whole mind to shift. Mostly, dumping off OO-brain damage :-) ... Yes, just like a browser works. ... ","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9089 invoked from network); 28 Jul 2011 11:45:42 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 28 Jul 2011 11:45:42 -0000\r\nX-Received: from unknown (HELO asmtpout030.mac.com) (17.148.16.105)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Jul 2011 11:45:42 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=windows-1252\r\nX-Received: from [10.162.155.51] ([80.187.110.179])\n by asmtp030.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01\n 64bit (built Nov 21 2010)) with ESMTPSA id &lt;0LP10052AKNV3S90@...&gt;\n for rest-discuss@yahoogroups.com; Thu, 28 Jul 2011 04:45:35 -0700 (PDT)\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.4.6813,1.0.211,0.0.0000\n definitions=2011-07-28_03:2011-07-28,2011-07-28,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=2 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1107280064\r\nIn-reply-to: &lt;j0pb7d+iadi@...&gt;\r\nDate: Thu, 28 Jul 2011 13:45:32 +0200\r\nCc: rest-discuss@yahoogroups.com\r\nContent-transfer-encoding: quoted-printable\r\nMessage-id: &lt;8608FE48-6D2C-4C43-BEED-D113359E09B4@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt;\r\nTo: Daniel Roussel &lt;daniel@...&gt;\r\nX-Mailer: Apple Mail (2.1082)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] REST and HATEOAS in the context of native\n applications?\r\nX-Yahoo-Group-Post: member; u=482294859; y=54kTmmuHdvVwaCYBlqGd2ee-9W4NtBeSfMkvbJxAzwY87rK7Po8lflWb\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Jul 27, 2011, at 5:35 PM, Daniel Roussel wrote:\n\n&gt; Hi,\n&gt; \n&gt; I&#39;ve been r=\r\neading a lot about how to do &quot;proper&quot; REST this week and the more I read, t=\r\nhe more I&#39;m lost, especially the HATEOAS part I fear.\n\nDon&#39;t worry - it was=\r\n the same for me. It takes your whole mind to shift. Mostly, dumping off OO=\r\n-brain damage :-)\n\n&gt; \n&gt; First, to give some context, the company I work for=\r\n develops mobile applications for clients. Most of the time, they want to g=\r\net an iPhone native application, an Android application and a traditional W=\r\neb based Application to cover the other mobile phones out there.\n&gt; \n&gt; The w=\r\nay we are currently doing things is the good old (bad?) RPC over HTTP way. =\r\nWe define a bunch of URI which are coded inside the different apps, we exch=\r\nange data as JSON, etc.  This week, trying to do things in a better way, I&#39;=\r\nve begin a more serious study of REST and how to do it properly.\n&gt; \n&gt; What =\r\nI really can&#39;t wrap my head around is how, technically, have HATEOAS in a n=\r\native application? I mean, when building a native application, I have table=\r\ns to display lists, buttons to do some things, etc. My understanding is tha=\r\nt all those should be displayed based on the data (hypermedia) received fro=\r\nm the server. Is that right?\n\nYes, just like a browser works.\n\n\n&gt; \n&gt; A conc=\r\nrete example would be a hotel room rental service. The person would open th=\r\ne application and have fields to enter the from/to dates. It would then tap=\r\n a &quot;Get Available Rooms&quot;. The app would call the server and get back a list=\r\n of rooms along with prices and other details. From there the person could =\r\nselect one room and rent it. \n&gt; \n&gt; The RPC way of coding this is obvious to=\r\n me but I have no idea how I&#39;d do that in a proper REST way! \n\nWell, if the=\r\n end user is a human - use HTML.\n\n&gt; What bugs me is that every way I look a=\r\nt it, the client application would still be tightly coupled to the service.=\r\n I understand how I would only need to GET the http://rent-a-room.com URI h=\r\nardcoded and then in the response I would have the http://rent-a-room.com/a=\r\nvailable-rooms URI given. But... My application would expect each &quot;call&quot; to=\r\n return some pre-defined data and &quot;rel&quot;, those can&#39;t appear out of the blue=\r\n?!\n\nRight - your client side code should only *react* on stuff it finds, no=\r\nt *expect* it. If there is a human user directly involved, let the human do=\r\n the &#39;expecting&#39; (much like you expect certain stuff from Amazon.com even i=\r\nf your browser does not).\n\nIf the client side code needs to do more stuff w=\r\nithout user involvement than a browser (e.g. browser fetches stylesheets, J=\r\nS, images) you need to roll you own media type and build your app based on =\r\nthe hypermedia controls you define in that media type.\n\n&gt; \n&gt; I guess what I=\r\n&#39;m trying to say is that both the business process and the data exchanged m=\r\nust be known to my client application at the moment of coding it, and those=\r\n can&#39;t change without breaking existing clients. But reading about REST, ev=\r\nery is talking about loose coupling and not breaking clients... I just don&#39;=\r\nt see it.\n&gt; \n&gt; What am I missing?\n&gt; \n\nNothing, really. You are spot on. The=\r\n thing is that in networked systems the client can never be sure that the s=\r\nerver does not change. Instead, the client must be coded to take the least =\r\nfor granted and make the most out of HTTP&#39;s error responses to fail most gr=\r\nacefully.\n\nREST does not make the problem go away that is hidden by RPC-sty=\r\nle approaches. REST simply makes the fact explicit that control over uncont=\r\nrollable peers is an illusion. - and comes with a bunch of suggestions how =\r\nto suffer the least from the effects of evolving peers.\n\nMost of all REST c=\r\nhanges the way you think about networked applications in the first place.\n\n=\r\nJan\n\n\n&gt; Thanks a lot and sorry if it is a stupid question!\n&gt; \n&gt; \n\n\n"}}