{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"JZXaSrus1xO8rkAD6F6pLEwRprFCdqmTVo3h2xkJ67gcnI34ewZkS0DQ0F98Oc_jw-Q9qMNjguSv8jXCndmXw7xJ_rTzen3wn0WTsdVjvlPoPvIwrDXWDXQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: how to model actions","postDate":"1168813441","msgId":7619,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNjg4MTM0NDIuODIzOS4zNC5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PDQ1QTlCOEY4LjcwNzA5MDlAcWx1c3RlcnMuY29tPg==","referencesHeader":"PDQ1QTVEQjg3LjMwNzA3QHFsdXN0ZXJzLmNvbT4JIDw0NWE1ZGUxYi4yZTA0YjZjOS4wYThhLmZmZmY5NTllQG14Lmdvb2dsZS5jb20+CSA8MzQzZWNiM2UwNzAxMTIwMzAwajFiNDBhMzE2cTk3ZGYwYjYzMDE1MjNlMTlAbWFpbC5nbWFpbC5jb20+CSA8NDVBNzhCREQuMzA4MDkwN0BxbHVzdGVycy5jb20+CSA8MTE2ODYxMTE3NC41MzIzLjQ1LmNhbWVsQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4JIDw0NUE5QjhGOC43MDcwOTA5QHFsdXN0ZXJzLmNvbT4="},"prevInTopic":7618,"nextInTopic":7623,"prevInTime":7618,"nextInTime":7620,"topicId":7510,"numMessagesInTopic":39,"msgSnippet":"... I m not sure I understand your base assumption here. REST is just a tool to access and manipulate a business process. However in order to manipulate it,","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 12675 invoked from network); 14 Jan 2007 22:24:09 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m28.grp.scd.yahoo.com with QMQP; 14 Jan 2007 22:24:09 -0000\r\nReceived: from unknown (HELO mail02.syd.optusnet.com.au) (211.29.132.183)\n  by mta2.grp.scd.yahoo.com with SMTP; 14 Jan 2007 22:24:08 -0000\r\nReceived: from c210-49-93-69.rochd2.qld.optusnet.com.au (c210-49-93-69.rochd2.qld.optusnet.com.au [210.49.93.69])\n\tby mail02.syd.optusnet.com.au (8.13.1/8.13.1) with ESMTP id l0EMO2eo030524;\n\tMon, 15 Jan 2007 09:24:03 +1100\r\nTo: Ittay Dror &lt;ittayd@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;45A9B8F8.7070909@...&gt;\r\nReferences: &lt;45A5DB87.30707@...&gt;\n\t &lt;45a5de1b.2e04b6c9.0a8a.ffff959e@...&gt;\n\t &lt;343ecb3e0701120300j1b40a316q97df0b6301523e19@...&gt;\n\t &lt;45A78BDD.3080907@...&gt;\n\t &lt;1168611174.5323.45.camel@...&gt;\n\t &lt;45A9B8F8.7070909@...&gt;\r\nContent-Type: text/plain\r\nDate: Mon, 15 Jan 2007 08:24:01 +1000\r\nMessage-Id: &lt;1168813442.8239.34.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.3 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] Re: how to model actions\r\nX-Yahoo-Group-Post: member; u=184797058; y=vHSrQaauYL9SNgDtFtzcuVTXbOL9FddQjE1CWZ4r-ZAp19M\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Sun, 2007-01-14 at 07:00 +0200, Ittay Dror wrote:\n&gt; Benjamin Carlyle wrote:\n&gt; &gt; On Fri, 2007-01-12 at 15:23 +0200, Ittay Dror wrote:\n&gt; &gt;&gt; this article is what prompted me to submit this thread in the first\n&gt; &gt;&gt; place. if not, i would have probably gone the &quot;ebay&quot; way of\n&gt; defining\n&gt; &gt;&gt; actions in the url. i also read\n&gt; http://addsimplicity.typepad.com/adding_simplicity_an_engi/2006/11/the_rest_dialog.html in which the real architect continues the dialog from his point of view.\n&gt; &gt;&gt; what i don&#39;t like about duncan&#39;s post is that he addresses only\n&gt; getter\n&gt; &gt;&gt; and setter business functions, not real ones, those that actually\n&gt; &gt;&gt; create a process. it is very easy to say that instead of getFoo,\n&gt; you\n&gt; &gt;&gt; can GET http://example.com/foo. it is harder when you want to model\n&gt; a\n&gt; &gt;&gt; doSomething function.\n&gt; &gt; I think this is exactly the point, though. HTTP&#39;s REST replaces the\n&gt; &gt; doSomething concept with a &quot;make something so&quot; concept. If you think\n&gt; &gt; about it, all doSomething can be modelled this way. Instead of &quot;make\n&gt; &gt; this kind of state transition&quot;, just &quot;make your state this&quot;.\n&gt; not every function can be modeled around state transitions. \n\n&gt; ok, here is my current understanding:\n&gt; when you want to model a business process as REST, assuming it is an\n&gt; actual process, that creates information, not just a tool to\n&gt; manipulate one, then:\n&gt; - if the BP works on a single entity, with no other parameters, then\n&gt; maybe it can be modeled as changing a property of that entity:\n&gt; - scheduleServiceStart(Service, Date) -&gt; PUT date into\n&gt; http://example.com/service/foo/schedule\n&gt; - if the BP has multiple arguments, either break to several BP:\n&gt; - scheduleService(Service, Action, Date) -&gt; (for each action) PUT date\n&gt; into http://example.com/service/foo/action-schedule\n&gt; - otherwise, create a ProcessManager resource and POST to it the\n&gt; details of the BP. maybe partition BP and create a ProcessManager for\n&gt; each group (scheduler for schedules, others for other actions)\n\nI&#39;m not sure I understand your base assumption here. REST is just a tool\nto access and manipulate a business process. However in order to\nmanipulate it, you have to model the process as a set of resources. This\nis the same as if you were in a more general RPC environment and had to\nmodel the process as more general objects. The goal in using resources\nwith their uniform interface is to invoke properties of REST, like\nhaving your clients work with a thousand other services... controlling\nthe evolution of your network interface... that sort of thing. If your\nsystem is of sufficient scale, you might even be able to see\nimprovements in overall system performance when you apply REST\nprinciples.\n\nThe specific design a system should take will depend on factors that are\ndifficult to communicate via email. However a few options seem possible\nin your example:\n\nPOST http://example.com/services/fooservice/runschedule\napplication/the-schedule-document-type\n&lt;vevent&gt;\n\t&lt;dtstart&gt;some time&lt;/dtstart&gt;\n\t&lt;dtend&gt;later time&lt;/dtend&gt;\n&lt;/vevent&gt;\n\nNote that PUT is designed to replace the information at a particular\nresource, while POST is designed to add to it. We use POST here to add\nschedule entries without destroying earlier entries. We don&#39;t need to\nspecify anything other than start and end time, because the rest is\nhandled by the context of the URL we are POSTing to. The fooservice will\nrun and stop at the scheduled times. You could repeat this pattern for\nother services, or maintain a global/group schedule:\n\nPOST http://example.com/services/runschedule\napplication/the-schedule-document-type\n&lt;vevent&gt;\n\t&lt;dtstart&gt;some time&lt;/dtstart&gt;\n\t&lt;dtend&gt;later time&lt;/dtend&gt;\n\t&lt;url&gt;http://example.com/services/fooservice&lt;/url&gt;\n&lt;/vevent&gt;\n\nThis version would need to contain the extra information about what\nactually needed to run.\n\nNow when you get to action, you look like you are moving outside of the\npure REST envelope again. However you could model HTTP actions like\nthis:\n\nPOST http://example.com/actionschedule\napplication/the-schedule-document-type\n&lt;vevent&gt;\n\t&lt;dtstart&gt;some time&lt;/dtstart&gt;\n\t&lt;action&gt;\n\t\t&lt;method&gt;PUT&lt;/method&gt;\n\t\t&lt;url&gt;http://example.com/services/fooservice&lt;/url&gt;\n\t\t&lt;document type=&quot;application/the-document-type&quot;&gt;\n\t\t\t&lt;state&gt;running&lt;/state&gt;\n\t\t\t&lt;configuration&gt;....&lt;/configuration&gt;\n\t\t\t...\n\t\t&lt;/document&gt;\n\t&lt;/action&gt;\n&lt;/vevent&gt;\n\n&gt; if so, then isn&#39;t the ProcessManager a wrapper around RPC? the above\n&gt; process does mean that many functions inside a server can be turned to\n&gt; non-RPC REST API. \n\nIn REST we typically expose the interface to our services as information\nrather than arbitrary method invocations with names hidden in urls or\ncontent. It can be a pretty serious rethink to consider what information\nyou are providing to users for access and update, rather than what\nmethods the users may want to invoke. There are often mismatches that\nmake it difficult to do this as an API, but momentum that makes it just\nas difficult to change things internally to match the REST approach.\nSomtimes the best you can do is apply the best principles to new softare\nand see how it goes for a while before even thinking about a retrofit.\n\nIn the end you have to consider whether REST is valuable enough in your\nenvironment to offset the cost. In small well-controlled environments it\noften won&#39;t be. If the scale of your operation is larger it may start to\npay for itself in reduced coordination costs internally.\n\nBenjamin.\n\n\n"}}