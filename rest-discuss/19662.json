{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":323709912,"authorName":"Erik Wilde","from":"Erik Wilde &lt;dret@...&gt;","profile":"drethoo","replyTo":"SENDER","senderId":"tK7yVvlW7P_SXbt28U-MC5Urc8IuMKMyi2UmGviluZjmivuPtY8SMlv3nQQ89q5DZqmrgDmnpQHbQYdG6S-paNAdgVOH","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful Toggle","postDate":"1404916771","msgId":19662,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzQkQ1NDIzLjYwMTA4MDJAYmVya2VsZXkuZWR1Pg==","inReplyToHeader":"PENBQWdWemRnZERUdjhSTmt5am1TczB3WEhfLT1VdE8xK1dZYU02UHJNcG9CQmlBZXN1UUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBQWdWemRnZERUdjhSTmt5am1TczB3WEhfLT1VdE8xK1dZYU02UHJNcG9CQmlBZXN1UUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":19661,"nextInTopic":19663,"prevInTime":19661,"nextInTime":19663,"topicId":19657,"numMessagesInTopic":36,"msgSnippet":"... i am not sure this approach matches the original idea of toggling. by definition, toggling does not care about the prior state. if it did, you would","rawEmail":"Return-Path: &lt;dret@...&gt;\r\nX-Sender: dret@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54011 invoked by uid 102); 9 Jul 2014 14:39:37 -0000\r\nX-Received: from unknown (HELO mtaq4.grp.bf1.yahoo.com) (10.193.84.143)\n  by m1.grp.bf1.yahoo.com with SMTP; 9 Jul 2014 14:39:37 -0000\r\nX-Received: (qmail 17068 invoked from network); 9 Jul 2014 14:39:37 -0000\r\nX-Received: from unknown (HELO cm02fe.IST.Berkeley.EDU) (169.229.218.143)\n  by mtaq4.grp.bf1.yahoo.com with SMTP; 9 Jul 2014 14:39:37 -0000\r\nX-Received: from 77-56-165-193.dclient.hispeed.ch ([77.56.165.193] helo=dretpro.local)\n\tby cm02fe.ist.berkeley.edu with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.76)\n\t(auth plain:dret@...)\n\t(envelope-from &lt;dret@...&gt;)\n\tid 1X4t1z-0005TO-8O; Wed, 09 Jul 2014 07:39:36 -0700\r\nMessage-ID: &lt;53BD5423.6010802@...&gt;\r\nDate: Wed, 09 Jul 2014 16:39:31 +0200\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Thunderbird/24.5.0\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nCc: Dong Liu &lt;edongliu@...&gt;\r\nReferences: &lt;CAAgVzdgdDTv8RNkyjmSs0wXH_-=UtO1+WYaM6PrMpoBBiAesuQ@...&gt;\r\nIn-Reply-To: &lt;CAAgVzdgdDTv8RNkyjmSs0wXH_-=UtO1+WYaM6PrMpoBBiAesuQ@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] RESTful Toggle\r\nX-Yahoo-Group-Post: member; u=323709912; y=bkDjfTT41a69IcM9d-YaLRrGqhJWp0hjqi2HIql4wzRlhw\r\nX-Yahoo-Profile: drethoo\r\nFrom: Erik Wilde &lt;dret@...&gt;\r\n\r\nOn 2014-07-09, 16:33 , Dong Liu edongliu@... [rest-discuss] wrote:\n&gt; I agree with Keith on using PUT wit if-match.\n&gt; &quot;A request intended to update a resource (e.g., a PUT) MAY include an\n&gt; If-Match header field to signal that the request method MUST NOT be\n&gt; applied if the entity corresponding to the If-Match value (a single\n&gt; entity tag) is no longer a representation of that resource. This\n&gt; allows the user to indicate that they do not wish the request to be\n&gt; successful if the resource has been changed without their knowledge.&quot;\n\ni am not sure this approach matches the original idea of toggling. by \ndefinition, toggling does not care about the prior state. if it did, you \nwould instead simply switch to the opposite of the current state. if you \nhave a toggle service, you must accept that you cannot predict the \nresult *after* the toggle, because you do not know the state *before* \nthe toggle. if you do, you&#39;re simply using &quot;toggle&quot; as a weird synonym \nthat sometimes means &quot;on&quot; and sometimes means &quot;off&quot;, and then maybe just \nusing those terms would be a lot less confusing.\n\ncheers,\n\ndret.\n\n-- \nerik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n            | UC Berkeley  -  School of Information (ISchool) |\n            | http://dret.net/netdret http://twitter.com/dret |\n\n"}}