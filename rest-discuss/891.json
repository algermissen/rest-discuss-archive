{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","replyTo":"SENDER","senderId":"yk4kQuHGrYjUQspK6wegccXEWl3Ow6I3KEjTn0lmrG9f51oGmu_wUeNvpFegjwFlmscFI62nwNSEhCJlbEQtRy5fUQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Opacity Reconsidered","postDate":"1015469976","msgId":891,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwMzA3MDI1OS5WQUEwMjY2MkBtYXJrYmFrZXIuY2E+","inReplyToHeader":"PDNDODZDRUUzLjREMTA1MjVAanVtcC5uZXQ+IGZyb20gIkplZmYgQm9uZSIgYXQgTWFyIDA2LCAyMDAyIDA4OjIyOjI3IFBN"},"prevInTopic":890,"nextInTopic":893,"prevInTime":890,"nextInTime":892,"topicId":864,"numMessagesInTopic":29,"msgSnippet":"... Ok, so in asserting that, why not reuse that same mechanism to assert what the URIs are? ... You need to use query parameters. MB -- Mark Baker, Chief","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 02:57:49 -0000\r\nReceived: (qmail 80091 invoked from network); 7 Mar 2002 02:55:33 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m9.grp.snv.yahoo.com with QMQP; 7 Mar 2002 02:55:33 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta1.grp.snv.yahoo.com with SMTP; 7 Mar 2002 02:55:32 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id VAA02662;\n\tWed, 6 Mar 2002 21:59:37 -0500\r\nMessage-Id: &lt;200203070259.VAA02662@...&gt;\r\nSubject: Re: [rest-discuss] Opacity Reconsidered\r\nTo: jbone@... (Jeff Bone)\r\nDate: Wed, 6 Mar 2002 21:59:36 -0500 (EST)\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;3C86CEE3.4D10525@...&gt; from &quot;Jeff Bone&quot; at Mar 06, 2002 08:22:27 PM\r\nX-Mailer: ELM [version 2.5 PL3]\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\n&gt; The problem and solution are both the same in the Web case and in the local\n&gt; operating system file structure case.  How, when I run a script on a machine,\n&gt; can I be sure that /proc is the process psuedofile system and not a directory\n&gt; that just happened to be named /proc?  In the OS case, it&#39;s because I can\n&gt; somehow obtain, hopefully programatically, some assurance that the\n&gt; environment conforms to some standard --- in this case, I can tell I&#39;m\n&gt; running on (say) Plan 9 and therefore can expect /proc to be organized in and\n&gt; behave a certain way, the &quot;standard&quot; defined by Plan 9.  In the Web case, one\n&gt; assumes there would be some resource supported by the site which would\n&gt; indicate that it conformed to\n&gt; \n&gt;     http://directory.nameschemes.com/SemNameCore/2002\n&gt; \n&gt; or whatever.\n\nOk, so in asserting that, why not reuse that same mechanism to assert\nwhat the URIs are?\n\n&gt; &gt; The opacity-friendly way of doing this would be to assert a relationship\n&gt; &gt; between the main site and the URI it uses for the concepts of &quot;contact&quot;,\n&gt; &gt; &quot;help&quot;, and &quot;search&quot;.  For example, a GET on http://foo.com could\n&gt; &gt; return some N3 asserting;\n&gt; &gt;\n&gt; &gt; @prefix chs: &lt;http://jbone.net/contact-help-search&gt;\n&gt; &gt; &lt;/admin/help/&gt; a chs:Help .\n&gt; &gt; &lt;/search/&gt; a chs:Search .\n&gt; &gt; &lt;/contact-us/&gt; a chs:Contact .\n&gt; \n&gt; More or less.  I&#39;m not arguing that such information shouldn&#39;t be provided;\n&gt; indeed, I&#39;m piddling around with trying to figure out if RDF or other\n&gt; XML-based mechanisms can reasonably be used to construct generative grammars\n&gt; of the type I&#39;m talking about.\n\nYou need to use query parameters.\n\nMB\n-- \nMark Baker, Chief Science Officer, Planetfred, Inc.\nOttawa, Ontario, CANADA.      mbaker@...\nhttp://www.markbaker.ca   http://www.planetfred.com\n\n"}}