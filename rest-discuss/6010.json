{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"5huJLi6yLgAhSN6GJ9NUOOno1bTijGmg468tiiizF44WmggtsN7KLh1XOucmcrhGnfE_ygw8amFsm1qu8D8bwEOkIzOzeKc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Meaning of stateless","postDate":"1145462670","msgId":6010,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDZCQTI2QUE5LTAyMzMtNEFCRC1CNUY3LTAxRkQyNTEwMjlBQkBhcnRpbWEuY29tPg==","inReplyToHeader":"PDQ0NDY1QTQyLjcwODA5MDNAYW5jb25hZmFtaWx5LmNvbT4=","referencesHeader":"PDQ0M0ZGMzFDLjgwMDAxMDlAdmVpY29uLmNvbT4JIDwzNDNlY2IzZTA2MDQxNDEyMzBnNDFjMTMyMWNuYjJhOTM2Y2NiZjUzZGM3ZEBtYWlsLmdtYWlsLmNvbT4gPDExNDUwOTU4OTMuNjk4OC4yNi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+IDw0NDQ0NkNGMC45MDEwMzA4QGpqNS5uZXQ+IDw0RjhGRTQyNi01NEFFLTQ4REQtQUJEMC1FRjU0MzBFNTdBMEFAYXJ0aW1hLmNvbT4gPDQ0NDU4REIyLjcwNzAwMDNAamo1Lm5ldD4gPDQ0NDU5N0QzLjUwMDAwMDJAdmVpY29uLmNvbT4gPDQ0NDU5QzlDLjUwOTAxMDFAamo1Lm5ldD4gPDQ0NDVGNUFDLjkwNTA3QGRlaG9yYS5uZXQ+IDxGQjM4RjREQS0zOURELTREQTctQjMxMy0zOEFDMjlFRERDOTFAYXJ0aW1hLmNvbT4gPDQ0NDY1QTQyLjcwODA5MDNAYW5jb25hZmFtaWx5LmNvbT4="},"prevInTopic":6009,"nextInTopic":6011,"prevInTime":6009,"nextInTime":6011,"topicId":5949,"numMessagesInTopic":44,"msgSnippet":"Hi Jim, ... That s what I took away from Tim Bray s blog too. The problem that Rails is trying to solve is a real one, which is when you have a resource that","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 27508 invoked from network); 19 Apr 2006 16:05:38 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m32.grp.scd.yahoo.com with QMQP; 19 Apr 2006 16:05:38 -0000\r\nReceived: from unknown (HELO artima2.inetu.net) (209.235.240.43)\n  by mta7.grp.scd.yahoo.com with SMTP; 19 Apr 2006 16:05:37 -0000\r\nReceived: (qmail 10796 invoked by uid 89); 19 Apr 2006 16:03:59 -0000\r\nReceived: from unknown (HELO ?192.168.1.3?) (71.131.203.244)\n  by artima2.inetu.net with SMTP; 19 Apr 2006 16:03:59 -0000\r\nIn-Reply-To: &lt;44465A42.7080903@...&gt;\r\nReferences: &lt;443FF31C.8000109@...&gt;\t &lt;343ecb3e0604141230g41c1321cnb2a936ccbf53dc7d@...&gt; &lt;1145095893.6988.26.camel@...&gt; &lt;44446CF0.9010308@...&gt; &lt;4F8FE426-54AE-48DD-ABD0-EF5430E57A0A@...&gt; &lt;44458DB2.7070003@...&gt; &lt;444597D3.5000002@...&gt; &lt;44459C9C.5090101@...&gt; &lt;4445F5AC.90507@...&gt; &lt;FB38F4DA-39DD-4DA7-B313-38AC29EDDC91@...&gt; &lt;44465A42.7080903@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;6BA26AA9-0233-4ABD-B5F7-01FD251029AB@...&gt;\r\nCc: =?ISO-8859-1?Q?Bill_de_h=D3ra?= &lt;bill@...&gt;,\n REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Wed, 19 Apr 2006 09:04:30 -0700\r\nTo: Jim Ancona &lt;jim@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Re: Meaning of stateless\r\nX-Yahoo-Group-Post: member; u=198693287; y=Yw2DVhDBmKm-INS5u1uYuUoymomMHjxZ-25E9Pqqcz54ZNfM6JU\r\nX-Yahoo-Profile: billvenners\r\n\r\nHi Jim,\n\nOn Apr 19, 2006, at 8:41 AM, Jim Ancona wrote:\n\n&gt; I believe that Tim&#39;s objection to the Rails idiom was that the\n&gt; /img.png?20060404 and /img.png?20060419 aren&#39;t really distinct  \n&gt; resources\n&gt; because only one of the two will exist on the server at a time. So I\n&gt; can&#39;t bookmark one version and expect to be able to access it once  \n&gt; a new\n&gt; version is deployed.\n&gt;\nThat&#39;s what I took away from Tim Bray&#39;s blog too. The problem that  \nRails is trying to solve is a real one, which is when you have a  \nresource that changes only very occasionally, you want to take  \nadvantage of caching by saying cache this for a long time. But then  \nwhen it does change, you also want the changes to propagate quickly.  \nOther ways to deal with this are:\n\n1. Decide what lag time is acceptable to you and say that after that  \nmuch time you need to check to see if the resource has been updated,  \nperhaps with if-modified-since or if-none-match if you have multiple  \nrepresentations. That way it is just a check each time, and you don&#39;t  \nactually have to send the whole thing again until you actually do  \nchange it. For RSS feeds, for example, you could say let up to 30  \nminutes go by before they even check.\n\n2. If no time lag is acceptable, then just have them check each time.  \nBy using if-modified-since or if-none-match, you don&#39;t have to *send*  \nthe resource again until it changes, but you do have to handle all  \nthe requests. This approach requires more server processing in  \nexchange for prompt propagation of updates, but one side benefit, if  \nthis is something you&#39;re interested in, is that this approach gives  \nyou a better accounting of how many client touches the resource is  \nactually getting.\n\nOne thing I&#39;m trying to figure out how to do in our home-grown web/ \nmvc architecture is respond to if-modified-since and if-none-match  \nwithout actually doing all the processing to render the resource. I  \nalso want it to be easy for us to configure which caching strategy a  \nresource gets.\n\n&gt;&gt; It isn&#39;t assigning URIs to representations. It is assigning a URI to\n&gt;&gt; each piece of conversational state, each of which by definition\n&gt;&gt; becomes a resource. By defining a URI for each step along the way in\n&gt;&gt; a conversation, the user can back up to any previous place in the\n&gt;&gt; conversation with the back button.\n&gt;\n&gt; It seems that Bill V&#39;s proposal doesn&#39;t have the problem that Tim\n&gt; identified--he&#39;s saying that if I bookmark my basket before adding an\n&gt; item, I can access the previous state of the basket by calling up the\n&gt; bookmarked URL (or hitting the back button). That sounds like a lot  \n&gt; for\n&gt; the server to keep track of, but not an abuse of HTTP or URLs.\n&gt;\nIt is just memory and disk space, which is cheap, and to me I think  \nit is the cost of doing things over HTTP, for which you get HTTP&#39;s  \nmassive scaling potential. The actual controllers that respond to  \nthese requests are quite simple. And it allows the user to back up  \nand hit reload, to open up another window and fork off a different  \nconversational path, and so on. Later you can remove these snapshots  \nof conversational state. They can have expiration times after which  \nthey can be reaped, or they can be deleted after a conversation has  \nbeen consummated somehow, such as after a shopping cart has been  \npurchased, if you wish.\n\nAnd this notion I have of diamonds or whatever you want to call these  \nlittle steps of state change with URIs is what I think of as a way to  \ndo *conversational state* with users, not persistent state. Bill de  \nHora&#39;s suggestion of using a single URI for the whole shopping cart  \nsounds a bit more like thinking of the shopping cart as persistent  \nstate, not conversational state. That&#39;s a potential way to approach  \nshopping carts, but they feel more to me like the conversation I have  \nwith the user up until they purchase. Then the purchase is persistent  \nstate.\n\nBill\n----\nBill Venners\nEditor-in-Chief\nArtima Developer\nhttp://www.artima.com\n\n\n"}}