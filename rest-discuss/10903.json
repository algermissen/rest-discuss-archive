{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"&quot;mike amundsen&quot; &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"Hkjr6-D4wrv1Y-wrik7qjLZr9sB8Ot1mLbQ_mU3AVIm9Kwry3jmL-B-9dZZnCFjSaUTBh3hna_jrtfczO8Wb3c75mcXrjncQcw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Pretty URLs, sessions, and no cookies","postDate":"1213147345","msgId":10903,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDgwNjEwMTgyMnE2NDU2ZmRhNW1mYTQ2ZjMwNDgzNTNjYTRlQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDgwNjExMDI1OC4xNDMzMy5taWNoYWVsQHNjaHVlcmlnLmRlPg==","referencesHeader":"PDIwMDgwNjEwMTYyNTMzLmFhOWEzZmIzNTViZDc2NzM1MjY4OGM2MjE1MDRkZjI0LjkwYzBjNmRkODkud2JlQGVtYWlsLnNlY3VyZXNlcnZlci5uZXQ+CSA8MjAwODA2MTEwMjU4LjE0MzMzLm1pY2hhZWxAc2NodWVyaWcuZGU+"},"prevInTopic":10902,"nextInTopic":10906,"prevInTime":10902,"nextInTime":10904,"topicId":10886,"numMessagesInTopic":28,"msgSnippet":"Michael: Some comments on the HTTP Auth issue: First, HTTP Auth is your best (safest, easiest, most portable) way to identify your users. This is especially","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 40537 invoked from network); 11 Jun 2008 01:22:26 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m53.grp.scd.yahoo.com with QMQP; 11 Jun 2008 01:22:26 -0000\r\nX-Received: from unknown (HELO yw-out-1718.google.com) (74.125.46.155)\n  by mta17.grp.scd.yahoo.com with SMTP; 11 Jun 2008 01:22:26 -0000\r\nX-Received: by yw-out-1718.google.com with SMTP id 5so2109582ywm.72\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 10 Jun 2008 18:22:25 -0700 (PDT)\r\nX-Received: by 10.151.154.20 with SMTP id g20mr9536459ybo.59.1213147345728;\n        Tue, 10 Jun 2008 18:22:25 -0700 (PDT)\r\nX-Received: by 10.150.201.15 with HTTP; Tue, 10 Jun 2008 18:22:25 -0700 (PDT)\r\nMessage-ID: &lt;b548df650806101822q6456fda5mfa46f3048353ca4e@...&gt;\r\nDate: Tue, 10 Jun 2008 21:22:25 -0400\r\nTo: &quot;Michael Schuerig&quot; &lt;michael@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;200806110258.14333.michael@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;20080610162533.aa9a3fb355bd767352688c621504df24.90c0c6dd89.wbe@...&gt;\n\t &lt;200806110258.14333.michael@...&gt;\r\nX-Google-Sender-Auth: 9d5e63c353bc53e7\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;mike amundsen&quot; &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Re: Pretty URLs, sessions, and no cookies\r\nX-Yahoo-Group-Post: member; u=69164307; y=0YjDHaq5Z2J1dCv5bCki0MPiIec3UShtS1CFB7jI8mOZ\r\nX-Yahoo-Profile: mamund\r\n\r\nMichael:\n\nSome comments on the HTTP Auth issue:\nFirst, HTTP Auth is your best (safest, easiest, most portable) way to\nidentify your users. This is especially true when you start supporting\nnon-human interaction with your applications.  While the dialogs\noffered by common browsers are disappointing, they are what they are.\n\nSecond, I found that I *want* authentication to be &#39;out-of-band.&#39;  I\ndon&#39;t want to write code in my application to present these dialogs,\naccept, validate, and process the inputs. I just want the\nauthentication to be done and the results handed off to me.  I also do\nnot want to &#39;carry&#39; lots of (possibly dangerous) metadata around or\nstore it in disk or memory on the server. HTTP Auth handles all this\nquite nicely.\n\nThrid, there are a number of &#39;work-arounds&#39; to the browser dialog if\nyou really want to try to hide this. Paul James has posted some fine\nmaterial on the subject. There are others, too.\n\nNow about the the URLs:\nI&#39;ve come to think that URLs are cheap and you can mint lots of them.\nI see no reason to *not* present users w/ &#39;personalized&#39; URLs\n(/recent-updates/mike/). That doesn&#39;t mean you need to always pass\nthese personalized URIs to the client. For example, a call to\n/recent-updates/ might get the server to check the credentials and\nthen forward the request to the &#39;personalized&#39; URL. If the client has\nnot authenticated, then the server will not forward to the custom URL\nand just present the &#39;public&#39; document that lives at /recent-updates/\n(which might include a link to login).\n\nAnother reason to consider URLs that include identifying data is that\nthey are rather easy to secure. For example, if your personalized URLs\nall contain ../users/&lt;user-id&gt;/.. you can write server code that\nvalidates the requested URL against the login credentails and rejects\nimproperly authenticated requests.\n\nCaching comes into play, too. If you present a document from /my-data/\nthat has been built up on the server using metadata (user id,\nsession-id, etc.), it&#39;s possible that some server will cache that\npage. If another user comes along (an un-authed user) and requests the\nsame URL, they might get the wrong data. Of course, you can mark all\nyour content as non-cacheable, but is that what you want?\n\nJust some things to consider.\n\nMikeA\n\nOn Tue, Jun 10, 2008 at 8:58 PM, Michael Schuerig &lt;michael@...&gt; wrote:\n&gt; On Wednesday 11 June 2008, Etan Wexler wrote:\n&gt;&gt; Michael Schuerig wrote (in\n&gt;&gt;\n&gt;&gt; &lt;http://tech.groups.yahoo.com/group/rest-discuss/message/10894&gt;):\n&gt;&gt; &gt; When I have a *user* interface where some resources need\n&gt;&gt; &gt; authenticated access, then I need some kind of session, don&#39;t I?\n&gt;&gt;\n&gt;&gt; When you have a user interface in which access to some resources\n&gt;&gt; requires authentication (and, presumably, authorization), there is no\n&gt;&gt; need for maintaining a session at the origin server.\n&gt;\n&gt; Most respondents have apparently understood &quot;session&quot; as meaning\n&gt; server-side conversational state. That&#39;s not what I had in mind, I&#39;m\n&gt; quite content with authentication information or possibly a set of\n&gt; capabilities.\n&gt;\n&gt;&gt; As the\n&gt;&gt; administrator of the origin server, all that you need is that each\n&gt;&gt; request bear acceptable credentials. Even that is not quite correct,\n&gt;&gt; because a request that fails to bear acceptable credentials should\n&gt;&gt; prompt a response that bears a challenge for credentials. Did I miss\n&gt;&gt; something?\n&gt;\n&gt; Possibly. Let&#39;s say I have a resource where the representation depends\n&gt; on the credentials of the requester. I could associate each\n&gt; representation with its own URL, but that&#39;s not what I want.\n&gt; Essentially, I only ever want to have one canonical URL and a requester\n&gt; gets to see what their credentials allow. In particular, someone with\n&gt; no credentials at all may still get to see a rudimentary\n&gt; representation. In such a scenario there is no point in challenging the\n&gt; requester -- human user. They may decide to log in or log in with\n&gt; different credentials, but that&#39;s up to the them.\n&gt;\n&gt; Also, as far as I can tell, an http auth challenge involves popping up a\n&gt; browser-level dialog. I take it, most users aren&#39;t accustomed to this.\n&gt; And, at any rate, it modally drags them out of the application context\n&gt; without a chance for inline help messages or &quot;I forgot my password&quot;\n&gt; links.\n&gt;\n&gt; I&#39;d really like to make this work, but I&#39;m not convinced there is a way.\n&gt;\n&gt; Michael\n&gt;\n&gt; --\n&gt; Michael Schuerig\n&gt; mailto:michael@...\n&gt; http://www.schuerig.de/michael/\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n-- \nmca\nhttp://amundsen.com/blog/\n\n"}}