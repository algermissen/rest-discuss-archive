{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":139691997,"authorName":"Tyler Close","from":"Tyler Close &lt;tyler@...&gt;","profile":"tjclose","replyTo":"SENDER","senderId":"mOdzS0b02fcKQOwX2QZsBMVotCj6Q6xU6g3Le1RFwePb97ZOlu-sGXhr4xidhuHpqS74Q1W0wfs2AG9zaX0t8cCDvAWes2Y","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements","postDate":"1046951350","msgId":3482,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEUxOHF0czgtMDAwNFBNLTAwQGNhbnRlZW4+","inReplyToHeader":"PDNFNjQzRjA3LjgwMDA4MDVAcG9uZC5jb20+","referencesHeader":"PFBpbmUuTE5YLjQuNDAuMDMwMzAzMTYyODEyMC4yODgzLTEwMDAwMEBjb2xvc3N1cy5pMng+IDxFMThxMzd0LTAwMDJzNy0wMEBjYW50ZWVuPiA8M0U2NDNGMDcuODAwMDgwNUBwb25kLmNvbT4="},"prevInTopic":3481,"nextInTopic":3493,"prevInTime":3481,"nextInTime":3483,"topicId":3351,"numMessagesInTopic":49,"msgSnippet":"... So how important is application security to you and others on this list? Are there people on this list that implement business applications, or is it","rawEmail":"Return-Path: &lt;tyler@...&gt;\r\nX-Sender: tyler@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_1); 6 Mar 2003 12:06:08 -0000\r\nReceived: (qmail 25331 invoked from network); 6 Mar 2003 12:06:08 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m6.grp.scd.yahoo.com with QMQP; 6 Mar 2003 12:06:08 -0000\r\nReceived: from unknown (HELO canteen) (209.88.232.42)\n  by mta2.grp.scd.yahoo.com with SMTP; 6 Mar 2003 12:06:06 -0000\r\nReceived: from canteen ([127.0.0.1] helo=there)\n\tby canteen with smtp (Exim 3.35 #1 (Debian))\n\tid 18qts8-0004PM-00\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 06 Mar 2003 07:49:12 -0400\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements\r\nDate: Thu, 6 Mar 2003 07:49:10 -0400\r\nX-Mailer: KMail [version 1.3.2]\r\nReferences: &lt;Pine.LNX.4.40.0303031628120.2883-100000@colossus.i2x&gt; &lt;E18q37t-0002s7-00@canteen&gt; &lt;3E643F07.8000805@...&gt;\r\nIn-Reply-To: &lt;3E643F07.8000805@...&gt;\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: 8bit\r\nMessage-Id: &lt;E18qts8-0004PM-00@canteen&gt;\r\nFrom: Tyler Close &lt;tyler@...&gt;\r\nX-Yahoo-Group-Post: member; u=139691997\r\nX-Yahoo-Profile: tjclose\r\n\r\nOn Tuesday 04 March 2003 01:52, Chuck Hinson wrote:\n&gt; Tyler Close wrote:\n&gt; &gt;Switching to capabilities improves your GUI, your application\n&gt; &gt;design and your security.\n&gt;\n&gt; I&#39;ll take your word on the security bit.  I&#39;m not convinced of the other\n&gt; two.\n\nSo how important is application security to you and others on this\nlist? Are there people on this list that implement business\napplications, or is it mostly open use applications?\n\nI request that the list owner open a poll on this question: &quot;I am\ncurrently implementing a web-service that provides access to a\nbusiness process. yes/no&quot;.\n\n&gt; So then, I don&#39;t understand your comment from an earlier message:\n&gt; &lt;quote&gt;... you&#39;re right, you wouldn&#39;t use this model to give everyone\n&gt; their own URI to a single, shared, read-only resource. &lt;/quote&gt;\n&gt;\n&gt; As far as I am able to observe, an awful lot of the web consists of\n&gt; shared, read-only resources.  Are you saying that access control isn&#39;t\n&gt; necessary for shared, read-only resources?\n\nOften, access control does not make sense for a shared, read-only\nresource. To answer the question, you have to study the situation\nto determine the roles of the participants.\n\nIn order for shared access to be an access control problem, it\nmust be the case that *all* participants want to protect access to\nthe shared resource. If any participant does not care about\nprotecting access, the access-control mechanism is without\nmeaning.  This is the case in the WSJ example.\n\nWhen only a subset of the participants wish to protect access to\nthe shared resource, the problem is a DRM problem.\n\nTypically, access to a shared resource is only an access control\nproblem when the shared resource is modifiable. It is rare for a\nmodifiable resource to be shared between more than two\nparticipants.\n\n&gt; A more useful example would be something like\n&gt;\n&gt; https://www.bank.com/myaccounts/savings/register\n&gt;\n&gt; With http auth, I can give this URL to everyone who has an account at\n&gt; the bank, and that URI means the same thing to all of them - the page\n&gt; that shows the viewer the last 20 entries in their savings account\n&gt; register.\n\nAh, but that&#39;s not the question I asked you. Can you post a\ntraversable link to an entry from *your* account history?\n\n&gt; Note that I&#39;m not suggesting that this is a good solution for accessing\n&gt; bank accounts - it just illustrates the idea of a public, sharable URI.\n&gt;  My understanding of the capability model leads me to conclude that I\n&gt; can&#39;t do anything like the above because every user would have to have\n&gt; their own URI.\n\nTelling someone how to access their own resource is also easily\ndone in the capability model. Using the graph that defines the\nstructure of the web of resources, you can determine what path\nthey need to follow. So, in a capability solution, you would say:\n&quot;Starting from your main account page, follow the path:\n&#39;savings/register/&#39;.&quot; Using my web-calculus solution, you would do\nthis by appending the query string &quot;?path=savings/register/&quot; to\nthe main account page URI.\n\n&gt; &gt;The point of access control is to create private webs of\n&gt; &gt;resources, with finely controlled links between them. Capabilities\n&gt; &gt;are an excellent tool for implementing this.\n&gt;\n&gt; I dont disagree.  But it appears to me that the private web that is\n&gt; created is only useful to one individual.  What about groups of people?\n&gt;  If the answer is that everyone in the group shares the same, private\n&gt; URI, then how do I revoke access to just one member of the group. (I\n&gt; suspect your answer to this is going show that I don&#39;t understand the\n&gt; capability model after all.)\n\nI think you are still thinking about DRM scenarios. As I said\nabove, it is rare for a modifiable resource to be shared between\nmore than two participants.\n\nWhen you want to have revokable access to a shared resource, you\ndo give each participant a unique URI for the shared resource. To\nrevoke access, you revoke just the corresponding URI. This is no\nmore complex than managing an ACL for the resource would be.\n\n&gt; &gt;&gt;As a result, you&#39;ve lost the ability for people to connect\n&gt; &gt;&gt;those resources together in new ways to create new things on the web.\n&gt; &gt;\n&gt; &gt;Exactly the opposite.  What you&#39;ve done is empowered people to\n&gt; &gt;securely connect those resource that they want connected. The ACL\n&gt; &gt;model prevents this.\n&gt; &gt;\n&gt; &gt;Just as an example, why don&#39;t you post to this list a link to a\n&gt; &gt;withdrawal record from your online bank account. With the current\n&gt; &gt;interface, this is not possible: you can&#39;t do it without also\n&gt; &gt;posting the password for your entire account. If your bank account\n&gt; &gt;was implemented with a capability-based security model, posting\n&gt; &gt;the withdrawal record link would be no problem.  Capabilities\n&gt; &gt;enable you to create links.  ACLs prevent you from creating links.\n&gt;\n&gt; I&#39;m not sure why.  Assuming the withdrawal record has a URI, I dont see\n&gt; why I couldn&#39;t do that using a non-capability-based solution.  (I&#39;ve\n&gt; also just realized that we&#39;re probably using the word _link_ differently.)\n\nDoes your bank account have a separate ACL for every addressable\nresource? Are you allowed to modify those ACLs? Are you allowed to\nintroduce new principals into the ACL system? Are you allowed to\ndelegate all of this authority to others? Typically, the answer to\nall these questions is &#39;no&#39;. To support linking, all these\nquestions have to be answered &#39;yes&#39;.  An ACL design becomes far\ntoo complex when it tries to answer &#39;yes&#39; to all these questions.\nWhen the application becomes this complex, it becomes a playground\nfor crackers.  A capability security model supports fine-grained\nlinking with minimal complexity.\n\n&gt; &gt;&gt;So how do you establish an initial context (or whatever its called) in a\n&gt; &gt;&gt;capability-based system without doing authentication?\n&gt; &gt;\n&gt; &gt;Your initial context is whatever set of URIs you start with. If\n&gt; &gt;your program is an XSLT stylesheet, your initial context is the\n&gt; &gt;set of URIs in the input XML document.\n&gt;\n&gt; But how do I (as a client) get that initial set of URIs without\n&gt; participating in some kind of authentication process?  What do I click\n&gt; on (or reference) to get started?\n\nAre you asking how a new user gets added to an existing\napplication? If so, the first URI is given to the new user in much\nthe same way as a username/password is given to a new user.\n\n&gt; Ok - I guess I meant an example of how you would solve it.  What does\n&gt; the URI namespace look like?  How do you navigate among the various\n&gt; resources?\n\nIf you want a fully worked out example, I suggest something\nsimpler, like the tradeable credit example in the web-calculus\nspecification:\n\nhttp://www.waterken.com/dev/Web/Calculus/\n\nThe schemas for all the resources used in this example can be\nfound at:\n\nhttp://waterken.com/iou/\n\n&gt; &gt;Access control is about controlling what authority you hand out.\n&gt; &gt;DRM is about controlling how people use authority they have\n&gt; &gt;already been given.\n&gt;\n&gt; I wont contest your definition, but my impression is that most people\n&gt; dont use that definition (rightly or wrongly).\n\nI agree that most people don&#39;t know the first thing about\nsoftware security. I blame this mostly on the complexity of\nexisting software security solutions. I think the simpler\ncapability security model could change the status quo.\n\n&gt; Controlling access to a\n&gt; Resource (the R in URI) is about determining whether or not you are\n&gt; allowed to perform an operation on that resource - are you allowed to\n&gt; perform a GET/PUT/POST/DELETE.\n\nActually, that&#39;s just a product of access control. Access control\nis about how you came to have the authority to perform a\nGET/PUT/POST/DELETE, how you exercise that authority, and how you\ndelegate that authority to others. This is a subtle but very\nimportant distinction. The difference has caused great confusion\nand error for many people, even some very smart people.\n\n&gt; Which brings me to another question.  I understand that you control who\n&gt; can access a URI by controlling to whom you give the URI, but how do you\n&gt; control how they access the named resource.  That is, how do you control\n&gt; whether or not they can POST vs GET?\n\nOne of the main design principles in capability-based security is\nthat distinctions in authority be reified as different resources.\nIf POST and GET provide different kinds of authority, they should\nbe different resources, accessed through different URIs.\n\nThis means that GET on a POSTable resource should only provide\ninformation about what to POST. GETing the results of POSTing\nshould be a different URI. This means you&#39;ve got one URI that\nprovides read-access to the current state of the resource, and a\ndifferent URI that provides the authority to modify the state of\nthe resource. Most existing web-applications are already designed\nthis way.\n\nTyler\n\n"}}