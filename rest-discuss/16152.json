{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"NlRbfw71QZBh1pqGSr_tyvTbXb7R9C6HH27uTTLRucXK-QZeQB6f_TMl2V9QTcYmI6xg-ebqX1GrtPVm6Oi43gO2W2eNuYQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281037224","msgId":16152,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrekFkSHpYU1lSTFNRREhLc1ByY2JLM3lhVnRiWG82ZndIZ0N2T0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDEyODEwMzY0NzQuMjkxNy4zMDQuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+CTw0QzVCMENFMS4yMDQwOTA5QHRpYmNvLmNvbT4JPDEyODEwMzY0NzQuMjkxNy4zMDQuY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16151,"nextInTopic":16153,"prevInTime":16151,"nextInTime":16153,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"Juergen: here s two possibilities: one i use and one from Microsoft s Azure Queue implementation: I ve done this in the past: - POST to the LIST-URI to add an","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54769 invoked from network); 5 Aug 2010 19:41:25 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 5 Aug 2010 19:41:25 -0000\r\nX-Received: from unknown (HELO mail-ww0-f50.google.com) (74.125.82.50)\n  by mta1.grp.sp2.yahoo.com with SMTP; 5 Aug 2010 19:41:25 -0000\r\nX-Received: by wwa36 with SMTP id 36so5884758wwa.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 05 Aug 2010 12:40:26 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.227.129.4 with SMTP id m4mr9454542wbs.123.1281037224669; Thu, \n\t05 Aug 2010 12:40:24 -0700 (PDT)\r\nX-Received: by 10.216.137.29 with HTTP; Thu, 5 Aug 2010 12:40:24 -0700 (PDT)\r\nIn-Reply-To: &lt;1281036474.2917.304.camel@backpack&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\n\t&lt;4C5B0CE1.2040909@...&gt;\n\t&lt;1281036474.2917.304.camel@backpack&gt;\r\nDate: Thu, 5 Aug 2010 15:40:24 -0400\r\nX-Google-Sender-Auth: KfFIiErh1ggXuLTqTeOU0Pilbng\r\nMessage-ID: &lt;AANLkTikzAdHzXSYRLSQDHKsPrcbK3yaVtbXo6fwHgCvO@...&gt;\r\nTo: juergen.brendel@...\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=69164307; y=VJh6mmwAwWZezWAM7cLHZx7YDA2HxjXuBzCUd6Bg6hij\r\nX-Yahoo-Profile: mamund\r\n\r\nJuergen:\n\nhere&#39;s two possibilities: one i use and one from Microsoft&#39;s Azur=\r\ne\nQueue implementation:\n\nI&#39;ve done this in the past:\n- POST to the LIST-URI=\r\n to add an item\n- POST to the ITEM-URI to &quot;take ownership&quot; (server marks th=\r\ne item as\n&quot;taken&quot;, any lists show your workstation has that item, no other =\r\nuser\ncan claim it, etc.)\n- DELETE to the ITEM-URI (w/ etag) when you are do=\r\nne working on it\n(e.g. it&#39;s been successfully completed) (server takes it o=\r\nut of the\nactive list, possibly puts it in archives, etc.)\n\nNOTE: If &quot;you&quot; =\r\ndon&#39;t perform a DELETE on the item in X minutes, the\nitem is placed back in=\r\nto the &quot;active&quot; list where some other user can\nclaim it.\n\nadvantages of thi=\r\ns model are:\n- GET to ITEM-URI and LIST-URI is safe and can be used for rea=\r\nd-only cases\n- POST to ITEM-URI can create log entries for historical revie=\r\nw\n- POST to ITEM-URI returns etag that must be used when DELETEing it.\nif y=\r\nour etag doesn&#39;t match, it&#39;s not yours to delete, etc.\n- POST to ITEM-URI t=\r\nhat has been claimed will return 4xx\n- POST to ITEM-URI that &quot;you&quot; already =\r\n&quot;own&quot; will return 200 OK (this\nallows repeats in case &quot;you&quot; never got the e=\r\narlier POST response or in\ncase &quot;you&quot; need more time to process the item, e=\r\ntc.)\n- DELETE to ITEM-URI w/out proper etag or that &quot;you&quot; do not own fails =\r\nw/ 4xx\n\ndownsides:\n- must do DELETE to clear completed items.\n\nMicrosoft Az=\r\nure Queue details here:\nhttp://msdn.microsoft.com/en-us/library/dd179363.as=\r\npx\n\nmca\nhttp://amundsen.com/blog/\nhttp://mamund.com/foaf.rdf#me\n\n\n\n\nOn Thu,=\r\n Aug 5, 2010 at 15:27, Juergen Brendel\n&lt;juergen.brendel@...&gt; wrote=\r\n:\n&gt;\n&gt;\n&gt; There is no concept of ownership of the items. Assume a bunch of\n&gt; =\r\n&#39;clients&#39; that pop the next item to be processed. It doesn&#39;t matter who\n&gt; o=\r\nf them gets which item, it&#39;s just that one item must be seen by exactly\n&gt; o=\r\nne client only.\n&gt;\n&gt; Items are also added to the queue on the other end, so =\r\nwhen an item is\n&gt; given to a client, it should actually be removed from the=\r\n queue at that\n&gt; moment.\n&gt;\n&gt; Authentication is not an issue for this.\n&gt;\n&gt;\n&gt;=\r\n\n&gt; On Thu, 2010-08-05 at 12:11 -0700, Eric Johnson wrote:\n&gt;&gt; Your scenario =\r\nposits multiple consumers. =A0How does the server-side\n&gt;&gt; distinguish those=\r\n consumers?\n&gt;&gt;\n&gt;&gt; Are you doing bi-directional SSL authentication, HTTP-Bas=\r\nic, or just\n&gt;&gt; giving each consumer their own URL?\n&gt;&gt;\n&gt;&gt; In any case, &quot;GET&quot;=\r\n can be idempotent on a particular URL if you define\n&gt;&gt; the URL as:\n&gt;&gt;\n&gt;&gt; &quot;=\r\nget resource already assigned to me, or if none, the next queued\n&gt;&gt; resourc=\r\ne available.&quot; =A0Until the particular client then deletes (or\n&gt;&gt; updates st=\r\nate to reflect that it has been consumed), the server will\n&gt;&gt; simply give t=\r\nhe same response each time the consumer asks.\n&gt;&gt;\n&gt;&gt; -Eric.\n&gt;&gt;\n&gt;&gt; On 08/05/2=\r\n010 11:59 AM, Juergen Brendel wrote:\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; Hello!\n&gt;&gt; &gt;\n&gt;&gt; &gt; Let&#39;s =\r\nsay I have a queue resource: /foo\n&gt;&gt; &gt;\n&gt;&gt; &gt; I can POST new entries into the=\r\n queue. I can even refer to\n&gt;&gt; &gt; individual\n&gt;&gt; &gt; entries within the queue: =\r\n/foo/&lt;id&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; But how do I pop the next entry? How do I construct a s=\r\ningle request\n&gt;&gt; &gt; that gets me the next/first entry but also removes the e=\r\nntry at the\n&gt;&gt; &gt; same\n&gt;&gt; &gt; time?\n&gt;&gt; &gt;\n&gt;&gt; &gt; Maybe I can implement a special =\r\nresource /foo/next, which always\n&gt;&gt; &gt; refers\n&gt;&gt; &gt; to the next entry in the =\r\nqueue. But clearly, I can&#39;t use GET to pop\n&gt;&gt; &gt; the\n&gt;&gt; &gt; entry, since that =\r\nwould not be idempotent.\n&gt;&gt; &gt;\n&gt;&gt; &gt; The queue has multiple consumers, so the=\r\n &#39;pop&#39; operation should be\n&gt;&gt; &gt; atomic. This seems to rule out the possibil=\r\nity of doing a GET to\n&gt;&gt; &gt; retrieve the latest element, followed by a DELET=\r\nE to remove it.\n&gt;&gt; &gt; Someone\n&gt;&gt; &gt; else could have gotten the &#39;latest&#39; eleme=\r\nnt in the meantime, thus\n&gt;&gt; &gt; causing the same element to be consumed twice=\r\n.\n&gt;&gt; &gt;\n&gt;&gt; &gt; Maybe I can cause a &#39;move&#39;, where a single request causes the n=\r\next\n&gt;&gt; &gt; element to be renamed to a unique ID, which is then returned to th=\r\ne\n&gt;&gt; &gt; client, who then is the only one who has a handle on that object.\n&gt;&gt;=\r\n &gt; The\n&gt;&gt; &gt; client can then work with the resource. But the question now is=\r\n:\n&gt;&gt; &gt;\n&gt;&gt; &gt; a) What happens when the client fails before it can delete the\n=\r\n&gt;&gt; &gt; resource?\n&gt;&gt; &gt; b) What is the best way to &#39;move&#39; an item in that way?\n=\r\n&gt;&gt; &gt;\n&gt;&gt; &gt; Juergen\n&gt;&gt; &gt;\n&gt;&gt; &gt; --\n&gt;&gt; &gt; Juergen Brendel\n&gt;&gt; &gt; http://restx.mules=\r\noft.org\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;\n&gt;\n&gt; --\n&gt; Juergen Brendel\n&gt; Architect, Mu=\r\nleSoft Inc.\n&gt; http://mulesoft.com\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; -------------------------------=\r\n-----\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}