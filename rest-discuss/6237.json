{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic","from":"Nic &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"YrjhARlKjciTGZp_UwTTHBWkeZ92ZSxr_L8M-8Ono26Evy-9lw9E7N0UxqZvn6NGbmCxAf__gpFgmWVRO3RR2R-bcIc7WZcCsaE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Can ReST replace cookies?","postDate":"1146956941","msgId":6237,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3bGt0ZWFnejYuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+","inReplyToHeader":"PEVEMjAwNUE4LTNDMEMtNEUyNS1CNDU3LTBERjUzNTNENkMyMkBnYW1lcGFydHkubmV0PiAoTWVyeW4gU3RvbCdzIG1lc3NhZ2Ugb2YgIlN1biwgNyBNYXkgMjAwNiAwMDo1MDozMyArMDIwMCIp","referencesHeader":"PDQ0NUEzQTM5LjcwNjAzMDZAdWx0cmF2aW9sZXQub3JnPgk8ODc2NGtsZnlncC5mc2ZAbmljZmVycmllci50YXBzZWxsZmVycmllci5jby51az4JPDYxRjY4NTAwLUVCQzEtNDQzNi05RTExLTg2OUY5Q0M4RDZDN0BnYW1lcGFydHkubmV0Pgk8ODc2NGtrZXVuZC5mc2ZAbmljZmVycmllci50YXBzZWxsZmVycmllci5jby51az4JPEVEMjAwNUE4LTNDMEMtNEUyNS1CNDU3LTBERjUzNTNENkMyMkBnYW1lcGFydHkubmV0Pg=="},"prevInTopic":6236,"nextInTopic":6238,"prevInTime":6236,"nextInTime":6238,"topicId":6192,"numMessagesInTopic":34,"msgSnippet":"... This is the best way of doing it I think. Roy pretty much details it in his paper. But not all browsers support AJAX specifically. Some support Javascript","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 95816 invoked from network); 6 May 2006 23:17:51 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m31.grp.scd.yahoo.com with QMQP; 6 May 2006 23:17:51 -0000\r\nReceived: from unknown (HELO owls-house.tapsellferrier.co.uk) (81.187.188.218)\n  by mta7.grp.scd.yahoo.com with SMTP; 6 May 2006 23:17:50 -0000\r\nReceived: from nicferrier.tapsellferrier.co.uk ([172.31.50.1])\n\tby owls-house.tapsellferrier.co.uk with esmtp (Exim 4.60 #1 (Debian))\n\tid 1FcVuM-00032s-IM; Sun, 07 May 2006 00:09:54 +0100\r\nReceived: from nferrier by nicferrier.tapsellferrier.co.uk with local (Exim 4.50)\n\tid 1FcVtW-0001Nv-0V; Sun, 07 May 2006 00:09:02 +0100\r\nTo: Meryn Stol &lt;meryn@...&gt;\r\nCc: Tracy R Reed &lt;treed-yahoo@...&gt;,  rest-discuss@yahoogroups.com\r\nReferences: &lt;445A3A39.7060306@...&gt;\n\t&lt;8764klfygp.fsf@...&gt;\n\t&lt;61F68500-EBC1-4436-9E11-869F9CC8D6C7@...&gt;\n\t&lt;8764kkeund.fsf@...&gt;\n\t&lt;ED2005A8-3C0C-4E25-B457-0DF5353D6C22@...&gt;\r\nDate: Sun, 07 May 2006 00:09:01 +0100\r\nIn-Reply-To: &lt;ED2005A8-3C0C-4E25-B457-0DF5353D6C22@...&gt; (Meryn Stol&#39;s message of &quot;Sun, 7 May 2006 00:50:33 +0200&quot;)\r\nMessage-ID: &lt;87lkteagz6.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Nic &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Can ReST replace cookies?\r\nX-Yahoo-Group-Post: member; u=3702469; y=hxXbBkOHbj5Bwpo_151QDvjafWFN8MH7ZrbYPUJClAbP5PMpvq96z62UlG5cnVjDYu4\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\nMeryn Stol &lt;meryn@...&gt; writes:\n\n&gt;&gt; Using cookies at least gives you the chance of using client side code\n&gt;&gt; to vary what is presented to the user without changing the\n&gt;&gt; representation for everyone. Clearly, this only works for small\n&gt;&gt; amounts of variable data. The contents of a shopping basket, or some\n&gt;&gt; user details for example.\n&gt;\n&gt; Wouldn&#39;t it be nice to apply ajax to this problem:\n&gt; You could have the server return a generic representation of a  \n&gt; shopping basket, including the nescessary javascript to load the  \n&gt; (user specific) contents of the shopping basket with a seperate HTTP  \n&gt; call. The result is a generic URL in a browser (which can be shared  \n&gt; with everyone), while the generic shoppping basket representation  \n&gt; still can be cached, and having serepate urls for each actual  \n&gt; &#39;shopping basket instance&#39;.\n\nThis is the best way of doing it I think. Roy pretty much details\nit in his paper.\n\nBut not all browsers support AJAX specifically. Some support\nJavascript and most support cookies.\n\n\n&gt; I have a feeling this pattern could increase server performance for  \n&gt; many ecommerce and commmunity websites tremendously. You could cache  \n&gt; a lot of dynamicly built representations on the serverside. Am I  \n&gt; overestimating this effect?\n\nNo. That&#39;s why everyone&#39;s excited about AJAX.\n\n\n&gt; Would using ajax to compose &#39;multidimensional&#39; on-screen resource  \n&gt; resprentations (e.g. (resource,user) as opposed to the one- \n&gt; dimensional representations generated by the server) be very  \n&gt; noticable? I&#39;ve never done any serious ajax testing. Is there anyone  \n&gt; with some ajax-experience here?\n\nI have. It works fine depending on latency and the resources available\nto the client.\n\nUsing light data representation can help, JSON for example removes the\nneed to parse returned XML at all.\n\n\nHowever, the cookie approach is still valid because with that you\nmight not need any user specific resources at all. All the logic could\nbe client side and stored in the cookie.\n\nConsider the shopping cart. When you buy something a primary key\nrepresenting the item gets added to the cookie (by client side\ncode). You can buy more things which results in the cookie getting\nlonger.\n\nWhen you want to check out the contents of the Cookie are POSTed to\nthe server side and the server can deal with the purchase. It still\nwouldn&#39;t have to return a user specific resource (maybe it emails you\nthe invoice) and it still doesn&#39;t break REST.\n\nI&#39;m not saying this particular example is a good example... but it is\nillustrative of my point about client side cookies.\n\n\nNic\n\n"}}