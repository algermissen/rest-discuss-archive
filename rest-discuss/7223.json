{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"xkVOyx9kZ4msAclpCwPejFZ4w7cvysHz02t8632KuVkxkXg5wGRyaehIdD6pERxXCEv6wHR5LcB3PpOkmeS5lorSsjX038aRRXzQC48KXJ4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Programming Model for REST Clients","postDate":"1166003644","msgId":7223,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEZCRTkwNjNELTMxQzItNDU2NS05MkQ4LUEyNUQxRTgyNTZDQ0BtYWMuY29tPg==","inReplyToHeader":"PEE5RTQwNjE2LTUwNzMtNEU1NS05REI3LUVGRDdGNURCNTM3MEBtYWMuY29tPg==","referencesHeader":"PEE5RTQwNjE2LTUwNzMtNEU1NS05REI3LUVGRDdGNURCNTM3MEBtYWMuY29tPg=="},"prevInTopic":7222,"nextInTopic":7227,"prevInTime":7222,"nextInTime":7224,"topicId":7221,"numMessagesInTopic":11,"msgSnippet":"[does this new Yahoo-groups HTML format screw up the mail clients of other s too or is it just me? I could have sworn I changed the settings to normal but I","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 28128 invoked from network); 13 Dec 2006 09:54:16 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m36.grp.scd.yahoo.com with QMQP; 13 Dec 2006 09:54:16 -0000\r\nReceived: from unknown (HELO smtpout.mac.com) (17.250.248.186)\n  by mta5.grp.scd.yahoo.com with SMTP; 13 Dec 2006 09:54:16 -0000\r\nReceived: from mac.com (smtpin04-en2 [10.13.10.149])\n\tby smtpout.mac.com (Xserve/8.12.11/smtpout16/MantshX 4.0) with ESMTP id kBD9sEpL022472\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 13 Dec 2006 01:54:14 -0800 (PST)\r\nReceived: from [10.0.1.2] (d116212.adsl.hansenet.de [80.171.116.212])\n\t(authenticated bits=0)\n\tby mac.com (Xserve/smtpin04/MantshX 4.0) with ESMTP id kBD9s4KP006316;\n\tWed, 13 Dec 2006 01:54:10 -0800 (PST)\r\nIn-Reply-To: &lt;A9E40616-5073-4E55-9DB7-EFD7F5DB5370@...&gt;\r\nReferences: &lt;A9E40616-5073-4E55-9DB7-EFD7F5DB5370@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-2-865366792\r\nMessage-Id: &lt;FBE9063D-31C2-4565-92D8-A25D1E8256CC@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nDate: Wed, 13 Dec 2006 10:54:04 +0100\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-Brightmail-Tracker: AAAAAA==\r\nX-Brightmail-scanned: yes\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Programming Model for REST Clients\r\nX-Yahoo-Group-Post: member; u=289191104; y=IuOJJ3DErAJ6g2V7G4j-1taJ4oEnw3AcG_abo0UABeK11PItwfP_h_vr\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\r\n--Apple-Mail-2-865366792\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\n[does this new Yahoo-groups HTML format screw up the mail clients of  \nother&#39;s too or is it just me? I could have sworn I changed the  \nsettings to &#39;normal&#39; but I keep receiving these anoyingly enhanced  \nversions of emails]\n\n\nHere is a follow up on the general client model:\n\nLOOP:\n- receive representation\n- process and keep all state traversal options (links)\n- discard those not understood\n- discard those that are irrelevant to the current overall goal\n- use the state/state transition dependency table to pick the most  \nrelevant transition\n   - maybe spawn thread to follow lower priority but independent  \ntransitions in the\n     background\n- if no transiotion is suitable, abort proceeding through application  \n(there is\n   obviously a mismatch in the understanding of the process between  \nclient and\n   server)\n- do the state transition and repeat LOOP\n\n\nJan\n\n\n\n\nOn 13.12.2006, at 09:59, Jan Algermissen wrote:\n\n&gt; Hi,\n&gt;\n&gt; the following is only half-cooked,\n\n&gt; but I&#39;d like to share it anyhow;\n&gt; maybe it inspires somebody.\n&gt;\n&gt; One of the strengths of RESTful systems is that the server can change\n&gt; the state machine of an application at runtime because the client\n&gt; does not rely on its own assumption about the sequence of\n&gt; interactions but is guided through the application by the server.\n&gt;\n&gt; This works perfectly well for humans interacting with an application\n&gt; because we can dynamically change our behaviour depending on the how\n&gt; the application proceeds. For non-human clients, I see a mismatch\n&gt; between the &quot;hypermedia as engine of application state&quot; model and the\n&gt; traditional (sequential) way clients would actually carry out their\n&gt; tasks.\n&gt;\n&gt; IOW, if clients are implemented as a sequence of HTTP requests, the\n&gt; whole idea of the servers being able to change the state machine at\n&gt; runtime breaks.\n&gt;\n&gt; I used to think that a possible solution could be found in the area\n&gt; of event based programming models (such as those models that GUI\n&gt; libraries use) but there has allways been a problem with the client\n&gt; being an actor, not just a passive part of the interaction being\n&gt; called upon.\n&gt;\n&gt; Now, what about this:\n&gt;\n&gt; At the most granular level, a software client&#39;s purpose is to carry\n&gt; out some interaction to reach an overall goal (&quot;buy a book at an\n&gt; online store&quot;). To achive this goal, a number of sub-goals are known\n&gt; (&quot;process/browse offers&quot; , &quot;accept an offer (== pich a book)&quot;, &quot;make\n&gt; payment&quot;) have to be completed. These subgoals depend on each other\n&gt; in a certain way. These dependencies are what is inherent to the\n&gt; business process semantics; while the sequence of operations can be\n&gt; romed from the design time decisions (which REST successfully did)\n&gt; the dependencies cannot - they need to be built into the client logic.\n&gt;\n&gt; In addition, sub-goals can be given a priority (browsing for other\n&gt; offers is independent of performing a purchase, but there definitely\n&gt; is a priority that determines what to do if two subgoals are possible\n&gt; to follow at a given point).\n&gt;\n&gt; This I think is a rather accurate picture of how humans actually\n&gt; proceed through a Web application.\n&gt;\n&gt; I think, the aboive can be formalized sufficiently to form the basis\n&gt; for a more suitable programming model for REST clients.\n&gt;\n&gt; Thoughts greatly apprechiated....\n&gt;\n&gt; Jan\n&gt;\n&gt; \n\n\r\n--Apple-Mail-2-865366792\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=ISO-8859-1\r\n\r\n&lt;HTML&gt;&lt;BODY style=3D&quot;word-wrap: break-word; -khtml-nbsp-mode: space; -khtml=\r\n-line-break: after-white-space; &quot;&gt;&lt;DIV&gt;[does this new Yahoo-groups HTML for=\r\nmat screw up the mail clients of other&#39;s too or is it just me? I could have=\r\n sworn I changed the settings to &#39;normal&#39; but I keep receiving these anoyin=\r\ngly enhanced versions of emails]&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeho=\r\nlder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;Here is a=\r\n follow up on the general client model:&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-=\r\nplaceholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;LOOP:&lt;/DIV&gt;&lt;DIV&gt;- receive representation&lt;/DIV&gt;&lt;DIV&gt;=\r\n- process and keep all state traversal options (links)&lt;/DIV&gt;&lt;DIV&gt;- discard =\r\nthose not understood&lt;/DIV&gt;&lt;DIV&gt;- discard those that are irrelevant to the c=\r\nurrent overall goal&lt;/DIV&gt;&lt;DIV&gt;- use the state/state transition dependency t=\r\nable to pick the most relevant transition&lt;/DIV&gt;&lt;DIV&gt;=A0 - maybe spawn threa=\r\nd to follow lower priority but independent transitions in the&lt;/DIV&gt;&lt;DIV&gt;=A0=\r\n=A0 =A0background&lt;/DIV&gt;&lt;DIV&gt;- if no transiotion is suitable, abort proceedi=\r\nng through application (there is&lt;/DIV&gt;&lt;DIV&gt;=A0 obviously a mismatch in the =\r\nunderstanding of the process between client and&lt;/DIV&gt;&lt;DIV&gt;=A0 server)&lt;/DIV&gt;=\r\n&lt;DIV&gt;- do the state transition and repeat LOOP&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml=\r\n-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;=\r\n&lt;DIV&gt;Jan&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR cla=\r\nss=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placehol=\r\nder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;DIV&gt;&lt;DIV&gt;On 13.12.2006, at 09:59, Jan Algermissen wrote:&lt;/D=\r\nIV&gt;&lt;BR class=3D&quot;Apple-interchange-newline&quot;&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;SPAN =\r\nclass=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: separate; border-spaci=\r\nng: 0px 0px; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; =\r\nfont-style: normal; font-variant: normal; font-weight: normal; letter-spaci=\r\nng: normal; line-height: normal; text-align: auto; -khtml-text-decorations-=\r\nin-effect: none; text-indent: 0px; -apple-text-size-adjust: auto; text-tran=\r\nsform: none; orphans: 2; white-space: normal; widows: 2; word-spacing: 0px;=\r\n &quot;&gt;&lt;DIV id=3D&quot;ygrp-mlmsg&quot; style=3D&quot;width:655px; position:relative;; font-fa=\r\nmily: arial; font-size: 13px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-msg&quot; style=3D&quot;width: 490px;=\r\n padding: 0 15px 0 0; float:left;  z-index:1;; font-family: arial; font-siz=\r\ne: 13px; line-height: 15px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-text&quot;&gt;&lt;P style=3D&quot;font-family=\r\n: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style=\r\n-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;=\r\n&gt;Hi,&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height:=\r\n 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 1=\r\n5px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font=\r\n-size: 13px; line-height: 15px; &quot;&gt;the following is only half-cooked,=A0&lt;BR&gt;=\r\n&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/SPAN&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE=\r\n type=3D&quot;cite&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: s=\r\neparate; border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Helveti=\r\nca; font-size: 12px; font-style: normal; font-variant: normal; font-weight:=\r\n normal; letter-spacing: normal; line-height: normal; text-align: auto; -kh=\r\ntml-text-decorations-in-effect: none; text-indent: 0px; -apple-text-size-ad=\r\njust: auto; text-transform: none; orphans: 2; white-space: normal; widows: =\r\n2; word-spacing: 0px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-mlmsg&quot; style=3D&quot;width:655px; positi=\r\non:relative;; font-family: arial; font-size: 13px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-msg&quot; s=\r\ntyle=3D&quot;width: 490px; padding: 0 15px 0 0; float:left;  z-index:1;; font-fa=\r\nmily: arial; font-size: 13px; line-height: 15px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-text&quot;&gt;&lt;P=\r\n style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN=\r\n class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px;=\r\n line-height: 15px; &quot;&gt;but I&#39;d like to share it anyhow; &lt;/SPAN&gt;&lt;BR style=3D&quot;=\r\nfont-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;=\r\nApple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-heig=\r\nht: 15px; &quot;&gt;maybe it inspires somebody.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Geo=\r\nrgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georg=\r\nia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; =\r\nstyle=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;One of=\r\n the strengths of RESTful systems is that the server can change &lt;/SPAN&gt;&lt;BR =\r\nstyle=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN =\r\nclass=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; =\r\nline-height: 15px; &quot;&gt;the state machine of an application at runtime because=\r\n the client &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line=\r\n-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Geo=\r\nrgia; font-size: 13px; line-height: 15px; &quot;&gt;does not rely on its own assump=\r\ntion about the sequence of &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-s=\r\nize: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;f=\r\nont-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;interactions but=\r\n is guided through the application by the server.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-f=\r\namily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-fam=\r\nily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-st=\r\nyle-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px=\r\n; &quot;&gt;This works perfectly well for humans interacting with an application &lt;/=\r\nSPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px;=\r\n &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-siz=\r\ne: 13px; line-height: 15px; &quot;&gt;because we can dynamically change our behavio=\r\nur depending on the how &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size=\r\n: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font=\r\n-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;the application pro=\r\nceeds. For non-human clients, I see a mismatch &lt;/SPAN&gt;&lt;BR style=3D&quot;font-fam=\r\nily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-st=\r\nyle-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px=\r\n; &quot;&gt;between the &quot;hypermedia as engine of application state&quot; model and the &lt;=\r\n/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px=\r\n; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-si=\r\nze: 13px; line-height: 15px; &quot;&gt;traditional (sequential) way clients would a=\r\nctually carry out their &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size=\r\n: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font=\r\n-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;tasks.&lt;/SPAN&gt;&lt;BR st=\r\nyle=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR styl=\r\ne=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN clas=\r\ns=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line=\r\n-height: 15px; &quot;&gt;IOW, if clients are implemented as a sequence of HTTP requ=\r\nests, the &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-h=\r\neight: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georg=\r\nia; font-size: 13px; line-height: 15px; &quot;&gt;whole idea of the servers being a=\r\nble to change the state machine at &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia=\r\n; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; st=\r\nyle=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;runtime =\r\nbreaks.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-heig=\r\nht: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height=\r\n: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; f=\r\nont-size: 13px; line-height: 15px; &quot;&gt;I used to think that a possible soluti=\r\non could be found in the area &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; fon=\r\nt-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;of event ba=\r\nsed programming models (such as those models that GUI &lt;/SPAN&gt;&lt;BR style=3D&quot;f=\r\nont-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;A=\r\npple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-heigh=\r\nt: 15px; &quot;&gt;libraries use) but there has allways been a problem with the cli=\r\nent &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height:=\r\n 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; fo=\r\nnt-size: 13px; line-height: 15px; &quot;&gt;being an actor, not just a passive part=\r\n of the interaction being &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-si=\r\nze: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;fo=\r\nnt-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;called upon.&lt;/SPA=\r\nN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;=\r\n&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;S=\r\nPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13=\r\npx; line-height: 15px; &quot;&gt;Now, what about this:&lt;/SPAN&gt;&lt;BR style=3D&quot;font-fami=\r\nly: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family=\r\n: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style=\r\n-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;=\r\n&gt;At the most granular level, a software client&#39;s purpose is to carry &lt;/SPAN=\r\n&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;=\r\nSPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 1=\r\n3px; line-height: 15px; &quot;&gt;out some interaction to reach an overall goal (&quot;b=\r\nuy a book at an &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; =\r\nline-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family:=\r\n Georgia; font-size: 13px; line-height: 15px; &quot;&gt;online store&quot;). To achive t=\r\nhis goal, a number of sub-goals are known &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: =\r\nGeorgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-s=\r\npan&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;(=\r\n&quot;process/browse offers&quot; , &quot;accept an offer (=3D=3D pich a book)&quot;, &quot;make &lt;/S=\r\nPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; =\r\n&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size=\r\n: 13px; line-height: 15px; &quot;&gt;payment&quot;) have to be completed. These subgoals=\r\n depend on each other &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: =\r\n13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-f=\r\namily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;in a certain way. The=\r\nse dependencies are what is inherent to the &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family=\r\n: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style=\r\n-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;=\r\n&gt;business process semantics; while the sequence of operations can be &lt;/SPAN=\r\n&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;=\r\nSPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 1=\r\n3px; line-height: 15px; &quot;&gt;romed from the design time decisions (which REST =\r\nsuccessfully did) &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px=\r\n; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-famil=\r\ny: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;the dependencies cannot -=\r\n they need to be built into the client logic.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-famil=\r\ny: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family:=\r\n Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-=\r\nspan&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;=\r\nIn addition, sub-goals can be given a priority (browsing for other &lt;/SPAN&gt;&lt;=\r\nBR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SP=\r\nAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13p=\r\nx; line-height: 15px; &quot;&gt;offers is independent of performing a purchase, but=\r\n there definitely &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px=\r\n; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-famil=\r\ny: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;is a priority that determ=\r\nines what to do if two subgoals are possible &lt;/SPAN&gt;&lt;BR style=3D&quot;font-famil=\r\ny: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-styl=\r\ne-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; =\r\n&quot;&gt;to follow at a given point).&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; fon=\r\nt-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-=\r\nsize: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;=\r\nfont-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;This I think is=\r\n a rather accurate picture of how humans actually &lt;/SPAN&gt;&lt;BR style=3D&quot;font-=\r\nfamily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple=\r\n-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 1=\r\n5px; &quot;&gt;proceed through a Web application.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: G=\r\neorgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Geo=\r\nrgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span=\r\n&quot; style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;I th=\r\nink, the aboive can be formalized sufficiently to form the basis &lt;/SPAN&gt;&lt;BR=\r\n style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN=\r\n class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px;=\r\n line-height: 15px; &quot;&gt;for a more suitable programming model for REST client=\r\ns.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 1=\r\n5px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15p=\r\nx; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-s=\r\nize: 13px; line-height: 15px; &quot;&gt;Thoughts greatly apprechiated.&lt;/SPAN&gt;&lt;WBR s=\r\ntyle=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN c=\r\nlass=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 13px; l=\r\nine-height: 15px; &quot;&gt;...&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size:=\r\n 13px; line-height: 15px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 1=\r\n3px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-fa=\r\nmily: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;Jan&lt;/SPAN&gt;&lt;BR style=3D=\r\n&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;&lt;/WBR&gt;&lt;/P&gt;&lt;/DI=\r\nV&gt;&lt;SPAN width=3D&quot;1&quot; style=3D&quot;color: white;; color: rgb(255, 255, 255); font=\r\n-family: arial; font-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-=\r\nstyle-span&quot; style=3D&quot;color: rgb(255, 255, 255); font-family: arial; font-si=\r\nze: 13px; line-height: 15px; &quot;&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/BLOCKQUOTE&gt;&lt;/DIV&gt;&lt;BR&gt;=\r\n&lt;/BODY&gt;&lt;/HTML&gt;\r\n--Apple-Mail-2-865366792--\r\n\n"}}