{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":263982739,"authorName":"Mike Herrick","from":"Mike Herrick &lt;mherrick66@...&gt;","profile":"mherrick66","replyTo":"SENDER","senderId":"CobDP-rH8Ej21ZQg_6QdqMyFOKYco-_Q_ndP3fDeArb0CkgGm605Rz9wgHX5yb_pKGRgJz889mVCdA4UfCerNoFGorL0YTaj","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST & Internal Integration","postDate":"1145583025","msgId":6079,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdFRDY5QzI3LTRGMEEtNDk2RC1BREFDLUU0MkVGMjFFQkJBMkBtYWMuY29tPg==","inReplyToHeader":"PEJBWTEwMS1EQVYxMkJGMzREN0E4REE0QTIyMEMxRDFBRDhDNTBAcGh4LmdibD4=","referencesHeader":"PEJBWTEwMS1EQVYxMkJGMzREN0E4REE0QTIyMEMxRDFBRDhDNTBAcGh4LmdibD4="},"prevInTopic":6077,"nextInTopic":6105,"prevInTime":6078,"nextInTime":6080,"topicId":5992,"numMessagesInTopic":12,"msgSnippet":"Oops, I left off most of my response with that last email ... ignore it. Use this instead.","rawEmail":"Return-Path: &lt;mherrick66@...&gt;\r\nX-Sender: mherrick66@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 70041 invoked from network); 21 Apr 2006 01:30:48 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m28.grp.scd.yahoo.com with QMQP; 21 Apr 2006 01:30:48 -0000\r\nReceived: from unknown (HELO smtpout.mac.com) (17.250.248.174)\n  by mta10.grp.scd.yahoo.com with SMTP; 21 Apr 2006 01:30:48 -0000\r\nReceived: from mac.com (smtpin03-en2 [10.13.10.148])\n\tby smtpout.mac.com (Xserve/8.12.11/smtpout04/MantshX 4.0) with ESMTP id k3L1Ulas009207;\n\tThu, 20 Apr 2006 18:30:48 -0700 (PDT)\r\nReceived: from [10.0.1.113] (c-71-193-198-186.hsd1.or.comcast.net [71.193.198.186])\n\t(authenticated bits=0)\n\tby mac.com (Xserve/smtpin03/MantshX 4.0) with ESMTP id k3L1Ufwl006850;\n\tThu, 20 Apr 2006 18:30:43 -0700 (PDT)\r\nIn-Reply-To: &lt;BAY101-DAV12BF34D7A8DA4A220C1D1AD8C50@...&gt;\r\nReferences: &lt;BAY101-DAV12BF34D7A8DA4A220C1D1AD8C50@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-2--227898905\r\nMessage-Id: &lt;7ED69C27-4F0A-496D-ADAC-E42EF21EBBA2@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nDate: Thu, 20 Apr 2006 18:30:25 -0700\r\nTo: Mike Dierken &lt;mdierken@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Mike Herrick &lt;mherrick66@...&gt;\r\nSubject: Re: [rest-discuss] REST & Internal Integration\r\nX-Yahoo-Group-Post: member; u=263982739; y=IStOkI0S-2xUb-uZe9JHe36TlCcnxORD78YHZn7PFfcNQKuD_Q\r\nX-Yahoo-Profile: mherrick66\r\n\r\n\r\n--Apple-Mail-2--227898905\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\nOops, I left off most of my response with that last email ... ignore  \nit. Use this instead.\n\n&gt; ##########\n&gt; I appreciate your response Mike. Yes, many of the integration\n&gt; types I mentioned are done using JMS today. I responded to\n&gt; some of your comments below. Thanks again.\n&gt;\n&gt; Mike\n&gt; ##########\n\n\nOn Apr 18, 2006, at 10:20 PM, Mike Dierken wrote:\n\n&gt; I think all of those could be designed to have uniform interfaces  \n&gt; and resource identifiers and exchange representations of state. You  \n&gt; could build it yourself, and the limits of your integration would  \n&gt; be as far as you care to push them. Or you could use existing  \n&gt; technology - possibly placing extra constraints to achieve the  \n&gt; uniform interface, resource identifiers, etc. - and maybe do it  \n&gt; cheaper with broader acceptance. The existing technologies could be  \n&gt; HTTP (for most of those), or something like JMS or a vendor  \n&gt; specific message publishing/queueing system.\n&gt;\n&gt;  &gt; For example looking up existing customer information. It  \n&gt; definitely wouldn&#39;t be my first choice, however, for something  \n&gt; transactional like creating an order.\n&gt; &gt; Not saying I&#39;d never do it, just wouldn&#39;t be my first choice.\n&gt; Using HTTP for requests that must be transactional doesn&#39;t seem to  \n&gt; be a problem in my view. I&#39;m pretty sure there are several online  \n&gt; retailers that use HTTP to create and manage orders. It&#39;s even  \n&gt; theoretically possible they use HTTP within their firewall as well  \n&gt; - but you can never know what&#39;s going on in there...\n&gt; What is it about HTTP based request/response doesn&#39;t fit with  \n&gt; &#39;transactional&#39; from your point of view?\n&gt;\n&gt; &gt; My problem with using Web Style at all for heavy integration is  \n&gt; the coupling and complexity that starts to add up\n&gt; &gt; when you have a lot of services all doing Request/Reply. Each  \n&gt; client has to handle errors and retry logic.\n&gt; When you have a network, each client has to handle errors and retry  \n&gt; logic. Really. The nifty part about REST is that with a uniform  \n&gt; interface and a message oriented protocol, once you have it figure  \n&gt; out, that software is re-usable across different services - whether  \n&gt; it&#39;s creating an order, updating inventory, changing prices or  \n&gt; getting a list of things in a shopping cart.\n\n\n&gt; ##########\n&gt; Yeah, you are correct on the network - that argument sold me\n&gt; on REST vs. WS-*. Here is where I am coming from . I spend\n&gt; most of my time working on a system that has approximately 50\n&gt; services. The services are pretty stupid, all they know is\n&gt; they get an event XML input. They typically respond with an\n&gt; XML event. They listen on a set of JMS Topics or a Topic\n&gt; pattern (e.g., COMPANYNAME.LINEOFBUSINESS.NOUN.*).\n&gt; They also typically respond to set of Topics. What I like\n&gt; about JMS in the system is the guaranteed delivery & durable\n&gt; subscriptions. The service impls don&#39;t care about the network\n&gt; because they know that JMS is there. When they send a message\n&gt; it is persisted before the thread returns. It is nice not to\n&gt; have to do this by hand (i.e., ferret it away in a database\n&gt; in the receiving service before return from the PUT/POST).\n&gt; Also, durable subscriptions are great - if a service goes\n&gt; down or its threads hang, the events it is interested in are\n&gt; saved to the durable subscription. My point is that for me\n&gt; (at least with my current point of view) with this many\n&gt; services, doing this w/o something like JMS would be hard. I\n&gt; would really like to see an HTTP based pub/sub like this. I\n&gt; don&#39;t know enough about REST to know if it would be evil to\n&gt; do. I babbled about that a bit more here:\n&gt; http://fuzzypanic.blogspot.com/2006/03/httppox-xml-based-eda-p\n&gt; ub-sub.html\n&gt; Let me know if you know of anything.\n&gt; ##########\n\n\n&gt;\n&gt;\n&gt; &gt;  Once you get to anything async, however, Web Style quickly falls  \n&gt; down for me. Lets start with &quot;Async Request/Reply&quot;.\n&gt; &gt; [...]\n&gt; &gt; If you are writing one service, it is no big deal - its when  \n&gt; there are more then a few where you get a cumulative amount of  \n&gt; complexity that\n&gt; &gt; starts to get your attention.\n&gt; Complexity doesn&#39;t accumulate when you have a uniform interface.  \n&gt; Any asynchronous system has more complex interactions than  \n&gt; synchronous, but if the benefits outweigh the costs then it&#39;s a  \n&gt; fine choice. I don&#39;t see how an asynchronous approach where the  \n&gt; receiver returns a token to the sender is a poor approach or falls  \n&gt; down - it&#39;s fairly common in many messaging systems, not just Web  \n&gt; style systems. Using a Web Style means to create a common way to do  \n&gt; asynchronous interactions, likely using hyperlinks (that&#39;s the &quot;get  \n&gt; an id back&quot; part) or registering a callback (again, a form of  \n&gt; hyperlinking). The Atom publishing protocol is doing just this -  \n&gt; defining how document exchange can become asynchronous when  \n&gt; building on top of synchronous request/reply messages.\n\n\n&gt; ##########\n&gt; See I don&#39;t agree with you on sync vs. async - I still see\n&gt; complexity mounting when you have a lot of sync services.\n&gt;\n&gt; I&#39;m ok with the callback - handing the service you post the\n&gt; request to a URL to post back to you with the results. I\n&gt; don&#39;t like the post to service, get an id, and then post back\n&gt; to the same service at an interval to get the response\n&gt; approach. We have a feature that was implemented like this\n&gt; and it is a pain. The polling thread wakes up every hour to\n&gt; check for results. It has a fair amount of complexity and\n&gt; wastes a lot of CPU (not that I&#39;m really counting). But I&#39;m\n&gt; cool with the callback approach so it&#39;s a non issue next time.\n&gt; ##########\n\n\n&gt;\n&gt; &gt; For &quot;Async 1:1&quot;, you can do that with Web Style like Request/ \n&gt; Reply. You do have to contend with error cases, however.\n&gt; &gt; And &quot;out of the box&quot; you don&#39;t get guaranteed delivery. You can&#39;t  \n&gt; send the message persistently so that you know that the send being  \n&gt; ack&#39;d means something.\n&gt; Most messaging systems I&#39;ve worked with that provide reliable or  \n&gt; guaranteed delivery have APIs that look suspiciously like &quot;post&quot;,  \n&gt; and the API is a blocking call - quick, but still blocking.\n\n\n&gt; ##########\n&gt; Sure, but that block means something typically - it means the\n&gt; message was persisted so the client doesn&#39;t have to ferret it\n&gt; away just in case something bad happens later. With Web\n&gt; Style, you can do that too - my point is you have to do that\n&gt; yourself (client ferret away the data that was PUT/POST).\n&gt; ##########\n\n\n\n&gt;\n&gt; &gt; How would you do &quot;Async 1:M&quot;? This is classic pub/sub. A client  \n&gt; sends 1 message and N subscribers listen to the message.\n&gt; &gt; The client has no idea who is listening. I don&#39;t know of any way  \n&gt; to do this w/o writing a ton of code.\n&gt; I have a feeling you are talking about how to do this with HTTP,  \n&gt; rather than how to make pubsub more RESTful.\n&gt; You could just acquire a decent messaging middleware product and  \n&gt; put an HTTP server in front in order to post messages to the  \n&gt; topics, then define the HTTP requests for consumers to retrieve  \n&gt; messages - the trick is to define how the consuming applications  \n&gt; maintain state as to which messages have been processed.\n&gt; Here is a sample app I wrote a while back that does what you are  \n&gt; talking about : http://www.searchalert.net:8080/dierken/events/ \n&gt; chat.html?topic=rest-discuss\n&gt; The underlying system holds messages here: http:// \n&gt; www.searchalert.net:8080/xmlrouter/msgs/rest-discuss\n\n\n&gt; ##########\n&gt; Nope, I mean make pub/sub more RESTful. Like I said, I don&#39;t\n&gt; know enough about REST principals to know if this is evil or\n&gt; not. I have a decent messaging middleware product today. I&#39;m\n&gt; happy with it - I just want to know if its overkill or not or\n&gt; if there is a simpler way. If some of my integration types\n&gt; are best handled via JMS, fine with me. I just want to ask\n&gt; the &quot;stupid question&quot; - to make sure I&#39;m not thinking JMS is\n&gt; better then it is.\n&gt; ##########\n\n\n\n&gt; This is a working example of using HTTP to send 1 message and  \n&gt; having N subscribers listen to the message. The publisher does not  \n&gt; know what applications will consume the messages. In addition, this  \n&gt; particular example also shows two approaches to notification -  \n&gt; polling for messages via following the &#39;next&#39; link, and persistent  \n&gt; connections for low latency delivery to subscribers (when the  \n&gt; &#39;next&#39; link falls off the end of the chain, the server holds onto  \n&gt; the request and doesn&#39;t send a response until there are messages  \n&gt; ready). There is a client implemented via javascript within the  \n&gt; HTML page, but any programming language that can talk HTTP and  \n&gt; parse XML will do. This was written in just a few hours, but gives  \n&gt; you the idea of what is possible.\n\n\n&gt; ##########\n&gt; So what is on the server - is there messaging behind it?\n&gt; ##########\n\n\n\n&gt;\n&gt; &gt;  How about &quot;Async 1:M Request/Reply&quot;? This is when you send one  \n&gt; message and get N responses. This is pub/sub request reply.\n&gt; Are you sure you didn&#39;t mean N+1 responses?\n\n\n&gt; ##########\n&gt; I&#39;m talking about a client sending 1 request, having N\n&gt; services subscribe and send a response to the client.\n&gt; ##########\n\n\n&gt;\n&gt; &gt;  Last one on my list is &quot;Async M:1&quot;. This is 1 service listening  \n&gt; to N destinations / Topics for events.\n&gt; This is the flip side of 1-N pubsub. The service either is pro- \n&gt; actively notified (via a post in some language or protocol) or  \n&gt; polls. A middle-ware service would allow this service to register  \n&gt; &#39;routes&#39; between topics so that the service only need to subscribe  \n&gt; to one &#39;journal&#39; topic. There have been a few companies and open- \n&gt; source projects in the past that did this with pure HTTP.\n\n\n&gt; ##########\n&gt; Great - do you know their names? I saw mod_pubsub, but looks\n&gt; dried up / private. I also heard recently about\n&gt; http://www.1060research.com/netkernel/ No idea on that yet either.\n&gt; ##########\n&gt;\n&gt; ##########\n&gt; Again, thanks a lot for your response Mike.\n&gt; ##########\n\n\n&gt;\n&gt;\n&gt;\n&gt; From: rest-discuss@yahoogroups.com [mailto:rest- \n&gt; discuss@yahoogroups.com] On Behalf Of mherrick66@...\n&gt; Sent: Monday, April 17, 2006 11:14 PM\n&gt; To: rest-discuss@yahoogroups.com\n&gt; Subject: [rest-discuss] REST & Internal Integration\n&gt;\n&gt; Hi,\n&gt;\n&gt; I am not a REST expert, but definitely prefer it to SOAP & WS-*.\n&gt;\n&gt; I am participating in some future state architecture planning and  \n&gt; am trying to see where REST fits. I&#39;m trying to challenge some of  \n&gt; my assumptions so I am sending this email to this list. While I  \n&gt; certainly prefer REST to WS-*, I still don&#39;t think its the best  \n&gt; choice for internal integration within a company.\n&gt;\n&gt; As part of this architecture planning we have identified some  \n&gt; integration categories that are common to us:\n&gt; Sync Request/Reply\n&gt; Async Request/Reply\n&gt; Async 1:1\n&gt; Async 1:M\n&gt; Async 1:M Request/Reply\n&gt; Async M:1\n&gt; Batch Feed\n&gt; I wrote a bit more on these and which ones I think can/should be  \n&gt; done via REST and which ones shouldn&#39;t:\n&gt; http://fuzzypanic.blogspot.com/2006/04/just-how-much-rest-web-style- \n&gt; are-we.html\n&gt;\n&gt; Please let me know what you think.\n&gt;\n&gt; Thanks for your help,\n&gt;\n&gt; Mike Herrick\n&gt; Portland, OR\n&gt;\n&gt;\n&gt; SPONSORED LINKS\n&gt; Protocol analyzer\tSsl protocol\tProtocol converter\n&gt; Sip protocol\tProtocol analysis\tProtocol\n&gt;\n&gt; YAHOO! GROUPS LINKS\n&gt;\n&gt;  Visit your group &quot;rest-discuss&quot; on the web.\n&gt;\n&gt;  To unsubscribe from this group, send an email to:\n&gt;  rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;  Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service.\n&gt;\n&gt;\n\n\r\n--Apple-Mail-2--227898905\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=ISO-8859-1\r\n\r\n&lt;HTML&gt;&lt;BODY style=3D&quot;word-wrap: break-word; -khtml-nbsp-mode: space; -khtml=\r\n-line-break: after-white-space; &quot;&gt;Oops, I left off most of my response with=\r\n that last email ... ignore it. Use this instead.&lt;DIV&gt;&lt;BR class=3D&quot;khtml-bl=\r\nock-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: =\r\n0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;=\r\n/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =\r\nmargin-left: 0px; &quot;&gt;I appreciate your response Mike. Yes, many of the integ=\r\nration&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom=\r\n: 0px; margin-left: 0px; &quot;&gt;types I mentioned are done using JMS today. I re=\r\nsponded to&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bo=\r\nttom: 0px; margin-left: 0px; &quot;&gt;some of your comments below. Thanks again.&lt;/=\r\nDIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; m=\r\nargin-left: 0px; min-height: 14px; &quot;&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0p=\r\nx; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;Mike&lt;/DIV&gt;&lt;DI=\r\nV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-l=\r\neft: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;BR&gt;&lt;DIV&gt;&lt;BR&gt;&lt;DIV&gt;&lt;DIV&gt;On Apr 18, =\r\n2006, at 10:20 PM, Mike Dierken wrote:&lt;/DIV&gt;&lt;BR class=3D&quot;Apple-interchange-=\r\nnewline&quot;&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;  &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN =\r\nclass=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D=\r\n&quot;2&quot;&gt;I think all of those could be designed to have uniform interfaces and r=\r\nesource identifiers and exchange representations of state. You could build =\r\nit yourself, and the limits of your integration would be as far as you care=\r\n to push them. Or you could use existing technology - possibly placing extr=\r\na constraints to achieve the uniform interface, resource identifiers, etc. =\r\n- and maybe do it cheaper with broader acceptance. The existing technologie=\r\ns could be HTTP (for most of those), or something like JMS or a vendor spec=\r\nific message publishing/queueing system.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;lt=\r\nr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; c=\r\nolor=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=\r\n=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;=\r\n#0000ff&quot; size=3D&quot;2&quot;&gt;=A0&gt; &lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000=\r\n&quot; size=3D&quot;3&quot;&gt;For example looking up existing customer information. It defin=\r\nitely wouldn&#39;t be my first choice, however, for something transactional lik=\r\ne creating an order. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;=\r\nleft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#000=\r\n0ff&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;=\r\n&gt;&gt; Not saying I&#39;d never do it, just wouldn&#39;t be my first choice.&lt;/FONT&gt;&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;FONT face=3D&quot;Arial&quot;&gt;&lt;F=\r\nONT size=3D&quot;2&quot;&gt;&lt;FONT color=3D&quot;#0000ff&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;U=\r\nsing HTTP for requests that must be transactional doesn&#39;t seem to be a prob=\r\nlem in my view. &lt;/SPAN&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;I&#39;m pretty sure t=\r\nhere are several online retailers that use HTTP to create and manage orders=\r\n. It&#39;s even theoretically possible they use HTTP within their firewall as w=\r\nell - but you can never know what&#39;s going on in there...&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FON=\r\nT&gt;&lt;/FONT&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19=\r\n042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;What is it about =\r\nHTTP based request/response doesn&#39;t fit with &#39;transactional&#39; from your poin=\r\nt of view?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=\r\n=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;92540=\r\n3604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&gt; &lt;FONT=\r\n face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;My problem with usin=\r\ng Web Style at all for heavy integration is the coupling and complexity tha=\r\nt starts to add up &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;le=\r\nft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000f=\r\nf&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;&=\r\ngt; when you have a lot of services all doing Request/Reply. Each client ha=\r\ns to handle errors and retry logic.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;=\r\nltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot;=\r\n color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;When you have a network, each client has to h=\r\nandle errors and retry logic. Really. The nifty part about REST is that wit=\r\nh a uniform interface and a message oriented protocol, once you have it fig=\r\nure out, that software is re-usable across different services - whether it&#39;=\r\ns creating an order, updating inventory, changing prices or getting a list =\r\nof things in a shopping cart.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR clas=\r\ns=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placehold=\r\ner&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-r=\r\night: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV sty=\r\nle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: =\r\n0px; &quot;&gt;Yeah, you are correct on the network - that argument sold me&lt;/DIV&gt;&lt;D=\r\nIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-=\r\nleft: 0px; &quot;&gt;on REST vs. WS-*. Here is where I am coming from . I spend&lt;/DI=\r\nV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; mar=\r\ngin-left: 0px; &quot;&gt;most of my time working on a system that has approximately=\r\n 50&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0=\r\npx; margin-left: 0px; &quot;&gt;services. The services are pretty stupid, all they =\r\nknow is&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-botto=\r\nm: 0px; margin-left: 0px; &quot;&gt;they get an event XML input. They typically res=\r\npond with an&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-=\r\nbottom: 0px; margin-left: 0px; &quot;&gt;XML event. They listen on a set of JMS Top=\r\nics or a Topic&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margi=\r\nn-bottom: 0px; margin-left: 0px; &quot;&gt;pattern (e.g., COMPANYNAME.LINEOFBUSINES=\r\nS.NOUN.*).&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bo=\r\nttom: 0px; margin-left: 0px; &quot;&gt;They also typically respond to set of Topics=\r\n. What I like&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin=\r\n-bottom: 0px; margin-left: 0px; &quot;&gt;about JMS in the system is the guaranteed=\r\n delivery &amp; durable&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0=\r\npx; margin-bottom: 0px; margin-left: 0px; &quot;&gt;subscriptions. The service impl=\r\ns don&#39;t care about the network&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-r=\r\night: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;because they know that J=\r\nMS is there. When they send a message&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; m=\r\nargin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;it is persisted b=\r\nefore the thread returns. It is nice not to&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: =\r\n0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;have to do =\r\nthis by hand (i.e., ferret it away in a database&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-=\r\ntop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;in the=\r\n receiving service before return from the PUT/POST).&lt;/DIV&gt;&lt;DIV style=3D&quot;mar=\r\ngin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;Al=\r\nso, durable subscriptions are great - if a service goes&lt;/DIV&gt;&lt;DIV style=3D&quot;=\r\nmargin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;=\r\n&gt;down or its threads hang, the events it is interested in are&lt;/DIV&gt;&lt;DIV sty=\r\nle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: =\r\n0px; &quot;&gt;saved to the durable subscription. My point is that for me&lt;/DIV&gt;&lt;DIV=\r\n style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-le=\r\nft: 0px; &quot;&gt;(at least with my current point of view) with this many&lt;/DIV&gt;&lt;DI=\r\nV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-l=\r\neft: 0px; &quot;&gt;services, doing this w/o something like JMS would be hard. I&lt;/D=\r\nIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; ma=\r\nrgin-left: 0px; &quot;&gt;would really like to see an HTTP based pub/sub like this.=\r\n I&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0p=\r\nx; margin-left: 0px; &quot;&gt;don&#39;t know enough about REST to know if it would be =\r\nevil to&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-botto=\r\nm: 0px; margin-left: 0px; &quot;&gt;do. I babbled about that a bit more here:&lt;/DIV&gt;=\r\n&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margi=\r\nn-left: 0px; &quot;&gt;&lt;A href=3D&quot;http://fuzzypanic.blogspot.com/2006/03/httppox-xm=\r\nl-based-eda-p&quot;&gt;http://fuzzypanic.blogspot.com/2006/03/httppox-xml-based-eda=\r\n-p&lt;/A&gt;&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom=\r\n: 0px; margin-left: 0px; &quot;&gt;ub-sub.html&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; =\r\nmargin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;Let me know if y=\r\nou know of anything.&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px;=\r\n margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;=\r\n&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt; =\r\n&lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT fa=\r\nce=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=\r\n=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Ar=\r\nial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; =\r\nalign=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; colo=\r\nr=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&gt;=A0&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#00=\r\n0000&quot; size=3D&quot;3&quot;&gt; Once you get to anything async, however, Web Style quickl=\r\ny falls down for me. Lets start with &quot;Async Request/Reply&quot;. &lt;/FONT&gt;&lt;/FONT&gt;&lt;=\r\n/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042=\r\n006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times =\r\nNew Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;&gt; [...] &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/D=\r\nIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FON=\r\nT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Roman=\r\n&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;&gt; If you are writing one service, it is n=\r\no big deal - its when there are more then a few where you get a cumulative =\r\namount of complexity that &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; alig=\r\nn=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D=\r\n&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=\r\n=3D&quot;3&quot;&gt;&gt; starts to get your attention.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV d=\r\nir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;=\r\nArial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;Complexity doesn&#39;t accumulate when you =\r\nhave a uniform interface. Any asynchronous system has more complex interact=\r\nions than synchronous, but if the benefits outweigh the costs then it&#39;s a f=\r\nine choice. &lt;/FONT&gt;&lt;/SPAN&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;=\r\nArial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;I don&#39;t see how an asynchronous approac=\r\nh where the receiver returns a token to the sender is a poor approach or fa=\r\nlls down - it&#39;s fairly common in many messaging systems, not just Web style=\r\n systems. Using a Web Style means to create a common way to do asynchronous=\r\n interactions, likely using hyperlinks (that&#39;s the &quot;get an id back&quot; part) o=\r\nr registering a callback (again, a form of hyperlinking). The Atom publishi=\r\nng protocol is doing just this - defining how document exchange can become =\r\nasynchronous when building on top of synchronous request/reply messages.&lt;/F=\r\nONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/=\r\nDIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;ci=\r\nte&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; m=\r\nargin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-ri=\r\nght: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;See I don&#39;t agree with yo=\r\nu on sync vs. async - I still see&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margi=\r\nn-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;complexity mounting w=\r\nhen you have a lot of sync services.&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; ma=\r\nrgin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;=\r\n&lt;BR&gt;&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: =\r\n0px; margin-left: 0px; &quot;&gt;I&#39;m ok with the callback - handing the service you=\r\n post the&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bot=\r\ntom: 0px; margin-left: 0px; &quot;&gt;request to a URL to post back to you with the=\r\n results. I&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-b=\r\nottom: 0px; margin-left: 0px; &quot;&gt;don&#39;t like the post to service, get an id, =\r\nand then post back&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; m=\r\nargin-bottom: 0px; margin-left: 0px; &quot;&gt;to the same service at an interval t=\r\no get the response&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; m=\r\nargin-bottom: 0px; margin-left: 0px; &quot;&gt;approach. We have a feature that was=\r\n implemented like this&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0p=\r\nx; margin-bottom: 0px; margin-left: 0px; &quot;&gt;and it is a pain. The polling th=\r\nread wakes up every hour to&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-righ=\r\nt: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;check for results. It has a=\r\n fair amount of complexity and&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-r=\r\night: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;wastes a lot of CPU (not=\r\n that I&#39;m really counting). But I&#39;m&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; mar=\r\ngin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;cool with the callb=\r\nack approach so it&#39;s a non issue next time.&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: =\r\n0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;=\r\n/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLO=\r\nCKQUOTE type=3D&quot;cite&quot;&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;92540=\r\n3604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/S=\r\nPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-1904=\r\n2006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&gt; &lt;FONT face=3D&quot;=\r\nTimes New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;For &quot;Async 1:1&quot;, you can do t=\r\nhat with Web Style like Request/Reply. You do have to contend with error ca=\r\nses, however. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;=\r\nSPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; si=\r\nze=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;&gt; A=\r\nnd &quot;out of the box&quot; you don&#39;t get guaranteed delivery. You can&#39;t send the m=\r\nessage persistently so that you know that the send being ack&#39;d means someth=\r\ning.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=\r\n=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;M=\r\nost messaging systems I&#39;ve worked with that provide reliable or guaranteed =\r\ndelivery have APIs that look suspiciously like &quot;post&quot;, and the API is a blo=\r\ncking call - quick, but still blocking.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DI=\r\nV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block=\r\n-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px=\r\n; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DI=\r\nV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; mar=\r\ngin-left: 0px; &quot;&gt;Sure, but that block means something typically - it means =\r\nthe&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0=\r\npx; margin-left: 0px; &quot;&gt;message was persisted so the client doesn&#39;t have to=\r\n ferret it&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bo=\r\nttom: 0px; margin-left: 0px; &quot;&gt;away just in case something bad happens late=\r\nr. With Web&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-b=\r\nottom: 0px; margin-left: 0px; &quot;&gt;Style, you can do that too - my point is yo=\r\nu have to do that&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; ma=\r\nrgin-bottom: 0px; margin-left: 0px; &quot;&gt;yourself (client ferret away the data=\r\n that was PUT/POST).&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px;=\r\n margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;=\r\n&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-p=\r\nlaceholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;l=\r\neft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt; &lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; ali=\r\ngn=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=\r\n=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;l=\r\neft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000=\r\nff&quot; size=3D&quot;2&quot;&gt;&gt; &lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=\r\n=3D&quot;3&quot;&gt;How would you do &quot;Async 1:M&quot;? This is classic pub/sub. A client send=\r\ns 1 message and N subscribers listen to the message. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;=\r\n/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;F=\r\nONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;FONT face=3D&quot;Times New Rom=\r\nan&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;&gt; The client has no idea who is listeni=\r\nng. I don&#39;t know of any way to do this w/o writing a ton of code.&lt;/FONT&gt;&lt;/F=\r\nONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-=\r\n19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;I have a feelin=\r\ng you are talking about how to do this with HTTP, rather than how to make p=\r\nubsub more RESTful.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SP=\r\nAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=\r\n=3D&quot;2&quot;&gt;You could just acquire a decent messaging middleware product and put=\r\n an HTTP server in front in order to post messages to the topics, then defi=\r\nne the HTTP requests for consumers to retrieve messages - the trick is to d=\r\nefine how the consuming applications maintain state as to which messages ha=\r\nve been processed.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPA=\r\nN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=\r\n=3D&quot;2&quot;&gt;Here is a sample app I wrote a while back that does what you are tal=\r\nking about : &lt;A href=3D&quot;http://www.searchalert.net:8080/dierken/events/chat=\r\n.html?topic=3Drest-discuss&quot;&gt;http://www.searchalert.net:8080/dierken/events/=\r\nchat.html?topic=3Drest-discuss&lt;/A&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; ali=\r\ngn=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=\r\n=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;The underlying system holds messages here: &lt;/FONT&gt;&lt;=\r\nFONT face=3D&quot;Arial&quot;&gt;&lt;FONT size=3D&quot;2&quot;&gt;&lt;FONT color=3D&quot;#0000ff&quot;&gt;&lt;A href=3D&quot;htt=\r\np://www.searchalert.net:8080/xmlrouter/msgs/rest-discuss&quot;&gt;http://www.search=\r\nalert.net:8080/xmlrouter/msgs/rest-discuss&lt;/A&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;=\r\n/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR=\r\n class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV sty=\r\nle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: =\r\n0px; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; ma=\r\nrgin-bottom: 0px; margin-left: 0px; &quot;&gt;Nope, I mean make pub/sub more RESTfu=\r\nl. Like I said, I don&#39;t&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0=\r\npx; margin-bottom: 0px; margin-left: 0px; &quot;&gt;know enough about REST principa=\r\nls to know if this is evil or&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-ri=\r\nght: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;not. I have a decent mess=\r\naging middleware product today. I&#39;m&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; mar=\r\ngin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;happy with it - I j=\r\nust want to know if its overkill or not or&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0=\r\npx; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;if there is =\r\na simpler way. If some of my integration types&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-to=\r\np: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;are best=\r\n handled via JMS, fine with me. I just want to ask&lt;/DIV&gt;&lt;DIV style=3D&quot;margi=\r\nn-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;the =\r\n&quot;stupid question&quot; - to make sure I&#39;m not thinking JMS is&lt;/DIV&gt;&lt;DIV style=3D=\r\n&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =\r\n&quot;&gt;better then it is.&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px;=\r\n margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;=\r\n&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-p=\r\nlaceholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;=\r\nleft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#000=\r\n0ff&quot; size=3D&quot;2&quot;&gt;This is a working example of using HTTP to send 1 message a=\r\nnd having N subscribers listen to the message. The publisher does not know =\r\nwhat applications will consume the messages. In addition, this particular e=\r\nxample also shows two approaches to notification - polling for messages via=\r\n following the &#39;next&#39; link, and persistent connections for low latency deli=\r\nvery to subscribers (when the &#39;next&#39; link falls off the end of the chain, t=\r\nhe server holds onto the request and doesn&#39;t send a response until there ar=\r\ne messages ready). There is a client implemented via javascript within the =\r\nHTML page, but any programming language that can talk HTTP and parse XML wi=\r\nll do.=A0This was written in just a few hours, but gives you the idea of wh=\r\nat is possible.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-blo=\r\nck-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLO=\r\nCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; mar=\r\ngin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-t=\r\nop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;So what=\r\n is on the server - is there messaging behind it?&lt;/DIV&gt;&lt;DIV style=3D&quot;margin=\r\n-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;#####=\r\n#####&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;D=\r\nIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite=\r\n&quot;&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT=\r\n face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV d=\r\nir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;=\r\nArial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;&gt;=A0&lt;FONT face=3D&quot;Times New Roman&quot; c=\r\nolor=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt; How about &quot;Async 1:M Request/Reply&quot;? This is w=\r\nhen you send one message and get N responses. This is pub/sub request reply=\r\n.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN class=3D=\r\n&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;Are =\r\nyou sure you didn&#39;t mean N+1 responses?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DI=\r\nV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block=\r\n-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px=\r\n; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DI=\r\nV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; mar=\r\ngin-left: 0px; &quot;&gt;I&#39;m talking about a client sending 1 request, having N&lt;/DI=\r\nV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; mar=\r\ngin-left: 0px; &quot;&gt;services subscribe and send a response to the client.&lt;/DIV=\r\n&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; marg=\r\nin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-=\r\nplaceholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D=\r\n&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#00=\r\n00ff&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;S=\r\nPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; siz=\r\ne=3D&quot;2&quot;&gt;&gt;=A0&lt;FONT face=3D&quot;Times New Roman&quot; color=3D&quot;#000000&quot; size=3D&quot;3&quot;&gt;=\r\n Last one on my list is &quot;Async M:1&quot;. This is 1 service listening to N desti=\r\nnations / Topics for events.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; al=\r\nign=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=\r\n=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt;This is the flip side of 1-N pubsub. The service ei=\r\nther is pro-actively notified (via a post in some language or protocol) or =\r\npolls. A middle-ware service would allow this service to register &#39;routes&#39; =\r\nbetween topics so that the service only need to subscribe to one &#39;journal&#39; =\r\ntopic. There have been a few companies and open-source projects in the past=\r\n that did this with pure HTTP.&lt;BR&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR=\r\n class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-plac=\r\neholder&quot;&gt;&lt;/DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV style=3D&quot;margin-top: 0px; mar=\r\ngin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;DI=\r\nV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-l=\r\neft: 0px; &quot;&gt;Great - do you know their names? I saw mod_pubsub, but looks&lt;/D=\r\nIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; ma=\r\nrgin-left: 0px; &quot;&gt;dried up / private. I also heard recently about&lt;/DIV&gt;&lt;DIV=\r\n style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-le=\r\nft: 0px; &quot;&gt;&lt;A href=3D&quot;http://www.1060research.com/netkernel/&quot;&gt;http://www.10=\r\n60research.com/netkernel/&lt;/A&gt; No idea on that yet either.&lt;/DIV&gt;&lt;DIV style=\r\n=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0p=\r\nx; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; marg=\r\nin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;DIV style=\r\n=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0p=\r\nx; &quot;&gt;##########&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; marg=\r\nin-bottom: 0px; margin-left: 0px; &quot;&gt;Again, thanks a lot for your response M=\r\nike.&lt;/DIV&gt;&lt;DIV style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: =\r\n0px; margin-left: 0px; &quot;&gt;##########&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;DIV&gt;&lt;BR class=3D&quot;kht=\r\nml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV dir=3D&quot;ltr&quot; =\r\nalign=3D&quot;left&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; colo=\r\nr=3D&quot;#0000ff&quot; size=3D&quot;2&quot;&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;le=\r\nft&quot;&gt;&lt;SPAN class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000f=\r\nf&quot; size=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt; &lt;DIV dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt;&lt;SPAN=\r\n class=3D&quot;925403604-19042006&quot;&gt;&lt;FONT face=3D&quot;Arial&quot; color=3D&quot;#0000ff&quot; size=\r\n=3D&quot;2&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=A0&lt;/DIV&gt;&lt;BR&gt; &lt;BLOCKQUOTE style=3D&quot;PADDING-LEFT: 5px; =\r\nMARGIN-LEFT: 5px; BORDER-LEFT: #0000ff 2px solid; MARGIN-RIGHT: 0px&quot;&gt;  &lt;DIV=\r\n class=3D&quot;OutlookMessageHeader&quot; lang=3D&quot;en-us&quot; dir=3D&quot;ltr&quot; align=3D&quot;left&quot;&gt; =\r\n &lt;HR tabindex=3D&quot;-1&quot;&gt;  &lt;FONT face=3D&quot;Tahoma&quot; size=3D&quot;2&quot;&gt;&lt;B&gt;From:&lt;/B&gt; rest-d=\r\niscuss@yahoogroups.com   [&lt;A href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot;&gt;m=\r\nailto:rest-discuss@yahoogroups.com&lt;/A&gt;] &lt;B&gt;On Behalf Of   &lt;/B&gt;&lt;A href=3D&quot;ma=\r\nilto:mherrick66@...&quot;&gt;mherrick66@...&lt;/A&gt;&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; Monday, Apr=\r\nil 17, 2006 11:14   PM&lt;BR&gt;&lt;B&gt;To:&lt;/B&gt; rest-discuss@yahoogroups.com&lt;BR&gt;&lt;B&gt;Sub=\r\nject:&lt;/B&gt;   [rest-discuss] REST &amp; Internal Integration&lt;BR&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/=\r\nDIV&gt;  &lt;DIV&gt;&lt;/DIV&gt;&lt;TT&gt;Hi,  &lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;=\r\n  &lt;DIV&gt;I am not a REST expert, but definitely prefer it to SOAP &amp; WS-*.=\r\n   &lt;/DIV&gt;  &lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;  &lt;DIV&gt;I am par=\r\nticipating in some future state architecture planning and am   trying to se=\r\ne where REST fits. I&#39;m trying to challenge some of my assumptions   so I am=\r\n sending this email to this list. While I certainly prefer REST to   WS-*, =\r\nI still don&#39;t think its the best choice for internal integration within   a=\r\n company.&lt;/DIV&gt;  &lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;  &lt;DIV&gt;As=\r\n part of this architecture planning we have identified some integration   c=\r\nategories that are common to us:&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;L=\r\nINE-HEIGHT: 18px&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;/DIV&gt;  &lt;OL&gt;    &lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FON=\r\nT class=3D&quot;Apple-style-span&quot; face=3D&quot;Trebuchet MS&quot; size=3D&quot;3&quot;&gt;&lt;SPAN class=\r\n=3D&quot;Apple-style-span&quot; style=3D&quot;FONT-SIZE: 12px&quot;&gt;Sync     Request/Reply&lt;/SPA=\r\nN&gt;&lt;/FONT&gt;    &lt;/LI&gt;&lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3D&quot;Apple-style-span=\r\n&quot; face=3D&quot;Trebuchet MS&quot; size=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;FONT-SIZE: 12px&quot;&gt;Async     Request/Reply&lt;/SPAN&gt;&lt;/FONT&gt;    &lt;/LI&gt;&lt;LI styl=\r\ne=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3D&quot;Apple-style-span&quot; face=3D&quot;Trebuchet MS&quot; si=\r\nze=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async  =\r\n   1:1&lt;/SPAN&gt;&lt;/FONT&gt;    &lt;/LI&gt;&lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3D&quot;Apple=\r\n-style-span&quot; face=3D&quot;Trebuchet MS&quot; size=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-sp=\r\nan&quot; style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async     1:M&lt;/SPAN&gt;&lt;/FONT&gt;    &lt;/LI&gt;&lt;LI style=\r\n=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3D&quot;Apple-style-span&quot; face=3D&quot;Trebuchet MS&quot; siz=\r\ne=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async 1:=\r\nM     Request/Reply&lt;/SPAN&gt;&lt;/FONT&gt;    &lt;/LI&gt;&lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT c=\r\nlass=3D&quot;Apple-style-span&quot; face=3D&quot;Trebuchet MS&quot; size=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;A=\r\npple-style-span&quot; style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async     M:1&lt;/SPAN&gt;&lt;/FONT&gt;    &lt;=\r\n/LI&gt;&lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3D&quot;Apple-style-span&quot; face=3D&quot;Treb=\r\nuchet MS&quot; size=3D&quot;3&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;FONT-SIZE: 1=\r\n2px&quot;&gt;Batch     Feed&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;  &lt;DIV&gt;I wrote a bit more on the=\r\nse and which ones I think can/should be done via   REST and which ones shou=\r\nldn&#39;t:&lt;/DIV&gt;  &lt;DIV&gt;&lt;A href=3D&quot;http://fuzzypanic.blogspot.com/2006/04/just-h=\r\now-much-rest-web-style-are-we.html&quot;&gt;http://fuzzypanic.blogspot.com/2006/04/=\r\njust-how-much-rest-web-style-are-we.html&lt;/A&gt;&lt;/DIV&gt;  &lt;DIV&gt;&lt;BR class=3D&quot;khtml=\r\n-block-placeholder&quot;&gt;&lt;/DIV&gt;  &lt;DIV&gt;Please let me know what you think.&lt;/DIV&gt;  =\r\n&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;  &lt;DIV&gt;Thanks for your hel=\r\np,&lt;/DIV&gt;  &lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;  &lt;DIV&gt;Mike Herr=\r\nick&lt;/DIV&gt;  &lt;DIV&gt;Portland, OR&lt;/DIV&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;  &lt;DIV style=3D&quot;MARGIN-BOTTO=\r\nM: 1px; WIDTH: 500px; COLOR: #909090; TEXT-ALIGN: right&quot;&gt;&lt;TT&gt;SPONSORED   LI=\r\nNKS&lt;/TT&gt; &lt;/DIV&gt;  &lt;TABLE cellspacing=3D&quot;13&quot; cellpadding=3D&quot;0&quot; width=3D&quot;500&quot; =\r\nbgcolor=3D&quot;#e0ecee&quot;&gt;    &lt;TBODY&gt;&lt;TR valign=3D&quot;top&quot;&gt;&lt;TD style=3D&quot;WIDTH: 25%&quot;&gt;=\r\n&lt;TT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=3Dms&k=3DProtocol+analyzer&w1=\r\n=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtocol+converter&w4=3DSip+pro=\r\ntocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=3D120&.sig=3D-vNi0F9sGxz=\r\n3wJiUypOlsA&quot;&gt;Protocol         analyzer&lt;/A&gt;&lt;/TT&gt; &lt;/TD&gt;&lt;TD style=3D&quot;WIDTH: 25=\r\n%&quot;&gt;&lt;TT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=3Dms&k=3DSsl+protocol&w1=\r\n=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtocol+converter&w4=3DSip+pro=\r\ntocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=3D120&.sig=3DQcUDWIbIdXk=\r\nmz4QSFhqszw&quot;&gt;Ssl         protocol&lt;/A&gt;&lt;/TT&gt; &lt;/TD&gt;&lt;TD style=3D&quot;WIDTH: 25%&quot;&gt;&lt;T=\r\nT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=3Dms&k=3DProtocol+converter&w1=\r\n=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtocol+converter&w4=3DSip+pro=\r\ntocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=3D120&.sig=3D8MMcEvfzdk5=\r\nsaYSJv-2g3g&quot;&gt;Protocol         converter&lt;/A&gt;&lt;/TT&gt; &lt;/TD&gt;&lt;/TR&gt;&lt;TR valign=3D&quot;to=\r\np&quot;&gt;&lt;TD style=3D&quot;WIDTH: 25%&quot;&gt;&lt;TT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=\r\n=3Dms&k=3DSip+protocol&w1=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtoc=\r\nol+converter&w4=3DSip+protocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=\r\n=3D120&.sig=3DX7aZ6IACnEQUtAC57u829w&quot;&gt;Sip         protocol&lt;/A&gt;&lt;/TT&gt; &lt;/TD&gt;&lt;T=\r\nD style=3D&quot;WIDTH: 25%&quot;&gt;&lt;TT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=3Dms&k=\r\n=3DProtocol+analysis&w1=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtocol=\r\n+converter&w4=3DSip+protocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=\r\n=3D120&.sig=3DSI1LEHwb69y6gddZAv_Fuw&quot;&gt;Protocol         analysis&lt;/A&gt;&lt;/TT&gt; &lt;/=\r\nTD&gt;&lt;TD style=3D&quot;WIDTH: 25%&quot;&gt;&lt;TT&gt;&lt;A href=3D&quot;http://groups.yahoo.com/gads?t=\r\n=3Dms&k=3DProtocol&w1=3DProtocol+analyzer&w2=3DSsl+protocol&w3=3DProtocol+c=\r\nonverter&w4=3DSip+protocol&w5=3DProtocol+analysis&w6=3DProtocol&c=3D6&s=3D1=\r\n20&.sig=3DaCiMFP0b3kFn96wqrZacGA&quot;&gt;Protocol&lt;/A&gt;&lt;/TT&gt;       &lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY=\r\n&gt;&lt;/TABLE&gt;&lt;BR&gt;  &lt;DIV style=3D&quot;WIDTH: 500px; COLOR: #909090; TEXT-ALIGN: cent=\r\ner&quot;&gt;  &lt;HR style=3D&quot;WIDTH: 500px; BORDER-BOTTOM: 1px; TEXT-ALIGN: left&quot;&gt;  &lt;T=\r\nT&gt;YAHOO! GROUPS LINKS&lt;/TT&gt; &lt;/DIV&gt;&lt;BR&gt;  &lt;UL&gt;&lt;TT&gt;    &lt;/TT&gt;&lt;LI type=3D&quot;square&quot;=\r\n&gt;&lt;TT&gt;=A0Visit your group &quot;&lt;A href=3D&quot;http://groups.yahoo.com/group/rest-dis=\r\ncuss&quot;&gt;rest-discuss&lt;/A&gt;&quot; on the     web.&lt;BR&gt;=A0&lt;/TT&gt; &lt;TT&gt;    &lt;/TT&gt;&lt;/LI&gt;&lt;TT&gt;&lt;=\r\n/TT&gt;&lt;LI type=3D&quot;square&quot;&gt;&lt;TT&gt;=A0To unsubscribe from this group, send an emai=\r\nl     to:&lt;BR&gt;=A0&lt;A href=3D&quot;mailto:rest-discuss-unsubscribe@yahoogroups.com?=\r\nsubject=3DUnsubscribe&quot;&gt;rest-discuss-unsubscribe@yahoogroups.com&lt;/A&gt;&lt;BR&gt;=A0&lt;=\r\n/TT&gt;     &lt;TT&gt;    &lt;/TT&gt;&lt;/LI&gt;&lt;TT&gt;&lt;/TT&gt;&lt;LI type=3D&quot;square&quot;&gt;&lt;TT&gt;=A0Your use of =\r\nYahoo! Groups is subject to the &lt;A href=3D&quot;http://docs.yahoo.com/info/terms=\r\n/&quot;&gt;Yahoo! Terms of Service&lt;/A&gt;.&lt;/TT&gt;     &lt;/LI&gt;&lt;/UL&gt;&lt;BR&gt;  &lt;DIV style=3D&quot;WIDT=\r\nH: 500px; COLOR: #909090; TEXT-ALIGN: center&quot;&gt;  &lt;HR style=3D&quot;WIDTH: 500px; =\r\nBORDER-BOTTOM: 1px; TEXT-ALIGN: left&quot;&gt;  &lt;/DIV&gt;&lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BLOCKQUOTE=\r\n&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;\r\n--Apple-Mail-2--227898905--\r\n\n"}}