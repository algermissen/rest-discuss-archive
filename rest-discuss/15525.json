{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"Alan Dean &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"v7jSXPVFoLsH8oSSaslH_UykU2nuQLSsxvPJOcb4BgfUsmHAIsrqTsKq_s3PzywXU-8yQSRDAZ4L-cH5IfIL9_Baz5S8NA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS","postDate":"1275554483","msgId":15525,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGltTWJ0SVVOMjRGaDF6RzhpaXEyWUZRM0xXNVhNTHNFT1JOTl9iTUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlueFJUNUdvRm1sb2E4UEQtY3VLblYzQVBQMkprR0x6bjA3a25iMEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlraVhveXd6dDEwTTQ4NGowY2ZaRVJRbjZqLUdUYkFsV0pEY2RNOUBtYWlsLmdtYWlsLmNvbT4gCTxBQU5Ma1RpbnhSVDVHb0ZtbG9hOFBELWN1S25WM0FQUDJKa0dMem4wN2tuYjBAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":15524,"nextInTopic":15526,"prevInTime":15524,"nextInTime":15526,"topicId":15518,"numMessagesInTopic":11,"msgSnippet":"Glenn, Personally, I find it easier to sketch out what the HTTP interactions might look like. In your example of financials data processing, I think that I ","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30506 invoked from network); 3 Jun 2010 08:41:45 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m12.grp.re1.yahoo.com with QMQP; 3 Jun 2010 08:41:45 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.154)\n  by mta2.grp.sp2.yahoo.com with SMTP; 3 Jun 2010 08:41:44 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id d23so1608351fga.16\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 03 Jun 2010 01:41:43 -0700 (PDT)\r\nX-Received: by 10.87.37.3 with SMTP id p3mr9293153fgj.27.1275554503121; Thu, 03 \n\tJun 2010 01:41:43 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.86.95.3 with HTTP; Thu, 3 Jun 2010 01:41:23 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\r\nReferences: &lt;AANLkTikiXoywzt10M484j0cfZERQn6j-GTbAlWJDcdM9@...&gt; \n\t&lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\r\nDate: Thu, 3 Jun 2010 09:41:23 +0100\r\nX-Google-Sender-Auth: _0Kt51NI3Dj0aPilMTrkyedxIWQ\r\nMessage-ID: &lt;AANLkTimMbtIUN24Fh1zG8iiq2YFQ3LW5XMLsEORNN_bM@...&gt;\r\nTo: Glenn Block &lt;glenn.block@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001485f7cbb20cfe0204881c2d1c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alan Dean &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS\r\nX-Yahoo-Group-Post: member; u=189321215; y=aW8cH0zZ_Ys6DWuqWDPxa8nCrT139cnTSQ_-KBdKKj2FftgLxVbR6YoI\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\n\r\n--001485f7cbb20cfe0204881c2d1c\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nGlenn,\n\nPersonally, I find it easier to sketch out what the HTTP interactio=\r\nns might\nlook like. In your example of financials data processing, I think =\r\nthat I\nwould separate out data from rules and have them interact something =\r\nlike the\nfollowing (the sketch is indicative only, for example it ignores a=\r\nny\nsecurity concerns):\n\n--&gt;\nPUT /datasets/{datasetname}.xml\nHost: example.n=\r\net\nContent-Type: application/vnd.example-dataset+xml\n\n&lt;?xml version=3D&quot;1.0&quot;=\r\n?&gt;\n&lt;dataset&gt;{payload}&lt;/dataset&gt;\n\n&lt;--\n201 Created\n\n--&gt;\nPUT /rules/{rulename}=\r\n.xml\nHost: example.net\nContent-Type: application/vnd.example-rule+xml\n\n&lt;?xm=\r\nl version=3D&quot;1.0&quot;?&gt;\n&lt;rule&gt;{payload}&lt;/rule&gt;\n\n&lt;--\n201 Created\n\n--&gt;\nPOST /jobs=\r\n\nHost: example.com\nContent-Type: application/vnd.example-job+xml\n\n&lt;?xml ver=\r\nsion=3D&quot;1.0&quot;?&gt;\n&lt;job xmlns:xlink=3D&quot;http://www.w3.org/1999/xlink&quot;&gt;\n   &lt;data =\r\nxlink:href=3D&quot;http://example.net/datasets/{datasetname}.xml&quot; /&gt;\n   &lt;rules&gt;\n=\r\n      &lt;rule xlink:href=3D&quot;http://example.net/rules/{rulename}.xml&quot; /&gt;\n   &lt;/=\r\nrules&gt;\n&lt;/job&gt;\n\n&lt;--\n303 See Other\nLocation: http://example.com/datasets/{dat=\r\nasetname}.xml\n\n--&gt;\nGET /datasets/{datasetname}.xml\nHost: example.com\nConten=\r\nt-Type: application/vnd.example-dataset+xml\n\n&lt;--\n204 No Content\n\n[time pass=\r\nes, the job is done]\n\n--&gt;\nGET /datasets/{datasetname}.xml\nHost: example.com=\r\n\nContent-Type: application/vnd.example-dataset+xml\n\n&lt;--\n200 OK\nContent-Type=\r\n: application/vnd.example-dataset+xml\n\n&lt;?xml version=3D&quot;1.0&quot;?&gt;\n&lt;dataset&gt;{pa=\r\nyload}&lt;/dataset&gt;\n\nPlease note that the original data and rules are stored o=\r\nn example.net and\nthen processed by example.com; this is to emphasise that =\r\nthe job processor\nhas the responsibility of retrieving the data and rules. =\r\nIn my sketch, the\nprocessor stores result datasets locally and the UA would=\r\n have to move the\ndata to an alternate location after completion but it cou=\r\nld easily be\nmodelled otherwise. The important point is that any server whi=\r\nch understands\nthe application/vnd.example+xml protocol can participate in =\r\njob processing;\nthe UA does not need to have prior knowledge of the endpoin=\r\nt specifics.\nLooking at the sketch, it is easy to see how a UA could chain =\r\ntogether\nprocessing from a series of servers and a sequence of datasets to =\r\naccomplish\nsome goal. The sketch therefore supports serendipity of reuse.\n\n=\r\nRegards,\nAlan Dean\n\nOn Thu, Jun 3, 2010 at 01:29, Glenn Block &lt;glenn.block@=\r\ngmail.com&gt; wrote:\n\n&gt;\n&gt;\n&gt; Correction to types in the last para:\n&gt;\n&gt; Anyway t=\r\nhe advantage I saw in such a system is that the institutions that\n&gt; work wi=\r\nth me can create any arbitrary set of rules they like. My system\n&gt; which pr=\r\nocesses jobs doesn&#39;t know anything about the types of rules or care.\n&gt; All =\r\nit knows it that is has some URI that it can post to (or possibly Get)\n&gt; in=\r\n order to execute some arbitrary logic. I now have an autonomous system\n&gt; t=\r\nhat can easily adapt to new requirements. I am truly reaping the benefits\n&gt;=\r\n of HATEOS in such a system.\n&gt;\n&gt; On Wed, Jun 2, 2010 at 5:26 PM, Glenn Bloc=\r\nk &lt;glenn.block@...&gt; wrote:\n&gt;\n&gt;&gt; I get HATEOS for human interaction. I=\r\n am trying to undestand pure m2m\n&gt;&gt; benefits. If I think of a scenario of a=\r\nn Order management server host. I can\n&gt;&gt; imagine that when I retrieve an Or=\r\nder resource I can perform several\n&gt;&gt; &quot;actions&quot; on that order like Approve,=\r\n Hold, etc. I would see these as links.\n&gt;&gt; In this case if I had a machine =\r\ntalking to such a host, it can post to those\n&gt;&gt; links with the advantage be=\r\ning that the agent / calling ocde doesn&#39;t\n&gt;&gt; have coupling to where those l=\r\ninks point to or how the URIs are formed.\n&gt;&gt; However the client code which =\r\ninteracts with the agent has some idea that\n&gt;&gt; Approve and Hold exist, so i=\r\nt is coupled in that sense.\n&gt;&gt;\n&gt;&gt; I started to think about m2m scenarios (o=\r\nther than web crawlers) where I\n&gt;&gt; could truly leverage the full decoupling=\r\n that HATEOS i.e. an adaptable\n&gt;&gt; system that only knows to look for types =\r\nof links but doesn&#39;t expect any\n&gt;&gt; specific instances of those links (like =\r\nApprove) to be present.\n&gt;&gt;\n&gt;&gt; I thought back to my past life prior to MS wh=\r\nen I used to work in the\n&gt;&gt; financial services industry. In those days we h=\r\nad to do a ton of back end\n&gt;&gt; processing off data we received from multiple=\r\n financial sources over FTP. I\n&gt;&gt; built a generic FTP scanner that looked f=\r\nor files, ripped them open, parsed\n&gt;&gt; them and then started executing all t=\r\nypes of rules (I Blame Jan partially\n&gt;&gt; for forcing me down this mental roa=\r\nd). There was basically zero human\n&gt;&gt; interaction other than monitoring the=\r\n status of the processing. That system\n&gt;&gt; was coupled, it required data to =\r\nbe send in a specific schema and that had a\n&gt;&gt; predefined set of rules that=\r\n were implicit as part of the schema.\n&gt;&gt;\n&gt;&gt; *Disclaimer: Thought experiment=\r\n follows*\n&gt;&gt;\n&gt;&gt; Now let&#39;s say I decided to design such a system today in a =\r\nRESTFul manner\n&gt;&gt; around resources and HATEOS. In this case I am imagining =\r\nI have a\n&gt;&gt; Jobs&#92;Pending resource. I do a get on that resource and get back=\r\n a list of\n&gt;&gt; jobs that are pending to be processed. Now each Job has rules=\r\n that have to\n&gt;&gt; execute. So in this world, I am thinking the rules are lin=\r\nks with each link\n&gt;&gt; point to a resource that handles processing that rule.=\r\n Or maybe the link\n&gt;&gt; returns me some code that gets executed on the fly.\n&gt;=\r\n&gt;\n&gt;&gt; Anyway the advantage I saw in such a system is my the institutions tha=\r\nt\n&gt;&gt; work with me can create any arbitrary set of rules they like. My which=\r\n\n&gt;&gt; processes jobs doesn&#39;t know anything about the rules or care. All it kn=\r\nows\n&gt;&gt; it that is has some URI that it can post to (or possibly Get) in ord=\r\ner to\n&gt;&gt; execute some arbitrary logic. I now have an autonomous system that=\r\n can\n&gt;&gt; easily adapt to new requirements. I am truly reaping the benefits o=\r\nf HATEOS\n&gt;&gt; in such a system.\n&gt;&gt;\n&gt;&gt; Thoughts?\n&gt;&gt; Glenn\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;  \n&gt;\n\r\n--001485f7cbb20cfe0204881c2d1c\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nGlenn,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Personally, I find it easier to sketch out what t=\r\nhe HTTP interactions might look like. In your example of financials data pr=\r\nocessing, I think that I would separate out data from rules and have them i=\r\nnteract something like the following (the sketch is indicative only, for ex=\r\nample it ignores any security concerns):&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;--=\r\n&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#3=\r\n9;, monospace&quot;&gt;PUT /datasets/{datasetname}.xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=\r\n=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Host: &lt;a hr=\r\nef=3D&quot;http://example.net&quot;&gt;example.net&lt;/a&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D=\r\n&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Content-Type: =\r\napplication/vnd.example-dataset+xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-s=\r\ntyle-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;di=\r\nv&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace=\r\n&quot;&gt;&lt;?xml version=3D&quot;1.0&quot;?&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;A=\r\npple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;dataset&gt;{=\r\npayload}&lt;/dataset&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;--&lt;/div&gt;&lt;div=\r\n&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;=\r\n&gt;201 Created&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=\r\n=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;PUT /rules/=\r\n{rulename}.xml&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;=\r\n&#39;courier new&#39;, monospace&quot;&gt;Host: &lt;a href=3D&quot;http://example.net&quot;&gt;exam=\r\nple.net&lt;/a&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;=\r\ncourier new&#39;, monospace&quot;&gt;Content-Type: application/vnd.example-rule+xml=\r\n&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier n=\r\new&#39;, monospace&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; =\r\nface=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;?xml version=3D&quot;1.0&quot=\r\n;?&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;\n\n&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;cou=\r\nrier new&#39;, monospace&quot;&gt;&lt;rule&gt;{payload}&lt;/rule&gt;&lt;/font&gt;&lt;/div&gt;&lt;d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;--&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D=\r\n&quot;&#39;courier new&#39;, monospace&quot;&gt;201 Created&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div&gt;--&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courie=\r\nr new&#39;, monospace&quot;&gt;POST /jobs&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-sty=\r\nle-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Host: &lt;a href=3D&quot;http://=\r\nexample.com&quot;&gt;example.com&lt;/a&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-=\r\nspan&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Content-Type: application/v=\r\nnd.example-job+xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=\r\n=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=\r\n=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;?xml ve=\r\nrsion=3D&quot;1.0&quot;?&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-sp=\r\nan&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;job xmlns:xlink=3D&quot;&lt;=\r\na href=3D&quot;http://www.w3.org/1999/xlink&quot;&gt;http://www.w3.org/1999/xlink&lt;/a&gt;&qu=\r\not;&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;co=\r\nurier new&#39;, monospace&quot;&gt;=C2=A0=C2=A0 &lt;data xlink:href=3D&quot;&lt;a href=\r\n=3D&quot;http://example.net/datasets/{datasetname}.xml&quot;&gt;http://example.net/datas=\r\nets/{datasetname}.xml&lt;/a&gt;&quot; /&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;App=\r\nle-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;=C2=A0=C2=A0 &lt;r=\r\nules&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;cou=\r\nrier new&#39;, monospace&quot;&gt;=C2=A0=C2=A0 =C2=A0 =C2=A0&lt;rule xlink:href=3D&=\r\nquot;&lt;a href=3D&quot;http://example.net/rules/{rulename}.xml&quot;&gt;http://example.net=\r\n/rules/{rulename}.xml&lt;/a&gt;&quot; /&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;App=\r\nle-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;=C2=A0=C2=A0 &lt;/=\r\nrules&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;co=\r\nurier new&#39;, monospace&quot;&gt;&lt;/job&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n\n&lt;div&gt;&=\r\nlt;--&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#=\r\n39;, monospace&quot;&gt;303 See Other&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-s=\r\npan&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Location: &lt;a href=3D&quot;http://=\r\nexample.com/datasets/{datasetname}.xml&quot;&gt;http://example.com/datasets/{datase=\r\ntname}.xml&lt;/a&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--&gt;&lt;/div&gt;&lt;div&gt;&lt;font cla=\r\nss=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;GET /data=\r\nsets/{datasetname}.xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; fa=\r\nce=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Host: &lt;a href=3D&quot;http://example.com=\r\n&quot;&gt;example.com&lt;/a&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=\r\n=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Content-Type: application/vnd.example=\r\n-dataset+xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;--&lt;/div&gt;&lt;div&gt;&lt;font class=\r\n=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;204 No Cont=\r\nent&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;[time passes, the job is done]&lt;/div&gt;&lt;=\r\ndiv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=\r\n=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;GET /datasets/{datasetname}.xml&lt;/font=\r\n&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;,=\r\n monospace&quot;&gt;Host: &lt;a href=3D&quot;http://example.com&quot;&gt;example.com&lt;/a&gt;&lt;/font&gt;&lt;/di=\r\nv&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, mo=\r\nnospace&quot;&gt;Content-Type: application/vnd.example-dataset+xml&lt;/font&gt;&lt;/div&gt;&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;--&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&=\r\n#39;courier new&#39;, monospace&quot;&gt;200 OK&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;font class=3D&quot;A=\r\npple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;Content-Type: ap=\r\nplication/vnd.example-dataset+xml&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-sty=\r\nle-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;div&gt;=\r\n&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;=\r\n&lt;?xml version=3D&quot;1.0&quot;?&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;App=\r\nle-style-span&quot; face=3D&quot;&#39;courier new&#39;, monospace&quot;&gt;&lt;dataset&gt;{pa=\r\nyload}&lt;/dataset&gt;&lt;/font&gt;&lt;/div&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Please note =\r\nthat the original data and rules are stored on &lt;a href=3D&quot;http://example.ne=\r\nt&quot;&gt;example.net&lt;/a&gt; and then processed by &lt;a href=3D&quot;http://example.com&quot;&gt;exa=\r\nmple.com&lt;/a&gt;; this is to emphasise that the job processor has the responsib=\r\nility of retrieving the data and rules. In my sketch, the processor stores =\r\nresult datasets locally and the UA would have to move the data to an altern=\r\nate location after completion but it could easily be modelled otherwise. Th=\r\ne important point is that any server which understands the application/vnd.=\r\nexample+xml protocol can participate in job processing; the UA does not nee=\r\nd to have prior knowledge of the endpoint specifics. Looking at the sketch,=\r\n it is easy to see how a UA could chain together processing from a series o=\r\nf servers and a sequence of datasets to accomplish some goal. The sketch th=\r\nerefore supports serendipity of reuse.&lt;/div&gt;\n\n&lt;div&gt;&lt;br clear=3D&quot;all&quot;&gt;Regard=\r\ns,&lt;br&gt;Alan Dean&lt;br&gt;\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Jun 3, 2010 at 0=\r\n1:29, Glenn Block &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:glenn.block@gmail=\r\n.com&quot;&gt;glenn.block@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;g=\r\nmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-l=\r\neft:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=C2=\r\n=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div&gt;Corr=\r\nection to types in the last para:&lt;/div&gt;\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;Anyway the a=\r\ndvantage I saw in such a system is that the institutions that work with me =\r\ncan create any arbitrary set of rules they like. My=C2=A0system which=C2=A0=\r\nprocesses jobs doesn&#39;t know anything about the types of=C2=A0rules or c=\r\nare. All it knows it that is has some URI that it can post to (or possibly =\r\nGet) in order to execute some arbitrary logic. I now have an autonomous sys=\r\ntem that can easily adapt to new requirements. I am truly reaping the benef=\r\nits of HATEOS in such a system.&lt;br&gt;\n\n\n&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;\n&lt;div cla=\r\nss=3D&quot;gmail_quote&quot;&gt;On Wed, Jun 2, 2010 at 5:26 PM, Glenn Block &lt;span dir=3D=\r\n&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:glenn.block@...&quot; target=3D&quot;_blank&quot;&gt;glenn.=\r\nblock@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote style=3D&quot;border-left:=\r\n#ccc 1px solid&quot; class=3D&quot;gmail_quote&quot;&gt;\n&lt;div&gt;I get HATEOS for human interact=\r\nion. I am trying to undestand pure m2m benefits. If I think of a scenario o=\r\nf an Order management server host. I can imagine that when I retrieve an Or=\r\nder resource I can perform several &quot;actions&quot; on that order like A=\r\npprove, Hold, etc. I would see these as links. In this case if I had a mach=\r\nine talking to such a host, it can post to those links with the advantage b=\r\neing that the agent / calling ocde doesn&#39;t have=C2=A0coupling to where =\r\nthose links point to or how the URIs are formed. However the client code wh=\r\nich interacts with the agent has some idea that Approve and Hold exist, so =\r\nit is coupled in that sense.&lt;/div&gt;\n\n\n\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;I started to t=\r\nhink about m2m scenarios (other than web crawlers) where I could truly leve=\r\nrage the full decoupling that HATEOS i.e. an adaptable system that only kno=\r\nws to look for types of links=C2=A0but doesn&#39;t expect any specific inst=\r\nances of those links (like Approve) to be present.&lt;/div&gt;\n\n\n\n&lt;div&gt;=C2=A0&lt;/di=\r\nv&gt;\n&lt;div&gt;I thought back to my past life prior to MS when I used to work in t=\r\nhe financial services industry. In those days we had to do a ton of back en=\r\nd processing off data we received from multiple financial sources over FTP.=\r\n I built a generic FTP scanner that looked for files, ripped them open, par=\r\nsed them and then started executing all types of rules (I Blame Jan partial=\r\nly for forcing me down this mental road). There was basically zero human in=\r\nteraction other than monitoring the status of the processing. That system w=\r\nas coupled, it required data to be send in a specific schema and that had a=\r\n predefined set of rules that were implicit as part of the schema.&lt;/div&gt;\n\n\n=\r\n\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;&lt;u&gt;Disclaimer: Thought experiment follows&lt;/u&gt;&lt;/div&gt;=\r\n\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;Now let&#39;s say I decided to design such a system=\r\n today=C2=A0in a RESTFul manner around resources and HATEOS. In this case I=\r\n am imagining I have a Jobs&#92;Pending resource. I do a get on that resource a=\r\nnd get back a list of jobs that are pending to be processed. Now each Job h=\r\nas rules that have to execute. So in this world, I am thinking the rules ar=\r\ne links with each link point to a resource that handles processing that rul=\r\ne. Or maybe the link returns me some code that gets executed on the fly. &lt;/=\r\ndiv&gt;\n\n\n\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;Anyway the advantage I saw in such a system =\r\nis my the institutions that work with me can create any arbitrary set of ru=\r\nles they like. My which processes jobs doesn&#39;t know anything about the =\r\nrules or care. All it knows it that is has some URI that it can post to (or=\r\n possibly Get) in order to execute some arbitrary logic. I now have an auto=\r\nnomous system that can easily adapt to new requirements. I am truly reaping=\r\n the benefits of HATEOS in such a system.&lt;/div&gt;\n\n\n\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;T=\r\nhoughts?&lt;/div&gt;\n&lt;div&gt;Glenn&lt;/div&gt;&lt;font color=3D&quot;#888888&quot;&gt;\n&lt;div&gt;=C2=A0&lt;/div&gt;\n&lt;=\r\ndiv&gt;=C2=A0&lt;/div&gt;\n&lt;div&gt;=C2=A0&lt;/div&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n&lt;/div&gt;&lt;p&gt;&lt;=\r\n/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/di=\r\nv&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--001485f7cbb20cfe0204881c2d1c--\r\n\n"}}