{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":116732806,"authorName":"Tom","from":"&quot;Tom&quot; &lt;xeo_at_thermopylae@...&gt;","profile":"xeo_at_thermopylae","replyTo":"SENDER","senderId":"xZOTvKge3FTwBoncEwWamaBS6Nm-PS1CIY460gcnMmx_lFG9touymjlSTvaYEH7Bbl6ibD81frIhTCm6f44KG6e9P02jLJ8QIP_V","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Back-Button Problem and Prescod on &quot;Reliable delivery in HTTP&quot;","postDate":"1116258417","msgId":5051,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQ2YWY5aCtzZXJ2QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":5053,"prevInTime":5050,"nextInTime":5053,"topicId":5051,"numMessagesInTopic":3,"msgSnippet":"The back-button problem: after a form is submitted, the user may press the back button and then re-submit the form. How can we allow only a single submission? ","rawEmail":"Return-Path: &lt;xeo_at_thermopylae@...&gt;\r\nX-Sender: xeo_at_thermopylae@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 35075 invoked from network); 16 May 2005 15:47:33 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m30.grp.scd.yahoo.com with QMQP; 16 May 2005 15:47:33 -0000\r\nReceived: from unknown (HELO n9a.bulk.scd.yahoo.com) (66.94.237.43)\n  by mta4.grp.scd.yahoo.com with SMTP; 16 May 2005 15:47:33 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.5] by n9.bulk.scd.yahoo.com with NNFMP; 16 May 2005 15:46:57 -0000\r\nReceived: from [66.218.66.87] by mailer5.bulk.scd.yahoo.com with NNFMP; 16 May 2005 15:46:57 -0000\r\nDate: Mon, 16 May 2005 15:46:57 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;d6af9h+serv@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2412\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;Tom&quot; &lt;xeo_at_thermopylae@...&gt;\r\nSubject: Back-Button Problem and Prescod on &quot;Reliable delivery in HTTP&quot;\r\nX-Yahoo-Group-Post: member; u=116732806\r\nX-Yahoo-Profile: xeo_at_thermopylae\r\n\r\nThe back-button problem:\nafter a form is submitted, the user may press the back button and then\nre-submit the form. How can we allow only a single submission?\n\nPaul Prescod&#39;s article &quot;Reliable delivery in HTTP&quot; at\nhttp://www.prescod.net/reliable_http.html describes a solution wherein\none generates unique message-IDs on the server. Each message ID is\nassociated with a submission (included in the form). I quote at length\nfrom the article - if you&#39;re familiar with the article/problem, then\nplease skip to my question at bottom:\n\n&gt;    A better strategy is to have the server generate the\n&gt;    message IDs. One elegant way to do this is to have the \n&gt;    client do a POST asking for an message ID. The server \n&gt;    can return a &quot;Location:&quot; header which points to a newly \n&gt;    generated URI where the client may POST the data. \n&gt;    For instance:\n&gt;    &gt;  Client request:\n&gt;         POST /service.cgi HTTP/1.1\n&gt;    \n&gt;       Server response:\n&gt;         HTTP/1.1 201 CREATED\n&gt;         Location: \n&gt;         http://mysite.com/service.cgi?messageid=32868937368\n&gt;    \n&gt;         POST http://mysite.com/service.cgi?messageid=32868937368\n&gt;    \n&gt;    (message body here)\n&gt;    \n&gt;    The reason this works is because we are using the \n&gt;    original non-reliable POST only to generate a new \n&gt;    message ID and message IDs are cheap. We can retire \n&gt;    them (whether they have been used or not) after a \n&gt;    few hours. They are so cheap that we could hold on \n&gt;    to them for weeks!\n&gt;    \n&gt;    A client need not worry about accidentally creating two \n&gt;    because the &quot;wasted&quot; one is irrelevant. The client also \n&gt;    need not worry about accidentally posting to the \n&gt;    generated messageID URI twice because the server can \n&gt;    ensure that it only acts on the first message posted to\n&gt;    that URI. The response of subsequent POSTs should be the \n&gt;    same as if there had been only one POST so that the \n&gt;    client can get the correct response even if there is \n&gt;    a network outage in the middle of the first response. \n\nMy question:\nUsing message IDs might allow a client to create new message IDs\nby spoofing the form. To prevent this, the server must keep track of\noutstanding message IDs (and perhaps optionally time them out)[Prescod\ndiscusses this also]. But this requires that the server save client\nstate (although minimal) and IMO is a violation of REST. \n\nIs there another way that is consistent with REST?\n\n\n\n"}}