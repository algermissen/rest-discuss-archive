{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"t8gulUDgbPQ_6Nh_glEH3H6jeCE3ugE-krSBOhnVfem-IhTeWVPyBbMQtx-JJFEB-55LXAepIToDbOQWuAYoi1rGgrYw_srPhR6sFqC3XA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1276360375","msgId":15649,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjEyMTAzMjU1LjgwYzE1YThiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGltelViTmdyQnVuTXhHTGlLMGZvZDFSVlhxOGtXZTFkOC1LSEs2YkBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAzMTQxMjA4LmUwMjY5ODdkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrTURTRG9ab3hXTzZVTHM2ZURxN0FycHZhZjFMa2RfLUVaVEYyV0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDc0OTU2LmM5ZTNjMWM1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltWFdjaHU5dHY0dmFFeWlGQjh6TFptME0yRjRpNlJjcU55QUZzU0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDkzOTEzLmVmNmNlYzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrSHZsZmJ2dkxQUUc2UmM5WjZMcjE5aFNheS1zT3VYSGJ5cXk0Q0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MTQwOTE2LjNmZmQ3NTNjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluU0plTndlckZZMTl4V1VYRFNDY0N5cG5Tdmt6WTc2LUdnVGFlNkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA4MTAwMzIzLmFhNmVmOTllLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVjh5eE4tUjRBRldBdk5hTHFwZWItdWY3Y08wV0ZtWDdEcGFSWEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA5MTgwMDA1LjhhOGRhNzBiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVDRJdjUzRWhyaFBMR0dZYUxlMVFmaHBHVjFQTTE1NmNYQ0toWkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjExMDgxNDE4LjZkZGE0N2E5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltRHFhWHVIUE52eS1RVUZaa0ZNYUhwU2NnSkNHLXNQcUtxRndzdUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjExMjMzMjU4LmUxYjdlNWY3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltelViTmdyQnVuTXhHTGlLMGZvZDFSVlhxOGtXZTFkOC1LSEs2YkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15647,"nextInTopic":15654,"prevInTime":15648,"nextInTime":15650,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"... Every time I m asked to explain how a REST constraint violates REST, my response will be the same -- it doesn t. What undermining of distinction?  GET /A","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8091 invoked from network); 12 Jun 2010 16:33:31 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m14.grp.re1.yahoo.com with QMQP; 12 Jun 2010 16:33:31 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 12 Jun 2010 16:33:31 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 67C00509DA;\n\tSat, 12 Jun 2010 12:33:22 -0400 (EDT)\r\nDate: Sat, 12 Jun 2010 10:32:55 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;, Tim Williams\n &lt;williamstw@...&gt;, Sebastien Lambla &lt;seb@...&gt;, mike amundsen\n &lt;mamund@...&gt;, Glenn Block &lt;glenn.block@...&gt;,\n &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100612103255.80c15a8b.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTimzUbNgrBunMxGLiK0fod1RVXq8kWe1d8-KHK6b@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;20100603141208.e026987d.eric@...&gt;\n\t&lt;AANLkTikMDSDoZoxWO6ULs6eDq7Arpvaf1Lkd_-EZTF2W@...&gt;\n\t&lt;20100604074956.c9e3c1c5.eric@...&gt;\n\t&lt;AANLkTimXWchu9tv4vaEyiFB8zLZm0M2F4i6RcqNyAFsS@...&gt;\n\t&lt;20100604093913.ef6cec19.eric@...&gt;\n\t&lt;AANLkTikHvlfbvvLPQG6Rc9Z6Lr19hSay-sOuXHbyqy4C@...&gt;\n\t&lt;20100604140916.3ffd753c.eric@...&gt;\n\t&lt;AANLkTinSJeNwerFY19xWUXDSCcCypnSvkzY76-GgTae6@...&gt;\n\t&lt;20100608100323.aa6ef99e.eric@...&gt;\n\t&lt;AANLkTinV8yxN-R4AFWAvNaLqpeb-uf7cO0WFmX7DpaRX@...&gt;\n\t&lt;20100609180005.8a8da70b.eric@...&gt;\n\t&lt;AANLkTinT4Iv53EhrhPLGGYaLe1QfhpGV1PM156cXCKhZ@...&gt;\n\t&lt;20100611081418.6dda47a9.eric@...&gt;\n\t&lt;AANLkTimDqaXuHPNvy-QUFZkFMaHpScgJCG-sPqKqFwsu@...&gt;\n\t&lt;20100611233258.e1b7e5f7.eric@...&gt;\n\t&lt;AANLkTimzUbNgrBunMxGLiK0fod1RVXq8kWe1d8-KHK6b@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt; \n&gt; Please can you stop repeating this &#39;point&#39;, you&#39;ve b=\r\neen asked multiple\n&gt; times now to *explain* how identification of resources=\r\n stands as\n&gt; justification for a blanket undermining of the distinction bet=\r\nween\n&gt; resource and representation.\n&gt; \n\nEvery time I&#39;m asked to explain how=\r\n a REST constraint violates REST, my\nresponse will be the same -- it doesn&#39;=\r\nt.\n\nWhat undermining of distinction?  GET /A responds with one of a set of\n=\r\nvariant representations.  When conneg is utilized, aside from\ncompression, =\r\nthese variants are also resources in their own right\n(whether you accept th=\r\nis and give them URIs or not).  This doesn&#39;t stop\nthem from being variant r=\r\nepresentations of the negotiatied resource,\nbecause there&#39;s no constraint w=\r\nhich limits a representation to having\nonly one identifier.\n\nCan you explai=\r\nn why you think that a representation having multiple URIs\nundermines the d=\r\nefinition of resource or representation, in terms of\nRoy&#39;s thesis?\n\nIf your=\r\n understanding of resource and representation leads you to\nbelieve that the=\r\n established best practice (the SHOULD in RFC 2616) is\na REST mismatch that=\r\n&#39;s escaped Roy&#39;s notice, then the burden of\nexplanation is on you -- you ca=\r\nn&#39;t ask me to explain it for you when I\ndisagree with the notion entirely.\n=\r\n\nAssigning URIs to variants (aka following RFC 2616) works in practice\nbeca=\r\nuse it meets the Identification of Resources constraint.  If your\nunderstan=\r\nding of REST is at odds with this reality, i.e. you see a REST\nmismatch the=\r\nre when nobody else does, then I suggest that the solution\nfor you is to ch=\r\nange your understanding of REST.\n\nREST&#39;s definitions of representation and =\r\nresource are grounded in the\nneed to explain how one network address can ho=\r\nuse multiple entities\nbased on user or user agent preference, and how one e=\r\nntity can reside\nat more than one network address.  It does so nicely, in a=\r\n way which\nencompasses the conneg requirement of assigning URIs to variants=\r\n such\nthat components have some way to distinguish one variant from another=\r\n.\n(Except for compression.)\n\nThis entire notion is required in order to und=\r\nerstand the concept of\nthe late binding of a representation to a resource. =\r\n You&#39;re having\ntrouble grasping conneg the way everyone else does (this deb=\r\nate was\nsettled a dozen years ago by the consensus of RFC 2616), i.e. you&#39;r=\r\ne\nhaving trouble with the late binding bit, I suspect because you&#39;re\nhaving=\r\n trouble with the resource/representation bit.\n\nWhen my quaint notion of so=\r\nme REST concept leads me to think there&#39;s a\nREST mismatch in HTTP nobody el=\r\nse has noticed, I personally take that\nas a sign that the problem lies in m=\r\ny quaint notion of that concept.\n\nThere&#39;s no shame in that.  I&#39;ve freely ad=\r\nmitted here that it took me\nover a year to understand Roy&#39;s weblog entry ab=\r\nout REST APIs being\nhypertext driven, because it meant I had to accept that=\r\n many of my\nown quaint notions of REST were wrong.\n\nIn most cases, my resul=\r\nts were still RESTful in spite of myself, but\nthe &#39;aha!&#39; moment last Decemb=\r\ner led to beneficial changes I&#39;d never have\nseen had I not been able to adm=\r\nit that I didn&#39;t know what I was talking\nabout.\n\nIt took me a few years to =\r\nfigure out what REST was.  It then took me a\nfew more years to know what I =\r\nwas talking about.  A few years later, I\ndiscovered to my chagrin that I di=\r\ndn&#39;t know, which was the key to my\nfinally learning REST enough that I fina=\r\nlly do know what I&#39;m talking\nabout, now.  It&#39;s all so clear I can&#39;t believe=\r\n it was ever so hard.\n\nSo I mean no disrespect when I suggest that someone =\r\nmay be holding\nthemself back by holding a quaint notion of some REST concep=\r\nt.  REST is\nhard to learn, but once you have, everything falls into place a=\r\nnd it&#39;s\neasy to see why things are the way they are on the real-world Web.\n=\r\n\n&gt;\n&gt; Does the current overall web arch interpretation of resource and\n&gt; rep=\r\nresentation consider it an incorrect approach? Possibly.\n&gt; \n\nThis is rest-d=\r\niscuss, not webarch-discuss.  Roy&#39;s thesis explicitly\nnames the REST mismat=\r\nches in HTTP.  Conspicuously absent from the list\nis any hint that assignin=\r\ng URIs to variants is a REST mismatch.  The\nthesis is also explicit about t=\r\nhe reasons for and effects of the\nIdentification of Resources constraint.\n\n=\r\nFailing to assign URIs to variants results in the problems the thesis\npredi=\r\ncts for breaking that constraint.  Assigning URIs to variants\nresults in th=\r\ne benefits the thesis predicts for applying that\nconstraint.  So REST obvio=\r\nusly does not consider that SHOULD in RFC 2616\nto be an incorrect approach;=\r\n if WebArch does, then that&#39;s off-topic.\n\n&gt;\n&gt; Is it possible for this &#39;alte=\r\nrnative&#39; interpretation to co-exist?\n&gt; Probably - the best FUD you could co=\r\nme up with was some bizarre\n&gt; analogy with fragment identifiers.\n&gt; \n\nYou&#39;re=\r\n sticking with changing the semantics of @type, and claiming that\nthis 180-=\r\ndegree reversal of its semantics will &quot;probably&quot; co-exist.  I\nstill say it =\r\ncan&#39;t, but that it&#39;s irrelevant.  What&#39;s relevant to your\nsuggested borking=\r\n of @type is the layered system constraint.\n\nThere is no &#39;alternative inter=\r\npretation&#39; of REST where a media type may\ndictate the Accept header, this i=\r\ns a prima facie constraint violation.\nIf you fail to see that, then the fai=\r\nlure must lie with your quaint\nnotion of the layered system constraint, bec=\r\nause that constraint\nexplains nicely the reality that browsers&#39; Accept head=\r\ners are hard-\ncoded and no Javascript API exists for changing them.\n\nOne ex=\r\nample of the layered system constraint in practice is URI\nfragments -- whic=\r\nh have no effect on the parameters of the request to\ndereference.  Another =\r\nexample is @type, which also has no effect on the\nparameters of the request=\r\n to dereference the URL it annotates.  I&#39;m\nsorry that this reality also fai=\r\nls to meet your quaint notions of how\nthe Web should work, but it is not FU=\r\nD to compare apples to apples.\n\nAlso, as I keep explaining, nowhere in any =\r\nmarkup language do we find\nany mention whatsoever of using any sort of tags=\r\n to perform anything\nremotely resembling content negotiation.  We do find c=\r\nonneg mentioned\nin multiple RFCs pertaining to the HTTP protocol.  Clearly,=\r\n then, the\nnative architecture of the Web considers conneg to be a protocol=\r\n-layer\noperation contained entirely within HTTP headers (or a variant list =\r\nif\nusing transparent, which is barely worth mentioning), not within the\nmes=\r\nsage body (borking @type).\n\nTo change this, is to fundamentally change the =\r\narchitecture of the Web,\nfrom being a known quantity as defined by both RES=\r\nT and WebArch into\nsome untested, unknown quantity which lacks a definition=\r\n.  This would\nbe a change away from established constraints, to an architec=\r\ntural\nstyle of unbounded creativity.\n\n&gt;\n&gt; Does the REST style in its essenc=\r\ne have anything to say about these\n&gt; kinds of implementation specifics? It =\r\nwould appear not.\n&gt; \n\nOf course not.  REST is an architectural style, not a=\r\nn implementation\nguideline.  Implementation specifics may be analyzed in te=\r\nrms of REST,\nhowever.  Just like Roy&#39;s thesis does in Chapter 6, where HTTP=\r\n REST\nmismatches are discussed, conspicuously not including any mention of\n=\r\nHTTP&#39;s SHOULD requirement to assign URIs to variants.  If, aside from\ncompr=\r\nession, the only way HTTP conneg works (assign URIs to variants)\nis by unde=\r\nrmining REST&#39;s definition of representation and resource, I&#39;m\nquite sure Ro=\r\ny would have noticed, and mentioned it in Chapter 6, or\nhere on rest-discus=\r\ns, or on www-tag, or changed it in HTTPbis...\n\n&gt;\n&gt; You can&#39;t keep jumping f=\r\nrom arguing violation of REST principals to\n&gt; arguing over feasibility in p=\r\nractice on the web. Pick one, and stick\n&gt; to it please.\n&gt; \n\nWe&#39;re on rest-d=\r\niscuss talking about conneg.  So of course I can talk\nabout HTTP implementa=\r\ntion specifics (which is what conneg is) in terms\nof REST (which is what we=\r\n&#39;re here for).  REST informed the design of\nHTML, HTTP and URI.  REST is al=\r\nl about hitting the Web&#39;s sweet spot,\nwhich means leveraging those aspects =\r\nof HTML, HTTP and URI which follow\nthe constraints which informed their des=\r\nign, while ignoring those\naspects which it identifies as mismatches.\n\nURI f=\r\nragments and @type are the way they are because their design was\ninformed b=\r\ny REST, specifically the layered system constraint.  RFC 2616\nsays you SHOU=\r\nLD assign URIs to variants, because conneg&#39;s design was\ninformed by REST, s=\r\npecifically the identification of resources\nconstraint.  Cookies are the wa=\r\ny they are because their design went\nagainst REST, specifically the statele=\r\nss messaging constraint.\n\nSo it is a fact, that sometimes reality on the We=\r\nb is a direct result\nof the pragmatic application of REST constraints to th=\r\ne design of HTTP,\nURI and HTML.  So I can indeed frame my responses in term=\r\ns of how the\nway certain things work is a reflection of some REST constrain=\r\nt or\nanother, or more.  The only argument to avoid, is pointing to a REST\nm=\r\nismatch and declaring it isn&#39;t one because it works in practice.\n\nThe argum=\r\nents against borking @type to avoid assigning URIs to variants\nconsist of e=\r\nxplaining that the way the Web works in reality, results\nfrom its design fo=\r\nllowing the constraints of REST.  The argument against\nyour way co-existing=\r\n with the Web as it is, is that HTTP !=3D REST -- just\nbecause we could do =\r\nthings your way is a spurious argument to make in\nfavor of your way being R=\r\nESTful.  We could store state in cookies, but\nit&#39;s still a REST mismatch, n=\r\not an &#39;alternate interpretation&#39;.\n\nYour suggestion would require a state of=\r\n denial, that there&#39;s any\ncorrelation between REST and how the Web works in=\r\n practice, when the\ntruth is that the two are inextricably intertwined.\n\n&gt;\n=\r\n&gt; &gt;\n&gt; &gt; How difficult is it to understand that there is one exception to th=\r\ne\n&gt; &gt; SHOULD, and that&#39;s compression?\n&gt; \n&gt; Because you&#39;re not articulating =\r\nit well enough? Because it&#39;s far more\n&gt; subjective than you would have us b=\r\nelieve? Because you&#39;re wrong?\n&gt; \n\nOr because I was lurking there a dozen ye=\r\nars ago when this debate was\nSETTLED with the adoption of RFC 2616 as conse=\r\nnsus, and have never seen\nin all the years since, a situation where it does=\r\n not hold true?  Or\nbecause assigning URIs to variants (aka following RFC 2=\r\n616) solves\nevery problem anyone has ever proposed an alternative solution =\r\nfor, so\nI don&#39;t see the point to re-inventing that wheel?  Or because the f=\r\nact\nthat HTTPbis neither changes this bit of HTTP nor recognizes any valid\n=\r\nreasons not to assign URIs to variants that may have cropped up over\nthe la=\r\nst dozen years, proves to me I&#39;m right?\n\nThere are plenty of reasons why as=\r\nsigning URIs to variants is best\npractice.  There is every reason to doubt =\r\nthat you or anyone else has\ndiscovered a valid reason to ignore this SHOULD=\r\n (besides compression).\nConneg isn&#39;t perfect, there&#39;s plenty of room for im=\r\nprovement, but not\nin HTTP 1.1 -- this is for a successor protocol to work =\r\nout.  Which\nmeans that for the forseeable future, which is HTTPbis, you SHO=\r\nULD\nassign URIs to your variants.\n\nBecause, whether you like it or not, var=\r\niants (except compression) are\nresources in their own right (just as glass =\r\nis a liquid even if you\ninsist on calling it a solid).  So, to assign them =\r\nURIs not only meets\nthe identification of resources constraint, it also mee=\r\nts the SHOULD in\nHTTP which implements that constraint for conneg.  Given t=\r\nhat a RESTful\nbest practice solves the problem you&#39;re proposing borking @ty=\r\npe as a\nsolution to, I have intense skepticism that it would be adopted eve=\r\nn if\nit didn&#39;t violate any REST constraints.\n\n&gt;\n&gt; &gt;=A0You can keep asking m=\r\ne about every\n&gt; &gt; possible exception out there, but it won&#39;t change my answ=\r\ner -- it\n&gt; &gt; will only annoy the crap out of me. =A0If these possible excep=\r\ntions\n&gt; &gt; aren&#39;t compression, my answer remains &quot;no.&quot; =A0Seriously, how muc=\r\nh\n&gt; &gt; more concisely and unequivocally can I state my position?\n&gt; \n&gt; With a=\r\nll due respect I don&#39;t think concise is a word I&#39;d associate\n&gt; with your po=\r\nstings here.\n&gt;\n\nI can&#39;t get any more concise than &quot;assign URIs to your vari=\r\nants&quot; but\nthat isn&#39;t good enough for some, who keep asking for elaboration.=\r\n  That\nelaboration may not be concise, but that doesn&#39;t change the simple\nn=\r\nature of the assertion, which is that the only exception is\ncompression.  C=\r\nontinuing to ask whether one thing after another might\nbe an exception afte=\r\nr I keep repeating that the only exception is\ncompression will annoy me to =\r\nthe point where I stop responding, so I\ngive fair warning, just in case the=\r\n goal is to learn rather than annoy.\n\n&gt;\n&gt; What your position is, is not par=\r\nticularly interesting\n&gt;\n\nOh, I agree completely.  Assigning URIs to variant=\r\ns is a debate that&#39;s\nbeen settled for over a decade, repeatedly having to e=\r\nxplain it every\nthird month on this list _is_ incredibly boring.  What woul=\r\nd be\ninteresting, is a discussion about whether or not using URNs in Conten=\r\nt-\nLocation works, and if so, if it&#39;s RESTful.  We can&#39;t get to that\nintere=\r\nsting discussion if we can&#39;t agree to assign URIs to variants,\nthough.\n\n&gt;\n&gt;=\r\n Having to trawl through long-winded, meandering explanations is\n&gt; annoying=\r\n the crap out of me, personally.\n&gt; \n\nYou could always try, for once, accept=\r\ning that maybe, just maybe, the\nanswer you&#39;re getting (and not just from me=\r\n), besides merely pointing\nout best practice, might actually be right?  Of =\r\ncourse, if you don&#39;t\nlike what I write, you can always ignore it, or just n=\r\not respond to\nit.  If you&#39;re actually trying to learn REST by asking me que=\r\nstions,\nit&#39;s best not to annoy me.  OTOH, if I annoy you to the point you s=\r\ntop\nasking me questions, well, I don&#39;t see the downside to that, so what&#39;s\n=\r\nmy motivation not to annoy the crap out of you? \n\n&gt;\n&gt; If if bothers you tha=\r\nt much, perhaps it&#39;s time to Accept that you\n&gt; aren&#39;t capable of making the=\r\n point coherently enough for the intended\n&gt; audience, and move on.\n&gt; \n\nI th=\r\nink everybody understands that REST&#39;s only real problem, is that\nit&#39;s hard =\r\nto teach (thus, hard to learn).  The evidence of this, is\nthat if we were t=\r\neaching it properly, then despite adoption being\nbuzzword-driven the realit=\r\ny wouldn&#39;t resemble the current situation\nwhere 99% of REST claimants are n=\r\nothing of the sort.\n\nPart of my interest in participating here, is figuring=\r\n out how to teach\nREST.  We&#39;ve touched on something here that some people, =\r\ninstead of\npushing their own agenda, are legitimately having difficulty\nund=\r\nerstanding.  The challenge is to translate Roy&#39;s thesis from its\ntechnical,=\r\n concise, fewer-words-couldn&#39;t-be-used language into\nsomething more accessi=\r\nble to the masses.  Any effort will obviously be\nless concise, but there ar=\r\ne no guidelines for this translation.\n\nSo my approach is deliberately tauto=\r\nlogical, the concept being to throw\nwhatever I can think of out there, and =\r\nsee what sticks.  Some people\nnever learn, while others have actually come =\r\naround.  Enough come\naround over the years, that they start giving the same=\r\n best-practice\nadvice, and in this advice I often see my own points being r=\r\ne-stated.\n\nThis is how I learn how to teach REST.  If I never were to see a=\r\nny\nevidence that what I write sinks in, I&#39;d quit as you suggest, but I\ndon&#39;=\r\nt see your failure to learn as evidence of my failure to teach.  If\nyou don=\r\n&#39;t think there&#39;s anything I can teach you, don&#39;t ask me\nquestions.  If you =\r\nhonestly want to learn from me, don&#39;t ask me\nannoying questions for the sak=\r\ne of being argumentative.  I&#39;m more than\nhappy to be generous with my time =\r\nhere, unless I feel it&#39;s being wasted.\n\nWhich is where we&#39;re at in this thr=\r\nead, because as I&#39;ve said, this\ndebate really was settled over a decade ago=\r\n and we&#39;re only flogging a\ndead horse by debating the merits of established=\r\n best practice as if\nthere were some sort of actual problem with it.\n\nI&#39;m m=\r\nore than happy to explain *why* it&#39;s best practice, but very\nannoyed by peo=\r\nple who insist that there&#39;s something *wrong* with\nRESTful best practice an=\r\nd can&#39;t be told otherwise by anybody, in the\nface of abundant evidence show=\r\ning the best practice to be absolutely\nfundamentally sound, and who refuse =\r\nto accept criticism of their\nalternative solution, no matter how many peopl=\r\ne say that it goes\nagainst REST while not doing anything that can&#39;t be done=\r\n by following\nbest practice which conforms to REST.\n\n-Eric\n\n"}}