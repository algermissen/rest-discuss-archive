{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"DSg8shj1FIYIvHqkid3iWLTbqoruG3SWwr6AletWmGXBPmd7zMeMsw72s6ulcuTmZCwPBEajY-9PcFRo8IPbvMQ1-TY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and RESTful HTTP in browsers","postDate":"1227541293","msgId":11603,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MkFDQjJELjQwNzA5MDNAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDQ5MkFCMkFELjEwMTAxMDhAbXlrYW5qby5jby51az4=","referencesHeader":"PDIwMTUxMDEwLjIzNjg3MTIyNjkxOTk1NDUzMi5KYXZhTWFpbC5zZXJ2bGV0QGt1bmRlbnNlcnZlcj4JPDQ5MjJCMzZBLjMwOTA4MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMjc3YmllTFkwMDAwMTYwMUBFWC5VQ09QLkVEVT4JPDQ5MjVDMjAzLjgwNzA0MDFAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmEycjhnUEEwMDAwMTdmN0BFWC5VQ09QLkVEVT4JPDQ5MjYwNjI5LjgwNjA4MDVAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMnhUanRScGUwMDAwMTk5NUBFWC5VQ09QLkVEVT4JPDQ5MjY4MkU4LjgwNjA2MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmFOZ0VwVFgwMDAwMWJjZEBFWC5VQ09QLkVEVT4JPDQ5MjZGMzQ3LjUwNTA4MDBAbXlrYW5qby5jby51az4JPGVjZjM1YTFiMDgxMTIxMTAwMHExZTMxMzM3Y3VhMGQ3YWRhMmIyMDI3NjJhQG1haWwuZ21haWwuY29tPgk8NDkyNzA2MDEuNjA4MDcwNEBteWthbmpvLmNvLnVrPiA8MjAwODExMjIwNzA4MjAuZDkxMWU5NjQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiA8NDkyQThDMzguOTA3MDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkE5MURCLjcwMTA0MDdAbXlrYW5qby5jby51az4gPDQ5MkFBMDZGLjgwMjAxMDdAaGFja2NyYWZ0Lm5ldD4gPDQ5MkFCMkFELjEwMTAxMDhAbXlrYW5qby5jby51az4="},"prevInTopic":11602,"nextInTopic":11604,"prevInTime":11602,"nextInTime":11604,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... Because you are using it to identify, hence it is an identifier. ... That s exactly what it does. Please let it do so. ... But it has become an part of the","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 87759 invoked from network); 24 Nov 2008 15:41:59 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m57.grp.scd.yahoo.com with QMQP; 24 Nov 2008 15:41:59 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta17.grp.scd.yahoo.com with SMTP; 24 Nov 2008 15:41:59 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Mon, 24 Nov 2008 10:41:38 -0500\r\nMessage-ID: &lt;492ACB2D.4070903@...&gt;\r\nDate: Mon, 24 Nov 2008 15:41:33 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (Windows/20081105)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20151010.236871226919954532.JavaMail.servlet@kundenserver&gt;\t&lt;4922B36A.3090804@...&gt;\t&lt;P-IRC-EXBE0277bieLY00001601@...&gt;\t&lt;4925C203.8070401@...&gt;\t&lt;P-IRC-EXBE02a2r8gPA000017f7@...&gt;\t&lt;49260629.8060805@...&gt;\t&lt;P-IRC-EXBE02xTjtRpe00001995@...&gt;\t&lt;492682E8.8060604@...&gt;\t&lt;P-IRC-EXBE02aNgEpTX00001bcd@...&gt;\t&lt;4926F347.5050800@...&gt;\t&lt;ecf35a1b0811211000q1e31337cua0d7ada2b202762a@...&gt;\t&lt;49270601.6080704@...&gt; &lt;20081122070820.d911e964.eric@...&gt; &lt;492A8C38.90701@...&gt; &lt;492A91DB.7010407@...&gt; &lt;492AA06F.8020107@...&gt; &lt;492AB2AD.1010108@...&gt;\r\nIn-Reply-To: &lt;492AB2AD.1010108@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: -1783862024753.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 10:41:46 on 24 Nov 2008\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and RESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=164939419; y=otIYCXd-sRZAafstoBXhyBcLKhUP2SA1hZe9lEbg3zrNtvSW\r\nX-Yahoo-Profile: hack_poet\r\n\r\nMike wrote:\n&gt; How is making context-specific changes to a UA&#39;s Accept header, creating \n&gt; a &#39;new type of identifier&#39; ?\n\nBecause you are using it to identify, hence it is an identifier.\n\n&gt; Why on earth does the Accept header exist if it&#39;s not to indicate \n&gt; appropriate content types?\n\nThat&#39;s exactly what it does. Please let it do so.\n\n&gt; No - the Accept header *remains* part of the request; it&#39;s significance \n&gt; to the server is increased.\n\nBut it has become an part of the means of identifying.\n\n&gt; The Accept attribute (and header) can contain whatever the developer \n&gt; wants, I&#39;m not sure why you believe this would be limited to certain \n&gt; content types.\n\nI&#39;m not believing this. I believe you are proposing the de-facto removal \nof content-negotiation from HTTP and the de-facto change of the \nidentifiers used in HTTP.\n\nAnyone wanting to do REST after that would have to reply with de-facto \nreplacement of content-negotiation into HTTP and de-factor normalisation \nof the identifier mechanism.\n\n&gt; Good; then I guess that&#39;s even more reason to keep all representations \n&gt; of a resource within one URI, rather than creating unnecessary URIs for \n&gt; each representation.\n\nOnce you have offered something to the user it is a resource.\n\nIf differences in formats are something that should be manually dealt \nwith, or dealt with at an application level, then you are not talking \nabout a single resource, but multiple resources.\n\nIf formats are not something for the user to worry about, then why do we \nwant to identify them at markup level?\n\n&gt; How sure are you, that is &#39;pushing it above the protocol level&#39;?\n\nBecause I am neither an HTTP server nor a HTTP client. When something is \noffered to me, it has moved above the protocol level.\n\n&gt;&gt; In a RESTful system there is a uniform way of identifying all \n&gt;&gt; resources. In HTTP this is URIs.\n&gt;&gt;   \n&gt; \n&gt; Neat! :)\n\nExtremely neat indeed. If anything is core to the overall neatness (in \nmany senses of the word) of REST it is this. I object strongly to your \nproposing we do away with it.\n\n&gt;&gt; Any proposal to have a means of identifying resources beyond URIs is a \n&gt;&gt; proposal to make HTTP no longer RESTful.\n&gt; \n&gt; True. What about using URIs to identify beyond resources? (i.e. to \n&gt; specify the representation)\n\nThen we no longer have a uniform interface and we no longer have uniform \nidentifiers. URIs have become a misnomer. One of the core constraints in \nREST has been broken, and hence it&#39;s no longer anything remotely related \nto REST.\n\n&gt; Modifying the Accept header has *nothing to do* with identifying the \n&gt; resource.\n\nExactly why it shouldn&#39;t be used as an identifier.\n\n&gt; I think you may have misunderstood the implications of this proposal.\n\nI think you have.\n\n&gt;&gt; You are proposing that we make HTML violate one of the core \n&gt;&gt; constraints of REST.\n&gt;&gt;   \n&gt; \n&gt; No, I&#39;m not.\n\nYes, you are. We have a uniform means of identifying resources. When \nusing an HTTP client we have that, and only that, means of identifying \nit. This is one of the constraints of REST. If any of the constraints \ncould be considered key (though it&#39;s dangerous to rank the constraints) \nit would be this one.\n\n&gt; To me, that&#39;s a horrible solution.\n\nWhy?\n\nIt works. It has been done successfully. It has no more overhead than \nwhat you propose at an implementation level. It remains within REST. It \nhas zero implementation overhead in the majority case (in fairness, so \ndoes yours). It works today, and has done for many years. It&#39;s \nautomatically resilient to changes in which representations are \navailable without hypermedia referencing the resources needing to be \nupdated except for that which comes with the 406 response.\n\n&gt; My point here is that I see no value in doing content type \n&gt; negotiation in the URI if the representation is negotiable (Accept \n&gt; header) via the protocol (HTTP).\n\nContent negotiation in the headers allows a user-agent to say, &quot;I can \nwork with ...&quot; and the server to act accordingly.\n\nContent negotiation by representations-as-resources allows the server to \nsay &quot;I can give you ...&quot; and the client to act accordingly.\n\nThese fulfil different needs and fulfil them appropriately. Both of \nthese remain within REST.\n\n&gt; Lack of support? That&#39;s why I am \n&gt; proposing this additional attribute.\n\nWhat lack of support? Both forms of content-negotiation are in use \ntoday. Most of the time we don&#39;t do content-negotiation on content-type \nbecause most of the time it isn&#39;t actually relevant to the applications. \nSupport for the cases where it is relevant is fine.\n\nOf the remaining times when it is not enough, we are offering the user \ntwo or more resources to choose between. The only thing your proposal \nchanges in this regard is that the constraint that we have uniform \nidentifiers is no longer holding.\n\n&gt; Your tone seems a little hostile; I&#39;ll give the benefit of the doubt and \n&gt; just assume you&#39;re socially inept!\n\nWell, far be it from me to argue with that judgements, but no, it&#39;s not \nthat I&#39;m socially inept (not saying that I am not, it is not for me to \njudge) it&#39;s that I&#39;m becoming hostile following this thread.\n\nAll my hostility will disappear if you can explain how we are meant to \ndeal with this proposed change to HTML in a RESTful way?\n\n\n"}}