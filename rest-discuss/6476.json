{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":225339837,"authorName":"Phil Ruelle","from":"&quot;Phil Ruelle&quot; &lt;Philip.Ruelle@...&gt;","profile":"pnruelle","replyTo":"SENDER","senderId":"bMquVBl0ilCnt8VwJ8AtydgpBKmVoxUpm7EXUrvlzxuoAwRCrSlCwEhCAIWI_tCS6rThk1r5YaoMB4omTZhzAbtDGzabXPOYtD0xvvQvCaw","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Asynchronicity","postDate":"1155832592","msgId":6476,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVjMjV1ZytnZ2tkQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":6480,"prevInTime":6475,"nextInTime":6477,"topicId":6476,"numMessagesInTopic":3,"msgSnippet":"Hi, I ve been looking through the HTTP 1.1 spec to try to answer some questions about support for asynchronous processing of requests. To my mind of the 4 main","rawEmail":"Return-Path: &lt;Philip.Ruelle@...&gt;\r\nX-Sender: Philip.Ruelle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 11031 invoked from network); 17 Aug 2006 16:37:17 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m28.grp.scd.yahoo.com with QMQP; 17 Aug 2006 16:37:17 -0000\r\nReceived: from unknown (HELO n4a.bullet.sc5.yahoo.com) (66.163.187.127)\n  by mta7.grp.scd.yahoo.com with SMTP; 17 Aug 2006 16:37:17 -0000\r\nReceived: from [66.163.187.122] by n4.bullet.sc5.yahoo.com with NNFMP; 17 Aug 2006 16:36:33 -0000\r\nReceived: from [66.218.69.5] by t3.bullet.sc5.yahoo.com with NNFMP; 17 Aug 2006 16:36:33 -0000\r\nReceived: from [66.218.66.70] by t5.bullet.scd.yahoo.com with NNFMP; 17 Aug 2006 16:36:33 -0000\r\nDate: Thu, 17 Aug 2006 16:36:32 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;ec25ug+ggkd@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Phil Ruelle&quot; &lt;Philip.Ruelle@...&gt;\r\nSubject: Asynchronicity\r\nX-Yahoo-Group-Post: member; u=225339837; y=xDgUI8-kGosMbZ28UkqvVPisvdV85r7FyWpUYfLZcHMLT10\r\nX-Yahoo-Profile: pnruelle\r\n\r\nHi,\n\nI&#39;ve been looking through the HTTP 1.1 spec to try to answer some \nque=\r\nstions about support for asynchronous processing of requests.\n\nTo my mind o=\r\nf the 4 main methods (GET, PUT, POST, DELETE) GET is the \nonly one which co=\r\nuld not be processed asynchronously. The others can \nall validly return 202=\r\n codes.\n\nSection 9 of RFC2068 specifically mentions returning a 202 for a \n=\r\nDELETE \nrequest but does not mention 202 as a valid response for either PUT=\r\n \nor \nPOST. Since section 9 is about method descriptions I am not taking \nt=\r\nhe \nomission of 202 as being a definitive statement about it being \ndisallo=\r\nwed.\n\nIt all seems quite straight forward but then you get into issues \nabo=\r\nut \nidempotency. PUT and DELETE are both idempotent (section 9.1.2). I \nwas=\r\n \nthinking that any asynchronous request would return a 202 along with \na \n=\r\nURI for a status monitor resource. I assume this would break the \nidempoten=\r\ncy rule since each invocation would involve the creation of \na \nnew resourc=\r\ne - the status monitor. \n\nFor a DELETE the client could always poll the res=\r\nource and would know \nits request had been processed when it got back a 404=\r\n. Of course \nfollowing this approach the client would never know if their r=\r\nequest \nfailed or was just taking an extremely long time to be processed.\n\n=\r\nA similar problem exists with PUT. The client can continually GET the \nreso=\r\nurce until it looks like the one that it PUT but of course that \nmay \nnever=\r\n happen not least because someone else can have changed it \ninbetween polli=\r\nng. This line of thought has lead me to start thinking \nabout versioning re=\r\nsources but that is non-trivial and I&#39;d like to \ngather some other opinions=\r\n before I open that pandora&#39;s box.\n\nIf anyone can share their opinion on wh=\r\nich methods can be invoked \nasynchronously I&#39;d appreciate it and any elabor=\r\nation on how to \nachieve \nit (with regard to return codes, resource status,=\r\n status monitors, \netc) \nwould be especially welcomed.\n\nThanks and regards,=\r\n\nPhil\n\n\n\n\n\n"}}