{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":118946221,"authorName":"Berend de Boer","from":"Berend de Boer &lt;berend@...&gt;","profile":"berenddeboer","replyTo":"SENDER","senderId":"vDAFP4ycJ8UCNnpVJ0HDLa1q5lpgah7tnrL6auys1RmuRCsHVTOYYOjT-PQsH7v9ak27tbayD-DLXylex0c_Kr4LbAKjlEQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] MoST - Model State Transfer","postDate":"1059594965","msgId":3810,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHVlbDA3aXlheS5mc2ZAeHNvbC5jb20+","inReplyToHeader":"PDE3OTI1NjU1MjIuMTA1OTU2MjY1MkBsb2NhbGhvc3Q+IChBbGV4IEphY29ic29uJ3MgbWVzc2FnZSBvZiAiV2VkLCAzMCBKdWwgMjAwMyAxMDo1NzozMiAtMDQwMCIp","referencesHeader":"PDBFQUE1MDY3ODdEMTJCNEI5OUQzQ0EwODYyMzBBMkI0REE5RkEyQG1haWwtMDEuc3Bva2Vzb2Z0d2FyZS5jbwltPiA8MTczNTkxODMzOC4xMDU5NTA2MDA1QGxvY2FsaG9zdD4gPHV2ZnRrajAwcS5mc2ZAeHNvbC5jb20+CTwxNzkyNTY1NTIyLjEwNTk1NjI2NTJAbG9jYWxob3N0Pg=="},"prevInTopic":3809,"nextInTopic":3811,"prevInTime":3809,"nextInTime":3811,"topicId":3793,"numMessagesInTopic":23,"msgSnippet":"... Alex Content-Negotiation Content-negotiation exacerbates the Alex problem above.  It is particularly incompatible with Alex PUT/POST because the server","rawEmail":"Return-Path: &lt;berend@...&gt;\r\nX-Sender: berend@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 19393 invoked from network); 30 Jul 2003 19:57:53 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 30 Jul 2003 19:57:53 -0000\r\nReceived: from unknown (HELO fs1.xsol.com) (219.88.64.124)\n  by mta1.grp.scd.yahoo.com with SMTP; 30 Jul 2003 19:57:53 -0000\r\nReceived: from BEREND.xsol.com ([10.0.0.70]) by fs1.xsol.com with Microsoft SMTPSVC(5.0.2195.2966);\n\t Thu, 31 Jul 2003 07:56:05 +1200\r\nTo: Alex Jacobson &lt;alex@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] MoST - Model State Transfer\r\nDate: Thu, 31 Jul 2003 07:56:05 +1200\r\nIn-Reply-To: &lt;1792565522.1059562652@localhost&gt; (Alex Jacobson&#39;s message of\n &quot;Wed, 30 Jul 2003 10:57:32 -0400&quot;)\r\nMessage-ID: &lt;uel07iyay.fsf@...&gt;\r\nUser-Agent: Gnus/5.090014 (Oort Gnus v0.14) Emacs/21.2\n (i386-msvc-nt5.0.2195)\r\nReferences: &lt;0EAA506787D12B4B99D3CA086230A2B4DA9FA2@...\n\tm&gt; &lt;1735918338.1059506005@localhost&gt; &lt;uvftkj00q.fsf@...&gt;\n\t&lt;1792565522.1059562652@localhost&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nReturn-Path: berend@...\r\nX-OriginalArrivalTime: 30 Jul 2003 19:56:05.0781 (UTC) FILETIME=[9CA7E450:01C356D4]\r\nFrom: Berend de Boer &lt;berend@...&gt;\r\nX-Yahoo-Group-Post: member; u=118946221\r\nX-Yahoo-Profile: berenddeboer\r\n\r\n&gt;&gt;&gt;&gt;&gt; &quot;Alex&quot; == Alex Jacobson &lt;alex@...&gt; writes:\n\n    Alex&gt; Content-Negotiation Content-negotiation exacerbates the\n    Alex&gt; problem above.  It is particularly incompatible with\n    Alex&gt; PUT/POST because the server has no way to tell the client\n    Alex&gt; what types may be PUT/POST and REST provides no way to\n    Alex&gt; understand what was meant when a client does so.\n\n    &gt;&gt;  A GET with Content-Type rest/content-types can solve this\n    &gt;&gt; perhaps?\n\n    Alex&gt; I&#39;m not sure what you mean\n\nRetrieving the list of &quot;what types may be PUT/POST&quot;.\n\n\n    Alex&gt; In contrast, if a MoST client GETs a foo.gif, it knows that\n    Alex&gt; foo.gif is the shared data model for whatever it\n    Alex&gt; represents. If it PUTs bar.gif, the effect actually will be\n    Alex&gt; simply to replace foo.gif with a new model.\n\nYep, but what about versioning? Some systems allow you to retrieve\nthe system state at a particular point in time. Sometimes you want\nbar.gif only to take effect at a future point in time, etc. etc.\n\nHaving all that into a meta model makes things quite\ncomplex. Inevitable you will make a meta-model that does not cover\neverything.\n\n\n    &gt;&gt; I&#39;m afraid that meta modeling doesn&#39;t solve any problem. The\n    &gt;&gt; next problem is usually the meta meta model of that. And the\n    &gt;&gt; meta meta meta model of that.\n\nAnd that&#39;s where this comes into play. The next person makes a\nslightly different metamodel that allows for updating put.gif\nretrospectively in time for example (if you view the system state at\nnow - 10 days, you get bar.gif instead of foo.gif what you got when\nyou actually had looked 10 days ago)\n\nAnd so forth. Now we have several competing meta models (just look at\nthe web services coordination/work flow/transaction/whatever specs\nthat are coming out at a rate of one a week).\n\nSomeone looking at that might decide: ah, the solution is a meta\nmetamodel that describes meta models.\n\n\n    Alex&gt; I&#39;m not sure what you are referencing here.  My point is\n    Alex&gt; simple that clients and servers should share data models and\n    Alex&gt; not simply transfer representations/views.  \n\nBut that data model, inevitably, will not be complete. Some clients\nwant to know more. And we have the same issue you have know.\n\n-- \nRegards,\n\nBerend. (-:\n\n\n"}}