{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":537489571,"authorName":"Keith Hassen","from":"Keith Hassen &lt;keith.hassen@...&gt;","profile":"erewh0n","replyTo":"SENDER","senderId":"uVJZS-lsWwvNe-l2DN0tms1J-9OK6sAe4Dw4kjQiI4KI0nXhW9qBrQE9l9roC4bD0WK5H2Ni9eKMjB4a6zIJD0QbOcSGeaADATsdbA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] API versioning","postDate":"1357709138","msgId":19248,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDhFRDAyRDhBLTQ0QjAtNEMwNi05MzE1LTI3QzgyMzFERkM4QUBnbWFpbC5jb20+","inReplyToHeader":"PDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGtjZm1jMCthb2lkQGVHcm91cHMuY29tPiA8MjAxMzAxMDcyMDM3MTkuNWJhM2ZkZDIuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiA8OUQ5NDUyQjAtQ0I1Qi00QkY3LThGMTgtRTEwRjZCNUZBNEI1QGdtYWlsLmNvbT4gPDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":19247,"nextInTopic":19249,"prevInTime":19247,"nextInTime":19249,"topicId":19240,"numMessagesInTopic":13,"msgSnippet":"First of all, thanks for the replies and perspective on REST. Backing up to the original question it seems like your particular take on it is that there s no","rawEmail":"Return-Path: &lt;keith.hassen@...&gt;\r\nX-Sender: keith.hassen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 69989 invoked from network); 9 Jan 2013 05:25:40 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m15.grp.sp2.yahoo.com with QMQP; 9 Jan 2013 05:25:40 -0000\r\nX-Received: from unknown (HELO mail-ie0-f178.google.com) (209.85.223.178)\n  by mta5.grp.sp2.yahoo.com with SMTP; 9 Jan 2013 05:25:40 -0000\r\nX-Received: by mail-ie0-f178.google.com with SMTP id c12so1598674ieb.9\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 08 Jan 2013 21:25:40 -0800 (PST)\r\nX-Received: by 10.50.53.175 with SMTP id c15mr334316igp.106.1357709140390;\n        Tue, 08 Jan 2013 21:25:40 -0800 (PST)\r\nReturn-Path: &lt;keith.hassen@...&gt;\r\nX-Received: from [10.99.0.3] ([24.246.52.18])\n        by mx.google.com with ESMTPS id kp4sm1550106igc.1.2013.01.08.21.25.37\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Tue, 08 Jan 2013 21:25:39 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v1283)\r\nContent-Type: multipart/alternative; boundary=&quot;Apple-Mail=_01144D97-40B7-4B69-8488-767C8349BC60&quot;\r\nIn-Reply-To: &lt;20130107225713.3b1ff58c.eric@...&gt;\r\nDate: Wed, 9 Jan 2013 00:25:38 -0500\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;8ED02D8A-44B0-4C06-9315-27C8231DFC8A@...&gt;\r\nReferences: &lt;kcfmc0+aoid@...&gt; &lt;20130107203719.5ba3fdd2.eric@...&gt; &lt;9D9452B0-CB5B-4BF7-8F18-E10F6B5FA4B5@...&gt; &lt;20130107225713.3b1ff58c.eric@...&gt;\r\nTo: Eric J. Bowman &lt;eric@...&gt;\r\nX-Mailer: Apple Mail (2.1283)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Keith Hassen &lt;keith.hassen@...&gt;\r\nSubject: Re: [rest-discuss] API versioning\r\nX-Yahoo-Group-Post: member; u=537489571; y=K6qIE3cWHussILfPkD2evtC6yKJVll7A5z9gGn8FVFUa8JLcAdpjqGUNi1khsEzlP_rVNwSjinUSn4A\r\nX-Yahoo-Profile: erewh0n\r\n\r\n\r\n--Apple-Mail=_01144D97-40B7-4B69-8488-767C8349BC60\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/plain;\n\tcharset=us-ascii\r\n\r\nFirst of all, thanks for the replies and perspective on REST.\n\nBacking up t=\r\no the original question it seems like your particular take on it is that th=\r\nere&#39;s no need to version URIs or the resource representations provided that=\r\n a cautious approach is taken to resource evolution.\n\nTo be honest I&#39;m stil=\r\nl not sure how this would be handled if two clients diverge in their unders=\r\ntanding of the same resource.  Perhaps that divergence leads us to differen=\r\nt concepts and thus different resources and I&#39;ve just been thinking about t=\r\nhe problem incorrectly. :)\n\nBack to your most recent response...\n\n&gt;&gt; This s=\r\neems to be a recommended practice that I&#39;ve encountered in\n&gt;&gt; reading about=\r\n RESTful implementations.\n&gt;&gt; \n&gt; \n&gt; Perfectly good HTTP API practice; REST, =\r\nnot so much.  The point of\n&gt; media types is to provide loose coupling based=\r\n on shared understanding\n&gt; of how the representation is to be decoded.  \n\nI=\r\n think I&#39;m actually talking about loose coupling, but this area seems a lit=\r\ntle fuzzy.  Comprehensive coverage of media type seems to be missing from F=\r\nielding&#39;s dissertation.  The media type I specified was definitely too spec=\r\nific (vnd.example.com might be a better choice rather than vnd.example.com.=\r\norder, the latter effectively binding the media type to the representation =\r\nand starts smelling like RPC modelling rather than the loose coupling promo=\r\nted by the RESTful style).\n\nSo how tight should this coupling be?  And what=\r\n about versioning?  I&#39;m tempted to say that if versioning is required, do s=\r\no in the URi rather than the media type.  The media type seems to be more o=\r\nf an assertion/expectation regarding application context rather than a spec=\r\nification of the resource.\n\nIt&#39;s amazing (or maybe not at all amazing) how =\r\ndivided this subject appears to be on the web.  This: http://www.informit.c=\r\nom/articles/article.aspx?p=3D1566460 is a pretty typical example.\n\nThanks a=\r\ngain for the feedback.\n\nK\n\n\nOn 2013-01-08, at 12:57 AM, Eric J. Bowman wrot=\r\ne:\n\n&gt; Keith Hassen wrote:\n&gt;&gt; \n&gt;&gt; This seems to be a recommended practice th=\r\nat I&#39;ve encountered in\n&gt;&gt; reading about RESTful implementations.\n&gt;&gt; \n&gt; \n&gt; P=\r\nerfectly good HTTP API practice; REST, not so much.  The point of\n&gt; media t=\r\nypes is to provide loose coupling based on shared understanding\n&gt; of how th=\r\ne representation is to be decoded.  Not tight coupling based\n&gt; on interpret=\r\ning the content of the representation.  I&#39;ve never seen an\n&gt; order API that=\r\n couldn&#39;t be represented as HTML; despite any number of\n&gt; variations on thi=\r\ns theme (or versions within), the media type doesn&#39;t\n&gt; vary between more or=\r\nder APIs on the Web than I can count.\n&gt; \n&gt; REST has no notion of resource &quot;=\r\ntype&quot; let alone of exposing same on the\n&gt; wire, so I&#39;ve never understood wh=\r\ny this solution is so prevalent in REST\n&gt; discussions.  Just media types, w=\r\nhich are agnostic as to what &quot;type&quot; of\n&gt; resource is being represented (wit=\r\nh rare exceptions as parameters).\n&gt; \n&gt;&gt; \n&gt;&gt;&gt; Anything else is up to the use=\r\nr-agent to work out.  This is actually\n&gt;&gt;&gt; easier for m2m than h2m; a v1 m2=\r\nm client should already ignore any\n&gt;&gt;&gt; hypertext it doesn&#39;t understand, rol=\r\nling out v2 can then re-use any\n&gt;&gt;&gt; non-deprecated bits of the API already =\r\npresent plus the new stuff,\n&gt;&gt;&gt; and ignore the deprecated stuff.  Can&#39;t it?=\r\n\n&gt;&gt; \n&gt;&gt; Not always, at least not in my experience. :)  I have found that\n&gt;&gt;=\r\n while breaking changes don&#39;t happen often, they *do* happen.  Add to\n&gt;&gt; th=\r\nis the possibility of different types of API consumers that start\n&gt;&gt; off im=\r\nplementing your APIs the same way, but slowly (or rapidly!)\n&gt;&gt; diverge over=\r\n time.  In some cases new resources (and thus new URIs)\n&gt;&gt; will suffice, bu=\r\nt in other cases what we are doing is very\n&gt;&gt; specifically *evolving* the r=\r\nesource representation to accommodate\n&gt;&gt; new requirements.\n&gt;&gt; \n&gt; \n&gt; Then de=\r\nsign for graceful degradation (or progressive enhancement) using\n&gt; client-s=\r\nide feature detection.  Just saying there&#39;s no need to swing\n&gt; the conneg h=\r\nammer to turn this particular screw.\n&gt; \n&gt; -Eric\n\n\r\n--Apple-Mail=_01144D97-40B7-4B69-8488-767C8349BC60\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=us-ascii\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=3D&quot;word-wrap: break-word; -webkit-nbsp-mode:=\r\n space; -webkit-line-break: after-white-space; &quot;&gt;&lt;div&gt;First of all, thanks =\r\nfor the replies and perspective on REST.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Backing u=\r\np to the original question it seems like your particular take on it is that=\r\n there&#39;s no need to version URIs or the resource representations provided t=\r\nhat a cautious approach is taken to resource evolution.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div&gt;To be honest I&#39;m still not sure how this would be handled if two clie=\r\nnts diverge in their understanding of the same resource. &nbsp;Perhaps that=\r\n divergence leads us to different concepts and thus different resources and=\r\n I&#39;ve just been thinking about the problem incorrectly. :)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;Back to your most recent response...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;blo=\r\nckquote type=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;This seems to be a rec=\r\nommended practice that I&#39;ve encountered in&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=\r\n=3D&quot;cite&quot;&gt;reading about RESTful implementations.&lt;br&gt;&lt;/blockquote&gt;&lt;blockquot=\r\ne type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;Perfectly good HTTP API practice; REST=\r\n, not so much. &nbsp;The point of&lt;br&gt;media types is to provide loose coupli=\r\nng based on shared understanding&lt;br&gt;of how the representation is to be deco=\r\nded. &nbsp;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I think I&#39;m actually talking a=\r\nbout loose coupling, but this area seems a little fuzzy. &nbsp;Comprehensiv=\r\ne coverage of media type seems to be missing from Fielding&#39;s dissertation. =\r\n&nbsp;The media type I specified was definitely too specific (&lt;a href=3D&quot;ht=\r\ntp://vnd.example.com&quot;&gt;vnd.example.com&lt;/a&gt; might be a better choice rather t=\r\nhan vnd.example.com.order, the latter effectively binding the media type to=\r\n the representation and starts smelling like RPC modelling rather than the =\r\nloose coupling promoted by the RESTful style).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So =\r\nhow tight should this coupling be? &nbsp;And what about versioning? &nbsp;I=\r\n&#39;m tempted to say that if versioning is required, do so in the URi rather t=\r\nhan the media type. &nbsp;The media type seems to be more of an assertion/e=\r\nxpectation regarding application context rather than a specification of the=\r\n resource.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&#39;s amazing (or maybe not at all amazi=\r\nng) how divided this subject appears to be on the web. &nbsp;This:&nbsp;&lt;a =\r\nhref=3D&quot;http://www.informit.com/articles/article.aspx?p=3D1566460&quot;&gt;http://w=\r\nww.informit.com/articles/article.aspx?p=3D1566460&lt;/a&gt;&nbsp;is a pretty typi=\r\ncal example.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks again for the feedback.&lt;/div&gt;&lt;=\r\ndiv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;K&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;On 2013-0=\r\n1-08, at 12:57 AM, Eric J. Bowman wrote:&lt;/div&gt;&lt;br class=3D&quot;Apple-interchang=\r\ne-newline&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;Keith Hassen wrote:&lt;br&gt;&lt;blockquot=\r\ne type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;This seems to be=\r\n a recommended practice that I&#39;ve encountered in&lt;br&gt;&lt;/blockquote&gt;&lt;blockquot=\r\ne type=3D&quot;cite&quot;&gt;reading about RESTful implementations.&lt;br&gt;&lt;/blockquote&gt;&lt;blo=\r\nckquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;Perfectly good HTTP API practice=\r\n; REST, not so much. &nbsp;The point of&lt;br&gt;media types is to provide loose =\r\ncoupling based on shared understanding&lt;br&gt;of how the representation is to b=\r\ne decoded. &nbsp;Not tight coupling based&lt;br&gt;on interpreting the content of=\r\n the representation. &nbsp;I&#39;ve never seen an&lt;br&gt;order API that couldn&#39;t be=\r\n represented as HTML; despite any number of&lt;br&gt;variations on this theme (or=\r\n versions within), the media type doesn&#39;t&lt;br&gt;vary between more order APIs o=\r\nn the Web than I can count.&lt;br&gt;&lt;br&gt;REST has no notion of resource &quot;type&quot; le=\r\nt alone of exposing same on the&lt;br&gt;wire, so I&#39;ve never understood why this =\r\nsolution is so prevalent in REST&lt;br&gt;discussions. &nbsp;Just media types, wh=\r\nich are agnostic as to what &quot;type&quot; of&lt;br&gt;resource is being represented (wit=\r\nh rare exceptions as parameters).&lt;br&gt;&lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/bl=\r\nockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;Anything else =\r\nis up to the user-agent to work out. &nbsp;This is actually&lt;br&gt;&lt;/blockquote=\r\n&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;easier fo=\r\nr m2m than h2m; a v1 m2m client should already ignore any&lt;br&gt;&lt;/blockquote&gt;&lt;=\r\n/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;hypertext i=\r\nt doesn&#39;t understand, rolling out v2 can then re-use any&lt;br&gt;&lt;/blockquote&gt;&lt;/=\r\nblockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;non-deprecat=\r\ned bits of the API already present plus the new stuff,&lt;br&gt;&lt;/blockquote&gt;&lt;/bl=\r\nockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;and ignore the=\r\n deprecated stuff. &nbsp;Can&#39;t it?&lt;br&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote=\r\n type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;Not always, at le=\r\nast not in my experience. :) &nbsp;I have found that&lt;br&gt;&lt;/blockquote&gt;&lt;block=\r\nquote type=3D&quot;cite&quot;&gt;while breaking changes don&#39;t happen often, they *do* ha=\r\nppen. &nbsp;Add to&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;this the possi=\r\nbility of different types of API consumers that start&lt;br&gt;&lt;/blockquote&gt;&lt;bloc=\r\nkquote type=3D&quot;cite&quot;&gt;off implementing your APIs the same way, but slowly (o=\r\nr rapidly!)&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;diverge over time. &n=\r\nbsp;In some cases new resources (and thus new URIs)&lt;br&gt;&lt;/blockquote&gt;&lt;blockq=\r\nuote type=3D&quot;cite&quot;&gt;will suffice, but in other cases what we are doing is ve=\r\nry&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;specifically *evolving* the re=\r\nsource representation to accommodate&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;ci=\r\nte&quot;&gt;new requirements.&lt;br&gt;&lt;/blockquote&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;/block=\r\nquote&gt;&lt;br&gt;Then design for graceful degradation (or progressive enhancement)=\r\n using&lt;br&gt;client-side feature detection. &nbsp;Just saying there&#39;s no need =\r\nto swing&lt;br&gt;the conneg hammer to turn this particular screw.&lt;br&gt;&lt;br&gt;-Eric&lt;b=\r\nr&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail=_01144D97-40B7-4B69-8488-767C8349BC60--\r\n\n"}}