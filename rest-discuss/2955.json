{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":110414260,"authorName":"Toivo &quot;Deutsch&quot; Lainevool","from":"&quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;","profile":"tlainevool","replyTo":"SENDER","senderId":"MGRDMfEdyTFylC6gDY6oX5shZv4LAkyxX65ge9aFip6WQ3KqR6KfvWGQt7QiYhsDjpB0qxY7l0c2iEBTQGwoEyN4uQ5KWWVWjfW4iVYlYTQKrufkGjc_zSjjsDsbJEnVKaZ-dg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Another REST vs. SOAP article","postDate":"1038703050","msgId":2955,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNGEwMWMyOThkMSRkNWEyMTAzMCRkZWM0N2M0MkBkZXV0c2NoODEwMD4=","inReplyToHeader":"PDNERTY3NUIzLjYwMTA0MDZAcHJlc2NvZC5uZXQ+"},"prevInTopic":2945,"nextInTopic":2956,"prevInTime":2954,"nextInTime":2956,"topicId":2908,"numMessagesInTopic":50,"msgSnippet":"... in ... REST ... URI. ... a ... I wouldn t stand up for monolithic services, but I will try to defend the SOA approach a little.  (Keep in mind that I m not","rawEmail":"Return-Path: &lt;tlainevool@...&gt;\r\nX-Sender: tlainevool@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 1 Dec 2002 00:40:33 -0000\r\nReceived: (qmail 61595 invoked from network); 1 Dec 2002 00:40:32 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 1 Dec 2002 00:40:32 -0000\r\nReceived: from unknown (HELO mail.ebizhostingsolutions.com) (64.46.100.39)\n  by mta2.grp.scd.yahoo.com with SMTP; 1 Dec 2002 00:40:32 -0000\r\nReceived: (qmail 1780 invoked from network); 1 Dec 2002 00:40:31 -0000\r\nReceived: from unknown (HELO deutsch8100) (66.124.196.222)\n  by server2010.ebizhostingsolutions.com with SMTP; 1 Dec 2002 00:40:31 -0000\r\nTo: &quot;&#39;Paul Prescod&#39;&quot; &lt;paul@...&gt;\r\nCc: &quot;&#39;Mark Baker&#39;&quot; &lt;distobj@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] Another REST vs. SOAP article\r\nDate: Sat, 30 Nov 2002 16:37:30 -0800\r\nMessage-ID: &lt;004a01c298d1$d5a21030$dec47c42@deutsch8100&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook, Build 10.0.2627\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nImportance: Normal\r\nIn-Reply-To: &lt;3DE675B3.6010406@...&gt;\r\nFrom: &quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;\r\nX-Yahoo-Group-Post: member; u=110414260\r\nX-Yahoo-Profile: tlainevool\r\n\r\n&gt; -----Original Message-----\n&gt; From: Paul Prescod, Sent: Thursday, November 28, 2002 12:00 PM\n&gt; \n&gt; Toivo &quot;Deutsch&quot; Lainevool wrote:\n&gt; \n&gt; &gt; OK, I see what you mean now, and agree completely.  There is no way\nin\n&gt; &gt; a typical SOA system to pass references to objects around, while\nREST\n&gt; &gt; is all about passing around individual instances of resources via\nURI.\n&gt; &gt; That is a big difference.\n&gt; \n&gt; I claim this is a big deal because where a service-oriented interface\n&gt; tends to combine a bunch of separate things into one interface, REST\n&gt; tends to push towards very componentized resources.\n&gt; \n&gt; Is anyone brave enough to stand up for monolithic services? ;) Even as\na\n&gt; devil&#39;s advocate?\n&gt; \n&gt;   Paul Prescod\n\nI wouldn&#39;t stand up for monolithic services, but I will try to defend\nthe SOA approach a little.  (Keep in mind that I&#39;m not arguing that one\nof the approaches is &quot;better&quot;, I think both have their appropriate uses.\nTo me there is no clear winner.  When deciding which is better to use in\na particular system you have a lot of context to keep in mind.  I&#39;m just\ntrying to get a better handle on some criteria to help me make this\ndecision.)\n\nOne of the hardest things to do when designing networked systems is\nchoosing the right abstractions (e.g. resources or services) at the\nright level of granularity.  Systems that have abstractions that are too\ncoarse grained end up pushing around a lot of unneeded data across the\nwire.  If the granularity is too fine, too many messages go back and\nforth across the network.\n\nI don&#39;t think service interfaces need to be &quot;monolithic&quot;.  This just\nseems like an issue of picking the right abstractions and granularity.\nTo me it seems like picking the right abstractions and granularity would\nbe more difficult with REST that with services.  This is because\nresources are restricted to the HTTP verbs for interacting with the\noutside world, where with the service interface you are free to make up\nany verbs you want.  So if you had a bank account that you were\nmodeling, with a service interface you could do something like:\n\nService: Account\n\tHas operation: deposit( account_number, amount )\n\tHas operation: withdrawal( account_number, amount )\n\tHas operation: calculateInterest( account_number )\n\nI wouldn&#39;t call this &quot;combining a bunch of separate things&quot;.  I would\nsay this is grouping a set of related operation together in a cohesive\nunit. How would model these same behaviors in a REST system?  Can you\nhave one cohesive unit that model all these behaviors in a way that\nwould be obvious to a user?\n\nIt&#39;s probably because I&#39;ve been using OO for a long time now, and\nhaven&#39;t had nearly as much experience with REST, but it seems easier and\nmore natural to do this the service oriented way.\n\nToivo Lainevool\n(ducking in anticipation of the flames)\n\n\n\n"}}