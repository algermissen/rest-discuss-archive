{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214300837,"authorName":"Jakob Strauch","from":"&quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;","profile":"jakobstrauch","replyTo":"SENDER","senderId":"bFQDgxG34dAV_V5gCV8yaJPuZQkzEQTepkGPoX6KdgpP0uIM5c_eJ8aGEtwThjDl-j5KfFRFv_cPjvcK8kfddXcHF7W7aJMNqzI_520","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Loose coupling - a RESTful myth?","postDate":"1297114264","msgId":17330,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGlpcG9hbytyaTFtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRENTA0QjRBLjYwNzAxMDhAZWxia2xhbmcubmV0Pg=="},"prevInTopic":17329,"nextInTopic":17331,"prevInTime":17329,"nextInTime":17331,"topicId":17322,"numMessagesInTopic":13,"msgSnippet":"Well, there are a lot of interessting arguments. Thanks for that! In the first place, REST services convinced me through the efficiency, clarity,","rawEmail":"Return-Path: &lt;jakob.strauch@...&gt;\r\nX-Sender: jakob.strauch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 15789 invoked from network); 7 Feb 2011 21:31:05 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.sp2.yahoo.com with QMQP; 7 Feb 2011 21:31:05 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Feb 2011 21:31:05 -0000\r\nX-Received: from [69.147.65.172] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 07 Feb 2011 21:31:05 -0000\r\nX-Received: from [98.137.34.184] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 07 Feb 2011 21:31:05 -0000\r\nDate: Mon, 07 Feb 2011 21:31:04 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;iipoao+ri1m@...&gt;\r\nIn-Reply-To: &lt;4D504B4A.6070108@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;\r\nSubject: Re: Loose coupling - a RESTful myth?\r\nX-Yahoo-Group-Post: member; u=214300837; y=H-CFKS1FFHYysiKr62-aVTdoVBCb1IC15awl_vzlqUBSGR36uHIV\r\nX-Yahoo-Profile: jakobstrauch\r\n\r\nWell, there are a lot of interessting arguments. Thanks for that! \n\nIn the =\r\nfirst place, &quot;REST services&quot; convinced me through the efficiency, clarity, =\r\nlightweightness, support of links and the broad connectivity. \n\nPersonally,=\r\n i=B4m fine with a nice HTTP API at the moment, following as much REST prin=\r\nciples as possible (speaking of time and money investment). At the moment t=\r\nhe trade-off of being fully REST-complient is not high enough considering t=\r\nhe investment. But thats for my own (business) scenario, where i control th=\r\ne clients, too.\n\nBy the way, i want to thank all participants in this dissc=\r\nussion group for their valuable postings. I=B4m following this group for so=\r\nme months.\n\n\nCheers,\njakob\n\n--- In rest-discuss@yahoogroups.com, Bob Ferris=\r\n &lt;zazi@...&gt; wrote:\n&gt;\n&gt; Am 05.02.2011 17:26, schrieb Jakob Strauch:\n&gt; &gt;\n&gt; &gt; =\r\n[1] http://nordsc.com/ext/classification_of_http_based_apis.html\n&gt; \n&gt; While=\r\n rereading the referenced classification from above, I stumbled \n&gt; about a =\r\nfew issues:\n&gt; \n&gt; 1. When describing a domain it&#39;s often not a main issue of=\r\n missing media \n&gt; types. I think, one would rather quickly find an appropri=\r\nated generic \n&gt; media type. However, the issue of describing a domain lies =\r\nnot only at \n&gt; the representation and process model level (which is general=\r\nly also \n&gt; independent from the representation level, or?), the description=\r\n of the \n&gt; domain itself is thereby very important - modelling the concepts=\r\n of for \n&gt; instance &#39;user&#39;, &#39;order&#39;, &#39;offer&#39; etc.\n&gt; This is for me exactly =\r\nthe point where Semantic Web knowledge \n&gt; representation languages on top o=\r\nf RDF Model can come into play. So I \n&gt; can still use a generic media type,=\r\n i.e. RDF Model, for realizing a \n&gt; common description. However, serialize =\r\nthese descriptions into specific \n&gt; representation media types, i.e. XHTML+=\r\nRDFa, and thereby maybe also \n&gt; extending the process model (based on a gen=\r\neral description). Layering \n&gt; of media types was already propagated by Roy=\r\n T. Fielding, or?\n&gt; All in all, I think, it depends more on the degree of e=\r\nxisting \n&gt; appropriated Semantic Web ontologies to model (parts of) a domai=\r\nn, \n&gt; rather then on existing media types. While there can (theoretically) =\r\n\n&gt; exist a huge variety of both and such a huge amount would decrease the \n=\r\n&gt; simplicity property in both cases; I nevertheless think, that it is \n&gt; ma=\r\nybe better to have less media types and more (especially reusable) \n&gt; Seman=\r\ntic Web ontologies, rather then an equal high amount of media types.\n&gt; To s=\r\nummarize, I think the application, reutilization and (if needed) \n&gt; creatio=\r\nn of Semantic Web ontologies fit quite well for emphasizing the \n&gt; desired =\r\nproperties that should be reached when implementing the REST \n&gt; architectur=\r\nal style. The costs that have to be invested into good \n&gt; ontology design m=\r\naybe align with the costs of proper media type design.\n&gt; You maybe still ad=\r\ndressed this issue somehow, when saying &quot;media type \n&gt; (and link relation e=\r\ntc.) specifications&quot;. Anyway, I think, it might be \n&gt; good to make this con=\r\ncern a bit more explicit. You might not explicitly \n&gt; propagate the utiliza=\r\ntion of Semantic Web ontologies, but please make \n&gt; aware of the general ex=\r\nisting &#39;description level&#39; (cf. [1]), which (from \n&gt; my point of view) exis=\r\nts already, but is then often more implicit than \n&gt; explicit available.\n&gt; \n=\r\n&gt; 2. I think, fulfilling the hypermedia as the engine of application state =\r\n\n&gt; constraint is maybe still the hardest part. I cannot really imagine that=\r\n \n&gt; &quot;a transition from HTTP-based Type || to REST at a later point in time,=\r\n \n&gt; however, is rather easy&quot;. Furthermore, &quot;turning a HTTP-based Type || AP=\r\nI \n&gt; into a REST API might be as easy as deleting the API documentation&quot; is=\r\n a \n&gt; bit paradox from my point of view. When I would remove the API \n&gt; doc=\r\numentation than this application cannot really be an API any more, \n&gt; or? W=\r\nhen I would like to program against (?) something ( ;) ), I have to \n&gt; know=\r\n how I could do that. For instance a web browser do not really \n&gt; program a=\r\ngainst (?) something.\n&gt; I think the term &#39;REST API&#39; might be a bit inapprop=\r\nriate here (I still \n&gt; doubt that a implementation of service, which is ful=\r\nly REST compatible, \n&gt; is possible). The given examples for REST are not re=\r\nally APIs, or? - \n&gt; AtomPub is a protocol, OpenSearch a specification (coll=\r\nection of media \n&gt; type specifications), &quot;RESTifying Procurement&quot; an approa=\r\nch of a \n&gt; proof-of-concept REST &quot;service&quot;(?) (I couldn&#39;t really figure out=\r\n the \n&gt; current state of that project, however it looks quite interesting).=\r\n \n&gt; Although, the chosen descriptor is still &#39;REST&#39; and not &quot;REST API&quot;. So =\r\n\n&gt; one might conclude that this could be a bit inappropriated \n&gt; classifica=\r\ntion, but the descriptions are explicitly suggesting the \n&gt; application of =\r\nREST principles on the implementation of (Web) services ;)\n&gt; \n&gt; 3. Just a s=\r\nmall issue: better &quot;REST might be the best solution&quot;, rather \n&gt; than &quot;REST =\r\nis the best solution&quot;. I guess, &#39;is&#39; requires a kind of \n&gt; proof, or? Could=\r\n we really provide a complete proof about this? - I \n&gt; currently don&#39;t thin=\r\nk so.\n&gt; \n&gt; \n&gt; That&#39;s all for the moment.\n&gt; \n&gt; Cheers,\n&gt; \n&gt; \n&gt; Bob\n&gt; \n&gt; [1] =\r\n\n&gt; http://infoserviceonto.smiy.org/2010/11/25/on-resources-information-reso=\r\nurces-and-documents/\n&gt;\n\n\n\n"}}