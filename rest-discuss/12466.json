{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":362018624,"authorName":"Jan Vincent Liwanag","from":"Jan Vincent Liwanag &lt;jvliwanag@...&gt;","profile":"jv.liwanag","replyTo":"SENDER","senderId":"iOYHIYk7RAzEB9f-GCUImVjiO7LkxHhXnlDBREDODdqMmtW6e_S9pCL7aiy6MKwgv-FS1iiTvEBk475zW1daXLd1LZGNTC_WZLLNCmFspvs","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Qs on building a good REST client","postDate":"1240019991","msgId":12466,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5RTkzNDE3LjcwNTA4MDZAZ21haWwuY29tPg==","inReplyToHeader":"PDI4ZTI1NzExMDkwNDE3MDg1OXIyMmFmODY4M3ExMDI4ZGU4NTlmNzM5NGI5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGdzOWI4aytlazRrQGVHcm91cHMuY29tPiA8MjhlMjU3MTEwOTA0MTcwODU5cjIyYWY4NjgzcTEwMjhkZTg1OWY3Mzk0YjlAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12452,"nextInTopic":12467,"prevInTime":12465,"nextInTime":12467,"topicId":12442,"numMessagesInTopic":5,"msgSnippet":"... My concern about using XPath though (or traversing objects using . in JSON) is that I can t freely change my representation. Say, if I wanted to change","rawEmail":"Return-Path: &lt;jvliwanag@...&gt;\r\nX-Sender: jvliwanag@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57934 invoked from network); 18 Apr 2009 02:00:01 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.re1.yahoo.com with QMQP; 18 Apr 2009 02:00:01 -0000\r\nX-Received: from unknown (HELO ti-out-0910.google.com) (209.85.142.190)\n  by mta3.grp.sp2.yahoo.com with SMTP; 18 Apr 2009 02:00:01 -0000\r\nX-Received: by ti-out-0910.google.com with SMTP id a20so716276tia.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 17 Apr 2009 18:59:55 -0700 (PDT)\r\nX-Received: by 10.110.42.17 with SMTP id p17mr1957762tip.17.1240019995658;\n        Fri, 17 Apr 2009 18:59:55 -0700 (PDT)\r\nReturn-Path: &lt;jvliwanag@...&gt;\r\nX-Received: from jvlaptop-mbp.local ([222.127.211.160])\n        by mx.google.com with ESMTPS id 14sm2046283tim.27.2009.04.17.18.59.53\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Fri, 17 Apr 2009 18:59:54 -0700 (PDT)\r\nMessage-ID: &lt;49E93417.7050806@...&gt;\r\nDate: Sat, 18 Apr 2009 09:59:51 +0800\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20090223 Thunderbird/3.0b2\r\nMIME-Version: 1.0\r\nTo: Peter Williams &lt;pezra@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;gs9b8k+ek4k@...&gt; &lt;28e257110904170859r22af8683q1028de859f7394b9@...&gt;\r\nIn-Reply-To: &lt;28e257110904170859r22af8683q1028de859f7394b9@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------090705090102090003010405&quot;\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Jan Vincent Liwanag &lt;jvliwanag@...&gt;\r\nSubject: Re: [rest-discuss] Qs on building a good REST client\r\nX-Yahoo-Group-Post: member; u=362018624; y=TSAx31qQMRMy-GfHBlHqb5dY8MZfbIHQ9wb8NaebN68qEYEib18\r\nX-Yahoo-Profile: jv.liwanag\r\n\r\n\r\n--------------090705090102090003010405\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn 4/17/09 11:59 PM, Peter Williams wrote:\n&gt; On Fri, Apr 17, 2009 at 1:31 AM, jv.liwanag&lt;jvliwanag@...&gt;  wrote:\n&gt;    \n&gt;&gt; My concerns are:\n&gt;&gt; 1 - Let as assume another server app consuming a RESTful service. At\n&gt;&gt; start-up, it gets the links useful from the root URL then traverses them as\n&gt;&gt; necessary. Assuming there are elements, such as forms, these are probably\n&gt;&gt; stored as well. However, when the RESTful service evolves, say, changes the\n&gt;&gt; URIs, etc, the consumer&#39;s data would be outdated. How is this best handled?\n&gt;&gt;\n&gt;&gt; I could opt to always start each request with the root URL all the time,\n&gt;&gt; then follow the necessary links all the time. Of course, it&#39;ll be best to\n&gt;&gt; take advantage of caching and/or conditional GETs here.\n&gt;&gt;      \n&gt;\n&gt; Starting at the top and working through the hypermedia is my preferred\n&gt; approach.  With basic caching and conditional requests acceptable\n&gt; performance is quite easy to maintain.\n&gt;\n&gt;    \n&gt;&gt; 2 - What&#39;s a good guideline on what stuff to watch out in the\n&gt;&gt; representations? I wouldn&#39;t want my representations to always adhere to a\n&gt;&gt; specific schema so as not to hinder its evolution. But some things have to\n&gt;&gt; be kept constant for older REST clients on the same service working right?\n&gt;&gt; What&#39;s a good guideline for those? (i.e. a specific XPath will always point\n&gt;&gt; to a specific information regardless of whatever revisions the service goes\n&gt;&gt; through.)\n&gt;&gt;      \n&gt;\n&gt; I have not built any clients that use XML base services, but for\n&gt; clients that use JSON representations i have used a very similar\n&gt; approach.  Basically, creating domain objects by making requests and\n&gt; extracting each individual piece of the data i wanted by name, or\n&gt; path, and storing them in instance variables in the object.  In XML,\n&gt; using XPath would be equivalent so i expect that would work pretty\n&gt; well.\n&gt;    \nMy concern about using XPath though (or traversing objects using &#39;.&#39; in \nJSON) is that I can&#39;t freely change my representation. Say, if I wanted \nto change from\n\n{&#39;first_name&#39;:&#39;jv&#39;, &#39;last_name&#39;:&#39;liwanag&#39;}\n\nto\n\n{&#39;name&#39;:{&#39;first&#39;:&#39;jv&#39;, &#39;last_name&#39;:&#39;liwanag&#39;}}\n\non a system that is already deployed.\n\nI was wondering if there are good guidelines/tools my clients can use so \nthat it can handle that type of change. I was looking recently at WADL \nand it does offer a good solution to changing URLs and request \nparameters. I was wondering if there is a good tool to anticipate \nchanging representations as well.\n\nIn XML, a (possibly bad) idea I can think of is to give the users a \nfixed schema then have stylesheets ready to transform the XML if a \nchange is present. Maybe create a workable standard which defines the \nstylesheets for the resources that changed.\n&gt; --\n&gt; Peter Williams\n&gt; http://barelyenough.org\n&gt;    \nJan Vincent Liwanag\n\r\n--------------090705090102090003010405\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html; charset=ISO-8859-1&quot;\n http-equiv=&quot;Content-Type&quot;&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\nOn 4/17/09 11:59 PM, Peter Williams wrote:\n&lt;blockquote\n cite=&quot;mid:28e257110904170859r22af8683q1028de859f7394b9@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;On Fri, Apr 17, 2009 at 1:31 AM, jv.liwanag &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;mailto:jvliwanag@...&quot;&gt;&lt;jvliwanag@...&gt;&lt;/a&gt; wrote:\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;My concerns are:\n1 - Let as assume another server app consuming a RESTful service. At\nstart-up, it gets the links useful from the root URL then traverses them as\nnecessary. Assuming there are elements, such as forms, these are probably\nstored as well. However, when the RESTful service evolves, say, changes the\nURIs, etc, the consumer&#39;s data would be outdated. How is this best handled?\n\nI could opt to always start each request with the root URL all the time,\nthen follow the necessary links all the time. Of course, it&#39;ll be best to\ntake advantage of caching and/or conditional GETs here.\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nStarting at the top and working through the hypermedia is my preferred\napproach.  With basic caching and conditional requests acceptable\nperformance is quite easy to maintain.\n\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;2 - What&#39;s a good guideline on what stuff to watch out in the\nrepresentations? I wouldn&#39;t want my representations to always adhere to a\nspecific schema so as not to hinder its evolution. But some things have to\nbe kept constant for older REST clients on the same service working right?\nWhat&#39;s a good guideline for those? (i.e. a specific XPath will always point\nto a specific information regardless of whatever revisions the service goes\nthrough.)\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nI have not built any clients that use XML base services, but for\nclients that use JSON representations i have used a very similar\napproach.  Basically, creating domain objects by making requests and\nextracting each individual piece of the data i wanted by name, or\npath, and storing them in instance variables in the object.  In XML,\nusing XPath would be equivalent so i expect that would work pretty\nwell.\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nMy concern about using XPath though (or traversing objects using &#39;.&#39; in\nJSON) is that I can&#39;t freely change my representation. Say, if I wanted\nto change from &lt;br&gt;\n&lt;br&gt;\n{&#39;first_name&#39;:&#39;jv&#39;, &#39;last_name&#39;:&#39;liwanag&#39;}&lt;br&gt;\n&lt;br&gt;\nto&lt;br&gt;\n&lt;br&gt;\n{&#39;name&#39;:{&#39;first&#39;:&#39;jv&#39;, &#39;last_name&#39;:&#39;liwanag&#39;}}&lt;br&gt;\n&lt;br&gt;\non a system that is already deployed.&lt;br&gt;\n&lt;br&gt;\nI was wondering if there are good guidelines/tools my clients can use\nso that it can handle that type of change. I was looking recently at\nWADL and it does offer a good solution to changing URLs and request\nparameters. I was wondering if there is a good tool to anticipate\nchanging representations as well.&lt;br&gt;\n&lt;br&gt;\nIn XML, a (possibly bad) idea I can think of is to give the users a\nfixed schema then have stylesheets ready to transform the XML if a\nchange is present. Maybe create a workable standard which defines the\nstylesheets for the resources that changed.&lt;br&gt;\n&lt;blockquote\n cite=&quot;mid:28e257110904170859r22af8683q1028de859f7394b9@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;\n--\nPeter Williams\n&lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://barelyenough.org&quot;&gt;http://barelyenough.org&lt;/a&gt;\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nJan Vincent Liwanag&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------090705090102090003010405--\r\n\n"}}