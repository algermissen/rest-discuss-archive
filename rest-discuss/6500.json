{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":43700214,"authorName":"Jonas Bengtsson","from":"Jonas Bengtsson &lt;jonas.b@...&gt;","profile":"caelumse","replyTo":"SENDER","senderId":"gIzn5NqJLdYTtwTqAVRznRYBj2C9LVY26i36GSZ0rMcuTjk3ZfxTzJmBXp-FhWmquClNEODbQYnoEJAhMY67eFlkId7ct0gA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST vs COM","postDate":"1156286282","msgId":6500,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0RUI4NzRBLjkwNjAyMDJAaG9tZS5zZT4=","inReplyToHeader":"PDQ0RUFDQzFCLjEwOTA3QGhhY2tjcmFmdC5uZXQ+","referencesHeader":"PDQ0RUEzNDdBLjcwNTAyMDNAaG9tZS5zZT4gPDQ0RUFDQzFCLjEwOTA3QGhhY2tjcmFmdC5uZXQ+"},"prevInTopic":6499,"nextInTopic":6501,"prevInTime":6499,"nextInTime":6501,"topicId":6493,"numMessagesInTopic":19,"msgSnippet":"... Is there any RESTful system out there that attempts this that you re aware of? ... I guess you re right. ... No I haven t. I thought that tools handled it","rawEmail":"Return-Path: &lt;jonas.b@...&gt;\r\nX-Sender: jonas.b@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 600 invoked from network); 22 Aug 2006 22:38:14 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m38.grp.scd.yahoo.com with QMQP; 22 Aug 2006 22:38:14 -0000\r\nReceived: from unknown (HELO lmfilto03.st1.spray.net) (212.78.202.217)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Aug 2006 22:38:14 -0000\r\nReceived: from lmfilto03.st1.spray.net (localhost [127.0.0.1])\n\tby lmfilto03-10027.st1.spray.net (Postfix) with ESMTP\n\tid A77074EF714; Tue, 22 Aug 2006 22:38:09 +0000 (GMT)\r\nReceived: from localhost (localhost [127.0.0.1])\n\tby lmfilto03-10025.st1.spray.net (Postfix) with ESMTP\n\tid 7DF314EF39D; Tue, 22 Aug 2006 22:38:09 +0000 (GMT)\r\nReceived: from [127.0.0.1] (cpc1-lewi1-0-0-cust527.bmly.cable.ntl.com [82.23.158.16])\n\tby lmsmtp02.st1.spray.net (Postfix) with ESMTP id 03F0590;\n\tTue, 22 Aug 2006 22:38:07 +0000 (GMT)\r\nMessage-ID: &lt;44EB874A.9060202@...&gt;\r\nDate: Tue, 22 Aug 2006 23:38:02 +0100\r\nUser-Agent: Thunderbird 1.5.0.5 (Windows/20060719)\r\nMIME-Version: 1.0\r\nTo: Jon Hanna &lt;jon@...&gt;, rest-discuss@yahoogroups.com\r\nReferences: &lt;44EA347A.7050203@...&gt; &lt;44EACC1B.10907@...&gt;\r\nIn-Reply-To: &lt;44EACC1B.10907@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Antivirus: avast! (VPS 0634-0, 2006-08-21), Outbound message\r\nX-Antivirus-Status: Clean\r\nX-Lycos-AS: 0.00\r\nX-Lycos-AV: OK\r\nX-Lycos-IS: NO\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jonas Bengtsson &lt;jonas.b@...&gt;\r\nSubject: Re: [rest-discuss] REST vs COM\r\nX-Yahoo-Group-Post: member; u=43700214; y=WcZCHIYvZpiMbmp0jEA7rA8GKYflfsI5PnLgQwEycg_Ff64\r\nX-Yahoo-Profile: caelumse\r\n\r\nJon Hanna wrote:\n&gt; COM passes &quot;dead&quot; representations around. COM hides the &quot;deadness&quot;, REST \n&gt; doesn&#39;t, though a RESTful system can.\n\nIs there any RESTful system out there that attempts this that you&#39;re \naware of?\n\n&gt; Experience shows that hiding the reality of the network leads to poor \n&gt; decisions, but also that at some point you really do need to hide it \n&gt; some of the time to concentrate on can.\n\nI guess you&#39;re right.\n\n&gt; Have you ever hand-hacked a COM object&#39;s marshalling code? Even just \n&gt; slighly hand-hacking the VTable like one had to do in VB6 to get certain \n&gt; things to happen is pretty hairy (even before considering that VB6 \n&gt; really wasn&#39;t designed to let you do that). REST is way easier.\n\nNo I haven&#39;t. I thought that tools handled it for you, perhaps that you \nhad to describe your COM objects in some IDL at most.\n\n&gt; Again, COM is easy because there are toolkits that help you deal with \n&gt; them, but you&#39;re comparing REST with COM + toolkit.\n\nI guess I am. But that&#39;s the developer&#39;s experience of the two \narchitectures.\n\n&gt; Reference counting in COM is pretty easy when it&#39;s handled for you, but \n&gt; yes once you have to deal with it yourself it&#39;s still pretty easy, but a \n&gt; nightmare to debug if you slipped up. Versioning is tricky too (though \n&gt; IMO, Microsoft have gone from understating the issue - when COM was \n&gt; their current baby - to overstating it - now that .NET is).\n\nThe experience I have of manual reference counting in non-COM contexts \nis that it requires much discipline. And it&#39;s hard to notice when you&#39;re \nnot releasing resources.\n\nHow is versioning normally handled in a RESTful system? \nhttps://api.del.icio.us/v1/posts/update like del.icio.us?\n\n&gt; In COM you get distribution, marshalling, serialisation and a few other \n&gt; things. In REST you get distribution - again the comparison isn&#39;t quite \n&gt; right.\n\nSo that means that you as a developer has to do the marshalling \nyourself, right? That seems to put require more work from the developer, \nat least in static languages.\n\n&gt; Serialisation is hard to compare (XML has some advantages over binary \n&gt; formats, and some disadvantages). That the data is in two locations is a \n&gt; misleading point - this is also happening with COM (some data may not be \n&gt; sent until needed, but you can do that with REST too).\n\nTrue. I&#39;m probably mix COM intra process boundary (where you can share \nthe data) and inter process boundary (where you cannot share the data). \nI&#39;ve tried to read up on COM but it&#39;s still unclear to me exactly how it \nworks.\n\n&gt; Further a binary format can still be used with REST. I don&#39;t think those \n&gt; who favour REST would be often inclined towards binary formats for \n&gt; various reasons, but it&#39;s not an inherent part of the system - the \n&gt; serialisation of a COM object that referred to other objects by URIs \n&gt; (hence keeping hypertext, of a sort, as the engine) could be transferred \n&gt; by a RESTful protocol.\n\nWhat I was thinking is that in COM you know in advance the exact format \nof the object. That means you can pack the data quite compactly. In REST \nyou don&#39;t know the exact format of the representation so you need to \nsend meta data describing the structure. I guess that you could use \nrepresentations where the format is defined as a byte stream without any \nmeta data, but that would make it harder to use.\n\n&gt; Where REST does offer some gains (sometimes massive gains) is in its \n&gt; caching model, which in some cases (i.e. when it is possible to tell \n&gt; when a resource was last meaningfully changed, possible to know it would \n&gt; never change, possible to know it won&#39;t change until a certain date, \n&gt; possible to know changes in the next x minutes won&#39;t be crucial to \n&gt; operations, etc.) offers huge reductions on network usage.\n\nGood point!\n\n&gt; Yes, any well-built (that is, works well with the web&#39;s architecture, \n&gt; rather than fighting it) Classic ASP application is a REST application \n&gt; built on top of a COM application (Classic ASP used COM internally, and \n&gt; most used COM for e.g. data-access). I&#39;m pretty sure this isn&#39;t what you \n&gt; mean though.\n&gt; \n&gt; You can also (I have done so) build a COM client for RESTfully \n&gt; transmitted data that a COM (Classic ASP again) web application provides.\n\nI meant a REST layer on top of a COM solution that automatically \ntranslated REST requests and responses into COM without any custom code \nfor each COM object.\n\nCheers,\n  Jonas\n\n\n"}}