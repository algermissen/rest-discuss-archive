{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":5226678,"authorName":"Jason Diamond","from":"&quot;Jason Diamond&quot; &lt;jason@...&gt;","profile":"injektilo12","replyTo":"SENDER","senderId":"BdPIZDZSyN7gmxsCEyBgOYcVoo9HqTACj28t9dIM92HN0C1bPzAm8xFYr57n0BYYa1jQ2cuVh8a-stvJK6OL61nYL7xBNIo8CW_5XQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Meerkat API in WRDL","postDate":"1014517083","msgId":780,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMjEwMWMxYmNkOSQ3ZGJhYmUwMCQ2NDAxYThjMEBpbmpla3RpbG8+","referencesHeader":"PDNDNzgwMjQwLkY4NTZGRjY4QHByZXNjb2QubmV0PiA8MDBiYzAxYzFiY2M3JDNkYWY1OGEwJDY0MDFhOGMwQGluamVrdGlsbz4gPDNDNzg0MUZFLjlCRDRGODcxQHByZXNjb2QubmV0Pg=="},"prevInTopic":779,"nextInTopic":782,"prevInTime":779,"nextInTime":781,"topicId":776,"numMessagesInTopic":8,"msgSnippet":"Hi. ... Don t add it for me. I was only asking out of curiosity. If you restrict the scope of WRDL to XML-based representations (which multi-part/form-data is ","rawEmail":"Return-Path: &lt;jason@...&gt;\r\nX-Sender: jason@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 24 Feb 2002 02:17:46 -0000\r\nReceived: (qmail 3331 invoked from network); 24 Feb 2002 02:17:46 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m12.grp.snv.yahoo.com with QMQP; 24 Feb 2002 02:17:46 -0000\r\nReceived: from unknown (HELO epervier.cqhost.net) (216.167.57.201)\n  by mta2.grp.snv.yahoo.com with SMTP; 24 Feb 2002 02:17:46 -0000\r\nReceived: from injektilo (ca-crlsbd-u2-c5b-352.crlsca.adelphia.net [24.55.53.96])\n\tby virtualepervier.cqhost.net (8.10.2/8.10.2) with SMTP id g1O2HgE02253\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 23 Feb 2002 21:17:43 -0500\r\nMessage-ID: &lt;002101c1bcd9$7dbabe00$6401a8c0@injektilo&gt;\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;3C780240.F856FF68@...&gt; &lt;00bc01c1bcc7$3daf58a0$6401a8c0@injektilo&gt; &lt;3C7841FE.9BD4F871@...&gt;\r\nSubject: Re: [rest-discuss] Meerkat API in WRDL\r\nDate: Sat, 23 Feb 2002 18:18:03 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Jason Diamond&quot; &lt;jason@...&gt;\r\nX-Yahoo-Group-Post: member; u=5226678\r\nX-Yahoo-Profile: injektilo12\r\n\r\nHi.\n\n&gt; I see. On the one hand it seems like once I get into helping people to\n&gt; define the structure of the body I&#39;m getting into a slippery slope. Next\n&gt; I&#39;ll be embedding schemas in WRDL. On the other hand I can see how it\n&gt; would be useful. I guess I&#39;ll add that. Should I call it\n&gt; &lt;form-parameter&gt;?\n\nDon&#39;t add it for me. I was only asking out of curiosity. If you restrict the\nscope of WRDL to XML-based representations (which multi-part/form-data is\nnot) then I think it will be a much simpler and manageable spec.\n\n&gt; &gt; ... XSLT&#39;s match attribute defines a pattern that (usually) gets checked\n&gt; &gt; as the processor recurses down the entire document. You could just as\neasily\n&gt; &gt; extract the same information, albeit more efficiently, if you used\nnormal\n&gt; &gt; XPath expressions.\n&gt;\n&gt; I think the efficiency is the same because any smart processor could\n&gt; convert one form to the other.\n\nThe processor would have to have detailed knowledge of the representation\ntype. How would it know to only look at the children of the document element\nfor xsl:include elements (that&#39;s the only place they can appear)?\n\nHmm. Now that I think about it, patterns like /*/xsl:include could easily be\noptimized. I&#39;m with you now.\n\n&gt; &gt;...\n&gt; &gt; If you still want to scan the entire document you could always use an\nXPath\n&gt; &gt; like &quot;//foo&quot;.\n&gt;\n&gt; I just feel like that will be the most common case so it should be the\n&gt; default. If you have any other arguments for select I&#39;m open to them,\n&gt; though. I don&#39;t feel strongly about it.\n\nI take back what I said. I was trying to optimize prematurely. Using match\nis somewhat akin to XSLT&#39;s keys.\n\nHmm. Now that I&#39;ve said that, I think I really like it. In XSLT, you specify\nwhat pattern you should look for (with a match attribute) and what value\n(relative to each node that matched the pattern) is the &quot;key&quot; or name for\nthat node (with a use attribute).\n\nBy following that example, WRDL can have named sets of references where the\nnames are stored in the representations so they don&#39;t have to be hardcoded\nin the WRDL file!\n\n&gt; &gt; ... Won&#39;t the WRDL-generated proxy want to know\n&gt; &gt; so that it could validate the representation? It seems like things would\nbe\n&gt; &gt; easier all around if the first representationType that passed its XPath\ntest\n&gt; &gt; was the &quot;winner&quot;.\n&gt;\n&gt; Maybe that&#39;s simplest. XSLT throws an error. I&#39;ll have to think about it\n&gt; more.\n\nAre you talking about what XSLT does when matching templates? The spec says\nthat a processor can throw an error when multiple templates match a pattern\nwith the same priority _or_ it can choose the last template that appears in\nthe stylesheet.\n\nI think it&#39;d be simplest to treat testing for multiple representation types\nlike a xsl:choose/xsl:when. The first test that results in true gets\nevaluated.\n\n&gt; &gt; Could you expound a little more on &quot;the built-in support for navigation\n&gt; &gt; through hyperlinks&quot;? I don&#39;t follow that. How is that used in the API?\n&gt;\n&gt; &quot;CustomerResource cust = por.references.customer()&quot;\n&gt;\n&gt; What&#39;s happened there is that there was some XML that looked like\n&gt; &lt;purchaseOrder&gt;\n&gt;   &lt;customerURI href=&quot;http://....&quot;/&gt; or something like that.\n&gt; ...\n&gt; &lt;/purchaseOrder&gt;\n&gt;\n&gt; Then there was a reference with the name &quot;customer&quot; that matched\n&gt; //customerURI/@href. And the referent was declared to be of type\n&gt; CustomerResource. So you navigated from the purchase order to the\n&gt; customer. And then you get a representation of the customer like this:\n&gt;\n&gt; DOMDocument cust = por.GET()\n\nSo references are always URIs? Now I get it!\n\n&gt; &gt; It seems odd that representationType elements are contained by a\n&gt; &gt; resourceTypes element.\n&gt;\n&gt; How about just &quot;types&quot;.\n\nI like it. And if you decide to put your elements in a namespace then it\ncould be wrdl:types.\n\nThanks,\nJason\n\n\n\n"}}