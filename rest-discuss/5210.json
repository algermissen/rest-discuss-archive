{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159556043,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jalgermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"npTwCUsfJjAx3SH2OqAtloK4aXzsLIGeVcxAIlK3VlztbnEG8XlW3KEHXs8nc8YtmeORaDv-Wn0rCnQ36wBF2jVwB-X0vChDdHr_l8jSJlOpIQHLwhM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Principles for designing RESTful systems to back-up choices?","postDate":"1125951529","msgId":5210,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEVFMjEzQjQ5LTc4NUItNEVGMS1BRTA0LUVEQzRFRDhGMUMxQUB0b3BpY21hcHBpbmcuY29tPg==","inReplyToHeader":"PDExMjU1ODQxMjIuMTkwMzEuMjQxOTY1MTYwQHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4=","referencesHeader":"PEJBRDY5MzRFLTM0NjQtNDg3Ny04QzU0LUYxNzJCRTBENUVGRUB0b3BpY21hcHBpbmcuY29tPiA8MTEyNTUxMzA3MS40ODY4LjI0MTg5OTcwNEB3ZWJtYWlsLm1lc3NhZ2luZ2VuZ2luZS5jb20+IDw4MUIxN0M5My0yRjdELTREN0QtQjRBRi03NkIxNDMyQUM2MzlAdG9waWNtYXBwaW5nLmNvbT4gPDExMjU1ODQxMjIuMTkwMzEuMjQxOTY1MTYwQHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4="},"prevInTopic":5202,"nextInTopic":0,"prevInTime":5209,"nextInTime":5211,"topicId":5196,"numMessagesInTopic":8,"msgSnippet":"... Ok, I understand you now. Good idea (though my szenario is more complex and will definitely require manual additions for service checks (Nagios term). ","rawEmail":"Return-Path: &lt;jalgermissen@...&gt;\r\nX-Sender: jalgermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 29644 invoked from network); 5 Sep 2005 20:18:52 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m7.grp.scd.yahoo.com with QMQP; 5 Sep 2005 20:18:52 -0000\r\nReceived: from unknown (HELO moutng.kundenserver.de) (212.227.126.183)\n  by mta6.grp.scd.yahoo.com with SMTP; 5 Sep 2005 20:18:51 -0000\r\nReceived: from d055100.adsl.hansenet.de [80.171.55.100] (helo=[10.0.1.2])\n\tby mrelayeu.kundenserver.de with ESMTP (Nemesis),\n\tid 0MKwpI-1ECNQY1b3Q-0002E8; Mon, 05 Sep 2005 22:18:50 +0200\r\nIn-Reply-To: &lt;1125584122.19031.241965160@...&gt;\r\nReferences: &lt;BAD6934E-3464-4877-8C54-F172BE0D5EFE@...&gt; &lt;1125513071.4868.241899704@...&gt; &lt;81B17C93-2F7D-4D7D-B4AF-76B1432AC639@...&gt; &lt;1125584122.19031.241965160@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v734)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;EE213B49-785B-4EF1-AE04-EDC4ED8F1C1A@...&gt;\r\nCc: &quot;rest discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Mon, 5 Sep 2005 22:18:49 +0200\r\nTo: Vincent D Murphy &lt;vdm@...&gt;\r\nX-Mailer: Apple Mail (2.734)\r\nX-Provags-ID: kundenserver.de abuse@... login:9fd5cd4d1b290f5c8d8bf21248da35c6\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Jan Algermissen &lt;jalgermissen@...&gt;\r\nSubject: Re: [rest-discuss] Principles for designing RESTful systems to back-up choices?\r\nX-Yahoo-Group-Post: member; u=159556043; y=tre4G7QkV7I1uEoO-i74GsYyWP0KErYUVHmDGVsOQZAGSbCQLjSlcRSy\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Sep 1, 2005, at 4:15 PM, Vincent D Murphy wrote:\n&gt;\n&gt; Shouldn&#39;t those manual additions be in the host database? Imagine\n&gt; a host database which can be exposed as a http server AND as a\n&gt; DHCP server. Two different processes, which speak the different\n&gt; protocols, but share the underlying state.\n\nOk, I understand you now. Good idea (though my szenario is more\ncomplex and will definitely require manual additions for service\nchecks (Nagios term).\n\nAnd...the IP numbers of the hosts are determined by scripts running\non the hosts and POSTed to the host database.\n\nBut conceptually I like your idea of letting the two servers share\nthe same state.\n\n&gt;\n&gt; Is there a need to explicitly repeat this state in the monitoring\n&gt; process? Surely it can download a copy on demand.\n&gt;\n\nOn startup, yes. That would be fine I think.\n\n&gt;\n&gt;&gt; - nagios just needs that file and there is likely no chance to  \n&gt;&gt; install\n&gt;&gt;    a modified (with REST interface) nagios\n&gt;&gt;\n&gt;\n&gt; This reason has little to do with the architecture you know, and is  \n&gt; more\n&gt; of an design or implementation detail.\n&gt;\n&gt; That said, you could have a startup script for nagios, which GETs the\n&gt; host database and generates a config file from it, and then starts\n&gt; nagios.\n&gt; Perhaps this script could run on HUP/restart as well. This could be\n&gt; supplemented with a trigger mechanism which sends nagios a SIGHUP on\n&gt; updates to the host database.\n\nYes, that is sort of what I was thinking (better than touching Nagios  \nitself).\nAnd yes - it is an implementation detail as long as we think &#39;GET&#39;.\n\n&gt;\n&gt;\n&gt;&gt;&gt; I have imagined doing this with a DHCP server and nagios or similar.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; You mean adding a REST interface?\n&gt;&gt;\n&gt;&gt; And....what role does the DHCP server play? (sorry to be  \n&gt;&gt; slow...but this\n&gt;&gt; sounds interesting)\n&gt;&gt;\n&gt;\n&gt; I imagine the network as having abstract elements. I mean abstract in\n&gt; the\n&gt; sense that what application protocol they use is not relevant. So  \n&gt; rather\n&gt; than a DHCP server, you have a &#39;host database&#39; which manages all the\n&gt; relevant\n&gt; state. If you want to modify or read the state you can use a HTTP\n&gt; interface,\n&gt; a host can configure itself from the same database using DHCP or BOOTP\n&gt; or\n&gt; whatever. In effect DHCP is a special-purpose/legacy &#39;read&#39;  \n&gt; application\n&gt; protocol. Of course it works with layer 2 (broadcast) addresses, so it\n&gt; has\n&gt; its place alongside HTTP. The important thing is how you manage the\n&gt; state.\n\nI like &#39;managing the state&#39; wrt network configurations. Nice!\n\n&gt; If its in one place, other processes can use it, such as:\n&gt;\n&gt; - A logging process, like syslog can be just a HTTP server that gets\n&gt; PUTs\n&gt;   or POSTs from other elements on the network, perhaps after  \n&gt; subscribing\n&gt;   to\n&gt;   them.\n&gt;\n&gt; - A monitoring/watchdog process, like nagios, could just do GETs of\n&gt; different\n&gt;   URIs if they were exposed on the elements it is interested in. For\n&gt;   example\n&gt;   UNIX/windows machines could expose http://whatever/interfaces, which\n&gt;   is the\n&gt;   equivalent of the output of ifconfig. Same for routing tables,\n&gt;   firewall rules\n&gt;   etc.\n\nYes, I see. OTH, in (my current) reality there would not be any  \nchance of doing\nthis to most of the machines.\n\n&gt;\n&gt; - Now imagine exposing these same resources as PUTable. Now this is\n&gt; starting to\n&gt;   smell like SNMP. Rather than\n&gt;\n&gt; ssh whatever\n&gt; ifconfig eth0 up\n&gt;\n&gt;   or the SNMP way, you do\n&gt;\n&gt; PUT http://whatever/interfaces/eth0/status\n&gt;\n&gt; up\n&gt;\n&gt; Maybe we could start a wiki and start brainstorming other ideas if you\n&gt; like\n&gt; where this is going.\n\nWould like to do that (or at least join) but I cannot promise any  \nsignificant\namount of time from my side. Perhaps a REST Wiki page  \n(&#39;RESTfulNetworkManagement&#39;\nor so) would be a good place to start?\n&gt;\n&gt;\n&gt;&gt;&gt; It would be nice if all networking hardware and software was exposed\n&gt;&gt;&gt; as resources over HTTP with RDF representations.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; Yes, it would. OTH, I am working in an environment where sometimes\n&gt;&gt; all you\n&gt;&gt; have is bash (do not even think of an HTTP server) and no chance to\n&gt;&gt; install\n&gt;&gt; any libraries that are not already on the hosts.\n&gt;&gt;\n&gt;\n&gt; Most machines have perl.\n\nYak...not in my world. Some only have a shell and some only have Perl  \n4 and forget about\ninstalling additional Perl libs anyhow. (I think this is interesting  \nbecause\nit shows that you cannot simply assume the availability of HTTP libs  \nand instead\nmight have to code something yourself.)\n\n&gt; HTTP::Daemon should be enough to get started.\n&gt; In my experience you will end up exposing the resources anyway,  \n&gt; through\n&gt; ad-hoc ssh tunnels or whatever, so might as well have a little bit of\n&gt; structure in there from the beginning.\n&gt;\n&gt;\n&gt;&gt; Hell...I am even facing the need to sort of &#39;tunnel&#39; HTTP through\n&gt;&gt; email+someone\n&gt;&gt; using a floppy to get data from one network to the other due to\n&gt;&gt; restrictive\n&gt;&gt; policies. (not sure whether this is doable at all with clever  \n&gt;&gt; caching).\n&gt;&gt;\n&gt;\n&gt; This may be more difficult than normal HTTP but not impossible.  \n&gt; Even if\n&gt; you are using a sneakernet, you are still doing\n&gt; REpresentational-State-Transfer.\n&gt; Remember, you can use the REST style to guide your choices.\n&gt;\nYes!\n\n&gt; RFC822 bodies, or files on a filesystem are just as much a\n&gt; representation\n&gt; as the entity body of a HTTP message. Sometimes its tougher to link  \n&gt; them\n&gt; with their URIs or metadata though (mail messages have headers, files\n&gt; can be\n&gt; tar&#39;d with their metadata).\n\nGood thoughts and I am still digesting, thanks.\n\nJan\n\n\n\n&gt;\n&gt;\n&gt; ------------------------ Yahoo! Groups Sponsor -------------------- \n&gt; ~--&gt;\n&gt; Most low income households are not online. Help bridge the digital  \n&gt; divide today!\n&gt; http://us.click.yahoo.com/cd_AJB/QnQLAA/TtwFAA/W6uqlB/TM\n&gt; -------------------------------------------------------------------- \n&gt; ~-&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n________________________________________________________________________ \n_______________\nJan Algermissen, Consultant & Programmer                         \nhttp://jalgermissen.com\nTugboat Consulting, &#39;Applying Web technology to enterprise IT&#39;   \nhttp://www.tugboat.de\n\n\n\n\n\n"}}