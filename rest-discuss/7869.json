{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic James Ferrier","from":"Nic James Ferrier &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"mlOmy7HCPA9u3Ki4ZxEDPbWcu6YBpWwhD1KkoBkd4lBZBKunGLzeS39kHsg2qVAcDmFlKOikPwlR-9FjlL41AvmQePml3X5UI9gwiVJuLlvviPTqm77XPw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Sun proposes to apply Web service standardization  principles to REST","postDate":"1171534855","msgId":7869,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3YnFqdjNlbnMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","inReplyToHeader":"PDA1YzUwMWM3NTBjNCQ3NmY4YWZkMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+IChNaWtlIFNjaGlua2VsJ3MgbWVzc2FnZSBvZiAiVGh1XCwgMTUgRmViIDIwMDcgMDBcOjQ1XDoxMiAtMDUwMCIp","referencesHeader":"PDQ1RDMyMzE5LjQwNTA2MDNAbWV0YWxhYi51bmMuZWR1Pgk8N0IzNTlGMjgtMEJEMy00ODRGLThCMzgtQzk3QTM0RDdDOEY0QHdoYXRmZXR0bGUuY29tPgk8ODc2NGE0bzA2cC5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw0NUQzOTlCQi40MDEwMDA1QGRlaG9yYS5uZXQ+CTw4N2s1eWsydHc0LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDQ1RDNBMzQwLjgwMzA0MDZAZGVob3JhLm5ldD4JPDg3aGN0bzJyc2IuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPgk8MDVjNTAxYzc1MGM0JDc2ZjhhZmQwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4="},"prevInTopic":7868,"nextInTopic":7870,"prevInTime":7868,"nextInTime":7870,"topicId":7830,"numMessagesInTopic":53,"msgSnippet":"... It s very complex and not as configurable as it should be. I have been doing something interesting with SSL lately and was using Python. Python s default","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 37699 invoked from network); 15 Feb 2007 10:27:35 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m43.grp.scd.yahoo.com with QMQP; 15 Feb 2007 10:27:35 -0000\r\nReceived: from unknown (HELO owls-house.tapsellferrier.co.uk) (81.187.188.218)\n  by mta10.grp.scd.yahoo.com with SMTP; 15 Feb 2007 10:27:35 -0000\r\nReceived: from nicferrier.tapsellferrier.co.uk ([172.31.50.1] helo=localhost)\n\tby owls-house.tapsellferrier.co.uk with esmtp (Exim 4.60 #1 (Debian))\n\tid 1HHdkG-0006SB-MT; Thu, 15 Feb 2007 10:21:44 +0000\r\nReceived: from nferrier by localhost with local (Exim 4.50)\n\tid 1HHdjT-0003pt-8F; Thu, 15 Feb 2007 10:20:55 +0000\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: &quot;&#39;REST Discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;45D32319.4050603@...&gt;\n\t&lt;7B359F28-0BD3-484F-8B38-C97A34D7C8F4@...&gt;\n\t&lt;8764a4o06p.fsf@...&gt; &lt;45D399BB.4010005@...&gt;\n\t&lt;87k5yk2tw4.fsf@...&gt; &lt;45D3A340.8030406@...&gt;\n\t&lt;87hcto2rsb.fsf@...&gt;\n\t&lt;05c501c750c4$76f8afd0$0702a8c0@...&gt;\r\nDate: Thu, 15 Feb 2007 10:20:55 +0000\r\nIn-Reply-To: &lt;05c501c750c4$76f8afd0$0702a8c0@...&gt; (Mike Schinkel&#39;s message of &quot;Thu&#92;, 15 Feb 2007 00&#92;:45&#92;:12 -0500&quot;)\r\nMessage-ID: &lt;87bqjv3ens.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Nic James Ferrier &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Sun proposes to apply Web service standardization  principles to REST\r\nX-Yahoo-Group-Post: member; u=3702469; y=RBCSVTu5erMHcYB-pgpgSdzBf--sVrC6ENrgPFtisBRwJHCzwMbQgEoK3wbYPgQsr4o\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\n&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt; writes:\n\n&gt; Nic James Ferrier wrote:\n&gt;&gt; urllib2 comes with python, a language that supposedly\n&gt;&gt; gets the web. And urllib2 really sucks.\n&gt;\n&gt; What&#39;s wrong with it? \n\nIt&#39;s very complex and not as configurable as it should be.\n\nI have been doing something interesting with SSL lately and was using\nPython. Python&#39;s default socket implementation is broken for client\ncertificates (it assumes some mad defaults). Consequently urllib2 is\nbroken as well.\n\nAnd here is what I had to do to get a working urllib2:\n\n  # HTTPS client based on OpenSSL\n  import urllib2\n  import httplib\n  import socket\n  import OpenSSL\n  import traceback\n\n\n  class MyFakeSocket(httplib.FakeSocket):\n      def send(self, *args):\n          return self._ssl.send(*args)\n\n      def sendall(self, *args):\n          return self._ssl.sendall(*args)\n\n      def recv(self, *args):\n          return self._ssl.recv(*args)\n\n  class MyHTTPSConnection(httplib.HTTPConnection):\n      &quot;This class allows communication via SSL.&quot;\n\n      default_port = httplib.HTTPS_PORT\n\n      def __init__(self, host, port=None):\n          httplib.HTTPConnection.__init__(self, host, port)\n\n      def connect(self):\n          &quot;Connect to a host on a given (SSL) port.&quot;\n          sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n          sock.connect((self.host, self.port))\n          ctx = OpenSSL.SSL.Context(OpenSSL.SSL.SSLv3_METHOD)\n          ssl = OpenSSL.SSL.Connection(ctx, sock)\n          ssl.connect_ex((self.host, self.port))\n          self.sock = MyFakeSocket(sock, ssl)\n\n\n  class MyHTTPSHandler(urllib2.HTTPSHandler):\n      def https_open(self, req):\n          return self.do_open(MyHTTPSConnection, req)\n\n\n  def init():\n      try:\n          https_handler = MyHTTPSHandler()\n          od = urllib2.build_opener(https_handler)\n          urllib2.install_opener(od)\n      except Exception, e:\n          traceback.print_tb(sys.exc_info()[2])\n          print str(e)\n\n\nUnfortunately, in order to find out how to do that I had to read\nthrough the code. I&#39;ll blog this somewhere soon so that the python\nuniverse is improved a little bit but I think I&#39;d advise using the\nkitkeeper library if you&#39;re doing any http hacking.\n\n\n&gt; (he asks after just making the decision to focus the\n&gt; vast majority of his next language learning time on python...)\n\nI&#39;d applaud that. Python has some really nice points (and some really\nbad points: like no declaration of variables). But it&#39;s HTTP client\nreally sucks.\n\n-- \nNic Ferrier\nhttp://www.tapsellferrier.co.uk   for all your tapsell ferrier needs\n\n"}}