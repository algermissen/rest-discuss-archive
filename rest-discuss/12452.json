{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"menWNZMgQTGD7mcdTENcH2oVYZCijwzS1XhhkW0Ar_58OWxgCnFH0zlFRmeM4lG_ktvjjX5sDUK0J9wL0Ns1mW8_EFxaWEdksL1bxG0R","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Qs on building a good REST client","postDate":"1239983962","msgId":12452,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMDkwNDE3MDg1OXIyMmFmODY4M3ExMDI4ZGU4NTlmNzM5NGI5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGdzOWI4aytlazRrQGVHcm91cHMuY29tPg==","referencesHeader":"PGdzOWI4aytlazRrQGVHcm91cHMuY29tPg=="},"prevInTopic":12442,"nextInTopic":12466,"prevInTime":12451,"nextInTime":12453,"topicId":12442,"numMessagesInTopic":5,"msgSnippet":"... Starting at the top and working through the hypermedia is my preferred approach.  With basic caching and conditional requests acceptable performance is","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11579 invoked from network); 17 Apr 2009 16:00:46 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m8.grp.re1.yahoo.com with QMQP; 17 Apr 2009 16:00:46 -0000\r\nX-Received: from unknown (HELO mail-qy0-f131.google.com) (209.85.221.131)\n  by mta1.grp.re1.yahoo.com with SMTP; 17 Apr 2009 16:00:45 -0000\r\nX-Received: by qyk37 with SMTP id 37so3154148qyk.28\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 17 Apr 2009 08:59:38 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.60.140 with SMTP id p12mr3315943qah.108.1239983962822; \n\tFri, 17 Apr 2009 08:59:22 -0700 (PDT)\r\nIn-Reply-To: &lt;gs9b8k+ek4k@...&gt;\r\nReferences: &lt;gs9b8k+ek4k@...&gt;\r\nDate: Fri, 17 Apr 2009 09:59:22 -0600\r\nMessage-ID: &lt;28e257110904170859r22af8683q1028de859f7394b9@...&gt;\r\nTo: &quot;jv.liwanag&quot; &lt;jvliwanag@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] Qs on building a good REST client\r\nX-Yahoo-Group-Post: member; u=304236879; y=9WlXED8TiIaE6jcZzA5QOB3N5R1KAI1rMvWpYqOoQhAfDoFmV1G3gbdW_g\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Fri, Apr 17, 2009 at 1:31 AM, jv.liwanag &lt;jvliwanag@...&gt; wrote:\n&gt; My concerns are:\n&gt; 1 - Let as assume another server app consuming a RESTful service. At\n&gt; start-up, it gets the links useful from the root URL then traverses them as\n&gt; necessary. Assuming there are elements, such as forms, these are probably\n&gt; stored as well. However, when the RESTful service evolves, say, changes the\n&gt; URIs, etc, the consumer&#39;s data would be outdated. How is this best handled?\n&gt;\n&gt; I could opt to always start each request with the root URL all the time,\n&gt; then follow the necessary links all the time. Of course, it&#39;ll be best to\n&gt; take advantage of caching and/or conditional GETs here.\n\nStarting at the top and working through the hypermedia is my preferred\napproach.  With basic caching and conditional requests acceptable\nperformance is quite easy to maintain.\n\n&gt; 2 - What&#39;s a good guideline on what stuff to watch out in the\n&gt; representations? I wouldn&#39;t want my representations to always adhere to a\n&gt; specific schema so as not to hinder its evolution. But some things have to\n&gt; be kept constant for older REST clients on the same service working right?\n&gt; What&#39;s a good guideline for those? (i.e. a specific XPath will always point\n&gt; to a specific information regardless of whatever revisions the service goes\n&gt; through.)\n\nI have not built any clients that use XML base services, but for\nclients that use JSON representations i have used a very similar\napproach.  Basically, creating domain objects by making requests and\nextracting each individual piece of the data i wanted by name, or\npath, and storing them in instance variables in the object.  In XML,\nusing XPath would be equivalent so i expect that would work pretty\nwell.\n\n--\nPeter Williams\nhttp://barelyenough.org\n\n"}}