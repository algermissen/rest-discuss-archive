{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"cTdIykkBNQxiNdB3DNqTpUsSEVxUx9lyIPRtFMbaiuULN79PXThiAzdvX9I34c2gZe8ZxtXnsyoopE_BcwoDzj7sEXP1Bt5IUN5PQw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST is not just file storage","postDate":"1210111035","msgId":10746,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM3OTY3NjI4LUQ3RkEtNDY0My05Q0U4LTY0NkI3QzQ1NTk4REBnYml2LmNvbT4=","inReplyToHeader":"PGVjZjM1YTFiMDgwNTA2MDEwNm01Mzg2NmM0NnBhNTdiNTRkZjQ3MGM2MTUyQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PEEzQjk3RjA3LUM2OTktNEE5QS04QzQ5LTU4MUIzQUVDREY1NkBnYml2LmNvbT4gPGVjZjM1YTFiMDgwNTA2MDEwNm01Mzg2NmM0NnBhNTdiNTRkZjQ3MGM2MTUyQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10745,"nextInTopic":10747,"prevInTime":10745,"nextInTime":10747,"topicId":10740,"numMessagesInTopic":7,"msgSnippet":"... Serendipitous reuse comes from providing a URI for everything that is of value as a resource (even when that value is not used by your own application).","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 52544 invoked from network); 6 May 2008 21:57:20 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m46.grp.scd.yahoo.com with QMQP; 6 May 2008 21:57:20 -0000\r\nX-Received: from unknown (HELO spaceymail-a3.g.dreamhost.com) (208.113.200.5)\n  by mta18.grp.scd.yahoo.com with SMTP; 6 May 2008 21:57:20 -0000\r\nX-Received: from [192.168.0.160] (ip72-211-200-45.oc.oc.cox.net [72.211.200.45])\n\tby spaceymail-a3.g.dreamhost.com (Postfix) with ESMTP id 6D73D195506;\n\tTue,  6 May 2008 14:57:20 -0700 (PDT)\r\nIn-Reply-To: &lt;ecf35a1b0805060106m53866c46pa57b54df470c6152@...&gt;\r\nReferences: &lt;A3B97F07-C699-4A9A-8C49-581B3AECDF56@...&gt; &lt;ecf35a1b0805060106m53866c46pa57b54df470c6152@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v753)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;37967628-D7FA-4643-9CE8-646B7C45598D@...&gt;\r\nCc: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 6 May 2008 14:57:15 -0700\r\nTo: dev &lt;dev.akhawe@...&gt;\r\nX-Mailer: Apple Mail (2.753)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] REST is not just file storage\r\nX-Yahoo-Group-Post: member; u=175757792; y=plp213K5nnt4FNzKDDA6uoORAkNxkseFRtEP_dJX7q7xBiZhQB_W\r\nX-Yahoo-Profile: roy_fielding\r\n\r\nOn May 6, 2008, at 1:06 AM, dev wrote:\n&gt; &gt;want to know how to do everything in a PUT or DELETE instead of\n&gt; &gt;any of the other HTTP methods. That is wrong. That is thinking\n&gt; &gt;HTTP is just a &quot;Save as...&quot; dialog.\n&gt;\n&gt; At first I thought that using non-standard methods like PATCH would be\n&gt; wrong as it wouldn&#39;t allow for serendipitous reuse.\n&gt;\n\nSerendipitous reuse comes from providing a URI for everything that is\nof value as a resource (even when that value is not used by your own\napplication).  As long as you are using GET for retrieval, then reuse\nwill be there.  POST can be used in serendipitous ways as well, but\nthere are no special tricks in HTTP that make POST actions any more or\nless reusable than any form of RPC/RMI -- we simply rely on the\nmedia type telling us where to POST to describe the service on the fly\n(late-binding is always better than compiled contracts because any\nlate binding can self-identify its own expected &quot;contract&quot;).\nMore importantly, it is very hard to see that it is safe to reuse\na POST in unforeseen ways, whereas that is required of GET.\n\nEven when POST is used to perform the equivalent of GET, for whatever\ncrazy reason, it can be compensated somewhat by responding to the POST\nwith 303 or 201 + Location, or simply by limiting the 200 response\ncontent to a list of references to reusable resources.\n\nPUT, DELETE, and PATCH are essentially editing operations on the\nmapping from URI to representation.  In many cases, those will translate\ndown to what is essentially file-like CRUD operations, but only for\na very small subset of resources.  If you think of it in MVC terms,\nthen those operations should only be active when M=V.  It is the\napplication&#39;s job to determine when M=V; i.e., which models are\ncapable of being edited by representation exchange, which models can\nbe edited by indirect action on some other resource(s) (e.g., edit\nlinks in Atom or wiki post forms on pages), and which models can&#39;t\nbe edited at all via HTTP.\n\nIn any case, there are plenty of RESTful services that do nothing\nbut GET and POST.  The key is how those methods are used, not what\nmethods are used.  To give a specific example, what makes a wiki\nmore or less RESTful is almost always determined by how it (ab)uses\nGET and sessions -- whether it uses PUT or POST for editing pages\nis sugar topping in comparison.\n\n&gt; But what you are\n&gt; saying is using non-standard methods is fine as long as there is an\n&gt; engine which can tell the client what to do next. That engine should\n&gt; support introspection via GET. Is this correct ?\n&gt;\n\nI wouldn&#39;t go as far as saying all &quot;non-standard methods&quot; are fine.\nThe methods still need to be standardized in order for intermediaries\nto take part in the conversation and for generic clients to know how\nto follow the instructions.  The methods still need to be resource- \nneutral\nin terms of semantics.  However, for actions that do not benefit\nfrom intermediaries (non-retrieval actions), the focus of REST is to\nmake the results visible as reusable resources after the action is\ncomplete rather than worry too much about the standard-ness of any\nnon-GET method name.\n\n....Roy\n\n"}}