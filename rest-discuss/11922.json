{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":237604743,"authorName":"Bill de hOra","from":"Bill de hOra &lt;bill@...&gt;","profile":"bdehora","replyTo":"SENDER","senderId":"0pT19jwH3Wp5IVuF0-KYQWt-ISh0nwU-jzZyEEOIytBSGO2DC7S0oeDZzW71iB-0QnCIZdeIQ2AoZKOhqu9IBhOhVyU0","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Aggregate URI","postDate":"1231183039","msgId":11922,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5NjI1Q0JGLjIwNjA4MDVAZGVob3JhLm5ldD4=","inReplyToHeader":"PDMzOEYzRUM2LTdERUEtNDZBMi1CRDlBLTg3OEExMjhCNUYyQkB3ZWJiZXIubmFtZT4=","referencesHeader":"PGdqczVtNCtoY2MzQGVHcm91cHMuY29tPiA8MzM4RjNFQzYtN0RFQS00NkEyLUJEOUEtODc4QTEyOEI1RjJCQHdlYmJlci5uYW1lPg=="},"prevInTopic":11911,"nextInTopic":11923,"prevInTime":11921,"nextInTime":11923,"topicId":11904,"numMessagesInTopic":12,"msgSnippet":"... I sometimes think it s difficult to design good symmetric data apis, especially if you are designing them from already existing relational data. Here are","rawEmail":"Return-Path: &lt;bill@...&gt;\r\nX-Sender: bill@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 58074 invoked from network); 5 Jan 2009 19:17:22 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m44.grp.scd.yahoo.com with QMQP; 5 Jan 2009 19:17:22 -0000\r\nX-Received: from unknown (HELO chilco.textdrive.com) (207.7.108.242)\n  by mta18.grp.scd.yahoo.com with SMTP; 5 Jan 2009 19:17:22 -0000\r\nX-Received: from [192.168.3.166] (83-70-252-36-dynamic.b-ras1.prp.dublin.eircom.net [83.70.252.36])\n\tby chilco.textdrive.com (Postfix) with ESMTP id 253E9DD8A8\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon,  5 Jan 2009 19:17:21 +0000 (UTC)\r\nMessage-ID: &lt;49625CBF.2060805@...&gt;\r\nDate: Mon, 05 Jan 2009 19:17:19 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (X11/20081125)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;gjs5m4+hcc3@...&gt; &lt;338F3EC6-7DEA-46A2-BD9A-878A128B5F2B@...&gt;\r\nIn-Reply-To: &lt;338F3EC6-7DEA-46A2-BD9A-878A128B5F2B@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bill de hOra &lt;bill@...&gt;\r\nSubject: Re: [rest-discuss] Aggregate URI\r\nX-Yahoo-Group-Post: member; u=237604743; y=AEba1HNRijJ1QuY6ZNY-QrmLmVkSVwt0f0Es3hO1SDuShQ\r\nX-Yahoo-Profile: bdehora\r\n\r\nJim Webber wrote:\n&gt; \n&gt; \n&gt; Hello Rama,\n&gt; \n&gt;  &gt; GET /users/&lt;id&gt; and GET /presence/&lt;id&gt;\n&gt; \n&gt; Why not just do these two GETs, and cache the representations if\n&gt; performance is an issue? It seems to me that conflating two logically\n&gt; different entities isn&#39;t necessarily a good thing to do.\n\nI sometimes think it&#39;s difficult to design good symmetric data apis, \nespecially if you are designing them from already existing relational data.\n\nHere are some reasons I hear about:\n\n  it&#39;ll be slower first time round for the client.\n\n  it&#39;ll cost the client more money*\n\n  it&#39;s more hits on the backing data store (ie fine grained access over \nthe network)\n\n  it&#39;ll be more engineering effort and DUF (to put the caching layer in)\n\nI can make counter-arguments to each one of these, but that doesn&#39;t make \nthem wrong.\n\nGranted, presence isn&#39;t the best example, but there are other extended \ndata, such as permissions, settings, preferences that might justify a \nsingle GET.\n\nThe conflation point you mention; I sometimes see that come up in the \nreal world as a desire for fine grained updates after having munged all \nthe data.\n\nStefan mentioned that inventing SQL over GET was a bad thing, but it is \nhard to predict what amount of the data graph clients will want. By hard \nI this - it took the Atom WG many man-years over a period of years to \nstandardize a Feed and an Entry. Most people who hit this problem for \ntheir domain don&#39;t have those kinds of resources or timelines - and most \npeople who design network data formats appear to be programmers not data \nspecialists. I&#39;m happy that using REST can produces good technical \ndesigns up to a layer, but designing good formats that can be used well \non top of that layer is challenging.\n\nIt&#39;s hard to know what&#39;s logically separate anyway - why is it ok to put \nCategories in an Entry in Atom, but not make Categories resources?\n\nBill\n\n\n* aggregate data comes up a lot in my part of the mobile space.\n\n"}}