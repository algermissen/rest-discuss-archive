{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":302633978,"authorName":"Daniel Yokomizo","from":"&quot;Daniel Yokomizo&quot; &lt;daniel.yokomizo@...&gt;","profile":"daniel_yokomiso","replyTo":"SENDER","senderId":"VyAeOhocxbZ2ULBxXW33swPMcrpwktNrlA3pi-RRtd_qwsRGRCBetw6GtJdaTj_-toIVjK3eQCnVZH-pfP45X-usWTOdx28sEoLjKkCCAKDiFULL","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How to model a missing method?","postDate":"1213106151","msgId":10887,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU1YzZlY2FiMDgwNjEwMDY1NXg2ZjdmZmQ5MWxmMzczODJmZmUwYmEyMjdjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ4NEUyRUFELjIwNDAwMDlAd2ViLmRlPg==","referencesHeader":"PDQ4NEUyRUFELjIwNDAwMDlAd2ViLmRlPg=="},"prevInTopic":10884,"nextInTopic":10890,"prevInTime":10886,"nextInTime":10888,"topicId":10884,"numMessagesInTopic":9,"msgSnippet":"... Just to clear (or complicate ;) things up you can use other methods (e.g. WebDAV methods), as long as they are well defined. Usually though we use just the","rawEmail":"Return-Path: &lt;daniel.yokomizo@...&gt;\r\nX-Sender: daniel.yokomizo@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 92353 invoked from network); 10 Jun 2008 13:55:53 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m53.grp.scd.yahoo.com with QMQP; 10 Jun 2008 13:55:53 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.152)\n  by mta18.grp.scd.yahoo.com with SMTP; 10 Jun 2008 13:55:53 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id l26so1714755fgb.45\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 10 Jun 2008 06:55:52 -0700 (PDT)\r\nX-Received: by 10.86.52.6 with SMTP id z6mr5767689fgz.18.1213106151080;\n        Tue, 10 Jun 2008 06:55:51 -0700 (PDT)\r\nX-Received: by 10.86.9.6 with HTTP; Tue, 10 Jun 2008 06:55:51 -0700 (PDT)\r\nMessage-ID: &lt;e5c6ecab0806100655x6f7ffd91lf37382ffe0ba227c@...&gt;\r\nDate: Tue, 10 Jun 2008 10:55:51 -0300\r\nTo: &quot;Stephan Koops&quot; &lt;Stephan.Koops@...&gt;\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;484E2EAD.2040009@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;484E2EAD.2040009@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Daniel Yokomizo&quot; &lt;daniel.yokomizo@...&gt;\r\nSubject: Re: [rest-discuss] How to model a missing method?\r\nX-Yahoo-Group-Post: member; u=302633978; y=nK8hKBoi4r_XAauwLlElUsP0ptHgJiaFXhOqzY33wC6yc2cqkOLrdDTp\r\nX-Yahoo-Profile: daniel_yokomiso\r\n\r\nOn Tue, Jun 10, 2008 at 4:35 AM, Stephan Koops &lt;Stephan.Koops@...&gt; wrote:\n&gt; Hi,\n&gt;\n&gt; how should I model something, if I need a 5th method, but there are only\n&gt; GET, POST, PUT and DELETE?\n\nJust to clear (or complicate ;) things up you can use other methods\n(e.g. WebDAV methods), as long as they are well defined. Usually\nthough we use just the ones defined in RFC2616 but other well defined\nmethods are RESTful too.\n\n&gt;Example: I want to deactivate a user in a user\n&gt; or employee management. With SOAP, RPC or something like that I create a\n&gt; method deactivate, an call it with the user number. How should I model\n&gt; this with REST over HTTP? Do I have to GET the full user data (JSON,\n&gt; XML, ...), change the state to &quot;deactivated&quot; and PUT this back? Or\n&gt; should I PUT to the users sub resource /users/1234/status/ the entity\n&gt; &quot;deactivated&quot;?\n\nI would go with this option (i.e. &quot;PUT /users/1234/status&quot; with entity\ntext/plain &quot;deactivated&quot;). The mime type can be something else if it&#39;s\na better choice.\n\nNow you could define a ACTIVATE/DEACTIVATE pair of new methods, but\nit&#39;s tricky to do it correctly (i.e. applicable to many resources,\nwell defined semantics, etc.) and most applications (e.g. browsers,\nproxies) won&#39;t be able to understand it, but it provides a better fit\n(because the semantics are much less generic). Doing PUT sending\n&quot;activated&quot;/&quot;deactivated&quot; works with other applications but the\nsemantics of PUT is underspecified (for this case). I wouldn&#39;t use\nthis approach unless I knew that I can control the client application\nand it would be worth the effort (e.g. many resources have this\ncapability with a common semantics, the semantics is tricky enough\nthat it&#39;s interesting to other applications to be able to treat the\nrequest different than a simple PUT)  to specify a custom method.\n\nBoth approaches can be made to work, but each has it&#39;s own set of\nbenefits. For example with a custom method you can call &quot;OPTIONS\n/users/1234&quot; and receive a &quot;Allow: GET, PUT, DEACTIVATE&quot; header which\nis easier to the user agent, overloading PUT will require a link in\nthe hypermedia (or in a Link header) of &quot;/users/1234&quot; to tell the user\nthat a transition to a active/inactive state is possible (i.e. inform\nthat the user can call &quot;PUT /users/1234/status&quot;), but then the\nsemantics is unclear because the server rely on the entity to\ndistinguish between each state and it&#39;s tricky to tell the user that\none entity is fine while the other isn&#39;t, other than the user trying\nand getting an error. Of course the agent can inspect the\nrepresentation returned from &quot;GET /users/1234&quot; and see that the\ncurrent state is &quot;inactive&quot; and infer that &quot;PUT /users/status/1234&quot;\nshould have a entity &quot;active&quot;.\n\nAlso it&#39;s important to not be seduced by the extension method approach\n(i.e. define your own method instead of overloading the existing ones)\nbecause without much thought it ends up with many new methods that\nwon&#39;t work on more than a couple of resources and severely reduce the\nnumber of applications that can interact with yours. The atom spec is\na good example on how using just the basic HTTP methods with a good\nmime type can go a long way.\n\n&gt; best regards\n&gt;   Stephan\n\nBest regards,\nDaniel Yokomizo\n\n"}}