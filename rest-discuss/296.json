{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"S. Alexander Jacobson","from":"&quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;","replyTo":"SENDER","senderId":"gICLP0BmfW5NdfkxuklzW0WsyUCHWgO-JGLBtuHmB0dpeYBbxir-1850zGCpYPbYkaYIRFgI5wuN5x8i_2brGNFtEjPXSKl6-U6ltg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011988072","msgId":296,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI1MTQyMTAwMC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg==","inReplyToHeader":"PDNDNTE5ODgzLkEyMjVCNUI0QHByZXNjb2QubmV0Pg=="},"prevInTopic":294,"nextInTopic":300,"prevInTime":295,"nextInTime":297,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... That s nuts.  Then you not only have to write software you have to invent a whole new protocol!!!  In particular, you have to rewrite RFC2821(SMTP) to ride","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 25 Jan 2002 19:46:59 -0000\r\nReceived: (qmail 31056 invoked from network); 25 Jan 2002 19:46:59 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m3.grp.snv.yahoo.com with QMQP; 25 Jan 2002 19:46:59 -0000\r\nReceived: from unknown (HELO mail.vo.com) (208.36.81.99)\n  by mta2.grp.snv.yahoo.com with SMTP; 25 Jan 2002 19:46:59 -0000\r\nReceived: from gandolph.ASGARD.jms (alexhome2 [66.108.152.69])\n\tby mail.vo.com (8.12.1/8.12.1) with ESMTP id g0PJkNFv018790\n\t(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);\n\tFri, 25 Jan 2002 14:46:25 -0500\r\nDate: Fri, 25 Jan 2002 14:47:52 -0500 (Eastern Standard Time)\r\nTo: Paul Prescod &lt;paul@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nIn-Reply-To: &lt;3C519883.A225B5B4@...&gt;\r\nMessage-ID: &lt;Pine.WNT.4.43.0201251421000.1400-100000@...&gt;\r\nX-X-Sender: alex@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOn Fri, 25 Jan 2002, Paul Prescod wrote:\n&gt; &gt; The more comparable example is if you asked them\n&gt; &gt; to set up an asynchronous peer to peer\n&gt; &gt; messaging system (aka email). Would they choose\n&gt; &gt; HTTP or SMTP?\n&gt; If they understood REST I think that they would choose HTTP. Better\n&gt; applications can be built if you model data elements and processes as\n&gt; resources rather than endpoints.\n\nThat&#39;s nuts.  Then you not only have to write\nsoftware you have to invent a whole new\nprotocol!!!  In particular, you have to\nrewrite RFC2821(SMTP) to ride on top of HTTP.\n\nThats a major PITA!\n\n(That being said, I think SMTP could be\nsubstantially improved and would love it if\nsomeone were willing to do so and could get it\nwidely deployed)\n\n&gt; If you&#39;re building a *new* application\n&gt; then you need to write the software on the client and server sides\n&gt; anyhow. We all know how little effort it takes to put HTTP on the client\n&gt; side. I&#39;ve shipped products with HTTP servers written in four different\n&gt; languages.\n\nWriting a dumb SMTP server is pretty straightforward too.  BFD.\n\n&gt; &gt; &gt; If you want a web interface then you can use a POST form.\n&gt; &gt;\n&gt; &gt; See my reply to MB.  This is not modeling the\n&gt; &gt; application in terms of resources.  It is RPC.\n&gt;\n&gt; I don&#39;t know why you say it is RPC. The definition in my mind of RPC is\n&gt; that the incoming message has a tag or identifier that instructs the\n&gt; server what to do with it. But this &quot;endpoint&quot; resource would have one\n&gt; and only one task. It would expect the input to be appropriate for that\n&gt; task.\n\nThen your definition of RPC is incoherent.\nSuppose that XML-RPC were modified so that the\nmethod name appeared in the URL rather than the\nbody, would it stop being RPC?\n\nTerrorist_or_not.com passes two arguments to a\nprocedure on the server and that procedure returns a\nvalue.\n\nYou cannot intepret the interaction as anything\nlike either reading, writing, or appending to a\nfile.\n\n&gt; &gt; Returning a URL and then asking the client to\n&gt; &gt; watch the new URL seems like a lot of overhead and\n&gt; &gt; waste.\n&gt;\n&gt; No, it is just a separation of concerns. Yes it takes more round-trips\n&gt; than the SMTP system. It is also much more functional. The client can\n&gt; check for status whenever it wants. Other clients can be attached to the\n&gt; *same* computation because it is a first-class resource. Clients can\n&gt; share information about what computations they are watching by sharing\n&gt; the URI. Disconnected clients have the option of polling which they do\n&gt; not with SMTP (unless there is a mailbox intermediary).\n\nNothing prevents the server from returning a\nstatus URL AND commiting to deliver via email.\nThen you get the best of both worlds, anyone can\ncheck status and still no polling.\n\nYour point about disco clients is just insane.\nHave you heard of SMTP relay?\n\n&gt; &gt; Good argument, but the polling is ugly.  A\n&gt; &gt; callback system is much nicer and much ligher on\n&gt; &gt; system resources!\n&gt;\n&gt; The point is that the same system could support *both*. This would be\n&gt; much harder to do with SMTP.\n\nI am not objecting to supporting both!  My\ncontention is simply that using HTTP only\nprecludes callbacks.\n\nAs I said before, sometimes you want something\nother than HTTP.  Sometimes you want something\nother than REST.\n\n&gt; &gt; &gt; Conventions for asyncronous notification are here:\n&gt; &gt; &gt;\n&gt; &gt; &gt;  * http://www.prescod.net/HTTP_event_conventions.html\n&gt; &gt;\n&gt; &gt; Ok.  So that is another new protocol.  It is not\n&gt; &gt; real life HTTP.\n&gt;\n&gt; If I use XHTML or RSS am I using XML? It is real life HTTP up until the\n&gt; point that where I start doing things against the HTTP model such as\n&gt; inventing private namespaces or telling the server what to do through\n&gt; method names or using POST for logical queries.\n\nTerrorist_or_not.com uses POST for logical\nqueries?  Is that a problem?  How would you solve\nit?\n\nMy general point is that you are defining a new\nprotocol on which endpoints have to have made\n&quot;a priori agreement&quot; (to use MBs words).\n\nSince endpoints do not yet understand WATCH,\nCHANGED, DELETED, etc, you are not talking about\nHTTP.  You are inventing a new protocol.\n\nYour argument is like saying that HTTP is not a\nnew protocol because it already uses TCP/IP.\n\n&gt; &gt; ... It also seems no better than just\n&gt; &gt; sending a reply-to in the first place.\n&gt;\n&gt; If you just send a reply-to then the client and server have no mutually\n&gt; visible resource that represents the transaction. That means that the\n&gt; client can&#39;t monitor it. The client can&#39;t cancel it. You could invent\n&gt; some kind of UUID system but now you&#39;re inventing a private namespace.\n\nAgain, if it is important to have monitoring, you\ncan also send a location header that points to the\nrequest status (which is what RFC2616 actually\nsays to do!).  Again, I&#39;m not objecting to\nmonitoring.  I am objecting to polling.\n\nTo be clear both to you and to Mike.  I am\nobjecting to polling and to the work involved in\nreinventing the wheel on asynch.\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n"}}