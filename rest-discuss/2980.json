{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":126057605,"authorName":"Mathews, Walden","from":"&quot;Mathews, Walden&quot; &lt;walden.mathews@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"UE6Xo_gzL8ch-6vIBxe4aRRj1BZM9l_qpdzyQ3LtngZFoYGCV9ct1LRX5Z-FcYYsLSCJ6cpaEHhdmrE9mTUVaKgFuAVP3-FKllCyxQMvLtde","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Another REST vs. SOAP article","postDate":"1038859746","msgId":2980,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVFOTVAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2979,"nextInTopic":2981,"prevInTime":2979,"nextInTime":2981,"topicId":2908,"numMessagesInTopic":50,"msgSnippet":"Terminology strikes again.  Object models and object oriented programming have separate lives, according to what I read.  Bill is talking about polymorphic","rawEmail":"Return-Path: &lt;walden.mathews@...&gt;\r\nX-Sender: walden.mathews@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 2 Dec 2002 20:09:35 -0000\r\nReceived: (qmail 28698 invoked from network); 2 Dec 2002 20:09:35 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m13.grp.scd.yahoo.com with QMQP; 2 Dec 2002 20:09:35 -0000\r\nReceived: from unknown (HELO ilx.com) (199.119.33.232)\n  by mta1.grp.scd.yahoo.com with SMTP; 2 Dec 2002 20:09:35 -0000\r\nReceived: from clifford.devo.ilx.com (clifford.devadm.ilx.com [172.27.56.72])\n\tby ilx.com (8.11.0/8.9.3) with ESMTP id gB2K96O30880;\n\tMon, 2 Dec 2002 15:09:07 -0500 (EST)\n\t(envelope-from walden.mathews@...)\r\nReceived: by clifford.devo.ilx.com with Internet Mail Service (5.5.2653.19)\n\tid &lt;YD47DDQV&gt;; Mon, 2 Dec 2002 15:09:06 -0500\r\nMessage-ID: &lt;1373D6342FA1D4119A5100E029437F64045EEE95@...&gt;\r\nTo: &quot;&#39;Paul Prescod&#39;&quot; &lt;paul@...&gt;,\n   =?iso-8859-1?Q?Bill_de_h=D3ra?=\n\t &lt;dehora@...&gt;\r\nCc: &quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;,\n   rest-discuss@yahoogroups.com\r\nSubject: RE: [rest-discuss] Another REST vs. SOAP article\r\nDate: Mon, 2 Dec 2002 15:09:06 -0500 \r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2653.19)\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Mathews, Walden&quot; &lt;walden.mathews@...&gt;\r\nX-Yahoo-Group-Post: member; u=126057605\r\nX-Yahoo-Profile: waldenmathews\r\n\r\nTerminology strikes again.  Object models and object oriented\nprogramming h=\r\nave separate lives, according to what I read.  Bill\nis talking about polymo=\r\nrphic method resolution, which is one\nfeature of OO (the programming thing)=\r\n, while Paul&#39;s description\nof &quot;identity, state and behavior&quot; is the /sine q=\r\nua non/ of the\nobject model.\n\nThat&#39;s my take...\n\nWalden\n\n\n&gt; -----Original M=\r\nessage-----\n&gt; From: Paul Prescod [mailto:paul@...]\n&gt; Sent: Monday, =\r\nDecember 02, 2002 2:28 PM\n&gt; To: Bill de h=D3ra\n&gt; Cc: Toivo &quot;Deutsch&quot; Lainev=\r\nool; rest-discuss@yahoogroups.com\n&gt; Subject: Re: [rest-discuss] Another RES=\r\nT vs. SOAP article\n&gt; \n&gt; \n&gt; Bill de h=D3ra wrote:\n&gt; \n&gt; &gt; I don&#39;t understand =\r\nthe terminology in this thread at all. To me, OOP\n&gt; &gt; is about managing dep=\r\nendencies in sofware by using jumptables.  \n&gt; \n&gt;  &gt; I don&#39;t see how the ser=\r\nvice oriented example above is not OOP.\n&gt; \n&gt; To me, OOP is about objects, a=\r\nnd objects are things with \n&gt; identity, state \n&gt; and behaviour. If we put a=\r\nside static type checking for a second, any \n&gt; object in an OOPL may refer =\r\nto any other object in a consistent way \n&gt; (void *x, Object x, etc).\n&gt; \n&gt; W=\r\nhen you use the &quot;handle as first parameter hack&quot;, you now \n&gt; have to have \n=\r\n&gt; two addresses for each object. The address of the service (usually an \n&gt; =\r\nHTTP URI) and the &quot;handle&quot; which is really just another \n&gt; address. In my \n=\r\n&gt; opinion, this is not proper OOP programming. It would be very rare to \n&gt; =\r\nsee a Java interface like:\n&gt; \n&gt; class IndividualAccount{\n&gt;      function de=\r\nbit(accountNumber, val);\n&gt;      function credit(accountNumber, val);\n&gt; }\n&gt; =\r\n\n&gt; Because this makes it _impossible_ to pass a reference to an \n&gt; account =\r\nas \n&gt; a standard Java object reference. Instead, you would much \n&gt; more oft=\r\nen do:\n&gt; \n&gt; class AccountManager{\n&gt;      function getAccount(number);\n&gt; }\n&gt;=\r\n \n&gt; class Account{\n&gt;      function debit(val);\n&gt;      function credit(val);=\r\n\n&gt; }\n&gt; \n&gt; Now the account is a first-class object which can be passed aroun=\r\nd \n&gt; without reference to the query interface. i.e. it has identity, state =\r\n\n&gt; and behaviour. As an example of how its identity might be \n&gt; important, =\r\nyou \n&gt; might have different access controls on different accounts. \n&gt; This =\r\ncould \n&gt; be done in a language or system with per-object access \n&gt; controls=\r\n. Even in \n&gt; such a system, it is not straightforward if you&#39;ve hacked \n&gt; s=\r\ntatic methods \n&gt; to _emulate_ instance objects in a manner that is opaque t=\r\no your \n&gt; infrastructure.\n&gt; \n&gt;   Paul Prescod\n&gt; \n&gt; \n&gt; ---------------------=\r\n--- Yahoo! Groups Sponsor \n&gt; ---------------------~--&gt;\n&gt; Get 128 Bit SSL En=\r\ncryption!\n&gt; http://us.click.yahoo.com/CBxunD/vN2EAA/xGHJAA/W6uqlB/TM\n&gt; ----=\r\n----------------------------------------------------------\n&gt; -------~-&gt;\n&gt; \n=\r\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscr=\r\nibe@yahoogroups.com\n&gt; \n&gt;  \n&gt; \n&gt; Your use of Yahoo! Groups is subject to \n&gt; =\r\nhttp://docs.yahoo.com/info/terms/ \n&gt; \n&gt; \n\n"}}