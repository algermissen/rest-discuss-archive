{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"JfHCe9d4Yr7nNOu0s7vDGSW0sDo7VTNhD9NrsJwwdm-RWb7gISodPjUH6yLdLVV5Fz127HdMnCMmJuPINFacmGv3pxd19w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Meerkat API in WRDL","postDate":"1014514174","msgId":778,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNzg0MUZFLjlCRDRGODcxQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDNzgwMjQwLkY4NTZGRjY4QHByZXNjb2QubmV0PiA8MDBiYzAxYzFiY2M3JDNkYWY1OGEwJDY0MDFhOGMwQGluamVrdGlsbz4="},"prevInTopic":777,"nextInTopic":779,"prevInTime":777,"nextInTime":779,"topicId":776,"numMessagesInTopic":8,"msgSnippet":"... Yeah, I haven t decided exactly what to do there. I don t want to confuse the DTD with the HTTP methods that don t have logical significance for a web","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 24 Feb 2002 01:32:03 -0000\r\nReceived: (qmail 40880 invoked from network); 24 Feb 2002 01:32:03 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m8.grp.snv.yahoo.com with QMQP; 24 Feb 2002 01:32:03 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 24 Feb 2002 01:32:03 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1O1W0S24015\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 23 Feb 2002 17:32:00 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1O1VxL08245\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 23 Feb 2002 17:31:59 -0800\r\nMessage-ID: &lt;3C7841FE.9BD4F871@...&gt;\r\nDate: Sat, 23 Feb 2002 17:29:34 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Meerkat API in WRDL\r\nReferences: &lt;3C780240.F856FF68@...&gt; &lt;00bc01c1bcc7$3daf58a0$6401a8c0@injektilo&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJason Diamond wrote:\n&gt; \n&gt; Very cool, Paul!\n&gt; \n&gt; Does extension-method really need the &quot;extension-&quot; prefix? A simple &quot;method&quot;\n&gt; name seems like it would convey the exact same information. Is HEAD an\n&gt; extension method? It&#39;s defined in HTTP so I wouldn&#39;t think to call it that.\n\nYeah, I haven&#39;t decided exactly what to do there. I don&#39;t want to\nconfuse the DTD with the HTTP methods that don&#39;t have logical\nsignificance for a &quot;web service.&quot; How about &quot;other-method&quot;? As this\nshould be rarely used I don&#39;t think that the verbosity is a problem.\n\n&gt; Do query elements always represent the parts of the URI after the question\n&gt; mark? \n\nYes. I think so.\n\n&gt; ... Even for POST? If so, that&#39;s why I was asking (in a previous message)\n&gt; if there could be separate input elements (form? variable?) for form\n&gt; variables that can be POSTed (using multipart/form-data) to a resource.\n\nI see. On the one hand it seems like once I get into helping people to\ndefine the structure of the body I&#39;m getting into a slippery slope. Next\nI&#39;ll be embedding schemas in WRDL. On the other hand I can see how it\nwould be useful. I guess I&#39;ll add that. Should I call it\n&lt;form-parameter&gt;?\n\n&gt; How is it possible to have query outputs? Or is that a typo in the DTD?\n\nTypo.\n\n&gt; The content model for documentation and appinfo should be ANY so that we\n&gt; could include structured content. Personally, though, I would prefer if\n&gt; annotation&#39;s content model was ANY and there were no documentation or\n&gt; appinfo elements. The distinction that XML Schema makes between human and\n&gt; machine readable annotations seems entirely arbitrary to me. XML makes\n&gt; content both human and machine readable at the same time!\n\nI&#39;ll think more about it. There is virtue in conforming to patterns set\nelsewhere...but I find it somewhat verbose myself.\n\n&gt; It seems odd that representationType elements are contained by a\n&gt; resourceTypes element.\n\nI guess I could call the top-level element &quot;stuff&quot;. Or &quot;wrdl&quot;. My\nthinking is that the goal is defining resource types and the\nrepresentations are just a sort of property of the resources, like ports\nin WSDL.  They aren&#39;t defined in the resources directly so they can be\nused in multiple places.\n\n&gt; You have some example representationType elements with match attributes. The\n&gt; DTD says those should be called test.\n\nTrue. Will fix.\n\n&gt; I still think that the match attribute on reference elements should be\n&gt; select. \n\nI see, you&#39;re thinking of the representationType as a template and using\nthat as the &quot;current node&quot;. I&#39;m more thinking that we visit every node\nin the document and see if it matches any of the XPaths in any of the\nreferences. I presume that you usually will NOT care about proximity to\nthe root so it should default to floating.\n\n&gt; ... XSLT&#39;s match attribute defines a pattern that (usually) gets checked\n&gt; as the processor recurses down the entire document. You could just as easily\n&gt; extract the same information, albeit more efficiently, if you used normal\n&gt; XPath expressions.\n\nI think the efficiency is the same because any smart processor could\nconvert one form to the other.\n\n&gt;...\n&gt; If you still want to scan the entire document you could always use an XPath\n&gt; like &quot;//foo&quot;.\n\nI just feel like that will be the most common case so it should be the\ndefault. If you have any other arguments for select I&#39;m open to them,\nthough. I don&#39;t feel strongly about it.\n\n&gt; A more realistic example for different representation types might be for the\n&gt; different types of schemas that are out there:\n\nGood idea.\n\n&gt; You say that WRDL doesn&#39;t care which representationType matches a\n&gt; representation. Won&#39;t consumers of a WRDL-generated API want to know what\n&gt; type of document was returned? \n\nThat&#39;s why I wrote that bit about &quot;This may change in the future.&quot;. I\nneed to think about it more. What if a representation matches two\nrepresentationTypes. Do I have to signal an error? Choose the first? Add\npriority attributes?\n\n&gt; ... Won&#39;t the WRDL-generated proxy want to know\n&gt; so that it could validate the representation? It seems like things would be\n&gt; easier all around if the first representationType that passed its XPath test\n&gt; was the &quot;winner&quot;.\n\nMaybe that&#39;s simplest. XSLT throws an error. I&#39;ll have to think about it\nmore.\n\n&gt; Could you expound a little more on &quot;the built-in support for navigation\n&gt; through hyperlinks&quot;? I don&#39;t follow that. How is that used in the API?\n\n&quot;CustomerResource cust = por.references.customer()&quot;\n\nWhat&#39;s happened there is that there was some XML that looked like\n&lt;purchaseOrder&gt;\n  &lt;customerURI href=&quot;http://....&quot;/&gt; or something like that.\n...\n&lt;/purchaseOrder&gt;\n\nThen there was a reference with the name &quot;customer&quot; that matched\n//customerURI/@href. And the referent was declared to be of type\nCustomerResource. So you navigated from the purchase order to the\ncustomer. And then you get a representation of the customer like this:\n\nDOMDocument cust = por.GET()\n\n Paul Prescod\n\n"}}