{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"J5ddM6WWxMswAQwzqWzssrznssy01AZKgmSZc-JbnlxO0r19rzxf41iaBvzj29uAl1-AuS01Sr10If-c2j4RjQ4tPi3i2U0dn1BTNPP2NQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] bootstrapping","postDate":"1200696099","msgId":10270,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzZjQwMWM4NWEyMyQ0YjUyZWM2MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDUwMzdiNmU0MDgwMTE4MTEwNXkyMGQ3OGQ5MHNkNjJmOTFiNGNiNjYwZjUxQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPiA8NTAzN2I2ZTQwODAxMTYxMDQ4cTQwZWJhZDg0aTM4ZjdjOGEyZDkyZTcwMDVAbWFpbC5nbWFpbC5jb20+IDwwZjNlMDFjODU4N2YkOWQ4YWNmNzAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTYyMjM5Zzc3N2I0NjdkcTY0YjEzNzMzMDAwOTg4YWNAbWFpbC5nbWFpbC5jb20+IDwxMDU0MDFjODU4ZTckNDhmY2I1ZjAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTcxOTE3aDJkMzZlNDgwbjc2MDM3NjU5ODVkMGM3NTZAbWFpbC5nbWFpbC5jb20+IDwxMjUxMDFjODU5YTYkNDBhYTg3YTAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTgwMTQ0ajIwZWQwZjNmaWJmNmZlMjA1YjU5MWQyY2JAbWFpbC5nbWFpbC5jb20+IDwxMmM4MDFjODU5Y2YkZDg0Mzk4MzAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTgxMTA1eTIwZDc4ZDkwc2Q2MmY5MWI0Y2I2NjBmNTFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":10269,"nextInTopic":10271,"prevInTime":10269,"nextInTime":10271,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... You are still misconstruing my points.  I didn t say that you didn t appreciate not working on things, I said you didn t appreciate the barrier that your","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63896 invoked from network); 18 Jan 2008 22:41:53 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m48.grp.scd.yahoo.com with QMQP; 18 Jan 2008 22:41:53 -0000\r\nX-Received: from unknown (HELO hs-out-2122.google.com) (64.233.178.251)\n  by mta18.grp.scd.yahoo.com with SMTP; 18 Jan 2008 22:41:53 -0000\r\nX-Received: by hs-out-2122.google.com with SMTP id 54so967719hsz.5\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 18 Jan 2008 14:41:52 -0800 (PST)\r\nX-Received: by 10.142.109.16 with SMTP id h16mr2501648wfc.38.1200696111002;\n        Fri, 18 Jan 2008 14:41:51 -0800 (PST)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nX-Received: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTPS id 39sm6677861wrl.32.2008.01.18.14.41.39\n        (version=SSLv3 cipher=RC4-MD5);\n        Fri, 18 Jan 2008 14:41:42 -0800 (PST)\r\nTo: &quot;&#39;Assaf Arkin&#39;&quot; &lt;assaf@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;fmks78+k15k@...&gt; &lt;5037b6e40801161048q40ebad84i38f7c8a2d92e7005@...&gt; &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt; &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt; &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt; &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt; &lt;125101c859a6$40aa87a0$0702a8c0@...&gt; &lt;5037b6e40801180144j20ed0f3fibf6fe205b591d2cb@...&gt; &lt;12c801c859cf$d8439830$0702a8c0@...&gt; &lt;5037b6e40801181105y20d78d90sd62f91b4cb660f51@...&gt;\r\nDate: Fri, 18 Jan 2008 17:41:39 -0500\r\nKeywords: Archived\r\nMessage-ID: &lt;13f401c85a23$4b52ec60$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198\r\nthread-index: AchaBQoMtWwIYfJKTM2DtDHWCm+1tAAFCl6w\r\nIn-Reply-To: &lt;5037b6e40801181105y20d78d90sd62f91b4cb660f51@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=228155998; y=Q-WTrBdXXf9fsvPyiq4vX2BnTzvmfOV5ooHVt6f_2L5sal-rcfVR\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\nAssaf Arkin wrote:\n&gt; &gt; Your knowledge and skill is obviously making it nearly \n&gt; impossible for \n&gt; &gt; you to recognize what it is like not to have your knowledge \n&gt; and skill \n&gt; (that&#39;s not a criticism, it&#39;s well-documented human psychology.)\n&gt; \n&gt; I do accept that.  I&#39;m not strictly in the market for \n&gt; solutions requiring my skill sets.  I blog, but I don&#39;t write \n&gt; my own blog software, I self-host a couple but mostly I \n&gt; prefer them to be services, I don&#39;t care to install and \n&gt; maintain them.  Just because I have the skills doesn&#39;t mean I \n&gt; want to use them all the time.  So things that are dead \n&gt; simple are very appealing to me.\n\nYou are still misconstruing my points.  I didn&#39;t say that you didn&#39;t\nappreciate not working on things, I said you didn&#39;t appreciate the barrier\nthat your strict prescriptions place on those with less skill than you.\n\n&gt; &gt; &gt; &gt; Occupational Programmers don&#39;t need a spec, they don&#39;t even\n&gt; &gt; &gt; think in\n&gt; &gt; &gt; &gt; those terms.  They instead need to be slapped in the \n&gt; face with the \n&gt; &gt; &gt; &gt; fact that something is possible before they even consider\n&gt; &gt; &gt; it because\n&gt; &gt; &gt; &gt; they otherwise assume it is not.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Which is exactly what a spec does.  A spec tells you what&#39;s \n&gt; &gt; &gt; available and how to use it.  Don&#39;t confuse that with the \n&gt; cryptic, \n&gt; &gt; &gt; over-generic, formal style we employ in various working groups, \n&gt; &gt; &gt; that&#39;s particularly appealing to a small set of people.  \n&gt; Specs can \n&gt; &gt; &gt; take many forms, ideally one that&#39;s readable to a lot of people.\n&gt; &gt;\n&gt; &gt; You are manipulating my metaphor to be used in a manner \n&gt; which was not \n&gt; &gt; how I intended. My reference to being slapped in the face \n&gt; was not to \n&gt; &gt; slap with the set of rules but instead to slap them in the \n&gt; face with \n&gt; &gt; what&#39;s possible. And when someone assumes things are not \n&gt; possible by \n&gt; &gt; default they don&#39;t go looking for specs no matter how readable they \n&gt; &gt; are.  OTOH, if they were browsing the web and discovered the Google \n&gt; &gt; Chart API by accident, for example, they might just have an &quot;Aha!&quot; \n&gt; &gt; moment and realize they *can* use it to implement \n&gt; something.  But if \n&gt; &gt; they have to first read a spec, it ain&#39;t gonna happen, or \n&gt; at least not nearly as often.\n&gt; \n&gt; Once you learn something exists, what happens next?  I&#39;m \n&gt; concerned with going from &quot;I know I want to use it&quot; to &quot;I&#39;m \n&gt; using it&quot;.  I&#39;m not concerned here with how people find a \n&gt; service exists to begin with, that&#39;s definitely important, \n&gt; but not relevant or specific to REST.  If someone has a need \n&gt; to include charts in their blog, and they found out Google \n&gt; Charts makes that possible, through whatever channel, what do \n&gt; they need for the next step?\n\nI am also concerned with going from &quot;I know I want to use it&quot; to &quot;I&#39;m using\nit.&quot;; actually, that&#39;s my main concern.  If someone can discover it then\nconstruct a URL to see it in the browser then use curl or similar to use it,\nthey are more likely to use it than if it takes them writing code that first\ngets the URL then uses the header or content information to get other URLs.\nOf course if mainstream tools (i.e browsers) did this for them, my point\nwould be moot, but currently they don&#39;t.\n\n&gt; \n&gt; &gt; &gt; &gt; &gt; The problem with WSDL, and from what I&#39;ve seen also WADL, is \n&gt; &gt; &gt; &gt; &gt; that neither one provides a map.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; WSDL and WADL are two orders of magnitude more \n&gt; complexity than any \n&gt; &gt; &gt; &gt; occupational programmer will ever attempt.\n&gt; &gt; &gt;\n&gt; &gt; &gt; The WS-* people will beg to differ, a lot of companies \n&gt; are pursing \n&gt; &gt; &gt; exactly that market with visual tools that alleviate the \n&gt; cognitive \n&gt; &gt; &gt; workload and designed to appeal to people who can&#39;t program their \n&gt; &gt; &gt; way out of a for loop.\n&gt; &gt;\n&gt; &gt; Jeesh!  Those tools you mention are for *Professional programmers*, \n&gt; &gt; not people whose job titles do not contain the words \n&gt; &quot;Programmer&quot; or &quot;Developer&quot;\n&gt; &gt; but who could gain benefit in their job from being able to easily \n&gt; &gt; interact with REST-based services; mashups for example.  You tell \n&gt; &gt; those people they are programmers and they will scoff at you, many \n&gt; &gt; feeling somewhat offended, but those same people need to do some of \n&gt; &gt; the same work that programmers need to do.\n&gt; \n&gt; The WS-* landscape is not all stacks and stubs.\n&gt; \n&gt; I know a lot of companies who put their weight behind this \n&gt; space because of a very simple value proposition.  Let&#39;s make \n&gt; tools that ordinary people can use.  You can make a great \n&gt; tool for business people to control how orders are \n&gt; processed,or create dashboards with KPI, without having to \n&gt; know anything about programming.  These tools can work at \n&gt; their level of understanding, metaphors and skills, be more \n&gt; like Excel and nothing like Eclipse.\n\nGive me an example of such tools that ordinary business people seek out.\nOh, and tools that don&#39;t require a multi-thousand dollar entry fee because\n&gt;90% of business people (i.e. smaller businesses) won&#39;t ever go there.\n\n&gt; Which happens if you allow small startups, system integrators \n&gt; and IT to play in this space.  But here&#39;s the thing, you can \n&gt; build and sell such a wonderful tool for helping you manage \n&gt; order, only if you don&#39;t have to build and sell the order \n&gt; management system along with it.\n&gt; Doing the later puts you in competition with SAP or any of \n&gt; the other established players.  So you want to build \n&gt; something that can use an existing SAP (or insert your \n&gt; favorite) system.  SAP uses their proprietary RFC protocol; \n&gt; if you also need to integrate with Siebel, that&#39;s another \n&gt; proprietary protocol; PeopleSoft have their own, and so \n&gt; forth.  So now you have an EAI problem to solve, which is \n&gt; expensive to develop, and licensing one will shrink your \n&gt; market and eat your profits.\n&gt; \n&gt; Not so if all the plumbing was talking one language.  So \n&gt; let&#39;s say you build a wonderful tool that lets business \n&gt; people customize how orders are entered into the system, at \n&gt; the level of abstraction they understand, and the engine \n&gt; (which they never see) uses XForms to produce XML which gets \n&gt; wrapped in a SOAP envelope and sent to a known port, which \n&gt; ends up being an IDoc function in SAP R/3, and you&#39;ve got EDI.\n\nOkay, with that we are clearly in two different worlds.  I&#39;m looking to\nempower the people who have websites and use Quickbooks, not the people who\nuse SAP or Siebel; they can fend for their themselves with their IT teams.\n\n&gt; And that is appealing to a lot of companies who&#39;s sole \n&gt; purpose is to cater to people who don&#39;t care to program, \n&gt; intentionally or accidentally.  Those products are not sold \n&gt; because of their WS-* capabilities, end-users and buyers \n&gt; don&#39;t care for that, they&#39;re sold because they&#39;re possible \n&gt; and hit the right price point.\n\nI&#39;m also interested in open standards on open-source, not in solutions that\nrequire some Enterprise Software company to first extract multiple pounds of\nflesh.\n\n&gt; The best thing you can do is give people tools that just \n&gt; solves the problem for them. If I want to add a del.icio.us \n&gt; widget on my blog, I don&#39;t want to see the JavaScript code \n&gt; and hack it to work against my account.  I go to the page \n&gt; which lets me configure it, and spits one one line of code I \n&gt; plant in my template, without having to understand how it \n&gt; works.  It might be putting action in the URL, or using GET \n&gt; to update state, or carrying the messages over SOAP.  If it \n&gt; just works, do I care?\n\nUh, that&#39;s similar to what I&#39;ve been saying.  But there is a difference\nbetween &quot;Complexity is okay because tools solve all the problems&quot; to &quot;Let&#39;s\neliminate complexity so that tools become simple and ubiqutious.&quot;  Tools do\nnot solve all problems, tools only make simple things that much more\nappropriate.\n\n&gt; If I provide people with an online tool they can use to \n&gt; customize a script, I&#39;ll use forms and links and all other \n&gt; good things, and it will be HATEOAS.  The tool, but the \n&gt; script doesn&#39;t have to be.  I&#39;m talking about the script \n&gt; here.  I think it matters indirectly, if it&#39;s cheap to do and \n&gt; resistent to change, you&#39;ll see more tools developed, and the \n&gt; more (and better) tools you have, the less people (myself\n&gt; included) have to bother programming.\n\nAgain, that&#39;s what I&#39;m trying to say except that you building a website to\ndo it is not an answer. Not everybody is going to go to your website to\nprocess web services.  The answer is a standard way (or a few standard ways)\nto interact with HATEOAS such that open-source tools will be developed and\nbrowsers will incorporate.  And I completely want to see that; Alan Dean&#39;s\nDSD is a good start.  Until then, HATEOAS is too high a barrier for most\npeople (who are accidental programmers) to hurdle and thus there is very\nreal benefit to publishing direct URL interfaces.\n\n&gt; If I&#39;m telling you that http://travels/{flight \n&gt; number}/arrival provides the current arrival time, then I \n&gt; just provided you with a pre-defined, finite (size 1) list of \n&gt; the things my service provides.\n\nAh, but that&#39;s not what you said earlier.  Earlier you said you could\nprovide all the needed URLs in advance. But whatever.\n\n&gt; That&#39;s something I can spec, so other people can build \n&gt; clients to get the current arrival time on any given flight, \n&gt; widgets that let you track a particular flight, etc.\n\nAnd that&#39;s what I advocate.  But this thread between us started by you\nsaying that publishing a URI Template was a bad idea because people would be\ntempted to hardcode yet now you are saying exactly what I&#39;ve been saying.\n\n&gt; I think we were in agreement all along that #2 deviates from \n&gt; the pure HATEOAS model, and is the better choice for the \n&gt; Goolge Chart API, or at least I thought that way.  Just that \n&gt; I used map as analogy precisely for things like the Google \n&gt; Chart API, and you misunderstood my usage of maps to not be \n&gt; about things like the Google Charts API.\n\nOkay, you have once again confused me.  I saw #2 as pure HATEOAS and was\nsaying it was impractical in many cases.\n\n&gt; \n&gt; &quot;With that in mind, we&#39;re announcing the rollout of a new API server:\n&gt; api.del.icio.us. Everything passed back and forth from the \n&gt; machine will be done over SSL. You will have to do a bit of \n&gt; URL rewriting, and we apologize for that inconvenience, but \n&gt; it will be consistent across all the API calls&quot;\n&gt; \n&gt; http://blog.delicious.com/blog/2006/05/feel_secure.html\n\nLOL!  The change was to incorporate SSL; the URL path did not change!  All\nclient code that didn&#39;t have to support SSL would need to be changed anyway,\nand hardcoded clients that provided their own http vs. https handling in\nadvance would all have been okay.  This is a non-example as far as I&#39;m\nconcerned.\n\n&gt; &quot;The consequence of this is that pretty soon many Flash based \n&gt; Flickr widgets that use the old urls will probably stop \n&gt; working until they have been updated to the new api \n&gt; structure. So if you are a user you should check out the \n&gt; pages where you downloaded your widget originally and see if \n&gt; the developer has already updated it.&quot;\n&gt; \n&gt; http://www.quasimondo.com/archives/000630.php\n\nThat was an unnecessary change on the part of Flickr; they could have\nmaintained legacy services at the old location but choose not to. Further,\ncreating an api subdomain up front, which is an easily known best practice\ncan avoid that problem.\n\n&gt; Just a couple of examples, more can be found here:\n&gt; http://www.google.com/search?q={service_name}+api+change\n\nI googled both of these and didn&#39;t find anything really else that dealt with\nAPI change based on URLs (though I know I wasn&#39;t exhaustive.):\n\n\thttp://www.google.com/search?q=api+change\n\thttp://www.google.com/search?q=url+api+change\n\nBut what I did find were references to API changes that broke things that\nhad nothing to do with changed URLs which brings up a point that HATEOAS\nadvocates conveniently choose to never mention; even if your URLs are served\nby a single entry point your API still breaks if the conceptual model of\nyour service changes.  Since there is no standard way for returned hypertext\ndocuments that provide the URLs to use by web services, we haven&#39;t\ncollectively realized how the problem just gets moved upstream.  \n\nFor example, let&#39;s assume I have an RESTful HATEOAS api for a blog and I\nhave an RDF doc that defines the services available at\nhttp://api.example.com.  It contains information that my client code must\nknow how to process such that there is some way to get the author&#39;s email\naddress. So I write a client to pull down the RDF and look for the\n&quot;author/email&quot;, dereference that URL, and all is good.\n\nHowever, then the domain owner at example.com decides to allow multiple blog\nauthors but that changes the concepts for their API so they change their RDF\ndocument to contain multiple authors hence multiple emails, i.e.\n&quot;authors/{author}/email.&quot;  But the problem is, my client that uses their API\nto get the author&#39;s email and that I wrote to be faithful to HATEOAS because\nI was a good RESTafarian doesn&#39;t work anymore because the concept of\n&quot;author/email&quot; is no longer defined for the multi-author blog. All of a\nsudden I feel cheated and loose my RESTful faith because the gospel of REST\npreached that if I simply followed HATEOAS I would be granted the promised\nland of never having my client break (sorry for the melodrama, but that\nmetaphor was so much fun to devise. :)\n\nThe reality is that a client has concepts that it understands and if your\nAPI changes those concepts and does not provide legacy support no amount of\nshielding yourself from URL changes is going to matter. Further, the same\ntechniques that can be used to mitigate the problems that result from\nchanges in concepts (i.e. such as designating one blog author as primary so\ntheir email would be served to legacy clients) can be used to mitigate\nproblems with URL path changes.  \n\nThe only real problem I see is that of changing schemes and that of changing\ndomains which is what your two examples illustrated. Since those are two\nknown and finite problems, why not address those in clients rather than\nrequiring all URLs to deal with the conceptual, programmatic and execution\noverhead of first having to first traverse a representation from an entry\npoint URL before calling a service based on URL construction?  IOW, why not\ndefine web service URLs as {scheme}://{domain}/{path-and-params} and\ninstruct callers to support both http and https in advance and incorporate\nan easy way to change the domain in their client code but allow them to\nhardcode path and parameters?  After that I don&#39;t see a lot of reason why\nyou can&#39;t maintain a reasonably consistent URL structure, some of which may\nbe legacy; is the protocol and domains that are the most problematic and\naccordinate to the URI spec, those aspects are not opaque.  From my\nperspective that solves 99% of the situations that it seems to me that\nHATEOAS was envisioned to solve but with much less burden on the client\ndeveloper.\n\n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org\nhttp://atlanta-web.org \n\n\n\n"}}