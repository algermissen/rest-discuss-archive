{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"y-02Mlkrl8QpVmrhyG44tN2Ef0hVQzzI9YfiklB1neYBchKQkpygTEVauzE_2DT5_9temF2rr8TqmJHzjHinXeWZ32Usqg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Opacity Reconsidered","postDate":"1015459885","msgId":876,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODZCMDJELjcyRDZEQzI5QHByZXNjb2QubmV0Pg==","referencesHeader":"PDIwMDIwMzA2MjI0OS5SQUEzMDQ4MEBtYXJrYmFrZXIuY2E+IDwzQzg2QTFCRS45RjBEQTQ1REBqdW1wLm5ldD4gPDNDODZBNEJBLkVFMzZDMzEyQHByZXNjb2QubmV0PiA8M0M4NkFDMDcuRjMxNEIyNjlAanVtcC5uZXQ+"},"prevInTopic":875,"nextInTopic":877,"prevInTime":875,"nextInTime":877,"topicId":864,"numMessagesInTopic":29,"msgSnippet":"... Geez, just link it! Use a  tag in HTML if you want something simple. ... Setting up the conventions in a machine readable form will be more work than","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 00:14:21 -0000\r\nReceived: (qmail 16216 invoked from network); 7 Mar 2002 00:14:09 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m10.grp.snv.yahoo.com with QMQP; 7 Mar 2002 00:14:09 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 7 Mar 2002 00:14:08 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g270E2b10464\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 6 Mar 2002 16:14:02 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g270E1L30483\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 6 Mar 2002 16:14:01 -0800\r\nMessage-ID: &lt;3C86B02D.72D6DC29@...&gt;\r\nDate: Wed, 06 Mar 2002 16:11:25 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Opacity Reconsidered\r\nReferences: &lt;200203062249.RAA30480@...&gt; &lt;3C86A1BE.9F0DA45D@...&gt; &lt;3C86A4BA.EE36C312@...&gt; &lt;3C86AC07.F314B269@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt;...\n&gt; \n&gt; You&#39;re not.  You&#39;re defining grammatical conventions on already-existing names in\n&gt; the same manner that you specify other sorts of things in markup.  It&#39;s not an\n&gt; either-or, it&#39;s a both-and.  There are things that the name-based mechanism\n&gt; allows which can&#39;t be done via markup topology...  consider a Web crawler that\n&gt; simply wants to crawl across every available page on my site --- *including the\n&gt; one which isn&#39;t linked to by any other page.*  \n\nGeez, just link it! Use a &lt;link&gt; tag in HTML if you want something\nsimple.\n\n&gt; ... Name-based conventions *may* allow\n&gt; you to find that object.  With markup topology, you&#39;ll never find it.\n\nSetting up the conventions in a machine readable form will be more work\nthan setting up the link.\n\n&gt;...\n&gt; &gt; Hierarchical names are necessarily hosted from\n&gt; &gt; the same machine (or at least there must be a redirect on the same\n&gt; &gt; machine). That&#39;s why the web is different than a file system. (I added\n&gt; &gt; this point to the Wiki also)\n&gt; \n&gt; This is baloney, too --- but again a commonly offered argument.  There&#39;s\n&gt; absolutely nothing that says that distributed filesystems cannot be multi-rooted\n&gt; and have global names.  Indeed, in a stunning demonstration of the ToII, the SMB\n&gt; / CIFS filesystem&#39;s names (UNC names) and URIs look so much alike that *a trivial\n&gt; encoding of UNC names as URI is possible just by replacing &#39;&#92;&#39; with &#39;/&#39;.\n\n\nYou say its baloney but you haven&#39;t shown me how I can serve\nhttp://www.myprocesses.com/proc/5323/status from\nhttp://www.yourprocesses.com. I&#39;d have to set up an HTTP redirect which\nis expensive both from a maintenance and a performance point of view.\nIt&#39;s cheap in a standard file system.\n\n&gt;...\n&gt; Possibly.  Or perhaps its the lack of familiarity on the part of others of\n&gt; current filesystem research and their relatively greater comfort level with\n&gt; markup technologies that causes them to (a) see nonexistent limitations and\n&gt; problems with semantically-rich naming schemes and (b) seek to compensate for\n&gt; this with markup technologies.  Which is it?  I don&#39;t know, that&#39;s what I&#39;m\n&gt; trying to find out.  I&#39;ve floated back and forth between these two communities\n&gt; for a long time, and I prima facie the Opacity Principle seems just as silly to\n&gt; me as the filesystem guys&#39; perpetual insistence on block-level IO and caching.\n\nDifferent scale problems have different performance characteristics. If\nfile system guys tell me that block-level IO is required to get the\nperformance they need then I&#39;ll believe them until I have reason to\nbelieve otherwise.\n\n&gt; My investigation of these issues is driven by familiarity with the work of\n&gt; Michael McClennen, Stu Sechrest, Hans Reiser, Bal Krishnamurthy, the Plan 9 guys,\n&gt; and others who have at various times in the past decade worked on enriching the\n&gt; semantics of file naming.  If you&#39;re arguing that the whole endeavor is\n&gt; worthless, you&#39;re indirectly arguing with some very smart guys.  Indeed, you&#39;re\n&gt; telling Rob Pike, Dave Presotta, Ken Trickey, and some other very smart guys that\n&gt; they&#39;ve wasted most of their careers.  \n\nOne way of looking at it is that the file system has different\nrequirements, especially when it comes to performance and user\ninterface. Note that the file system names are a primary user interface\nto information navigation, even on GUI-centric platforms. URIs are at\nbest a secondary or tertiary user interface compared to markup and\nbrowser controls.\n\nAnother way of looking at it is that the semantic web could make a lot\nof that work obsolete if people started navigating by something other\nthan names. Whoa! Surfing the web in rdfsh or xpathsh...there&#39;s an\ninteresting idea.\n\n&gt; ... If, on the other hand, you criticize the\n&gt; Opacity Principle, you&#39;re just telling Tim that he might have overstated a\n&gt; particular point and telling the rest of us to lighten up and think about how we\n&gt; interpret those axioms.\n\nThe opacity principle is important precisely because URIs are so human\nreadable and people feel that when they model URIs they are modeling the\napplication. But when they do that they generally aren&#39;t taking into\naccount the indirection and discoverability issues.\n\nYes, we could build a parallel system that makes names more discoverable\nand we could use HTTP redirects for indirection. But *to what end*? I\nthink you&#39;ll reduce the human readability of URIs if you start turning\nthem into code objects deconstructed by programs. IMO, the opacity\nprinciple works well both in practice and in theory.\n\n Paul Prescod\n\n"}}