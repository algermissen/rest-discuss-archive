{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"JB8cob-uPkVJEDisUFLx1nQ0kFLJsE2Nfi9dAsv6nAHo_9dGCzAgB0tIa0tJSITnpGfeg2ZUu5-tKdXurtYj_sgbCPtQVITFyyGEmPsZTVxDLQ_ohKT72KJ8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST pop quiz","postDate":"1281020714","msgId":16122,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrbjhPdXdtZGNSLUt4d2Z1eEJGazM0T2szY0FWLTVwb2daUkNkZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTAwODA1MDg0MTM5LjFkYjE2MDQzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDIwMTAwODA0MTY0MDA0LjQwZGQyOTAxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gCTwyMzVFRDM0QS1BNTMxLTQzMDYtODZGNC0xMkU3QzZGOTQzOTBAbWFjLmNvbT4gPDIwMTAwODA1MDMzNjM3LmQ2MDgwZDViLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gCTwzMTdERUFERi1GNThCLTQ0NTItOEEzNC1ENjU2QTg3RURCNTVAbWFjLmNvbT4gPDIwMTAwODA1MDQxNjAyLjY5MjcwYjAwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gCTw5Q0FFMTA5NC03NDgxLTQzNkYtQTY0RC05RjE3OTJGNzg5QkJAbWFjLmNvbT4gPEFBTkxrVGk9RFk1THUxbmotN2J0V3pOQWltQVo9TjZPTUxMM1MxRGpVLWt0VEBtYWlsLmdtYWlsLmNvbT4gCTwyMDEwMDgwNTA1NDAxMC5mZmIxNDk1ZS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+IDxBQU5Ma1Rpa0FqZTJRRDBTYXdpZz1qKzFZQ3RuWXFMd2JlMEVwRTg0NnM1a2dAbWFpbC5nbWFpbC5jb20+IAk8QUFOTGtUaW1pZXZmZnRFZGk0Ni1oQU0xSC1zcEZaalUtOGtKVzdQZXBFaXMyQG1haWwuZ21haWwuY29tPiAJPDVBQjZDMURCLTYyNTktNEIyOS05OTI2LUI3MUNGNzQ2NjIzN0BtYWMuY29tPiA8MjAxMDA4MDUwODEzMzcuZjU0N2YxMjIuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiAJPEFBTkxrVGk9ZTQtRFI9eVhBNlhGdG1ldkIrMytmaXprblZ6eEJkR0JoT19xSEBtYWlsLmdtYWlsLmNvbT4gCTwyMDEwMDgwNTA4NDEzOS4xZGIxNjA0My5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":16121,"nextInTopic":16123,"prevInTime":16121,"nextInTime":16123,"topicId":16086,"numMessagesInTopic":68,"msgSnippet":"But you will assume !(200|304) as being a exception or a false value? For instance, I m a big fan of OSGi, so let s say I have my site or service developed in","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21424 invoked from network); 5 Aug 2010 15:05:34 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m16.grp.re1.yahoo.com with QMQP; 5 Aug 2010 15:05:34 -0000\r\nX-Received: from unknown (HELO mail-qy0-f175.google.com) (209.85.216.175)\n  by mta2.grp.re1.yahoo.com with SMTP; 5 Aug 2010 15:05:34 -0000\r\nX-Received: by qyk11 with SMTP id 11so3333144qyk.13\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 05 Aug 2010 08:05:34 -0700 (PDT)\r\nX-Received: by 10.229.126.222 with SMTP id d30mr3488510qcs.223.1281020734186; \n\tThu, 05 Aug 2010 08:05:34 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.14.26 with HTTP; Thu, 5 Aug 2010 08:05:14 -0700 (PDT)\r\nIn-Reply-To: &lt;20100805084139.1db16043.eric@...&gt;\r\nReferences: &lt;20100804164004.40dd2901.eric@...&gt; \n\t&lt;235ED34A-A531-4306-86F4-12E7C6F94390@...&gt; &lt;20100805033637.d6080d5b.eric@...&gt; \n\t&lt;317DEADF-F58B-4452-8A34-D656A87EDB55@...&gt; &lt;20100805041602.69270b00.eric@...&gt; \n\t&lt;9CAE1094-7481-436F-A64D-9F1792F789BB@...&gt; &lt;AANLkTi=DY5Lu1nj-7btWzNAimAZ=N6OMLL3S1DjU-ktT@...&gt; \n\t&lt;20100805054010.ffb1495e.eric@...&gt; &lt;AANLkTikAje2QD0Sawig=j+1YCtnYqLwbe0EpE846s5kg@...&gt; \n\t&lt;AANLkTimievfftEdi46-hAM1H-spFZjU-8kJW7PepEis2@...&gt; \n\t&lt;5AB6C1DB-6259-4B29-9926-B71CF7466237@...&gt; &lt;20100805081337.f547f122.eric@...&gt; \n\t&lt;AANLkTi=e4-DR=yXA6XFtmevB+3+fizknVzxBdGBhO_qH@...&gt; \n\t&lt;20100805084139.1db16043.eric@...&gt;\r\nDate: Thu, 5 Aug 2010 16:05:14 +0100\r\nMessage-ID: &lt;AANLkTikn8OuwmdcR-KxwfuxBFk34Ok3cAV-5pogZRCdg@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...&gt;, \n\tmike amundsen &lt;mamund@...&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd66eaccfa5f6048d14e1d6\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] REST pop quiz\r\nX-Yahoo-Group-Post: member; u=279478415; y=pu1B09gbQ4XSexB_lo6Q_wZI18Vup-JwjpTfUXSGubslCw\r\nX-Yahoo-Profile: amsmota\r\n\r\n\r\n--000e0cd66eaccfa5f6048d14e1d6\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nBut you will assume !(200|304) as being a exception or a false value? For\ninstance, I&#39;m a big fan of OSGi, so let&#39;s say I have my site or service\ndeveloped in that. I have\n\n/mysite/date?iso=2008-02-29 -&gt; 200\n/mysite/date?iso=2010-02-29 -&gt; 404 [or !(200|304)]\n\nso you&#39;re application assume true for &quot;2008 is leap year&quot; and false for\n&quot;2010 is leap year&quot;.\n\nNo tomorrow, I shut down my module that corresponds to the resource\n/mysite/date, while the rest of /mysite is working as usuall.\n\n /mysite/date?iso=2008-02-29 -&gt; 404\n/mysite/date?iso=2010-02-29 -&gt; 404\n\nWhat do you make of that? More generally, how do you distinguish a 404\nmeaning between it&#39;s significance in HTTP - not found - and your specific\napplication assigned meaning - not a leap year?\n\nIsn&#39;t it much more simple, and unanmbiguous, just to return a body with a\ntrue/false, and leave !(200|304) for what they really mean, and let decide\nthe client what to do with those exception? (try again later, change service\nprovider, etc...)\n\nWith the advantage that you&#39;re nout bounding your implementation to\nprotocol-specific codes...\n\n\n On 5 Aug 2010 15:41, &quot;Eric J. Bowman&quot; &lt;eric@...&gt; wrote:\n\n mike amundsen wrote:\n&gt;\n&gt; 1 - if you write client code like that assumes bool=false when server\n&gt; ret...\nWhen the client is dealing with the response code, it should first\ncheck for (200|304).  The &#39;else&#39; can be as complicated as you need it\nto be, but I recommend defaulting to mean false, if your specific traps\nfor, say, 5xx fail.\n\nCheck for success, then handle exceptions.  Don&#39;t check for failure,\nthen assume !failure = success.  I rarely give better, or more hard-\nearned, advice.  Roy has given the same advice about coding robust\nclients -- too late to save me from myself, though.\n\n\n&gt;\n&gt; 2 - if you write server code that does not allow clients to negotiate\n&gt; for response bodies (e....\nWho says you can&#39;t negotiate?  If you&#39;ll be patient until I post my\nnext example, you can plainly see that /date connegs between\napplication/xhtml+xml and application/json.  HEAD requests are just the\nresults of the negotiation, sans body.\n\nBut, why on Earth would anyone want to bring conneg into the equation\nto do a boolean check based on whether a resource exists?  Just do a\nHEAD with Accept: */* and be done with it.\n\n-Eric\n\r\n--000e0cd66eaccfa5f6048d14e1d6\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div&gt;But you will assume !(200|304) as being a exception or a false value? =\r\nFor instance, I&#39;m a big fan of OSGi, so let&#39;s say I have my site or=\r\n service developed in that. I have&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;/mysite/date?i=\r\nso=3D2008-02-29 -&gt; 200&lt;/div&gt;\n&lt;div&gt;/mysite/date?iso=3D2010-02-29 -&gt; 40=\r\n4 [or !(200|304)]&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;so you&#39;re application assum=\r\ne true for &quot;2008 is leap year&quot; and false for &quot;2010 is leap y=\r\near&quot;.&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;No tomorrow, I shut down my module tha=\r\nt corresponds to the resource /mysite/date, while the rest of /mysite is wo=\r\nrking as usuall.&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;\n&lt;div&gt;/mysite/date?iso=3D2008-02=\r\n-29 -&gt; 404&lt;/div&gt;\n&lt;div&gt;/mysite/date?iso=3D2010-02-29 -&gt; 404&lt;/div&gt;\n&lt;div=\r\n&gt;=A0&lt;/div&gt;\n&lt;div&gt;What do you make of that? More generally, how do you distin=\r\nguish a 404 meaning between it&#39;s significance in HTTP - not found - and=\r\n your specific application assigned meaning - not a leap year?&lt;/div&gt;\n&lt;div&gt;=\r\n=A0&lt;/div&gt;\n&lt;div&gt;Isn&#39;t it much more simple, and unanmbiguous, just to ret=\r\nurn a body with a true/false, and leave !(200|304) for what they really mea=\r\nn, and let decide the client what to do with those exception? (try again la=\r\nter, change service provider, etc...)&lt;/div&gt;\n\n&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;Wit=\r\nh the advantage that you&#39;re nout bounding your implementation to protoc=\r\nol-specific codes...&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;\n&lt;p&gt;=A0On 5 Aug 2010 15:41, &quot;=\r\nEric J. Bowman&quot; &lt;&lt;a href=3D&quot;mailto:eric@...&quot; target=3D=\r\n&quot;_blank&quot;&gt;eric@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&lt;br&gt;&lt;/p&gt;\n&lt;blockquote type=\r\n=3D&quot;cite&quot;&gt;\n&lt;p&gt;&lt;font color=3D&quot;#500050&quot;&gt;mike amundsen wrote:&lt;br&gt;&gt;&lt;br&gt;&gt; =\r\n1 - if you write client code like that assumes bool=3Dfalse when server&lt;br&gt;=\r\n&gt; ret...&lt;/font&gt;&lt;/p&gt;When the client is dealing with the response code, it=\r\n should first&lt;br&gt;\n\ncheck for (200|304). =A0The &#39;else&#39; can be as com=\r\nplicated as you need it&lt;br&gt;to be, but I recommend defaulting to mean false,=\r\n if your specific traps&lt;br&gt;for, say, 5xx fail.&lt;br&gt;&lt;br&gt;Check for success, th=\r\nen handle exceptions. =A0Don&#39;t check for failure,&lt;br&gt;\n\nthen assume !fai=\r\nlure =3D success. =A0I rarely give better, or more hard-&lt;br&gt;earned, advice.=\r\n =A0Roy has given the same advice about coding robust&lt;br&gt;clients -- too lat=\r\ne to save me from myself, though.&lt;br&gt;\n&lt;p&gt;&lt;font color=3D&quot;#500050&quot;&gt;&lt;br&gt;&gt;&lt;b=\r\nr&gt;&gt; 2 - if you write server code that does not allow clients to negotiat=\r\ne&lt;br&gt;&gt; for response bodies (e....&lt;/font&gt;&lt;/p&gt;Who says you can&#39;t negot=\r\niate? =A0If you&#39;ll be patient until I post my&lt;br&gt;\n\nnext example, you ca=\r\nn plainly see that /date connegs between&lt;br&gt;application/xhtml+xml and appli=\r\ncation/json. =A0HEAD requests are just the&lt;br&gt;results of the negotiation, s=\r\nans body.&lt;br&gt;&lt;br&gt;But, why on Earth would anyone want to bring conneg into t=\r\nhe equation&lt;br&gt;\n\nto do a boolean check based on whether a resource exists? =\r\n=A0Just do a&lt;br&gt;HEAD with Accept: */* and be done with it.&lt;br&gt;&lt;font color=\r\n=3D&quot;#888888&quot;&gt;&lt;br&gt;-Eric&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;\n\r\n--000e0cd66eaccfa5f6048d14e1d6--\r\n\n"}}