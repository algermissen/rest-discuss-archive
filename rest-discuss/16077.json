{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter","from":"&quot;Peter&quot; &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"1IAObdKL9yq5OL8IitMcUHfT2ULRCC0diN9a06bolAorOFx5tHa2xb7SHRoAryT7Fptn2by1W3He4SQkZhet6vj7p2jLTeo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Google proposes RPC style APIs over REST","postDate":"1280688476","msgId":16077,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGkzNGZncythazJwQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDEyODA2ODUxMDUuMTQ5MTUuNDQuY2FtZWxAZGVob3JhLWxhcHRvcD4="},"prevInTopic":16075,"nextInTopic":16078,"prevInTime":16076,"nextInTime":16078,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... I agree.  I m not sure I d even concede that this approach is in any way unRESTful.  As long as the document(s) the server publishes (the WADL *and* the","rawEmail":"Return-Path: &lt;pkeane@...&gt;\r\nX-Sender: pkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 92020 invoked from network); 1 Aug 2010 18:49:52 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m3.grp.sp2.yahoo.com with QMQP; 1 Aug 2010 18:49:52 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta2.grp.sp2.yahoo.com with SMTP; 1 Aug 2010 18:49:52 -0000\r\nX-Received: from [69.147.65.173] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 01 Aug 2010 18:47:57 -0000\r\nX-Received: from [98.137.34.33] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 01 Aug 2010 18:47:57 -0000\r\nDate: Sun, 01 Aug 2010 18:47:56 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i34fgs+ak2p@...&gt;\r\nIn-Reply-To: &lt;1280685105.14915.44.camel@dehora-laptop&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Peter&quot; &lt;pkeane@...&gt;\r\nSubject: Re: Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=11652427; y=PZT1rNbif4WvS76hixNO0Z6oMj77Oej_OzL_04xUhb4XiTLNSsZJVyLbwQ\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Bill de h=EF=BF=BDra &lt;bill@...&gt; wrot=\r\ne:\n&gt;\n&gt; On Sun, 2010-08-01 at 04:10 +0000, wahbedahbe wrote:\n&gt; &gt; \n&gt; &gt; On fat=\r\n formats -- I hear you but at the same time, the SIP/IMS\n&gt; &gt; standards that=\r\n are poised for LTE make use of some fairly fat formats\n&gt; &gt; (e.g. PIDF for =\r\npresence etc). The solution there seems to be\n&gt; &gt; conpression (e.g. compres=\r\nsed bodies and SigComp, etc.) and there&#39;s a\n&gt; &gt; lot of momentum there -- it=\r\n doesn&#39;t seem to be holding things up. Is\n&gt; &gt; this really a barrier to REST=\r\n?\n&gt; \n&gt; It&#39;s not so much a barrier to REST as inclining people towards\n&gt; lev=\r\neraging relevant aspects of RPC technology, RPC having a history of\n&gt; compa=\r\nct wire formats usually in conjunction with IDLs. As per some other\n&gt; mails=\r\n I&#39;ve sent, I think it&#39;s possible to obtain reasonable tradeoffs\n&gt; here and=\r\n is worth investigating.\n&gt; \n&gt; I agree with your observation on the IMS/SIP =\r\nstandards family btw,\n&gt; except I&#39;m not sure industry momentum always transl=\r\nates into usefulness.\n&gt; They&#39;ve been around a long time now.\n&gt; \n&gt; &gt; On the =\r\ndiscovery doc -- are non-HTML, REST approaches really wasting\n&gt; &gt; that much=\r\n on traversal? e.g. There&#39;s not a lot of traversal in AtomPub\n&gt; &gt; compared =\r\nto an HTML-based web site. It seems that the wastefulness\n&gt; &gt; here it more =\r\nabout UX than something fundamental to HATEOAS. I would\n&gt; &gt; imagine that fo=\r\nr m2m REST you could optimize the traversal to the\n&gt; &gt; minimum interactions=\r\n required for the workflow no? Can an up-front\n&gt; &gt; discovery doc really mak=\r\ne it better? Even if you had say a URI\n&gt; &gt; template up front, you&#39;d likely =\r\nneed to &quot;traverse&quot; a few resources to\n&gt; &gt; get the parameter values needed t=\r\no make a request. If not, then I&#39;d\n&gt; &gt; imagine the first page of the servic=\r\ne would normally offer the\n&gt; &gt; link/form anyways. What am I missing?\n&gt; \n&gt; S=\r\nuppose you wanted to sh0ow a user&#39;s status as the common case for an\n&gt; appl=\r\nication Ux. The url for that status is obtained from a link in the\n&gt; user&#39;s=\r\n profile. It&#39;s not in the profile because it changes more\n&gt; frequently that=\r\n the other data and so would make the profile document\n&gt; non-cacheable etc.=\r\n By design you traverse from the profile to the\n&gt; status. This decouples cl=\r\nient and server assumptions at the cost of a\n&gt; HTTP req/res cycle. So there=\r\n&#39;s a tradeoff. Some developers would like to\n&gt; go direct to the status to a=\r\nvoid the hop. One way to do this is have the\n&gt; URLs prepared in advance. Th=\r\ne argument is that a way to balance these\n&gt; concerns is to allow the server=\r\n to publish a document that client can\n&gt; cache and from which the client ca=\r\nn pull the status url directly and so\n&gt; short circuit the traversal without=\r\n being very strongly coupled to the\n&gt; server&#39;s uri space. This kind of trad=\r\neoff seems reasonable to me, hence\n&gt; I don&#39;t understand the level of object=\r\nion in some quarters to approaches\n&gt; like WADL.\n\nI agree.  I&#39;m not sure I&#39;d=\r\n even concede that this approach is in any way &quot;unRESTful.&quot;  As long as the=\r\n document(s) the server publishes (the WADL *and* the status document) are =\r\nvisible/cacheable, etc. it&#39;s inline w/ REST principles.  I *do* agree that =\r\nit could be a slippery slope towards too-tight coupling, but that&#39;s not wha=\r\nt we are talking about here.  I particularly like a message from Roy F. on =\r\na closely related issue:\n\nOn Dec 19, 2007, at 3:52 AM, [...] wrote:\n&gt; URLs =\r\nare passed in\n&gt; hypertext URL construction from algorithms or other non-hyp=\r\nertext\n&gt; information like cookies is non-RESTful.\n&gt;\n\nThat&#39;s not even remote=\r\nly true.  If anything, REST encourages the\ncreation of URIs by construction=\r\n.  Forms, server-side imagemaps,\nisindex, and any form of code-on-demand al=\r\nl construct URIs\nthrough algorithms.\n\nThe important bit is that the algorit=\r\nhm is defined by the server\nand the resource remains accessible regardless =\r\nof how the URI\nwas calculated (i.e., the result of the algorithm is bookmar=\r\nkable).\n\n....Roy\n\n\n--peter keane\n\n\n\n\n\n\n\n\n\n&gt; \n&gt; Bill\n&gt;\n\n\n\n"}}