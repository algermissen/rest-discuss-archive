{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"bynpKX4VXvOM19IaVvfYYB9Xkivu5qPg_5LxE_WguT0JLOf30HL3tF6sfmabGMv6L4OgRi3Q1aqZPJYXRjeOfQ4SP8V1Ahg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Authorization and/or resource protection","postDate":"1264113897","msgId":14622,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMTIxMTQ0NHg3ZmE1OGIzM2k4YWU3ZTNjODAzOGUzNjJjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDkwQjI3OUY0LUJDMzItNEU5RS1CREU3LTJCM0YwQTNBNUVEM0B3ZWJiZXIubmFtZT4=","referencesHeader":"PGhqOTN0cStybDB1QGVHcm91cHMuY29tPgkgPDkwQjI3OUY0LUJDMzItNEU5RS1CREU3LTJCM0YwQTNBNUVEM0B3ZWJiZXIubmFtZT4="},"prevInTopic":14621,"nextInTopic":14663,"prevInTime":14621,"nextInTime":14623,"topicId":14618,"numMessagesInTopic":5,"msgSnippet":"The most effective way to handle authorization (not authentication) of resources over HTTP is to map access control to the resource URI + the HTTP Method for a","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 82742 invoked from network); 21 Jan 2010 22:44:59 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 21 Jan 2010 22:44:59 -0000\r\nX-Received: from unknown (HELO mail-fx0-f218.google.com) (209.85.220.218)\n  by mta2.grp.sp2.yahoo.com with SMTP; 21 Jan 2010 22:44:59 -0000\r\nX-Received: by fxm10 with SMTP id 10so649051fxm.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 21 Jan 2010 14:44:58 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.92.142 with SMTP id r14mr2076101fam.93.1264113897873; Thu, \n\t21 Jan 2010 14:44:57 -0800 (PST)\r\nIn-Reply-To: &lt;90B279F4-BC32-4E9E-BDE7-2B3F0A3A5ED3@...&gt;\r\nReferences: &lt;hj93tq+rl0u@...&gt;\n\t &lt;90B279F4-BC32-4E9E-BDE7-2B3F0A3A5ED3@...&gt;\r\nDate: Thu, 21 Jan 2010 17:44:57 -0500\r\nX-Google-Sender-Auth: bdba6aa41b4761f7\r\nMessage-ID: &lt;b548df651001211444x7fa58b33i8ae7e3c8038e362c@...&gt;\r\nTo: Jim Webber &lt;jim@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Authorization and/or resource protection\r\nX-Yahoo-Group-Post: member; u=69164307; y=R0lrBNMvw5BTLL9jqx7MqU3TFpymdXD7ruQT_sqxUoBn\r\nX-Yahoo-Profile: mamund\r\n\r\nThe most effective way to handle authorization (not authentication) of\nreso=\r\nurces over HTTP is to map access control to the resource URI + the\nHTTP Met=\r\nhod for a user (or group).\n\nI often use the following &quot;model&quot; (here in XML)=\r\n to express\nauthorization rights in HTTP apps:\n&lt;user id=3D&quot;user&quot;&gt;\n  &lt;access=\r\n href=3D&quot;/orders/&quot; action=3D&quot;GET,HEAD,OPTIONS&quot; /&gt;\n&lt;/user&gt;\n&lt;user id=3D&quot;manag=\r\ner&quot;&gt;\n  &lt;access href=3D&quot;/orders/&quot; action=3D&quot;GET,HEAD,OPTIONS,POST,PUT&quot; /&gt;\n&lt;/=\r\nuser&gt;\n&lt;user id=3D&quot;administrator&quot;&gt;\n  &lt;access href=3D&quot;/orders/&quot; action=3D&quot;GET=\r\n,HEAD,OPTIONS,POST,PUT,DELETE&quot; /&gt;\n&lt;/user&gt;\n\nTypical optimizations I employ a=\r\nre:\n&lt;access href=3D&quot;/orders/&quot; action=3D&quot;*&quot; /&gt; &lt;!-- all methods allowed --&gt;\n=\r\n&lt;access href=3D&quot;/orders/&quot; action=3D&quot;!&quot; /&gt; &lt;!-- no methods allowed --&gt;\n&lt;acce=\r\nss href=3D&quot;/*&quot; action=3D&quot;*&quot; /&gt; &lt;!-- all URIs, all methods (handy for\nsys-ad=\r\nmin role --&gt;\nRegular expressions come in handy here, too.\n\nI also optimize =\r\nthe &quot;user id&quot; to include either a username (possibly\nexpressed as an email =\r\naddress, FOAF URI, etc.) or groupname (users\nmapped to groups) and the use =\r\nof an &quot;owner&quot; moniker to allow owners\n(creators) unique access to a particu=\r\nlar resource where that makes\nsense.\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn =\r\nThu, Jan 21, 2010 at 16:46, Jim Webber &lt;jim@...&gt; wrote:\n&gt; Hi Peter,=\r\n\n&gt;\n&gt; Will&#39;s right when he says &quot;REST&quot; has nothing to with this. But there a=\r\nre regular ways of dealing with this using HTTP.\n&gt;\n&gt;&gt; - The price of a give=\r\nn order item should be &#39;readable&#39; by the &#39;creator&#39; of the order item while =\r\nan &#39;administrator&#39; should be able to update the price\n&gt;\n&gt; Using one of the =\r\nHTTP authentication mechanisms (or OpenID, OAuth even) the creator will hap=\r\npily receive 401 when applying some verbs (e.g. PUT, DELETE) to a resource =\r\n(e.g. pricing) but find they&#39;re get 200 OK responses to other verbs (e.g. G=\r\nET). The administrator might find they receive 200 OK responses to all of t=\r\nhose operations.\n&gt;\n&gt;&gt; - An collection of order states (not a separate resou=\r\nrce but part of the order) should be readable by the &#39;creator&#39;. An &#39;adminis=\r\ntrator&#39; should be able to add states\n&gt;\n&gt; How the order is projected onto th=\r\ne Web in terms of resources is an implementation decision. You might choose=\r\n to have the collection of order states physically written down on the same=\r\n piece of paper in your back end, but you could still happily project them =\r\nas different logical resources onto the Web. Hypermedia is your friend shou=\r\nld you want to link them together. Eg:\n&gt;\n&gt; Administrator: GET/order/1234\n&gt; =\r\n200 OK....\n&gt; &lt;order&gt;\n&gt; &lt;atom:link href=3D&quot;http://myservice/order/1234/state=\r\n&quot; rel=3D&quot;order-state&quot; type=3D&quot;application/x.ordering+xml&quot;/&gt;\n&gt; &lt;line-item&gt; .=\r\n.. &lt;/lineItem&gt;\n&gt; &lt;/order&gt;\n&gt;\n&gt; Creator: GET/order/1234\n&gt; 200 OK...\n&gt; &lt;order&gt;=\r\n\n&gt; &lt;line-item&gt; ... &lt;/lineItem&gt;\n&gt; &lt;/order&gt;\n&gt;\n&gt; Creator, after some creative =\r\nthought tries: GET http://myservice/order/1234/state\n&gt; 401 Unauthorized...\n=\r\n&gt;\n&gt; Nonetheless, administrators will have more chance of a 200 OK response =\r\nthan creators just as above.\n&gt;\n&gt; Does that help at all?\n&gt;\n&gt; Jim\n&gt;\n&gt; -------=\r\n-----------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}