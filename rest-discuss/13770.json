{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"jMI-9Kj6Tu_nTYr2F2742FKqnx5Uv2JUOtXmP1ef3l7h06dmm0IXHytWWMhSm1GXb8cDqGyIuezOnG7m7i5Jw06F5sW_oLkTUwq89A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful Cookies?","postDate":"1255039502","msgId":13770,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMDkxMDA4MTUwNXAzOWYyN2Q5MXJiYThlNmE0YTZiMmFkNzgxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRBQ0U1Q0Q3LjIwMzAyMDdAbWFpbC51dGV4YXMuZWR1Pg==","referencesHeader":"PGhhbDB2aSt1ZnZvQGVHcm91cHMuY29tPiA8NEFDRTVDRDcuMjAzMDIwN0BtYWlsLnV0ZXhhcy5lZHU+"},"prevInTopic":13768,"nextInTopic":13771,"prevInTime":13769,"nextInTime":13771,"topicId":13750,"numMessagesInTopic":9,"msgSnippet":"... If you are using the HTTP Authorization header (BASIC, DIGEST, whatever) for authentication, which seems to be a fairly common practice, you can use the","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96112 invoked from network); 8 Oct 2009 22:05:06 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m1.grp.re1.yahoo.com with QMQP; 8 Oct 2009 22:05:06 -0000\r\nX-Received: from unknown (HELO mail-qy0-f196.google.com) (209.85.221.196)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 22:05:05 -0000\r\nX-Received: by qyk34 with SMTP id 34so5442321qyk.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 08 Oct 2009 15:05:02 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.44.157 with SMTP id a29mr1870733qaf.1.1255039502726; Thu, \n\t08 Oct 2009 15:05:02 -0700 (PDT)\r\nIn-Reply-To: &lt;4ACE5CD7.2030207@...&gt;\r\nReferences: &lt;hal0vi+ufvo@...&gt; &lt;4ACE5CD7.2030207@...&gt;\r\nDate: Thu, 8 Oct 2009 15:05:02 -0700\r\nMessage-ID: &lt;f8b39ace0910081505p39f27d91rba8e6a4a6b2ad781@...&gt;\r\nTo: Peter Keane &lt;pkeane@...&gt;\r\nCc: groovepapa &lt;luke.crouch@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Re: RESTful Cookies?\r\nX-Yahoo-Group-Post: member; u=352334505; y=EGlewusXmOyTOq6Bs6DyBTdNjed0SEMwCFEdAw7XW8MVb66bvw4SCSIroQ\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\nOn Thu, Oct 8, 2009 at 2:42 PM, Peter Keane &lt;pkeane@...&gt; wrote:=\r\n\n&gt; One of the ways I have used cookies is to have the server set a cookie\n&gt;=\r\n that simply includes a &#39;username&#39; when a user authenticates with a site.\n&gt;=\r\n Since you cannot really be &#39;logged in&#39; to a stateless service, the\n&gt; usern=\r\name allows the client to make a separate request (using AJAX) for\n&gt; each pa=\r\nge allowing that page to be &quot;decorated&quot; with personalized data\n&gt; (allowing =\r\nthe undecorated page to be cacheable for all users). The\n&gt; username is used=\r\n in conjunction with a URI template (delivered with the\n&gt; HTML page itself)=\r\n. E.g., page is at http://example.com/events and URI\n&gt; template might be ht=\r\ntp://example.com/{username}/events.\n&gt;\n\nIf you are using the HTTP &quot;Authoriza=\r\ntion&quot; header (BASIC, DIGEST,\nwhatever) for authentication, which seems to b=\r\ne a fairly common\npractice, you can use the security token already being se=\r\nnt on that\nheader to provide the basis for personalization, without needing=\r\n a\ncookie.\n\nCraig McClanahan\n\n\n&gt; --peter keane\n&gt;\n&gt;\n&gt; groovepapa wrote:\n&gt;&gt;\n&gt;=\r\n&gt; I like to use cookies from javascript for things like preserving the\n&gt;&gt; v=\r\nalues of input boxes between requests. That seems like it&#39;s all\n&gt;&gt; client s=\r\ntate data anyway, so I&#39;ve never felt RESTless doing it. It&#39;s\n&gt;&gt; just persis=\r\nting the client-side (HTML) application state.\n&gt;&gt;\n&gt;&gt; -L\n&gt;&gt;\n&gt;&gt; --- In rest-d=\r\niscuss@yahoogroups.com\n&gt;&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt;, Nina Jel=\r\niazkova &lt;nina@...&gt; wrote:\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; Moore, Jonathan (CIM) wrote:\n&gt;&gt; &gt; =\r\n&gt; Nina Jeliazkova wrote:\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;&gt; Besides, REST does not encourages c=\r\nookies and sessions, meaning\n&gt;&gt; &gt; &gt;&gt; credentials or something derived from =\r\ncredentials should be sent\n&gt;&gt; &gt; &gt;&gt; on_every_ request.\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;=\r\n I&#39;m curious about this assertion, at least as it applies to\n&gt;&gt; cookies. Co=\r\nokies represent pieces of application state that are stored\n&gt;&gt; with the cli=\r\nent, and they get sent on every request (where domains\n&gt;&gt; apply). Why isn&#39;t=\r\n that RESTful?\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; Well, this is what REST gurus [1] are telling us=\r\n:\n&gt;&gt; &gt;\n&gt;&gt; &gt; /*&quot;The Trouble with Cookies*\n&gt;&gt; &gt; A web service that sends HTTP=\r\n cookies violates the principle of\n&gt;&gt; &gt; statelessness. In fact, it usually =\r\nviolates statelessness twice. It\n&gt;&gt; &gt; moves application state onto the serv=\r\ner even though it belongs on\n&gt;&gt; &gt; the client, and it stops clients from bei=\r\nng in charge of their own\n&gt;&gt; &gt; application state.&quot;\n&gt;&gt; &gt; ...\n&gt;&gt; &gt; OK, so coo=\r\nkies shouldn=E2=80=99t contain session IDs: that=E2=80=99s just an excuse\n&gt;=\r\n&gt; &gt; to keep application state on the server. What about cookies that\n&gt;&gt; &gt; r=\r\neally do contain application state? What if you serialize the\n&gt;&gt; &gt; actual s=\r\nession hash and send it as a cookie, instead of just sending\n&gt;&gt; &gt; a referen=\r\nce to a hash on the server?\n&gt;&gt; &gt; This can be RESTful, but it=E2=80=99s usua=\r\nlly not. The cookie standard says\n&gt;&gt; &gt; that the client can get rid of a coo=\r\nkie when it expires, or when the\n&gt;&gt; &gt; client terminates. This is a pretty b=\r\nig restriction on the client=E2=80=99s\n&gt;&gt; &gt; control over application state.=\r\n If you make 10 web requests and\n&gt;&gt; &gt; suddenly the server sends you a cooki=\r\ne, you have to start sending\n&gt;&gt; &gt; this cookie with your future requests. Yo=\r\nu can=E2=80=99t make those 10\n&gt;&gt; &gt; precookie requests unless you quit and s=\r\ntart over. To use a web\n&gt;&gt; &gt; browser analogy, your =E2=80=9CBack=E2=80 =A0b=\r\nutton is broken. You can=E2=80=99t put the\n&gt;&gt; &gt; application in any of the s=\r\ntates it was in before you got the cookie.\n&gt;&gt; &gt; ...\n&gt;&gt; &gt; The only RESTful u=\r\nse of cookies is one where the client is in charge\n&gt;&gt; &gt; of the cookie value=\r\n. The server can suggest values for a cookie\n&gt;&gt; &gt; using the Set-Cookie head=\r\ner, just like it can suggest links the\n&gt;&gt; &gt; client might want to follow, bu=\r\nt the client chooses what cookie to\n&gt;&gt; &gt; send just as it chooses what links=\r\n to follow. In some browser-based\n&gt;&gt; &gt; applications, cookies are created by=\r\n the client and never sent to\n&gt;&gt; &gt; the server. The cookie is just a conveni=\r\nent container for\n&gt;&gt; &gt; application state, which makes its way to the server=\r\n in\n&gt;&gt; &gt; representations and URIs. That=E2=80=99s a very RESTful use of coo=\r\nkies.&quot;\n&gt;&gt; &gt;\n&gt;&gt; &gt; /\n&gt;&gt; &gt;\n&gt;&gt; &gt; I hope the authors don&#39;t mind the long citatio=\r\nn .\n&gt;&gt; &gt;\n&gt;&gt; &gt; Best regards,\n&gt;&gt; &gt; Nina\n&gt;&gt; &gt;\n&gt;&gt; &gt; [1] Leonard Richardson and =\r\nSam Ruby, RESTful Web Services, O&#39;Reilly\n&gt;&gt; &gt; 2007, p.252\n&gt;&gt; &gt;\n&gt;&gt; &gt; &gt; (Noti=\r\nng that some cookies may contain more interesting information\n&gt;&gt; than JSESS=\r\nIONID, for example. I agree with an understand the general\n&gt;&gt; assessment th=\r\nat server-side session storage is not RESTful).\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt; Jon\n&gt;&gt; &gt; &gt; ..=\r\n......\n&gt;&gt; &gt; &gt; Jon Moore\n&gt;&gt; &gt; &gt; Comcast Interactive Media\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt;=\r\n &gt;\n&gt;&gt; &gt; &gt; -----Original Message-----\n&gt;&gt; &gt; &gt; From: rest-discuss@yahoogroups.=\r\ncom\n&gt;&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt; on behalf of Nina Jeliazkova=\r\n\n&gt;&gt; &gt; &gt; Sent: Thu 10/8/2009 10:53 AM\n&gt;&gt; &gt; &gt; To: Subbu Allamaraju\n&gt;&gt; &gt; &gt; Cc:=\r\n jeliazkova.nina@...; Rest List\n&gt;&gt; &gt; &gt; Subject: Re: [rest-discuss] composit=\r\nion of REST services\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt; Subbu Allamaraju wrote:\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;&gt; L=\r\nearning how to authenticate is no different from leaning about the\n&gt;&gt; &gt; &gt;&gt; =\r\nmedia types and formats.\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt; I don&#39;t mean to undermine the diff=\r\niculty here, but the problem does\n&gt;&gt; &gt; &gt;&gt; not change just because a URI bel=\r\nongs to a server different from the\n&gt;&gt; &gt; &gt;&gt; one that served the representat=\r\nion.\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt; Subbu\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt; The difficulty is not in the auth=\r\nentication itself, but with the\n&gt;&gt; &gt; &gt; federated authentication/authorizati=\r\non, encompassing multiple servers.\n&gt;&gt; &gt; &gt; Otherwise, it is pretty easy to p=\r\nrotect each resource with arbitrary\n&gt;&gt; &gt; &gt; kind of available authentication=\r\n scheme and ask the client to provide\n&gt;&gt; &gt; &gt; credentials on each POST. It i=\r\ns quite sure users will not be happy\n&gt;&gt; with\n&gt;&gt; &gt; &gt; such approach.\n&gt;&gt; &gt; &gt;\n&gt;=\r\n&gt; &gt; &gt; Besides, REST does not encourages cookies and sessions, meaning\n&gt;&gt; &gt; =\r\n&gt; credentials or something derived from credentials should be sent\n&gt;&gt; &gt; &gt; o=\r\nn_every_ request.\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt; Best regards,\n&gt;&gt; &gt; &gt; Nina\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;&gt; On=\r\n Thu, Oct 8, 2009 at 4:24 PM, Nina Jeliazkova &lt;nina@...\n&gt;&gt; &gt; &gt;&gt; &lt;mailto:nin=\r\na@...&gt;&gt; wrote:\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;&gt; The integra=\r\ntion problem is real, but the server boundary does not\n&gt;&gt; &gt; &gt;&gt;&gt; change the =\r\nproblem very much. Does the client care if the\n&gt;&gt; &gt; &gt;&gt;&gt; resource it is acce=\r\nssing is on hateoas.com &lt;http://hateoas.com\n&gt;&gt; &lt;http://hateoas.com&gt;&gt;\n&gt;&gt; &gt; &gt;=\r\n&gt;&gt; or ulser.com &lt;http://ulser.com &lt;http://ulser.com&gt;&gt; as long it\n&gt;&gt; knows t=\r\nhe semantics of\n&gt;&gt; &gt; &gt;&gt;&gt; the link, the methods to use, security requirement=\r\ns, media types\n&gt;&gt; &gt; &gt;&gt;&gt; and so on?\n&gt;&gt; &gt; &gt;&gt;&gt;\n&gt;&gt; &gt; &gt;&gt; At least transparently =\r\naccessing resources outside of server\n&gt;&gt; &gt; &gt;&gt; boundary under different doma=\r\nins requires /slightly/ more\n&gt;&gt; &gt; &gt;&gt; complicated authentication/authorizati=\r\non scheme, that just a\n&gt;&gt; &gt; &gt;&gt; single server, unless all resources are cons=\r\nidered unprotected.\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt; Best regards,\n&gt;&gt; &gt; &gt;&gt; Nina\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt;=\r\n &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;&gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt;=\r\n &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt; ------------------------------------\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt; Yahoo! =\r\nGroups Links\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; ----------------------=\r\n--------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}