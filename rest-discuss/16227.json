{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"F3PWF4tzjSLMeJnIS7mTc3V1-6E-9bsNWoHrca-4gy6hSPgiEogSVoCxpvZoYrTCTljQxd8DTXxwTllFAqWXr8x5-G9MGZs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281219632","msgId":16227,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9MnUzTDhQTEt6QkJaLWNPWVRLa1Z2TU15TjJ4SHpNWENaUEhSVkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEQ3QTE0OTRDLTgxRDQtNDQyQy04ODQ4LTMxQTJGN0I0RjcxNUBtYWMuY29tPg==","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPgk8RjE5NjI2NDZEM0I2NDY0MkI3QzlBMDYwNjhFRTFFNjQwRTE0Mzg1N0BleDEwLmhvc3RlZGV4Y2hhbmdlLmxvY2FsPgk8RUE2MDczMkMtM0IwMC00NUQ0LThGRDgtMDJFQjFCMjE0NEY1QG1hYy5jb20+CTxGMTk2MjY0NkQzQjY0NjQyQjdDOUEwNjA2OEVFMUU2NDBFMTQzQjExQGV4MTAuaG9zdGVkZXhjaGFuZ2UubG9jYWw+CTxCRTNEODY1OS1CNzYyLTQ3NTktQkM4Qy0xM0I0REE5ODVDNUZAbWFjLmNvbT4JPEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4JPDExNTgzREFFLUYxRUEtNDhCMi05QjU1LTNFM0JEOTQ2QjY3NUBtYWMuY29tPgk8QUFOTGtUaWswZHJSWDJvZThZam9SRi0tZC11ZU1iY3UwWStSQWI4ZystNzRKQG1haWwuZ21haWwuY29tPgk8RDdBMTQ5NEMtODFENC00NDJDLTg4NDgtMzFBMkY3QjRGNzE1QG1hYy5jb20+"},"prevInTopic":16226,"nextInTopic":16228,"prevInTime":16226,"nextInTime":16228,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":"@PROFILE in my haste, i left out references for HTML profiles[1][2]. HTML5 initially did not include profiles, but there is an effort to bring it back in an","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 60847 invoked from network); 7 Aug 2010 22:20:34 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 7 Aug 2010 22:20:34 -0000\r\nX-Received: from unknown (HELO mail-fx0-f46.google.com) (209.85.161.46)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Aug 2010 22:20:34 -0000\r\nX-Received: by fxm14 with SMTP id 14so4444833fxm.19\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 07 Aug 2010 15:20:33 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.103.173.6 with SMTP id a6mr1108880mup.116.1281219632908; Sat, \n\t07 Aug 2010 15:20:32 -0700 (PDT)\r\nX-Received: by 10.102.87.23 with HTTP; Sat, 7 Aug 2010 15:20:32 -0700 (PDT)\r\nIn-Reply-To: &lt;D7A1494C-81D4-442C-8848-31A2F7B4F715@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143857@...&gt;\n\t&lt;EA60732C-3B00-45D4-8FD8-02EB1B2144F5@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143B11@...&gt;\n\t&lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\n\t&lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\n\t&lt;11583DAE-F1EA-48B2-9B55-3E3BD946B675@...&gt;\n\t&lt;AANLkTik0drRX2oe8YjoRF--d-ueMbcu0Y+RAb8g+-74J@...&gt;\n\t&lt;D7A1494C-81D4-442C-8848-31A2F7B4F715@...&gt;\r\nDate: Sat, 7 Aug 2010 18:20:32 -0400\r\nX-Google-Sender-Auth: DhMLbmkmkNcjmj75bTGLO1UYPtU\r\nMessage-ID: &lt;AANLkTi=2u3L8PLKzBBZ-cOYTKkVvMMyN2xHzMXCZPHRV@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Robert Brewer &lt;fumanchu@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=69164307; y=HQ-biANSHQYNIf9LLGcB02RG5f_sbkbTYoYn33DKUOdu\r\nX-Yahoo-Profile: mamund\r\n\r\n@PROFILE\nin my haste, i left out references for HTML profiles[1][2]. HTML5\n=\r\ninitially did not include profiles, but there is an effort to bring it\nback=\r\n in an expanded way[3]\n\n&lt;snip&gt;\n&gt; Basically, a profile parameter works like =\r\nmedia type subclassing: Accept: application/atom+xml;profile=3Dorderlist wo=\r\nuld mean: I can handle an atom feed, but only if it conforms to a certain p=\r\nrofile. The server can still respond with 200 Ok, Content-Type:application/=\r\natom if the profile is met or 406 if it isn&#39;t.\n&gt;\n&gt; However, this is really =\r\nnot much different from minting a media type.\n&lt;/snip&gt;\nYes on both counts. I=\r\n employ @profile when I am constrained (by client\ndev, server dev, or both)=\r\n. When possible, I mint new media-types.\n\n&lt;snip&gt;\n&gt; Ah - so you do not let t=\r\nhe server &#39;negotiate&#39; but let the client fail gracefully if the condition i=\r\ns not met?\n&lt;/snip&gt;\nIn the iomplementations I have done, clients and/or serv=\r\ners can\nnegotiate (using server-drvien[4], agent-driven[5], or transparent[=\r\n6]\n[not done that one ever].) for the generic type (e.g. app/xml,\napp/atom+=\r\nxml, app/xhtml+xml, text/html, etc.). Once that is\naccomplished, the repres=\r\nentation is returned w/ the additional\nsemantic information (@profile or na=\r\nmespace declrations, as\nappropriate) and at that point is it left to the cl=\r\nient to inspect\nthese details against that client&#39;s own expectations (expec=\r\ntations\nthat have already been programmed into the client ahead of time bas=\r\ned\non documentation supplied when building the client).\n\n&lt;snip&gt;\n&gt; Yes, but =\r\nit does not solve the problem of a hidden expectation being in place that t=\r\no some extend (implicitly) constrains the service owner.\n&lt;/snip&gt;\nThat is co=\r\nrrect. This &quot;hack&quot; (using generic types, with additional\nsemantic instructi=\r\non pointers in the representation using a\npre-defined pattern) is only help=\r\nful when clients are written to\nexpect and act accordingly.\n\n&lt;snip&gt;\n&gt; I thi=\r\nnk we are just too afraid of minting media types.\n&lt;/snip&gt;\nI agreed that _so=\r\nme_ are averse to minting types; I am not one of\nthem&lt;g&gt;. As I&#39;ve already m=\r\nentioned, I employ this technique when I am\nconstrained from minting a new =\r\ntype for the target implementation.\n\n&lt;/snip&gt;\n IMHO there should be one (or =\r\na couple) for each domain such as SCM\n(procurement), ERP, HR, ITIL, BI, etc=\r\n. You know, the big acronyms of\nthe enterprise IT space.\n&lt;/snip&gt;\nI think th=\r\nat&#39;s a fine idea. I think you are working along these lines\nalready, no?\n\n\n=\r\n\n[1] http://www.w3.org/TR/html401/struct/global.html#profiles\n[2] http://gm=\r\npg.org/xmdp/\n[3] http://dev.w3.org/html5/profiles/source/\n[4] http://www.w3=\r\n.org/Protocols/rfc2616/rfc2616-sec12.html#sec12.1\n[5] http://www.w3.org/Pro=\r\ntocols/rfc2616/rfc2616-sec12.html#sec12.2\n[6] http://www.w3.org/Protocols/r=\r\nfc2616/rfc2616-sec12.html#sec12.3\n\nmca\nhttp://amundsen.com/blog/\nhttp://mam=\r\nund.com/foaf.rdf#me\n\n\n\n\nOn Sat, Aug 7, 2010 at 17:47, Jan Algermissen &lt;alge=\r\nrmissen1971@...&gt; wrote:\n&gt;\n&gt; On Aug 7, 2010, at 6:13 PM, mike amundsen w=\r\nrote:\n&gt;\n&gt;&gt; &lt;snip&gt;\n&gt;&gt;&gt; We know the user agent cannot handle the HTML-contain=\r\ning/scan-referencing feed because we did not program it that way. And besid=\r\nes that: both, HTML and the scan do not make good candidates for machine pr=\r\nocessing without a hidden contract regarding the structure.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt;\n&gt;=\r\n&gt; not a problem. this would be easy in a face-to-face, but email has\n&gt;&gt; it&#39;=\r\ns limitations that must be overcome.\n&gt;&gt;\n&gt;&gt; OK, &quot;because we did not program =\r\nit that way&quot; is the key here. IOW, the\n&gt;&gt; ability to &quot;pluck&quot; the proper con=\r\ntent out of a representation (that\n&gt;&gt; looks like the one you offered as you=\r\nr example) has not been\n&gt;&gt; programmed into the client. I understand that.\n&gt;=\r\n&gt;\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; HTML and the scan do not make good candidates for machine pr=\r\nocessing\n&gt;&gt; without a hidden contract regarding the structure.\n&gt;&gt; &lt;/snip&gt;\n&gt;=\r\n&gt; and\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; If the implemented goal is to compile a list of ordered =\r\nitems from\n&gt;&gt; each order the user agent needs to be able to parse the order=\r\n\n&gt;&gt; representation.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt;\n&gt;&gt; and then: &quot;..without a [hidden] contra=\r\nct...&quot;\n&gt;&gt; All media-type processing is by contract: the contract offered wh=\r\nen\n&gt;&gt; the media-type is documented. I think I hear you saying that the\n&gt;&gt; c=\r\nontract details for a client that uses Atom would need (in your case)\n&gt;&gt; _a=\r\ndditional_ contract information such as (&quot;here is how you can\n&gt;&gt; recognize =\r\nan order list inside an Atom feed&quot;, etc.). I can see that\n&gt;&gt; this is so.\n&gt;&gt;=\r\n\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; But the problem is really that of formats embedded in formats=\r\n because\n&gt;&gt; we cannot implement the client without making assumptions about=\r\n the\n&gt;&gt; possible =A0sub-formats. If these assumptions cannot be stated in t=\r\nhe\n&gt;&gt; Acept header, the situation I am dealing with exists.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt;\n&gt;=\r\n&gt; PROBLEM RESTATEMENT:\n&gt;&gt; OK, now I think we&#39;re getting to the heart of the=\r\n matter. It would\n&gt;&gt; seem that the issue here is whether it is possible or =\r\nreasonable to\n&gt;&gt; create ways for clients to &quot;know whether they understand t=\r\nhis\n&gt;&gt; representation&quot; even in cases where the Accept header is &quot;insufficie=\r\nnt\n&gt;&gt; as a descriptor&quot; (due to the fact that a well-known generic media-typ=\r\ne\n&gt;&gt; is employed for the representation).\n&gt;\n&gt; Yes, I think we are (sort of)=\r\n in alignment now.\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; PROPOSED SOLUTION:\n&gt;&gt; I will offer the followi=\r\nng that I&#39;ve done in the past that might address this:\n&gt;&gt; 1 - for cases whe=\r\nre the representation is based on HTML, I use the\n&gt;&gt; @profile model[1]. Thi=\r\ns allows me to program clients to look for the\n&gt;&gt; proper information within=\r\n the @profile attribute and reject it if\n&gt;&gt; necessary (invalid representati=\r\non) or, if the @profile is valid, but\n&gt;&gt; the body does not conform, pitch a=\r\nnother error (invalid body), etc.\n&gt;\n&gt; Got a reference for [1]? :-)\n&gt;\n&gt; I (t=\r\nhink I) like profiles to express &#39;bundles of extensions or syntax conventio=\r\nns&#39;. Though I&#39;d rather use the profile in the Accept header to enable conne=\r\ng. Teh profile parameter is already standardized (I think; too late for a p=\r\nointer). Another approach is the Content-Features header (also: too late fo=\r\nr pointers).\n&gt;\n&gt; Basically, a profile parameter works like media type subcl=\r\nassing: Accept: application/atom+xml;profile=3Dorderlist would mean: I can =\r\nhandle an atom feed, but only if it conforms to a certain profile. The serv=\r\ner can still respond with 200 Ok, Content-Type:application/atom if the prof=\r\nile is met or 406 if it isn&#39;t.\n&gt;\n&gt; However, this is really not much differe=\r\nnt from minting a media type.\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; 2 - for cases where the presentatio=\r\nn is based on XML (Atom, etc.), I\n&gt;&gt; use standard namespace checking. That =\r\nmeans, for my designs, I use\n&gt;&gt; Atom&#39;s extension model rather than embeddin=\r\ng custom XML in the content\n&gt;&gt; element. I have, in the past, used a namespa=\r\nce within the content\n&gt;&gt; element, but no longer do that.\n&gt;\n&gt; Ah - so you do=\r\n not let the server &#39;negotiate&#39; but let the client fail gracefully if the c=\r\nondition is not met?\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; These two &quot;hacks&quot; allow me to design represe=\r\nntations that use\n&gt;&gt; well-known formats and still provide a simple test for=\r\n clients to use\n&gt;&gt; in order to validate the representation before attemptin=\r\ng to process\n&gt;&gt; it.\n&gt;&gt;\n&gt;&gt; Does this make sense?\n&gt;\n&gt; Yes, but it does not so=\r\nlve the problem of a hidden expectation being in place that to some extend =\r\n(implicitly) constrains the service owner. What is so bad about just mintin=\r\ng a new type? (Especially since all design activity in REST is spent in thi=\r\ns area anyhow?)\n&gt;\n&gt; I think we are just too afraid of minting media types. =\r\nIMHO there should be one (or a couple) for each domain such as SCM (procure=\r\nment), ERP, HR, ITIL, BI, etc. You know, the big acronyms of the enterprise=\r\n IT space.\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt; http://mam=\r\nund.com/foaf.rdf#me\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Sat, Aug 7, 2010 at 11:43, Jan Algerm=\r\nissen &lt;algermissen1971@...&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Aug 7, 2010, at 5:17 PM, =\r\nmike amundsen wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; &lt;snip&gt;\n&gt;&gt;&gt;&gt; While a usual feed reader (e.g. A=\r\npple Mail) would be able to perform\n&gt;&gt;&gt;&gt; it&#39;s implemented goal based on tha=\r\nt feed our\n&gt;&gt;&gt;&gt; compile-list-of-newly-ordered-items user agent would defini=\r\ntely not be\n&gt;&gt;&gt;&gt; able to do what it is implemented to do.\n&gt;&gt;&gt;&gt; &lt;/snip&gt;\n&gt;&gt;&gt;&gt;=\r\n\n&gt;&gt;&gt;&gt; QUESTION:\n&gt;&gt;&gt;&gt; how do you &quot;know&quot; this to be true? IOW, what is it abo=\r\nut the\n&gt;&gt;&gt;&gt; representation example you provided that leads you to believe y=\r\nour\n&gt;&gt;&gt;&gt; &quot;compile-list-of-newly-ordered-items user agent&quot; cannot &quot;do what i=\r\nt is\n&gt;&gt;&gt;&gt; implemented to do&quot;?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Gee - every sentence I leave out lead=\r\ns to confusion. Sorry. What I meant to say was:\n&gt;&gt;&gt;\n&gt;&gt;&gt; We know the user ag=\r\nent cannot handle the HTML-containing/scan-referencing feed because we did =\r\nnot program it that way. And besides that: both, HTML and the scan do not m=\r\nake good candidates for machine processing without a hidden contract regard=\r\ning the structure.\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; ASSUMPTION:\n&gt;&gt;&gt;&gt; I think I hear you talkin=\r\ng about the need for clients to know ahead of\n&gt;&gt;&gt;&gt; time whether the represe=\r\nntation returned is something they can\n&gt;&gt;&gt;&gt; process.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yes. That is: =\r\nmeaningfully process according to their implemented goals. If the goal is t=\r\no turn the controls contained in the representation into something the user=\r\n can activate (e.g. as browsers or feed readers do) then fine. If the imple=\r\nmented goal is to compile a list of ordered items from each order the user =\r\nagent needs to be able to parse the order representation. If it understands=\r\n that there are orders at all (feed not empty) but it does not understand t=\r\nhe individual order syntax it needs to reposrt an error somehow. (Which mig=\r\nht just be ok - depending on the goal implementation).\n&gt;&gt;&gt;\n&gt;&gt;&gt; But the prob=\r\nlem is really that of formats embedded in formats because we cannot impleme=\r\nnt the client without making assumptions about the possible =A0sub-formats.=\r\n If these assumptions cannot be stated in the Acept header, the situation I=\r\n am dealing with exists.\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; If that&#39;s the case, that means there must=\r\n be some information\n&gt;&gt;&gt;&gt; baked into the client that is used to &quot;check&quot; the=\r\n representation\n&gt;&gt;&gt;&gt; returned. The Accept header is one of these methods (&quot;=\r\nI am a client\n&gt;&gt;&gt;&gt; that will only be able to understand the following repre=\r\nsentation\n&gt;&gt;&gt;&gt; formats&quot;).\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I that what this is about?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yes.=\r\n It is the question of how specific the Acept header needs to be without ca=\r\nusing hidden coupling. (Or whether we should just live with the uncertainty=\r\n on the client side - which I think we should not).\n&gt;&gt;&gt;\n&gt;&gt;&gt; Jan\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;=\r\n&gt;\n&gt;&gt;&gt;&gt; mca\n&gt;&gt;&gt;&gt; http://amundsen.com/blog/\n&gt;&gt;&gt;&gt; http://mamund.com/foaf.rdf#m=\r\ne\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On Sat, Aug 7, 2010 at 06:47, Jan Algermissen &lt;a=\r\nlgermissen1971@...&gt; wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; On Aug 7, 2010, at 12:25 AM, Rob=\r\nert Brewer wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Jan Algermissen wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; The qu=\r\nestion is whether Accept: text/html is indeed sufficient. Is it\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; tru=\r\ne that the user agent can persue its implemented goal of compiling\n&gt;&gt;&gt;&gt;&gt;&gt; a=\r\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; list of all newly ordered items from any HTML document?\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;=\r\n&gt;&gt;&gt;&gt;&gt; Suppose the server provides both, application/order and text/html as\n=\r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; representations of the list of new orders. When a user agent comes\n=\r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; along that says Accept: text/html the server can freely assume\n&gt;&gt;&gt;&gt;=\r\n&gt;&gt; browser-\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; like capabilities of the user agent (any HTML will do; =\r\neven an &lt;ul&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; with items referring to scanned PNGs of the orders). I=\r\nOW, the owner of\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; the server is free to change the implementation fo=\r\nr text/html as long\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; as a) the resource semantics remain stable (lis=\r\nt of new orders) and\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; valid HTML is returned.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; How wo=\r\nuld the user agent implementation deal with HTML? Special\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; syntactic=\r\n assumptions are not allowed (because of Accept: text/html)\n&gt;&gt;&gt;&gt;&gt;&gt; or\n&gt;&gt;&gt;&gt;&gt;=\r\n&gt;&gt; would mean a hidden coupling. How would a user agent distinguish\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;=\r\n between an HTML it does not understand but that contains orders (e.g.\n&gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt; the list of scanned order images) and an empty list of orders that is\n&gt;=\r\n&gt;&gt;&gt;&gt;&gt;&gt; augmented with some HTML it does not (and need not) understand?\n&gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; IMO that is impossible and hence Accept: text/html does not cut=\r\n it.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; I think all that demonstrates is that HTML is too generi=\r\nc to be useful\n&gt;&gt;&gt;&gt;&gt;&gt; for your particular task, not that all media types re=\r\nquire &quot;special\n&gt;&gt;&gt;&gt;&gt;&gt; syntactic assumptions&quot; (whether implicit or explicit)=\r\n. The fact that you\n&gt;&gt;&gt;&gt;&gt;&gt; can make a &quot;list&quot; in HTML using any of a hundred=\r\n types of tags doesn&#39;t\n&gt;&gt;&gt;&gt;&gt;&gt; mean Atom, for example, also suffers from the=\r\n same inappropriateness to\n&gt;&gt;&gt;&gt;&gt;&gt; your task.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; I kn=\r\new you were going to say that :-)\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Let&#39;s see:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The im=\r\nplementor of the server side chooses to expose the order list as HTML and A=\r\ntom. In the Atom case, she would write sth like this (in JAX-RS):\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;=\r\n&gt;&gt; @Path(&quot;/new-orders&quot;)\n&gt;&gt;&gt;&gt;&gt; class NewOrders {\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0@Produces(&quot;text/html&quot;)\n&gt;&gt;&gt;&gt;&gt; =A0public Response newOrdersAsHTML() {\n&gt;&gt;&gt;&gt;=\r\n&gt; =A0 =A0 // ...\n&gt;&gt;&gt;&gt;&gt; =A0}\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt;&gt;&gt; =A0@Produces(&quot;applica=\r\ntion/atom+xml&quot;)\n&gt;&gt;&gt;&gt;&gt; =A0public Response newOrdersAsAtomFeed() {\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;=\r\n&gt; =A0}\n&gt;&gt;&gt;&gt;&gt; }\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; When it comes to implementing (or changing=\r\n) the Atom-producing method, the server developer need not (must not) be co=\r\nncerned with any client expectations. All that matters is to produce any va=\r\nlid Atom feed[1].\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Given that, it would be a perfectly fine impl=\r\nementation to produce an Atom feed such as this:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; &lt;feed&gt;\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0&lt;entry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0&lt;xhtml:di=\r\nv xmlns:xhtml=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml=\r\n:h1&gt;Order 551-A-1272&lt;/xhtml:h1&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =\r\n=A0 =A0 =A0 =A0&lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =\r\n=A0 =A0 =A0 =A0&lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =\r\n=A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:=\r\nb&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;/summary&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;cont=\r\nent type=3D&quot;image/png&quot; src=3D&quot;/scan-archive/orders/551-A-1272.png&quot;/&gt;\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0&lt;/entry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;entry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0 =A0 =A0&lt;xhtml:div xmlns:xhtml=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0 =A0 =A0 =A0&lt;xhtml:h1&gt;Order 551-A-1273&lt;/xhtml:h1&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;=\r\nxhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/=\r\nxhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/x=\r\nhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Tot=\r\nal: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;/summary&gt;=\r\n\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D&quot;/scan-archive/orders/551-A=\r\n-1273.png&quot;/&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;/entry&gt;\n&gt;&gt;&gt;&gt;&gt; &lt;/feed&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; If you devel=\r\nop a user agent that says Accept: application/atom+xml;type=3Dfeed you must=\r\n be prepared to receive the above feed.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; While a usual feed read=\r\ner (e.g. Apple Mail) would be able to perform it&#39;s implemented goal based o=\r\nn that feed our compile-list-of-newly-ordered-items user agent would defini=\r\ntely not be able to do what it is implemented to do.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Two questi=\r\nons arise:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 1. How does the user agent detect that it cannot per=\r\nform its task but (despite having a perfectly valid answer)\n&gt;&gt;&gt;&gt;&gt; 2. What t=\r\no do about that\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 1.:\n&gt;&gt;&gt;&gt;&gt; Given the feed above, how do we=\r\n need to implement the client to report to the user (e.g. someone that at s=\r\nome point looks in a log file or someone that uses the business intelligenc=\r\ne application that uses the compiled reports about newly ordered items) tha=\r\nt a correct answer was received, that it did indeed contain orders but that=\r\n the list could not be processed as intended?\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; First of all, the=\r\n client trusts the higher level assumption that the resource indeed provide=\r\ns the list of new orders. This is the same kind of trust that any browser h=\r\nas when it follows an &lt;img src=3D&quot;&quot;/&gt; hypermedia control. The server told t=\r\nhe user agent something about the referenced resource and the client can re=\r\nasonably expect that to be true (otherwise we would deal with a broken serv=\r\ner and that is not the issue here).\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Since the client expects th=\r\ne feed to represent the list of new orders, it is IMHO reasonable to assume=\r\n that any entry in that feed points to a new order. No entries would mean &#39;=\r\nno new orders&#39;. This is IMHO not semantic tunneling through the Atom feed b=\r\necause the assumption is backed by the semantics of the resource as adverti=\r\nsed by the server.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The feed appearently contains two entries, h=\r\nence the user agent can be programmed to understand that there are two new =\r\norders to process. When it comes to processing the orders the user agent wi=\r\nll have to realize that neither the summary nor the referenced content is a=\r\nvailable in a format that is sufficient to extract the ordered items automa=\r\ntically. Hence the user agent has to report an error eventually leading to =\r\nsome human action to fix the situation:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 2.:\n&gt;&gt;&gt;&gt;&gt; We reach ques=\r\ntion #2 once the fact that a problem exists for the user agent has reached =\r\na human. What is he supposed to do? There are three options:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; a)=\r\n call the server developer and negotiate a certain format for the Atom feed=\r\n\n&gt;&gt;&gt;&gt;&gt; b) adjust the user agent implementation to handle the format receive=\r\nd (e.g. parse out the HTML from the summary or OCR the scanned orders)\n&gt;&gt;&gt;&gt;=\r\n&gt; c) do nothing except mark the compiled report as &#39;wrong&#39; or &#39;unusable&#39;. I=\r\nWO, accept the fact that the user goal cannot be satisfied\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; a) L=\r\neads to coupling (if it is at all possible/desireable to call the server im=\r\nplementor)\n&gt;&gt;&gt;&gt;&gt; b) Does not improve the situation because the format can j=\r\nust change again tomorrow\n&gt;&gt;&gt;&gt;&gt; c) is the honest option but provides no bus=\r\niness value\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; In my opinion, the only thing to really improve the=\r\n situation is to standardize a format that allows the server developer to a=\r\nctually determine the user agent expectations (capabilities) from the Accep=\r\nt header. If we had application/orderlist (or at least application/atom+xml=\r\n;profile=3Dorderlist) the server developer would need to either add a new r=\r\nesponse-producing method or send a 406.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Does that sufficiently =\r\nillustrate the point?\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Jan\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; [1] and of course b=\r\ne true to be true to the server&#39;s own statement that the resource represent=\r\ns\n&gt;&gt;&gt;&gt;&gt; =A0 =A0the new orders. It would be bad to serve a list of shipped o=\r\nrders, for example.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Robert Brewe=\r\nr\n&gt;&gt;&gt;&gt;&gt;&gt; fumanchu@...\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; ---------------------------=\r\n--------\n&gt;&gt;&gt;&gt;&gt; =A0Jan Algermissen, Consultant\n&gt;&gt;&gt;&gt;&gt; =A0NORD Software Consul=\r\nting\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0Mail: algermissen@...\n&gt;&gt;&gt;&gt;&gt; =A0Blog: http://www.nor=\r\ndsc.com/blog/\n&gt;&gt;&gt;&gt;&gt; =A0Work: http://www.nordsc.com/\n&gt;&gt;&gt;&gt;&gt; -----------------=\r\n------------------\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; --------------=\r\n----------------------\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;=\r\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Yahoo! Gr=\r\noups Links\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; -----------------------------------\n&gt;&gt;&gt; =\r\n=A0Jan Algermissen, Consultant\n&gt;&gt;&gt; =A0NORD Software Consulting\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0M=\r\nail: algermissen@...\n&gt;&gt;&gt; =A0Blog: http://www.nordsc.com/blog/\n&gt;&gt;&gt; =A0Wo=\r\nrk: http://www.nordsc.com/\n&gt;&gt;&gt; -----------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n=\r\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;\n&gt; -----------------------------------\n&gt; =A0Jan Algermissen, C=\r\nonsultant\n&gt; =A0NORD Software Consulting\n&gt;\n&gt; =A0Mail: algermissen@...\n&gt; =\r\n=A0Blog: http://www.nordsc.com/blog/\n&gt; =A0Work: http://www.nordsc.com/\n&gt; --=\r\n---------------------------------\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}