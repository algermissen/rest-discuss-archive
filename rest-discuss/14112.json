{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"-4K7x1_hk3EoDYizXrzSymxL8vZ4wdqdedxbY1jM425qMotlaQ-U4-OckAGo0JC2Ln--rkna2rnKAIIfBJmTH3Guqt5pGMWcGw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] The &quot;purist&quot; C# REST client?","postDate":"1260402492","msgId":14112,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM5MTVjNjlkMDkxMjA5MTU0OGk1N2Q4MTZiZGszY2QxMzAxODYzYzVlM2I3QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PEI1QUM5MEYyODQ5MzQ5OEI5MEU2MjAzRERFMkE0RTY1QEpyblBDPg==","referencesHeader":"PEI1QUM5MEYyODQ5MzQ5OEI5MEU2MjAzRERFMkE0RTY1QEpyblBDPg=="},"prevInTopic":14111,"nextInTopic":14113,"prevInTime":14111,"nextInTime":14113,"topicId":14110,"numMessagesInTopic":12,"msgSnippet":"Just a couple of thoughts out loud. I like the mime-type mapping framework, that would be a nice, generic piece of code all on its own, and it should marshal","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 43331 invoked from network); 9 Dec 2009 23:48:14 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 9 Dec 2009 23:48:14 -0000\r\nX-Received: from unknown (HELO mail-fx0-f224.google.com) (209.85.220.224)\n  by mta3.grp.sp2.yahoo.com with SMTP; 9 Dec 2009 23:48:14 -0000\r\nX-Received: by fxm24 with SMTP id 24so7009913fxm.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 09 Dec 2009 15:48:13 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.239.145.136 with SMTP id s8mr973949hba.46.1260402492975; Wed, \n\t09 Dec 2009 15:48:12 -0800 (PST)\r\nIn-Reply-To: &lt;B5AC90F28493498B90E6203DDE2A4E65@JrnPC&gt;\r\nReferences: &lt;B5AC90F28493498B90E6203DDE2A4E65@JrnPC&gt;\r\nDate: Wed, 9 Dec 2009 15:48:12 -0800\r\nMessage-ID: &lt;3915c69d0912091548i57d816bdk3cd1301863c5e3b7@...&gt;\r\nTo: =?ISO-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001485f20b84de2c4a047a545219\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] The &quot;purist&quot; C# REST client?\r\nX-Yahoo-Group-Post: member; u=401876259; y=Y7ntzPE1BQ8aC9WHPYF3ChAemSH8MlaaaJTDyTCS0O9JFmK4yXMyHQ\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--001485f20b84de2c4a047a545219\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nJust a couple of thoughts out loud.\n\nI like the mime-type mapping framework, that would be a nice, generic piece\nof code all on its own, and it should marshal both ways.\n\nI think you will need to use that in many places. Not simply for GETs, but\nfor pushing data as well.\n\nBut another place that would be valuable is the fact that most any HTTP\nresult can have a typed body. So it&#39;s easy to envision when you get some\nwarning, or other error message (perhaps a redirect), that you can leverage\nthe ability to send more interesting data than what is simply in the\nheaders, and have that data marshaled for you automagically.\n\nI think the LINK infrastructure should be aware of things like redirects,\nand expose those things. If you hit a URI that gets a permanent or temporary\nredirect, it would be nice for the client to honor that at least somewhat\ntransparently. And by that I don&#39;t me silently following the redirect, but I\nmean if it sees you hitting it again, will simply jump straight to the final\ndestination.\n\nFor the trivial case, I don&#39;t see a reason why you should be having to set\nthe Accept header -- framework should do that for you. It should set the\ncontent type on the way out properly, and set the accept header as well,\nsince it &quot;knows&quot; you want the Movie info.\n\nThe common headers should be First Class. I shouldn&#39;t have to set an\n&quot;If-Modified&quot; myself, I should be able to link.setIfModifiedSince(myDate),\nso I don&#39;t have to marshal the dates myself.\n\nGoing back to the mime mapping, that should be controllable at a higher,\n&quot;global&quot;/framework level, but also at the request level. I can easily see\nhaving to map &quot;text/xml&quot; to something different at the request level\ndepending on the link.\n\nSo, anyway, just some quick thoughts.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\r\n--001485f20b84de2c4a047a545219\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nJust a couple of thoughts out loud.&lt;br&gt;&lt;br&gt;I like the mime-type mapping fra=\r\nmework, that would be a nice, generic piece of code all on its own, and it =\r\nshould marshal both ways.&lt;br&gt;&lt;br&gt;I think you will need to use that in many =\r\nplaces. Not simply for GETs, but for pushing data as well.&lt;br&gt;\n&lt;br&gt;But anot=\r\nher place that would be valuable is the fact that most any HTTP result can =\r\nhave a typed body. So it&#39;s easy to envision when you get some warning, =\r\nor other error message (perhaps a redirect), that you can leverage the abil=\r\nity to send more interesting data than what is simply in the headers, and h=\r\nave that data marshaled for you automagically.&lt;br&gt;\n&lt;br&gt;I think the LINK inf=\r\nrastructure should be aware of things like redirects, and expose those thin=\r\ngs. If you hit a URI that gets a permanent or temporary redirect, it would =\r\nbe nice for the client to honor that at least somewhat transparently. And b=\r\ny that I don&#39;t me silently following the redirect, but I mean if it see=\r\ns you hitting it again, will simply jump straight to the final destination.=\r\n&lt;br&gt;\n&lt;br&gt;For the trivial case, I don&#39;t see a reason why you should be h=\r\naving to set the Accept header -- framework should do that for you. It shou=\r\nld set the content type on the way out properly, and set the accept header =\r\nas well, since it &quot;knows&quot; you want the Movie info.&lt;br&gt;\n&lt;br&gt;The co=\r\nmmon headers should be First Class. I shouldn&#39;t have to set an &quot;If=\r\n-Modified&quot; myself, I should be able to link.setIfModifiedSince(myDate)=\r\n, so I don&#39;t have to marshal the dates myself.&lt;br&gt;&lt;br&gt;Going back to the=\r\n mime mapping, that should be controllable at a higher, &quot;global&quot;/=\r\nframework level, but also at the request level. I can easily see having to =\r\nmap &quot;text/xml&quot; to something different at the request level depend=\r\ning on the link.&lt;br&gt;\n&lt;br&gt;So, anyway, just some quick thoughts.&lt;br&gt;&lt;br&gt;Regar=\r\nds,&lt;br&gt;&lt;br&gt;Will Hartung&lt;br&gt;(&lt;a href=3D&quot;mailto:willh@...&quot;&gt;willh@mi=\r\nrthcorp.com&lt;/a&gt;)&lt;br&gt;&lt;br&gt;&lt;br&gt;\n\r\n--001485f20b84de2c4a047a545219--\r\n\n"}}