{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344081753,"authorName":"Erling Wegger Linde","from":"&quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;","profile":"erlingwl","replyTo":"SENDER","senderId":"jcxJ6l5C7JWCzpU476oiHXKZQZS2-qQCPmOqNARPujXPmz5Wvmot7KCh4W89StHacyTr_NiCkb0eOJJ86DXr7eMGNNLVUxgGu39au0HdbiE9","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST+SPARQL for Java domain model","postDate":"1218981710","msgId":11207,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlmMDU3ODI5MDgwODE3MDcwMWk3NDU1NGNhMXczYThiMTNhNWFjMTE5OWE1QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ4QTgwMTM1LjgwOTA5MDlAZ21haWwuY29tPg==","referencesHeader":"PDQ4QTU4NTI4LjEwODA2MDRAZ21haWwuY29tPgkgPDlmMDU3ODI5MDgwODE2MTMyOHQ1ODRhMDYxNWc2MTI4YWZiZDNiMTJhMDRhQG1haWwuZ21haWwuY29tPgkgPDQ4QTgwMTM1LjgwOTA5MDlAZ21haWwuY29tPg=="},"prevInTopic":11206,"nextInTopic":11210,"prevInTime":11206,"nextInTime":11208,"topicId":11204,"numMessagesInTopic":12,"msgSnippet":"... It is great to hear that you are thinking about making Qi4j be able to use existing vocabularies. I think it would be an extremely useful framework if you","rawEmail":"Return-Path: &lt;erlingwl@...&gt;\r\nX-Sender: erlingwl@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 2366 invoked from network); 17 Aug 2008 14:01:50 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m51.grp.scd.yahoo.com with QMQP; 17 Aug 2008 14:01:50 -0000\r\nX-Received: from unknown (HELO rv-out-0708.google.com) (209.85.198.250)\n  by mta18.grp.scd.yahoo.com with SMTP; 17 Aug 2008 14:01:50 -0000\r\nX-Received: by rv-out-0708.google.com with SMTP id c5so3086723rvf.52\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 17 Aug 2008 07:01:50 -0700 (PDT)\r\nX-Received: by 10.141.71.14 with SMTP id y14mr2644436rvk.253.1218981710498;\n        Sun, 17 Aug 2008 07:01:50 -0700 (PDT)\r\nX-Received: by 10.140.178.10 with HTTP; Sun, 17 Aug 2008 07:01:50 -0700 (PDT)\r\nMessage-ID: &lt;9f0578290808170701i74554ca1w3a8b13a5ac1199a5@...&gt;\r\nDate: Sun, 17 Aug 2008 16:01:50 +0200\r\nTo: &quot;=?ISO-8859-1?Q?Rickard_=D6berg?=&quot; &lt;rickardoberg@...&gt;\r\nCc: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;48A80135.8090909@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;48A58528.1080604@...&gt;\n\t &lt;9f0578290808161328t584a0615g6128afbd3b12a04a@...&gt;\n\t &lt;48A80135.8090909@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;\r\nSubject: Re: [rest-discuss] REST+SPARQL for Java domain model\r\nX-Yahoo-Group-Post: member; u=344081753; y=nLPOwXsDNmiqc46E_qTsjEXnPgpUfmzRM3N-56VQe3M2LnM\r\nX-Yahoo-Profile: erlingwl\r\n\r\nOn Sun, Aug 17, 2008 at 12:45 PM, Rickard =D6berg &lt;rickardoberg@...&gt; =\r\nwrote:\n&gt; Erling Wegger Linde wrote:\n&gt;&gt;\n&gt;&gt; Qi4j looked pretty cool. You use =\r\nsemantic technology like RDF/XML and\n&gt;&gt; SPARQL (and probably reasoning?) to=\r\n make it very easy to write client\n&gt;&gt; code for interacting with a server (a=\r\nlmost transparently) if I get i\n&gt;&gt; right?\n&gt;\n&gt; Pretty much!\n&gt;\n&gt;&gt; However, I =\r\nthink it might be difficult for other clients to use the\n&gt;&gt; servers, especi=\r\nally if the clients are written with other programmring\n&gt;&gt; languages etc. I=\r\n mean the representations would change whenever you\n&gt;&gt; change the object mo=\r\ndel because The RDF vocabulary are generated from\n&gt;&gt; the (Java) object mode=\r\nl right? And also the RDF models are implicit in\n&gt;&gt; the Java object model s=\r\no a non-Qi4j client cannot download an RDF\n&gt;&gt; schema and perform its own re=\r\nasoning right? (perhaps it would be\n&gt;&gt; possible to generate and export such=\r\n a schema? and maybe you already\n&gt;&gt; generate such as schema internally?)\n&gt;\n=\r\n&gt; The schema is generated internally, so the plan is to add HTTP-access of =\r\nit.\n&gt; But as you say it is based on the Java model, so the names are a bit =\r\nfunky,\n&gt; and when the Java model changes the RDF model changes.\n&gt;\n&gt; One ide=\r\na I have to deal with that is to simple be able to add metadata to\n&gt; the Ja=\r\nva model to help the RDF generation, such as being able to say that a\n&gt; Jav=\r\na property equals a DC-attribute or similar. Another way to do it is to\n&gt; g=\r\nenerate the RDF using the XML model, but then attach a XSLT processing\n&gt; in=\r\nstruction to convert it to some more stable schema. Or, make an ontology\n&gt; =\r\nwith equivalences that do the same thing, which is the more RDFy approach I=\r\n\n&gt; think. None is implemented right now, so any ideas on &quot;what works&quot; would=\r\n be\n&gt; appreciated.\n&gt;\n&gt;&gt; I guess since there&#39;s probably not enough existing =\r\n(RDF) vocabularies\n&gt;&gt; out there that you could use, you have to create your=\r\n own sometimes.\n&gt;&gt; But what if you had a Person model that correlated prett=\r\ny much with a\n&gt;&gt; foaf:Person, or a Project model that where almost a fit wi=\r\nth\n&gt;&gt; doap:Project, could you then use these (with the correct namespaces\n&gt;=\r\n&gt; etc.)? I think that would be of great value to other non-Qi4j clients,\n&gt;&gt;=\r\n and expose more of the potential from having a RESTful interface.\n&gt;\n&gt; Righ=\r\nt, so as above, there is going to be ways to set more (re)useful names,\n&gt; b=\r\nut I&#39;m not sure right now what&#39;s the best way to do it. Just replacing the\n=\r\n&gt; names with DC/FOAF/DOAP names is one way, but then information is lost, s=\r\no\n&gt; I&#39;m more keen on using subclassing (i.e. the Java classes extend standa=\r\nrd\n&gt; ones) or equivalences. But I don&#39;t have enough experience to know whic=\r\nh one\n&gt; works best in practice.\n&gt;\n&gt; I definitely agree that once this has b=\r\neen sorted out it will have great\n&gt; value for non-Qi4j non-Java clients!\n&gt;\n=\r\n&gt; /Rickard\n&gt;\n\nIt is great to hear that you are thinking about making Qi4j b=\r\ne able to\nuse existing vocabularies. I think it would be an extremely usefu=\r\nl\nframework if you solve that issue!\n\nI&#39;m not sure what would be the best w=\r\nay to do it, but maybe you could\nget some ideas from the jenabean project, =\r\nsee\nhttp://code.google.com/p/jenabean/. I haven&#39;t had time to test it out\ny=\r\net, but I believe they use annotations to bind the Java properties\netc. to =\r\nthe proper name spaces. Which seems like a very good idea to\nme.\n\nGood luck=\r\n!\n\n- Erling\n\n"}}