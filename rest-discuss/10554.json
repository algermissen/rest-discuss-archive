{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"SpECMQ7tKRpMsUrpO9NutYvOV5b6lUxCAYOoVFUkappAJJmKTyQN7rLJ9uknQ5IeTC7YhatkmqvHunuES5IQV4v1-dKcd4_ros34WtmslA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] More Fun with DELETE","postDate":"1206718544","msgId":10554,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwMzI4MDkzNTQ0LjdiYjI1ZjE0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEJMVTEwMi1EUzE2RjBFRjBCNDI5Q0Y1MTJGNDU2OEI1RjkwQHBoeC5nYmw+","referencesHeader":"PDIwMDgwMzI4MDEyMTI4LmUzNGQ5NmJiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMDgwMzI4MDI1NzA0LjgzZDE3MDY0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMDgwMzI4MDY1ODI5LmZiYzRhMGQ5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEJMVTEwMi1EUzE2RjBFRjBCNDI5Q0Y1MTJGNDU2OEI1RjkwQHBoeC5nYmw+"},"prevInTopic":10553,"nextInTopic":10555,"prevInTime":10553,"nextInTime":10555,"topicId":10545,"numMessagesInTopic":21,"msgSnippet":"... Content negotiation could be used.  For example, an Atom Protocol client which doesn t know about confirmation could receive a 204 response, while (X)HTML","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48316 invoked from network); 28 Mar 2008 15:37:22 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m36.grp.scd.yahoo.com with QMQP; 28 Mar 2008 15:37:22 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta16.grp.scd.yahoo.com with SMTP; 28 Mar 2008 15:37:21 -0000\r\nX-Received: from BigBison (unknown [66.250.152.171])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTP id D552E23E3FA;\n\tFri, 28 Mar 2008 11:37:19 -0400 (EDT)\r\nDate: Fri, 28 Mar 2008 09:35:44 -0600\r\nTo: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20080328093544.7bb25f14.eric@...&gt;\r\nIn-Reply-To: &lt;BLU102-DS16F0EF0B429CF512F4568B5F90@...&gt;\r\nReferences: &lt;20080328012128.e34d96bb.eric@...&gt;\n\t&lt;20080328025704.83d17064.eric@...&gt;\n\t&lt;20080328065829.fbc4a0d9.eric@...&gt;\n\t&lt;BLU102-DS16F0EF0B429CF512F4568B5F90@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] More Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Sebastien Lambla&quot; wrote:\n&gt;\n&gt; But now you rely on the entity enclosed in your response to fullfill\n&gt; the request, which seems to me limiting. How do I discover and\n&gt; process that request using a non xhtml agent?\n&gt; \n\nContent negotiation could be used.  For example, an Atom Protocol\nclient which doesn&#39;t know about confirmation could receive a 204\nresponse, while (X)HTML clients receive the confirmation form.\n\n&gt;\n&gt; With a 202, you indicate *success* to the delete operation, but yu\n&gt; haven&#39;t actually succeeded in executing the operation at all, as you\n&gt; require a confirmation. That&#39;s quite counter-intuitive.\n&gt; \n\nNot really.  The 202 response indicates that the request was received\nand processed.  Since it *might* be successful, it would be\ninappropriate to send a 4xx failure response code.  Reading from the\n202 Accepted definition again:\n\n&quot;The request might or might not eventually be acted upon, as it might\nbe disallowed when processing actually takes place...  The 202 response\nis intentionally non-committal.&quot;\n\nIf the users fail to confirm their intent within a reasonable amount of\ntime, the request might be disallowed.  It might not be acted on at\nall, the 202 response makes no promises, like 200 and 204 explicitly do.\n\n&gt;\n&gt; To quote 2616 about redirects: &quot;this class of status code indicates\n&gt; that further action needs to be taken by the user agent in order to\n&gt; fulfil the request&quot;. It seems it covers the grounds of a confirmation\n&gt; quite well.\n&gt;\n\nThere&#39;s always more than one way to skin a cat, perhaps you have\nfound another.  Then again, 3xx seeks further action from the user\nagent, I&#39;m seeking further action from the user.  I&#39;m on board with a\n300 Multiple Choices response to a DELETE, another use-case would be a\nnegotiated URI, where a DELETE returns a form allowing one or more\nvariants, or the resource as a whole, to be DELETEd.\n\nAnd that&#39;s the bugger with HTTP, 3xx seeks further action from the user\nagent, except when 300 seeks further action from the user.  2xx means\nsuccess, except when 202 means &#39;potential failure&#39;.  4xx indicates a\ntemporary failure, except when 410 means a permanent condition... it&#39;s\ndangerous to rely too much on generalizations with this protocol.\n\n&gt; \n&gt; From there you&#39;re at freedom to issue a successful DELETE, maybe\n&gt; simply on calling DELETE on the same resource with a confirmation\n&gt; ticket (/myresource?confirm=1234). Then a 2xx will be actually\n&gt; accurate.\n&gt; \n\nFrom the sound of it, though, I have requested the skin of a calico,\nand you have brought me the skin of a siamese.  I have no intention of\nallowing resources to be un-DELETEd, so I see no reason to move them to\nanother URI, therefore I have nowhere to redirect anyone *to*.  I&#39;m not\nlooking to implement any sort of trash-can mechanism, I simply want to\nDELETE a resource upon user request.  Again, there is nothing\n&quot;inaccurate&quot; about using a 202 response to indicate _potential_ failure.\n\n-Eric\n\n"}}