{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"aX-NtJwXxxBcLy2RyCOpaqi3lR2Dkr3iXabgV5HOQcq1jUYCf25F8EUr-wWD-41M6klhdEPnCy6TZwmV9ZcY3__-8LOx2A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] idempotent notifications","postDate":"1012524898","msgId":503,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTlFNzYyLkMxQzkwNEVBQHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTMxMTEwOTQ4MC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPiA8T0UxNWxGUU5Ld0pzeHpPRVEwWjAwMDIxNDRhQGhvdG1haWwuY29tPiA8M0M1OUI0RTUuRkJBQkI2M0BwcmVzY29kLm5ldD4gPE9FMTdTb0pEZ0lxcG9ydWZkRGgwMDAyMTVjOEBob3RtYWlsLmNvbT4="},"prevInTopic":502,"nextInTopic":538,"prevInTime":502,"nextInTime":504,"topicId":453,"numMessagesInTopic":36,"msgSnippet":"... I think that there are strong backwards-compatibility forces that argue in favour of using standard HTTP methods. But actually I m willing to allow the","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 1 Feb 2002 00:56:08 -0000\r\nReceived: (qmail 24298 invoked from network); 1 Feb 2002 00:56:06 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m4.grp.snv.yahoo.com with QMQP; 1 Feb 2002 00:56:06 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 1 Feb 2002 00:56:06 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g110u4N29885;\n\tThu, 31 Jan 2002 16:56:04 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g110u2e23140;\n\tThu, 31 Jan 2002 16:56:02 -0800\r\nMessage-ID: &lt;3C59E762.C1C904EA@...&gt;\r\nDate: Thu, 31 Jan 2002 16:54:58 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: Rest-Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] idempotent notifications\r\nReferences: &lt;Pine.WNT.4.43.0201311109480.1400-100000@...&gt; &lt;OE15lFQNKwJsxzOEQ0Z0002144a@...&gt; &lt;3C59B4E5.FBABB63@...&gt; &lt;OE17SoJDgIqporufdDh000215c8@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Mike Dierken&quot; wrote:\n&gt; \n&gt;...\n&gt; I don&#39;t mean the details in the body, I mean (from Alex&#39;s example) the\n&gt; method used for the notification.\n\nI think that there are strong backwards-compatibility forces that argue\nin favour of using standard HTTP methods. But actually I&#39;m willing to\nallow the application to use whatever methods (standard or extension) it\nwants.\n\n&gt; Even with no details about the current or changed values of the the\n&gt; resource, I would like to know what type of operation occurred.\n\nYou *might* like to know. But is it worth complicating the\nspecification?\n\n&gt; &quot;Having information about what happened on the web server&quot; - the web server\n&gt; would have the results of applying what happned, but it wouldn&#39;t have a\n&gt; record of what happened. It wouldn&#39;t (in general) have an audit trail - like\n&gt; &#39;paul edited this file at 12:00am with vi&#39;. It would have &#39;the file says\n&gt; &quot;hello world&quot;&#39;.\n\nIf the audit trail is important then the server should have a resource\nrepresenting the audit trail. If the audit trail is NOT important then\nwhy do notification clients care about it? I&#39;m a hardliner on this\nprinciple that there should be nothing in the notification that is not\njust a summary of information available on the site.\n\n&gt; Also, I don&#39;t want &#39;twenty event types&#39;, I only want HTTP referenceable\n&gt; &#39;event types&#39; - a mapping of what occurred into http state transition\n&gt; operations. Having &#39;twenty event types&#39; is analagous to having twenty http\n&gt; methods. \n\nI am not convinced that the basic HTTP methods are automatically the set\nof event types all applications would like. \n\n&gt;...\n&gt; If you don&#39;t have &#39;reliable&#39; delivery.\n\nI think that part of the genius of HTTP is loose binding. And part of\nthat is presuming that you don&#39;t have anything more reliable than TCP.\n\n&gt; Watching a file that contains READ occurrances is fine - but I would like to\n&gt; declare that in the subscription in a standardized way (WATCH /foo/logins\n&gt; method=READ) rather than a URI up to application definition (WATCH\n&gt; /foo/logins/all_reads).\n\nAnd some other user is going to want to watch READ occurrences FROM a\nparticular range of IP addresses. We either need to define a really\nhairy, Turing-complete filter language or we need to leave it up to the\napplication. I claim that the &quot;HTTP solution&quot; is to leave it up to the\napplication to do with resource modeling. Now why is your seemingly\nreasonable request any different in kind, not just degree, from the guy\nwho wants to filter by IP address or time of day or content-type or ...\n\nThat content-type example is particularly interesting because it is\npurely in the domain of HTTP so it falls into the same category as the\nmethod. Should people be able to filter on content-type as well as\nmethod? What about filtering on Host:. etc. etc.\n\nJust do it with the URI and be done with it! Reformulating queries and\nfilters as URIs is one of the most brilliant things about the Web and I\nwant to emulate it.\n\n Paul Prescod\n\n"}}