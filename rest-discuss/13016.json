{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":339031295,"authorName":"Sam Johnston","from":"Sam Johnston &lt;samj@...&gt;","profile":"sam.johnston@ymail.com","replyTo":"SENDER","senderId":"9bkSTxPhrmxTbSBYfbbqaNSSsE1zvPIsW310l9SB8L1riFPAhwAEyaBY7GEAwsksJCWImI_bmdMh0yv_uUI9mMK7zQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] conditional gets returning different data","postDate":"1246061692","msgId":13016,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIxNjA2ZGNmMDkwNjI2MTcxNHkyN2VjYjVjZHljOWQwMDE3NDA0MjMyNmQxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRBNDUxQ0RBLjQwMDA0MDVAcmVkaGF0LmNvbT4=","referencesHeader":"PDRBNDUxQ0RBLjQwMDA0MDVAcmVkaGF0LmNvbT4="},"prevInTopic":13011,"nextInTopic":13017,"prevInTime":13015,"nextInTime":13017,"topicId":13011,"numMessagesInTopic":3,"msgSnippet":"Bill, This is certainly something that should be tracked on the client side, though I d be very wary of trying to overload the existing caching mechanisms","rawEmail":"Return-Path: &lt;samj@...&gt;\r\nX-Sender: samj@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17665 invoked from network); 27 Jun 2009 00:15:39 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.re1.yahoo.com with QMQP; 27 Jun 2009 00:15:39 -0000\r\nX-Received: from unknown (HELO mail-gx0-f211.google.com) (209.85.217.211)\n  by mta3.grp.sp2.yahoo.com with SMTP; 27 Jun 2009 00:15:38 -0000\r\nX-Received: by gxk7 with SMTP id 7so4358903gxk.18\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 26 Jun 2009 17:14:52 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.13.198 with SMTP id d6mr1516346iba.32.1246061692485; Fri, \n\t26 Jun 2009 17:14:52 -0700 (PDT)\r\nIn-Reply-To: &lt;4A451CDA.4000405@...&gt;\r\nReferences: &lt;4A451CDA.4000405@...&gt;\r\nDate: Sat, 27 Jun 2009 02:14:52 +0200\r\nMessage-ID: &lt;21606dcf0906261714y27ecb5cdyc9d00174042326d1@...&gt;\r\nTo: Bill Burke &lt;bburke@...&gt;\r\nCc: REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=00221540005e8c8221046d49587d\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Sam Johnston &lt;samj@...&gt;\r\nSubject: Re: [rest-discuss] conditional gets returning different data\r\nX-Yahoo-Group-Post: member; u=339031295; y=Nfprh0y8qkaBpp_3Yepw6RX_DZ4JsyiANwRxIw_iwysSmv59C3tFfuG4bdzNLYCZNQ\r\nX-Yahoo-Profile: sam.johnston@...\r\n\r\n\r\n--00221540005e8c8221046d49587d\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nBill,\n\nThis is certainly something that should be tracked on the client sid=\r\ne,\nthough I&#39;d be very wary of trying to overload the existing caching\nmecha=\r\nnisms because their behaviour is both well defined and well known.\n\nThe fir=\r\nst thing that came to my mind when I saw this was GData\nqueries&lt;http://code=\r\n.google.com/apis/gdata/docs/2.0/reference.html#Queries&gt;ala:\n\nhttp://www.exa=\r\nmple.com/feeds/jo?q=3DDarcy&*updated-min=3D2005-04-19T15:30:00Z*\n\nOf course=\r\n you could pick up this timestamp from the Last-Modified header,\nbut don&#39;t =\r\nuse If-Modified-Since (which returns the entire resource if it&#39;s\nbeen modif=\r\nied, or nothing). The problem with timestamps is that regardless\nof the pre=\r\ncision there&#39;s always the chance that you&#39;ll have multiple events\nat the sa=\r\nme &quot;instant&quot; and will end up missing some (which is not great when\nthey&#39;re =\r\nthings like payments).\n\nEnter ETags which are in fact deterministic. Of cou=\r\nrse for them to make\nsense (given they&#39;re &quot;random&quot; identifiers rather than =\r\nsequences - which are\nnotoriously difficult to maintain in scalable cloud a=\r\nrchitectures) you need\nto track the order that messages are committed. When=\r\n a clients asks for\n&quot;messages since C0QBRXcycSp7ImA9WxRVFUk&quot; (perhaps last-=\r\netag=3Dxyz in the query\nstring?) you need to be able to replay the intermed=\r\niary messages and return\nthe ETag of the latest one with the resultset.\n\nAl=\r\nso &quot;mean time between updates&quot; is a clever idea but it sounds like an\nattri=\r\nbute on the topic object itself. Objects in queues are generally\nimmutable =\r\nso it doesn&#39;t make sense to prematurely expire them by overloading\nthe cach=\r\ning directives.\n\nSam\n\nOn Fri, Jun 26, 2009 at 9:09 PM, Bill Burke &lt;bburke@r=\r\nedhat.com&gt; wrote:\n\n&gt;\n&gt;\n&gt; I was thinking about implementing a RESTful topic =\r\n(as opposed to queue).\n&gt; In Java JMS land a subscriber can make himself per=\r\nsistent with a\n&gt; topic. This means that the topic keeps a placeholder for t=\r\nhe subscriber\n&gt; so that when the subscriber asks for a message, it gets the=\r\n next message\n&gt; after the last one it read. The problem with this of course=\r\n is that the\n&gt; server must maintain a session for each subscriber.\n&gt;\n&gt; So, =\r\nto flip the problem around, how about a subscriber doing the\n&gt; book-keeping=\r\n itself? The topic would remember all of its messages and\n&gt; the order in wh=\r\nich they were published. The subscriber would just tell\n&gt; the topic the ind=\r\nex it wants.\n&gt;\n&gt; Which brings me to my thought. What about using conditiona=\r\nl gets to\n&gt; implement this?\n&gt;\n&gt; GET /topic would return one posted message:=\r\n\n&gt;\n&gt; 200\n&gt; Content-Type: ...\n&gt; ETag: 34234234\n&gt; Last-Modified: /6/26/2009 .=\r\n..\n&gt;\n&gt; &lt;message-body&gt;\n&gt;\n&gt; The ETag and/or Last-Modified header would be the=\r\n index into the topic.\n&gt; A non-conditional GET would return the latest post=\r\ned message. A\n&gt; conditional GET would return a message that was posted *rig=\r\nht after* the\n&gt; ETAG/Last-Modified combo. If there are no new messages in t=\r\nhe topic,\n&gt; the conditional GET would return 304, NOT MODIFIED.\n&gt;\n&gt; An inte=\r\nresting side effect of this is that a Cache-Control could\n&gt; control(suggest=\r\n) how often the subscribers should poll for new messages.\n&gt; Like if somebod=\r\ny conditionally gets an older index, the server would\n&gt; return no-cache as =\r\nthere are newer messages in the topic. A server\n&gt; could keep an average rat=\r\ne of publishing and use that average time in a\n&gt; max-age value.\n&gt;\n&gt; --\n&gt; Bi=\r\nll Burke\n&gt; JBoss, a division of Red Hat\n&gt; http://bill.burkecentral.com\n&gt;  \n=\r\n&gt;\n\r\n--00221540005e8c8221046d49587d\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nBill,&lt;br&gt;&lt;br&gt;This is certainly something that should be tracked on the clie=\r\nnt side, though I&#39;d be very wary of trying to overload the existing cac=\r\nhing mechanisms because their behaviour is both well defined and well known=\r\n.&lt;br&gt;\n&lt;br&gt;The first thing that came to my mind when I saw this was &lt;a href=\r\n=3D&quot;http://code.google.com/apis/gdata/docs/2.0/reference.html#Queries&quot;&gt;GDat=\r\na queries&lt;/a&gt; ala:&lt;br&gt;&lt;blockquote&gt;&lt;a href=3D&quot;http://www.example.com/feeds/j=\r\no?q=3DDarcy&amp;&quot;&gt;http://www.example.com/feeds/jo?q=3DDarcy&amp;&lt;/a&gt;&lt;b&gt;upda=\r\nted-min=3D2005-04-19T15:30:00Z&lt;/b&gt;&lt;br&gt;\n&lt;/blockquote&gt;Of course you could pic=\r\nk up this timestamp from the Last-Modified header, but don&#39;t use If-Mod=\r\nified-Since (which returns the entire resource if it&#39;s been modified, o=\r\nr nothing). The problem with timestamps is that regardless of the precision=\r\n there&#39;s always the chance that you&#39;ll have multiple events at the =\r\nsame &quot;instant&quot; and will end up missing some (which is not great w=\r\nhen they&#39;re things like payments).&lt;br&gt;\n&lt;br&gt;Enter ETags which are in fac=\r\nt deterministic. Of course for them to make sense (given they&#39;re &quot;=\r\nrandom&quot; identifiers rather than sequences - which are notoriously diff=\r\nicult to maintain in scalable cloud architectures) you need to track the or=\r\nder that messages are committed. When a clients asks for &quot;messages sin=\r\nce C0QBRXcycSp7ImA9WxRVFUk&quot; (perhaps last-etag=3Dxyz in the query stri=\r\nng?) you need to be able to replay the intermediary messages and return the=\r\n ETag of the latest one with the resultset.&lt;br&gt;\n&lt;br&gt;Also &quot;mean time be=\r\ntween updates&quot; is a clever idea but it sounds like an attribute on the=\r\n topic object itself. Objects in queues are generally immutable so it doesn=\r\n&#39;t make sense to prematurely expire them by overloading the caching dir=\r\nectives.&lt;br&gt;\n&lt;br&gt;Sam&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Jun 26, 2009=\r\n at 9:09 PM, Bill Burke &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:bburke@redh=\r\nat.com&quot; target=3D&quot;_blank&quot;&gt;bburke@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;block=\r\nquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 2=\r\n04); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=\r\n=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;=\r\n\n&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt; width: 470px; float:=\r\n left;&quot;&gt;\n\n\n    &lt;div&gt;\n            \n            &lt;br&gt;&lt;br&gt;\n      \n      &lt;p&gt;I wa=\r\ns thinking about implementing a RESTful topic (as opposed to queue). &lt;br&gt;\n =\r\n   In Java JMS land a subscriber can make himself persistent with a &lt;br&gt;\nto=\r\npic.  This means that the topic keeps a placeholder for the subscriber &lt;br&gt;=\r\n\nso that when the subscriber asks for a message, it gets the next message &lt;=\r\nbr&gt;\nafter the last one it read.  The problem with this of course is that th=\r\ne &lt;br&gt;\nserver must maintain a session for each subscriber.&lt;br&gt;\n&lt;br&gt;\nSo, to =\r\nflip the problem around, how about a subscriber doing the &lt;br&gt;\nbook-keeping=\r\n itself?  The topic would remember all of its messages and &lt;br&gt;\nthe order i=\r\nn which they were published.  The subscriber would just tell &lt;br&gt;\nthe topic=\r\n the index it wants.&lt;br&gt;\n&lt;br&gt;\nWhich brings me to my thought.  What about us=\r\ning conditional gets to &lt;br&gt;\nimplement this?&lt;br&gt;\n&lt;br&gt;\nGET /topic would retu=\r\nrn one posted message:&lt;br&gt;\n&lt;br&gt;\n200&lt;br&gt;\nContent-Type: ...&lt;br&gt;\nETag: 3423423=\r\n4&lt;br&gt;\nLast-Modified: /6/26/2009 ...&lt;br&gt;\n&lt;br&gt;\n&lt;message-body&gt;&lt;br&gt;\n&lt;br&gt;\n=\r\nThe ETag and/or Last-Modified header would be the index into the topic. &lt;br=\r\n&gt;\n    A non-conditional GET would return the latest posted message.  A &lt;br&gt;=\r\n\nconditional GET would return a message that was posted *right after* the &lt;=\r\nbr&gt;\nETAG/Last-Modified combo.  If there are no new messages in the topic, &lt;=\r\nbr&gt;\nthe conditional GET would return 304, NOT MODIFIED.&lt;br&gt;\n&lt;br&gt;\nAn interes=\r\nting side effect of this is that a Cache-Control could &lt;br&gt;\ncontrol(suggest=\r\n) how often the subscribers should poll for new messages. &lt;br&gt;\n  Like if so=\r\nmebody conditionally gets an older index, the server would &lt;br&gt;\nreturn no-c=\r\nache as there are newer messages in the topic.  A server &lt;br&gt;\ncould keep an=\r\n average rate of publishing and use that average time in a &lt;br&gt;\nmax-age val=\r\nue.&lt;br&gt;\n&lt;br&gt;\n-- &lt;br&gt;\nBill Burke&lt;br&gt;\nJBoss, a division of Red Hat&lt;br&gt;\n&lt;a hre=\r\nf=3D&quot;http://bill.burkecentral.com&quot; target=3D&quot;_blank&quot;&gt;http://bill.burkecentr=\r\nal.com&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div width=3D&quot;1&quot; style=3D&quot;col=\r\nor: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote=\r\n&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--00221540005e8c8221046d49587d--\r\n\n"}}