{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"lU7rxg05P1-nIFrPN7O5rp8UJmcf-Sk14ytg2jyQbxprJa-Ks1o2DdqEhAW-I4iFvLWPBfkTg-b8MFv1kzQI4j67u1qhIPY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Restful Approaches to some Enterprise Integration \tProblems","postDate":"1277919722","msgId":15764,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlsV1NWNmFxbFA2RGJReWN4cjA2WHdxRHFmZDdVY1dTZE1WQ0xHbEBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDE0NzgzNC4zNzA1LnFtQHdlYjExMDcxNC5tYWlsLmdxMS55YWhvby5jb20+","referencesHeader":"PDE0NzgzNC4zNzA1LnFtQHdlYjExMDcxNC5tYWlsLmdxMS55YWhvby5jb20+"},"prevInTopic":15763,"nextInTopic":15766,"prevInTime":15763,"nextInTime":15765,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"Bryan: ... HTTP does not offer a Guaranteed Delivery model. However you can achieve the same results using Idempotency. For example, HTTP PUT is defined as an","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83586 invoked from network); 30 Jun 2010 17:42:04 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m11.grp.re1.yahoo.com with QMQP; 30 Jun 2010 17:42:04 -0000\r\nX-Received: from unknown (HELO mail-wy0-f179.google.com) (74.125.82.179)\n  by mta3.grp.sp2.yahoo.com with SMTP; 30 Jun 2010 17:42:03 -0000\r\nX-Received: by wyg36 with SMTP id 36so593106wyg.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 30 Jun 2010 10:42:02 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.89.132 with SMTP id c4mr11737269wef.106.1277919722339; \n\tWed, 30 Jun 2010 10:42:02 -0700 (PDT)\r\nX-Received: by 10.216.37.207 with HTTP; Wed, 30 Jun 2010 10:42:02 -0700 (PDT)\r\nIn-Reply-To: &lt;147834.3705.qm@...&gt;\r\nReferences: &lt;147834.3705.qm@...&gt;\r\nDate: Wed, 30 Jun 2010 13:42:02 -0400\r\nX-Google-Sender-Auth: nxq5y99EsZGOIpcXXCS1g3t3kzE\r\nMessage-ID: &lt;AANLkTilWSV6aqlP6DbQycxr06XwqDqfd7UcWSdMVCLGl@...&gt;\r\nTo: Bryan Taylor &lt;bryan_w_taylor@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Restful Approaches to some Enterprise Integration \n\tProblems\r\nX-Yahoo-Group-Post: member; u=69164307; y=vaF0KAZIx6luvGzCUrUNrB-bglpxY03d8F5lNo5OZ7ss\r\nX-Yahoo-Profile: mamund\r\n\r\nBryan:\n\nOn Wed, Jun 30, 2010 at 12:41, Bryan Taylor &lt;bryan_w_taylor@yahoo.c=\r\nom&gt; wrote:\n&gt; My company is examining adopting a RESTful model to its enterp=\r\nrise architecture. Part of the discussion comes down to finding RESTful idi=\r\noms, standards, and/or tools to apply to certain recurring enterprise integ=\r\nration problems.\n&gt;\n&gt; Specifically, we are trying to find RESTful solutions =\r\nto:\n&gt;\n&gt; 1) Guaranteed Delivery - we need a paradigm to follow so that one s=\r\nervice can transfer a sequence of resource representations to another relia=\r\nbly even though both services and the network suffer temporary unreliabilit=\r\ny\n\nHTTP does not offer a Guaranteed Delivery model. However you can\nachieve=\r\n the same results using Idempotency. For example, HTTP PUT is\ndefined as an=\r\n Idempotent write operation. It can be safely repeated by\nthe client until =\r\nthe server sends an acknowledgement. You can also use\nmore complicated patt=\r\nerns such as using HTTP POST against a container\nURI after the client has f=\r\nirst acquired a concurrency token from the\nserver (a &quot;ticket&quot;) and using th=\r\nis token for each attempt until the\nclient gets an acknowledgement.\n\n&gt;\n&gt; 2)=\r\n Distributed Transactions - we need a paradigm to allow state changes on mu=\r\nltiple services to happen so that the changes succeed or fail as a unit\n&gt;\n&gt;=\r\n 3) Long running operations - we need asynchronous invocations between serv=\r\nices and a mechanism for the invoking service to find out when the invoked =\r\nservice is done given that this work may take indefinitely long\n\nIn both DT=\r\n and LRT, HTTP offers the 202 Accept response to requests.\nThe spec include=\r\ns information on response bodies that can include\npointers to resources whe=\r\nre progress indicators can be displayed\nthroughout the life for the activit=\r\ny. Using this pattern it is not\nnecessary to expose transaction token detai=\r\nls (commits, rollbacks,\netc.) to the initiating client. Instead, clients ca=\r\nn be given a\npointer to the progress resource and monitor the ultimate\nsucc=\r\ness/failure. Since HTTP allows any party to act as client or\nserver, distri=\r\nbuted async/long running operations can be sued to\neffectively mimic DTs.\n\n=\r\n&gt;\n&gt; 4) Workflow Orchestration - we would like to have orchestration service=\r\ns that define business processes via standardized representations (eg BPMN)=\r\n, then execute instances of those processes and build up an process instanc=\r\ne execution data resource by interacting with other RESTful resources using=\r\n message exchange patterns that could specify the above behaviors.\n\nSounds =\r\nlike you need to define a media-type that encapsulates your\nspecific use ca=\r\nses and allows available steps to be expressed as\nhypermedia elements withi=\r\nn the response representations.\n\n&gt;\n&gt; I&#39;m sure that some of these topics hav=\r\ne been discussed to death. I&#39;m not looking to repeat the details in one thr=\r\nead, but just wondering if people can give me quick dump of the conventiona=\r\nl wisdom as to how to approach such problems, and/or point me to solutions =\r\n(or alternatives) that they consider consistent with RESTful approaches.\n&gt;\n=\r\n&gt; I found the Rest-* effort at http://www.jboss.org/reststar . The name of =\r\nthis project tweaks me, but some of the specs under it seem relevant. Are t=\r\nhere others? Are these problems that the community sees value in solving th=\r\nrough standards and tooling?\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; --------------------------------=\r\n----\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}