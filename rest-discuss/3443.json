{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":81035509,"authorName":"Vincent D Murphy","from":"Vincent D Murphy &lt;vdm@...&gt;","profile":"johnfoobar1","replyTo":"SENDER","senderId":"9mzwnhvM6FSX1mUaV3hOGi7H3dWEBL8_T_xGSSCKS8-rl9kAzyEewCXxpPHwd4-fMqziXHYD2UqDv50s-X9lISgSTVY","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Containers and nested representations","postDate":"1046439104","msgId":3443,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEZBNjA5Nzc4LTRCMjAtMTFENy05NjIwLTAwMDM5M0E1MzQ4MkB2ZG0uY2M+","inReplyToHeader":"PDNFNUY1MjI5LjkwMjA4MDZAc2VtYW50aWNvLmNvbT4="},"prevInTopic":3440,"nextInTopic":3450,"prevInTime":3442,"nextInTime":3444,"topicId":3414,"numMessagesInTopic":7,"msgSnippet":"... yeah, but why make the client perform an extra request? if the client isn t interested it can check for 200 or whatever and throw away the body. i am","rawEmail":"Return-Path: &lt;vdm@...&gt;\r\nX-Sender: vdm@...\r\nX-Apparently-To: rest-discuss@...\r\nReceived: (EGP: mail-8_2_3_4); 28 Feb 2003 13:32:03 -0000\r\nReceived: (qmail 35863 invoked from network); 28 Feb 2003 13:32:03 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 28 Feb 2003 13:32:03 -0000\r\nReceived: from unknown (HELO mail.online.ie) (213.159.130.68)\n  by mta1.grp.scd.yahoo.com with SMTP; 28 Feb 2003 13:32:03 -0000\r\nReceived: from vdm.cc (ts03-040.cork.indigo.ie [194.125.165.40])\n\tby mail.online.ie (Postfix) with ESMTP\n\tid 3F56BB03D; Fri, 28 Feb 2003 13:32:00 +0000 (GMT)\r\nDate: Fri, 28 Feb 2003 13:31:44 +0000\r\nSubject: Re: [rest-discuss] Containers and nested representations\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMime-Version: 1.0 (Apple Message framework v551)\r\nCc: rest-discuss@...\r\nTo: Richard Padley &lt;rest-discuss@...&gt;\r\nIn-Reply-To: &lt;3E5F5229.9020806@...&gt;\r\nMessage-Id: &lt;FA609778-4B20-11D7-9620-000393A53482@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Apple Mail (2.551)\r\nFrom: Vincent D Murphy &lt;vdm@...&gt;\r\nX-Yahoo-Group-Post: member; u=81035509\r\nX-Yahoo-Profile: johnfoobar1\r\n\r\nOn Friday, February 28, 2003, at 12:12 PM, Richard Padley wrote:\n&gt;&gt;&gt; The response is\n&gt;&gt;&gt;\n&gt;&gt;&gt; HTTP/1.1 204 No Content\n&gt;&gt;\n&gt;&gt; Maybe this could be a 200 with the updated box/100?  The 204 just \n&gt;&gt; seems\n&gt;&gt; kind of &#39;useless&#39; to me.\n&gt;\n&gt; I&#39;ve never been sure what to return in the message-body after a PUT. I\n&gt; figured that if the client needs to check the state of the resource (in\n&gt; case the server adds some information to the PUT representation), it\n&gt; could perform a GET request.\n\nyeah, but why make the client perform an extra request?\n\nif the client isn&#39;t interested it can check for 200 or whatever and \nthrow away the body.\n\ni am thinking of a scenario where an abbreviation or shortcut string \n(like &quot;/.&quot;) is PUT and its expansion (&quot;slashdot&quot;) is used as the \nrepresentation.  maybe this isn&#39;t useful enough to warrant returning an \nentity body, but perhaps there are application use cases where it is.\n\n&gt;&gt; Rather than a big fat PUT to the container, you could split your \n&gt;&gt; request up in to a number of constituent requests to constituent \n&gt;&gt; resources.  for example:\n&gt;\n&gt; My application semantics require that the update is atomic. This fits\n&gt; nicely with the idea of supplying a &#39;complete&#39; representation of a\n&gt; container resource (with all its contained resources).\n\nagreed.\n\n&gt;&gt; 2. POST widget/35&#39;s URI to box/100 (possible after POSTing 35 to \n&gt;&gt; widgets).\n&gt;\n&gt; Again there are choices here. I can either POST the URI for the\n&gt; contained resource (widget 35) into the container :\n&gt;\n&gt; POST /box/100 HTTP/1.1\n&gt; Content-Type: text/xml\n&gt;\n&gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt;     &lt;widget x:href=&quot;/widget/35&quot;&gt;\n&gt; &lt;/box&gt;\n\nwhy the outer &lt;box&gt; element in the body?  haven&#39;t you addressed that in \nthe request URI?  i don&#39;t want to appear to be pedantic but this looks \nlike an instance of the DRY (Don&#39;t Repeat Yourself) anti-pattern.\n\nwhat are the semantics if the request URI and the (xpath) /box/x:href \nattribute is another (different) URI?\n\n&gt; Provided widget 35 already exists I&#39;d assume the server response would \n&gt; be\n&gt;\n&gt; HTTP/1.1 204 No Content\n&gt;\n&gt; Or I could post the respresentation of the contained resource to the\n&gt; container:\n&gt;\n&gt; POST /box/100 HTTP/1.1\n&gt; Content-Type: text/xml\n&gt;\n&gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt;     &lt;widget&gt;\n&gt;       &lt;widget_id&gt;35&lt;widget_id&gt;\n&gt;       &lt;colour&gt;Black&lt;/colour&gt;\n&gt;       &lt;size&gt;9&lt;/size&gt;\n&gt;     &lt;/widget&gt;\n&gt; &lt;/box&gt;\n\ni think whether you use the URI or the inline representation depends on \nwhether the widget is being implicitly created.  if it already exists i \nwould definitely say that the URI should be used.  if there is no URI, \nthen the server application can go ahead and implicitly create it.  i \nthink all combinations of uri/representation are acceptable so long as \ntheir semantics are clearly defined, e.g.:\n\nuri | representation | action\n----+----------------+--------------------------------------\n   1 |              0 | use uri\n   1 |              1 | use uri (ignore representation)\n   0 |              1 | create (using supplied represenation)\n   0 |              0 | invalid\n\n&gt; Now I&#39;m not sure what the response is - 201 Created seems absolutlely\n&gt; the right thing here, but it simply breaks if I POST the respresntation\n&gt; of two new resources at the same time\n&gt;\n&gt; POST /box/100 HTTP/1.1\n&gt; Content-Type: text/xml\n&gt;\n&gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt;     &lt;widget&gt;\n&gt;       &lt;widget_id&gt;35&lt;widget_id&gt;\n&gt;       &lt;colour&gt;Black&lt;/colour&gt;\n&gt;       &lt;size&gt;9&lt;/size&gt;\n&gt;     &lt;/widget&gt;\n&gt;     &lt;widget&gt;\n&gt;       &lt;widget_id&gt;40&lt;widget_id&gt;\n&gt;       &lt;colour&gt;White&lt;/colour&gt;\n&gt;       &lt;size&gt;9&lt;/size&gt;\n&gt;     &lt;/widget&gt;\n&gt; &lt;/box&gt;\n&gt;\n&gt; Now the only response possible seems to be 204 (or 200) - I can&#39;t\n&gt; respond with two lots of 201 Created. And this can only get more \n&gt; complex\n&gt; if we consider the case then a POST to that box could create one widget\n&gt; and modify another.\n\nagreed.  however i question how important this use case is.  can&#39;t you \nalways just POST one widget at a time?  then you can reject input with \nmore than one URIless widget element.\n\nalso i think this scenario breaks down if you accept my previous point \nabout the redundancy of the outer &lt;box&gt; element.  you couldn&#39;t have a \nsecond &lt;widget&gt; element in this case because you can only have one root \nelement in an XML document.\n\nanother possibility to throw in the soup is that box resources could \nhave subordinate &#39;widgets&#39; container resources to which you POST e.g. \n/boxes/100/widgets but i won&#39;t go in to that here.\n\n&gt;&gt; 3. DELETE 34.\n&gt;&gt;    or\n&gt;&gt;    PUT box/100 minus the mention of widget/34.\n&gt;&gt;\n&gt;&gt; the trouble with the delete of 34 is that the semantics are \n&gt;&gt; overloaded.\n&gt;&gt;  the PUT to the box that excludes the 34 really only removes it from \n&gt;&gt; the\n&gt;&gt; container, rather than deleting it outright.  these are two seperate\n&gt;&gt; semantic actions.\n&gt;\n&gt; I think the semantics I need require that deleteing a container will\n&gt; also delete all of the resouces it contains - atomic requirement again.\n&gt; I could see that case that this would not be a requirement in all\n&gt; applications.\n\nabsolutely not; this mirrors the functionality of cascading \nupdates/deletes in a relational database, and is therefore specific to \napplications.\n\n\n"}}