{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":136218993,"authorName":"Henry Story","from":"Henry Story &lt;henry.story@...&gt;","profile":"hjsatdoc","replyTo":"SENDER","senderId":"yhK5vRnR2mO6B5eK9zQu2azaQku-bXa2MVe0ml4tA1NyTB0K6zlRiUcCE_1bFOmZNgQ0zz2IrtXsIRF2sEf-hr2u4ENyhKsFgYd6Iw","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] URI + RDF + REST for well architected web applications","postDate":"1179359914","msgId":8505,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE0RjRFNTYzLUVFQjAtNDlFMS1BQTVFLTVGNEIxMDdBODZEMkBiYmxmaXNoLm5ldD4=","inReplyToHeader":"PDQ2NEI4Q0JGLjQwODA3MDBAZGVob3JhLm5ldD4=","referencesHeader":"PEEwRjE4RDU5LURFNzMtNEMxMi05ODc4LTYzNDQ0OTY4OTVCOEBiYmxmaXNoLm5ldD4JIDw3Y2Q4ZTA5MzA3MDUxNjE0NTZrNWYzN2UyNzZ0NjdkODgwNDcxNjEyYjBhZEBtYWlsLmdtYWlsLmNvbT4JIDw5MUQ2RDFCRS05RTkxLTQ0OUItOTE1OC1BOTY1RTU1OUMxRkVAYmJsZmlzaC5uZXQ+IDw3Y2Q4ZTA5MzA3MDUxNjE1MDdvNDJjNzA4MjBnNTU5ZjFlZDY3MjRmZjViM0BtYWlsLmdtYWlsLmNvbT4gPDQ2NEI4Q0JGLjQwODA3MDBAZGVob3JhLm5ldD4="},"prevInTopic":8503,"nextInTopic":8506,"prevInTime":8504,"nextInTime":8506,"topicId":8428,"numMessagesInTopic":17,"msgSnippet":"... URI are Universal Resource Identifiers. Nothing more nor less. Speaking of causal names, I guess you are hinting at Kripke, but I don t see the need to go","rawEmail":"Return-Path: &lt;henry.story@...&gt;\r\nX-Sender: henry.story@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 89356 invoked from network); 16 May 2007 23:58:57 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m36.grp.scd.yahoo.com with QMQP; 16 May 2007 23:58:57 -0000\r\nReceived: from unknown (HELO bblfish.net) (192.220.66.168)\n  by mta12.grp.scd.yahoo.com with SMTP; 16 May 2007 23:58:57 -0000\r\nReceived: (qmail 86966 invoked by uid 17064); 16 May 2007 23:58:34 -0000\r\nReceived: from unknown (HELO [10.0.230.198]) ([192.18.41.196])\n          (envelope-sender &lt;henry.story@...&gt;)\n          by 192.220.66.168 (qmail-ldap-1.03) with SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 16 May 2007 23:58:34 -0000\r\nIn-Reply-To: &lt;464B8CBF.4080700@...&gt;\r\nReferences: &lt;A0F18D59-DE73-4C12-9878-6344496895B8@...&gt;\t &lt;7cd8e0930705161456k5f37e276t67d880471612b0ad@...&gt;\t &lt;91D6D1BE-9E91-449B-9158-A965E559C1FE@...&gt; &lt;7cd8e0930705161507o42c70820g559f1ed6724ff5b3@...&gt; &lt;464B8CBF.4080700@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;14F4E563-EEB0-49E1-AA5E-5F4B107A86D2@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Wed, 16 May 2007 16:58:34 -0700\r\nTo: Bill de hOra &lt;bill@...&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: Henry Story &lt;henry.story@...&gt;\r\nSubject: Re: [rest-discuss] URI + RDF + REST for well architected web applications\r\nX-Yahoo-Group-Post: member; u=136218993; y=Jt8DfPyvpL4Oz45d_eGugxP8NjeyMS37o5EscG2TiRhRy6A\r\nX-Yahoo-Profile: hjsatdoc\r\n\r\nOn 16 May 2007, at 15:59, Bill de hOra wrote:\n&gt; Mike Dierken wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Well, I was just teasing, but since I don&#39;t know RDF, perhaps you  \n&gt; can\n&gt; &gt; explain to me what the &#39;node&#39; in RDF is meant to do or represent  \n&gt; and why\n&gt; &gt; a blank one is needed?\n&gt; &gt; Why is it that you want to relate that resource to another via the\n&gt; &gt; &#39;ownedBy&#39; property?\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On 5/16/07, *Henry Story* &lt;henry.story@...\n&gt; &gt; &lt;mailto:henry.story@...&gt;&gt; wrote:\n&gt; &gt;\n&gt; &gt; On 16 May 2007, at 14:56, Mike Dierken wrote:\n&gt; &gt;\n&gt; &gt; &gt; Which application are you suggesting is badly architected?\n&gt; &gt; &gt; RDF, because it can&#39;t describe something simple like a common  \n&gt; start\n&gt; &gt; &gt; page?\n&gt; &gt;\n&gt; &gt; RDF can describe the common start page. It&#39;s just that in order  \n&gt; to do\n&gt; &gt; so you need a blank node, ie an\n&gt; &gt; unnamed resource to describe it.\n&gt;\n&gt; So... blank nodes are a placeholder for causal names? That would be  \n&gt; seem\n&gt; to be so, since many people think URIs are proper names, and this\n&gt; thinking is clearly influencing web architectural decisions (cf, the\n&gt; debacle around http-range and &quot;information resources&quot;).\n\nURI are Universal Resource Identifiers. Nothing more nor less.\n\nSpeaking of causal names, I guess you are hinting at Kripke, but I  \ndon&#39;t see the need to go into that space of debate, however  \ninteresting that may be.\n&gt; It&#39;s this kind of axiom bake in that makes me quite nervous about the\n&gt; semantic web. Assuming that a URL which requires a blank node is bad\n&gt; design, is an assumption that one theory of names counts more than\n&gt; another.\nOk. Clearly I did not explain blank nodes clearly enough, as the  \nabove does not make sense.\nURLs don&#39;t require blank nodes, that is nonsense. Blank nodes are not  \nURLs by definition. They name, but have local scope, tied to the  \ndocument in which they find themselves.\n\nSo for example I could in this document describe you with the blank  \nnode [1]\n\n@prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt;\n\n_:bill a foaf:Person .\n_:bill foaf:name &quot;Bill DeHora&quot;\n_:bill foaf:homePage &lt;http://dehora.net/&gt; .\n_:bill foaf:blog &lt;http://dehora.net/journal&gt; .\n\nperhaps one day you will create a foaf file and give us a URL to  \nidentify you.\n\nThen I can say\n\n&lt;http://dehora.net/p/bill#i&gt; a foaf:Person .\n&lt;http://dehora.net/p/bill#i&gt; foaf:name &quot;Bill DeHora&quot; .\n&lt;http://dehora.net/p/bill#i&gt; foaf:homePage &lt;http://dehora.net/&gt; .\n&lt;http://dehora.net/p/bill#i&gt; foaf:blog &lt;http://dehora.net/journal&gt; .\n\n&gt; Anyone familiar with the modern philosphy will know that naming\n&gt; theory remains *contentious*. Bad design then is a leap, not an\n&gt; implication. Even though I agree with you on the design issue here, it\n&gt; give me indigestion to use naming theory to support it.\nThe web is all about URIs (well URLs in particular). It&#39;s one of the  \ncornerstones of the web. The other is HTTP\nused RESTfully. Sorry to say, but names are central to the web. They  \nmay have been contentious in academic papers, where\npeople do set out to test ideas to the limit, but clearly they work  \nvery well on the web. In any case for those who think they are  \ncontentious I suggest explaining what is contentious about them :-) .  \n(not here please)\n&gt; Why, just today, a colleague and I were talking about syndication  \n&gt; in the\n&gt; context of a folder system. In that case, there was a folder called\n&gt; &#39;health&#39; and it has a few direct child folders. All these folders have\n&gt; URLs. The Atom feed for the &#39;health&#39; URL only shows changes to the\n&gt; folder&#39;s direct children.\n&gt;\n&gt; Q: should that feed show changes to child content further down, ie\n&gt; should the feed scope work transitively?\n&gt;\n&gt; A: in this case yes, but in general for folder such structures, it\n&gt; depends on the what the &#39;childof&#39; relationship means. For example all\n&gt; categories are held in a root &#39;map&#39; folder, but the relationship  \n&gt; between\n&gt; it and its categories does not necessarily mean all category changes\n&gt; should show up in the map feed. Whereas the intent of the authors when\n&gt; they created the &#39;health&#39; folder was that all children were to do with\n&gt; health, hence the health feed should show all changes.\n&gt;\n&gt; Give it 20 years of bake in. When the web&#39;s Wittgenstein turns up, the\n&gt; undoing create an entire industry.\nI think you are getting very opaque here. I like Wittgenstein, but  \nhis later philosophy is acknowledged to be one of the most difficult  \nto read and understand.\n\nI much preferred your definition of a controller URL:\n\n&quot;&quot;&quot;\na URL whose /resource/ depends on who you are (or what your browser\nstate is); operationally any design that requires you to go through a\nmiddleman to get to the resource:\n&quot;&quot;&quot;\n\nNit picking a little: This needs to be rephrased with web  \narchitecture in mind. A URI, and hence a URL, identifies a  \n*resource*. So the above sentence does not quite make sense, though   \nit is really close. The problem with the URLs we were discussing [2],  \nis that they seem to identify a set of resources (a set being a  \nthing, it can have a URL) and behaves as a controller, returning a  \nrepresentation of one of the elements of the set depending on the  \nsettings in your browser. Since none of the elements of that set have  \nbeen given URLs one needs blank nodes to describe them in RDF (and so  \nin any other language too).\n\nThe resources pointed to by such URLs are in fact as you point out,  \nhiding other things. They are not switching one to those things, like  \na login page does, but really hiding them. Those things have no name  \nthat one can use independently of the context of one&#39;s browsing  \nexperience. One could invent a URN for them of course, but that would  \nnot be very helpful for locating them.\nIn RDF the simplest way to name them then is using a blank node (an  \nexistential quantifier, for those who have studied a little logic),  \nand relate those then to the resource which is their controller.\n\nSo using your terminology we can write:\n\n&lt;https://www.dev.java.net/servlets/StartPage&gt; a dehora:Controller ;\n      dehora:hides [ a foaf:PersonalProfileDocument;\n               foaf:primaryTopic [ foaf:name &quot;Henry Story&quot;;\n                                   foaf:mbox  \n&lt;mailto:henry.story@...&gt; ]\n             ];\n      dehora:hides [ a foaf:PersonalProfileDocument;\n               foaf:primaryTopic [ foaf:name &quot;James Gosling&quot;;\n                                   foaf:blog &lt;http://blogs.sun.com/ \njag/&gt; ]\n             ];\n      dehora:hides [ a foaf:PersonalProfileDocument;\n               foaf:primaryTopic [ foaf:name &quot;Tim Bray&quot;;\n                                   foaf:blog &lt;http://www.tbray.org/ \nongoing/&gt; ]\n             ];\n      .\n\n\nI like this. It makes the point more clearly than my previous attempt  \nto explain this by refering to representations.\nThose &#39;[&#39; stand for blank nodes by the way.\n\nSo not only can we describe dehora:Controllers now, but we can see  \nwhy they are opaque.\nOn the web opacity is not a good thing, mostly.\n\n&gt;\n&gt; cheers\n&gt; Bill\n\n[1] using N3 notation. RDF is not tied to xml. It&#39;s about semantics\n     see image at http://blogs.sun.com/bblfish/entry/ \ndropping_some_doap_into_netbeans\n[2] You mentioned:\n     http://www.google.com/calendar/render?pli=1\n     I mentioned:\n     https://www.dev.java.net/servlets/StartPage\n\n"}}