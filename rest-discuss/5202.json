{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159556043,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jalgermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"1AjsHGiUSWNpdtQ-VaJJlarAH4uGoblbRzUm-_dHmDLau87dKrXko9CJNVM4ZyR-PdjwSTu1E-fIcakfgjWJwDIFvzJhDmJbsicf2dcdneHUb4-y0Hk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Principles for designing RESTful systems to back-up choices?","postDate":"1125695275","msgId":5202,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQ4NDUyRDEyLTA5RkItNDNENC04MzdBLTE0NkQwMzVGQ0FCNkB0b3BpY21hcHBpbmcuY29tPg==","inReplyToHeader":"PEJBRDY5MzRFLTM0NjQtNDg3Ny04QzU0LUYxNzJCRTBENUVGRUB0b3BpY21hcHBpbmcuY29tPg==","referencesHeader":"PEJBRDY5MzRFLTM0NjQtNDg3Ny04QzU0LUYxNzJCRTBENUVGRUB0b3BpY21hcHBpbmcuY29tPg=="},"prevInTopic":5201,"nextInTopic":5210,"prevInTime":5201,"nextInTime":5203,"topicId":5196,"numMessagesInTopic":8,"msgSnippet":"Hi, just found a design priciple that could be applied to my problem. Sean McGrath wrote[1] about differentiating between system components that produce data","rawEmail":"Return-Path: &lt;jalgermissen@...&gt;\r\nX-Sender: jalgermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 61169 invoked from network); 2 Sep 2005 21:07:58 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m35.grp.scd.yahoo.com with QMQP; 2 Sep 2005 21:07:58 -0000\r\nReceived: from unknown (HELO moutng.kundenserver.de) (212.227.126.177)\n  by mta4.grp.scd.yahoo.com with SMTP; 2 Sep 2005 21:07:58 -0000\r\nReceived: from d115219.adsl.hansenet.de [80.171.115.219] (helo=[10.0.1.2])\n\tby mrelayeu.kundenserver.de with ESMTP (Nemesis),\n\tid 0MKwpI-1EBIlR1Tu0-0000kB; Fri, 02 Sep 2005 23:07:57 +0200\r\nMime-Version: 1.0 (Apple Message framework v734)\r\nIn-Reply-To: &lt;BAD6934E-3464-4877-8C54-F172BE0D5EFE@...&gt;\r\nReferences: &lt;BAD6934E-3464-4877-8C54-F172BE0D5EFE@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;D8452D12-09FB-43D4-837A-146D035FCAB6@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Fri, 2 Sep 2005 23:07:55 +0200\r\nTo: rest discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Apple Mail (2.734)\r\nX-Provags-ID: kundenserver.de abuse@... login:9fd5cd4d1b290f5c8d8bf21248da35c6\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Jan Algermissen &lt;jalgermissen@...&gt;\r\nSubject: Re: [rest-discuss] Principles for designing RESTful systems to back-up choices?\r\nX-Yahoo-Group-Post: member; u=159556043; y=j0-SiIAjGANLsPIjin5VHZruKbCh1PQXFcxvivBCvWVX-fKLJRZxj-v1\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nHi,\n\njust found a design priciple that could be applied to my problem.\n\nSean McGrath wrote[1] about differentiating between system components  \nthat produce data for general consumption (an RSS feed for eaxmple)  \nand system components that produce data with the intent to change the  \nbehaviour of another system component ( &#39;illocution&#39; vs. &#39;perlocution&#39;).\n\nDesign principle: if there is an illocution, consume the data using  \nGET, if there is a perlocution, the data producing component should  \nbe an actor and POST the data.\n\nIn my example below, the database component has no special intent  \nrelated to publishing the data, thus the data should be consumed by  \nthe monitoring app instead  of being POSTED to it.\n\n[Hmmm....writing this, I wonder if the illocution/perlocution is  \nsemantically bound to the data (the message), too  and how this  \nrelates to the message&#39;s self-descriptiveness.]\n\n\nJan\n\n\n\n[1] http://www.itworld.com/AppDev/1562/nls_ebizutterance060528/ \npfindex.html\n\nOn Aug 31, 2005, at 5:32 PM, Jan Algermissen wrote:\n\n&gt; Hi,\n&gt;\n&gt; I am puzzling with a question regarding a system design choice. My\n&gt; problem is that I see at least two options and I cannot base a choice\n&gt; fore either one of them on a design principle (and I just hate  \n&gt; arbitrary\n&gt; decisions not backed up by a reason).\n&gt;\n&gt; The issue is propably interesting and maybe someone can help me out.\n&gt; Here is the situation:\n&gt;\n&gt; I am having a network of several hosts (say C1...C42), a special host\n&gt; M running a network monitoring application and a host X running a\n&gt; database with configuration information about the hosts C1...C42.\n&gt;\n&gt; The goal is to generate part of the monitoring application&#39;s config\n&gt; file (what hosts to monitor, their IP addresses, names etc.) from the\n&gt; database running on X.\n&gt;\n&gt; The database comes as a Web application and among others there is\n&gt; a resource for the site (suppose it is named &#39;SITE&#39;) as a whole:\n&gt;\n&gt; http://ex.org/db/items/SITE\n&gt;\n&gt; A GET on this URI with an Accept header of application/rdf+xml will\n&gt; give me an RDF graph including general site information and all the\n&gt; hosts that make up the site and information about the hosts  \n&gt; (addresses,\n&gt; functionality and the like).\n&gt;\n&gt; Now, how do I use that information to generate the monitoring config\n&gt; file?\n&gt;\n&gt; Option 1: Write a script to be started on the monitoring host M that\n&gt; does\n&gt;            the following:\n&gt;            - GET the site RDF graph\n&gt;            - extract the host data from it and generate the file\n&gt;            - put the file in the rigth place\n&gt;            - restart monitoring application\n&gt;            - side issue: send errors/debugging information via POST to\n&gt;              a resource that is the foo:error_processor_resource of  \n&gt; the\n&gt;              site (we discovered the URI of that resource from the\n&gt; site&#39;s\n&gt;              RDF graph, too)\n&gt;\n&gt;            There is an OO pattern called &#39;Transaction Script&#39; which\n&gt; seems\n&gt;            to cover option 1 (conceptually, there might be other HTTP\n&gt;            request involved in the script&#39;s flow).\n&gt;\n&gt; Option 2: Since the monitoring application is a noun, shouldn&#39;t it\n&gt; actually\n&gt;            be a resource? As well as the config file itself? This  \n&gt; option\n&gt;            would mean to set up a tiny HTTP server with at least two\n&gt; resources\n&gt;\n&gt;            http://host-M.ex.org/monitoring-app\n&gt;            http://host-M.ex.org/monitoring-app/host-config-file\n&gt;\n&gt;            The config file resource could be implemented in a way\n&gt; that would\n&gt;            allow me to POST the site RDF graph to it and have the rest\n&gt;            being managed by the resource itself. After that, I could\n&gt; somehow\n&gt;            send a request  to the monitoring system resoure to have\n&gt; it restart.\n&gt;\n&gt;            With this option, logging would be (very naturally) done  \n&gt; to a\n&gt;            local HTTP access log, which  is a pretty common place to\n&gt; look\n&gt;            for stuff if something breaks.\n&gt;\n&gt; Let&#39;s ignore any issues of the amount of work, system admin&#39;s\n&gt; decisions and the\n&gt; like for now. What principles could I use to make a choice for option\n&gt; one or\n&gt; two?\n&gt;\n&gt; What I find interesting in particular is the issue of who\n&gt; actually triggers the 1. start of the script or 2. the sequence of\n&gt; GET on\n&gt; site URI and POST to config file URI (a transcation script too I\n&gt; suppose).\n&gt; In case 1. it can only be a some administrator logging in to M and\n&gt; starting\n&gt; the script. With option two, there are much more possibilities for\n&gt; having\n&gt; other events trigger the config file generation.\n&gt;\n&gt; Hmm...maybe that  is the principle already: greater reusability or\n&gt; being able to\n&gt; plug in filters between the GET and the POST in case there is a\n&gt; semantic change in\n&gt; the RDF graph I GET.\n&gt;\n&gt; Thoughts?\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ______________________________________________________________________ \n&gt; __\n&gt; _______________\n&gt; Jan Algermissen, Consultant & Programmer\n&gt; http://jalgermissen.com\n&gt; Tugboat Consulting, &#39;Applying Web technology to enterprise IT&#39;\n&gt; http://www.tugboat.de\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------ Yahoo! Groups Sponsor -------------------- \n&gt; ~--&gt;\n&gt; Get Bzzzy! (real tools to help you find a job). Welcome to the  \n&gt; Sweet Life.\n&gt; http://us.click.yahoo.com/A77XvD/vlQLAA/TtwFAA/W6uqlB/TM\n&gt; -------------------------------------------------------------------- \n&gt; ~-&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n________________________________________________________________________ \n_______________\nJan Algermissen, Consultant & Programmer                         \nhttp://jalgermissen.com\nTugboat Consulting, &#39;Applying Web technology to enterprise IT&#39;   \nhttp://www.tugboat.de\n\n\n\n\n\n"}}