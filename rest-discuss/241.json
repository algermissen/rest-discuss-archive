{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","replyTo":"SENDER","senderId":"0vbE_tHdo_7PsJSK6lymC64a9k489ILXFsNitJTgdtNEVub0UtUM44mCeL6MsH7bwUm118HO12_8GpMkyrxHcdYw2w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011908543","msgId":241,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwMTI0MjE0Mi5RQUEyNTE1NEBtYXJrYmFrZXIuY2E+","inReplyToHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTUyNjUzMC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPiBmcm9tICJTLiBBbGV4YW5kZXIgSmFjb2Jzb24iIGF0IEphbiAyNCwgMjAwMiAwNDowMDo0OCBQTQ=="},"prevInTopic":240,"nextInTopic":242,"prevInTime":240,"nextInTime":242,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"Alex, no offense dude, but you don t get REST yet.  It would really help things a lot in this discussion if you stopped pulling a Dave Winer by thinking you","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 21:40:55 -0000\r\nReceived: (qmail 70920 invoked from network); 24 Jan 2002 21:40:46 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m4.grp.snv.yahoo.com with QMQP; 24 Jan 2002 21:40:46 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta1.grp.snv.yahoo.com with SMTP; 24 Jan 2002 21:40:45 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id QAA25154;\n\tThu, 24 Jan 2002 16:42:24 -0500\r\nMessage-Id: &lt;200201242142.QAA25154@...&gt;\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nTo: alex@... (S. Alexander Jacobson)\r\nDate: Thu, 24 Jan 2002 16:42:23 -0500 (EST)\r\nCc: mdierken@... (S. Mike Dierken), rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;Pine.WNT.4.43.0201241526530.1892-100000@...&gt; from &quot;S. Alexander Jacobson&quot; at Jan 24, 2002 04:00:48 PM\r\nX-Mailer: ELM [version 2.5 PL3]\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nAlex, no offense dude, but you don&#39;t get REST yet.  It would really\nhelp things a lot in this discussion if you stopped pulling a Dave\nWiner by thinking you understand it, and dismissing it so quickly\nas unsuitable.\n\n&gt; I think everything is looking like a nail to you.\n\nYou&#39;re damned right.  Putting something on the Web requires being able\nto see things as a nail.  Some things won&#39;t ever be nails, but with\nREST, the vast majority of things can be seen as nails.\n\n&gt; I don&#39;t deny that HTTP is a wonderful thing.\n&gt; However, I could quite reasonably make the claim\n&gt; that you can do everything you can do in HTTP\n&gt; using SMTP.\n\nNope.  How would you retrieve information with SMTP, without additional\na priori agreement?\n\n&gt; For example, if I wanted to implement a Presence\n&gt; server for clients that may be behind firewalls.\n&gt; I could do it via HTTP  by having the clients\n&gt; ping every n seconds, but that would be an\n&gt; inefficient use of network resources.\n&gt; \n&gt; A better solution might be to rely on TCP\n&gt; directly and have clients simply hold open a TCP\n&gt; connections.  The server can then determine\n&gt; presence simply by checking whether it still has a\n&gt; connection to the client. (yes, I&#39;m leaving out\n&gt; lots of details, but you get my point)\n\nHTTP can use persistent connections on a GET to receive information.\nThis is safe if the information that&#39;s received isn&#39;t another protocol\n(like an encapsulated message/http).\n\nBut you first have to model your presence app as a set of resources.\ne.g. each user gets a URI, a persistent GET to that URI returns a\nstream of presence messages as their presence status changes, etc..\n\n&gt; Even in traditional client/server (long\n&gt; connections), there was nothing that prevented\n&gt; this from happening.  Its just that the protocol\n&gt; itself is defined in terms of clients making\n&gt; requests of servers.\n\nName a protocol that doesn&#39;t work this way.\n\n&gt; &gt; &gt;  It was\n&gt; &gt; &gt; designed to let clients request/update resources\n&gt; &gt; &gt; from a server simply and easily.\n&gt; &gt;\n&gt; &gt; More or less, yes.  Now name an app that can&#39;t be modelled as a set\n&gt; &gt; of resources which are manipulated with the HTTP method set.\n&gt; \n&gt; Ok, name an app that can&#39;t be modelled as a set of\n&gt; email addresses.\n\nThe Web.\n\n&gt; The issue is whether the app SHOULD be modelled as\n&gt; a set of HTTP resources or a email addresses or\n&gt; whatever.\n\nIn part, that&#39;s true.  But often (unless you&#39;ve been doing this as long\nas I have 8-), you won&#39;t know until you try.  You&#39;re not even trying.\n\n&gt; &gt; All of those can be modelled the way I described.  I use it for chat\n&gt; &gt; (and sometimes p2p) on a daily basis.  See http://www.snapchannels.net\n&gt; \n&gt; Congratulations.  Looks cool.  Doesn&#39;t mean that\n&gt; was the best way to go.  For example, would you\n&gt; use HTTP for an IM client (if you needed to\n&gt; support large numbers of them)?  Having millions\n&gt; of clients polling for messages seems like a bad\n&gt; idea.\n\nIf I could offload to a proxy farm, sure.  Proxies are an integral part\nof REST for this and other reasons.\n\nBut as I said, if you can use TCP, you can probably use HTTP.  Can that\nIM app use TCP?\n\n&gt; I&#39;m not sure you read the problem correctly.\n&gt; \n&gt; The client is simply making a query to the server\n&gt; and getting a yes/no response.\n&gt; \n&gt; In other words, it is making an idempotent\n&gt; request.\n\nYou mean that if a picture of a terrorist was submitted, that nobody\nwould want to store it?  Seriously?\n\nIf there is a chance that it might not be idempotent, then you have to\nuse POST.\n\nBut as Paul and I discussed a while ago, HTTP is missing a method to\nsupport idempotent operations on content, like transcoding or whatever.\nThis is not a failing in REST, it is a missing feature of HTTP, but it\ncould easily be added.\n\n&gt;  Accoding to REST, the client should use\n&gt; GET for such a a request, but I don&#39;t know how you\n&gt; send two pictures using GET.  So I&#39;m not sure you\n&gt; can use REST.\n\nWell, no, it&#39;s according to TimBL, not REST.  I have some issues with\nTim&#39;s views of this too;\n\nhttp://lists.w3.org/Archives/Public/www-tag/2002Jan/0075.html\n\nThat is, other idempotent requests are fine (OPTIONS is one), so long as\nit doesn&#39;t act on the information space formed by GET, and that GET\nremains the only method used for URI resolution (i.e. when you click on\na URI, it can only ever mean GET).  A new idempotent data submission\nmethod would be fine.\n\n&gt; The server may take a long time to respond to\n&gt; the query so it may issue a 202 Accepted.  But,\n&gt; if it does, then we also need a convention for\n&gt; delivery of the reply.\n\nOne convention is described in RFC 2616.  Put a URI in the body of\nthe 202 response that represents the completed request.\n\n&gt; I think MIME-RPC provides these conventions and\n&gt; allows this application to be deployed over\n&gt; SMTP almost exactly as it would be deployed over\n&gt; HTTP.\n\nThat&#39;s because you&#39;re building a new protocol and tunneling it over\nSMTP and HTTP.  i.e. you&#39;re disregarding the view of the world that\neach of these other application protocols attempts to enforce.\nYou&#39;ve also got a hammer it seems; one that likes to flatten\neverything to ensure a consistent view of the world.  8-)\n\nMB\n-- \nMark Baker, Chief Science Officer, Planetfred, Inc.\nOttawa, Ontario, CANADA.      mbaker@...\nhttp://www.markbaker.ca   http://www.planetfred.com\n\n"}}