{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7519858,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","profile":"gonga_thrash","replyTo":"SENDER","senderId":"eg_h384WguFL4SaHxVdqM3gSMDgWfs4mb1jVgL73eoqbsAzVYAhyDASaXoY0X-27Qu2F3ZxlcDC2SoM-yQ4vK36iNw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: HTTP and safety","postDate":"1030472822","msgId":2249,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwODI3MTQyNzAyLkUxNzgxM0B3d3cubWFya2Jha2VyLmNhPg==","inReplyToHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QzNAY2xpZmZvcmQuZGV2by5pbHguY29tPjsgZnJvbSB3YWxkZW5tQGlseC5jb20gb24gVHVlLCBBdWcgMjcsIDIwMDIgYXQgMTA6NDc6MTJBTSAtMDQwMA==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QzNAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2248,"nextInTopic":2251,"prevInTime":2248,"nextInTime":2250,"topicId":2205,"numMessagesInTopic":64,"msgSnippet":"... Just that it s a bit of an advanced topic that REST newbies may not be interested in.  It s not a bad thing. 8-) ... Pretty much. ... The key is to focus","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 27 Aug 2002 18:28:24 -0000\r\nReceived: (qmail 67342 invoked from network); 27 Aug 2002 18:28:23 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m5.grp.scd.yahoo.com with QMQP; 27 Aug 2002 18:28:23 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta1.grp.scd.yahoo.com with SMTP; 27 Aug 2002 18:28:23 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.11.6/8.8.7) id g7RIR2W19579;\n\tTue, 27 Aug 2002 14:27:02 -0400\r\nDate: Tue, 27 Aug 2002 14:27:02 -0400\r\nTo: &quot;Mathews, Walden&quot; &lt;waldenm@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: HTTP and safety\r\nMessage-ID: &lt;20020827142702.E17813@...&gt;\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F640155F8C3@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nUser-Agent: Mutt/1.2.5.1i\r\nIn-Reply-To: &lt;1373D6342FA1D4119A5100E029437F640155F8C3@...&gt;; from waldenm@... on Tue, Aug 27, 2002 at 10:47:12AM -0400\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: member; u=7519858\r\nX-Yahoo-Profile: gonga_thrash\r\n\r\nOn Tue, Aug 27, 2002 at 10:47:12AM -0400, Mathews, Walden wrote:\n&gt; &gt; We&#39;re creeping into rest-explore territory here.\n&gt; \n&gt; How so?\n\nJust that it&#39;s a bit of an advanced topic that REST newbies may not be\ninterested in.  It&#39;s not a bad thing. 8-)\n\n&gt;  My aim is to understand the claims that tunneling RPC\n&gt; traffic through HTTP POST creates a security problem that doesn&#39;t\n&gt; already exist with compliant uses of POST.  A POST body will\n&gt; contain a representation of something that is loosely characterized\n&gt; as &#39;subordinate&#39; to the referenced resource, which will invoke\n&gt; some processing of some kind.  That representation may be the\n&gt; *record* of some desired action, and so will be interpreted on\n&gt; the server as the action.  The meaning of this exchange will\n&gt; not be available to a firewall or other intermediary except at\n&gt; the most general level.  And what it &quot;means&quot; there can be\n&gt; expressed approximately as &quot;some side effect may occur, but\n&gt; don&#39;t bet on it&quot;.\n\nPretty much.\n\n&gt; Above I&#39;ve described what I understand to be RESTful use of\n&gt; the POST method.  Please tell me how that differs in the security\n&gt; dimension from the dreaded &#39;tunneled RPC&#39;.\n\nThe key is to focus on the wire.  Think about telnetting to port 80.\nAt that very instant, a contract is in effect, and that contract and\nany messages conforming to it are visibile to all participants; you,\nany firewall you might be going through, the server, and any surrogates\nit might be using.\n\nIf, using that contract, you could trick the system into providing\nyou a richer contract, i.e. guaranteeing you things that were not\nguaranteed at time 0, and do this in a way that is not visible to\nintermediaries (i.e. not using HTTP&#39;s extension features), then that\nis a security problem (as well as a problem to other aspects of the\nsystem that require visibility, e.g. caching).  Designing interfaces\nthat cannot break themselves is *hard*.  You&#39;re working against\nentropy.\n\n&quot;Tunneled RPC&quot;&#39;s raison d&#39;etre is to build arbitrary contracts over\nexisting ones.  So in addition to nullifying any safety in the\nexisting contract, cheap method-creation is an easy way to guarantee\nthat most contracts created with it will in turn be unsafe.\n\n&gt; Note that I&#39;m interested only in the security dimension right\n&gt; now.  I understand that tunneling GETs through POST diminishes\n&gt; the capability of the layered system, and I suppose tunneling\n&gt; DELETE or PUT may diminish something as well.  But in none of these\n&gt; cases is security diminished.  At least I can&#39;t think of a \n&gt; reasonable admin policy toward POST that would result in such\n&gt; a diminishment.\n\nIf GET - and only GET - were tunneled through POST, I agree about\nsecurity probably not being diminished, because the augmented contract\nis no more capable than the existing one (though I&#39;d have to verify\nthat there wasn&#39;t any POST-specific race conditions, etc.. there).  But\nan intermediary wouldn&#39;t know that, so there&#39;s still a management issue\nthat the firewall admins wouldn&#39;t be comfortable with, I&#39;m sure.\n\n&gt; That&#39;s why, for the time being, I regard claims about diminished\n&gt; security to be exaggerations based on overgeneralization.  What\n&gt; I need to see are some specific cases of firewall configuration\n&gt; and method abuse to better understand.\n&gt; \n&gt; &gt; I wouldn&#39;t say that it&#39;s underspecified at all.  Why do you believe it\n&gt; &gt; is?\n&gt; \n&gt; Having just read that part of the spec again, I don&#39;t, actually.  But\n&gt; that pushes me to a different conclusion: that the semantics of POST\n&gt; are being misrepresented on this mail list to include careful craftings\n&gt; of remote procedure calls in which the instructions have &#39;representations&#39;\n&gt; that pass the &#39;representational state&#39; test (which is a null test),\n&gt; and so appear to be &#39;state transfers&#39; but are not.\n&gt; \n&gt; I&#39;ll give an example\n&gt; \n&gt; \tRequest:\n&gt; \tPUT /some/number\n&gt; \t2\n&gt; \n&gt; \tResponse:\n&gt; \t201 Created\n&gt; \n&gt; \tRequest:\n&gt; \tGET /some/number\n&gt; \n&gt; \tResponse:\n&gt; \t200 OK\n&gt; \t2\n&gt; \n&gt; \tRequest:\n&gt; \tPOST /some/number\n&gt; \t&#39;square&#39;\n&gt; \n&gt; \tResponse:\n&gt; \t204 No Content\n&gt; \n&gt; \tRequest:\n&gt; \tGET /some/number\n&gt; \n&gt; \tResponse:\n&gt; \t200 OK\n&gt; \t4\n&gt; \n&gt; This example achieves the squaring of 2 in a way that is quite\n&gt; different from the more obvious interpretations of &quot;state\n&gt; transfer&quot;.  Can we please discuss whether the above is &quot;RESTful&quot;\n&gt; and if not, what would it take to make it so?\n\nIt&#39;s not RESTful, because &#39;square&#39; is an instruction to be followed, not\ndata to be submitted.  In addition, this is a poor example because the\nclient *expects* that squaring is done, which kind of begs the question\nas to why it can&#39;t do it itself and then PUT the result ... 8-O\n\n&gt;  I believe that\n&gt; by tweaking the example above, we can arrive at one which\n&gt; illuminates the distinction I see between rest-discuss and\n&gt; RFC 2616 on the intended semantics of POST.\n&gt; \n&gt; \n&gt; The specification of POST in RFC 2616 relies on the term &#39;subordinate&#39;\n&gt; to characterize the relationship between the POST entity and the\n&gt; referenced resource.  It then avoids comprehensive definition of\n&gt; &#39;subordinate&#39; in favor of an enumeration.  It leaves us to infer that\n&gt; the &#39;subordinate&#39; relation is the &#39;part-&gt;composite&#39; relation, because\n&gt; all the enumerated examples are such, but I&#39;d like to hear others&#39;\n&gt; interpretations on this.  \n\nI think that &quot;Part-&gt;Composite&quot; is a tad more specific than HTTP\nsuggests, but I might be picking nits.  It would seem to exclude the\nposting of data to a form processor, for example, since the\ncomposite relationship only exists for the duration of the processing.\nIt doesn&#39;t persist like a StatePreservingContainer.  Pretty close\nthough, but I prefer &quot;accept as a subordinate&quot; for describing the most\ngeneric form of containment as present in my RestRDF &quot;Container&quot;.\n\n&gt; Then there&#39;s the circumstantial stuff, like the fact that otherwise\n&gt; intelligent human beings typically stumble all over the meanings of\n&gt; the HTTP methods (and it&#39;s all because of POST) on first encounter,\n&gt; the fact that supplementary models of &quot;resource type&quot; have to be developed\n&gt; to delineate the possible POST behaviors, the appearance of the word\n&gt; &quot;intent&quot;\n&gt; to describe the fleshing out of application semantics for POST, which\n&gt; seems unnecessary for all of the other HTTP methods, and a\n&gt; comment by someone who signs his emails with your signature to the\n&gt; effect that &quot;POST is the catch-all mutator method&quot;.\n\n8-)\n\n&gt; What I think is happening here is that we&#39;re still feeling the\n&gt; growing pains of HTTP/REST as it tries to be more than a document\n&gt; maintenance pattern and less than a &#39;protocol prostitute&#39; (sorry,\n&gt; the alliteration made me do that!).\n\nNo, that&#39;s a really good way of explaining the tension, but HTTP/REST\n*is* already a fixed thing (at least at any given point in time).  It&#39;s\nonly our view of it that we&#39;re adjusting by talking about it.\n\n&gt; This is super-long, so thanks in advance to all who made it to the end!\n\nPhew!\n\nMB\n-- \nMark Baker, CTO, Idokorro Mobile (formerly Planetfred)\nOttawa, Ontario, CANADA.               distobj@...\nhttp://www.markbaker.ca        http://www.idokorro.com\n\n"}}