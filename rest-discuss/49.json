{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"7OOK_JTRMqQpvktinNeaADjUU5BgqPhKfIWRFnKLX7U_OhOQQ7zrp4DNrqM4xKX5MQTC4QBx8V0p_ztV_w1W-Og","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Async confusion","postDate":"1011306308","msgId":49,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNDc0RjQzLjQzRjAwRjAxQGp1bXAubmV0Pg==","referencesHeader":"PDIwMDIwMTE3MjEzNC5RQUExODQzNkBtYXJrYmFrZXIuY2E+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":48,"nextInTime":50,"topicId":49,"numMessagesInTopic":1,"msgSnippet":"I think we re getting a little bit confused re: what async means in this context. There are at least two orthogonal dimensions of interest:  asynchronous","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 17 Jan 2002 22:26:03 -0000\r\nReceived: (qmail 14413 invoked from network); 17 Jan 2002 22:26:02 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m3.grp.snv.yahoo.com with QMQP; 17 Jan 2002 22:26:02 -0000\r\nReceived: from unknown (HELO sm13.texas.rr.com) (24.93.35.40)\n  by mta1.grp.snv.yahoo.com with SMTP; 17 Jan 2002 22:26:02 -0000\r\nReceived: from jump.net (bu24242137-238.austin.rr.com [24.242.137.238])\n\tby sm13.texas.rr.com (8.12.0.Beta16/8.12.0.Beta16) with ESMTP id g0HMTDSp029644;\n\tThu, 17 Jan 2002 16:29:13 -0600\r\nMessage-ID: &lt;3C474F43.43F00F01@...&gt;\r\nDate: Thu, 17 Jan 2002 16:25:08 -0600\r\nOrganization: Clickfeed\r\nX-Mailer: Mozilla 4.7 [en] (Win95; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nCc: Lucas Gonze &lt;lucas@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Async confusion\r\nReferences: &lt;200201172134.QAA18436@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nReply-To: jbone@...\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\nI think we&#39;re getting a little bit confused re: what async means in this context.\nThere are at least two orthogonal dimensions of interest:  asynchronous communication\nof request and a possible future response stream, and asynchrony -wrt- connectivity at\na given point in time, i.e., the idea that the sender and receiver must be able to\ncommunicate at a given instance, hence must both be online.\n\nThe first is simply &quot;callbacks&quot; --- even pub / sub, watching, etc. is a higher-level\nmetaphor over simple callbacks.  Callbacks have no topological implications / require\nno new connector types and --- as Mark points out --- don&#39;t even require protocol\nextensions.\n\nThe second is store-and-forward,  where the sender and receiver need not necessarily\nhave instantaneous connectivity.  Store-and-forward requires a number of things:  more\ncomplex intermediary services, a notion (at least minimal) of routing, etc.\n\nJust a point of clarification --- these are independent things.  Another interesting\nsemi-related thing to consider is the impact of communication *assymetry* --- the fact\nthat sending and receiving roles are not the same as connection initiator and\nconnection receiver, i.e. &quot;client&quot; and &quot;server.&quot;\n\n$0.02\n\njb\n\n\nMark Baker wrote:\n\n&gt; &gt; Mark,\n&gt; &gt;\n&gt; &gt; Something like WATCH is definately part of the solution!  But it is only part of\n&gt; &gt; the solution -- there is much new code to be written to make it work.  For\n&gt; &gt; example,\n&gt; &gt;\n&gt; &gt; &gt; WATCH http://www.yahoo.com HTTP/1.1\n&gt; &gt; &gt; Reply-To: http://mysite.org/yahoo-watch\n&gt; &gt;\n&gt; &gt; You are assuming that this call can be emitted synchronously.  Before the new\n&gt; &gt; WATCH method can solve anything, it has to be received.\n&gt;\n&gt; True, but I don&#39;t say *who* has to receive it!\n&gt;\n&gt; &gt;  What if the caller, the\n&gt; &gt; caller&#39;s proxy, or the recipient is temporarily offline?\n&gt;\n&gt; Then let the recipient have a proxy that queues up these requests.\n&gt;\n&gt; &gt;  In the context of\n&gt; &gt; request/response, you only emit calls that make sense if they complete in the\n&gt; &gt; present.  In the context of publish/subscribe you may emit calls that don&#39;t have\n&gt; &gt; any results until a fuzzy point in the future, so it may not matter if the call\n&gt; &gt; is emitted immediately.\n&gt;\n&gt; Ok.\n&gt;\n&gt; &gt; In the above example, the client should be able to cache the call until it goes\n&gt; &gt; online.  Such a local cache would be just like a local outbox.  That is:\n&gt; &gt; ===========\n&gt; &gt; User software has an application-defined need to send a subscription message.\n&gt; &gt; This might be an application subscribing to a stock ticker.  The user software\n&gt; &gt; finds that the user is offline, hence the message can&#39;t be sent.  It caches the\n&gt; &gt; message and initiates a polling loop against the remote resource provider.\n&gt; &gt; ===========\n&gt;\n&gt; Right.  See above.\n&gt;\n&gt; &gt; Notice the similarity with a mail user agent attempting to publish a text\n&gt; &gt; message via email.  The sending application should not do the polling, because\n&gt; &gt; there may be many such sending applications.  Instead the sending application\n&gt; &gt; should submit the send to a system-wide outbound queue and leave the polling to\n&gt; &gt; a single daemon.\n&gt; &gt;\n&gt; &gt; ===========\n&gt; &gt; An application publishes a subscription message to a stock ticker.  Because the\n&gt; &gt; endpoint is offline, the message is submitted to an outbound queue.  A daemon\n&gt; &gt; minding the queue and polling to discover online mode eventually finds that the\n&gt; &gt; endpoint is online.  However the ticker publisher is not online at that moment.\n&gt; &gt; The daemon submits the subscription event to a third party dropbox maintaned by\n&gt; &gt; the ticker publisher.\n&gt; &gt; ===========\n&gt; &gt;\n&gt; &gt; Again, these semantics are covered by mail infrastructure already but not by web\n&gt; &gt; infrastructure.\n&gt;\n&gt; You sure about that?\n&gt;\n&gt; &gt; Let&#39;s not get bogged down in this slightly wierd point that email is more RESTy\n&gt; &gt; than the web.  The first point is that _sender_ asynchronicity means assuming\n&gt; &gt; that every single hop may be an emission that requires store-and-forward.\n&gt; &gt; KnowNow&#39;s architecture requires a special new server, the event router.  What is\n&gt; &gt; an event router but a store-and-forward node?  (uh, well, it&#39;s also a topic\n&gt; &gt; coordinator.  That&#39;s too big a can of worms for this message.)\n&gt;\n&gt; Heh.  It&#39;s just a web app, nothing more.\n&gt;\n&gt; Pipeline + statelessness = great (email)\n&gt; Pipeline + statelessness + generic semantics = awesome (Web)\n&gt;\n&gt; MB\n&gt; --\n&gt; Mark Baker, Chief Science Officer, Planetfred, Inc.\n&gt; Ottawa, Ontario, CANADA.      mbaker@...\n&gt; http://www.markbaker.ca   http://www.planetfred.com\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n\n\n"}}