{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":482294859,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"z9GZbD_AYePRHQvtlIFfJhzLXOWrAR8PjvoeeOo-isYvsoTybUBDLi2LlSZW851f13zwu4Cz4hQvnrLstuekmTXjhSgGMv4KImMuYuw9bQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and HATEOAS in the context of native applications?","postDate":"1312235720","msgId":17652,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI3NTY4NzA2LUI1NUMtNDJGNi1CMjBBLUYzQjIzNkQ2ODU4MEBtZS5jb20+","inReplyToHeader":"PDRFMzZBNTIxLjYwMjAzMDZAZ21haWwuY29tPg==","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPiA8NEUzNUUwNEYuMzAzMDEwOUBnbWFpbC5jb20+IDxDQStDRTZZVW5KWmN0Wld3MXhfRENPTGVBVTJ0X3lrR2N0anBxdWY3d1pFK1g5ZEJTNmdAbWFpbC5nbWFpbC5jb20+IDw0RTM2QTUyMS42MDIwMzA2QGdtYWlsLmNvbT4="},"prevInTopic":17651,"nextInTopic":17653,"prevInTime":17651,"nextInTime":17653,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"... Yes. REST specifically addresses the problem space of networked, decentralized systems, where control over remote peers cannot be assumed. ... Yes, you get","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 66565 invoked from network); 1 Aug 2011 21:56:02 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m12.grp.re1.yahoo.com with QMQP; 1 Aug 2011 21:56:02 -0000\r\nX-Received: from unknown (HELO asmtpout024.mac.com) (17.148.16.99)\n  by mta3.grp.re1.yahoo.com with SMTP; 1 Aug 2011 21:56:02 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=windows-1252\r\nX-Received: from [192.168.2.102] (p548F976B.dip.t-dialin.net [84.143.151.107])\n by asmtp024.mac.com\n (Oracle Communications Messaging Exchange Server 7u4-18.01 64bit (built Jul 15\n 2010)) with ESMTPSA id &lt;0LP900978RK88P90@...&gt; for\n rest-discuss@yahoogroups.com; Mon, 01 Aug 2011 14:55:26 -0700 (PDT)\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.4.6813,1.0.211,0.0.0000\n definitions=2011-08-01_05:2011-08-01,2011-08-01,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=2 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1108010223\r\nIn-reply-to: &lt;4E36A521.6020306@...&gt;\r\nDate: Mon, 01 Aug 2011 23:55:20 +0200\r\nCc: REST-Discuss Group Discussion &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-transfer-encoding: quoted-printable\r\nMessage-id: &lt;B7568706-B55C-42F6-B20A-F3B236D68580@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt; &lt;4E35E04F.3030109@...&gt;\n &lt;CA+CE6YUnJZctZWw1x_DCOLeAU2t_ykGctjpquf7wZE+X9dBS6g@...&gt;\n &lt;4E36A521.6020306@...&gt;\r\nTo: Eb &lt;amaeze@...&gt;\r\nX-Mailer: Apple Mail (2.1082)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] REST and HATEOAS in the context of native\n applications?\r\nX-Yahoo-Group-Post: member; u=482294859; y=uKG7JDb_5s5ziHpAilmDXMy_1oKERoBae7CAO53hFwqvZw5EwVqhhasO\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Aug 1, 2011, at 3:07 PM, Eb wrote:\n\n&gt; I meant to ask this question on t=\r\nhe discussion list.  A combination of constraints and principles make up th=\r\ne REST architectural style targeted IMHO at solutions that fit a particular=\r\n problem space. \n\nYes. REST specifically addresses the problem space of net=\r\nworked, decentralized systems, where control over remote peers cannot be as=\r\nsumed.\n\n&gt;  However, as has been mentioned, you get value from using any of =\r\nthe constraints and principles.  \n\nYes, you get some value in specific scen=\r\narios, but you also suffer from the trade-offs REST deliberately involves. =\r\nYou should understand whether what you do is a good solution for your probl=\r\nem space (which is at least 50% of the value of Roy&#39;s work).\n\n&gt; So you need=\r\n to ask yourself if your system exists within the problem space or if you j=\r\nust are forcing your system to conform to the architectural style.  For exa=\r\nmple, why do you need hypermedia?\n\nYou need hypermedia to avoid that client=\r\ns make assumptions about the concrete state machines of the applications th=\r\ney progress through. Because, in a decentralized problem space, it is impos=\r\nsible to guarantee that such assumptions will hold true.\n\nJan\n\n\n&gt; \n&gt; \n&gt; On =\r\n08/01/2011 08:27 AM, Daniel Roussel wrote:\n&gt; \n&gt;&gt; Hi,\n&gt;&gt; \n&gt;&gt; Well, first of =\r\nall, our team is physically dispersed, some of them being in Montreal, some=\r\n being in Toronto.  By using a Rest architecture more and more, we found th=\r\nat it is easier to have the two teams design the documents to be exchanged =\r\nand not worry about an API/method calls to be properly documented.  The les=\r\ns coupling there is between the client app and the server app, the less cou=\r\npling there is between the client app developers and the server developers.=\r\n  This helps a lot because if a server dev need to completely rewrite one p=\r\nart of the app, it has no impact on the client and so, no need to contact t=\r\nhe client side team to discuss impacts, new method calls, etc etc.\n&gt; Could =\r\nthis just be from leveraging HTTP properly?\n&gt;&gt; \n&gt;&gt; Another point is that HT=\r\nTP and JSON are well supported on most mobile devices and pretty lightweigh=\r\nt.  Statelessness is also a design contraint which makes sense on a phone, =\r\nyou can&#39;t assume that a user will perform a transaction all in one go.  Bei=\r\nng stateless, you can have an application  maintain its own state, right on=\r\n the device, and a &quot;transaction&quot; can thus span many hours if the user netwo=\r\nrk connection is intermittent. \n&gt; Right, another architectural constraint.\n=\r\n&gt;&gt; \n&gt;&gt; Also, what I studied and discovered last week, is that by using prop=\r\ner hypermedia, we will be able to decouple the client and the server even m=\r\nore.  We plan on having one single landing page for all our applications an=\r\nd from there, the client will be able to navigate and find its own server. =\r\n This will simplify things so much!  No more need to call Toronto to ask wh=\r\nere have they deployed the latest server for this or that app.  They will u=\r\npdate the URI on our landing page and the clients app will catch up by them=\r\nselves.\n&gt; \n&gt; What is the client in your case? Is this a machine?\n&gt;&gt; \n&gt;&gt; I c=\r\nould go on and on but in the end, the more we respect the REST constraints,=\r\n the simpler and reliable things seem to be.\n&gt; \n&gt; True, but at a definite c=\r\nost which is why I asked my question.  Thanks for sharing.\n&gt; \n&gt; Eb\n&gt;&gt; \n&gt;&gt; D=\r\naniel\n&gt;&gt; \n&gt;&gt; On Sun, Jul 31, 2011 at 7:07 PM, Eb &lt;amaeze@...&gt; wrote:\n=\r\n&gt;&gt; Hi Daniel -\n&gt;&gt; \n&gt;&gt; Why do you perceive conforming to the REST architectu=\r\nral style to be the better way in this case for your problem space?  I&#39;m cu=\r\nrious for you to shed some more light on that?\n&gt;&gt; \n&gt;&gt; Eb\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; On 07/2=\r\n7/2011 11:35 AM, Daniel Roussel wrote:\n&gt;&gt;&gt;  \n&gt;&gt;&gt; Hi,\n&gt;&gt;&gt; \n&gt;&gt;&gt; I&#39;ve been rea=\r\nding a lot about how to do &quot;proper&quot; REST this week and the more I read, the=\r\n more I&#39;m lost, especially the HATEOAS part I fear.\n&gt;&gt;&gt; \n&gt;&gt;&gt; First, to give=\r\n some context, the company I work for develops mobile applications for clie=\r\nnts. Most of the time, they want to get an iPhone native application, an An=\r\ndroid application and a traditional Web based Application to cover the othe=\r\nr mobile phones out there.\n&gt;&gt;&gt; \n&gt;&gt;&gt; The way we are currently doing things i=\r\ns the good old (bad?) RPC over HTTP way. We define a bunch of URI which are=\r\n coded inside the different apps, we exchange data as JSON, etc. This week,=\r\n trying to do things in a better way, I&#39;ve begin a more serious study of RE=\r\nST and how to do it properly.\n&gt;&gt;&gt; \n&gt;&gt;&gt; What I really can&#39;t wrap my head aro=\r\nund is how, technically, have HATEOAS in a native application? I mean, when=\r\n building a native application, I have tables to display lists, buttons to =\r\ndo some things, etc. My understanding is that all those should be displayed=\r\n based on the data (hypermedia) received from the server. Is that right?\n&gt;&gt;=\r\n&gt; \n&gt;&gt;&gt; A concrete example would be a hotel room rental service. The person =\r\nwould open the application and have fields to enter the from/to dates. It w=\r\nould then tap a &quot;Get Available Rooms&quot;. The app would call the server and ge=\r\nt back a list of rooms along with prices and other details. From there the =\r\nperson could select one room and rent it. \n&gt;&gt;&gt; \n&gt;&gt;&gt; The RPC way of coding t=\r\nhis is obvious to me but I have no idea how I&#39;d do that in a proper REST wa=\r\ny! What bugs me is that every way I look at it, the client application woul=\r\nd still                           be tightly coupled to the service. I unde=\r\nrstand how I would only need to GET the http://rent-a-room.com URI hardcode=\r\nd and then in the response I would have the http://rent-a-room.com/availabl=\r\ne-rooms URI given. But... My application would expect each &quot;call&quot; to return=\r\n some pre-defined data and &quot;rel&quot;, those can&#39;t appear out of the blue?! \n&gt;&gt;&gt;=\r\n \n&gt;&gt;&gt; I guess what I&#39;m trying to say is that both the business process and =\r\nthe data exchanged must be known to my client application at the moment of =\r\ncoding it, and those can&#39;t change                           without breakin=\r\ng existing clients. But reading about REST, every is talking about loose co=\r\nupling and not breaking clients... I just don&#39;t see it.\n&gt;&gt;&gt; \n&gt;&gt;&gt; What am I =\r\nmissing?\n&gt;&gt;&gt; \n&gt;&gt;&gt; Thanks a lot and sorry if it is a stupid question!\n&gt;&gt;&gt; \n&gt;=\r\n&gt; \n&gt;&gt; \n&gt;&gt;  \n&gt;&gt; -- \n&gt;&gt; blog: \n&gt;&gt; http://eikonne.wordpress.com\n&gt;&gt; \n&gt;&gt; twitter=\r\n: \n&gt;&gt; http://twitter.com/eikonne\n&gt;&gt; \n&gt; \n&gt; \n&gt; -- \n&gt; blog: \n&gt; http://eikonne.=\r\nwordpress.com\n&gt; \n&gt; twitter: \n&gt; http://twitter.com/eikonne\n&gt; \n&gt; \n\n\n"}}