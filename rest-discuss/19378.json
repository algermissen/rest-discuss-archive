{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":544893253,"authorName":"Jérôme Louvel","from":"=?ISO-8859-1?Q?J=E9r=F4me_Louvel?= &lt;jlouvel@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"pDLnkxIdC3B5972gaP-bBNmPdd6YAKjexbYhqAEiZllUGaVyFCduFD9RXPzJRQY8PW1XeSHFns2SldDBFeBOp8snD2wO59NUfsplmAtCkry7jNFf9od6qnVIzemN_X4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How much REST should your Web API get?","postDate":"1367516887","msgId":19378,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBT3NZOG1TclRtZUVjUHd2ZVdpR3hDVUFhc0x0Qjg2UkJqdD10b0E3eU5RNmV2R1c4QUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDM4QzMzM0I1LTM5ODktNDc4Mi1BQ0YzLUIyM0E2OTlGNjg0REBub3Jkc2MuY29tPg==","referencesHeader":"PGtsdGlkditrMGtmQGVHcm91cHMuY29tPgk8MzhDMzMzQjUtMzk4OS00NzgyLUFDRjMtQjIzQTY5OUY2ODREQG5vcmRzYy5jb20+"},"prevInTopic":19377,"nextInTopic":19379,"prevInTime":19377,"nextInTime":19379,"topicId":19371,"numMessagesInTopic":46,"msgSnippet":"Jan, I remain a strong proponent of the idea that it is more fruitful to aim at ... But when the paradigm isn t intended to solve a given problem, do you think","rawEmail":"Return-Path: &lt;jlouvel@...&gt;\r\nX-Sender: jlouvel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34186 invoked from network); 2 May 2013 17:48:08 -0000\r\nX-Received: from unknown (10.193.84.151)\n  by m9.grp.bf1.yahoo.com with QMQP; 2 May 2013 17:48:08 -0000\r\nX-Received: from unknown (HELO mail-vc0-f177.google.com) (209.85.220.177)\n  by mta5.grp.bf1.yahoo.com with SMTP; 2 May 2013 17:48:08 -0000\r\nX-Received: by mail-vc0-f177.google.com with SMTP id ha12so740746vcb.36\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 02 May 2013 10:48:08 -0700 (PDT)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=google.com; s=20120113;\n        h=mime-version:x-received:in-reply-to:references:date:message-id\n         :subject:from:to:cc:content-type:x-gm-message-state;\n        bh=N+i4i+iZjIAyJvTZ4l3+ao7uK+fIaoN4s9t0HsdGY90=;\n        b=BWdSyBVLMeGx9ISO4udwu6wS/J4ueLVUdK0zvc8SvlF8qPOq610hbqu3byATm896Wi\n         AFNLJQOZVjN8VJEBhMHOD1jpqTWfWR0fb9KVyWNRyMEQaMxHiFgA52jQn3C9a6cCgToG\n         tebXAT8cc6Or7f8E7VJs4LZiKnrIGc7MbfDiu+hc6qO+mLpBSXv09SHQSUeMDqYeR69Y\n         fA+Oo2GOFMSnsKRXhgeLNRkAX4QY8KKReTQdAnnzJLKk4cJcVw0FbQQ/1YuExRyCAGvo\n         g7stegR0SuVk0SKdw6qDthxjrJp4iftliGE2Ydc3hFS3+J4w+rGrk2BFXOPoN+LCysSm\n         cTzQ==\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.42.7 with SMTP id q7mr2512404vce.69.1367516888084; Thu,\n 02 May 2013 10:48:08 -0700 (PDT)\r\nX-Received: by 10.220.88.80 with HTTP; Thu, 2 May 2013 10:48:07 -0700 (PDT)\r\nIn-Reply-To: &lt;38C333B5-3989-4782-ACF3-B23A699F684D@...&gt;\r\nReferences: &lt;kltidv+k0kf@...&gt;\n\t&lt;38C333B5-3989-4782-ACF3-B23A699F684D@...&gt;\r\nDate: Thu, 2 May 2013 19:48:07 +0200\r\nMessage-ID: &lt;CAOsY8mSrTmeEcPwveWiGxCUAasLtB86RBjt=toA7yNQ6evGW8A@...&gt;\r\nTo: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=047d7b3a901c56c34204dbbfd620\r\nX-Gm-Message-State: ALoCoQkh4Xl21FezXxbzvVf67U6pRFW5YEOaJGs4HCWZNspdkLOrU61P5F7PCv93eREp+zmn8c3z\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?J=E9r=F4me_Louvel?= &lt;jlouvel@...&gt;\r\nSubject: Re: [rest-discuss] How much REST should your Web API get?\r\nX-Yahoo-Group-Post: member; u=544893253; y=8a6EzjplhUM_SUmr-_QRhPPOn5tvnCoFbn6kfaxbXUDRC7O7Y3nF0g\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\n\r\n--047d7b3a901c56c34204dbbfd620\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nJan,\n\nI remain a strong proponent of the idea that it is more fruitful to aim at\n&gt; rethinking the problem to fit a sound paradigm rather than to blame the\n&gt; paradigm for not fitting the problem (one&#39;s perceived view of it, that is).\n&gt;\n\nBut when the paradigm isn&#39;t intended to solve a given problem, do you think\nwe should force the problem to fit into the paradigm?\n\nREST was never designed to solve all software architecture problems. That&#39;s\nquite the opposite and what makes it so powerful to scale the web of\nhypermedia documents.\n\nTwo concrete points:\n&gt;\n&gt; I don&#39;t buy the efficiency argument regarding discovery and granularity of\n&gt; messages - unless you ignore caching and the possibility to tailor\n&gt; representations for specific devices.\n&gt;\n\nYou could also add HTTP compression to the mix. I&#39;m a fan of HTTP caching\nand content negotiation as well. The &quot;Web API&quot; style proposed fully\nleverages those features.\n\n\n&gt; You write about the &#39;Web API style&#39; &quot;requires coordination between clients\n&gt; and servers when changes are deployed&quot; - doh... this eliminates *the*\n&gt; (**the**) primary benefit to apply REST.\n&gt;\n\nExactly, but if you ship a native mobile app or a connected hardware device\nwith no hypermedia capability at all (think about a dumb sensor), you\ndefinitely need to coordinate the clients and servers even though you are\nfully and properly using HTTP. This is why the vast majority of so-called\nweb APIs are versionned and based on stable URIs and representations\nstructures. They can&#39;t always afford to dynamically discover the user\ninterface.\n\nYou could say that native apps aren&#39;t needed and could be re-developped as\nHTML 5 apps, but this isn&#39;t always possible or desirable.\n\n\n&gt; Aside from systems that focus on sending fine grained control messages\n&gt; around in (near) realtime, I have yet to see a case where REST does not\n&gt; shine due to performance, scalability and the ability to decentralize\n&gt; management of the deployment and release cycles.\n\n\nAgain, my point is to take the best of what REST brings but not try to\napply it in cases where a rich hypermedia client is available, but isn&#39;t so\nuncommon. I&#39;m just trying to do REST justice otherwise we&#39;ll get a\nbackslash when people finally realize that the vast majority of REST\nendpoints/APIs/etc. can&#39;t be used in a dynamic way like HTML is used by web\nbrowsers.\n\nBest regards,\nJerome\n\r\n--047d7b3a901c56c34204dbbfd620\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Jan,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;div class=\r\n=3D&quot;gmail_quote&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8=\r\nex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;I remain a strong proponent=\r\n of the idea that it is more fruitful to aim at rethinking the problem to f=\r\nit a sound paradigm rather than to blame the paradigm for not fitting the p=\r\nroblem (one&#39;s perceived view of it, that is).&lt;br&gt;\n&lt;/blockquote&gt;&lt;div&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;div style&gt;But when the paradigm isn&#39;t intended to solve a given=\r\n problem, do you think we should force the problem to fit into the paradigm=\r\n?&lt;/div&gt;&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;REST was never designed to solve all=\r\n software architecture problems. That&#39;s quite the opposite and what mak=\r\nes it so powerful to scale the web of hypermedia documents.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-l=\r\neft:1px #ccc solid;padding-left:1ex&quot;&gt;Two concrete points:&lt;br&gt;\n&lt;br&gt;\nI don&#3=\r\n9;t buy the efficiency argument regarding discovery and granularity of mess=\r\nages - unless you ignore caching and the possibility to tailor representati=\r\nons for specific devices.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;\nYou co=\r\nuld also add HTTP compression to the mix. I&#39;m a fan of HTTP caching and=\r\n content negotiation as well. The &quot;Web API&quot; style proposed fully =\r\nleverages those features.&lt;/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quo=\r\nte&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;=\r\n&gt;\nYou write about the &#39;Web API style&#39; &quot;requires coordination b=\r\netween clients and servers when changes are deployed&quot; - doh... this el=\r\niminates *the* (**the**) primary benefit to apply REST.&lt;br&gt;&lt;/blockquote&gt;&lt;di=\r\nv&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div style&gt;Exactly, but if you ship a native mobile app or a c=\r\nonnected hardware device with no hypermedia capability at all (think about =\r\na dumb sensor), you definitely need to coordinate the clients and servers e=\r\nven though you are fully and properly using HTTP. This is why the vast majo=\r\nrity of so-called web APIs are versionned and based on stable URIs and repr=\r\nesentations structures. They can&#39;t always afford to dynamically discove=\r\nr the user interface.=A0&lt;/div&gt;\n&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;You could sa=\r\ny that native apps aren&#39;t needed and could be re-developped as HTML 5 a=\r\npps, but this isn&#39;t always possible or desirable.&lt;/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;b=\r\nlockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px =\r\n#ccc solid;padding-left:1ex&quot;&gt;\nAside from systems that focus on sending fine=\r\n grained control messages around in (near) realtime, I have yet to see a ca=\r\nse where REST does not shine due to performance, scalability and the abilit=\r\ny to decentralize management of the deployment and release cycles.&lt;/blockqu=\r\note&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;Again, my point is to take the best of what =\r\nREST brings but not try to apply it in cases where a rich hypermedia client=\r\n is available, but isn&#39;t so uncommon. I&#39;m just trying to do REST ju=\r\nstice otherwise we&#39;ll get a backslash when people finally realize that =\r\nthe vast majority of REST endpoints/APIs/etc. can&#39;t be used in a dynami=\r\nc way like HTML is used by web browsers.&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;&lt;div style&gt;Bes=\r\nt regards,&lt;/div&gt;&lt;div style&gt;Jerome&lt;/div&gt;&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;\n\r\n--047d7b3a901c56c34204dbbfd620--\r\n\n"}}