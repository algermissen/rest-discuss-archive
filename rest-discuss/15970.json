{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"cYRrswF_KUfQbiGK2F6hbjoheGImr-GXEktvN0e-klUAQ32vzXYpuqdeI3S7FXJbbPAgJ_G04H-akP5r3LDt7GezpspOZcAeLWY68g","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: A standardized way to describe a new hypermedia format?","postDate":"1279924093","msgId":15970,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGkyZDUxdCtxcDhyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEZEREE3RTcxLThBRUYtNDFDRi1CNkExLTQwQ0FBOERDMzVENkBtYWMuY29tPg=="},"prevInTopic":15967,"nextInTopic":15973,"prevInTime":15969,"nextInTime":15971,"topicId":15963,"numMessagesInTopic":8,"msgSnippet":"... Ah, but remember that the context here is that the hypermedia format is designed without knowledge of what the client does. So in the case of HTML, the","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50065 invoked from network); 23 Jul 2010 22:33:36 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m13.grp.re1.yahoo.com with QMQP; 23 Jul 2010 22:33:36 -0000\r\nX-Received: from unknown (HELO n4-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.100)\n  by mta1.grp.sp2.yahoo.com with SMTP; 23 Jul 2010 22:33:36 -0000\r\nX-Received: from [67.195.134.48] by n4.bullet.mail.sp2.yahoo.com with NNFMP; 23 Jul 2010 22:28:15 -0000\r\nX-Received: from [69.147.65.174] by t1.bullet.mail.sp2.yahoo.com with NNFMP; 23 Jul 2010 22:28:15 -0000\r\nX-Received: from [98.137.34.184] by t12.bullet.mail.sp1.yahoo.com with NNFMP; 23 Jul 2010 22:28:15 -0000\r\nDate: Fri, 23 Jul 2010 22:28:13 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i2d51t+qp8r@...&gt;\r\nIn-Reply-To: &lt;FDDA7E71-8AEF-41CF-B6A1-40CAA8DC35D6@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: A standardized way to describe a new hypermedia format?\r\nX-Yahoo-Group-Post: member; u=221173245; y=AFJtlLH2fBURZ1N2F0YY-r4PuY61nyp8S9BAQ9JaGv4vmrKLlA\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...=\r\n&gt; wrote:\n&gt;\n&gt; \n&gt; On Jul 23, 2010, at 7:36 PM, brendel.juergen wrote:\n&gt; \n&gt; &gt; =\r\n\n&gt; &gt; \n&gt; &gt; Hello!\n&gt; &gt; \n&gt; &gt; Is there a standardized way to describe a new hyp=\r\nermedia format?\n&gt; \n&gt; No, but you might be interested in\n&gt; \n&gt; http://www.nor=\r\ndsc.com/blog/?p=3D6  and  \n&gt; http://www.nordsc.com/blog/?p=3D8\n&gt; \n&gt; &gt; \n&gt; &gt; =\r\nLet me provide some context:\n&gt; &gt; \n&gt; &gt; Yesterday, I had a long discussion on=\r\n Twitter with Andrew Wahbe about the topic of whether it&#39;s even possible to=\r\n create a hypermedia format without knowledge of the client.\n&gt; &gt; \n&gt; &gt; More =\r\nspecifically, the concern was that whatever hypermedia format you come up w=\r\nith would &#39;bind&#39; the client to that server: It&#39;s difficult to have a generi=\r\nc client, since instead you end up with clients that have to have specific =\r\nknowledge about the particular hypermedia format you use.\n&gt; \n&gt; Yes, that is=\r\n natural (and ok). User agents provide the interaction point between users =\r\nand the application. They do this by\n&gt; \n&gt; - exposing information (e.g. rend=\r\ner the content of &lt;title&gt; element in\n&gt;  the browser window head or store th=\r\ne result of a link check run for\n&gt;  a site in a database or file)\n&gt; - perfo=\r\nrming automatic transitions (e.g. GET an HTML inline image or\n&gt;  recursivel=\r\ny traverse links of a site for validation)\n&gt; - provide a means for the user=\r\n to activate hypermedia controls\n&gt;  (e.g. make links found in a page clicka=\r\nble, display forms)\n&gt; \n&gt; Doing all this requires in-depth knowledge of the =\r\nmedia type and coding for all this requires in-depth, hard coded knowledge =\r\nabout the expected media types.\n&gt; \n&gt; It is simply ok that browsers implemen=\r\nt HTML and that AtomPub clients implement the AtomPub media types. It is al=\r\nso ok that Google&#39;s indexed likely understands all media types it knows to =\r\nbe in use on the Web.\n&gt; \n\nAh, but remember that the context here is that th=\r\ne hypermedia format is designed without knowledge of what the client does. =\r\nSo in the case of HTML, the client can do all the things you mention quite =\r\neasily because HTML is explicitly designed for them -- well explicitly for =\r\nthe browser examples like &lt;title&gt; and perhaps implicitly for the spider exa=\r\nmples by virtue of HTML following the Principle of Least Power. In short --=\r\n HTML was designed around a client domain (interactive information presenta=\r\ntion).\n\nIf the hypermedia format was not designed around the client domain,=\r\n then the client would be tasked with mapping the data to its domain (which=\r\n may not even be feasible). Also, the client would be bound to that domain =\r\n-- restricting it from doing other things. \n\nFor example, if Amazon designe=\r\nd it&#39;s hypermedia format before browser&#39;s and HTML existed it would likely =\r\nrevolve around buying books and other items. It would likely be impossible =\r\nto express something like Facebook in this language - you&#39;d need some new f=\r\normat. An &quot;Amazon browser&quot; would not be able to interact with Facebook and =\r\nvice versa, even though the client domain (again interactive information pr=\r\nesentation) was the same.\n\nAnd before anyones says anything about this havi=\r\nng to do anything with the user guiding the browser let me address this. CC=\r\nXML is an example of a hypermedia language that does not drive clients with=\r\n UIs. CCXML drives a call control platform that among other things, accepts=\r\n, places and connects phone calls. It can be used for many applications -- =\r\nfor example you could create a Google-Voice-like application that looks at =\r\nthe number dialed and calls multiple phone numbers allowing you to have one=\r\n phone number that rings your cell and your deskphone. Alternatively, a cal=\r\nl center application might look at the number of the caller, figure out who=\r\n they are whether they are a &quot;gold&quot;, &quot;silver&quot; or &quot;bronze&quot; customer (via a D=\r\nB lookup) and connect them to the right agents for that customer pool. So t=\r\nhe key difference is that in the first example we route based on number dia=\r\nled and in the second based on the caller&#39;s number -- but the finer details=\r\n of the apps can be quite different. Because CCXML is designed around what =\r\nthe raw telephony capabilities of the client and not the applications, the =\r\nsame hypermedia format and clients can be used for both types of applicatio=\r\nns.\n\nSo it seems that you can get a &quot;broader reaching&quot; hypermedia format by=\r\n designing it around the client. But the original question was if you have =\r\nno knowledge of the client domain, can you design something that qualifies =\r\nas a &quot;hypermedia format&quot;? Could you really implement a client that achieves=\r\n HATEOAS based on a format that was designed without any consideration for =\r\nthe client domain? In my earlier Amazon browser example, I&#39;d imagined that =\r\nthe hypermedia format was designed for &quot;interactive information presentatio=\r\nn&quot; but that the data structures and controls were customized for Amazon&#39;s d=\r\nomain -- hence the client is an &quot;Amazon browser&quot;. \n\nOne might propose Atom/=\r\nAtomPub. But I tend to think of this as designed with clients in mind -- a =\r\nclient is a feed processor that may also possibly allow publishing to the f=\r\needs. There are some very specific client workflows in mind here. Say that =\r\nthe content in the feeds is employee data. You can have a feed for all the =\r\nemployees in the company that allow clients to process the data in terms of=\r\n a big list. But if the client wants to process the data as a hierarchy it =\r\ncan&#39;t do it. Of course you could define a link relation to capture the hier=\r\narchy, but now your just extending the hypermedia format to meet the needs =\r\nof the client. (And that&#39;s maybe a dumb, toy example, but I couldn&#39;t think =\r\nof another on the spot.)\n\nSo can you design a hypermedia format that cuts a=\r\ncross the full range of clients that one might want to have interact with a=\r\n service or does HATEOAS _require_ that hypermedia formats are designed for=\r\n a specific client domain? \n\nDoes anyone have an example of client agnostic=\r\n formats that allowed a truly RESTful client to be built?\n\nRegards,\n\nAndrew=\r\n\n\n\n"}}