{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343278744,"authorName":"Subbu Allamaraju","from":"Subbu Allamaraju &lt;subbu@...&gt;","profile":"sallamar","replyTo":"SENDER","senderId":"Qi3pO0XbNQ5949WfF5YXuM9EMr9Oz9WHmCgE7wzg9pVeGVIILe5YTCeirfTynE97LDxg7-FxPle4QUl96ICsqldr0TAlDailcQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful web service with some custom operations","postDate":"1231809105","msgId":11989,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PERDQjNCOTk5LTkwOTItNDAzRi05M0FBLTYwRDkxNzdBRjQwN0BzdWJidS5vcmc+","inReplyToHeader":"PGRlNDdjMDIzMDkwMTEyMDMwMXcxZjk1MmEzM3VhOWZiMWY1MDIxZDJkMzhkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGRlNDdjMDIzMDkwMTEyMDMwMXcxZjk1MmEzM3VhOWZiMWY1MDIxZDJkMzhkQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":11988,"nextInTopic":11990,"prevInTime":11988,"nextInTime":11990,"topicId":11980,"numMessagesInTopic":19,"msgSnippet":"In the lines of what Aristotle was suggesting, it is better to make these changes in the context of another resource, a la a sidekick. Here is one possibility:","rawEmail":"Return-Path: &lt;subbu@...&gt;\r\nX-Sender: subbu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 56422 invoked from network); 13 Jan 2009 01:11:48 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m45.grp.scd.yahoo.com with QMQP; 13 Jan 2009 01:11:48 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.224)\n  by mta16.grp.scd.yahoo.com with SMTP; 13 Jan 2009 01:11:48 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id g37so11138606rvb.33\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 12 Jan 2009 17:11:48 -0800 (PST)\r\nX-Received: by 10.141.63.20 with SMTP id q20mr84483rvk.106.1231809108026;\n        Mon, 12 Jan 2009 17:11:48 -0800 (PST)\r\nReturn-Path: &lt;subbu@...&gt;\r\nX-Received: from ?192.168.1.100? (c-67-161-88-86.hsd1.wa.comcast.net [67.161.88.86])\n        by mx.google.com with ESMTPS id k41sm8697794rvb.3.2009.01.12.17.11.46\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Mon, 12 Jan 2009 17:11:47 -0800 (PST)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;DCB3B999-9092-403F-93AA-60D9177AF407@...&gt;\r\nTo: Gabor Szokoli &lt;szocske@...&gt;\r\nIn-Reply-To: &lt;de47c0230901120301w1f952a33ua9fb1f5021d2d38d@...&gt;\r\nContent-Type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: quoted-printable\r\nMime-Version: 1.0 (Apple Message framework v930.3)\r\nDate: Mon, 12 Jan 2009 17:11:45 -0800\r\nReferences: &lt;de47c0230901120301w1f952a33ua9fb1f5021d2d38d@...&gt;\r\nX-Mailer: Apple Mail (2.930.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Subbu Allamaraju &lt;subbu@...&gt;\r\nSubject: Re: [rest-discuss] RESTful web service with some custom operations\r\nX-Yahoo-Group-Post: member; u=343278744; y=vdLHrTW-kRbLoeNeC1Nh4SminiHlGEF5cr-PK8WowUahNn0\r\nX-Yahoo-Profile: sallamar\r\n\r\nIn the lines of what Aristotle was suggesting, it is better to make  \nthese=\r\n changes in the context of another resource, a la a sidekick.\n\nHere is one =\r\npossibility:\n\nPOST /mover\n\n&lt;mover&gt;\n  &lt;source&gt;some ref to the source node&lt;/s=\r\nource&gt;\n  &lt;target&gt;some ref to the node to which the children of the source  =\r\n\nwill be added to&lt;/target&gt;\n&lt;/mover&gt;\n\nUpon success\n\n303 See Other\nLocation: =\r\nURI to the updated target node\n\nIf you prefer, you can create new permanent=\r\n or semi-permanent  \nresources after each POST. Please note that there is n=\r\nothing unRESTful  \nabout this model - resources can spawn other resources o=\r\nr can be  \nephemeral.\n\nStefan&#39;s suggestion will work, except that it leaves=\r\n up to the client  \nto DELETE the source node in a separate step. If your a=\r\npplication  \nrequires atomicity, the above will guarantee that.\n\nSubbu\n\nOn =\r\nJan 12, 2009, at 3:01 AM, Gabor Szokoli wrote:\n\n&gt; Hi there!\n&gt;\n&gt; I like the =\r\nidea of RESTful web services a lot in theory, especially\n&gt; compared to the =\r\nalternative...\n&gt;\n&gt; So we started building a pudding proofing web service fo=\r\nr our\n&gt; application. (Please note that the web service is only an auxiliary=\r\n\n&gt; function of the application, web services are not our core business.)\n&gt;\n=\r\n&gt; Our prototype service model is intentionally simplistic: we have\n&gt; &quot;nodes=\r\n&quot; and &quot;users&quot; in a one-to-many containment relationship.\n&gt; All is fine crea=\r\nting, requesting and updating them, deleting &quot;users&quot;\n&gt; is also fine.\n&gt; Befo=\r\nre deleting a &quot;node&quot; however, the normal usage pattern would be\n&gt; migrating=\r\n all its &quot;users&quot; to another &quot;node&quot;.\n&gt; I am having trouble adding this singl=\r\ne &quot;RPC-ish&quot; operation to our\n&gt; otherwise RESTful service efficiently.\n&gt; The=\r\n clean solution would be the client listing, and migrating all\n&gt; &quot;users&quot; of=\r\n the &quot;node&quot;.\n&gt; This is however neither efficient, nor atomic.\n&gt; The quick a=\r\nnd dirty solution would be passing the fallback &quot;node&quot; as\n&gt; an argument of =\r\nthe DELETE operation, but that breaks many principles\n&gt; and benefits of RES=\r\nT.\n&gt;\n&gt; I am pretty sure similar architecturally unstylish situations will\n&gt;=\r\n arise in all our services, just like databases have stored procedures,\n&gt; n=\r\not just SQL.\n&gt;\n&gt; Surely I am not the first with such an issue. Could the ki=\r\nnd members\n&gt; of this fine discussion group share their opinions on this, an=\r\nd/or\n&gt; point me towards relevant literature?\n&gt;\n&gt; Thank you in advance:\n&gt;\n&gt; =\r\nGabor Szokoli\n&gt;\n&gt; \n\n\n"}}