{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":131511758,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"YOZgorpUlgqsY_ZgECGmlsitqa-FgHCgf5cj3BY470VW-Zl1k2LZeozGR8oS4lkyKi9rditQPkHLabFeW1kVbyz6U9IeN9U7yRAT3y-K","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST, HTTP, Sessions and Cookies","postDate":"1050519008","msgId":3593,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGMTE1MTFGLTcwM0MtMTFENy04RDg2LTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg==","inReplyToHeader":"PDIwMDMwNDE2MTEwNzMyLkkzMTY4M0B3d3cubWFya2Jha2VyLmNhPg=="},"prevInTopic":3592,"nextInTopic":3594,"prevInTime":3592,"nextInTime":3594,"topicId":3549,"numMessagesInTopic":30,"msgSnippet":"... Well, keep in mind that the actions of PUT and POST also defer the maintenance of state to the server.  Since we could construct a login semantic via the","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_5); 16 Apr 2003 18:48:00 -0000\r\nReceived: (qmail 26248 invoked from network); 16 Apr 2003 18:48:00 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m6.grp.scd.yahoo.com with QMQP; 16 Apr 2003 18:48:00 -0000\r\nReceived: from unknown (HELO mac.wakasoft.com) (64.60.92.50)\n  by mta2.grp.scd.yahoo.com with SMTP; 16 Apr 2003 18:47:59 -0000\r\nReceived: from apache.org (localhost [127.0.0.1])\n\tby mac.wakasoft.com (8.12.8/8.12.8) with ESMTP id h3GIo9dl004279;\n\tWed, 16 Apr 2003 11:50:09 -0700 (PDT)\r\nDate: Wed, 16 Apr 2003 11:50:08 -0700\r\nSubject: Re: [rest-discuss] REST, HTTP, Sessions and Cookies\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMime-Version: 1.0 (Apple Message framework v551)\r\nCc: rest-discuss@yahoogroups.com\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nIn-Reply-To: &lt;20030416110732.I31683@...&gt;\r\nMessage-Id: &lt;3F11511F-703C-11D7-8D86-000393753936@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Apple Mail (2.551)\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nX-Yahoo-Group-Post: member; u=131511758\r\nX-Yahoo-Profile: roy_fielding\r\n\r\n&gt;&gt; That concept tends to be a little confusing, partly because HTTP,\n&gt;&gt; like many network protocols, has a notion of stateless interactions\n&gt;&gt; that only refers to having all of the information needed to\n&gt;&gt; understand each request inside the request or defined by universal\n&gt;&gt; standard.  REST goes further and constrains application state\n&gt;&gt; (not resource state) to be held on the client.\n&gt;\n&gt; Right.  Correct me if I&#39;m wrong, but I&#39;ve always assumed that this\n&gt; additional constraint is a constraint on application semantics.  That\n&gt; is, that a RESTful application semantic may not punt application\n&gt; state.  So &quot;LOGIN&quot; wouldn&#39;t be a permitted semantic, because even \n&gt; though\n&gt; a LOGIN message may be semantically self-contained (and uniform even),\n&gt; it defers the maintenance of some application state (whether you&#39;re\n&gt; authorized or not) to the server.\n\nWell, keep in mind that the actions of PUT and POST also defer the\nmaintenance of state to the server.  Since we could construct a login\nsemantic via the PUT of a user-specific resource, with logout being\nsignified by a DELETE, it would be odd for REST to disallow LOGIN\njust on the basis of it being a stateful semantic.  I think it is more\naccurate to say that, because user identification must be supplied\nwith each request subject to authentication, that an action like LOGIN\nwould only add overhead.\n\n&gt; But there&#39;s also a problem if the cookie is defined such that the\n&gt; referenced state varies with time, which I would expect is much more\n&gt; common than varying by gateway.  A message that references some other\n&gt; state may be processed at a time when that state is different than it\n&gt; was when the message was constructed.\n&gt;\n&gt; I understand that this isn&#39;t as relevant to the simple browser/server\n&gt; interactions of today, but architecturally speaking it seems quite\n&gt; important, especially as we move towards disconnected and queued\n&gt; interactions.\n\nThat same problem applies to resources.  We could attempt to model REST\nas a shared-memory-by-message-passing system, but don&#39;t because that\nmodel tries to maintain distributed consistency.  REST just says that\nthere is no consistency -- only representations that indicate state\nat some point in the past and an implicit grant of use for some time\ninto the future.\n\n....Roy\n\n\n"}}