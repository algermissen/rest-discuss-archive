{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"35gGeMCyUCKLyBLXz8RrOInyUD72rI1_Hz0cEw591hkFSbi_S3PVTFBGkO-Mv_wG34S5hpUcZr45L5B0r3FKfa6ivC68sxsJQQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &quot;Seaparating REST Facts from Fallacies&quot;","postDate":"1226420848","msgId":11496,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwMUI1NzhCLTU4QzUtNDZDNS1CQkZCLTQwODQzNUIyMUREQUBtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PDc5OTMzMGMzMDgxMTEwMTEyMXc3M2RmYTA4OW83ZmI0ZTNiMGY3YzNiZDZmQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGdmM2FkcythZHFjQGVHcm91cHMuY29tPiA8RkU2OEMxOEEtNjYzMy00QjY4LTk3NjItREVDNTRENUM1MTA2QG1pbmR0b3VjaC5jb20+IDw3OTkzMzBjMzA4MTExMDExMjF3NzNkZmEwODlvN2ZiNGUzYjBmN2MzYmQ2ZkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":11495,"nextInTopic":11497,"prevInTime":11495,"nextInTime":11497,"topicId":11447,"numMessagesInTopic":59,"msgSnippet":"... Yellow/green or red/blue work well together. ... I m retracting this comment.  I think it s too fine grained to matter. :)  But to illustrate the point,","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 82484 invoked from network); 11 Nov 2008 16:32:35 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m52.grp.scd.yahoo.com with QMQP; 11 Nov 2008 16:32:35 -0000\r\nX-Received: from unknown (HELO smtp.01.com) (38.98.186.166)\n  by mta18.grp.scd.yahoo.com with SMTP; 11 Nov 2008 16:32:35 -0000\r\nX-Received: from asav-1.01.com (localhost.localdomain [127.0.0.1])\n\tby asav-1.01.com (8.13.1/8.13.1) with SMTP id mABGRU7R004963;\n\tTue, 11 Nov 2008 10:27:31 -0600\r\nX-Received: from smtp-2.01.com (smtp-2.01.com [38.98.186.158])\n\tby asav-1.01.com (asav-1.01.com [10.25.1.11])\n\tid kAAARU0518660686Vw ret-id none; Tue, 11 Nov 2008 10:27:31 -0600\r\nX-Received: from localhost (localhost.localdomain [127.0.0.1])\n\tby smtp-2.01.com (Postfix) with ESMTP id C2DDD1AD3B4;\n\tTue, 11 Nov 2008 10:27:29 -0600 (CST)\r\nX-Received: from smtp-2.01.com ([127.0.0.1])\n\tby localhost (smtp-2.01.com [127.0.0.1]) (amavisd-new, port 10024)\n\twith ESMTP id dBfwlk-oOG9u; Tue, 11 Nov 2008 10:27:29 -0600 (CST)\r\nX-Received: from [192.168.1.102] (ip70-179-9-103.sd.sd.cox.net [70.179.9.103])\n\tby smtp-2.01.com (Postfix) with ESMTP id 3FCA31AD38E;\n\tTue, 11 Nov 2008 10:27:29 -0600 (CST)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;101B578B-58C5-46C5-BBFB-408435B21DDA@...&gt;\r\nTo: Alan Dean &lt;alan.dean@...&gt;\r\nIn-Reply-To: &lt;799330c30811101121w73dfa089o7fb4e3b0f7c3bd6f@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v929.2)\r\nDate: Tue, 11 Nov 2008 08:27:28 -0800\r\nReferences: &lt;gf3ads+adqc@...&gt; &lt;FE68C18A-6633-4B68-9762-DEC54D5C5106@...&gt; &lt;799330c30811101121w73dfa089o7fb4e3b0f7c3bd6f@...&gt;\r\nX-Mailer: Apple Mail (2.929.2)\r\nX-FSL-MailScanner-Information: Please contact postmaster@... for more information\r\nX-FSL-MailScanner: Found to be clean\r\nX-FSL-MailScanner-SpamCheck: \r\nX-FSL-MailScanner-From: steveb@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] &quot;Seaparating REST Facts from Fallacies&quot;\r\nX-Yahoo-Group-Post: member; u=292691042; y=zWlko8d9ORrwjLY7KCboUu51VuMINIBOPjwnGwCu8_Ji1BVeSEs\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\nOn Nov 10, 2008, at 11:21 AM, Alan Dean wrote:\n\n&gt; Steve,\n&gt;\n&gt; Thanks for the feedback :-)\n&gt;\n&gt; On Mon, Nov 10, 2008 at 3:20 PM, Steve Bjorg &lt;steveb@...&gt;  \n&gt; wrote:\n&gt;&gt; Alan,\n&gt;&gt; Finally got around checking out your slides.  Nice work.  Quick  \n&gt;&gt; comment on\n&gt;&gt; colors.  Consider using another color combination than red and  \n&gt;&gt; green to make\n&gt;&gt; it easier to intuitively parse intent even for colorblind readers.\n&gt;\n&gt; Any color combo suggestions?\n\nYellow/green or red/blue work well together.\n\n&gt;&gt; [19] Style += Code on Demand\n&gt;&gt; I&#39;m not sure how I&#39;m supposed to interpret &quot;simplifies clients&quot; in  \n&gt;&gt; this\n&gt;&gt; context.  If the client is a browser then implementing a browser that\n&gt;&gt; supports CoD is certainly more complex than one that doesn&#39;t.   \n&gt;&gt; Isn&#39;t CoD\n&gt;&gt; rather an escape mechanism for the media-type so that the semantics  \n&gt;&gt; of\n&gt;&gt; discovering and building new requests are not bound by the media- \n&gt;&gt; type&#39;s\n&gt;&gt; expressive capabilities?  Somewhat similar to POST vs. GET/PUT/ \n&gt;&gt; DELETE.\n&gt;\n&gt; From the dissertation: &quot;This simplifies clients by reducing the number\n&gt; of features required to be pre-implemented.&quot;\n\nI&#39;m retracting this comment.  I think it&#39;s too fine grained to  \nmatter. :)  But to illustrate the point, HTML5 now has &lt;video&gt; and  \n&lt;audio&gt; tags.  Introducing these has complicated the client (browser),  \nwhereas before it was handled by CoD using &lt;object&gt; or &lt;embed&gt;.   \nNotice how we&#39;re talking about the browser as a client here.  The  \nbrowser&#39;s complexity is directly related to the expressive power of  \nthe media-type it is designed for.  I think this was the intent of the  \nquote you provided.  That is, trying to build a client for all  \npossible situations without using CoD is immensely complex.  On the  \nother hand, a client without CoD capability is less complex than one  \nwith it, due to loss of functionality.  A rather weak statement.  So,  \nlet&#39;s not linger on it any further. :)\n\n&gt;&gt; [22] Plain Old XML (POX)\n&gt;&gt; I would broaden the category of POX.  Even if your server returns  \n&gt;&gt; something\n&gt;&gt; of the form &lt;cart href=&quot;...&quot;&gt;&lt;item href=&quot;...&quot; /&gt;&lt;/cart&gt; with media- \n&gt;&gt; type\n&gt;&gt; application/cart+xml, that&#39;s still POX.  The telltale sign is that  \n&gt;&gt; the\n&gt;&gt; media-type is so narrowly defined that it cannot be processed without\n&gt;&gt; application specific knowledge.  A true HATEOS compliant media-type  \n&gt;&gt; enables\n&gt;&gt; a useful interactive surface without the need for specialization.   \n&gt;&gt; However,\n&gt;&gt; specialization may be required to enable certain features.  For  \n&gt;&gt; example,\n&gt;&gt; knowledge of GDATA specific link relationships to enable batch  \n&gt;&gt; operations in\n&gt;&gt; AtomPub.\n&gt;\n&gt; Not at all sure that I understand your meaning. Could you elaborate\n&gt; please? Any links you can send me?\n\nApologies in advance for the lengthy response.\n\nQuoted from http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven\n\n&quot;A REST API should spend almost all of its descriptive effort in  \ndefining the media type(s) used for representing resources and driving  \napplication state, or in defining extended relation names and/or  \nhypertext-enabled mark-up for existing standard media types. Any  \neffort spent describing what methods to use on what URIs of interest  \nshould be entirely defined within the scope of the processing rules  \nfor a media type (and, in most cases, already defined by existing  \nmedia types)&quot;\n\nI found this statement very enlightening.  My interpretation was that  \none should forget about specific interaction patterns and end points,  \nsuch as retrieving the contents of a cart, and instead concentrate on  \nproviding general semantics that are the &quot;rules of engagement.&quot;  For  \nexample, in Atom, an entry may have a &lt;link rel=&quot;edit&quot;&gt; element.  If  \npresent, it conveys to the client that this entry can be updated or  \ndeleted using the associated URI.\n\nGData builds on this definition by introducing additional relationship  \nattributes.  For example, here is the GData API for calendars:\nhttp://code.google.com/apis/calendar/developers_guide_protocol.html\n\nOne of the new relationships is expressed by &lt;link rel=&#39;http://schemas.google.com/acl/2007#accessControlList&#39; \n &gt;.  This link points to a resource that contains access control  \ninformation.  Presence of this link in an entry, means that ACL  \nsupport is available for this resource.  ACLs themselves are Atom  \nfeeds and entries.\n\nIn other words, it is possible to write a general purpose Atom reader  \nthat renders known Atom elements in a nice way, but also shows unknown  \nelements to the user, annotating the links with the relationship name  \n(not pretty, but better than nothing).  Such a general purpose reader  \ncould be used to explore all relationships in the GData API in a read- \nonly fashion.  It could also be used to modify or delete entries when  \nthey have a &lt;link rel=&quot;edit&quot;&gt; element because Atom defined the &quot;rules  \nof engagement.&quot; But it could not be used to create news ones, because  \nAtom lacks the descriptive capabilities to convey how entries must be  \nbuilt by the client before they are submitted.\n\nIn this settings, all exchanges use application/atom+xml as  \nrepresentation.  There is no application/calendar+xml type, because  \nit&#39;s not needed.  Instead, the core mime-type is augmented with  \napplication or vendor specific annotations.  The same principle would  \nwork for application/xhtml+xml and using microformats.  The benefit  \nwould be that we would also gain the descriptive ability of how to  \nsubmit new items thanks to the &lt;form&gt; tag (albeit only of type  \napplication/x-www-form-encoded, unless we use CoD. But that&#39;s alright  \nsince the server is now in command of the possible client  \nrepresentations.  So, no surprises there).  The downside of  \nsemantically annotated HTML is that it&#39;s very freeform.\n\nCircling back on the comment.  I believe that the core representation  \nused by a REST-compliant application/service must have the ability to  \nintroduce relationships and convey enough information about these so  \nthat a client knows how to interact with the resource with no a priori  \nknowledge of the resource.  In Atom, &lt;link re=&quot;edit&quot;&gt; indicates that  \nHTTP PUT and DELETE can be used to modify the resource.  In HTML, &lt;a  \nhref=&quot;...&quot;&gt; indicates that the client can do a GOT on the resource,  \nand &lt;form method=&quot;POST&quot;&gt; indicates that a POST can be done on a  \nresource.  The client now knows how to interact (i.e. which methods to  \nuse) and where to interact (i.e. the URIs to communicate with) without  \never having any upfront knowledge about them other than the initial  \nentry point.\n\nNow, anyone may decide to introduce their own new mime-type that meets  \nthese requirements.  That&#39;s fine.  I just think, why bother.  Atom and  \nHTML have done a great job being universally accepted for defining the  \n&quot;rules of engagement.&quot;  The next step is to map these capabilities to  \nour application/service specific needs and take advantage of them.   \nFurthermore, lack of conveying these &quot;rules of engagement&quot; in the mime- \ntype itself is POX, imho.  Hence, my initial comment!\n\n\nCheers,\n\n- Steve\n\n"}}