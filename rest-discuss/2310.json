{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":110414260,"authorName":"Toivo &quot;Deutsch&quot; Lainevool","from":"&quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;","profile":"tlainevool","replyTo":"SENDER","senderId":"ys1xII-XAyuRqJkz6okoF_gzVODS5pFuZoaoLhNrwAxUI2f8Ov72Kqq3avqWtSvRHtHXAlwbwNWQ56H8x73Jfp0jODRoZao6QCngyohsSb8fbzMz2_NQfi7C6sUPqZwh0o6VYA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: When REST should and should not be used Was: Evidence","postDate":"1030744473","msgId":2310,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMDEwMWMyNTA2ZiRkM2E2YTE2MCQ3OWFiYTQ0MEBkZXV0c2NoODEwMD4=","inReplyToHeader":"PGFrb28zcityOWpkQGVHcm91cHMuY29tPg=="},"prevInTopic":2309,"nextInTopic":2311,"prevInTime":2309,"nextInTime":2311,"topicId":2205,"numMessagesInTopic":64,"msgSnippet":"I would disagree.  ROP degenerates OOP so much that it ceases to be OOP. The whole idea behind OOP is that you have objects, and you create methods(verbs) on","rawEmail":"Return-Path: &lt;tlainevool@...&gt;\r\nX-Sender: tlainevool@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 30 Aug 2002 22:00:29 -0000\r\nReceived: (qmail 69800 invoked from network); 30 Aug 2002 22:00:18 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m15.grp.scd.yahoo.com with QMQP; 30 Aug 2002 22:00:18 -0000\r\nReceived: from unknown (HELO mail.ebizhostingsolutions.com) (64.46.100.39)\n  by mta1.grp.scd.yahoo.com with SMTP; 30 Aug 2002 22:00:17 -0000\r\nReceived: (qmail 9992 invoked from network); 30 Aug 2002 22:00:16 -0000\r\nReceived: from unknown (HELO deutsch8100) (64.164.171.121)\n  by server2010.ebizhostingsolutions.com with SMTP; 30 Aug 2002 22:00:16 -0000\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] Re: When REST should and should not be used Was: Evidence\r\nDate: Fri, 30 Aug 2002 14:54:33 -0700\r\nMessage-ID: &lt;000101c2506f$d3a6a160$79aba440@deutsch8100&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook, Build 10.0.2627\r\nIn-Reply-To: &lt;akoo3r+r9jd@...&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nImportance: Normal\r\nFrom: &quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;\r\nX-Yahoo-Group-Post: member; u=110414260\r\nX-Yahoo-Profile: tlainevool\r\n\r\nI would disagree.  ROP degenerates OOP so much that it ceases to be OOP.\nThe whole idea behind OOP is that you have objects, and you create\nmethods(verbs) on the objects. In ROP, you have only four verbs\n(methods).  You lose the whole intent of OOP when you do this.  If you\ntell a developer &quot;OK, use Java but every object is only allowed to have\nfour methods: Get, Put, Post and Delete&quot; what you would end up with\nisn&#39;t anything like a good OO design.\n\nSOAP/RPC is much more closely aligned with OO.  It comes out of\n&quot;Component Based&quot; architectures like CORBA and DCOM.  It&#39;s easy for\ndevelopers to make the jump from objects/methods to Web\nservices/operations.  There are lots of tools that automatically do the\nmapping between OOPLs and SOAP/RPC.  I have yet to see a tool that does\nthis for REST.\n\nWith REST you can&#39;t just take any Java/C++/C# Object and turn it into an\neasily used network accessible &quot;thing&quot;.\n\nAn analogy might help here.  Saying ROP is like a degenerate case of OOP\nis like saying Structured Programming is a degenerate case of OOP.  Sure\nyou can use C++ or Java and do structured programming, but then you&#39;re\nnot doing OOP.  Structured Programming and OOP are different paradigms.\n\nI maintain that OO and RO are different development paradigms.  I would\nlove to be wrong though, it would make things a whole lot easier.\n\nToivo\n\n&gt; -----Original Message-----\n&gt; From: inthedarkplace\n&gt; \n&gt; \n&gt; This seems like the wrong tack to take. On close analaysis, Resource\n&gt; Oriented Programming is far more object oriented than SOAP/RPC. In\n&gt; fact there&#39;s a strong case to be made that ROP is a degenerate case\n&gt; of OOP, simplified and constrained in order to meet the scalability\n&gt; requirements of internet class applications.\n&gt; \n&gt; \n&gt; -itdp\n&gt; \n&gt; \n\n\n\n"}}