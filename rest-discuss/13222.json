{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"k8ReNdrQN-YwLYrGcA-gErN9mJ89HmKWjRMlXlDdzXdht-Dl6mm3FU0gQPRl1zRFnWEE96lEevuBYNF6Ttz-yRyePxlbeUuYDNQ1m8iz","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Media Type Version Negotiation","postDate":"1252648124","msgId":13222,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMDkwOTEwMjI0OG0xNTllYzgxNGk4OTc2MjRlY2JmMWNjMGVjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRBQTlDM0NCLjgwODA3QHJlZGhhdC5jb20+","referencesHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPgkgPDRBQTlDM0NCLjgwODA3QHJlZGhhdC5jb20+"},"prevInTopic":13221,"nextInTopic":13223,"prevInTime":13221,"nextInTime":13223,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"... I, on the other hand, think the best approach is to put the major version directly in the subtype (eg `application/myformat.v2+xml`). One practical issue","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 33654 invoked from network); 11 Sep 2009 05:49:45 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m2.grp.sp2.yahoo.com with QMQP; 11 Sep 2009 05:49:45 -0000\r\nX-Received: from unknown (HELO ey-out-1920.google.com) (74.125.78.148)\n  by mta3.grp.re1.yahoo.com with SMTP; 11 Sep 2009 05:49:44 -0000\r\nX-Received: by ey-out-1920.google.com with SMTP id 13so153183eye.46\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 10 Sep 2009 22:48:44 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.210.60.13 with SMTP id i13mr81694eba.8.1252648124263; Thu, 10 \n\tSep 2009 22:48:44 -0700 (PDT)\r\nIn-Reply-To: &lt;4AA9C3CB.80807@...&gt;\r\nReferences: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt;\n\t &lt;4AA9C3CB.80807@...&gt;\r\nDate: Thu, 10 Sep 2009 23:48:44 -0600\r\nMessage-ID: &lt;28e257110909102248m159ec814i897624ecbf1cc0ec@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=304236879; y=_8h3Co06Si3eUoh5RBVSyJ4Yr41YiBjoOPf9AULW9NoyNDHDHutEiAgcfA\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Thu, Sep 10, 2009 at 9:28 PM, Bill Burke &lt;bburke@...&gt; wrote:\n&gt; Tim Williams wrote:\n&gt;\n&gt; &gt; 3) The next thing that comes to mind is something like the &quot;level&quot;\n&gt; &gt; accept-extension exampled in rfc2616 (e.g. text/html;level=1). In my\n&gt; &gt; scenario, would be something like: application/myformat;version=2.0 I\n&gt; &gt; suppose.\n&gt; &gt;\n&gt;\n&gt; I like this approach the best. I also prefer:\n&gt;\n&gt; application/myformat+xml;version=2.0\n&gt; application/myformat+json;version=2.0\n&gt;\n&gt; In other words, the &quot;+&quot; whether or not the media type allows the + or\n&gt; not. (json doesn&#39;t I think).\n&gt;\n\nI, on the other hand, think the best approach is to put the major\nversion directly in the subtype (eg `application/myformat.v2+xml`).\n\nOne practical issue with putting the version in a parameter is that\nmany applications servers will be unable to facilitate content\nnegotiation.  For instance, Rails believes, quite reasonably, that\n`application/myformat+xml;version=2.0` and\n`application/myformat+xml;version=3.0` are the same mime type.\nTherefore, if you take this approach, you would not be able to\nleverage any on it&#39;s very nice content negotiation support.  I am not\nvery familiar with other web app frameworks but it would bear\ninvestigating the one you plan on using.\n\nOn a more theoretical level there is the fact that parameters for a\nmime type are syntactically optional.  This means that as a server you\nhave to decide what to do when you get a request with an accept of\n`application/myformat+xml`.  There are three options none of which is\nvery good.\n\nYou could return at 406 with the list types with valid versions.\nHowever, this might be somewhat disconcerting given that to date\nalmost common MIME type parameters are both syntactically and\nsemantically optional (eg `charset`)\n\nYou could return the preferred (read: highest) version.  However, this\ndoes not work because it will cause clients to break every time an\naddition version is created.  If, as a client developer exploring the\napi, i get a usable response using `application/myformat+xml` i am\nquite likely to just use that in my code.  However, my parsing of the\nrepresentations will be based on the schema of the preferred version\nat that time.\n\nYou could return the most compatible (read: lowest) version.  But that\nmeans that you are encouraging users to use the least preferred\nversion of the api.  As an exploring developer i happen to leave off\nthe version what i see is the initial flawed attempts at the api.\n\nEmbedding the major version directly in the subtype\n(eg `application/myformat.v2+xml`) makes it absolutely clear that\nthe major version is required.  A parameter is a good place to put a\nminor version, though, if you need such a thing.  If there are\nmultiple server implementations for example, some clients might need a\nway of saying i need version 2.1 where as other might be fine with any\nv2 implementation.  In this situation i think\n`application/myformat.v2+xml;level=42` works rather well.  The lack of\na level parameter in the accept header field implies that any level\nwill do, where as specifying a level means that the specified level,\nor greater, is required.\n\n\nBTW, i have written a series of posts\n(&lt;http://barelyenough.org/blog/tag/rest-versioning/) on this subject which\nyou might find interesting.\n\n--\nPeter Williams\nhttp://barelyenough.org\n\n"}}