{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189012361,"authorName":"Laurian Gridinoc","from":"Laurian Gridinoc &lt;laurian@...&gt;","profile":"lauriangridinoc","replyTo":"SENDER","senderId":"WiUw1LXNcoeP-LrK5vWgloSmc9oY3zLwtnFwq5TYU4kctI-DzXJEAQaPyhLXgd-AIeRw9jOg40DCssn90FUP7P6ERxfRaUnnvEXg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: REX (WAS: [rest-discuss] Dreams...)","postDate":"1130881606","msgId":5377,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk3ODJlMzM1MDUxMTAxMTM0NnYyZmVmNzc1N200N2E5MWViZTcwMmU0ZjczQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGZiMTVhYzIxMDUxMTAxMTIyMXU0YzBjYTA1OXVhZjczODZjZDhhOTViNDk1QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDYwYzIyOTMwNTEwMTQwNTQycDczYThjNzU2bTNiYWQ0OGY0NDE3ZjRlNDVAbWFpbC5nbWFpbC5jb20+CSA8NjBjMjI5MzA1MTAzMTE4MjR3N2U5MWU2ZDJxZmJjN2UxNGQ5OGQ4MzgxYkBtYWlsLmdtYWlsLmNvbT4JIDw5NzgyZTMzNTA1MTEwMTAyNTF2NDRmZDQxZDFoNmFiMTFkMTg4NjU1NWNiQG1haWwuZ21haWwuY29tPgkgPDYwYzIyOTMwNTExMDEwNjEyczk2YzMwMDNuOGMwOTExZmJkNmZkMDcyYUBtYWlsLmdtYWlsLmNvbT4JIDw2MGMyMjkzMDUxMTAxMDYxMnY0MDEwY2QwYWo3Y2YxZTljZjY5Y2M2Nzc3QG1haWwuZ21haWwuY29tPgkgPDk3ODJlMzM1MDUxMTAxMDcyOWxmODY5Y2Q3cmY2ZTRmMTM1Yjg1NzAzODBAbWFpbC5nbWFpbC5jb20+CSA8OTc4MmUzMzUwNTExMDEwNzM3aDU4ZjIxYTQzc2I2YmVjYWNhMzU4NmE3ZTFAbWFpbC5nbWFpbC5jb20+CSA8ZmIxNWFjMjEwNTExMDEwNzQ3bjNjMDM1MTE4ajFlYzQyNmZjMWI2Mjg2MzdAbWFpbC5nbWFpbC5jb20+CSA8NjBjMjI5MzA1MTEwMTA4NTNrNmVmNWVjZHdlYTI3ODI3ZWI0OTJkYTRjQG1haWwuZ21haWwuY29tPgkgPGZiMTVhYzIxMDUxMTAxMTIyMXU0YzBjYTA1OXVhZjczODZjZDhhOTViNDk1QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":5376,"nextInTopic":5378,"prevInTime":5376,"nextInTime":5378,"topicId":5290,"numMessagesInTopic":30,"msgSnippet":"Hello, ... Correct, but that little would be safe (GET) vs non-safe (POST which tunnels DELETE and PUT); which is a little better than regular web services","rawEmail":"Return-Path: &lt;laurian@...&gt;\r\nX-Sender: laurian@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 6137 invoked from network); 1 Nov 2005 21:46:46 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m26.grp.scd.yahoo.com with QMQP; 1 Nov 2005 21:46:46 -0000\r\nReceived: from unknown (HELO xproxy.gmail.com) (66.249.82.197)\n  by mta6.grp.scd.yahoo.com with SMTP; 1 Nov 2005 21:46:46 -0000\r\nReceived: by xproxy.gmail.com with SMTP id h28so1616277wxd\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 01 Nov 2005 13:46:46 -0800 (PST)\r\nReceived: by 10.11.120.41 with SMTP id s41mr12841cwc;\n        Tue, 01 Nov 2005 13:46:46 -0800 (PST)\r\nReceived: by 10.11.98.4 with HTTP; Tue, 1 Nov 2005 13:46:46 -0800 (PST)\r\nMessage-ID: &lt;9782e3350511011346v2fef7757m47a91ebe702e4f73@...&gt;\r\nDate: Tue, 1 Nov 2005 23:46:46 +0200\r\nTo: Dimitri Glazkov &lt;dimitri.glazkov@...&gt;\r\nCc: toydi &lt;iamstupidiot@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;fb15ac210511011221u4c0ca059uaf7386cd8a95b495@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;60c22930510140542p73a8c756m3bad48f4417f4e45@...&gt;\n\t &lt;60c22930510311824w7e91e6d2qfbc7e14d98d8381b@...&gt;\n\t &lt;9782e3350511010251v44fd41d1h6ab11d1886555cb@...&gt;\n\t &lt;60c22930511010612s96c3003n8c0911fbd6fd072a@...&gt;\n\t &lt;60c22930511010612v4010cd0aj7cf1e9cf69cc6777@...&gt;\n\t &lt;9782e3350511010729lf869cd7rf6e4f135b8570380@...&gt;\n\t &lt;9782e3350511010737h58f21a43sb6becaca3586a7e1@...&gt;\n\t &lt;fb15ac210511010747n3c035118j1ec426fc1b628637@...&gt;\n\t &lt;60c22930511010853k6ef5ecdwea27827eb492da4c@...&gt;\n\t &lt;fb15ac210511011221u4c0ca059uaf7386cd8a95b495@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Laurian Gridinoc &lt;laurian@...&gt;\r\nSubject: Re: REX (WAS: [rest-discuss] Dreams...)\r\nX-Yahoo-Group-Post: member; u=189012361; y=x9Dr7eyiqGQeaild1Yf3Ot3M56ylXRCYOnY8XQE0GtJtsffLVV8bdRBU\r\nX-Yahoo-Profile: lauriangridinoc\r\n\r\nHello,\n\nOn 11/1/05, Dimitri Glazkov &lt;dimitri.glazkov@...&gt; wrote:\n&gt; &gt; =\r\nThe current HTML4 FORM element allows us to send out only GET or POST\n&gt; &gt; r=\r\nequest. As a result, we try to use POST for resource manipulation\n&gt; &gt; purpo=\r\nses (e.g creation, update, deletion), as the GET should be always\n&gt; &gt; *safe=\r\n*.\n&gt;\n&gt; I understand the challenge. It&#39;s the approach that I don&#39;t like :)\n&gt;=\r\n\n&gt; &gt; However, our severs need to know whether an incoming POST is\n&gt; &gt; reque=\r\nsting for create, update or deletion? How to let servers know the\n&gt; &gt; reque=\r\nst purpose? That&#39;s what we are discussing..\n&gt;\n&gt; That&#39;s what I am discussing=\r\n, too. IMHO, once you have tunnelled delete\n&gt; and update through POST, you =\r\nhave effectively left the realm of REST.\n&gt; Your POST verb no longer means &quot;=\r\ncreate&quot;, and very little separates it\n&gt; from the XML-RPC crowd.\n\nCorrect, b=\r\nut that &#39;little&#39; would be safe (GET) vs non-safe (POST which\ntunnels DELETE=\r\n and PUT); which is a little better than regular web\nservices approach.\n\n&gt; =\r\nWhat I am suggesting is instead focusing on server architectures that\n&gt; onl=\r\ny have &quot;retrieve&quot; and &quot;create&quot; operations. I believe such\n&gt; architectures a=\r\nre not only possible, but can also fit naturally into\n&gt; the current Web.\n&gt;\n=\r\n&gt; &gt; When we have a RESful web service, supporting various powerful\n&gt; &gt; brow=\r\nsers and RESTful clients, and we still need to take care of some\n&gt; &gt; old br=\r\nowsers which support only GET & POST, rather than re-implement\n&gt; &gt; the whol=\r\ne web service, we are finding ways to allow old browsers to\n&gt; &gt; use our ser=\r\nvice without violating the Web nature.\n&gt;\n&gt; I understand what you&#39;re saying =\r\nand agree with the notion. To nitpick\n&gt; just a little bit, since the &quot;old b=\r\nrowser&quot; is the most commonly used\n&gt; and most accessible client over HTTP, d=\r\nefining it as &quot;providing\n&gt; backward compatibility&quot; seems like a fallacy. Ma=\r\nybe a better way to\n&gt; say it is &quot;defining REST architectures that are valid=\r\n for HTML user\n&gt; agents&quot;?\n&gt;\n&gt; &gt; Somehow, we may see some resources as &quot;proc=\r\nessing resource&quot; [1] to\n&gt; &gt; help us to process requests in POST, it&#39;s not t=\r\nrying to do tunnelling,\n&gt; &gt; but just to receive data needed to be processed=\r\n.\n&gt;\n&gt; That sounds like tunnelling to me. You are wrapping &quot;delete&quot; or\n&gt; &quot;up=\r\ndate&quot; operation in a POST request. The processing resource model is\n&gt; valid=\r\n, it&#39;s just the use of it is not.\n\nIn some applications, the backward compa=\r\ntibility may be important; the\nissues is how to provide an optional backwar=\r\nd compatibility without\nbreaking the design of the application.\n\nAnd tunnel=\r\ning DELETE and PUT through POST without altering the normal\ntarget URI -- a=\r\ns in the filter approach -- seems less intrusive in the\napplication logic t=\r\nhan tunneling verbs through nouns -- ie. providing\nseparate URIs for PUT an=\r\nd DELETE where a POST will have PUT or DELETE\nmeaning -- like in the POST t=\r\no EditAnnounceForm in the example in\ndiscussion.\n\nI would setup in an appli=\r\ncation such a backward compatibility mode at\nleast for debug purposes.\n\nAny=\r\nway tunneled PUT and DELETE requests through POST will be harder to\ncontrol=\r\n by a http aware firewall/proxy, in the filter approach where\nthe target UR=\r\nI is the intended one, than in tunneling verbs through\nnouns, where you may=\r\n filter URIs that represents PUT or DELETE entry\npoints.\n\nCheers,\n--\nLauria=\r\nn Gridinoc, www.grapefruit.ro\n\n"}}