{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":111788143,"authorName":"Miles Sabin","from":"Miles Sabin &lt;miles@...&gt;","profile":"milessabin","replyTo":"SENDER","senderId":"81H1Ck7-0NDJ9V4g1ZGatSIBSoLSR4IZsPYmpMMcutRoUzeM9fWnCy7KfqgsG-mdownOFq52Vzz5GXIg0gkOAb8TXddlYQwYUg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] &quot;Application Protocols&quot; -- an analogy","postDate":"1025999566","msgId":1711,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwNzA3MDA1Mi40NjQ4MS5taWxlc0BtaWxlc3NhYmluLmNvbT4=","inReplyToHeader":"PDA1MDM1NjFEMzRDNjMwNDVCMDdGMDRFNUIzQjJCRkRDNUYzNEBGUkVELnBsYW5ldGZyZWQuaW50ZXJuYWw+","referencesHeader":"PDA1MDM1NjFEMzRDNjMwNDVCMDdGMDRFNUIzQjJCRkRDNUYzNEBGUkVELnBsYW5ldGZyZWQuaW50ZXJuYWw+"},"prevInTopic":1710,"nextInTopic":1737,"prevInTime":1710,"nextInTime":1712,"topicId":1698,"numMessagesInTopic":10,"msgSnippet":"Mark Baker wrote, ... Hmm ... I disagree. The passage that Paul quoted certainly represents the desire of the WG to make HTTP transport independent, but the ","rawEmail":"Return-Path: &lt;miles@...&gt;\r\nX-Sender: miles@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 6 Jul 2002 23:52:48 -0000\r\nReceived: (qmail 97788 invoked from network); 6 Jul 2002 23:52:48 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 6 Jul 2002 23:52:48 -0000\r\nReceived: from unknown (HELO putnam.milessabin.com) (195.184.234.163)\n  by mta2.grp.scd.yahoo.com with SMTP; 6 Jul 2002 23:52:47 -0000\r\nReceived: from ns.milessabin.com ([195.184.234.174] helo=meinong.milessabin.com)\n\tby putnam.milessabin.com with esmtp (Exim 3.36 #1)\n\tid 17QzM6-0000Ig-00\n\tfor rest-discuss@yahoogroups.com; Sun, 07 Jul 2002 00:52:46 +0100\r\nReceived: from localhost (localhost [[UNIX: localhost]])\n\tby meinong.milessabin.com (8.11.6/8.11.6) id g66Nqkp27459\n\tfor rest-discuss@yahoogroups.com; Sun, 7 Jul 2002 00:52:46 +0100\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] &quot;Application Protocols&quot; -- an analogy\r\nDate: Sun, 7 Jul 2002 00:52:46 +0100\r\nX-Mailer: KMail [version 1.4]\r\nReferences: &lt;0503561D34C63045B07F04E5B3B2BFDC5F34@...&gt;\r\nIn-Reply-To: &lt;0503561D34C63045B07F04E5B3B2BFDC5F34@...&gt;\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: 8bit\r\nMessage-Id: &lt;200207070052.46481.miles@...&gt;\r\nFrom: Miles Sabin &lt;miles@...&gt;\r\nX-Yahoo-Group-Post: member; u=111788143\r\nX-Yahoo-Profile: milessabin\r\n\r\nMark Baker wrote,\n&gt; Thanks for that text from 2616 - it makes my point about HTTP/TCP,\n&gt; and saves a response to Miles. 8-). In HTTP &quot;0.9&quot; and 1.0, there was\n&gt; actually some poor layering, because a request was said to end if the\n&gt; connection went down (I.e. TCP FIN was effectively given HTTP\n&gt; semantics).\n\nHmm ... I disagree. The passage that Paul quoted certainly represents \nthe desire of the WG to make HTTP transport independent, but the \nreality is different. The Host: header ties the HTTP to TCP, and it&#39;s \nsemantics couldn&#39;t easily be magic&#39;d away by editorial passes between \n1.0 and 1.1.\n\nRather than wrestling with ASCII art UML diagrams, here&#39;s a Java \nfragement which illustrates the problem,\n\n  public interface HttpRequest \n  {\n    public HostPortPair getHost();\n    public void setHost(HostPortPair host);\n  }\n\n  public final class TcpHttpRequest\n  {\n    public HostPortPair getHost()\n    {\n      // no problem\n    }\n\n    public void setHost(HostPortPair host)\n    {\n      // no problem\n    }\n  }\n\n  public final class NonTcpHttpRequest\n  {\n    public HostPortPair getHost()\n    {\n      // oops ... how do we implement this?\n    }\n\n    public void setHost(HostPortPair host)\n    {\n      // oops ... how do we implement this?\n    }\n  }\n  \nThe problem is probably fixable ... the Host: header might be definable \nin a transport independant way without creating other problems. But it \nwasn&#39;t in RFC 2616. Maybe HTTP/1.2 ;-)\n\nIIRC there are a few threads on this in the HTTP WG mailing list \narchive, but I don&#39;t have any references handy just now.\n\nCheers,\n\n\nMiles\n\n"}}