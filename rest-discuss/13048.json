{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343278744,"authorName":"Subbu Allamaraju","from":"Subbu Allamaraju &lt;subbu@...&gt;","profile":"sallamar","replyTo":"SENDER","senderId":"dWUhxuWL1LfFAONkRP7azQ4g-6W5lO05NhtuF3T5iq60inE_g08JRjsNcIyfbpdm5C79-Sz2Ig90H3wdZKKzivwzzimdRuMncg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking non-hypertext","postDate":"1246398753","msgId":13048,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJDQzA2RkE1LTkxMjItNEQ4Mi1BNEQ0LTZGRDI3MDUwMzQwREBzdWJidS5vcmc+","inReplyToHeader":"PDIxNjA2ZGNmMDkwNjMwMTMwOWwyNjI5ZThiMXdkNDg3NTU5MTdhMGVlYjAxQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4gPDRBNDNGMzA5LjEwMTA0MDJAZGVob3JhLm5ldD4gPDRBNDQwNEY4LjMwMDAwMDhAcmVkaGF0LmNvbT4gPDRBNDQxNkQyLjUwODAzMDRAZGVob3JhLm5ldD4gPDI4NTA1MDY4LTE5M0EtNDIxNC1CNUY1LTE4RjNFOTdBOTZDNEBzdWJidS5vcmc+IDwyMTYwNmRjZjA5MDYzMDAzNDRnNGI5ZjdmYzNrYzUxNDYyNDc4NmVjMmNmZEBtYWlsLmdtYWlsLmNvbT4gPDBEQ0NBMEQwLUY0NUYtNEQ1Ni1BMjY2LTNCNTVCMzg0NTM3M0BzdWJidS5vcmc+IDw4MTU4YWQ3NTA5MDYzMDExMzJyNDU5MTA4ODR2NTIxNmRlYWY0NzVhM2FlOEBtYWlsLmdtYWlsLmNvbT4gPEYxOTEzOUQ0LUQ4RjAtNEMwRS04NDlDLThDQjZFRkQ1MjUwMEBzdWJidS5vcmc+IDwzMzg1NTVBMy04NjlCLTQyQkItOTQxNy0wRUFCQjU3RDhBOTZAc3ViYnUub3JnPiA8MjE2MDZkY2YwOTA2MzAxMzA5bDI2MjllOGIxd2Q0ODc1NTkxN2EwZWViMDFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13047,"nextInTopic":13049,"prevInTime":13047,"nextInTime":13049,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"Could you explain why this is a large deviation from HTTP ? Perhaps some reference to an RFC or spec would help. I am also not sure what you mean by HTTP was","rawEmail":"Return-Path: &lt;subbu@...&gt;\r\nX-Sender: subbu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96697 invoked from network); 30 Jun 2009 21:53:11 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m1.grp.re1.yahoo.com with QMQP; 30 Jun 2009 21:53:11 -0000\r\nX-Received: from unknown (HELO mail-px0-f171.google.com) (209.85.216.171)\n  by mta2.grp.re1.yahoo.com with SMTP; 30 Jun 2009 21:53:10 -0000\r\nX-Received: by pxi1 with SMTP id 1so376874pxi.5\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 14:52:10 -0700 (PDT)\r\nX-Received: by 10.115.54.7 with SMTP id g7mr13814320wak.147.1246398730132;\n        Tue, 30 Jun 2009 14:52:10 -0700 (PDT)\r\nReturn-Path: &lt;subbu@...&gt;\r\nX-Received: from wlanvpn-mc2e-246-194.corp.yahoo.com (fa0-1-wlan-rtr.corp.yahoo.com [216.145.49.5])\n        by mx.google.com with ESMTPS id m28sm913264waf.2.2009.06.30.14.52.08\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Tue, 30 Jun 2009 14:52:09 -0700 (PDT)\r\nCc: Peter Keane &lt;pkeane@...&gt;,\n Bill de hOra &lt;bill@...&gt;,\n REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;,\n Mark Nottingham &lt;mnot@...&gt;\r\nMessage-Id: &lt;2CC06FA5-9122-4D82-A4D4-6FD27050340D@...&gt;\r\nTo: Sam Johnston &lt;samj@...&gt;\r\nIn-Reply-To: &lt;21606dcf0906301309l2629e8b1wd48755917a0eeb01@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v935.3)\r\nDate: Tue, 30 Jun 2009 14:52:33 -0700\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt; &lt;4A43F309.1010402@...&gt; &lt;4A4404F8.3000008@...&gt; &lt;4A4416D2.5080304@...&gt; &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt; &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt; &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt; &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt; &lt;F19139D4-D8F0-4C0E-849C-8CB6EFD52500@...&gt; &lt;338555A3-869B-42BB-9417-0EABB57D8A96@...&gt; &lt;21606dcf0906301309l2629e8b1wd48755917a0eeb01@...&gt;\r\nX-Mailer: Apple Mail (2.935.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Subbu Allamaraju &lt;subbu@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking non-hypertext\r\nX-Yahoo-Group-Post: member; u=343278744; y=orhQMGFwqG9IcoOAlQVh6NUCsisaCdP9txxbM0IU3ibS_QM\r\nX-Yahoo-Profile: sallamar\r\n\r\nCould you explain why this is a &quot;large deviation from HTTP&quot;? Perhaps  \nsome reference to an RFC or spec would help.\n\nI am also not sure what you mean by &quot;HTTP was designed to create a web  \nof opaque resources&quot;. Opaque to the protocol operations, or the  \nclient, or the server?\n\nEven in HTML, clients don&#39;t specify links. They just follow them.\n\n&gt; Consider some of the things I need to be able to do:\n&gt;\n&gt;   - Mount a storage resource on a compute resource\n&gt;   - Connect a compute resource to a network (or a network to a network\n&gt;   etc.)\n&gt;   - Associate arbitrary resources which may be hosted elsewhere (for\n&gt;   example, PDF build documentation for a server)\n&gt;\n&gt; Why would I want to create what is essentially an RPC-style  \n&gt; interface (e.g.\n&gt; &quot;mount&quot;, &quot;attach&quot;, &quot;associate&quot;, etc.) for this functionality?  \n&gt; Granted if\n&gt; that&#39;s what I wanted to do then the method you propose below is clean\n&gt; (except that the ID should perhaps be the URL) but is there not  \n&gt; another way?\n&gt;\n\n\nAs far as this use case is concerned, with the approach you are  \nsuggesting, the client will end up implementing a lot of code that  \nreally belongs to the server. For instance, it will have to know what  \nit means to mount a storage resource. I am not expert in the  \nparticular domain of allocating computing/storage devices, but my  \nhunch is that the interface you are describing is not abstract enough  \nfor clients.\n\nHTTP is not SQL. It is not a data manipulation API. Whether you call  \n&quot;attach&quot;, &quot;mount&quot; etc RPC or resources, such functionality belongs to  \nthe server.\n\nIn the book we&#39;re currently writing (http://www.restful-webservices-cookbook.org/ \n), we explicitly encourage using what we call as &quot;sidekick&quot; and  \n&quot;controller&quot; resources to provide a meaningful abstraction to clients.  \nIn the absence of such notions, servers will end up providing leaky  \nabstractions to clients, which is certainly not the intent of REST.\n\nSubbu\n\nOn Jun 30, 2009, at 1:09 PM, Sam Johnston wrote:\n\n&gt; Subbu,\n&gt;\n&gt; This is a fairly large deviation from HTTP as the &quot;universal  \n&gt; interface&quot; and\n&gt; the details would need to be specified for each implementation. HTTP  \n&gt; was\n&gt; designed to create a web of opaque resources, only the linking  \n&gt; requirement\n&gt; was (until now) well satisfied by another standard developed by  \n&gt; another SSO\n&gt; (that is, HTML). The clients specify the links today so it makes  \n&gt; sense that\n&gt; they continue to be able to create the links tomorrow, does it not?  \n&gt; If the\n&gt; server doesn&#39;t like the proposed link it doesn&#39;t have to accept it,  \n&gt; and it\n&gt; can always specify links of its own (which is the way it works with\n&gt; hypertext today - consider &quot;manual&quot; links in blog comments vs  \n&gt; &quot;automatic&quot;\n&gt; links to stylesheets, feeds, etc.)\n&gt;\n&gt; Consider some of the things I need to be able to do:\n&gt;\n&gt;   - Mount a storage resource on a compute resource\n&gt;   - Connect a compute resource to a network (or a network to a network\n&gt;   etc.)\n&gt;   - Associate arbitrary resources which may be hosted elsewhere (for\n&gt;   example, PDF build documentation for a server)\n&gt;\n&gt; Why would I want to create what is essentially an RPC-style  \n&gt; interface (e.g.\n&gt; &quot;mount&quot;, &quot;attach&quot;, &quot;associate&quot;, etc.) for this functionality?  \n&gt; Granted if\n&gt; that&#39;s what I wanted to do then the method you propose below is clean\n&gt; (except that the ID should perhaps be the URL) but is there not  \n&gt; another way?\n&gt;\n&gt; Sam\n&gt;\n&gt; On Tue, Jun 30, 2009 at 9:57 PM, Subbu Allamaraju &lt;subbu@...&gt;  \n&gt; wrote:\n&gt;\n&gt;&gt; Please read the POST as\n&gt;&gt;\n&gt;&gt; POST /subbu/cart\n&gt;&gt;&gt; Content-Type: application/x-www-form-urlencoded\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; id=1234\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; Subbu\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Jun 30, 2009, at 12:41 PM, Subbu Allamaraju wrote:\n&gt;&gt;\n&gt;&gt; Hi Peter,\n&gt;&gt;&gt;\n&gt;&gt;&gt; 1.  post the product to the cart &quot;collection&quot;\n&gt;&gt;&gt;&gt; 2.  add a link to a product pointing to the cart\n&gt;&gt;&gt;&gt; 3.  add a link to a cart resource pointing to the product\n&gt;&gt;&gt;&gt; 4.  create a new resource (presumably by POSTing to a known  \n&gt;&gt;&gt;&gt; endpoint)\n&gt;&gt;&gt;&gt; that\n&gt;&gt;&gt;&gt; is essentially a &quot;cart-product instance&quot; that has a link to each\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; This still leaks many server-side details to the client. Here is an\n&gt;&gt;&gt; alternative.\n&gt;&gt;&gt;\n&gt;&gt;&gt; 1. The server has a cart resource, and product resources.\n&gt;&gt;&gt;\n&gt;&gt;&gt; 2. Each product resource found in a search will have a link\n&gt;&gt;&gt;\n&gt;&gt;&gt; &lt;link rel=&quot;http://shop.org/rels/buy&quot; href=&quot;http://shop.org/subbu/cart \n&gt;&gt;&gt; &quot;/&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; The definition of rel says that the client should use POST to add  \n&gt;&gt;&gt; the\n&gt;&gt;&gt; product to the cart.\n&gt;&gt;&gt;\n&gt;&gt;&gt; 3. Client adds the product to the cart\n&gt;&gt;&gt;\n&gt;&gt;&gt; POST /subbu/cart\n&gt;&gt;&gt; Content-Type: application/xml\n&gt;&gt;&gt;\n&gt;&gt;&gt; id=1234\n&gt;&gt;&gt;\n&gt;&gt;&gt; 4. Server redirects back to the updated cart\n&gt;&gt;&gt;\n&gt;&gt;&gt; 303 See Other\n&gt;&gt;&gt; Location: http://shop.org/subbu/cart\n&gt;&gt;&gt;\n&gt;&gt;&gt; This is just generalized version of a web based shopping cart, and\n&gt;&gt;&gt; provides a simplified interface to the client. As I said before,  \n&gt;&gt;&gt; expecting\n&gt;&gt;&gt; the client to manage links is akin to clients posting SQL  \n&gt;&gt;&gt; statements to\n&gt;&gt;&gt; servers.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Subbu\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Tue, Jun 30, 2009 at 11:59 AM, Subbu Allamaraju &lt;subbu@...&gt;\n&gt;&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Sam,\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; I don&#39;t disagree that there are use cases, but I am not sure if\n&gt;&gt;&gt;&gt;&gt; letting clients manage relations is the right way to implement\n&gt;&gt;&gt;&gt;&gt; distributed systems. The approach you describe below is similar  \n&gt;&gt;&gt;&gt;&gt; to a\n&gt;&gt;&gt;&gt;&gt; client trying to setup foreign key relations between different\n&gt;&gt;&gt;&gt;&gt; database entities. This model leaks abstractions and is not  \n&gt;&gt;&gt;&gt;&gt; ideal for\n&gt;&gt;&gt;&gt;&gt; writing large systems.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; For instance, take a simple shopping cart application. The  \n&gt;&gt;&gt;&gt;&gt; server may\n&gt;&gt;&gt;&gt;&gt; have decided to use links to associate products to a cart, but  \n&gt;&gt;&gt;&gt;&gt; that\n&gt;&gt;&gt;&gt;&gt; does not mean that, clients should be able to create/edit/delete  \n&gt;&gt;&gt;&gt;&gt; those\n&gt;&gt;&gt;&gt;&gt; links. Instead, links come into being when the client &quot;adds  \n&gt;&gt;&gt;&gt;&gt; products\n&gt;&gt;&gt;&gt;&gt; to a cart&quot; and they go away when the client &quot;removes a product  \n&gt;&gt;&gt;&gt;&gt; from\n&gt;&gt;&gt;&gt;&gt; the cart&quot;. That is the right level of abstraction for the client.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; IMO, links are for servers to provide navigability between  \n&gt;&gt;&gt;&gt;&gt; resources,\n&gt;&gt;&gt;&gt;&gt; and to let clients make state transitions via links.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Subbu\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; On Jun 30, 2009, at 3:44 AM, Sam Johnston wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Hi Subbu,\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; On Tue, Jun 30, 2009 at 5:45 AM, Subbu Allamaraju  \n&gt;&gt;&gt;&gt;&gt;&gt; &lt;subbu@...\n&gt;&gt;&gt;&gt;&gt;&gt; &lt;subbu%40subbu.org&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; LINK is similar - how a LINK relationship is created/managed/\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; destroyed is\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; undefined.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Why isn&#39;t that up to the server(s) managing the resources?  \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Links are\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; for servers to describe relations between resources, and not for\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; clients to manage such relationships.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Why so? This use case requires that clients be able to manage  \n&gt;&gt;&gt;&gt;&gt;&gt; links:\n&gt;&gt;&gt;&gt;&gt;&gt; virtual\n&gt;&gt;&gt;&gt;&gt;&gt; infrastructure is modeled as compute, storage and network  \n&gt;&gt;&gt;&gt;&gt;&gt; resources\n&gt;&gt;&gt;&gt;&gt;&gt; and\n&gt;&gt;&gt;&gt;&gt;&gt; clients create, delete and link them as they see fit. The  \n&gt;&gt;&gt;&gt;&gt;&gt; server can\n&gt;&gt;&gt;&gt;&gt;&gt; too\n&gt;&gt;&gt;&gt;&gt;&gt; (for example, implicitly creating a storage resource and  \n&gt;&gt;&gt;&gt;&gt;&gt; linking it\n&gt;&gt;&gt;&gt;&gt;&gt; when you\n&gt;&gt;&gt;&gt;&gt;&gt; create a compute resource) but the point of OCCI\n&gt;&gt;&gt;&gt;&gt;&gt; &lt;http://www.occi-wg.org/&gt;is to allow for client manipulation.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; We&#39;re not the only ones who see a need either... the original\n&gt;&gt;&gt;&gt;&gt;&gt; authors of the\n&gt;&gt;&gt;&gt;&gt;&gt; HTTP spec (RFC 2068) including LINK and\n&gt;&gt;&gt;&gt;&gt;&gt; UNLINK&lt;http://tools.ietf.org/html/ \n&gt;&gt;&gt;&gt;&gt;&gt; rfc2068#section-19.6.1.2&gt;verbs for\n&gt;&gt;&gt;&gt;&gt;&gt; this around the same as this\n&gt;&gt;&gt;&gt;&gt;&gt; I-D &lt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; http://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http-links-00.txt\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; specifying\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; same in more detail. This is what Mark Nottingham (author of the\n&gt;&gt;&gt;&gt;&gt;&gt; Link: header I-D among other things, copied) had to say this  \n&gt;&gt;&gt;&gt;&gt;&gt; morning\n&gt;&gt;&gt;&gt;&gt;&gt; on\n&gt;&gt;&gt;&gt;&gt;&gt; apps-discuss:\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; *- First and foremost, in the absence of the LINK and UNLINK  \n&gt;&gt;&gt;&gt;&gt;&gt; verbs\n&gt;&gt;&gt;&gt;&gt;&gt; originally defined in RFC 2068[2] but specifically omitted from  \n&gt;&gt;&gt;&gt;&gt;&gt; RFC\n&gt;&gt;&gt;&gt;&gt;&gt; 2616[3],\n&gt;&gt;&gt;&gt;&gt;&gt; what is the preferred mechanism for manipulating these links via\n&gt;&gt;&gt;&gt;&gt;&gt; HTTP? It\n&gt;&gt;&gt;&gt;&gt;&gt; appears that this header is intended for GET requests only, but\n&gt;&gt;&gt;&gt;&gt;&gt; presumably\n&gt;&gt;&gt;&gt;&gt;&gt; specifying it in POST and PUT requests would be one option that\n&gt;&gt;&gt;&gt;&gt;&gt; avoids the\n&gt;&gt;&gt;&gt;&gt;&gt; creation of [not so] &quot;new&quot; verbs (bearing in mind that short of\n&gt;&gt;&gt;&gt;&gt;&gt; accepting\n&gt;&gt;&gt;&gt;&gt;&gt; Link: headers from empty POST/PUT requests, it would be  \n&gt;&gt;&gt;&gt;&gt;&gt; necessary to\n&gt;&gt;&gt;&gt;&gt;&gt; GET and\n&gt;&gt;&gt;&gt;&gt;&gt; then PUT the entire payload to update links - twice if they were\n&gt;&gt;&gt;&gt;&gt;&gt; reciprocal). While there was an attempt a dozen years ago to  \n&gt;&gt;&gt;&gt;&gt;&gt; better\n&gt;&gt;&gt;&gt;&gt;&gt; define\n&gt;&gt;&gt;&gt;&gt;&gt; the relevant HTTP verbs[4], it strikes me as more sensible to  \n&gt;&gt;&gt;&gt;&gt;&gt; follow\n&gt;&gt;&gt;&gt;&gt;&gt; the\n&gt;&gt;&gt;&gt;&gt;&gt; example of the Set-Cookie: header for this rather than WebDAV&#39;s\n&gt;&gt;&gt;&gt;&gt;&gt; example of\n&gt;&gt;&gt;&gt;&gt;&gt; creating new verbs (even if we&#39;ve seen them before) but you  \n&gt;&gt;&gt;&gt;&gt;&gt; guys are\n&gt;&gt;&gt;&gt;&gt;&gt; the\n&gt;&gt;&gt;&gt;&gt;&gt; experts.*\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Undefined, but I imagine in a PUT/POST body does indeed make the\n&gt;&gt;&gt;&gt;&gt;&gt; most sense.\n&gt;&gt;&gt;&gt;&gt;&gt; Using the Link header in a request doesn&#39;t have well-defined\n&gt;&gt;&gt;&gt;&gt;&gt; semantics.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; I wonder then whether it&#39;s not sensible to define these  \n&gt;&gt;&gt;&gt;&gt;&gt; semantics in\n&gt;&gt;&gt;&gt;&gt;&gt; an[other] Internet Draft (ala Set-Cookie) rather than having  \n&gt;&gt;&gt;&gt;&gt;&gt; everyone\n&gt;&gt;&gt;&gt;&gt;&gt; running off and inventing their own in-band solutions... doing so\n&gt;&gt;&gt;&gt;&gt;&gt; would make\n&gt;&gt;&gt;&gt;&gt;&gt; for some really clever RESTful interfaces.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Sam\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n\n\n"}}