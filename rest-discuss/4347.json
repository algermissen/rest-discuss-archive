{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":120885465,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"j7vA2Szm2gtK4cE_aQ9__-a81TZdLsVk1T9dHxntSnNtoKvMLwBRzfbsup2wkiw8_gdUW_jnyPaIN7U3PToWTyN-wOtN","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] representational completeness","postDate":"1084989483","msgId":4347,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyRjZDRkM2LUE5QkUtMTFEOC1BQkUyLTAwMEE5NUNGRTlERUBkZWVwZmlsZS5jb20+","inReplyToHeader":"PEJBWTE2LURBVjU4MWFXQ2RNZncwMDAwZmI0NEBob3RtYWlsLmNvbT4=","referencesHeader":"PDIwMDQwNTE4MjA0ODIyLkNGQjk2MTgzMjBAemFjaHMucGxhY2Uub3JnPiA8QkFZMTYtREFWMTJVZm56U0s1aTAwMDBmYTU4QGhvdG1haWwuY29tPiA8ODA3MUY1MzgtQTlBQy0xMUQ4LUFCRTItMDAwQTk1Q0ZFOURFQGRlZXBmaWxlLmNvbT4gPEJBWTE2LURBVjU4MWFXQ2RNZncwMDAwZmI0NEBob3RtYWlsLmNvbT4="},"prevInTopic":4346,"nextInTopic":4348,"prevInTime":4346,"nextInTime":4348,"topicId":4337,"numMessagesInTopic":24,"msgSnippet":"Mike, hope you don t mind me redirecting this to the list... ... I think it s less of a question of required than prudent. To try to clarify:  let s say","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 94797 invoked from network); 19 May 2004 17:59:45 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m2.grp.scd.yahoo.com with QMQP; 19 May 2004 17:59:45 -0000\r\nReceived: from unknown (HELO blanco.deepfile.com) (24.242.137.237)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 May 2004 17:59:44 -0000\r\nReceived: from [192.168.123.128] ([192.168.123.128])\n\t(authenticated bits=0)\n\tby blanco.deepfile.com (8.12.8/8.12.8) with ESMTP id i4JHpmFc003361;\n\tWed, 19 May 2004 12:51:48 -0500\r\nIn-Reply-To: &lt;BAY16-DAV581aWCdMfw0000fb44@...&gt;\r\nReferences: &lt;20040518204822.CFB9618320@...&gt; &lt;BAY16-DAV12UfnzSK5i0000fa58@...&gt; &lt;8071F538-A9AC-11D8-ABE2-000A95CFE9DE@...&gt; &lt;BAY16-DAV581aWCdMfw0000fb44@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v612)\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;12F6CFC6-A9BE-11D8-ABE2-000A95CFE9DE@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Wed, 19 May 2004 12:58:03 -0500\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Mailer: Apple Mail (2.612)\r\nX-eGroups-Remote-IP: 24.242.137.237\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nSubject: Re: [rest-discuss] representational completeness\r\nX-Yahoo-Group-Post: member; u=120885465\r\n\r\n\nMike, hope you don&#39;t mind me redirecting this to the list...\n\nOn May 19, 2004, at 11:51 AM, S. Mike Dierken wrote:\n\n&gt; I thought he asked if it was required...\n\nI think it&#39;s less of a question of &quot;required&quot; than &quot;prudent.&quot;\n\nTo try to clarify:  let&#39;s say I&#39;ve got a resource that represents an \nobject with three &quot;properties&quot;:  foo, bar, and baz that hold integers.  \nWhen I do a GET on that resource, it gives me an XML representation \nwith elements foo, bar, and baz, e.g.\n\n&lt;something id=456&gt;\n    &lt;foo&gt;1&lt;/foo&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nWhen I implement the POST handler for that resource, should I allow \npeople to update &quot;somethings&quot; by providing a partial representation?  \nThat is, say I&#39;ve got a something with id=456.  A client gets a \nrepresentation as above by doing\n\nGET /Something/456\n\nThe client then wants to change the value of that something&#39;s foo.  \nShould the implementer of the post handler (and definer of the \nrepresentation format, XML or otherwise --- could just be form \nvariables) allow the client to say:\n\nPOST /Something/456\n\n&lt;something id=456&gt;\n    &lt;foo&gt;5&lt;/foo&gt;\n&lt;/something&gt;\n\nor is it better to require a complete representation:\n\n&lt;something id=456&gt;\n    &lt;foo&gt;5&lt;/foo&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nNote that the requirement is really one imposed by the implementer of \nthe post handler, not something inherent in REST or HTTP --- perhaps \nobviously.  But perhaps less obviously --- and this is my contention \n--- allowing for partial representations on a POST actually *does* \nundermine some of the benefits of REST from a compositional complexity \nand integration perspective.  Namely, the opportunity space for \nimpedance mismatches, errors, and mistakes between the provider of the \nPOST interface and the client go up combinatorically in the number of \npermutations of elements in the representation that are allowable as \npartial representations;  as well, the specification problem is much \nlarger and the code on both ends of the wire is both necessarily more \ncomplex and more fragile.\n\nThe further, perhaps more controversial claim I&#39;m making is that \nallowing partial representations is in fact PRECISELY equivalent to \nallowing arbitrary RPC methods with type-specific signatures.  In fact, \nif we allow partial representations in the above case all we&#39;ve done is \nthe following, forgive the notation, you get my point:  instead of \nhaving e.g. several methods:\n\n\tsetFoo(foo),\n\tsetBar(bar)\n\tsetBaz(baz)\n\tsetFooBar(foo, bar)\n\tsetFooBaz(foo, baz)\n\tsetBarBaz(bar, baz)\n\tsetFooBarBaz(foo, bar, baz)\n\n...we&#39;ve essentially created the same number of methods --- they&#39;re \njust polymorphic, all called POST, and use a hand-crafted dispatcher.\n\n\tPOST(foo),\n\tPOST(bar)\n\tPOST(baz)\n\tPOST(foo, bar)\n\tPOST(foo, baz)\n\tPOST(bar, baz)\n\tPOST(foo, bar, baz)\n\nThings get even uglier even faster when we&#39;ve got repeated elements or \nsubelements.  Assume\n\nGET /Something/456\n\ngives you\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nNow assuming I allow partial representations;  you try to post the \nfollowing:\n\nPOST /Something/456\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n&lt;/something&gt;\n\nWTF does THAT mean?  This feels very API / RPC to me.  One might be \ntempted to say that means &quot;add another &lt;foo/&gt; to &lt;foos/&gt; with a value \nof 37&quot;, so that a subsequent get returns:\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nBut notice:  we&#39;ve now taken something that was entirely explicit in \nthe representation and made it totally obscure, implicit, and dependent \non the implementation of the post handler.  You might equally well \nexpect the above post followed by a get to return either of the \nfollowing:\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nor\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n&lt;/something&gt;\n\nThings get STILL WORSE when there is semantic meaning in the ordering \nof the subelements.  As an example, let&#39;s say:\n\nGET /Something/456\n\ngives you\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nYou now post\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nYou would probably expect the subsequent\n\nGET /Something/456\n\nto give you\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nrather than\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\n--- but, with partial representations, does\n\nGET /Something/456\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nfollowed by\n\nPOST /Something/456\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n&lt;/something&gt;\n\nfollowed by\n\nGET /Something/456\n\ngive you\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nor\n\n&lt;something id=456&gt;\n    &lt;foos&gt;\n       &lt;foo&gt;37&lt;/foo&gt;\n       &lt;foo&gt;12&lt;/foo&gt;\n       &lt;foo&gt;21&lt;/foo&gt;\n       &lt;foo&gt;76&lt;/foo&gt;\n    &lt;/foos&gt;\n    &lt;bar&gt;2&lt;/bar&gt;\n    &lt;baz&gt;3&lt;/baz&gt;\n&lt;/something&gt;\n\nor even something else?\n\nIn order to disambiguate all this, the representation format will have \nto be extended further to allow the poster to specify where in the foo \norder things go.  ICK.  We&#39;re now merrily bobsledding down a slippery \nslope of increasing complexity and ambiguity that directly impact the \ncompositional benefits of REST, easily avoided by avoiding partial \nrepresentations entirely.\n\nIMHO, while it&#39;s a bit outside REST per se, the operative / stylistic \nprinciple should be to insist on representational completeness in all \ncases where practical (and that&#39;s essentially everywhere) for both POST \nand PUT.  Notwithstanding that, delta encodings are useful particularly \nwhen hucking around large chunks of semi- or unstructured information.  \nBut delta encodings are usually treated in a much more opaque fashion \nthan what we&#39;re talking about here, and handled with conneg dispatch.\n\nAside:  back before Mark, Roy and company forced a REST gestalt on me, \nI used to claim that the only necessary method was e.g. POST (or \nINVOKE, whatever.)  Clearly I&#39;ve done a 180 on that;  but now I wonder \nif there&#39;s really a RESTful benefit to having both PUT and POST...\n\njb\n\n\n"}}