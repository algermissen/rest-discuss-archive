{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"Y3XqDCbFp42HXos3rP5fb-FgTsJBlA9rc-IpTN1IiCI3BAoSTe4IckJFrQe7hjIZWh9GtlQw2fW37VDf3yoMdGOixixLVSw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237394307","msgId":12225,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkwMzE4MDkzOHAzOTMxYmMxM2dhNDg1ZTA5Y2QxY2ZkZmEwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGU3OGJkYmMwMDkwMzE4MDgzNGs1MGIxYzJlZW40NjE0YzU0MGZjM2EyYmJiQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE4MDQyMzE1LjRlZmE5YzgyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JIDxlNzhiZGJjMDA5MDMxODA4MzRrNTBiMWMyZWVuNDYxNGM1NDBmYzNhMmJiYkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":12224,"nextInTopic":12227,"prevInTime":12224,"nextInTime":12227,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"Pardon me for barging in on this thread, but I wanted to ask a general question about composite resources, batching, etc. First the assumptions: 1 assume both","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19061 invoked from network); 18 Mar 2009 16:38:29 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.sp2.yahoo.com with QMQP; 18 Mar 2009 16:38:29 -0000\r\nX-Received: from unknown (HELO mail-bw0-f164.google.com) (209.85.218.164)\n  by mta3.grp.re1.yahoo.com with SMTP; 18 Mar 2009 16:38:28 -0000\r\nX-Received: by bwz8 with SMTP id 8so126152bwz.43\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 Mar 2009 09:38:28 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.104.74 with SMTP id n10mr1213962fao.5.1237394307790; Wed, \n\t18 Mar 2009 09:38:27 -0700 (PDT)\r\nIn-Reply-To: &lt;e78bdbc00903180834k50b1c2een4614c540fc3a2bbb@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t &lt;20090318042315.4efa9c82.eric@...&gt;\n\t &lt;e78bdbc00903180834k50b1c2een4614c540fc3a2bbb@...&gt;\r\nDate: Wed, 18 Mar 2009 12:38:27 -0400\r\nX-Google-Sender-Auth: 19d0234da0907bc0\r\nMessage-ID: &lt;b548df650903180938p3931bc13ga485e09cd1cfdfa0@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=69164307; y=mjKfmsfzWw1vfPoKw02nd3p4EZ_xZUqq18WABdIpReOZ\r\nX-Yahoo-Profile: mamund\r\n\r\nPardon me for barging in on this thread, but I wanted to ask a general\nques=\r\ntion about composite resources, batching, etc.\n\nFirst the assumptions:\n1 as=\r\nsume both the user-agent and origin server have full agreement on\nthe seman=\r\ntics of MOVE, COPY, and/or Batch DELETE as HTTP methods\n2 assume the URI us=\r\ned for these actions is the same one used for a\ntypical POST factory (MOVE =\r\n/customers/, COPY /customers/, BDELETE\n/customers/)\n3 assume a single resou=\r\nrce can be send to the origin server that\ncontains all the details to handl=\r\ne the above methods\n4 assume the origin server can enforce atomicity for th=\r\nese methods\n5 assume the origin server already marks all GETs affected by t=\r\nhese\nmethods (the underlying resource representations) with\nCache-Control:n=\r\no-cache and/or Pragma:no-cache\n\nNow the question:\nSetting aside the issue o=\r\nf whether these methods qualify as REST-ful,\nare there still folks who woul=\r\nd discourage implementing composites,\nbatching? If yes, why? Are there othe=\r\nr considerations that I&#39;ve not\nspelled out here?\n\nAlternately, assume for i=\r\ntem #1, only POST or PUT is used (not MOVE,\nCOPY, BDELETE, etc.). Also assu=\r\nme for #3 that the internet media type\nreflects the intention of the user-a=\r\ngent\n(application/vnd.customers-move+xml, /vnd.customers-bdelete+xml,\netc.)=\r\n. Does this modification make the process more/less desirable?\n\nmca\nhttp://=\r\namundsen.com/blog/\n\n\n\n\nOn Wed, Mar 18, 2009 at 11:34, Dong Liu &lt;edongliu@gm=\r\nail.com&gt; wrote:\n&gt; I agree that to create a composite resource will introduc=\r\ne some semantic\n&gt; confusion.\n&gt;\n&gt; This post was a reply to the question in\n&gt;=\r\n http://tech.groups.yahoo.com/group/rest-discuss/message/12138\n&gt;\n&gt; Although=\r\n the context of the original question of including multiple\n&gt; resources in =\r\na DELETE was not clear, I assumed that the delete task of those\n&gt; resource =\r\nshould be atomic. That is, if successful, all resources are\n&gt; deleted, or i=\r\nf failed, none of the resources is deleted. Separate DELETE\n&gt; request one a=\r\nfter the other can not=A0 achieve this goal.\n&gt;\n&gt; Cheers,\n&gt;\n&gt; Dong\n&gt;\n&gt; On We=\r\nd, Mar 18, 2009 at 4:23 AM, Eric J. Bowman &lt;eric@...&gt;\n&gt; wrote:=\r\n\n&gt;&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; How about doing this in the following way:\n&gt;&gt; &gt;\n&gt;&gt; &gt; 1. use P=\r\nUT to create a composite resource that contains all the\n&gt;&gt; &gt; resource that =\r\nare going to be deleted at the &quot;same&quot; time. Of course,\n&gt;&gt; &gt; the server side=\r\n should know the purpose of this PUT, and return the\n&gt;&gt; &gt; URI of the create=\r\nd composite resource.\n&gt;&gt; &gt; 2. use DELETE to delete the composite resource.\n=\r\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt; Let&#39;s use Atom as an example, here. =A0The application developer=\r\n could\n&gt;&gt; have the server interpret the deletion of a collection, as a requ=\r\nest to\n&gt;&gt; delete all member resources in that collection. =A0A user could t=\r\nhen\n&gt;&gt; create a collection, like any other, for the purpose of deleting it =\r\nand\n&gt;&gt; whatever entries it references.\n&gt;&gt;\n&gt;&gt; The tradeoff in such a configu=\r\nration, is eliminating the ability to\n&gt;&gt; delete a collection *without* dele=\r\nting its member resources. =A0Ask\n&gt;&gt; yourself if any reduction in API funct=\r\nionality is acceptable, for the\n&gt;&gt; purpose of optimizing DELETE -- a method=\r\n whose traffic doesn&#39;t amount\n&gt;&gt; to a very big slice of the overall network=\r\n-traffic pie to begin with.\n&gt;&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; In this way, both the client side =\r\nand the server side have clear\n&gt;&gt; &gt; understanding of what each operation an=\r\nd each URI mean.\n&gt;&gt; &gt;\n&gt;&gt; &gt; I feel it is more explicit and clear than sendin=\r\ng a POST with many\n&gt;&gt; &gt; &quot;delete&quot;.\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt; Ah, but the question is, would=\r\n this be more explicit and clear than\n&gt;&gt; having the client make atomic DELE=\r\nTE requests to the desired URIs, in\n&gt;&gt; accordance with Atom Protocol and RE=\r\nST? =A0There is no possibility for\n&gt;&gt; misunderstanding the purpose of an at=\r\nomic DELETE request made against a\n&gt;&gt; specific URI, or the resulting respon=\r\nse status.\n&gt;&gt;\n&gt;&gt; From the standpoint of the user deleting a collection for =\r\nthe purpose\n&gt;&gt; of batch-deleting member resources, the problem is one of vi=\r\nsibility.\n&gt;&gt; Using atomic, URI-by-URI DELETE requests tells intermediaries =\r\nto expire\n&gt;&gt; any cached representations of the deleted resources. =A0Using =\r\nan opaque\n&gt;&gt; server behavior, i.e. relying on the server to behave a certai=\r\nn way\n&gt;&gt; when a collection is deleted, won&#39;t cause intermediaries to expire=\r\n\n&gt;&gt; member resources, meaning the user who performed the DELETE could still=\r\n\n&gt;&gt; potentially dereference the &quot;deleted&quot; resources from a cache.\n&gt;&gt;\n&gt;&gt; Thi=\r\ns confusion certainly doesn&#39;t arise when each resource is deleted by\n&gt;&gt; mak=\r\ning a DELETE request against its URI and receiving a &quot;success&quot;\n&gt;&gt; status co=\r\nde, a visible transaction that an intermediary can understand\n&gt;&gt; and act up=\r\non by expiring cached representations. The user won&#39;t (or\n&gt;&gt; shouldn&#39;t) exp=\r\nerience a reload re-rendering a representation of a\n&gt;&gt; resource he thinks h=\r\ne&#39;s just deleted, using RESTful URI-by-URI deletion.\n&gt;&gt;\n&gt;&gt; -Eric\n&gt;\n&gt;\n&gt;\n&gt; --=\r\n\n&gt; http://dongnotes.blogspot.com/\n&gt;\n&gt;\n&gt; \n\n"}}