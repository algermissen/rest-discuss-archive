{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"i_u7H0SY2x5VXzsckreTnFeeGs7MLO5xpJYUrMZSuv73gTZjtzuR2johwxvP7RZ0WxpiyUTihI5PjGfcFU_BXtoFj6CZRWPDoFx_4AWI9w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Generative Naming","postDate":"1015653635","msgId":952,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMTN2dzBJRFQ4ekFKOTVzWkswMDAwNmIzZEBob3RtYWlsLmNvbT4=","referencesHeader":"PDNDODkzOUUwLkU3N0IzRTZDQGp1bXAubmV0Pg=="},"prevInTopic":943,"nextInTopic":955,"prevInTime":951,"nextInTime":953,"topicId":943,"numMessagesInTopic":4,"msgSnippet":"... From: Jeff Bone  ... Myth #6: Link Topologies Can Do Everything Structured Names Can Consider the following task. I am a Web crawler,","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 9 Mar 2002 05:52:17 -0000\r\nReceived: (qmail 14490 invoked from network); 9 Mar 2002 05:52:17 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m10.grp.snv.yahoo.com with QMQP; 9 Mar 2002 05:52:17 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.117)\n  by mta1.grp.snv.yahoo.com with SMTP; 9 Mar 2002 05:52:17 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 8 Mar 2002 21:52:17 -0800\r\nTo: &lt;jbone@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;3C8939E0.E77B3E6C@...&gt;\r\nSubject: Re: [rest-discuss] Generative Naming\r\nDate: Fri, 8 Mar 2002 22:00:35 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE13vw0IDT8zAJ95sZK00006b3d@...&gt;\r\nX-OriginalArrivalTime: 09 Mar 2002 05:52:17.0374 (UTC) FILETIME=[91ED0FE0:01C1C72E]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Jeff Bone&quot; &lt;jbone@...&gt;\n\n&gt; Check it out if you&#39;d like, feedback appreciated.\n&gt;\n&gt; [1] http://conveyor.com/RESTwiki/moin.cgi/GenerativeNaming\n&gt;\n\n---\n&quot;Myth #6: Link Topologies Can Do Everything Structured Names Can\nConsider the following task. I am a Web crawler, and I want to find every\npublically available object that is served up by a Web server. This Web\nserver contains and makes available one or more objects that are not linked\nto by any other object. If the server provides information which I can use\nto dynamically understand and generate structured names in its namespace, I\nmay be able to find those objects. If names are opaque and I am restricted\nto traversing the hypergraph topology, finding the objects that are not\nlinked to is impossible. See GenerativeNaming for more examples of how\nconstructable semantic names can sometimes be more expressive or efficient\nor enable things that can&#39;t be done with graph traversal. &quot;\n---\n\nI&#39;d like to examine this part &quot;This Web server contains and makes available\none or more objects that are not linked to by any other object.&quot;\n\nIn the scenerios I can think about (a large database of one table), the\nobjects /are/ linked by another object - the db table - but that other one\nisn&#39;t &#39;public&#39;.\nI would re-phrase this (to describe my scenario) to &quot;This Web server\ncontains and makes available one or more resources that are not linked to by\nany other publicly available resource.&quot;\nWhat I&#39;m getting at is that the linking is there, but it is not made visible\npublicly. Sometimes it&#39;s not visible due to lazy programmers like me, but\nmany times it isn&#39;t feasible to just list all known resources (transfer the\nstate of the index of the table).\n\nMaking the private resource into a public resource would help. You could\ndefine &#39;views&#39; over this resource and list all those - which brings you back\nto hyperlinking - but you&#39;d need to know the name of the view. Which is\nstill an issue, but not one that requires generating a structured name. This\nwould bring some scenarios into the hypermedia fold (the HyperFold(tm)) -\nbut that isn&#39;t practical for everything.\nFor example a DB resource could have a representation like:\n&lt;table&gt;\n &lt;allVCRs&gt;/data/query?dev=vcr&lt;/allVCRs&gt;\n &lt;allUsers&gt;/data/users/list&lt;/allUsers&gt;\n&lt;/table&gt;\n\nYou still need to know names (e.g. &#39;allUsers&#39;) but you don&#39;t have to\nconstruct them.\n\nI do think generative naming is very useful but I&#39;m thinking of the case\nwhere you have to translate addresses. Two disparate systems have &#39;local&#39;\nnames for something and don&#39;t know about each other. You receive a name from\nserviceA and need to do something via serviceB. Defining a pattern based\nmapping is handy. I don&#39;t know how to do it otherwise. Anyone? Anyone?\n\n\n\n\n\n"}}