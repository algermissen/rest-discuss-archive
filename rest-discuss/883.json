{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"blsnpgOmq2ENLASQLEcGAh4lvh36mT8ZhzvGxq2K6BNd68p6riwP1_eSTavKEtXukmKRs8AUroQR6sL72O2QhXk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Opacity Reconsidered","postDate":"1015466948","msgId":883,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODZDQkM0LjY3MzE0OTYyQGp1bXAubmV0Pg==","referencesHeader":"PDIwMDIwMzA2MjI0OS5SQUEzMDQ4MEBtYXJrYmFrZXIuY2E+IDwzQzg2QTFCRS45RjBEQTQ1REBqdW1wLm5ldD4gPDNDODZBNEJBLkVFMzZDMzEyQHByZXNjb2QubmV0PiA8M0M4NkFDMDcuRjMxNEIyNjlAanVtcC5uZXQ+IDwzQzg2QjAyRC43MkQ2REMyOUBwcmVzY29kLm5ldD4="},"prevInTopic":881,"nextInTopic":884,"prevInTime":882,"nextInTime":884,"topicId":864,"numMessagesInTopic":29,"msgSnippet":"... Sorry, let me clarify.  The point isn t that your claimed limitation does not exist --- it does --- but rather that the same problem and essentially the","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 02:12:03 -0000\r\nReceived: (qmail 54811 invoked from network); 7 Mar 2002 02:12:00 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m9.grp.snv.yahoo.com with QMQP; 7 Mar 2002 02:12:00 -0000\r\nReceived: from unknown (HELO blanco.clickfeed.com) (207.8.92.96)\n  by mta1.grp.snv.yahoo.com with SMTP; 7 Mar 2002 02:11:59 -0000\r\nReceived: from jump.net (cust-92-97.customer.jump.net [207.8.92.97])\n\tby blanco.clickfeed.com (8.10.0/8.10.0) with ESMTP id g272BuO22969;\n\tWed, 6 Mar 2002 20:11:56 -0600\r\nMessage-ID: &lt;3C86CBC4.67314962@...&gt;\r\nDate: Wed, 06 Mar 2002 20:09:08 -0600\r\nX-Mailer: Mozilla 4.7 [en]C-CCK-MCD {Sony}  (Win98; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Paul Prescod &lt;paul@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Opacity Reconsidered\r\nReferences: &lt;200203062249.RAA30480@...&gt; &lt;3C86A1BE.9F0DA45D@...&gt; &lt;3C86A4BA.EE36C312@...&gt; &lt;3C86AC07.F314B269@...&gt; &lt;3C86B02D.72D6DC29@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\n\nPaul Prescod wrote:\n\n&gt; You say its baloney but you haven&#39;t shown me how I can serve\n&gt; http://www.myprocesses.com/proc/5323/status from\n&gt; http://www.yourprocesses.com. I&#39;d have to set up an HTTP redirect which\n&gt; is expensive both from a maintenance and a performance point of view.\n&gt; It&#39;s cheap in a standard file system.\n\nSorry, let me clarify.  The point isn&#39;t that your claimed limitation does not exist ---\nit does --- but rather that the same problem and essentially the same solution exists\non the Web and in several common distributed environments.  The claim that the problem\n(or solution) is unique to the Web is the fallacious part.\n\n&gt; &gt; Possibly.  Or perhaps its the lack of familiarity on the part of others of\n&gt; &gt; current filesystem research and their relatively greater comfort level with\n&gt; &gt; markup technologies that causes them to (a) see nonexistent limitations and\n&gt; &gt; problems with semantically-rich naming schemes and (b) seek to compensate for\n&gt; &gt; this with markup technologies.  Which is it?  I don&#39;t know, that&#39;s what I&#39;m\n&gt; &gt; trying to find out.  I&#39;ve floated back and forth between these two communities\n&gt; &gt; for a long time, and I prima facie the Opacity Principle seems just as silly to\n&gt; &gt; me as the filesystem guys&#39; perpetual insistence on block-level IO and caching.\n&gt;\n&gt; Different scale problems have different performance characteristics. If\n&gt; file system guys tell me that block-level IO is required to get the\n&gt; performance they need then I&#39;ll believe them until I have reason to\n&gt; believe otherwise.\n\nI&#39;ve been living in that world for the last year or so, and one of the things that&#39;s\nfrustrated me has been this very thing.  One of the best-performing filesystems around\nin the last decade or so was derived from Andy Tannenbaum&#39;s Bullet File System --- and\nit was very RESTlike in some ways.  Whole objects were operated on and semantic naming\nwas separated from and dynamically mapped to identifiers for immutable stored objects.\nUnf., this is &quot;too weird&quot; for most filesystem guys, despite all sorts of compelling,\nquantitative data to the contrary.\n\n&gt; One way of looking at it is that the file system has different\n&gt; requirements, especially when it comes to performance and user\n&gt; interface.\n\nWith respect to the former, a *wide area* filesystem (such as the Web and various\nothers) has different performance characteristics than a local filesystem, a clustered\nfilesystem, etc.  If you really think there are significant differences, come up with\nsome of these different requirements and I&#39;ll come up with pointers to distributed\nfilesystem research which specifically address them.  Otherwise, the &quot;oh, it&#39;s just a\ndifferent problem domain&quot; argument is just FUD.\n\n&gt; Note that the file system names are a primary user interface\n&gt; to information navigation, even on GUI-centric platforms. URIs are at\n&gt; best a secondary or tertiary user interface compared to markup and\n&gt; browser controls.\n\nI don&#39;t buy this one, either.  I hear this &quot;GUI&quot; orientation alot, especially from the\nhypertext enthusiasts.  The Web is a hypertext medium, but it shouldn&#39;t be a hypertext\nmedium *at the expense of being a universal information space and coordination\nlanguage.*\n\n&gt; Another way of looking at it is that the semantic web could make a lot\n&gt; of that work obsolete if people started navigating by something other\n&gt; than names. Whoa! Surfing the web in rdfsh or xpathsh...there&#39;s an\n&gt; interesting idea.\n\nI&#39;ve been hoping for something along those lines for a while.  For the life of me,\nthough, I have a hard time finding simple syntaxes for interactive use of Web resources\nthemselves, much less navigating around complex graph topologies.  (And yeah, XPath\n*is* nice.  It&#39;s necessary, but not sufficient.)\n\n&gt; The opacity principle is important precisely because URIs are so human\n&gt; readable and people feel that when they model URIs they are modeling the\n&gt; application.\n\nWell, I don&#39;t think I believe that.  Look at all the yucky, unfriendly URI out there.\nThat happens precisely because people *don&#39;t* model their URI well enough, and many\nI&#39;ve talked to use &quot;opacity&quot; as an excuse.\n\n&gt; Yes, we could build a parallel system that makes names more discoverable\n&gt; and we could use HTTP redirects for indirection.\n\n(a) We already use HTTP for redirects, and when we don&#39;t we introduce unpleasant\ndependencies between clients and particular markups.  (b) I&#39;m not suggesting a parallel\nsystem, any more than WRDL is a parallel system to RDF.  Like the latter, what I am\nsuggesting is a specific tool for a specific purpose.\n\n&gt; But *to what end*? I\n&gt; think you&#39;ll reduce the human readability of URIs if you start turning\n&gt; them into code objects deconstructed by programs.\n\nI seriously doubt it;  probably what would happen would be that a commonality of tools\nand conventions would appear, which would create more uniformity and better URIs\neverywhere.\n\njb\n\n\n\n"}}