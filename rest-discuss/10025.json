{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"XhlFCq3kRgyAqybJb83g9rz7CvWgp0sjeN3JmoTmtju-YMn5mSqKI3E1eRNpmV3DkZDitOPLgHr0EZs5YJ9dk4ZUEdOhwJwgWQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] enterprise adoption of REST and amazon services","postDate":"1198113940","msgId":10025,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDcxMjE5MTcyNW4zODE5NWQ4MHA2ZWY1YTNkNmFiN2M0YzA5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDlkYzc4ZDdiMDcxMjE5MTMyN3QxZDEyYTIxOG44ODQ1MjBkNGJmMGJmN2E4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDlkYzc4ZDdiMDcxMjE5MTMyN3QxZDEyYTIxOG44ODQ1MjBkNGJmMGJmN2E4QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10024,"nextInTopic":10026,"prevInTime":10024,"nextInTime":10026,"topicId":10021,"numMessagesInTopic":7,"msgSnippet":"... I remember being told eight years ago that developers, already grown accustomed to the tooling and code generation, would see little value migrating from","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48378 invoked from network); 20 Dec 2007 01:25:44 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m52.grp.scd.yahoo.com with QMQP; 20 Dec 2007 01:25:44 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.157)\n  by mta18.grp.scd.yahoo.com with SMTP; 20 Dec 2007 01:25:42 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id l27so554696fgb.44\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 19 Dec 2007 17:25:41 -0800 (PST)\r\nX-Received: by 10.86.51.2 with SMTP id y2mr9541570fgy.56.1198113940661;\n        Wed, 19 Dec 2007 17:25:40 -0800 (PST)\r\nX-Received: by 10.86.71.6 with HTTP; Wed, 19 Dec 2007 17:25:40 -0800 (PST)\r\nMessage-ID: &lt;5037b6e40712191725n38195d80p6ef5a3d6ab7c4c09@...&gt;\r\nDate: Wed, 19 Dec 2007 17:25:40 -0800\r\nTo: &quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;9dc78d7b0712191327t1d12a218n884520d4bf0bf7a8@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;9dc78d7b0712191327t1d12a218n884520d4bf0bf7a8@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] enterprise adoption of REST and amazon services\r\nX-Yahoo-Group-Post: member; u=319607554; y=ZXNajzUQjYWIM5wMO6rBq-CycvYAM_s1ET0hqfq5sdHcjej7Iw\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn 12/19/07, Steve Loughran &lt;steve.loughran.soapbuilders@...&gt; wrote:\n&gt; 1. this mail list is self-selecting of people who&#39;ve been burned by\n&gt; soap stack pain too often to go near it. me, I&#39;m happier with CORBA or\n&gt; RMI than WS-*, as at least things marshall well, and the Distributed\n&gt; Object architecture can be managed if you can roll out code updates to\n&gt; all nodes simultaneously.\n&gt;\n&gt; 2. WS-* is pretty deep  in the enterprise, especially as the glue\n&gt; between &quot;both&quot; platforms, Windows and Java. Hence Sun&#39;s investment in\n&gt; better WS-* interop. In in-house, single vendor systems, WS-* can be\n&gt; made to work over space -but not necessarily time. Again, with a\n&gt; decent deployment infrastructure when you can roll out code everywhere\n&gt; simultaneously, then you can stay in control.\n&gt;\n&gt; The WS-* tooling has set up enterprise developers with certain expectations\n&gt;  -you dont need to know WSDL or XSD\n&gt;  -you dont need to work with raw XML\n&gt;  -you can take the WSDL and have the client code generated for you\n&gt; There&#39;s probably also the implicit expectation that remote services\n&gt; look like synchronous remote method calls.\n&gt;\n&gt; As we on this list know, it is these assumptions that lead to so many\n&gt; problems -machine generated classes that can&#39;t handle changes in the\n&gt; XML, blocking rpc operations that cant handle failures, etc. But out\n&gt; there in the field, the stuff does work on a single version of an app,\n&gt; using the same toolkit at both ends, so people can easily roll out\n&gt; something big -because the computing world (esp. MS and IBM) say Ws-*\n&gt; is good. Its only later that they discover problems with\n&gt;  -attempts to connect new clients\n&gt;  -attempts to change the interface\n&gt; Failures at these point may be blamed on the new clients or their\n&gt; tooling, rather than fundamental flaws in the whole development\n&gt; methology of WS-* applications.\n\nI remember being told eight years ago that developers, already grown\naccustomed to the tooling and code generation, would see little value\nmigrating from the comforts of CORBA to the theoretically more\ninteresting, but practically immature, SOAP.  Back when SOAP was\nrolling your own code to handle the ever so unfriendly DOM.\n\nSo taking those eight years and projecting them into the future, my guess is:\n\n1.  Tools around REST will evolve to a similar level of comfort\ndevelopers are accustomed to (as they always did).\n2.  And will generate inflexible code that will require rolling out\nchanges everywhere simultaneously (as they always did).\n3.  Which will be blamed on the tooling, not the methodology (as we always did).\n\nWhy the endless cycle?  Because at each generation you are reducing\nthe complexity involved in solving existing problems, liberating you\nto take on more challenging problems, bringing you back to the same\nlevel of complexity.  Equilibrium, it seems, is the state when you&#39;re\nno longer able to deliver more features at standard industry costs.\n\nCEO frustration reigns, CTOs go reading InfoWorld for new answers,\nhype happens and a new cycle emerges.  As it always does.\n\nWhat really changes in each generation is the size of the solution.\nIf you remember back in CORBA days, two machines was considered a\nchallenging distributed networking problem.  Then we moved to server\nfarms (more like cabinets) and grids, and now we&#39;re looking towards\nthe clouds.\n\nAssaf\n\n--\nhttp://labnotes.org\n\n"}}