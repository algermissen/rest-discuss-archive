{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"9ucM6eZ3gKsSzj5QuGuDEz6zJzCY60wAkwt-JSYh_4rlbfc2MxG_pWvi4BcC3OBRfX76_vRpZox763hryJbhVX7tWkXN7wBectWsnqJDIw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1276320778","msgId":15645,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjExMjMzMjU4LmUxYjdlNWY3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGltRHFhWHVIUE52eS1RVUZaa0ZNYUhwU2NnSkNHLXNQcUtxRndzdUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAzMDUxNTA5LmI1MTliOGViLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlra3ZmaWhhZDFsVXFTZE5pLThaM2p6aVctMGIzSFEyU0FzaldsUUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAzMTQxMjA4LmUwMjY5ODdkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrTURTRG9ab3hXTzZVTHM2ZURxN0FycHZhZjFMa2RfLUVaVEYyV0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDc0OTU2LmM5ZTNjMWM1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltWFdjaHU5dHY0dmFFeWlGQjh6TFptME0yRjRpNlJjcU55QUZzU0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDkzOTEzLmVmNmNlYzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrSHZsZmJ2dkxQUUc2UmM5WjZMcjE5aFNheS1zT3VYSGJ5cXk0Q0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MTQwOTE2LjNmZmQ3NTNjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluU0plTndlckZZMTl4V1VYRFNDY0N5cG5Tdmt6WTc2LUdnVGFlNkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA4MTAwMzIzLmFhNmVmOTllLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVjh5eE4tUjRBRldBdk5hTHFwZWItdWY3Y08wV0ZtWDdEcGFSWEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA5MTgwMDA1LjhhOGRhNzBiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVDRJdjUzRWhyaFBMR0dZYUxlMVFmaHBHVjFQTTE1NmNYQ0toWkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjExMDgxNDE4LjZkZGE0N2E5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltRHFhWHVIUE52eS1RVUZaa0ZNYUhwU2NnSkNHLXNQcUtxRndzdUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15643,"nextInTopic":15646,"prevInTime":15644,"nextInTime":15646,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"... It pushes my buttons when your reply comes so fast that it took you more time to write it, than you spent reading my reply.  I am trying to impart of the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 36889 invoked from network); 12 Jun 2010 05:33:26 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 12 Jun 2010 05:33:26 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 12 Jun 2010 05:33:26 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 039CE509B4;\n\tSat, 12 Jun 2010 01:33:24 -0400 (EDT)\r\nDate: Fri, 11 Jun 2010 23:32:58 -0600\r\nTo: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;\r\nCc: Tim Williams &lt;williamstw@...&gt;, Mike Kelly &lt;mike@...&gt;,\n Sebastien Lambla &lt;seb@...&gt;, mike amundsen &lt;mamund@...&gt;,\n Glenn Block &lt;glenn.block@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100611233258.e1b7e5f7.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTimDqaXuHPNvy-QUFZkFMaHpScgJCG-sPqKqFwsu@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;20100603051509.b519b8eb.eric@...&gt;\n\t&lt;AANLkTikkvfihad1lUqSdNi-8Z3jziW-0b3HQ2SAsjWlQ@...&gt;\n\t&lt;20100603141208.e026987d.eric@...&gt;\n\t&lt;AANLkTikMDSDoZoxWO6ULs6eDq7Arpvaf1Lkd_-EZTF2W@...&gt;\n\t&lt;20100604074956.c9e3c1c5.eric@...&gt;\n\t&lt;AANLkTimXWchu9tv4vaEyiFB8zLZm0M2F4i6RcqNyAFsS@...&gt;\n\t&lt;20100604093913.ef6cec19.eric@...&gt;\n\t&lt;AANLkTikHvlfbvvLPQG6Rc9Z6Lr19hSay-sOuXHbyqy4C@...&gt;\n\t&lt;20100604140916.3ffd753c.eric@...&gt;\n\t&lt;AANLkTinSJeNwerFY19xWUXDSCcCypnSvkzY76-GgTae6@...&gt;\n\t&lt;20100608100323.aa6ef99e.eric@...&gt;\n\t&lt;AANLkTinV8yxN-R4AFWAvNaLqpeb-uf7cO0WFmX7DpaRX@...&gt;\n\t&lt;20100609180005.8a8da70b.eric@...&gt;\n\t&lt;AANLkTinT4Iv53EhrhPLGGYaLe1QfhpGV1PM156cXCKhZ@...&gt;\n\t&lt;20100611081418.6dda47a9.eric@...&gt;\n\t&lt;AANLkTimDqaXuHPNvy-QUFZkFMaHpScgJCG-sPqKqFwsu@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAnt=F3nio Mota wrote:\n&gt;\n&gt; As I said, I think I understand the &quot;principle&quot;, =\r\nbut not the\n&gt; necessity of applying it in all situations (except compressio=\r\nn). Just\n&gt; some more notes:\n&gt; \n\nIt pushes my buttons when your reply comes =\r\nso fast that it took you\nmore time to write it, than you spent reading my r=\r\neply.  I am trying to\nimpart of the wisdom I&#39;ve accumulated through a dozen=\r\n years of\nexperience with conneg and REST (back then REST was called HTTP R=\r\nequest\nObject).  I am not trying to trick you into doing something that isn=\r\n&#39;t\nin your best interests, I&#39;m pointing out a best practice that is in\nyour=\r\n best interests, because it&#39;s also a REST constraint.\n\nHow difficult is it =\r\nto understand that there is one exception to the\nSHOULD, and that&#39;s compres=\r\nsion?  You can keep asking me about every\npossible exception out there, but=\r\n it won&#39;t change my answer -- it will\nonly annoy the crap out of me.  If th=\r\nese possible exceptions aren&#39;t\ncompression, my answer remains &quot;no.&quot;  Seriou=\r\nsly, how much more concisely\nand unequivocally can I state my position?\n\n&gt; =\r\n\n&gt; &gt;\n&gt; &gt; So, assigning URIs to variants doesn&#39;t apply to the general case,\n=\r\n&gt; &gt; but it does apply to all other cases.\n&gt; &gt;\n&gt;\n&gt; I still don&#39;t see any oth=\r\ner use cases except the client being able to\n&gt; dereference a specific varia=\r\nnt or for use with cache. Both of wich\n&gt; are not that important inside a in=\r\ntranet.\n&gt; \n\nIf the intranet context (or anything else) was a valid exceptio=\r\nn to the\nSHOULD, then I wouldn&#39;t be saying until I&#39;m blue in the face that =\r\nthe\nonly valid exception to the SHOULD is compression.\n\nBesides, this is no=\r\nt intranet-discuss, this is rest-discuss.  I refuse\nto tailor my answers to=\r\n the specific needs of those whose systems do\nnot need REST&#39;s primary benef=\r\nit of anarchic scalability over the real-\nworld Web.  That intranets have n=\r\nowhere near the scaling requirements\nof Web systems, is simply not relevant=\r\n to any discussion of REST, nor\nis it a reason not to implement REST.\n\nWhat=\r\n I&#39;ve learned from doing this for a dozen years, is that your life\ngets inf=\r\ninitely easier when dealing with conneg, if variants are\nassigned their own=\r\n URIs.  If for no other reason than to be able to\ntest and maintain the sys=\r\ntem properly.\n\nWhy develop any architecture, particularly a REST architectu=\r\nre, to be\nincompatible with caching just because it isn&#39;t an immediate need=\r\n?\nHave you not been paying attention to anything I write about how REST\nis =\r\na goal for the long-term evolution of a system rather than a solution\nfor i=\r\nts immediate needs?\n\nIf it turns out after you&#39;ve deployed an intranet syst=\r\nem, that caching\nindeed would be nice, wouldn&#39;t it make a lot more sense to=\r\n have followed\nthe Identification of Resources constraint in the first plac=\r\ne, such\nthat you can just drop squid in where and as needed, instead of\nreq=\r\nuiring a fully-coupled caching solution like cache channels?\n\nFollowing RES=\r\nT from the get-go prevents you from painting yourself into\nthe corner like =\r\nthat.  One benefit of the Identification of Resources\nconstraint is caching=\r\n.  That does not mean that because you don&#39;t care\nabout caching today, you =\r\ncan just ignore that constraint.  OTOH, by\napplying that constraint, your s=\r\nystem can evolve in a scalable fashion\nover the long term.  Why bend over b=\r\nackwards to avoid that, for the\nsake of not minting some URIs?  Your positi=\r\non makes no sense to me.\n\n&gt; \n&gt; &gt;\n&gt; &gt; URIs are opaque.  I don&#39;t know how you=\r\n can tell from just &quot;/A&quot; that\n&gt; &gt; it must be a static page?  The answer is =\r\nthat it makes no difference\n&gt; &gt; whatsoever to anything I&#39;ve said, whether e=\r\nither of those resources\n&gt; &gt; or any other resources I may have tossed out a=\r\ns examples, are\n&gt; &gt; static or dynamic.  To a REST connector it&#39;s just a bun=\r\nch of\n&gt; &gt; response bytes, as implementation details are opaque behind the\n&gt;=\r\n &gt; uniform interface.\n&gt; &gt;\n&gt;\n&gt; I know URIs are opaque, I was just pointing t=\r\no your examples. But my\n&gt; point is preciselly that one. If &quot;it&#39;s just a bun=\r\nch of response\n&gt; bytes&quot;, how can a non-static resource be cached if each ti=\r\nme it is\n&gt; dereferenced it will probably have a diferent bunch of bytes?\n&gt;\n=\r\n\nLook at the demo I posted.  The URIs you dereference are just stubs\nwhose =\r\ncontent (metadata) rarely changes.  All steady-states are rendered\nusing cl=\r\nient-side XSLT to include other resources.  Those other\nresources have diff=\r\nerent cache optimizations according to their\nnature.  The caching of the in=\r\nitial representation is not coupled to\nthe caching of any resource making u=\r\np the steady-state.  It just calls\nan XSLT transformation.\n\nThis is no diff=\r\nerent than any HTML page which calls an external CSS\nfile.  Updating the CS=\r\nS has absolutely no effect on the freshness of\nany representation linking t=\r\no the CSS.  When my system is fleshed out,\nit will implement XHR to update =\r\nthe number of replies in a thread,\nwherever that information is needed.  Th=\r\nat way, those pages dynamically\nupdate, without affecting the caching of th=\r\ne representation which calls\nthat XHR.\n\nYou are scraping the bottom of the =\r\nbarrel now, looking for edge cases\nand exceptions.  Why?  The answer remain=\r\ns assign URIs to variants, and\narchitect your way around these issues you b=\r\nring up, such that they\ndon&#39;t matter.  Nothing you mention is a showstopper=\r\n, I doubt you will\never come up with anything that is or which shows best p=\r\nractice to be\ninherently flawed, nor will you convince me that the Identifi=\r\ncation of\nResources constraint may be safely ignored in the intranet contex=\r\nt...\n\nJust as you will not prove to me that glass is a solid.  You need to\n=\r\nlearn why this is the way it is, instead of desperately seeking cases\nyou t=\r\nhink might disprove this, and confusing the rest of the class\nwhile bugging=\r\n your professor, who has already been incredibly patient\nin pointing out ti=\r\nme and again that the *only* exception here is\ncompression.  Especially sin=\r\nce just minting the damn URIs is so simple\nand has no downside.\n\n&gt;\n&gt; For in=\r\nstance /currentime is allways diferent and so is not cacheable,\n&gt; rigth? Wh=\r\nat&#39;s the importance then of having a fixed URI to variants\n&gt; of this resour=\r\nce (if you also consider that we should never allow the\n&gt; client to call sp=\r\necific variants)?\n&gt; \n\nIf /currentime is a negotiated resource, then assigni=\r\nng URIs to its\nvariants, aside from following the spec and applying the Ide=\r\nntification\nof Resources constraint, makes it one heckuva lot easier to cur=\r\nl the\nvariants for testing, independent of the conneg mechanism.  I can&#39;t\ni=\r\nmagine how much harder you&#39;re making it to develop and maintain a\nsystem by=\r\n only being able to access variants by using curl with Accept\nheaders.\n\nThi=\r\ns was the first thing I figured out a dozen years ago, when I\nstarted using=\r\n conneg, and it&#39;s held true ever since -- trying to\ndevelop a conneg system=\r\n without assigning URIs to variants is a\nthousand times more difficult than=\r\n just minting the damn URIs.  So\nplease, just follow the spec and apply the=\r\n REST constraint.  It&#39;s so\nmuch easier than flogging a horse that&#39;s been de=\r\nad since the last\nmillenium, when this debate was SETTLED.\n\nFind all the ed=\r\nge cases you want, where you wouldn&#39;t want to cache or\ndirectly dereference=\r\n variants.  How does this override the SHOULD or\nthe Identification of Reso=\r\nurces constraint?  As I&#39;ve said a million\ntimes now, the exception to assig=\r\nning URIs to variants is compression,\nnot your desire to avoid applying a R=\r\nEST constraint or following RFC\n2616, for reasons which still elude me enti=\r\nrely -- there&#39;s no downside\nto assigning URIs to variants, so why are you l=\r\nooking so hard for\nexceptions to this best practice?  I already told you _t=\r\nhe_ exception:\ncompression.\n\n&gt; \n&gt; &gt; &gt;\n&gt; &gt; &gt; And also in that example, suppo=\r\nse the client references\n&gt; &gt; &gt; the /A.html as a representation of /A, then =\r\nthat manipulation\n&gt; &gt; &gt; of /A.html has to be made thru a representation of =\r\n/A.html, does\n&gt; &gt; &gt; it make sense to also assign URI&#39;s to the representatio=\r\nn of that\n&gt; &gt; &gt; representation of /A? I suppose it depends on the &quot;importan=\r\nce&quot; of\n&gt; &gt; &gt; those representations?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; Your terminology is, errr=\r\n, not so good, so the only chance I have of\n&gt; &gt; answering that question is =\r\nto rewrite it first:\n&gt; &gt;\n&gt; \n&gt; Yes, my english is far from good...\n&gt; \n\nYour =\r\ngrasp of REST terminology is a separate issue from your grasp of\nEnglish.  =\r\nI could care less about your grasp of English.\n\n&gt; \n&gt; &gt;\n&gt; &gt; &quot;If the user age=\r\nnt dereferences /A and the response is the /A.html\n&gt; &gt; variant, then that m=\r\nanipulation of /A.html...&quot;\n&gt; &gt;\n&gt; &gt; What manipulation of /A.html?  The user =\r\nagent is dereferencing /A.\n&gt; &gt; The response is a variant with a Content-Loc=\r\nation of /A.html, not a\n&gt; &gt; Location of /A.html.  There&#39;s only one request-=\r\nresponse here, the\n&gt; &gt; user agent knows nothing of /A.html because the user=\r\n agent hasn&#39;t\n&gt; &gt; dereferenced /A.html.\n&gt; &gt;\n&gt; \n&gt; OK, I see, the dereferenci=\r\nng of /A.html is made by the server itself,\n&gt; not the user agent, so the us=\r\ner agent never &quot;sees&quot; it?\n&gt; \n\nThe server isn&#39;t dereferencing anything.  Per=\r\nhaps /A.html is an actual\nfile on the filesystem of the origin server, perh=\r\naps not, it does not\nmatter.  The server is responding to a request for /A =\r\nwith whatever\nresponse code, headers and entity the system&#39;s coding tells i=\r\nt to.  One\nof those headers contains a URI which other components may use i=\r\nn order\nto distinguish between variants -- it&#39;s just a label.\n\n&gt; \n&gt; &gt;\n&gt; &gt; &quot;=\r\nIf the user agent dereferences /A and the response is the /A.html\n&gt; &gt; varia=\r\nnt, then that manipulation of /A.html has to be made by\n&gt; &gt; transferring a =\r\nrepresentation of /A.html...&quot;\n&gt; &gt;\n&gt; &gt; I don&#39;t follow.  URIs are opaque, you=\r\n are deducing an awful lot from\n&gt; &gt; some hypothetical example not-really-ev=\r\nen-URIs.  The user agent\n&gt; &gt; dereferences /A and retrieves instructions on =\r\nhow to render a\n&gt; &gt; steady- state, which presents the user with options for=\r\n\n&gt; &gt; transitioning to other application steady-states.\n&gt; &gt;\n&gt; \n&gt; Well, by &quot;m=\r\nanipulation&quot; I was only thinking of GETting it, not to\n&gt; change it. I was p=\r\nointing only that if the variant of /A that we\n&gt; assigned a URI of /A.html =\r\nis a resource on ot&#39;s own that implies that\n&gt; there is also (at least one) =\r\n representation of /A.html that we could\n&gt; wish or not to assign it&#39;s how U=\r\nRI, like /A.html.en,  /A.html.pt...\n&gt; \n\nNo!  Absolutely not!  The appearanc=\r\ne of a URI in a Content-Location\nheader is just a label.  It implies nothin=\r\ng, you can make no assertions\nbased on its presence, it doesn&#39;t even imply =\r\nthat you can dereference \n/A.html let alone say anything about the number o=\r\nf representations of \n/A.html, and it certainly doesn&#39;t imply some addition=\r\nal negotiation\nlayer -- which, if you were using transparent conneg, is act=\r\nually a 506\nVariant Also Negotiates error as per RFC 2295.\n\nIf there were d=\r\nifferent languages to negotiate, and each language\nvaries in possible media=\r\n types, then the system would compute the\nlanguage, then the media type, th=\r\nen send a response to &#39;GET /A&#39; with the\nappropriate headers including Conte=\r\nnt-Location, whose URI says nothing\nabout anything since it&#39;s just labellin=\r\ng a variant for the purpose of\ndistinguishing it from other variants.\n\nStop=\r\n making this impossible for yourself to ever comprehend.  If you\nhave a res=\r\nource /A which varies by media type and language, then you\nhave a set of va=\r\nriants to which you can assign URIs.  You don&#39;t take\nthe variants of each l=\r\nanguage and make them negotiable URIs based on\nmedia type, that leads the u=\r\nser agent around in a circle.  Just give a\ndifferent URI to each variant --=\r\n pretend those URIs are random\ngobbledygook with no apparent relation to on=\r\ne another (i.e. opaque).\nThey&#39;re just labels, not a Location where the user=\r\n agent needs to\nconduct further content negotiation.\n\n&gt; \n&gt; &gt;\n&gt; &gt; &quot;Does it m=\r\nake sense to also assign URI&#39;s to the variants of the\n&gt; &gt; variants of /A?&quot;\n=\r\n&gt; &gt;\n&gt; &gt; None whatsoever.  Why would /A.html have any variants, except for\n&gt;=\r\n &gt; compression?  The entire purpose of assigning URIs to variants is to\n&gt; &gt;=\r\n access them as resources in their own right, tied to a specific\n&gt; &gt; media =\r\ntype (which may or may not be expressed as a filename\n&gt; &gt; extension), or la=\r\nnguage, etc.  So the only conneg left to do is\n&gt; &gt; compression, if /A.html =\r\nis dereferenced, which of course is not a\n&gt; &gt; given that it will be.\n&gt; &gt;\n&gt; =\r\n\n&gt; I was thinking about diferent languages for the same resource/variant\n&gt; =\r\nas my previous example.\n&gt; \n\nThe answer does not change based on the number =\r\nof different headers\nyou&#39;re considering for the negotiation.  Resource /A h=\r\nas a set of\nvariants, it doesn&#39;t matter whether they&#39;re by media type, lang=\r\nuage, or\nboth media type and language, or compressed, or not compressed, th=\r\ne\nresult is a set of variants for /A which need URIs assigned to them.\n\nWha=\r\nt you&#39;re saying, is that you were thinking that the user agent would\nderefe=\r\nrence the Content-Location URI to conduct further negotiation.\nNo!  This wo=\r\nuld never happen, because Content-Location is not an\ninstruction to derefer=\r\nence anything.  That&#39;s what Location does.  So\nif /A.html were negotiable, =\r\nhow would the user agent ever know about\nit?  The negotiated resource is /A=\r\n , because I said that my example /A\nis a negotiated resource.  How you can=\r\n assume that means more\nnegotiation would occur at /A.html because it&#39;s in =\r\nContent-Location,\nwhen Content-Location is just a label containing an opaqu=\r\ne URI, escapes\nme.\n\nYou&#39;re making this a million times more difficult than =\r\nit would be if\nyou could just accept for a fact, that it&#39;s best practice to=\r\n assign\nURIs to your variants...  Trying to escape that reality is leading =\r\nyou\ninto some incredibly convoluted hypotheticals, whose rebuttals are only=\r\n\nmaking yourself and others more confused.  Why can&#39;t you just assign\nURIs =\r\nto your variants, and learn from the experience why it&#39;s desirable?\n\nSurely=\r\n that would be more productive than convoluted theoretical debate\nseeking f=\r\nor exceptions using edge-case examples, which will only serve\nto ensure tha=\r\nt you never learn REST?\n\n&gt; \n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Nevertheless I think to call th=\r\nis &quot;best practice&quot; induces in error\n&gt; &gt; &gt; (it did with me) because it&#39;s onl=\r\ny applicable to restricted use\n&gt; &gt; &gt; case. scenarios.\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; No, it =\r\napplies to every use case except compression, as per the\n&gt; &gt; SHOULD in RFC =\r\n2616.  Ignoring said SHOULD is a deviation from best\n&gt; &gt; practice.\n&gt; &gt;\n&gt; &gt; =\r\nWhat I&#39;m saying can&#39;t be put any more simply than &quot;assign URIs to\n&gt; &gt; your =\r\nvariants, except for compression.&quot;  That&#39;s best practice for\n&gt; &gt; the theore=\r\ntical reason that it&#39;s what RFC 2616 says to do, and for\n&gt; &gt; the pragmatic =\r\nreason that the real-world Web depends on your doing\n&gt; &gt; this because that&#39;=\r\ns how the Web actually works in reality.  Don&#39;t\n&gt; &gt; fight it.\n&gt; &gt;\n&gt;\n&gt; Well,=\r\n that argument of  &quot;that&#39;s how the Web actually works&quot; goes as\n&gt; far as it =\r\ngoes. The web actually works with cookies too, that are\n&gt; consensually not =\r\nRESTfull...\n&gt;\n\nSigh.\n\nRoy&#39;s thesis clearly explains that cookies are a REST=\r\n mismatch, as most\ncommonly used (although there are uses of cookies which =\r\ndon&#39;t amount to\nstoring application state, which aren&#39;t REST mismatches).  =\r\nAre you\nseriously trying to rebut the explanation of a constraint, by compa=\r\nring\nthat constraint to a known REST mismatch?\n\nGiven the congruent develop=\r\nment of REST and the Web, the way conneg\nworks on the real-world Web is bot=\r\nh the basis for, and the expression\nof, the Identification of Resources con=\r\nstraint.  This is a constraint,\nnot a mismatch.  Resorting to bringing up c=\r\nookies is something I can&#39;t\ntake seriously.\n\nI have done everything I can i=\r\nn this thread to explain that the SHOULD\nrequirement for assigning URIs to =\r\nvariants works on the real-world Web,\nbecause that aspect of the real-world=\r\n Web is behaving according to the\nconstraints of REST.  Your response to th=\r\nat is that cookies are a REST\nmismatch?\n\nWhat does that even mean, except t=\r\nhat there&#39;s really no point in\nfurthering this discussion with you, because=\r\n you&#39;ll apparently stop at\nnothing, no matter how patently absurd, in an ef=\r\nfort to dispute what\nI&#39;m saying?  I&#39;m done here, as there&#39;s obviously no po=\r\nint in continuing.\nCome back when you&#39;ve decided that you want to learn RES=\r\nT instead of\nwasting my time.\n\n-Eric\n\n"}}