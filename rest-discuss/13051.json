{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"w98IatGul6wJrK3JZL53IuBIUZ5uKxzAzqy8j7ttRcwz5aXNGoyhqCcfVfzdP3IuK_T5JYkWBJWJfqxau5x7Jxr92TTmATk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking \tnon-hypertext","postDate":"1246417282","msgId":13051,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkwNjMwMjAwMXQzMGRkZGYwZG84ZWE3NjljZjZlZmJmMTVAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDgxNThhZDc1MDkwNjMwMTgzMm8zZWJjYjdkOWcxY2NmMzg3ODZkMmM4MDU4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4JIDw0QTQ0MTZEMi41MDgwMzA0QGRlaG9yYS5uZXQ+CSA8Mjg1MDUwNjgtMTkzQS00MjE0LUI1RjUtMThGM0U5N0E5NkM0QHN1YmJ1Lm9yZz4JIDwyMTYwNmRjZjA5MDYzMDAzNDRnNGI5ZjdmYzNrYzUxNDYyNDc4NmVjMmNmZEBtYWlsLmdtYWlsLmNvbT4JIDwwRENDQTBEMC1GNDVGLTRENTYtQTI2Ni0zQjU1QjM4NDUzNzNAc3ViYnUub3JnPgkgPDgxNThhZDc1MDkwNjMwMTEzMnI0NTkxMDg4NHY1MjE2ZGVhZjQ3NWEzYWU4QG1haWwuZ21haWwuY29tPgkgPEYxOTEzOUQ0LUQ4RjAtNEMwRS04NDlDLThDQjZFRkQ1MjUwMEBzdWJidS5vcmc+CSA8ODE1OGFkNzUwOTA2MzAxMzI4dzY3MTc3ZjkyaGU2NzI3MWYzM2I2NTI1NTFAbWFpbC5nbWFpbC5jb20+CSA8MEFENjVCRkEtRkUzNi00RDMyLUE0NzItODQ4QTdBRkFBQjhFQHN1YmJ1Lm9yZz4JIDw4MTU4YWQ3NTA5MDYzMDE4MzJvM2ViY2I3ZDlnMWNjZjM4Nzg2ZDJjODA1OEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":13050,"nextInTopic":13052,"prevInTime":13050,"nextInTime":13052,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"FWIW, Link *Headers* make sense to me when the link are metadata about the resource. However, when the links are to be treated as first-class resources ","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 24684 invoked from network); 1 Jul 2009 03:02:23 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m1.grp.re1.yahoo.com with QMQP; 1 Jul 2009 03:02:23 -0000\r\nX-Received: from unknown (HELO mail-bw0-f225.google.com) (209.85.218.225)\n  by mta1.grp.re1.yahoo.com with SMTP; 1 Jul 2009 03:02:23 -0000\r\nX-Received: by bwz25 with SMTP id 25so657128bwz.44\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 20:01:23 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.116.77 with SMTP id l13mr5614926faq.106.1246417282874; \n\tTue, 30 Jun 2009 20:01:22 -0700 (PDT)\r\nIn-Reply-To: &lt;8158ad750906301832o3ebcb7d9g1ccf38786d2c8058@...&gt;\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt;\n\t &lt;4A4416D2.5080304@...&gt;\n\t &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt;\n\t &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt;\n\t &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt;\n\t &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\n\t &lt;F19139D4-D8F0-4C0E-849C-8CB6EFD52500@...&gt;\n\t &lt;8158ad750906301328w67177f92he67271f33b652551@...&gt;\n\t &lt;0AD65BFA-FE36-4D32-A472-848A7AFAAB8E@...&gt;\n\t &lt;8158ad750906301832o3ebcb7d9g1ccf38786d2c8058@...&gt;\r\nDate: Tue, 30 Jun 2009 23:01:22 -0400\r\nX-Google-Sender-Auth: 24b27de242ccfad7\r\nMessage-ID: &lt;b548df650906302001t30dddf0do8ea769cf6efbf15@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001636c5afb6633ea7046d9c2393\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking \n\tnon-hypertext\r\nX-Yahoo-Group-Post: member; u=69164307; y=umMrUNIA1rVYc-gh-kc64dPUHGNIuE1KhQpdqO3FMlMP\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--001636c5afb6633ea7046d9c2393\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nFWIW, Link *Headers* make sense to me when the link are metadata about the\nresource. However, when the links are to be treated as first-class resources\nthemselves, I think Link Headers is not the right choice. For example, I\nassert that links appearing in the &lt;head /&gt; section of typical HTML\ndocuments are metadata. Links that appear in the &lt;body /&gt; section are not.\n\nI am not privy to the details of your particular use of links, but I get the\nimpression that they are more than metadata. If true, I would consider\nplacing the links either in the body of the resource or, when the resource\ndoes not support body links easily (certain binary files, etc.), I would add\na single link header (Link: &lt;http://www.example.org/resource123/links&gt;;\nrel=related) that points to the related resource that holds all the links.\nOne possible advantage of this approach is that the related links are now\nexposed in a way that easily allows searching and filtering using\nwell-established mechanisms.\n\nAlso, this sentence from your last post caught my eye:\n&lt;snip&gt;\nIt&#39;s unavoidable (I think) that a case in which you might simply add a\nforeign key or a bridge table when thinking relationally, you need to do\nlots of contortions to do RESTfully.\n&lt;/snip&gt;\n\nThis is very true. For me, that&#39;s an excellent reminder that the relational\napproach is not the same as a RESTful approach.\n\nmca\nhttp://amundsen.com/blog/\n\n\n\nOn Tue, Jun 30, 2009 at 21:32, Peter Keane &lt;pkeane@...&gt; wrote:\n\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Tue, Jun 30, 2009 at 5:17 PM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n&gt;\n&gt;&gt;  This looks just right for a one-many link (as in my #1 option -- post to\n&gt;&gt;&gt; a\n&gt;&gt;&gt; cart &quot;collection&quot; resource) in which the &quot;one&quot; is obvious and easily\n&gt;&gt;&gt; discoverable (like a cart).  But a common case I run into is a one in\n&gt;&gt;&gt; which\n&gt;&gt;&gt; a resource must be linked to any of a large number of possible related\n&gt;&gt;&gt; resources.  (In my case it is a digital image library, in which we\n&gt;&gt;&gt; regularly\n&gt;&gt;&gt; need to create links between items, e.g., a link from a photo of an\n&gt;&gt;&gt; architect to an image of a building that she created.).  We have needed\n&gt;&gt;&gt; to\n&gt;&gt;&gt; devise as general an operation as possible to *relate* two resources.  In\n&gt;&gt;&gt; the case of a cart and a product, it is obvious what the relationship\n&gt;&gt;&gt; will\n&gt;&gt;&gt; be once it is created.  We have need to create links between resources\n&gt;&gt;&gt; that\n&gt;&gt;&gt; may have any of a large number of relations (e.g., &quot;created-by&quot;).  I wish\n&gt;&gt;&gt; to\n&gt;&gt;&gt; stay in the realm of Atom (avoiding complexities of RDF).  I am reminded\n&gt;&gt;&gt; somewhat here by the work going on in activities streams....  Anyway, I\n&gt;&gt;&gt; agree with Sam that it is currently an unsolved problem with wide\n&gt;&gt;&gt; applicability.\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt; So, when you let clients establish links between resources, who controls\n&gt;&gt; whether a link is valid or bogus?\n&gt;&gt;\n&gt;&gt; What is the advantage of the client owning this problem?\n&gt;&gt;\n&gt;&gt; Forgetting about HTTP and REST for a bit, would you still take the same\n&gt;&gt; approach if you are building this application using a different style? What\n&gt;&gt; I am getting at is, is the &quot;link management&quot; problem real, or is it a\n&gt;&gt; manifestation of an implementation choice?\n&gt;\n&gt;\n&gt; Good questions.  Certainly, it&#39;ll be the server that controls what&#39;s a\n&gt; valid &quot;linkage&quot;, but the range of possibilities might be (nearly) infinite.\n&gt; And I agree there are few cases in which the problem should be owned by the\n&gt; client. (I can&#39;t help but think about all of the sticky issue around RDF\n&gt; here -- by whose authority is a particular assertion made given that the\n&gt; power to make an assertion is &quot;granted&quot; to any &quot;client&quot;?).\n&gt;\n&gt; I can decompose the problem such that a UI might be a drag-and-drop, an\n&gt; &quot;add-to-cart&quot; button, etc.  More commonly, in my digital library case, I&#39;ll\n&gt; have an embedded search feature where I allow the user to do an open search\n&gt; over the collection and select any found items to be &quot;related&quot; to the\n&gt; current item (and probably provide a pull-down selection of relation\n&gt; types).\n&gt;\n&gt; Just under the hood, though, a link is being created between these two\n&gt; resources.  Since the range of possible links is so huge, I&#39;d find it hard\n&gt; to offer a @rel=buy link as in your example.  I suppose a reasonable\n&gt; extrapolation of that would be to provide a &quot;linker&quot; global resource that\n&gt; would allow me, say, to post form encoded:\n&gt; id_one=123&id_two=224&relation=created-by (?).  OR perhaps each item has\n&gt; it&#39;s own &lt;link rel=&quot;http://example.org/linker&quot; href=&quot;\n&gt; http://example.org/item/linker/123&quot;/&gt; that I could post an id and\n&gt; relationship type to (hmmm -- need to provide a way for client to know the\n&gt; possible relation types -- possibly an atom:link for each relation type that\n&gt; I can POST to?).\n&gt;\n&gt; Anyway, it gets unwieldy quickly.  It&#39;s unavoidable (I think) that a case\n&gt; in which you might simply add a foreign key or a bridge table when thinking\n&gt; relationally, you need to do lots of contortions to do RESTfully.  When all\n&gt; is said and done, link headers seems reasonably elegant.  I agree with you,\n&gt; though, that it potentially gives the client too much (unconstrained, or at\n&gt; least not constrained in a discoverable way) ownership of the problem.\n&gt;\n&gt; --peter\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; Subbu\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n\r\n--001636c5afb6633ea7046d9c2393\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nFWIW, Link *Headers* make sense to me when the link are metadata about the =\r\nresource. However, when the links are to be treated as first-class resource=\r\ns themselves, I think Link Headers is not the right choice. For example, I =\r\nassert that links appearing in the &lt;head /&gt; section of typical HTML d=\r\nocuments are metadata. Links that appear in the &lt;body /&gt; section are =\r\nnot.&lt;br&gt;\n&lt;br&gt;I am not privy to the details of your particular use of links,=\r\n but I get the impression that they are more than metadata. If true, I woul=\r\nd consider placing the links either in the body of the resource or, when th=\r\ne resource does not support body links easily (certain binary files, etc.),=\r\n I would add a single link header (Link: &lt;&lt;a href=3D&quot;http://www.example.=\r\norg/resource123/links&quot;&gt;http://www.example.org/resource123/links&lt;/a&gt;&gt;; re=\r\nl=3Drelated) that points to the related resource that holds all the links. =\r\nOne possible advantage of this approach is that the related links are now e=\r\nxposed in a way that easily allows searching and filtering using well-estab=\r\nlished mechanisms.&lt;br&gt;\n&lt;br&gt;Also, this sentence from your last post caught m=\r\ny eye:&lt;br&gt;&lt;snip&gt;&lt;br&gt;It&#39;s unavoidable (I think) that a case in whi=\r\nch you might simply add a\nforeign key or a bridge table when thinking relat=\r\nionally, you need to\ndo lots of contortions to do RESTfully.&lt;br&gt;&lt;/snip&g=\r\nt;&lt;br&gt;&lt;br&gt;This is very true. For me, that&#39;s an excellent reminder that =\r\nthe relational approach is not the same as a RESTful approach.&lt;br&gt;&lt;br&gt;mca&lt;b=\r\nr&gt;&lt;a href=3D&quot;http://amundsen.com/blog/&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;\n&lt;=\r\nbr&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Jun 30, 2009 at 21:32, Peter=\r\n Keane &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:pkeane@...&quot;&gt;pkea=\r\nne@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quot=\r\ne&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt =\r\n0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n        \n\n\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\n&lt;br&gt;=\r\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div class=3D&quot;im&quot;&gt;On Tue, Jun 30, 2009 at 5:=\r\n17 PM, Subbu Allamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@subbu=\r\n.org&quot; target=3D&quot;_blank&quot;&gt;subbu@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquot=\r\ne class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204);=\r\n margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n&lt;div&gt;&lt;blockquote class=3D=\r\n&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0=\r\npt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\nThis looks just right for a one-many=\r\n link (as in my #1 option -- post to a&lt;br&gt;\ncart &quot;collection&quot; reso=\r\nurce) in which the &quot;one&quot; is obvious and easily&lt;br&gt;\ndiscoverable (=\r\nlike a cart). =A0But a common case I run into is a one in which&lt;br&gt;\na resou=\r\nrce must be linked to any of a large number of possible related&lt;br&gt;\nresourc=\r\nes. =A0(In my case it is a digital image library, in which we regularly&lt;br&gt;=\r\n\nneed to create links between items, e.g., a link from a photo of an&lt;br&gt;\nar=\r\nchitect to an image of a building that she created.). =A0We have needed to&lt;=\r\nbr&gt;\ndevise as general an operation as possible to *relate* two resources. =\r\n=A0In&lt;br&gt;\nthe case of a cart and a product, it is obvious what the relation=\r\nship will&lt;br&gt;\nbe once it is created. =A0We have need to create links betwee=\r\nn resources that&lt;br&gt;\nmay have any of a large number of relations (e.g., &qu=\r\not;created-by&quot;). =A0I wish to&lt;br&gt;\nstay in the realm of Atom (avoiding =\r\ncomplexities of RDF). =A0I am reminded&lt;br&gt;\nsomewhat here by the work going =\r\non in activities streams.... =A0Anyway, I&lt;br&gt;\nagree with Sam that it is cur=\r\nrently an unsolved problem with wide&lt;br&gt;\napplicability.&lt;br&gt;\n&lt;br&gt;\n&lt;/blockquo=\r\nte&gt;\n&lt;br&gt;&lt;/div&gt;\nSo, when you let clients establish links between resources, =\r\nwho controls whether a link is valid or bogus?&lt;br&gt;\n&lt;br&gt;\nWhat is the advanta=\r\nge of the client owning this problem?&lt;br&gt;\n&lt;br&gt;\nForgetting about HTTP and RE=\r\nST for a bit, would you still take the same approach if you are building th=\r\nis application using a different style? What I am getting at is, is the &qu=\r\not;link management&quot; problem real, or is it a manifestation of an imple=\r\nmentation choice?&lt;/blockquote&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;br&gt;Good questions.=A0 Certainly=\r\n, it&#39;ll be the server that controls what&#39;s a valid &quot;linkage&qu=\r\not;, but the range of possibilities might be (nearly) infinite.=A0 And I ag=\r\nree there are few cases in which the problem should be owned by the client.=\r\n (I can&#39;t help but think about all of the sticky issue around RDF here =\r\n-- by whose authority is a particular assertion made given that the power t=\r\no make an assertion is &quot;granted&quot; to any &quot;client&quot;?).&lt;br&gt;=\r\n\n\n&lt;br&gt;I can decompose the problem such that a UI might be a drag-and-drop, =\r\nan &quot;add-to-cart&quot; button, etc.=A0 More commonly, in my digital lib=\r\nrary case, I&#39;ll have an embedded search feature where I allow the user =\r\nto do an open search over the collection and select any found items to be &=\r\nquot;related&quot; to the current item (and probably provide a pull-down se=\r\nlection of relation types).=A0 &lt;br&gt;\n\n&lt;br&gt;Just under the hood, though, a lin=\r\nk is being created between these two resources.=A0 Since the range of possi=\r\nble links is so huge, I&#39;d find it hard to offer a @rel=3Dbuy link as in=\r\n your example.=A0 I suppose a reasonable extrapolation of that would be to =\r\nprovide a &quot;linker&quot; global resource that would allow me, say, to p=\r\nost form encoded: id_one=3D123&amp;id_two=3D224&amp;relation=3Dcreated-by (=\r\n?).=A0 OR perhaps each item has it&#39;s own &lt;link rel=3D&quot;&lt;a href=\r\n=3D&quot;http://example.org/linker&quot; target=3D&quot;_blank&quot;&gt;http://example.org/linker&lt;=\r\n/a&gt;&quot; href=3D&quot;&lt;a href=3D&quot;http://example.org/item/linker/123&quot; targe=\r\nt=3D&quot;_blank&quot;&gt;http://example.org/item/linker/123&lt;/a&gt;&quot;/&gt; that I could=\r\n post an id and relationship type to (hmmm -- need to provide a way for cli=\r\nent to know the possible relation types -- possibly an atom:link for each r=\r\nelation type that I can POST to?).&lt;br&gt;\n\n&lt;br&gt;Anyway, it gets unwieldy quickl=\r\ny.=A0 It&#39;s unavoidable (I think) that a case in which you might simply =\r\nadd a foreign key or a bridge table when thinking relationally, you need to=\r\n do lots of contortions to do RESTfully.=A0 When all is said and done, link=\r\n headers seems reasonably elegant.=A0 I agree with you, though, that it pot=\r\nentially gives the client too much (unconstrained, or at least not constrai=\r\nned in a discoverable way) ownership of the problem.&lt;br&gt;\n\n&lt;br&gt;--peter&lt;br&gt;&lt;b=\r\nr&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px=\r\n solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;=\r\nbr&gt;&lt;font color=3D&quot;#888888&quot;&gt;\n&lt;br&gt;\nSubbu&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\n=\r\n\n\n\n\n\n&lt;br&gt;\n\n    \n    \n&lt;br&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color: white; clear=\r\n: both;&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--001636c5afb6633ea7046d9c2393--\r\n\n"}}