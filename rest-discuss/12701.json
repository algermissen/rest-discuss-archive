{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":371338898,"authorName":"Bill Burke","from":"Bill Burke &lt;bburke@...&gt;","profile":"patriot1burke","replyTo":"SENDER","senderId":"8Eq_kA9N3A2R8u9qhnEM6AyJd2sQmNLpiDiD3GODxVDHllbqp-e_LiX3pfnitefTmdHII1N2-54Xol4u_RJH7hGyO4j_","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Java mime types?","postDate":"1242990540","msgId":12701,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBMTY4N0NDLjEwOTA0MDZAcmVkaGF0LmNvbT4=","inReplyToHeader":"PGY4YjM5YWNlMDkwNTIxMTkxMW4yMGVjZDg0MmhiYWJiOTI0ZDhmODQyNzRlQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDRBMTVGRTgzLjUwNTA0MDFAcmVkaGF0LmNvbT4gPGY4YjM5YWNlMDkwNTIxMTkxMW4yMGVjZDg0MmhiYWJiOTI0ZDhmODQyNzRlQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12696,"nextInTopic":0,"prevInTime":12700,"nextInTime":12702,"topicId":12690,"numMessagesInTopic":6,"msgSnippet":"... Kinda pointless to use XML or JSON for Java to Java applications. You still get huge benefits from being RESTful though going Java to Java over something","rawEmail":"Return-Path: &lt;bburke@...&gt;\r\nX-Sender: bburke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 75807 invoked from network); 22 May 2009 11:09:08 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m7.grp.re1.yahoo.com with QMQP; 22 May 2009 11:09:08 -0000\r\nX-Received: from unknown (HELO mx2.redhat.com) (66.187.237.31)\n  by mta1.grp.sp2.yahoo.com with SMTP; 22 May 2009 11:09:08 -0000\r\nX-Received: from int-mx2.corp.redhat.com (int-mx2.corp.redhat.com [172.16.27.26])\n\tby mx2.redhat.com (8.13.8/8.13.8) with ESMTP id n4MB93CQ027408;\n\tFri, 22 May 2009 07:09:03 -0400\r\nX-Received: from ns3.rdu.redhat.com (ns3.rdu.redhat.com [10.11.255.199])\n\tby int-mx2.corp.redhat.com (8.13.1/8.13.1) with ESMTP id n4MB92pq001100;\n\tFri, 22 May 2009 07:09:02 -0400\r\nX-Received: from bill-burkes-computer.local (vpn-12-217.rdu.redhat.com [10.11.12.217])\n\tby ns3.rdu.redhat.com (8.13.8/8.13.8) with ESMTP id n4MB91pO030886;\n\tFri, 22 May 2009 07:09:01 -0400\r\nMessage-ID: &lt;4A1687CC.1090406@...&gt;\r\nDate: Fri, 22 May 2009 07:09:00 -0400\r\nUser-Agent: Thunderbird 2.0.0.21 (Macintosh/20090302)\r\nMIME-Version: 1.0\r\nTo: craigmcc@...\r\nCc: REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;4A15FE83.5050401@...&gt; &lt;f8b39ace0905211911n20ecd842hbabb924d8f84274e@...&gt;\r\nIn-Reply-To: &lt;f8b39ace0905211911n20ecd842hbabb924d8f84274e@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Scanned-By: MIMEDefang 2.58 on 172.16.27.26\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Bill Burke &lt;bburke@...&gt;\r\nSubject: Re: [rest-discuss] Java mime types?\r\nX-Yahoo-Group-Post: member; u=371338898; y=q8jaUEMelL54BwCLiKVQ_HpksyTBxxGS3MobFZ3a91cKezVG9IZ6TQ\r\nX-Yahoo-Profile: patriot1burke\r\n\r\n\n\nCraig McClanahan wrote:\n&gt; On Thu, May 21, 2009 at 6:23 PM, Bill Burke &lt;bburke@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Anybody know of any de facto Java-based mime types? I&#39;m basically\n&gt;&gt; looking for ones that allow you to serialize Java objects as your\n&gt;&gt; message body. I did not see any registered at Iana.\n&gt;&gt;\n&gt; \n&gt; Some of the Java serialization related classes I&#39;ve seen (like\n&gt; java.awt.datatransfer.DataFlavor) talk about using\n&gt; &quot;application/x-java-serialized-object&quot; (the &quot;x-&quot; obviously meaning\n&gt; this would no be a registered type).\n&gt; \n&gt; Personally, I would tend to use XML or JSON encoding instead, to avoid\n&gt; requiring Java at the other end of the network pipe.  Then, if I were\n&gt; lazy, I&#39;d just use &quot;application/xml&quot; or &quot;application/json&quot; or, if more\n&gt; industrious, define my own media types ... and (at the Java end of the\n&gt; pipe) let JAXB worry about serialization.\n&gt; \n\nKinda pointless to use XML or JSON for Java to Java applications. You \nstill get huge benefits from being RESTful though going Java to Java \nover something like RMI.\n\nWhen you do Java to Java with XML/JAXB, beyond a huge performance \nproblem, you have a maintainability problem.  Hibernate and JPA Entities \nmake good DTOs in a Java to Java system.  In an XML based one, its \nprobably not a good idea to have Entities and JAXB classes one and the \nsame.  Mainly because of proxying (many Entities are proxied and JAXB \ndoesn&#39;t like proxies with field mappings) and if the schema diverges \nfrom the database schema or Hibernate/JPA mapping.\n\nPersonally, I was kinda hoping for a registered Java media type of:\n\napplication/*+java;version=xxx\n\nWould be cool to make one and register it, but only Sun/Oracle can do \nthis because of trademark infringement.\n-- \nBill Burke\nJBoss, a division of Red Hat\nhttp://bill.burkecentral.com\n\n"}}