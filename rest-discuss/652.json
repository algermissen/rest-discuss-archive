{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"mV9swAWyMvyC8NQlokCFMGtTYifaMXeInWW53LjCe6LQjipPlyqty2Gc2jcfHEuBE3X8-AP5r0AY_1ZMrFhWhdbcL1J8_Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP special?","postDate":"1012775609","msgId":652,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNURCQUI5LjQxQzZGNzE5QHByZXNjb2QubmV0Pg==","referencesHeader":"PDIwMDIwMTMxMjI1MS5SQUEyMzc4MkBtYXJrYmFrZXIuY2E+"},"prevInTopic":528,"nextInTopic":653,"prevInTime":651,"nextInTime":653,"topicId":473,"numMessagesInTopic":11,"msgSnippet":"... I m scared of the term application because we also build applications on top of HTTP. Plus, RPC has its own set of semantics involving parameters, return","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 4 Feb 2002 00:50:22 -0000\r\nReceived: (qmail 80030 invoked from network); 4 Feb 2002 00:50:21 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m12.grp.snv.yahoo.com with QMQP; 4 Feb 2002 00:50:21 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 4 Feb 2002 00:50:21 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g140oIN28799;\n\tSun, 3 Feb 2002 16:50:18 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g140oEe06346;\n\tSun, 3 Feb 2002 16:50:14 -0800\r\nMessage-ID: &lt;3C5DBAB9.41C6F719@...&gt;\r\nDate: Sun, 03 Feb 2002 14:33:29 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Why is HTTP special?\r\nReferences: &lt;200201312251.RAA23782@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nMark Baker wrote:\n&gt; \n&gt;...\n&gt; \n&gt; This is like saying that Ethernet is general purpose.  It&#39;s true, but\n&gt; not too useful.  RPC is a lower layer than HTTP because it defines no\n&gt; application semantics, leaving them for the &quot;API&quot; to define.\n\nI&#39;m scared of the term &quot;application&quot; because we also build applications\non top of HTTP. Plus, RPC has its own set of semantics involving\nparameters, return codes, methods, etc. The word semantics is also a\nmine-field. I&#39;m one of a vocal few people who claim that XML has\nsemantics (angle-brackets are syntax, attributed-trees are semantics). \n\n&gt; Linda, like HTTP and FTP and NNTP, defines the methods.  So you&#39;ve\n&gt; got an application layer contract - a coordination language -\n&gt; between endpoints a priori.\n\nIs SMTP a coordination language? Do we have a definition that can be\nmade precise?\n\n&gt;...\n&gt; &gt; Definitions aside, the point remains: in terms of generality, HTTP has\n&gt; &gt; more in common with SOAP than with SMTP. It is not just about moving\n&gt; &gt; HTML pages from servers to clients.\n&gt; \n&gt; I&#39;d say it&#39;s the other way around.  SMTP &quot;DATA&quot; has a precise\n&gt; meaning, not unlike POST.  \n\nI know you claim that POST&#39;s meaning is precise. ;)\n\n&gt;...\n&gt; &gt; HTTP is similar. HTTP allows you to read from the storage with GET,\n&gt; &gt; write to it with PUT and the addresses are URIs. Because disk space in\n&gt; &gt; the real world is limited, HTTP also has DELETE. And because multiple\n&gt; &gt; people will be using the system at once, there is a need for a method\n&gt; &gt; that will create guaranteed-new &quot;storage locations&quot;.\n&gt; \n&gt; I&#39;d say that POST was the movement of the tape.  PUT creates new\n&gt; locations.\n\nWe disagree on the meaning of POST. What a surprise. ;)\n\nIf we are strict about the idea that URIs are opaque then the client\ndoing the PUT can&#39;t really know what URI to use to create a new\nresource. POST can be used to provide a new URI.\n\n&gt; &gt; FTP is the closest protocol to HTTP conceptually. But really the gap\n&gt; \n&gt; I think NNTP is probably closest.  It has POST (that&#39;s where HTTP&#39;s\n&gt; POST came from), a basic get (ARTICLE), and a very specific type of\n&gt; put (for setting read messages).\n\nFTP has a more general GET (i.e. it has a concept of hierarchy and\nfilenames) and PUT.\n\n&gt; &gt; important, though, FTP&#39;s semantics do not allow the server to be an\n&gt; &gt; active participant in the computation. HTTP very precisely defines how\n&gt; &gt; the server can do complicated computations by itself. It is not just a\n&gt; &gt; holder of bits -- it can embody a complex service!\n&gt; \n&gt; You mean the app here I guess.  You should distinguish between the\n&gt; web server and the web app.\n\nOkay.\n\n&gt; &gt; efficiency and modeling simplicity. For instance WebDAV has a LOCK\n&gt; &gt; method which could be modeled as a POST of a LOCk object. In theory the\n&gt; \n&gt; PUT actually, since it is defined absolutely.\n\nOkay.\n\n&gt;...\n&gt; \n&gt; &gt; I say &quot;quasi-universal&quot; because there are limits. Just as XML isn&#39;t\n&gt; &gt; really great for binary media, HTTP isn&#39;t really great for streaming\n&gt; &gt; real-time media. So for those applications you should use something\n&gt; &gt; else.\n&gt; \n&gt; (though perhaps with HTTP&#39;s application semantics)\n\nOkay.\n\n&gt; &gt; There is no doubt that HTTP has its limitations. For one thing there is\n&gt; &gt; not much software out there that knows how to deal with HTTP in a\n&gt; &gt; peer-to-peer or asychronous fashion.\n&gt; \n&gt; I don&#39;t know what that means.\n\nDefine client as a device with potentially transient connectivity,\ndirectly controlled by an end-user.\nDefine server as a device with persistent connectivity not controlled by\nan end-user.\n\nThere is not much software out there that uses HTTP to have servers\ncontact clients, or servers to contact servers using HTTP. This is\nimportant because it means that firewalls are not appropriately\nconfigured for that sort of usage. Thus, KnowNow single-byte hacks.\n\n Paul Prescod\n\n\n\n"}}