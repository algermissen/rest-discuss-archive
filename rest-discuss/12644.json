{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":300479819,"authorName":"Colin Jack","from":"Colin Jack &lt;colin.jack@...&gt;","profile":"colin.jack","replyTo":"SENDER","senderId":"-Ns3fhOzqHZ2F_L9Ec4T4i_sQRiqyQZKiEQgXG0iUWrcLQmm_Wa3p2bTPTRGOZENiPMo3ys7FtvlTNYzRpBGNUxjecWNW9lK","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] CommandQuerySeparation and REST?","postDate":"1242744871","msgId":12644,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE5YzM3NTc5MDkwNTE5MDc1NHg0ODJiM2Y3YXI0Y2M5ZWYzMTJiMmRmNjNlQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ5RkY5NkFELjkwNjA3MDBAZ21haWwuY29tPg==","referencesHeader":"PDQ5RkY5NkFELjkwNjA3MDBAZ21haWwuY29tPg=="},"prevInTopic":12573,"nextInTopic":12646,"prevInTime":12643,"nextInTime":12645,"topicId":12555,"numMessagesInTopic":39,"msgSnippet":"... I realize CQS is a big thing right now particularly in the DDD/messaging sense, but I m wondering why your choosing to combine CQS and REST? Plus the style","rawEmail":"Return-Path: &lt;colin.jack@...&gt;\r\nX-Sender: colin.jack@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 85073 invoked from network); 19 May 2009 14:55:52 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m8.grp.re1.yahoo.com with QMQP; 19 May 2009 14:55:52 -0000\r\nX-Received: from unknown (HELO mail-ew0-f214.google.com) (209.85.219.214)\n  by mta2.grp.re1.yahoo.com with SMTP; 19 May 2009 14:55:51 -0000\r\nX-Received: by ewy10 with SMTP id 10so6445048ewy.31\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 19 May 2009 07:54:51 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.3.79 with SMTP id 57mr29293weg.166.1242744891221; Tue, 19 \n\tMay 2009 07:54:51 -0700 (PDT)\r\nIn-Reply-To: &lt;49FF96AD.9060700@...&gt;\r\nReferences: &lt;49FF96AD.9060700@...&gt;\r\nDate: Tue, 19 May 2009 15:54:31 +0100\r\nMessage-ID: &lt;a9c375790905190754x482b3f7ar4cc9ef312b2df63e@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016364d2047c9a8e3046a45172c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Colin Jack &lt;colin.jack@...&gt;\r\nSubject: Re: [rest-discuss] CommandQuerySeparation and REST?\r\nX-Yahoo-Group-Post: member; u=300479819; y=fqaFwBo1f7WLlGMtxgQ7E7Hll9iGpqho-nPX0Kg71QXbLA5TTA\r\nX-Yahoo-Profile: colin.jack\r\n\r\n\r\n--0016364d2047c9a8e3046a45172c\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&gt; This means that clients call queries to get state/views out,\n&gt; then perform commands on that which are sent back to the server. In\n&gt; other words, clients never ever send state back, only commands.\n\nI realize CQS is a big thing right now particularly in the DDD/messaging\nsense, but I&#39;m wondering why your choosing to combine CQS and REST?\n\nPlus the style of CQS that Udi/Greg others are talking about (which I think\nis influencing this) is a strict seperation, maybe you could do the same but\nuse REST just for the Q?\n\nAlternatively if it&#39;s just CQS in general that you need then can you not go\nfor this by just carefully using the HTTP verbs (GET/OPTIONS vs\nPUT/POST/DELETE)?\n\n\n&gt; There is a domain model on the server which interprets and executes this\nand all the domain logic around it.\n\nIsn&#39;t one approach just to use ROA but when its a PUT you take the incoming\nrepresentation, work out what commands to apply based on it, and then apply\nthose to the domain model?\n\nYou might also be interested in this thread of posts, I think some of them\ncover messaging over REST type designs:\n\nhttp://duncan-cragg.org/blog/post/distributed-observer-pattern-rest-dialogues/\n\r\n--0016364d2047c9a8e3046a45172c\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&gt; This means that clients call queries to get state/views out,&lt;br&gt;\n&gt; then perform commands on that which are sent back to the server. In&lt;br&gt;\n&gt; other words, clients never ever send state back, only commands. &lt;br&gt;\n&lt;br&gt;\nI realize CQS is a big thing right now particularly in the\nDDD/messaging sense, but I&#39;m wondering why your choosing to combine CQS\nand REST? &lt;br&gt;\n&lt;br&gt;\nPlus the style of CQS that Udi/Greg others are talking about (which I\nthink is influencing this) is a strict seperation, maybe you could do\nthe same but use REST just for the Q?&lt;br&gt;\n&lt;br&gt;\nAlternatively if it&#39;s just CQS in general that you need then can you\nnot go for this by just carefully using the HTTP verbs (GET/OPTIONS vs\nPUT/POST/DELETE)?&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&gt; There is a domain model on the server which interprets and executes this and all the domain logic around it.&lt;br&gt;\n&lt;br&gt;\nIsn&#39;t one approach just to use ROA but when its a PUT you take the\nincoming representation, work out what commands to apply based on it,\nand then apply those to the domain model? &lt;br&gt;\n&lt;br&gt;\nYou might also be interested in this thread of posts, I think some of them cover messaging over REST type designs:&lt;br&gt;\n&lt;br&gt;\n&lt;a href=&quot;http://duncan-cragg.org/blog/post/distributed-observer-pattern-rest-dialogues/&quot;&gt;http://duncan-cragg.org/blog/post/distributed-observer-pattern-rest-dialogues/&lt;/a&gt;&lt;br&gt;\n\r\n--0016364d2047c9a8e3046a45172c--\r\n\n"}}