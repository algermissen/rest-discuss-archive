{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"uIw7Jnc-llZOhkW2c-2WoPumypLq9DMw9jd9N7bUGWEovoz45vylCHzzlXH_wsP8hm7V40qFx2rgKRJgGl-C6bw0za6DP5qo8u_YivXzQyc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Idea for a REST client","postDate":"1267276897","msgId":14935,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEEwODMwMERELTQ1MzMtNDk0Ny1BNDEzLTcxODgxOEM0MTdBN0BtYWMuY29tPg==","inReplyToHeader":"PDFBRDNCRjgyLTQ5ODItNEFDMC1CRjM1LTRCMTg0QkFGN0Y0NkBnbWFpbC5jb20+","referencesHeader":"PDFBRDNCRjgyLTQ5ODItNEFDMC1CRjM1LTRCMTg0QkFGN0Y0NkBnbWFpbC5jb20+"},"prevInTopic":14934,"nextInTopic":14937,"prevInTime":14934,"nextInTime":14936,"topicId":14934,"numMessagesInTopic":11,"msgSnippet":"Jan ... The problem (from a RESTfulness POV) with this is that the code assumes a certain state machine of the application. If the server decides to change","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98346 invoked from network); 27 Feb 2010 16:32:27 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m11.grp.re1.yahoo.com with QMQP; 27 Feb 2010 16:32:27 -0000\r\nX-Received: from unknown (HELO asmtpout026.mac.com) (17.148.16.101)\n  by mta3.grp.sp2.yahoo.com with SMTP; 27 Feb 2010 16:32:27 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [192.168.2.102] ([84.144.51.112])\n by asmtp026.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KYI00ET9542U280@...&gt; for\n rest-discuss@yahoogroups.com; Sat, 27 Feb 2010 05:21:42 -0800 (PST)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=5.0.0-0908210000 definitions=main-1002270083\r\nIn-reply-to: &lt;1AD3BF82-4982-4AC0-BF35-4B184BAF7F46@...&gt;\r\nDate: Sat, 27 Feb 2010 14:21:37 +0100\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;A08300DD-4533-4947-A413-718818C417A7@...&gt;\r\nReferences: &lt;1AD3BF82-4982-4AC0-BF35-4B184BAF7F46@...&gt;\r\nTo: Jan Vincent &lt;jvliwanag@...&gt;\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Idea for a REST client\r\nX-Yahoo-Group-Post: member; u=289191104; y=4CpL4G05fWwc0nVF5GSASUaYJkV21pfHH_m7YuX2DuuYWc4VKggXQZTs\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nJan\n\nOn Feb 27, 2010, at 10:15 AM, Jan Vincent wrote:\n\n&gt; \n&gt; \n&gt; Hi guys,\n&gt; \n&gt; I wish to create a framework for accessing REST resources over HTTP. I wish to focus on xhtml Content-Type in particular. The idea is that the developer would provide instructions on how to get to the resource from a single URL.\n&gt; \n&gt; Implementation-wise however, the framework would provide all the necessary plumbing to take care of caching and what not.\n&gt; \n&gt; Consider three resources:\n&gt; \n&gt; Root Resource - primary URL (&quot;/&quot;), entry point for the service, has a link to the User List\n&gt; User List - lists all users, on GET, may accept a query string &quot;email&quot; to search for a specific user, contains link to the users&#39; respective profiles\n&gt; User Profile - the profile of a user\n&gt; \n&gt; In order to implement something like get_user_by_email, the developer would have to describe how to get from the Root Resource to the User Profile. In code, a developer using the framework would do something like:\n&gt; \n&gt; get_user_by_email(email) {\n&gt;   from(&quot;/&quot;)\n&gt;     .on(200) { |Root|\n&gt;       Root.follow(&quot;#users_link&quot;)\n&gt;         .on(200) { |Users|\n&gt;           Users.fill_in(&quot;#search_form&quot;, {&quot;email&quot;: email})\n&gt;             .on(200) { |SearchResult|\n&gt;                SearchResult ...get_first_result...\n&gt;                  .on(200) { |Profile|\n&gt;                    return profile_to_some_struct(Profile)\n&gt;                  }\n&gt;             }\n&gt;         }\n&gt;     }\n&gt; }\n&gt; \n&gt; I&#39;m still working on how to best express this intent as code, and it&#39;s pretty ugly now I must admit.\n\nThe problem (from a RESTfulness POV) with this is that the code assumes a certain state machine of the application. If the server decides to change that state machine, the code will break.\n\nIf the service publishes information that allows the client to make such assumptions as manifested by the code above, the service is not RESTful but is an &quot;HTTP-based Type I&quot; &lt;http://nordsc.com/ext/classification_of_http_based_apis.html#http-type-one&gt; (or &quot;HTTP-based Type II&quot;) API.\n\nIf the server does not publish such information the code above just represents guess-work which would be worse because the coupling would actually be hidden inside the code.\n\nWhen you think about such a framework approach, keep in mind that it will lead to tightly coupled systems no matter how &quot;Webby&quot; the system looks. If the service evolves, the client will break.\n\nWhether this is actually a bad thing depends on the requirements - maybe long term evolvability has been traded for getting something started fast and maybe the expected system lifetime is so short that evolvability does not matter, but you need to be aware of this to make an informed decision.\n\nJan\n\n\n\n\n&gt; \n&gt; However, the framework doesn&#39;t really execute the instructions by the developer directly. Instead, it uses its built in cache to get the result. From the example above, the framework would do things in reverse:\n&gt; \n&gt; 1. Is there a cache* of the result to a call to get_user_by_email(email)? If YES, return prior result, If NO, go to step 2\n&gt; 2. Is there a cache of the result to a call getting the search matches of a user given a specified email? If YES, using that result, go down the code -- following the link to the user profile, then returning the result. If NO, go to step 3.\n&gt; 3. Is there a cache of the list of users? If YES, go on and fill in the search form, etc. If NO, go to step 4\n&gt; 4. Is there a cache of the root resource? If YES, go back steps 3,2,1. If NO, get the root resource, and then go further back the steps.\n&gt; \n&gt; * When I say cached, I generally mean that there has been a prior call, and the result was cached AND the cache hasn&#39;t expired yet based on the server cache instructions\n&gt; \n&gt; The framework forms a tree of possible scenarios. It starts from the most optimistic test (step 1) on the leaf, and if it fails, goes back to its parent.\n&gt; \n&gt; I believe this would be useful especially if the applications that are going to be built don&#39;t follow the UI style of web pages following linked documents. Is this a HATEOAS respecting client? I&#39;d truly appreciate some inputs.\n&gt; \n&gt; FYI, I&#39;ll start development of an Erlang version at http://bitbucket.org/jvliwanag/restr/ . Though, there&#39;s nothing there yet now. Hehe.\n&gt; \n&gt; Jan Vincent Liwanag\n&gt; jvliwanag@...\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}