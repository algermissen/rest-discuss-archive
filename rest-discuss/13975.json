{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"Hba1b0I14xCPX8XHUTrekEdoBwvimP-HjhwV5mlfQ31PxJGDDCmSQ8rWtIVgY3MNMIPmlRFBrlITuYjHs06poPhWXEwi2qFj6mQ0d2pCka8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &#39;No application data on client&#39; constraint? was: RESTful ordering and order-rejection","postDate":"1257106631","msgId":13975,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENDMEFBNkIxLTQwMzYtNDBFNC1COTIzLUMwMDhENjc5NkUwNUBtYWMuY29tPg==","inReplyToHeader":"PDJCNkI4NDNFLTVGNDUtNENCQy05QzM5LTBBMkY4RDMwQTk1QUBtYWMuY29tPg==","referencesHeader":"PDJCNkI4NDNFLTVGNDUtNENCQy05QzM5LTBBMkY4RDMwQTk1QUBtYWMuY29tPg=="},"prevInTopic":13974,"nextInTopic":13978,"prevInTime":13974,"nextInTime":13976,"topicId":13970,"numMessagesInTopic":18,"msgSnippet":"... I am trying to rule out the abve approach by deriving from REST s constraints. Here is my thinking: I assume (because I am not able yet to derive that from","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 32309 invoked from network); 1 Nov 2009 20:17:39 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m5.grp.sp2.yahoo.com with QMQP; 1 Nov 2009 20:17:39 -0000\r\nX-Received: from unknown (HELO asmtpout011.mac.com) (17.148.16.86)\n  by mta3.grp.re1.yahoo.com with SMTP; 1 Nov 2009 20:17:39 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.102] ([84.144.56.187])\n by asmtp011.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KSG00D5Z5OOW870@...&gt; for\n rest-discuss@yahoogroups.com; Sun, 01 Nov 2009 12:17:16 -0800 (PST)\r\nMessage-id: &lt;CC0AA6B1-4036-40E4-B923-C008D6796E05@...&gt;\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-reply-to: &lt;2B6B843E-5F45-4CBC-9C39-0A2F8D30A95A@...&gt;\r\nDate: Sun, 01 Nov 2009 21:17:11 +0100\r\nReferences: &lt;2B6B843E-5F45-4CBC-9C39-0A2F8D30A95A@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] &#39;No application data on client&#39; constraint? was:\n RESTful ordering and order-rejection\r\nX-Yahoo-Group-Post: member; u=289191104; y=DUowXftj3Fql457aT3VRgO4NdoeCMd51WOs8r5tEXAI3ydcbw3BILQoL\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Oct 31, 2009, at 12:01 AM, Jan Algermissen wrote:\n\n&gt; Hi,\n&gt;\n&gt; suppose the following media types do exist:\n&gt;\n&gt; - application/procurement-order for orders\n&gt; - application/procurement-orderrejection for order rejections\n&gt;\n&gt; also suppose the client knows there is a resource at /order-processor\n&gt; that accepts orders in application/procurement-order media type.\n&gt;\n&gt; What if the client submits an order and the server wants to reject\n&gt; the order (maybe because the requested items are permanently out\n&gt; of stock)? What return code would the server use and does it make\n&gt; sense to send the order rejection document as the body of the\n&gt; (error-)response?\n\nI am trying to rule out the abve approach by deriving from REST&#39;s  \nconstraints.\nHere is my thinking:\n\nI assume (because I am not able yet to derive that from the REST  \nconstraints)\nthat there is an implicit constraint in REST that demands all  \napplication data\nto be stored on the server.\n\nTo put this in other words: a client must be able to perform any of  \nthe next\npossible transitions in an application soley based on the responses  \npreviously\nreceived. The client-server collaboration must not be designed in a  \nway that\nrequires a client to keep track of its own requests.\n\nApplied to my question above I think that a RESTful solution demands  \nthat the\nserver creates application data as the basis for subsequent  \ninteractions and\nthen instructs the client how to procede through the application. (This\nimplies a solution where the order is created on the server and marked  \nas\n&#39;pending&#39; to provide the application data. The client would then alter  \nthe\norder (the application data) to &#39;fix&#39; the (item-out-of-stock-)problem.\n\nThe solution proposed in my original posting on the other hand would\nrequire the client to record it&#39;s own order and apply the suggested  \nchange to it\nbefore repeating the original request.\n\n(Aside: is maintaining application data on both, client and server a  \nproperty of\nmessaging styles?)\n\nGenerally, I have for some time now wondered what could be used as a  \nguiding\nprinciple for answering the question when to create a resource on the  \nserver?\n(*Why* create a resource instead of just sending an answer document  \nlike you\nwould do in synchronous messaging).\n\nWhen the resource is seen as application data, the answer would be  \nthat resources\nmust be created when otherwise application data would have to be  \nrecorded on the\nclient side (which we do not want according to my above reasoning).\n\nI am not really satisfied with the &#39;flow&#39; of this argumentation yet -  \ncomments/criticism\nwould be very welcome.\n\nJan\n\n\n\n\n\n\n\n\n&gt;\n&gt; Example:\n&gt;\n&gt;\n&gt; -&gt;\n&gt; POST /order=processor\n&gt; Content-Type: application/procurement-order\n&gt;\n&gt; &lt;the order XML goes here&gt;\n&gt;\n&gt; 409 Confilct\n&gt; Content-Type: application/procurement-orderrejection\n&gt;\n&gt; &lt;xml of order rejection document goes here, maybe\n&gt; telling the client how to fix the problem (e.g.\n&gt; suggesting similar goods that are in stock)&gt;\n&gt;\n&gt;\n&gt; Does that make sense? And if not - how else to do it?\n&gt;\n&gt; Hmm, an alternative would be to create an order request resource and\n&gt; not just an order resource and make the rejection part of the\n&gt; representation of the order request:\n&gt;\n&gt; POST /order-processor\n&gt; Content-Type: application/procurement-order\n&gt;\n&gt; 201 Created\n&gt; Location /order-processor/order-requests\n&gt; Content-Type: application/order-request\n&gt;\n&gt; &lt;XML representing the state of the order-request, which at the  \n&gt; moment is\n&gt; &#39;rejected&#39;&gt;\n&gt;\n&gt;\n&gt; A client could then PUT/PATCH the order to fix the problem according  \n&gt; to\n&gt; suggestions made in the order-request response.\n&gt;\n&gt;\n&gt; Does that sound better?\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n--------------------------------------\nJan Algermissen\n\nMail: algermissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalgermissen.com\n--------------------------------------\n\n\n\n\n"}}