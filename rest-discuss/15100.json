{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":364579677,"authorName":"Mike Kelly","from":"Mike Kelly &lt;mike@...&gt;","profile":"pleb1985","replyTo":"SENDER","senderId":"TcoN7fmvRmuPB4sHl2MAWJj5ePxcAPps-iWrerWh84Pox6gNZLR36jGzlH1U_YoyHPbfjn_MOb6M7ADBvKzTLQms2GrPkQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Hypermedia controls","postDate":"1270203526","msgId":15100,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCQjVDNDg2LjkwNTAyMDdAbXlrYW5qby5jby51az4=","inReplyToHeader":"PDRBNzk3N0U2LUNDRUMtNEI5Mi05NjhFLTBGQjQzNTdDMTc5M0BtYWMuY29tPg==","referencesHeader":"PDQ2OTk5NC4yNzQ4LnFtQHdlYjU1OTAyLm1haWwucmUzLnlhaG9vLmNvbT4gPDRBNzk3N0U2LUNDRUMtNEI5Mi05NjhFLTBGQjQzNTdDMTc5M0BtYWMuY29tPg=="},"prevInTopic":15081,"nextInTopic":0,"prevInTime":15099,"nextInTime":15101,"topicId":15049,"numMessagesInTopic":27,"msgSnippet":"... I disagree with that point because the intention of the link (which is what the client cares about) does not alter with regards to changes on the server","rawEmail":"Return-Path: &lt;mike@...&gt;\r\nX-Sender: mike@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47020 invoked from network); 2 Apr 2010 10:18:53 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m10.grp.re1.yahoo.com with QMQP; 2 Apr 2010 10:18:53 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.187)\n  by mta1.grp.re1.yahoo.com with SMTP; 2 Apr 2010 10:18:53 -0000\r\nX-Received: from [192.168.1.51] (206-219.ngn1.newtelsolutions.net [213.133.206.219])\n\tby mrelayeu.kundenserver.de (node=mreu1) with ESMTP (Nemesis)\n\tid 0MT3ze-1O5rBh0QnW-00RtGy; Fri, 02 Apr 2010 12:18:47 +0200\r\nMessage-ID: &lt;4BB5C486.9050207@...&gt;\r\nDate: Fri, 02 Apr 2010 11:18:46 +0100\r\nUser-Agent: Thunderbird 2.0.0.24 (X11/20100317)\r\nMIME-Version: 1.0\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Kevin Duffey &lt;andjarnic@...&gt;, \n REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;469994.2748.qm@...&gt; &lt;4A7977E6-CCEC-4B92-968E-0FB4357C1793@...&gt;\r\nIn-Reply-To: &lt;4A7977E6-CCEC-4B92-968E-0FB4357C1793@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: V01U2FsdGVkX19BZi84VLnjgAEybv1/I2EIRLl536/1GOMRuaX\n UrY8TXMf9jAUsvZMw9ItchJ/y1xzDPjLKM16/SVaXPVkzT84ve\n Jhe8zXTg83VHvuHQSmgY4rt5Hk8671s\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mike Kelly &lt;mike@...&gt;\r\nSubject: Re: [rest-discuss] Hypermedia controls\r\nX-Yahoo-Group-Post: member; u=364579677; y=b9nBeofia6K-9MEMAaTM72CGkKyXBqlnTS9IlPpqUHiXtFg\r\nX-Yahoo-Profile: pleb1985\r\n\r\nJan Algermissen wrote:\n&gt; On Mar 26, 2010, at 5:58 AM, Kevin Duffey wrote:\n&gt;\n&gt;   \n&gt;&gt;&gt; So what? The type attributes are only hints anyway, not guarantees.\n&gt;&gt;&gt;       \n&gt;&gt; Huh? What do you mean they are not guarantees? If a link element says type=&quot;application/vnd.package.serviceName+xml&quot;, why would I not use it.. or why would it only be a hint? \n&gt;&gt;     \n&gt;\n&gt; Because the server might change between you looking at the type atribute and your actual request. The server will tell you what the media type of its response is right there, in the response. And you just need to deal with what you get.\n&gt;   \n\nI disagree with that point because the intention of the link (which is \nwhat the client cares about) does not alter with regards to changes on \nthe server side. I don&#39;t see the point in a type attribute if it is not \nintended as a &#39;guarantee&#39; of the correct terms of negotiation for that \nstep of the application. I agree that it&#39;s not intended as a guarantee \nof the response but this is due specifically to statelessness and the \nway that the conneg mechanism is defined by HTTP.\n\nI can&#39;t think of a good reason a client, if it understands such an \nattribute, should not alter its Accept header accordingly.\n\n\n&gt;&gt;  It sounds like what you are saying is, if there is no type=&quot;&quot; with it, just make a call to it, and it will return back in the Content-Type of the response the media type. So then use that. Is that right?\n&gt;&gt;     \n&gt;\n&gt; Well, of course :-) And even if there is a type attribute it is still the same. A type attribute is just another form of client driven content negotiation that removes the roundtrip you would have with a 300 Multiple Choices response: instead of selecting an alternative from the 300 response&#39;s body the server gives you the alternatives up front.\n&gt;\n&gt;   \n\nIf it&#39;s &quot;client driven content negotiation&quot; then why would this not \nalter the way clients express their preferences in that given instance \ni.e. why would a client not alter their Accept header to reflect the \ndesire for an application state the link is driving them towards?\n\n\n&gt;&gt; I don&#39;t quite understand tho.. what call am I making to the service? If for example I get back a service named xxyyzz, I set up my request with that URL, I don&#39;t know the media type, so I dont&#39; set Content-Type or Accept headers, because I simply don&#39;t know yet.\n&gt;&gt;     \n&gt;\n&gt; Wrong! You know what *you* can handle, right? That is what you put into the Accept header. The Accept header communicates the client&#39;s capabilities, not it&#39;s assumptions.\n&gt;   \n\nWrong! It communicates client capabilities if, and only if, the \nhypermedia driving the client&#39;s application state has not been specific \nin the given link.\n\nWhich is supported by 2616 where the Accept header is defined to \nrepresent the preferences of a *request*, not a client:\n\n&quot; Accept headers can be used to indicate that the request is \nspecifically limited to a small set of desired types, as in the case of \na request for an in-line image.&quot;\n\n\nCheers,\nMike\n\n"}}