{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"-n8LEhnLzhk4nAs5cuOepKqwsa9FhBR_yM09_j-uy-SBfw8PocwbUdtaPgPRi_COI1futw8dtAYa4H118Ow-HbyTb0uzTtNqcw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Help- How to explain RESTful machine clients","postDate":"1198093072","msgId":10018,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDcxMjE5MTEzN3M1Yjk3YTdhNGs1NWRkNWE3NWE0MzM5ZjgyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGM4MjA0NTQzMDcxMjE4MDg1MXdhM2I2ZGM3eWNkNTkzZThhMWZjN2I5ZmNAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PGM4MjA0NTQzMDcxMjEyMTQzNWoxZDQ3Yzk5ZnAyOWNiMGY4YzRlZTlhOGQ1QG1haWwuZ21haWwuY29tPgkgPDUwMzdiNmU0MDcxMjE0MTczM3AzZjRhYzhiMGlmMDYyN2M2ZWFkN2FlYjU4QG1haWwuZ21haWwuY29tPgkgPGM4MjA0NTQzMDcxMjE4MDg1MXdhM2I2ZGM3eWNkNTkzZThhMWZjN2I5ZmNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":10011,"nextInTopic":0,"prevInTime":10017,"nextInTime":10019,"topicId":9961,"numMessagesInTopic":6,"msgSnippet":"... I would phrase it slightly differently: 1.  It must be subject to automation, i.e. be able to devise an algorithm that will run its course. 2.  It must","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 59346 invoked from network); 19 Dec 2007 19:37:53 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m56.grp.scd.yahoo.com with QMQP; 19 Dec 2007 19:37:53 -0000\r\nX-Received: from unknown (HELO nf-out-0910.google.com) (64.233.182.189)\n  by mta17.grp.scd.yahoo.com with SMTP; 19 Dec 2007 19:37:53 -0000\r\nX-Received: by nf-out-0910.google.com with SMTP id b21so1775568nfd.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 19 Dec 2007 11:37:52 -0800 (PST)\r\nX-Received: by 10.86.4.2 with SMTP id 2mr9200068fgd.77.1198093072198;\n        Wed, 19 Dec 2007 11:37:52 -0800 (PST)\r\nX-Received: by 10.86.71.6 with HTTP; Wed, 19 Dec 2007 11:37:52 -0800 (PST)\r\nMessage-ID: &lt;5037b6e40712191137s5b97a7a4k55dd5a75a4339f82@...&gt;\r\nDate: Wed, 19 Dec 2007 11:37:52 -0800\r\nTo: &quot;John D. Heintz&quot; &lt;jheintz@...&gt;\r\nCc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;c82045430712180851wa3b6dc7ycd593e8a1fc7b9fc@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;c82045430712121435j1d47c99fp29cb0f8c4ee9a8d5@...&gt;\n\t &lt;5037b6e40712141733p3f4ac8b0if0627c6ead7aeb58@...&gt;\n\t &lt;c82045430712180851wa3b6dc7ycd593e8a1fc7b9fc@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] Help- How to explain RESTful machine clients\r\nX-Yahoo-Group-Post: member; u=319607554; y=NtnQjyFCiT1IXW8VPcdrqFZUAlpueCziKFavQR9bKJDwO3udUg\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn 12/18/07, John D. Heintz &lt;jheintz@...&gt; wrote:\n&gt; Assaf,\n&gt;\n&gt; Thanks for restating your point on list. (I&#39;ve trained my fingers on\n&gt; GMail to always use &#39;a&#39; instead of &#39;r&#39;, :)\n&gt;\n&gt; I second these points you make:\n&gt; * interface definition languages work to some degree\n&gt; * something else would provide &quot;REST with benefits&quot; and be of the web\n&gt;\n&gt; The example you are working from (2 services communicating P2P) is\n&gt; still too complicated for me at this stage. The two scenarios that I\n&gt; think are important to describe is:\n&gt; 1) A machine client that can automate interaction with multiple REST\n&gt; services that support a shared hypermedia schema\n&gt; 2) The same client continuing to work against a REST service that is\n&gt; &quot;evovled&quot; with new functionality.\n\nI would phrase it slightly differently:\n\n1.  It must be subject to automation, i.e. be able to devise an\nalgorithm that will run its course.\n2.  It must take the form of a spec, i.e. be able to develop and test\ncomponents of the system in isolation.\n3.  It must minimize coupling, i.e. accommodate additions to the spec\nand localize changes to components.\n\nAutomation.  I think there&#39;s a lot of benefits we can derive from REST\nin that area, and fortunately the technology is catching up, that SOAP\n(with or without the envelope) is no longer the obvious choice.  But\nthey key is applying the REST principles to something that is\nfundamentally not human-driven, which may end up taking a slightly\ndifferent form.  I think this change is good, just a matter of where\nwe take it from here.\n\nSpecs.  In my world that&#39;s mandatory, adherence to the spec is the\nfirst constraint applied to a service.  I don&#39;t buy the notion that\ndelivering self-descriptive messages is a sufficient architecture.  I\ndon&#39;t even buy that it works for HTML and Web sites, just consider how\nmany end-users leaving sites in frustration over the UI.  Even the\nsimple act of measuring the UI againt user expectation, employee\ntraining and helpdesk support, all require a spec.\n\nOnce you solve the spec problem -- and I&#39;m not saying there&#39;s a\nsingular solution -- a lot of possibilities open up.  Test-driven\ndevelopment, development in parallel tracks, utilizing existing\nservices (including SaaS), and change management.  Just being able to\ntell which change is an implementation detail, and which one will\nbring the company to a halt, and acting in accordance.\n\nCoupling.  The goal is to minimize coupling, making the difference\nbetween that which is necessarily coupled and that which is not.  The\nidea that I can drive a stock trading service to behave like a\nconference scheduling service is absurd, but choosing one over the\nother is a form of coupling.  It should be possible to add new\nfeatures to the scheduling service without breaking existing clients,\nbut also to realize which changes will break clients, and which\nclients absolutely demand the new functionality.\n\nAssaf\n\n\n\n&gt;\n&gt; John\n&gt;\n&gt; On Dec 14, 2007 7:33 PM, Assaf Arkin &lt;assaf@...&gt; wrote:\n&gt; &gt; On 12/12/07, John D. Heintz &lt;jheintz@...&gt; wrote:\n&gt; &gt; &gt; Hello all,\n&gt; &gt; &gt;\n&gt; &gt; &gt; Please help me explain this stuff better, or just correct what I&#39;ve written.\n&gt; &gt; &gt;\n&gt; &gt; &gt; In my blog I called [1] JJ Dubray out for claiming that REST &quot;cannot\n&gt; &gt; &gt; efficiently deal with the state changes (content and lifecycle) of a\n&gt; &gt; &gt; resource&quot;.\n&gt; &gt; &gt;\n&gt; &gt; &gt; In later comments and further posting by JJ the real issue is:\n&gt; &gt; &gt;  &quot;what must be shared between a provider and consumer&quot;\n&gt; &gt;\n&gt; &gt; So once again, like clock-work my e-mail client decided to reply but\n&gt; &gt; not to the list, and I ended up in a private conversation about this\n&gt; &gt; with John.  Too long to summarize the entire thread, but here&#39;s the\n&gt; &gt; gist of the point I&#39;m trying to make.\n&gt; &gt;\n&gt; &gt; We know the stuff JJD is talking about works for SOAP with various\n&gt; &gt; levels of success, call if 1st generation Web services if you will,\n&gt; &gt; now how do we move forward and apply it to REST?  And I&#39;m talking\n&gt; &gt; about REST with benefits, not RPC over HTTP, so obviously things will\n&gt; &gt; translate differently, you&#39;ll end up designing processes in a\n&gt; &gt; different way to take advantage of REST characteristics.  But what\n&gt; &gt; would it look like?\n&gt; &gt;\n&gt; &gt; The key problem here is composition.\n&gt; &gt;\n&gt; &gt; The simplest use case I could come up with is this.\n&gt; &gt;\n&gt; &gt; We have a workflow and a task manager.  The workflow pushes tasks to\n&gt; &gt; the task manager, people use the task manager to manage and perform\n&gt; &gt; these tasks, and the outcomes are fed back to the workflow.\n&gt; &gt;\n&gt; &gt; The task manager is a resource, so is every task created there, so you\n&gt; &gt; can imagine using POST to create tasks, PUT to update them, ETags for\n&gt; &gt; caching and conflict resolution, and all other good things.\n&gt; &gt;\n&gt; &gt; The workflow also has a resource, an outcome, that the task manager\n&gt; &gt; updates when the task completes, or deletes if the task is cancelled.\n&gt; &gt;\n&gt; &gt; So they&#39;re acting as P2P, and I&#39;m picking this as a typical scenario\n&gt; &gt; indicative of more complex composition problems we&#39;re seeing out\n&gt; &gt; there, but simple enough to wrap my head around it.\n&gt; &gt;\n&gt; &gt; We have two teams.  Team red is working on the workflow, which does a\n&gt; &gt; lot of other things, not interesting for this discussion.  Team blue\n&gt; &gt; is working on the task manager.  We&#39;re digging a tunnel from both\n&gt; &gt; sides planning to meet in the middle and open it up for traffic.\n&gt; &gt;\n&gt; &gt; What is the minimum shared understanding that both teams need to make\n&gt; &gt; it happen?\n&gt; &gt;\n&gt; &gt; If I&#39;m using tools to help with the design, build test case scenarios,\n&gt; &gt; change management in future versions, what artifacts would I need?\n&gt; &gt;\n&gt; &gt; And what would make the end result compelling over WS-* and beneficial\n&gt; &gt; in its usage of REST?\n&gt; &gt;\n&gt; &gt; Assaf\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt; --\n&gt; John D. Heintz\n&gt; Principal Consultant\n&gt; New Aspects of Software\n&gt; http://newaspects.com\n&gt; http://johnheintz.blogspot.com\n&gt; Austin, TX\n&gt; (512) 633-1198\n&gt;\n\n"}}