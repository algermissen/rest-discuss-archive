{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"Z3H52DnS3tjW5cpGtSA07c3rj6f8oFMHksBn4hnwvtxK5r-LQ6I9PMsZ8UkfjcFpJIJHvRZaqPCMwRiIS0qUy6izojYmXIdrfNphx794vQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Restifying Available to Promise","postDate":"1019876208","msgId":1100,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNDBTYlBrUHVPbHZYNkQ5NmQwMDAwMGM4OEBob3RtYWlsLmNvbT4=","referencesHeader":"PDAwM2MwMWMxZWQ4OCQ2MzRjZmU5MCRmM2E4YTQ0MEBERVVUU0NIODEwMD4="},"prevInTopic":1099,"nextInTopic":1101,"prevInTime":1099,"nextInTime":1101,"topicId":1031,"numMessagesInTopic":30,"msgSnippet":"... I agree that historically it has been easier to construct a uri via query terms - but that doesn t make path based URI construction difficult, it just ","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_1); 27 Apr 2002 03:00:51 -0000\r\nReceived: (qmail 8110 invoked from network); 27 Apr 2002 03:00:48 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 27 Apr 2002 03:00:48 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.97)\n  by mta2.grp.scd.yahoo.com with SMTP; 27 Apr 2002 03:00:48 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 26 Apr 2002 20:00:48 -0700\r\nTo: &quot;&#39;bhaugen32&#39;&quot; &lt;bhaugen32@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool&quot; &lt;tlainevool@...&gt;\r\nReferences: &lt;003c01c1ed88$634cfe90$f3a8a440@DEUTSCH8100&gt;\r\nSubject: Re: [rest-discuss] Re: Restifying Available to Promise\r\nDate: Fri, 26 Apr 2002 19:56:48 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE40SbPkPuOlvX6D96d00000c88@...&gt;\r\nX-OriginalArrivalTime: 27 Apr 2002 03:00:48.0786 (UTC) FILETIME=[BBB0DF20:01C1ED97]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n&gt; &gt;\n&gt; &gt; Nor do I understand &quot;services/availability/?product=&quot;\n&gt; &gt; vs &quot;products/blueshoes/availability&quot;.\n&gt; &gt;\n&gt; &gt; What am I missing?\n&gt;\n&gt; The difference is not major.  To the underlying components (HTTP\n&gt; servers, caches, etc) they are identical.  The difference comes if you\n&gt; want to be able to generate these URIs and you want to use URIs for the\n&gt; name of the product.  Then the first one works.\nI agree that historically it has been easier to construct a uri via query\nterms - but that doesn&#39;t make path based URI construction difficult, it just\nmeans nobody has provided a commonly recognized way to do it. It ends up\nbeing an implementation preference, in my opinion, because I think you are\nright when you point out that the underlying components see them as\nidentical.\n\nI suppose that the choice between a short identifier and a URI (for product\nID in the examples) depends on how you acquire that product ID - in most\ncases you will just echo back what the server gave to you initially (and a\nfull uri probably works better as a query term). A full-blown hypertext\napproach would be URI through and through, but I believe that has problems\nwith interoperability - every service that wants to participate must know\nthe full URI of the product, which to me seems very constraining on\nimplementation choices.  But it also means some sort of correlation ability\nneeds to exist - which might add too much complexity. I need to spend some\ntime and try different approaches out (which will be quite a while...)\n\n&gt;\n&gt; &gt;\n&gt; &gt; &gt;It seems that using a URI for everything is a bit\n&gt; &gt; &gt; excessive, but I haven&#39;t spent a lot of time in this area.\n&gt; &gt;\n&gt; &gt; Why isn&#39;t it better for more things to have identities?\n&gt; &gt; (I&#39;m not sure where &quot;excessive&quot; begins, but for each product to have\n&gt; &gt; its own URI does not seem to be even close to the edge.)\n&gt; &gt;\n&gt; I think he meant &quot;using a URI&quot; is excessive not &quot;a URI for everything&quot;\n&gt; is excessive.\nYes.\n\n&gt; I personally don&#39;t think it is excessive because\n&gt; hopefully all this is automated so the user never sees these names.\n&gt; URIs don&#39;t cost anything to create vs. a simple string. (Well maybe a\n&gt; little extra memory, but not enough to really matter.)\nI agree also - but without playing with a couple systems that do this - and\ntry to connect between them without them being aware of it - I&#39;m not sure if\nit is doable. It just seems that to bridge autonomous services (unaware of\neach other) you are going to have to do uri mapping (not to mention message\nformat mapping...)\n\n\n\n"}}