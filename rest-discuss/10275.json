{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"_STY20kwswehPOW06qkSmtlvUn4D27QzSWbDmOGwmOZkpFZXINWH9bjob3X6MtJD4Fchoue5xo_jZeEtRNEr7KdEK386EFHW07i7T_bxWw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] bootstrapping","postDate":"1200707794","msgId":10275,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE0MzYwMWM4NWEzZSQ4YTkzMjM3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDUwMzdiNmU0MDgwMTE4MTY1M200ZTdiYjlhY2dkZGEyNmIxOWY1ZGIzZmI2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPiA8MGYzZTAxYzg1ODdmJDlkOGFjZjcwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDUwMzdiNmU0MDgwMTE2MjIzOWc3NzdiNDY3ZHE2NGIxMzczMzAwMDk4OGFjQG1haWwuZ21haWwuY29tPiA8MTA1NDAxYzg1OGU3JDQ4ZmNiNWYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDUwMzdiNmU0MDgwMTE3MTkxN2gyZDM2ZTQ4MG43NjAzNzY1OTg1ZDBjNzU2QG1haWwuZ21haWwuY29tPiA8MTI1MTAxYzg1OWE2JDQwYWE4N2EwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDUwMzdiNmU0MDgwMTE4MDE0NGoyMGVkMGYzZmliZjZmZTIwNWI1OTFkMmNiQG1haWwuZ21haWwuY29tPiA8MTJjODAxYzg1OWNmJGQ4NDM5ODMwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDUwMzdiNmU0MDgwMTE4MTEwNXkyMGQ3OGQ5MHNkNjJmOTFiNGNiNjYwZjUxQG1haWwuZ21haWwuY29tPiA8MTNmNDAxYzg1YTIzJDRiNTJlYzYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDUwMzdiNmU0MDgwMTE4MTY1M200ZTdiYjlhY2dkZGEyNmIxOWY1ZGIzZmI2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10274,"nextInTopic":10276,"prevInTime":10274,"nextInTime":10276,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... Well, that s exactly how I see the value of the web and those are the type of people I d like to empower. Empowering them creates more value for everyone","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86739 invoked from network); 19 Jan 2008 01:56:47 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m56.grp.scd.yahoo.com with QMQP; 19 Jan 2008 01:56:47 -0000\r\nX-Received: from unknown (HELO an-out-0708.google.com) (209.85.132.247)\n  by mta16.grp.scd.yahoo.com with SMTP; 19 Jan 2008 01:56:47 -0000\r\nX-Received: by an-out-0708.google.com with SMTP id c37so260474anc.128\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 18 Jan 2008 17:56:46 -0800 (PST)\r\nX-Received: by 10.100.241.17 with SMTP id o17mr8533159anh.72.1200707805594;\n        Fri, 18 Jan 2008 17:56:45 -0800 (PST)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nX-Received: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTPS id 14sm130062wrl.37.2008.01.18.17.56.41\n        (version=SSLv3 cipher=RC4-MD5);\n        Fri, 18 Jan 2008 17:56:44 -0800 (PST)\r\nTo: &quot;&#39;Assaf Arkin&#39;&quot; &lt;assaf@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;fmks78+k15k@...&gt; &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt; &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt; &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt; &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt; &lt;125101c859a6$40aa87a0$0702a8c0@...&gt; &lt;5037b6e40801180144j20ed0f3fibf6fe205b591d2cb@...&gt; &lt;12c801c859cf$d8439830$0702a8c0@...&gt; &lt;5037b6e40801181105y20d78d90sd62f91b4cb660f51@...&gt; &lt;13f401c85a23$4b52ec60$0702a8c0@...&gt; &lt;5037b6e40801181653m4e7bb9acgdda26b19f5db3fb6@...&gt;\r\nDate: Fri, 18 Jan 2008 20:56:34 -0500\r\nKeywords: Archived\r\nMessage-ID: &lt;143601c85a3e$8a932370$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198\r\nthread-index: AchaNb4mCdHtGVcXSqi8iKWLVaxTmwAA4bCw\r\nIn-Reply-To: &lt;5037b6e40801181653m4e7bb9acgdda26b19f5db3fb6@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=228155998; y=7MUs984mxpPzyaDfgvjF-IRJ6zeIA9nMxgaKoSMKzSjtAYkr2wEl\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\nAssaf Arkin wrote:\n&gt; The one thing I like about the Web is that it&#39;s an enormous \n&gt; piece of infrastructure that&#39;s also a great equalizer and \n&gt; doesn&#39;t care if you&#39;re Fortune 500 or broke and trying to \n&gt; start a new life.  I&#39;m looking for a solution that just like \n&gt; the Web is a great equalizer and doesn&#39;t ask you where you \n&gt; work, or how much money you have in your spending account.\n&gt; \n&gt; The Lotus-123/PC type of revolution that if you remember was \n&gt; just about the SOHO worker as it was about business people in \n&gt; large companies with well funded IT departments maintaining \n&gt; state of the art mainframes.  Neither the rich nor the poor \n&gt; had the equivalent, and it solve the problem equally well for both.\n\nWell, that&#39;s exactly how I see the value of the web and those are the type\nof people I&#39;d like to empower. Empowering them creates more value for\neveryone as the more that are empowered the more there are adding value to\nthe collective pot.\n\n&gt; Because it&#39;s easier to develop a bunch of domain-specific \n&gt; solutions on the Web, see which ones stick, target different \n&gt; audiences than it is developing it into the browser.\n\nOh, I agree.  But I&#39;m instead talking about &quot;standardizing&quot; a meta approach;\nIOW a method for traversing web services that 5 years from now could be\nbuilt into browsers because it gained widespread usage.  I&#39;d like to see a\nwell-known way to publish that they are &quot;n&quot; number of services available,\nhere are their local identifiers, their URLs/URI Templates, and here are the\ncontent types they return.  Local identifiers might be things like\n&quot;shopping-cart&quot;, &quot;add-item&quot;, &quot;empty-cart&quot;, and so on.\n\nInterestingly I just re-read Joe Gregorio&#39;s rant against WADL [1] and find\nthat I strongly agree with his mime-type centric view. So what I&#39;m\ndiscussing wouldn&#39;t be at the level of a WADL which as he presented defines\na service but instead something that lists available services for a human to\nreview and that can also later be called by a program that traverses the\nlist to support HATEOAS with eventual move toward a new mime-type with a\ndefined spec for the use-case if it is generally applicable.\n\nAlso, Joe made my point about internal vs. external using very different\nwords but basically his point is that for internal you don&#39;t necessarily\nhave to worry about publishing standard mime-types, but for external you\ndefinitely do.  Given the lack of need to follow standards with internal\nservices makes them more more likely to need to be changed.\n\n&gt; I just did, using URL templates to do lossless compression.  \n&gt; It&#39;s the equivalent of saying A..Z instead of repeating the \n&gt; alphabet, or &#39;every saturday&#39; without listing infinite number \n&gt; of dates.  Is there a problem describing things in concise form?\n\nWe definitely were arguing past each other there because I think the use of\nURI Templates is a grand idea [2], even though I&#39;m not enamored with the\nnewly cryptic syntax.\n\n&gt; My statement, which I duely corrected, was that if you make \n&gt; the URI template available dynamically as the first resource \n&gt; clients have to retrieve, you risk developers caching it in \n&gt; their code.  You might as well commit to giving developers \n&gt; the URI template up front.  That was what I intended to say, \n&gt; and still saying.\n\nSorry for any misinterpretations.  That said, my argument is still valid and\nit is that for many use-cases the medication (HATEOAS) is worse than the\ndisease (hard-coding URLs) and that rather than always prescribing HATEOAS\nas the obvious solution for which one should never consider any other\nalternative that we collectively identify and educate people on the\ncollective pros and cons of either approach.\n\n&gt; Try looking with a specific service name, I only searched for \n&gt; two, so only came up with two examples, and I only picked \n&gt; from the first result page.  Also keep in mind that search \n&gt; results are indicative, not exhaustive, there may be \n&gt; thousands of public APIs out there, but once you get into the \n&gt; long tai, the chances of finding someone complaining online \n&gt; about an API breaking approximates zero.  So if you&#39;re \n&gt; actually looking to count incidents, Google search won&#39;t \n&gt; help, if you&#39;re &quot;do even big services do that&quot;&quot;, the answer is yes.\n\nWell, I don&#39;t have time to guess at which services might have had problems\nso if you want to give more examples feel free.  But even so I think it is a\nmoot point considering my discussion of changes in scheme vs. domain vs.\npath-and-params.\n\n&gt; (BTW del.icio.us pre-acquisition is famous for upgrading \n&gt; their API without changing version numbers, Google and you&#39;ll \n&gt; find more examples)\n\nI&#39;d argue that the problem was not necessarily lack of HATEOAS but instead\npoor API management.\n\n&gt; &gt; The only real problem I see is that of changing schemes and that of \n&gt; &gt; changing domains which is what your two examples illustrated. Since \n&gt; &gt; those are two known and finite problems, why not address those in \n&gt; &gt; clients rather than requiring all URLs to deal with the conceptual, \n&gt; &gt; programmatic and execution overhead of first having to \n&gt; first traverse \n&gt; &gt; a representation from an entry point URL before calling a service \n&gt; &gt; based on URL construction?  IOW, why not define web service URLs as \n&gt; &gt; {scheme}://{domain}/{path-and-params} and instruct callers \n&gt; to support \n&gt; &gt; both http and https in advance and incorporate an easy way \n&gt; to change \n&gt; &gt; the domain in their client code but allow them to hardcode \n&gt; path and parameters?\n&gt; \n&gt; A lot of client libraries do just that.  You point to a base \n&gt; URL, which is easy to change, if for no other reason that you \n&gt; dev, test and production servers will all use different base \n&gt; URLs.  What happens after that is often ingrained in the \n&gt; logic, changing it is as hard as adding another mandatory \n&gt; request parameter, but then again just as likely to happen \n&gt; and costly to change.\n\nSo it sounds like ultimately you actually agree with me? :-)\n\n&gt; &gt;  After that I don&#39;t see a lot of reason why you can&#39;t maintain a \n&gt; &gt; reasonably consistent URL structure, some of which may be \n&gt; legacy; is \n&gt; &gt; the protocol and domains that are the most problematic and \n&gt; accordinate \n&gt; &gt; to the URI spec, those aspects are not opaque.  From my perspective \n&gt; &gt; that solves 99% of the situations that it seems to me that \n&gt; HATEOAS was \n&gt; &gt; envisioned to solve but with much less burden on the client \n&gt; developer.\n&gt; \n&gt; But there are benefits to following URLs, they give you more \n&gt; flexibility to change the implementation, especially around \n&gt; long-lasting state when you may want to offer to \n&gt; implementations side by side, or more across services (composition).\n\nBut what are those benefits, in concrete terms?  I don&#39;t claim that they are\nnot any only that I have yet to discover any.  I still don&#39;t see any reason\nwhy hardcoding a path is a real problem for externally published services;\nworst case URL rewriting can solve any breakage problems.  The only problem\nI see is with changing schemes/protocols and changing domains.\n\nSo unless you can give me examples where following URLs is really beneficial\nand hence can change my opinion then I&#39;ll summarize my point: rather than\nuniversally prescribe HATEOAS I think it makes more sense to describe the\npros and the cons of each (simplier adoption vs. change management) and also\nidentify where the biggest problems with not using HATEPOAS lie i.e. in\nscheme/protocol & domain and let the implementor make their own decisions.\n\n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org\nhttp://atlanta-web.org \n\n[1] http://bitworking.org/news/193/Do-we-need-WADL\n[2]\nhttp://blog.welldesignedurls.org/2007/01/11/proposing-uri-templates-for-webf\norms-2/\n\n\n"}}