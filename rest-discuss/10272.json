{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"dR2LRKrO1csYqKpSeDcPLaFToZ7LKeFfozwPaHM9gLK_TbfuBK9WTeI5wxKIdlp0fzV7DS7vn1453kYg2AE1HHIjLPo2EVI6iQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] bootstrapping","postDate":"1200704025","msgId":10272,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDgwMTE4MTY1M200ZTdiYjlhY2dkZGEyNmIxOWY1ZGIzZmI2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDEzZjQwMWM4NWEyMyQ0YjUyZWM2MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPgkgPDBmM2UwMWM4NTg3ZiQ5ZDhhY2Y3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+CSA8NTAzN2I2ZTQwODAxMTYyMjM5Zzc3N2I0NjdkcTY0YjEzNzMzMDAwOTg4YWNAbWFpbC5nbWFpbC5jb20+CSA8MTA1NDAxYzg1OGU3JDQ4ZmNiNWYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4JIDw1MDM3YjZlNDA4MDExNzE5MTdoMmQzNmU0ODBuNzYwMzc2NTk4NWQwYzc1NkBtYWlsLmdtYWlsLmNvbT4JIDwxMjUxMDFjODU5YTYkNDBhYTg3YTAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPgkgPDUwMzdiNmU0MDgwMTE4MDE0NGoyMGVkMGYzZmliZjZmZTIwNWI1OTFkMmNiQG1haWwuZ21haWwuY29tPgkgPDEyYzgwMWM4NTljZiRkODQzOTgzMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+CSA8NTAzN2I2ZTQwODAxMTgxMTA1eTIwZDc4ZDkwc2Q2MmY5MWI0Y2I2NjBmNTFAbWFpbC5nbWFpbC5jb20+CSA8MTNmNDAxYzg1YTIzJDRiNTJlYzYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4="},"prevInTopic":10271,"nextInTopic":10273,"prevInTime":10271,"nextInTime":10273,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... The one thing I like about the Web is that it s an enormous piece of infrastructure that s also a great equalizer and doesn t care if you re Fortune 500 or","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 66799 invoked from network); 19 Jan 2008 00:53:47 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m48.grp.scd.yahoo.com with QMQP; 19 Jan 2008 00:53:47 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.158)\n  by mta17.grp.scd.yahoo.com with SMTP; 19 Jan 2008 00:53:46 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id d23so1470257fga.31\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 18 Jan 2008 16:53:45 -0800 (PST)\r\nX-Received: by 10.86.59.2 with SMTP id h2mr3673134fga.19.1200704025446;\n        Fri, 18 Jan 2008 16:53:45 -0800 (PST)\r\nX-Received: by 10.86.71.6 with HTTP; Fri, 18 Jan 2008 16:53:45 -0800 (PST)\r\nMessage-ID: &lt;5037b6e40801181653m4e7bb9acgdda26b19f5db3fb6@...&gt;\r\nDate: Fri, 18 Jan 2008 16:53:45 -0800\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;13f401c85a23$4b52ec60$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;fmks78+k15k@...&gt;\n\t &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt;\n\t &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt;\n\t &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt;\n\t &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\n\t &lt;125101c859a6$40aa87a0$0702a8c0@...&gt;\n\t &lt;5037b6e40801180144j20ed0f3fibf6fe205b591d2cb@...&gt;\n\t &lt;12c801c859cf$d8439830$0702a8c0@...&gt;\n\t &lt;5037b6e40801181105y20d78d90sd62f91b4cb660f51@...&gt;\n\t &lt;13f401c85a23$4b52ec60$0702a8c0@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=319607554; y=eGQyVb_zuu1RwzBD247_ogSNU_w5jE1Yg1j7lAPQGXlVTgkG6g\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn Jan 18, 2008 2:41 PM, Mike Schinkel &lt;mikeschinkel@...&gt; wrote:\n&gt; Assaf Arkin wrote:\n&gt;\n&gt; Okay, with that we are clearly in two different worlds.  I&#39;m looking to\n&gt; empower the people who have websites and use Quickbooks, not the people who\n&gt; use SAP or Siebel; they can fend for their themselves with their IT teams.\n&gt;\n&gt; &gt; And that is appealing to a lot of companies who&#39;s sole\n&gt; &gt; purpose is to cater to people who don&#39;t care to program,\n&gt; &gt; intentionally or accidentally.  Those products are not sold\n&gt; &gt; because of their WS-* capabilities, end-users and buyers\n&gt; &gt; don&#39;t care for that, they&#39;re sold because they&#39;re possible\n&gt; &gt; and hit the right price point.\n&gt;\n&gt; I&#39;m also interested in open standards on open-source, not in solutions that\n&gt; require some Enterprise Software company to first extract multiple pounds of\n&gt; flesh.\n\nThe one thing I like about the Web is that it&#39;s an enormous piece of\ninfrastructure that&#39;s also a great equalizer and doesn&#39;t care if\nyou&#39;re Fortune 500 or broke and trying to start a new life.  I&#39;m\nlooking for a solution that just like the Web is a great equalizer and\ndoesn&#39;t ask you where you work, or how much money you have in your\nspending account.\n\nThe Lotus-123/PC type of revolution that if you remember was just\nabout the SOHO worker as it was about business people in large\ncompanies with well funded IT departments maintaining state of the art\nmainframes.  Neither the rich nor the poor had the equivalent, and it\nsolve the problem equally well for both.\n\n&gt; &gt; If I provide people with an online tool they can use to\n&gt; &gt; customize a script, I&#39;ll use forms and links and all other\n&gt; &gt; good things, and it will be HATEOAS.  The tool, but the\n&gt; &gt; script doesn&#39;t have to be.  I&#39;m talking about the script\n&gt; &gt; here.  I think it matters indirectly, if it&#39;s cheap to do and\n&gt; &gt; resistent to change, you&#39;ll see more tools developed, and the\n&gt; &gt; more (and better) tools you have, the less people (myself\n&gt; &gt; included) have to bother programming.\n&gt;\n&gt; Again, that&#39;s what I&#39;m trying to say except that you building a website to\n&gt; do it is not an answer. Not everybody is going to go to your website to\n&gt; process web services.  The answer is a standard way (or a few standard ways)\n&gt; to interact with HATEOAS such that open-source tools will be developed and\n&gt; browsers will incorporate.  And I completely want to see that; Alan Dean&#39;s\n&gt; DSD is a good start.  Until then, HATEOAS is too high a barrier for most\n&gt; people (who are accidental programmers) to hurdle and thus there is very\n&gt; real benefit to publishing direct URL interfaces.\n\nBecause it&#39;s easier to develop a bunch of domain-specific solutions on\nthe Web, see which ones stick, target different audiences than it is\ndeveloping it into the browser.\n\n\n&gt; &gt; If I&#39;m telling you that http://travels/{flight\n&gt; &gt; number}/arrival provides the current arrival time, then I\n&gt; &gt; just provided you with a pre-defined, finite (size 1) list of\n&gt; &gt; the things my service provides.\n&gt;\n&gt; Ah, but that&#39;s not what you said earlier.  Earlier you said you could\n&gt; provide all the needed URLs in advance. But whatever.\n\nI just did, using URL templates to do lossless compression.  It&#39;s the\nequivalent of saying A..Z instead of repeating the alphabet, or &#39;every\nsaturday&#39; without listing infinite number of dates.  Is there a\nproblem describing things in concise form?\n\n&gt; &gt; That&#39;s something I can spec, so other people can build\n&gt; &gt; clients to get the current arrival time on any given flight,\n&gt; &gt; widgets that let you track a particular flight, etc.\n&gt;\n&gt; And that&#39;s what I advocate.  But this thread between us started by you\n&gt; saying that publishing a URI Template was a bad idea because people would be\n&gt; tempted to hardcode yet now you are saying exactly what I&#39;ve been saying.\n\nMy statement, which I duely corrected, was that if you make the URI\ntemplate available dynamically as the first resource clients have to\nretrieve, you risk developers caching it in their code.  You might as\nwell commit to giving developers the URI template up front.  That was\nwhat I intended to say, and still saying.\n\n&gt; &gt; Just a couple of examples, more can be found here:\n&gt; &gt; http://www.google.com/search?q={service_name}+api+change\n&gt;\n&gt; I googled both of these and didn&#39;t find anything really else that dealt with\n&gt; API change based on URLs (though I know I wasn&#39;t exhaustive.):\n&gt;\n&gt;         http://www.google.com/search?q=api+change\n&gt;         http://www.google.com/search?q=url+api+change\n\nTry looking with a specific service name, I only searched for two, so\nonly came up with two examples, and I only picked from the first\nresult page.  Also keep in mind that search results are indicative,\nnot exhaustive, there may be thousands of public APIs out there, but\nonce you get into the long tai, the chances of finding someone\ncomplaining online about an API breaking approximates zero.  So if\nyou&#39;re actually looking to count incidents, Google search won&#39;t help,\nif you&#39;re &quot;do even big services do that&quot;&quot;, the answer is yes.\n\n(BTW del.icio.us pre-acquisition is famous for upgrading their API\nwithout changing version numbers, Google and you&#39;ll find more\nexamples)\n\n\n&gt; But what I did find were references to API changes that broke things that\n&gt; had nothing to do with changed URLs which brings up a point that HATEOAS\n&gt; advocates conveniently choose to never mention; even if your URLs are served\n&gt; by a single entry point your API still breaks if the conceptual model of\n&gt; your service changes.\n\nExactly.\n\n&gt; The only real problem I see is that of changing schemes and that of changing\n&gt; domains which is what your two examples illustrated. Since those are two\n&gt; known and finite problems, why not address those in clients rather than\n&gt; requiring all URLs to deal with the conceptual, programmatic and execution\n&gt; overhead of first having to first traverse a representation from an entry\n&gt; point URL before calling a service based on URL construction?  IOW, why not\n&gt; define web service URLs as {scheme}://{domain}/{path-and-params} and\n&gt; instruct callers to support both http and https in advance and incorporate\n&gt; an easy way to change the domain in their client code but allow them to\n&gt; hardcode path and parameters?\n\nA lot of client libraries do just that.  You point to a base URL,\nwhich is easy to change, if for no other reason that you dev, test and\nproduction servers will all use different base URLs.  What happens\nafter that is often ingrained in the logic, changing it is as hard as\nadding another mandatory request parameter, but then again just as\nlikely to happen and costly to change.\n\n\n&gt;  After that I don&#39;t see a lot of reason why\n&gt; you can&#39;t maintain a reasonably consistent URL structure, some of which may\n&gt; be legacy; is the protocol and domains that are the most problematic and\n&gt; accordinate to the URI spec, those aspects are not opaque.  From my\n&gt; perspective that solves 99% of the situations that it seems to me that\n&gt; HATEOAS was envisioned to solve but with much less burden on the client\n&gt; developer.\n\nBut there are benefits to following URLs, they give you more\nflexibility to change the implementation, especially around\nlong-lasting state when you may want to offer to implementations side\nby side, or more across services (composition).\n\nAssaf\n\n&gt;\n&gt;\n&gt; -Mike Schinkel\n&gt; http://www.mikeschinkel.com/blogs/\n&gt; http://www.welldesignedurls.org\n&gt; http://atlanta-web.org\n&gt;\n&gt;\n&gt;\n\n"}}