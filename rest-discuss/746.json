{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"Lucas Gonze &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"6JATf_uSe7OmQboHxfNYGMR9q985D280lzgo0JYXboagXeWja7O32hq26p86NWrqC__B6Mv_Hz1d7zpoF5qjRWrmOqc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] detailed protocol writeup posted","postDate":"1014037145","msgId":746,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDQuMDIwMjE4MDE1MDAyMC4tMzE1NDA1QG9iaXdhbj4=","inReplyToHeader":"PDNDNzA5NzVBLjNBRDkyNkEyQHByZXNjb2QubmV0Pg=="},"prevInTopic":745,"nextInTopic":749,"prevInTime":745,"nextInTime":747,"topicId":744,"numMessagesInTopic":4,"msgSnippet":"Hey Paul, ... Yup -- this strikes me as useful, so there s an analog down in Enabling Bot Inclusion , along with another possible alternative. ... If I","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 18 Feb 2002 13:00:26 -0000\r\nReceived: (qmail 62628 invoked from network); 18 Feb 2002 13:00:25 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m2.grp.snv.yahoo.com with QMQP; 18 Feb 2002 13:00:25 -0000\r\nReceived: from unknown (HELO mail1.panix.com) (166.84.0.212)\n  by mta3.grp.snv.yahoo.com with SMTP; 18 Feb 2002 13:00:25 -0000\r\nReceived: from mailspool1.panix.com (mailspool1.panix.com [166.84.0.210])\n\tby mail1.panix.com (Postfix) with ESMTP\n\tid 2E97E4872D; Mon, 18 Feb 2002 08:00:25 -0500 (EST)\r\nReceived: from xterm4.nyc.access.net (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mailspool1.panix.com (Postfix) with ESMTP\n\tid 8BF5712E41; Mon, 18 Feb 2002 08:00:24 -0500 (EST)\r\nDate: Mon, 18 Feb 2002 07:59:05 -0500 (Eastern Standard Time)\r\nTo: Paul Prescod &lt;paul@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] detailed protocol writeup posted\r\nIn-Reply-To: &lt;3C70975A.3AD926A2@...&gt;\r\nMessage-ID: &lt;Pine.WNT.4.44.0202180150020.-315405@obiwan&gt;\r\nX-X-Sender: lgonze@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nFrom: Lucas Gonze &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\nHey Paul,\n\n&gt;  1. I don&#39;t see how the client knows WHERE to POST to the server. It may\n&gt; have a priori knowledge but it may not. HTTPEvents allows the server to\n&gt; tell the client where to POST through a header that is available on a\n&gt; GET or HEAD.\n\nYup -- this strikes me as useful, so there&#39;s an analog down in &quot;Enabling\nBot Inclusion&quot;, along with another possible alternative.\n\n&gt; It also allows the server to generate a URI that obviates\n&gt; the need for the Watched-Resource-URI. This should be step &quot;0&quot;. My\n&gt; mental model was that you could surf the web and the browser would tell\n&gt; you (discreetly) when a watchable resource popped up. Same for Google.\n&gt; It could spider around subscribing to things. If a particular\n&gt; application wants to skip this step, it may, if it already has an\n&gt; appropriate URI.\n\nIf I understand this right, are you thinking the watched resource and the\nwatcher are the same thing?\n\n\n&gt;  2. I think you overspecify the structure of the notification.\n\nWell, I was trying to do an experiment more than to write a standard.  I\nwanted to know exactly what a callback design would have to do, what the\nhard problems would be, where the low-hanging fruit would be, etc.  So the\nhigh level of detail is about getting a really clear picture of the\nproblem set.\n\nTo the degree that I _was_ trying to write a recipe for implementors, it&#39;s\nnot so much a standard as a debugged algorithm.  For example, anything\nthat&#39;s a MUST is there because otherwise a critical feature won&#39;t work.\nIt happens that the language of standards is great for writing\nmeta-programs, that&#39;s the only reason I used it.\n\n&gt;     * arguably methods should be application dependent...\n&gt;     * I strongly feel that the input parameters should be application\n&gt; dependent!\n\n...again, I defer to my experiment+recipe intent, vs. an intent to\nstandardize.\n\n&gt;     * It should be possible for the response to trigger a\n&gt; re-subscription through a magic header\n\nI definately agree and spent a while working on that, but found that it\nled me into turf where there&#39;s a persistent subscription to manage, and\ndidn&#39;t want to open up that can of worms.  In the short term it turned out\nthat having the source delete the sub once expiration is over or a\nnotification has been sent was a big advantage.\n\nso, basically, figuring out how to do the re-sub automatically would be a\nbig win but I was hard pressed enough to do the minimum reasonably well\nthat had to put off the whole issue of persistence.\n\n&gt; There is hardly any harm in being &quot;tricked&quot; into re-fetching the\n&gt; resource too soon. This just complicates the implementation of the\n&gt; client side of the protocol for little benefit.\n\nI will mull over this for a little while.\n\n&gt;  3. I haven&#39;t thought through all of the race condition issues and I&#39;m\n&gt; glad you have. But consider whether there are If-modified-since or\n&gt; e-tags tricks you can use to avoid the contortions of inventing new URIs\n&gt; and forcing a certain order of steps. I don&#39;t have time to think about\n&gt; it right now but something seems inelegant about the level of effort you\n&gt; need to go to to avoid race conditions.\n&gt;\n&gt; Anyhow, the GET step should be optional because you may not care about\n&gt; the current state of the resource. You only want to know if it changes.\n&gt; For instance there may be a gateway that emails the user when the\n&gt; resource changes. The gateway doesn&#39;t want to fetch the resource every\n&gt; time. The user will fetch it when the user wants it.\n\nOptionalness: good point.  Will do.  If-modified-since etc is also a good\nthing, and I will dig around to bring this within the algorithm.\n\n&gt; You seem not to have dealt with something on my todo list for\n&gt; HTTPEvents, container sub-resource changes.\n\nMore?\n\n(Sorry to post that big chunk of text and run, but I have a new consulting\ngig starting today and so will be out of touch til late evening.)\n\n- Lucas\n\n\n\n"}}