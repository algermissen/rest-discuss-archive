{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":474754157,"authorName":"Bob Ferris","from":"Bob Ferris &lt;zazi@...&gt;","profile":"b.ferris@rocketmail.com","replyTo":"SENDER","senderId":"rcEK9_Az0trlORtCeRYD2DFw_PhzrIgoMIIXre2TJ-om06khhYA0Kt5gilqPnlZZDThn5Px5KQmrLQogqLA8KvfKLpU9","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Loose coupling - a RESTful myth?","postDate":"1297107786","msgId":17329,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRENTA0QjRBLjYwNzAxMDhAZWxia2xhbmcubmV0Pg==","inReplyToHeader":"PGlpanRtcytwMzRhQGVHcm91cHMuY29tPg==","referencesHeader":"PGlpanRtcytwMzRhQGVHcm91cHMuY29tPg=="},"prevInTopic":17328,"nextInTopic":17330,"prevInTime":17328,"nextInTime":17330,"topicId":17322,"numMessagesInTopic":13,"msgSnippet":"... While rereading the referenced classification from above, I stumbled about a few issues: 1. When describing a domain it s often not a main issue of missing","rawEmail":"Return-Path: &lt;zazi@...&gt;\r\nX-Sender: zazi@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83585 invoked from network); 7 Feb 2011 19:43:11 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 7 Feb 2011 19:43:11 -0000\r\nX-Received: from unknown (HELO shoutbox.org) (89.163.163.26)\n  by mta1.grp.sp2.yahoo.com with SMTP; 7 Feb 2011 19:43:11 -0000\r\nX-Received: from [192.168.1.101] (p5B2ACB95.dip.t-dialin.net [91.42.203.149])\n\t(using TLSv1 with cipher AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\t(Authenticated sender: zazi@...)\n\tby shoutbox.org (Postfix) with ESMTPSA id 7AA7B6C16ED;\n\tMon,  7 Feb 2011 19:43:10 +0000 (UTC)\r\nMessage-ID: &lt;4D504B4A.6070108@...&gt;\r\nDate: Mon, 07 Feb 2011 20:43:06 +0100\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.13) Gecko/20101207 Thunderbird/3.1.7\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nCc: algermissen1971@...\r\nReferences: &lt;iijtms+p34a@...&gt;\r\nIn-Reply-To: &lt;iijtms+p34a@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bob Ferris &lt;zazi@...&gt;\r\nSubject: Re: [rest-discuss] Loose coupling - a RESTful myth?\r\nX-Yahoo-Group-Post: member; u=474754157; y=CYZ3dVxMg5X-CTcRoA9MYlSz_3GgQDkd1jepeyq-dKc5X5NnJ3SaSTlyOnFtdDKS0nk\r\nX-Yahoo-Profile: b.ferris@...\r\n\r\nAm 05.02.2011 17:26, schrieb Jakob Strauch:\n&gt;\n&gt; [1] http://nordsc.com/ext/classification_of_http_based_apis.html\n\nWhile rereading the referenced classification from above, I stumbled \nabout a few issues:\n\n1. When describing a domain it&#39;s often not a main issue of missing media \ntypes. I think, one would rather quickly find an appropriated generic \nmedia type. However, the issue of describing a domain lies not only at \nthe representation and process model level (which is generally also \nindependent from the representation level, or?), the description of the \ndomain itself is thereby very important - modelling the concepts of for \ninstance &#39;user&#39;, &#39;order&#39;, &#39;offer&#39; etc.\nThis is for me exactly the point where Semantic Web knowledge \nrepresentation languages on top of RDF Model can come into play. So I \ncan still use a generic media type, i.e. RDF Model, for realizing a \ncommon description. However, serialize these descriptions into specific \nrepresentation media types, i.e. XHTML+RDFa, and thereby maybe also \nextending the process model (based on a general description). Layering \nof media types was already propagated by Roy T. Fielding, or?\nAll in all, I think, it depends more on the degree of existing \nappropriated Semantic Web ontologies to model (parts of) a domain, \nrather then on existing media types. While there can (theoretically) \nexist a huge variety of both and such a huge amount would decrease the \nsimplicity property in both cases; I nevertheless think, that it is \nmaybe better to have less media types and more (especially reusable) \nSemantic Web ontologies, rather then an equal high amount of media types.\nTo summarize, I think the application, reutilization and (if needed) \ncreation of Semantic Web ontologies fit quite well for emphasizing the \ndesired properties that should be reached when implementing the REST \narchitectural style. The costs that have to be invested into good \nontology design maybe align with the costs of proper media type design.\nYou maybe still addressed this issue somehow, when saying &quot;media type \n(and link relation etc.) specifications&quot;. Anyway, I think, it might be \ngood to make this concern a bit more explicit. You might not explicitly \npropagate the utilization of Semantic Web ontologies, but please make \naware of the general existing &#39;description level&#39; (cf. [1]), which (from \nmy point of view) exists already, but is then often more implicit than \nexplicit available.\n\n2. I think, fulfilling the hypermedia as the engine of application state \nconstraint is maybe still the hardest part. I cannot really imagine that \n&quot;a transition from HTTP-based Type || to REST at a later point in time, \nhowever, is rather easy&quot;. Furthermore, &quot;turning a HTTP-based Type || API \ninto a REST API might be as easy as deleting the API documentation&quot; is a \nbit paradox from my point of view. When I would remove the API \ndocumentation than this application cannot really be an API any more, \nor? When I would like to program against (?) something ( ;) ), I have to \nknow how I could do that. For instance a web browser do not really \nprogram against (?) something.\nI think the term &#39;REST API&#39; might be a bit inappropriate here (I still \ndoubt that a implementation of service, which is fully REST compatible, \nis possible). The given examples for REST are not really APIs, or? - \nAtomPub is a protocol, OpenSearch a specification (collection of media \ntype specifications), &quot;RESTifying Procurement&quot; an approach of a \nproof-of-concept REST &quot;service&quot;(?) (I couldn&#39;t really figure out the \ncurrent state of that project, however it looks quite interesting). \nAlthough, the chosen descriptor is still &#39;REST&#39; and not &quot;REST API&quot;. So \none might conclude that this could be a bit inappropriated \nclassification, but the descriptions are explicitly suggesting the \napplication of REST principles on the implementation of (Web) services ;)\n\n3. Just a small issue: better &quot;REST might be the best solution&quot;, rather \nthan &quot;REST is the best solution&quot;. I guess, &#39;is&#39; requires a kind of \nproof, or? Could we really provide a complete proof about this? - I \ncurrently don&#39;t think so.\n\n\nThat&#39;s all for the moment.\n\nCheers,\n\n\nBob\n\n[1] \nhttp://infoserviceonto.smiy.org/2010/11/25/on-resources-information-resources-and-documents/\n\n\n"}}