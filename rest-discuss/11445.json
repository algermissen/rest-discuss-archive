{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"&quot;Sebastien Lambla&quot; &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"GB77tTOuoxoPiG-PwVyu8rliUPQ3ElOk1cxQZipjeCGD2pFaS_B1RUNF6auouopxCD8ygEtLkTmN29e1SVfH_zx-kJudCaWCHGUUEcg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST Server API test harness?","postDate":"1226074014","msgId":11445,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJMVTEwMi1EUzY2RjREQTY1MzgwREY2Qjc0N0Q4N0I1MTkwQHBoeC5nYmw+","inReplyToHeader":"PDc5OTMzMGMzMDgxMTA3MDcyNXU2ZjI4ZmE1M2tjNzM1YWRlYTkxMzNlZDMxQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PEJMVTEwMi1EUzQ3RDdCQTRCOEYyNTRDMzc2OEQ1NEI1MTkwQHBoeC5nYmw+IDwyN0VGRUE4RS0wQzE5LTQxQjEtOEVBQS0wMzE1MjVBNDkyNURAbWluZHRvdWNoLmNvbT4gPDc5OTMzMGMzMDgxMTA3MDcyNXU2ZjI4ZmE1M2tjNzM1YWRlYTkxMzNlZDMxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":11444,"nextInTopic":11446,"prevInTime":11444,"nextInTime":11446,"topicId":11439,"numMessagesInTopic":20,"msgSnippet":"Alan, your diagram certainly is one of the reasons that leads me to believe that such a test harness / architecture specification would be valuable. It helps ","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21660 invoked from network); 7 Nov 2008 16:07:03 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m57.grp.scd.yahoo.com with QMQP; 7 Nov 2008 16:07:03 -0000\r\nX-Received: from unknown (HELO blu0-omc4-s13.blu0.hotmail.com) (65.55.111.152)\n  by mta17.grp.scd.yahoo.com with SMTP; 7 Nov 2008 16:07:02 -0000\r\nX-Received: from BLU102-DS6 ([65.55.111.136]) by blu0-omc4-s13.blu0.hotmail.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Fri, 7 Nov 2008 08:07:02 -0800\r\nX-Originating-Email: [seb@...]\r\nMessage-ID: &lt;BLU102-DS66F4DA65380DF6B747D87B5190@...&gt;\r\nReturn-Path: seb@...\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;BLU102-DS47D7BA4B8F254C3768D54B5190@...&gt; &lt;27EFEA8E-0C19-41B1-8EAA-031525A4925D@...&gt; &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\r\nIn-Reply-To: &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\r\nDate: Fri, 7 Nov 2008 16:06:54 -0000\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;utf-8&quot;;\n\treply-type=original\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nImportance: Normal\r\nX-Mailer: Microsoft Windows Live Mail 14.0.5027.908\r\nX-MimeOLE: Produced By Microsoft MimeOLE V14.0.5027.908\r\nX-OriginalArrivalTime: 07 Nov 2008 16:07:02.0085 (UTC) FILETIME=[DECA8F50:01C940F2]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nSubject: Re: [rest-discuss] REST Server API test harness?\r\nX-Yahoo-Group-Post: member; u=331949899; y=w6fP_yy0WUurlFSmnUtRxAecQz-JLsyEcDs2PYDXG7R2TBBG\r\nX-Yahoo-Profile: serialseb\r\n\r\nAlan,\n\nyour diagram certainly is one of the reasons that leads me to believe that \nsuch a test harness / architecture specification would be valuable. It helps \nimplementers clarify and perfect their implementations.\n\nI absolutely second your opinion on content-types, but I believe that, for \nthe sake of implementing such a test harness, a simple parser on the test \nharness and html-producing on the server could be used.\n\nI do not argue for a test harness to prove the Restfulness of a platform, \nbut one to validate scenarios that are needed as a pre-requirement to \nimplement REST: conneg, authentication, correct usage of status codes, \ncaching, correct handling of error scenarios such as the ones highlighted in \nyour diagram.\n\nSteve,\n\nvery good scenario as well. There are quite a few around those areas that \nwould be an invaluable resource to implement an http server correctly. I do \nbelieve that such a blueprint of a REST architecture to be implemented by \nframework implementers could serve the REST community as well as the \nimplementers.\n\nI do prefer Resource oriented architecture to WOA, but I can see a semantic \ndebate coming up that lack of time won&#39;t let me entertain just yet.\n\nSeb\n\n--------------------------------------------------\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\nSent: Friday, November 07, 2008 3:25 PM\nTo: &quot;Steve Bjorg&quot; &lt;steveb@...&gt;\nCc: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;; &lt;rest-discuss@yahoogroups.com&gt;\nSubject: Re: [rest-discuss] REST Server API test harness?\n\n&gt; I agree with Steve.\n&gt;\n&gt; A test harness for REST-over-HTTP could be valuable though; however it\n&gt; can&#39;t be ignorant of media-types. How can such a test harness assess\n&gt; HATEOAS without knowledge of the media-type exchanged? Without\n&gt; knowledge of HATEOAS, the test harness is unable to traverse the links\n&gt; between steady states.\n&gt;\n&gt; Some problems come to mind. In order to assess REST-over-HTTP,\n&gt; resource state changes must be made. In many, perhaps most, test\n&gt; subjects this will be either impossible (due to access control\n&gt; restrictions) or undesirable (filling a site with dummy data). The\n&gt; Code-on-Demand constraint further complicates the testability of\n&gt; subjects, as it reduces visibility.\n&gt;\n&gt; Given the necessity to have knowledge of many media-types, I suspect\n&gt; this would not be a trivial development. Good idea though (my\n&gt; http-headers-status diagram grew out of just such a test suite,\n&gt; although that was very application-specific).\n&gt;\n&gt; Alan\n&gt;\n&gt; On Fri, Nov 7, 2008 at 2:34 PM, Steve Bjorg &lt;steveb@...&gt; wrote:\n&gt;&gt; I&#39;m not aware of any, but from your description, it sounds a HTTP test\n&gt;&gt; harness, not REST.\n&gt;&gt; - Steve\n&gt;&gt; --------------\n&gt;&gt; Steve G. Bjorg\n&gt;&gt; http://wiki.mindtouch.com\n&gt;&gt; http://twitter.com/bjorg\n&gt;&gt; On Nov 7, 2008, at 4:42 AM, Sebastien Lambla wrote:\n&gt;&gt;\n&gt;&gt; Hi,\n&gt;&gt;\n&gt;&gt; I had an idea a while ago. As I&#39;m writing a REST enabler toolkit, and as \n&gt;&gt; i\n&gt;&gt; know others do exist too, it would be of great help to have a test \n&gt;&gt; harness\n&gt;&gt; to ensure valid (http / webarch) behavior.\n&gt;&gt;\n&gt;&gt; What I&#39;m thinking of is a bunch of specifications for various areas to be\n&gt;&gt; implemented using an http or rest toolit, with an automated client \n&gt;&gt; checking\n&gt;&gt; for accurate responses.\n&gt;&gt;\n&gt;&gt; For example, the following would be a specification:\n&gt;&gt;\n&gt;&gt; Generic resources\n&gt;&gt; =============\n&gt;&gt; A generic resource /customer({id}) is exposed as an xml represetnation, a\n&gt;&gt; json representation and an html representation. Content-type negotiation \n&gt;&gt; is\n&gt;&gt; supported on such resource. Format-specific URIs exist at\n&gt;&gt; /customer({id}).html, /customer({id}).json and /customer({id}).html\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Acceptance criterias\n&gt;&gt; - A request to /customer(22) with Accept:\n&gt;&gt; application/xml;q=0.9,application/json triggers a 200 with Content-Type:\n&gt;&gt; application/json and Content-Location: /customer(22).json\n&gt;&gt; - A request to /customer(22) with Accept: */* triggers a 300 Multiple\n&gt;&gt; representations\n&gt;&gt; - A request to /customer(22).html with Accept: text/html triggers a 200\n&gt;&gt; - A request to /customer(22).html with Accept: application/json triggers \n&gt;&gt; xxx\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m building integration tests around my API that follow such a pattern, \n&gt;&gt; but\n&gt;&gt; having a common test suite for any API that has an implementation of such\n&gt;&gt; test harness would be invaluable.\n&gt;&gt;\n&gt;&gt; Is there such a harness and I missed it? Would anyone be interested in\n&gt;&gt; working on such harness?\n&gt;&gt;\n&gt;&gt; Seb\n&gt;&gt;\n&gt;&gt; \n&gt; \n\n"}}