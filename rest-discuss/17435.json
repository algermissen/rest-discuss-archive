{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"bryan_w_taylor","from":"&quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"UtdpTl2SLyrzxCRttDh3TdPsQPwkGY4HhdqoGSZrQP7Y32tt5ZDV38qFBdN9NIhetM1MmRrDUXINCnprDv3x_6ww2ttzAF3-A2N47df8MQUrmg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: PUT for partial update of an existing resource","postDate":"1302764957","msgId":17435,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGlvNjZpdCszdjlhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJBTkxrVGltNjhfNl94d1B5V1pXbWpHT0Ewb2poRTYxa01nQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":17434,"nextInTopic":17436,"prevInTime":17434,"nextInTime":17436,"topicId":17415,"numMessagesInTopic":59,"msgSnippet":"... I hope someone will answer this question. If not PUT, then there is no idempotent method that allows partial updates. This is a clear gap. Given that some","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98784 invoked from network); 14 Apr 2011 07:09:19 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m17.grp.re1.yahoo.com with QMQP; 14 Apr 2011 07:09:19 -0000\r\nX-Received: from unknown (HELO n5-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.101)\n  by mta1.grp.re1.yahoo.com with SMTP; 14 Apr 2011 07:09:19 -0000\r\nX-Received: from [67.195.134.48] by n5.bullet.mail.sp2.yahoo.com with NNFMP; 14 Apr 2011 07:09:18 -0000\r\nX-Received: from [69.147.65.147] by t1.bullet.mail.sp2.yahoo.com with NNFMP; 14 Apr 2011 07:09:18 -0000\r\nX-Received: from [98.137.34.32] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 14 Apr 2011 07:09:18 -0000\r\nDate: Thu, 14 Apr 2011 07:09:17 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;io66it+3v9a@...&gt;\r\nIn-Reply-To: &lt;BANLkTim68_6_xwPyWZWmjGOA0ojhE61kMg@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: PUT for partial update of an existing resource\r\nX-Yahoo-Group-Post: member; u=119533972; y=9D7GJ_eZfGSutwuR6yks3rJSbqZKv_HjvEbvIRD1K-73Wn81SEMNliU\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\n\n\n\n\n\n\n\n--- In rest-discuss@yahoogroups.com, Mike Kelly &lt;mike@...&gt; wrote:\n\n&gt;=\r\n So; if the fullness of a PUT representation is not observable, then\n&gt; what=\r\n was the benefit of creating that restrictive definition? What\n&gt; infrastruc=\r\nture on the web is actually taking advantage of, or relying\n&gt; on, the fulln=\r\ness of PUT representations?\n\nI hope someone will answer this question.\n\nIf =\r\nnot PUT, then there is no idempotent method that allows partial updates. Th=\r\nis is a clear gap. Given that some implementers already interpret PUT to al=\r\nlow partial updates, if there is value in a &quot;full state overwrite&quot; method, =\r\nit seems better to add it under a different name and let PUT allow partial =\r\nupdates to validate the breadth of  interpretations implemented in practice=\r\n.\n\nThis could be done by adding a RESET_TO method that is required to be me=\r\nmoryless. A memoryless operation is one such that any sequences of operatio=\r\nns ending in it result in the same resource state. Memoryless operations ar=\r\ne idempotent, but this a stronger condition.\n\n\n"}}