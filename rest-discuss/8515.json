{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"We-irax_hL-YUPcBiMwUdYBrdkwifaFeyLK7rmp6nzOdWOzxCZzh28TeZtSAdPNBCeOAIgkc1fbT0CgLqSjlR5cNxV0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Am I getting it right?","postDate":"1179739446","msgId":8515,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NTE2NTM2LjUwMjA3MDJAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PGYycjVwbCsxMGMzcEBlR3JvdXBzLmNvbT4=","referencesHeader":"PGYycjVwbCsxMGMzcEBlR3JvdXBzLmNvbT4="},"prevInTopic":8514,"nextInTopic":8516,"prevInTime":8514,"nextInTime":8516,"topicId":8429,"numMessagesInTopic":22,"msgSnippet":"... The server can indeed store data. The client providing all the data necessary to process the request can be done by using the URI that the server is","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 20099 invoked from network); 21 May 2007 09:24:54 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m46.grp.scd.yahoo.com with QMQP; 21 May 2007 09:24:54 -0000\r\nReceived: from unknown (HELO mail.arena1.com) (63.116.216.131)\n  by mta9.grp.scd.yahoo.com with SMTP; 21 May 2007 09:24:54 -0000\r\nReceived: from UnknownHost [83.70.80.115] by mail.arena1.com with SMTP;\n   Mon, 21 May 2007 05:23:54 -0400\r\nMessage-ID: &lt;46516536.5020702@...&gt;\r\nDate: Mon, 21 May 2007 10:24:06 +0100\r\nUser-Agent: Thunderbird 2.0.0.0 (Windows/20070326)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;f2r5pl+10c3p@...&gt;\r\nIn-Reply-To: &lt;f2r5pl+10c3p@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [83.70.80.115]\r\nX-Declude-Spoolname: -157462973367.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.14 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [4] at 05:24:04 on 21 May 2007\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] Re: Am I getting it right?\r\nX-Yahoo-Group-Post: member; u=164939419; y=1EuUdw9CJ2gO8-6uONECByH3bVbPewzsiKGuLxyLCDzqSHd3\r\nX-Yahoo-Profile: hack_poet\r\n\r\nhovhannes_tumanyan wrote:\n&gt; Jon, Ittay,\n&gt; I agree with both of you in that RESTless server encapsulates the \n&gt; knowledg (or part of the knowledge) of how the data should be \n&gt; processed. However, it does not store the actual data it rather \n&gt; expects the client to provide all the data necessary to process the \n&gt; request. That can be the shopping card contents.\n\nThe server can indeed store data. The client &quot;providing all the data \nnecessary to process the request&quot; can be done by using the URI that the \nserver is using to identify a shopping cart resource.\n\n&gt; Client browses Amazon web site\n\nWhile we shouldn&#39;t focus on any particular site too much there is a \ndanger in paying attention to Amazon in particular because they have a \nwebservice that is often referred to as RESTful but which isn&#39;t. Their \nnon-RESTful service is no worse than any other non-RESTful webservice \n(in many ways it&#39;s very good) but just the fact that it gets cited so \noften incorrectly as an example of something that is RESTful is a \nproblem in itself.\n\n&gt; User selects on &quot;add to cart&quot; link\n&gt; Buy submits /cart?action=add&id=XXXX\n\nThat looks like GET being used perform an unsafe operation. That&#39;s \nhighly un-RESTful because it means we have GET doing something that GET \npromises not to do.\n\nThere&#39;s no reason to suppose that a user has selected an &quot;add to cart&quot; \nlink when something GET&#39;s /cart?action=add&id=XXXX, it could well have \nbeen a read-ahead cache and not a user at all.\n\nCaching becomes a mess. And other problems will ensue.\n\n&gt; There can be many vairations of this scheme. What&#39;s important to me \n&gt; is that each and every request has all the dynamic data.\n\nThat&#39;s not important at all. Webserver&#39;s can maintain data, that&#39;s what \nwebserver&#39;s do.\n\nIndeed, even with your method it&#39;s going to have to finally change it&#39;s \ndata on the final checkout of the cart.\n\nThe important thing is that the webserver changes it&#39;s data due to \nunsafe methods (POST, PUT, DELETE) and that it&#39;s data be retrieved do to \noperations on resources identified by URIs rather than the webserver \n&quot;knowing&quot; about the client or &quot;session&quot;. Webserver data is webserver \ndata, it shouldn&#39;t have data about the client.\n\n&gt; In other \n&gt; words, the session state, sometimes also referred as session context.\n\nREST does not have session state, session-state-by-the-back-door is \nstill session state.\n\nLet&#39;s look at how your resources are being partitioned. If you have \nadded items 12345 and 64245 to your cart and go to look at item 92741 \nthen you would have something like:\n\n/item?id=92741&cart=12345&cart=64245\n\nIn other words you don&#39;t have a resource identified by /item?id=92741 \nthat is that could be labelled in human-readable terms &quot;Item number \n92741&quot; you have &quot;Item number 92741 while looked at by someone who has \nitems 12345 and 64245 in their cart and no other items&quot;.\n\nHow often is that resource going to be used? One of the things that \nmakes a resource valuable is how often it gets looked at (caching is \njust one heavy advantage here).\n\nThe technique you suggest can be useful enough in cases of &quot;wizzard&quot; \ninterfaces for a handful of well-defined steps where information is \ngathered before used in a final POST or PUT to perform the task in one \ntransaction; a resource of &quot;step 2 of the wizard for a user who has \nselected choices B, C and E&quot; only affects the operation of the rest of \nthat wizard, but the value of wizards falls down once you have more than \na finite handful of clear steps. Having such a resource map for the part \nof a site that handles the user entering shipping and billing \ninformation before finally confirming it would, I&#39;d say, be harmless \nenough, but having a such a resource map for most of a site is very weak \ndesign.\n\n&gt; I deliberatly used ID&#39;s in the example aiming to demonstrate use of \n&gt; persistent server side data. To me server may and often will have \n&gt; constant data necessary to process requests. That can be inventory \n&gt; prices, availability etc. The important distinction, I believe, that \n&gt; server side data does not change in the course of normal operation.\n\nPUT, POST and DELETE are in HTTP for a reason.\n\n\n"}}