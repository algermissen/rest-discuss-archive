{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":24271648,"authorName":"John Panzer","from":"John Panzer &lt;jpanzer@...&gt;","profile":"zwyrthrop","replyTo":"SENDER","senderId":"Ku0_voCSccWu_o8THX3DnXih_zwtjMieLu53FBAyfzhdn4Dw_Y9DZLZGgJcVbsXFfuY1YJyJWcVF_ftROEP3GWahv-o","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Is user-specific data a valid resource?","postDate":"1181711346","msgId":8976,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NkY3QkYyLjUwMDA1MDNAYWNtLm9yZz4=","inReplyToHeader":"PDQ2NkU3ODA0LjUwMzA3MDZAaGFja2NyYWZ0Lm5ldD4=","referencesHeader":"PDQ2NkU0MDk1LjYwMjA5MDhAYWNtLm9yZz4gPDQ2NkU3ODA0LjUwMzA3MDZAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":8954,"nextInTopic":8977,"prevInTime":8975,"nextInTime":8977,"topicId":8943,"numMessagesInTopic":12,"msgSnippet":"... Side note:  Actually you can allow caching with a 0 ttl and a must-revalidate directive.  It s not nearly as good as simple time based caching of course,","rawEmail":"Return-Path: &lt;jpanzer@...&gt;\r\nX-Sender: jpanzer@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 80742 invoked from network); 13 Jun 2007 05:09:08 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m51.grp.scd.yahoo.com with QMQP; 13 Jun 2007 05:09:08 -0000\r\nReceived: from unknown (HELO coyote.he.net) (66.160.198.2)\n  by mta14.grp.scd.yahoo.com with SMTP; 13 Jun 2007 05:09:08 -0000\r\nReceived: from 70.231.239.190 ([70.231.239.190]) by coyote.he.net for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 12 Jun 2007 22:08:57 -0700\r\nMessage-ID: &lt;466F7BF2.5000503@...&gt;\r\nDate: Tue, 12 Jun 2007 22:09:06 -0700\r\nUser-Agent: Thunderbird 1.5.0.5 (Macintosh/20060719)\r\nMIME-Version: 1.0\r\nTo: Jon Hanna &lt;jon@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;466E4095.6020908@...&gt; &lt;466E7804.5030706@...&gt;\r\nIn-Reply-To: &lt;466E7804.5030706@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------050600030209080205030508&quot;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: John Panzer &lt;jpanzer@...&gt;\r\nSubject: Re: [rest-discuss] Is user-specific data a valid resource?\r\nX-Yahoo-Group-Post: member; u=24271648; y=3ZOinL-Quwy6SEIuyfiRdwdGh6iIu9fyE60fvj6nau2g1AP0\r\nX-Yahoo-Profile: zwyrthrop\r\n\r\n\r\n--------------050600030209080205030508\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nJon Hanna wrote:\n&gt; John Panzer wrote:\n&gt;   \n&gt;&gt; (1) Is it fine for a resource&#39;s bits to change per user, if it&#39;s defined \n&gt;&gt; in a user-relative way?  So, is &quot;Current Location of requesting user&quot; a \n&gt;&gt; valid resource retrievable via HTTP?  I think the answer is a \n&gt;&gt; noncontroversial yes, but wanted to double check before asking the followup:\n&gt;&gt;     \n&gt;\n&gt; A controversial &quot;yes, but&quot; from me.\n&gt;\n&gt; If you indicate the resource will change on the bases of the \n&gt; Authorization header with Vary: Authorization and add a bit of caution \n&gt; in how you allow it to be cached (i.e. you don&#39;t) because that may catch \n&gt; out some caches in practice, then fine.\n&gt;\n&gt;   \nSide note:  Actually you can allow caching with a 0 ttl and a \nmust-revalidate directive.  It&#39;s not nearly as good as simple time based \ncaching of course, but it&#39;s still useful in some cases.  Also you could \npossibly allow private caches only though this is... tricky.\n&gt; The &quot;but&quot;:\n&gt;\n&gt; In practice it will probably be more performant and reliable if this is \n&gt; done by having a bunch of resources for each user (which only that user \n&gt; - and perhaps admins or other users who would have a reason to look at \n&gt; them in a different context - can access) and the &quot;current location&quot; \n&gt; resource redirected to this through a 303 (303 because that is the \n&gt; cleanest choice for when the target exists in its own right as a \n&gt; separate resource).\n&gt;   \nThese could possibly be cached (privately) but incurs an extra network \nround trip.  And the client isn&#39;t allowed to cache the new Location: either.\n\nMore seriously, this could cause difficulties if you&#39;re doing anything \nother than GET on the resource.  If for example you want to POST to &quot;the \ncurrent user&#39;s set of buckets&quot; to create a new bucket, you definitely \ndon&#39;t want your POST turned into a GET.  I think the only other \nreasonable choice is 307 but that one still has problems with non-GETs; \nclients are supposed to confirm with users before redirecting a POST \neven with a 307, which is tremendously annoying in this context.  (Curl \nfor example requires a special flag to do this.)\n]\nSo it&#39;d be interesting to compare both approaches in practice.\n \n-John\n\n\r\n--------------050600030209080205030508\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=UTF-8&quot; http-equiv=&quot;Content-Type&quot;&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\nJon Hanna wrote:\n&lt;blockquote cite=&quot;mid466E7804.5030706@...&quot; type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;John Panzer wrote:\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;(1) Is it fine for a resource&#39;s bits to change per user, if it&#39;s defined \nin a user-relative way?  So, is &quot;Current Location of requesting user&quot; a \nvalid resource retrievable via HTTP?  I think the answer is a \nnoncontroversial yes, but wanted to double check before asking the followup:\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nA controversial &quot;yes, but&quot; from me.\n\nIf you indicate the resource will change on the bases of the \nAuthorization header with Vary: Authorization and add a bit of caution \nin how you allow it to be cached (i.e. you don&#39;t) because that may catch \nout some caches in practice, then fine.\n\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nSide note:  Actually you can allow caching with a 0 ttl and a\nmust-revalidate directive.  It&#39;s not nearly as good as simple time\nbased caching of course, but it&#39;s still useful in some cases.  Also you\ncould possibly allow private caches only though this is... tricky.&lt;br&gt;\n&lt;blockquote cite=&quot;mid466E7804.5030706@...&quot; type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;The &quot;but&quot;:\n\nIn practice it will probably be more performant and reliable if this is \ndone by having a bunch of resources for each user (which only that user \n- and perhaps admins or other users who would have a reason to look at \nthem in a different context - can access) and the &quot;current location&quot; \nresource redirected to this through a 303 (303 because that is the \ncleanest choice for when the target exists in its own right as a \nseparate resource).\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nThese could possibly be cached (privately) but incurs an extra network\nround trip.  And the client isn&#39;t allowed to cache the new Location:\neither.&lt;br&gt;\n&lt;br&gt;\nMore seriously, this could cause difficulties if you&#39;re doing anything\nother than GET on the resource.  If for example you want to POST to\n&quot;the current user&#39;s set of buckets&quot; to create a new bucket, you\ndefinitely don&#39;t want your POST turned into a GET.  I think the only\nother reasonable choice is 307 but that one still has problems with\nnon-GETs; clients are supposed to confirm with users before redirecting\na POST even with a 307, which is tremendously annoying in this\ncontext.  (Curl for example requires a special flag to do this.)&lt;br&gt;\n]&lt;br&gt;\nSo it&#39;d be interesting to compare both approaches in practice.&lt;br&gt;\n &lt;br&gt;\n-John&lt;br&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------050600030209080205030508--\r\n\n"}}