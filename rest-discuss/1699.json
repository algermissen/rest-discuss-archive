{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":113923099,"authorName":"Robert Leftwich","from":"Robert Leftwich &lt;robert@...&gt;","replyTo":"SENDER","senderId":"52vRd5CBvAyjHtIr1eRZSy7CxX0JKvjNNOhBh-SAviCTg62cB4pqwAcj_aVBmPWi4XxDnnTJ8li4EXXg5qaTd68EW-gnpmEM7CYTF7Y","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Security, REST and resources","postDate":"1025922270","msgId":1699,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUuMS4wLjE0LjAuMjAwMjA3MDYxMjI0MTEuMDI5MThlNDBAMTkyLjE2OC4wLjU+"},"prevInTopic":1688,"nextInTopic":1700,"prevInTime":1698,"nextInTime":1700,"topicId":1676,"numMessagesInTopic":18,"msgSnippet":"... Why do you *have* to PUT the *full* patient record? What is wrong with a PUT containing a representation of the state the user agent wants changed, in this","rawEmail":"Return-Path: &lt;robert@...&gt;\r\nX-Sender: robert@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 6 Jul 2002 02:24:45 -0000\r\nReceived: (qmail 81999 invoked from network); 6 Jul 2002 02:24:45 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m10.grp.scd.yahoo.com with QMQP; 6 Jul 2002 02:24:45 -0000\r\nReceived: from unknown (HELO mta03bw.bigpond.com) (139.134.6.86)\n  by mta2.grp.scd.yahoo.com with SMTP; 6 Jul 2002 02:24:45 -0000\r\nReceived: from localhost ([144.135.24.69]) by\n          mta03bw.bigpond.com (Netscape Messaging Server 4.15 mta03bw Apr\n          29 2002 13:22:02) with SMTP id GYT2P500.J61; Sat, 6 Jul 2002\n          12:24:41 +1000 \r\nReceived: from KTPP-p-203-54-167-190.prem.tmns.net.au ([203.54.167.190]) by bwmam01.mailsvc.email.bigpond.com(MailRouter V3.0n 2/3576115); 06 Jul 2002 12:24:41\r\nReceived: from fastdual.leftwich.info ([192.168.0.1]) by localmail with ESMTP id 15279 for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 6 Jul 2002 12:28:31 +1000\r\nX-Mail-Server: Eserv/2.97/Digital Innovations Pty Ltd\r\nMessage-Id: &lt;5.1.0.14.0.20020706122411.02918e40@192.168.0.5&gt;\r\nX-Sender: robert@192.168.0.5\r\nX-Mailer: QUALCOMM Windows Eudora Version 5.1\r\nDate: Sat, 06 Jul 2002 12:24:30 +1000\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;,&lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Security, REST and resources\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nFrom: Robert Leftwich &lt;robert@...&gt;\r\nX-Yahoo-Group-Post: member; u=113923099\r\n\r\nAt 03:10 AM 6/07/2002, S. Mike Dierken wrote:\n\n&gt;----- Original Message -----\n&gt;From: &quot;Robert Leftwich&quot; &lt;robert@...&gt;\n&gt;\n&gt; &gt; Adding attachments would simply be a matter of a POST to the\n&gt; &gt; patient record URI of an xml-structure containing the link to where the\n&gt; &gt; document resides. A similar approach can be taken to change or delete the\n&gt; &gt; link (i.e. PUT & DELETE). (Note that attachments are not identified as a\n&gt; &gt; sub-resource in their own right as they are simply links and as such it is\n&gt; &gt; not really necessary to expose them separately).\n&gt;Without an independent URI for the added link, you can&#39;t DELETE the link\n&gt;(since you can&#39;t identify the link you want to delete).\n&gt;You&#39;d have to PUT the full patient record with a list of all the links minus\n&gt;the one you don&#39;t want.\n\nWhy do you *have* to PUT the *full* patient record? What is wrong with a PUT\ncontaining a representation of the state the user agent wants changed, in\nthis case just the links it does want? For example, could the PUT contain a\nContent-Model header &#39;Attachments&#39; that told the server that this is the\nonly state it wanted to change, all the other state can remain the same?\n\n\n&gt; &gt; Is there something I am missing in my understanding of the use of ACL in\n&gt; &gt; REST, as this approach appears too fragile and inter-dependant for my\n&gt;liking?\n&gt; &gt;\n&gt;Can you provide a concrete example of ACL as it applies to these resources\n&gt;so we know what you are seeing from your perspective.\n\nGiven the standards focus of  REST I thought I would attempt to use the ACL\navailable in servlets.  It supports the association of a role to a\nURI/resource and an HTTP method if required, i.e.\n\n&lt;security-constraint&gt;\n     &lt;!-- web resources that are protected for all access --&gt;\n     &lt;web-resource-collection&gt;\n      &lt;web-resource-name&gt;Protected Resource&lt;/web-resource-name&gt;\n      &lt;url-pattern&gt;/patients/*&lt;/url-pattern&gt;\n     &lt;/web-resource-collection&gt;\n\n     &lt;auth-constraint&gt;\n      &lt;!-- role-name indicates roles that are allowed\n         to access the web resources specified above --&gt;\n      &lt;role-name&gt;system_user&lt;/role-name&gt;\n     &lt;/auth-constraint&gt;\n   &lt;/security-constraint&gt;\n\n   &lt;security-constraint&gt;\n     &lt;!-- specialists attachments that have protected\n          creation, update & deletion,\n          i.e are read-only for non-specialist roles --&gt;\n     &lt;web-resource-collection&gt;\n      &lt;web-resource-name&gt;Specialists Attachments&lt;/web-resource-name&gt;\n      &lt;url-pattern&gt;/patients/attachments/specialists/*&lt;/url-pattern&gt;\n      &lt;http-method&gt;POST&lt;/http-method&gt;\n      &lt;http-method&gt;PUT&lt;/http-method&gt;\n      &lt;http-method&gt;DELETE&lt;/http-method&gt;\n     &lt;/web-resource-collection&gt;\n\n     &lt;auth-constraint&gt;\n      &lt;role-name&gt;specialist&lt;/role-name&gt;\n     &lt;/auth-constraint&gt;\n   &lt;/security-constraint&gt;\n\n   &lt;security-constraint&gt;\n     &lt;!-- police attachments that have protected\n          creation, update & deletion\n          i.e are read-only for non-police roles --&gt;\n     &lt;web-resource-collection&gt;\n      &lt;web-resource-name&gt;Police Attachments&lt;/web-resource-name&gt;\n      &lt;url-pattern&gt;/patients/attachments/police/*&lt;/url-pattern&gt;\n      &lt;http-method&gt;POST&lt;/http-method&gt;\n      &lt;http-method&gt;PUT&lt;/http-method&gt;\n      &lt;http-method&gt;DELETE&lt;/http-method&gt;\n     &lt;/web-resource-collection&gt;\n\n     &lt;auth-constraint&gt;\n      &lt;role-name&gt;police_officer&lt;/role-name&gt;\n     &lt;/auth-constraint&gt;\n   &lt;/security-constraint&gt;\n\nLets assume that the security requirements change so that you no longer want\nall police_officer roles being able to create, update or delete any of the\nreports, you only want them to be able to do this to reports from their own\nprecinct. To do this you will need to change the resource modelling to\ninclude the precinct in order for you to define the resources at the correct\ngranularity to meet the requirement, e.g.\n\n   &lt;security-constraint&gt;\n     &lt;!-- police attachments that have protected\n          creation, update & deletion for precinct1\n          i.e are read-only for non-police roles --&gt;\n     &lt;web-resource-collection&gt;\n      &lt;web-resource-name&gt;Police Attachments Precinct 1&lt;/web-resource-name&gt;\n      &lt;url-pattern&gt;/patients/attachments/police/precinct1/*&lt;/url-pattern&gt;\n      &lt;http-method&gt;POST&lt;/http-method&gt;\n      &lt;http-method&gt;PUT&lt;/http-method&gt;\n      &lt;http-method&gt;DELETE&lt;/http-method&gt;\n     &lt;/web-resource-collection&gt;\n\n     &lt;auth-constraint&gt;\n      &lt;role-name&gt;precinct1_officer&lt;/role-name&gt;\n     &lt;/auth-constraint&gt;\n   &lt;/security-constraint&gt;\n\n   &lt;security-constraint&gt;\n     &lt;!-- police attachments that have protected\n          creation, update & deletion for precinct 2,\n          i.e are read-only for non-police roles --&gt;\n     &lt;web-resource-collection&gt;\n      &lt;web-resource-name&gt;Police Attachments Precinct 2&lt;/web-resource-name&gt;\n      &lt;url-pattern&gt;/patients/attachments/police/precinct2/*&lt;/url-pattern&gt;\n      &lt;http-method&gt;POST&lt;/http-method&gt;\n      &lt;http-method&gt;PUT&lt;/http-method&gt;\n      &lt;http-method&gt;DELETE&lt;/http-method&gt;\n     &lt;/web-resource-collection&gt;\n\n     &lt;auth-constraint&gt;\n      &lt;role-name&gt;precinct2_officer&lt;/role-name&gt;\n     &lt;/auth-constraint&gt;\n   &lt;/security-constraint&gt;\n\n...\n\n\n&gt;If I had an ACL system that was aware of HTTP messages, I could filter on\n&gt;portion of the message - method, content-type, user-id, etc.:\n\nDo you know of any standards based ACL that provides such features?\n\nI am slowly(!) coming to the realization that although REST portrays itself\nas being based on existing and long-standing (in web terms) standards, it\nreally is only based on a small number of very low-level standards (HTTP,\nURI, etc) and anything else that is needed to build systems based on its&#39;\nprinciples requires the definition of your own standards or at least the use\nof a standardized approach as defined by the few REST gurus, i.e.\nasynchronous notifications, reliable delivery , security,  authentication,\nauthorization, orchestration, message payloads, etc. most of which appear to\nhave yet to be used in anger in systems of any note.\n\nThis is an extremely difficult thing to sell to yourself, let alone to your\nbosses and clients in the face of the juggernaut that is Web Services ala\nSOAP, etc.\n\nRobert\n\n\n"}}