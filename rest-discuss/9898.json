{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"pkeane","from":"pkeane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"4YxiUzR2musvs0oI3-s7GkuTcMFZlQxOvC8EwmKQ0Pw1DGF-E057dVvD1xgcDdnhX7MD7u2GE-6edD2z_OPxGJGu_3F83w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] are cookies EVER restful?","postDate":"1196621795","msgId":9898,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFscGluZS5MTlguMC45OTk5LjA3MTIwMjEyMTIyNTAuMjY0NjFAaGFycG8ubGFpdHMudXRleGFzLmVkdT4=","inReplyToHeader":"PDQ3NTJFMjBBLjYwNzA4MDlAbWV0YWxhYi51bmMuZWR1Pg==","referencesHeader":"PGFscGluZS5MTlguMC45OTk5LjA3MTIwMTA5NTQyNjAuMTk5MThAaGFycG8ubGFpdHMudXRleGFzLmVkdT4gPDQ3NTFEMDBGLjcwNjA1QG1ldGFsYWIudW5jLmVkdT4gPGFscGluZS5MTlguMC45OTk5LjA3MTIwMTE2NTg0NDAuMjA4ODJAaGFycG8ubGFpdHMudXRleGFzLmVkdT4gPDQ3NTIwMkExLjgwNjA5MDJAbWV0YWxhYi51bmMuZWR1PiA8YWxwaW5lLkxOWC4wLjk5OTkuMDcxMjAxMjE0NTAwMC4yMDg4MkBoYXJwby5sYWl0cy51dGV4YXMuZWR1PiA8NDc1MkE5NTMuNDAwMDgwM0BtZXRhbGFiLnVuYy5lZHU+IDxhbHBpbmUuTE5YLjAuOTk5OS4wNzEyMDIwODEzMzgwLjI1ODAyQGhhcnBvLmxhaXRzLnV0ZXhhcy5lZHU+IDw0NzUyRTIwQS42MDcwODA5QG1ldGFsYWIudW5jLmVkdT4="},"prevInTopic":9897,"nextInTopic":9899,"prevInTime":9897,"nextInTime":9899,"topicId":9891,"numMessagesInTopic":99,"msgSnippet":"... Agreed to the extent that the client needs to manage those compound objects (i.e. new resources), but needing to assign them a URI, I m not convinced. I","rawEmail":"Return-Path: &lt;pkeane@...&gt;\r\nX-Sender: pkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5747 invoked from network); 2 Dec 2007 18:56:36 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m46.grp.scd.yahoo.com with QMQP; 2 Dec 2007 18:56:36 -0000\r\nX-Received: from unknown (HELO harpo.laits.utexas.edu) (128.83.27.7)\n  by mta18.grp.scd.yahoo.com with SMTP; 2 Dec 2007 18:56:36 -0000\r\nX-Received: by harpo.laits.utexas.edu (Postfix, from userid 1000)\n\tid B66503E00D5; Sun,  2 Dec 2007 12:56:35 -0600 (CST)\r\nX-Received: from localhost (localhost [127.0.0.1])\n\tby harpo.laits.utexas.edu (Postfix) with ESMTP id B2A813E00D4;\n\tSun,  2 Dec 2007 12:56:35 -0600 (CST)\r\nDate: Sun, 2 Dec 2007 12:56:35 -0600 (CST)\r\nX-X-Sender: pkeane@...\r\nTo: Elliotte Rusty Harold &lt;elharo@...&gt;, \n    rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;4752E20A.6070809@...&gt;\r\nMessage-ID: &lt;alpine.LNX.0.9999.0712021212250.26461@...&gt;\r\nReferences: &lt;alpine.LNX.0.9999.0712010954260.19918@...&gt; &lt;4751D00F.70605@...&gt; &lt;alpine.LNX.0.9999.0712011658440.20882@...&gt; &lt;475202A1.8060902@...&gt; &lt;alpine.LNX.0.9999.0712012145000.20882@...&gt;\n &lt;4752A953.4000803@...&gt; &lt;alpine.LNX.0.9999.0712020813380.25802@...&gt; &lt;4752E20A.6070809@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: pkeane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] are cookies EVER restful?\r\nX-Yahoo-Group-Post: member; u=11652427; y=5y0l5b4nNlNEgKPmihAg9-mexx54NHqPzd4WRafT_dGYfhj9oxKygEuZeg\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\n\nOn Sun, 2 Dec 2007, Elliotte Rusty Harold wrote:\n\n&gt; pkeane wrote:\n&gt;\n&gt;&gt; For me it comes down to this:  The CLIENT needs to know &quot;who&quot; the user is \n&gt;&gt; across multiple requests (application state, which is A-OK as long as it \n&gt;&gt; lives on & is controlled by the client) so it can fire XHRs which are \n&gt;&gt; asking for THIS user&#39;s data.  The two choices are a cookie (which I contend \n&gt;&gt; is not unRESTful if used in this way) OR always including the user-id in \n&gt;&gt; the page URL so that the server can encode that user-id in the hypertext \n&gt;&gt; which the client can then use to get more (personalized) data.\n&gt;&gt; \n&gt;\n&gt; If the client is building the page/resource, then the client should be \n&gt; assigning and managing URIs for those resources. The server does not need to \n&gt; know about these URIs, but that doesn&#39;t mean no one needs to know about them.\n&gt;\n\nAgreed to the extent that the client needs to manage those compound \nobjects (i.e. new resources), but needing to assign them a URI, I&#39;m not \nconvinced. I think we&#39;re beyond the edge of finding benefit in REST \nconstraints.  E.g., if I print out a bunch of articles from xml.com & \nstaple them together I have created a new resource. But there may or may \nnot be any advantage to assigning that resource a URI.  To suggest it is a \nbad idea for me to create that compound object because I have no intention \nof giving it a URI is where I see the problem.  The browser can manage \nthose resources any way it wishes and my contention is that cookies & XHR \nare the best tools we have right now to do that, and by effectively \nseparating out that concern from the server opens up a world of \npossibilities/opportunities.\n\n&gt; It is a fundamental principle of REST that resources are identified by URIs \n&gt; and not by some combination of URI and some non-URI identifier like a cookie. \n&gt; The URI alone should be sufficient. There are very good reasons for this \n&gt; principle.\n&gt;\n\nAgreed, but that&#39;s not what I am talking about here.  In no case is there \na &quot;shared secret&quot; communicated by way of a cookie.  The cookie is used \nONLY to construct a new url to access another resource. Whether I use a \ncookie or or some other mechanism is irrelevant.  Perhaps &quot;cookie&quot; is now \nso loaded w/ bad connotations (and a history of misuse) that one dare not \ngo there.  Firefox now allows you to &quot;bookmark&quot; a set of open tabs.  I see \nno reason not to offer that capability simply because it violates a REST \nconstraint.\n\n&gt; You seem to be getting hung up on a not-hugely relevant distinction between \n&gt; client and server, In the scenario you describe, the browser is in effect \n&gt; running a server, maybe not an HTTP server but a potentially RESTful server \n&gt; nonetheless. To REST, a server is simply that which receives URIs and returns \n&gt; representations.\n&gt;\n\nYes, agreed wholeheartedly and that&#39;s exactly where I am going with this. \nThe browser will become increasingly more like a server (interesting that \nRoy F&#39;s latest talk &quot;A Little REST and Relaxation&quot; hints at a relaxation \nof the client/server constraint to be a useful experiment).  I&#39;ve been \nplaying with the Firefox &quot;POW&quot; (plain old web server) plugin for image \nuploading to great effect (I don&#39;t &quot;send&quot; images to the server, rather I \npoint to a local directory and let the server grab &#39;em).\n\n&gt; Different URIs are served to the browser from different servers, one of which \n&gt; is the browser itself; but this does not change the fundamental principle \n&gt; that different resources should have different URIs.\n&gt;\n\nBut assigned by whom?  The server or the browser-as-server?  I see this as \na separation-of-concerns issue.  Building a restful web service need not \nrequire me (the guy developing the service on the server side) to worry \nabout those URIs that might need to be assigned to new combinations of my \nresources -- that&#39;s a task for the &quot;application&quot; that lives on the client \nand is going to use my service. (note that in my original example the \nclient-side &quot;application&quot; is the javascript that manages the cookies and \nfires off the XHRs).\n\nUltimately, I feel like there is a great opportunity to create really \nuseful and simple web services by offloading some of the organizing the \ncreation of new compound objects onto the client, and that we have the \ntools -- not ideal, perhaps -- in cookies, javascript & XHR, to do just \nthat.\n\n-peter\n\n&gt;\n&gt; -- \n&gt; Elliotte Rusty Harold  elharo@...\n&gt; Java I/O 2nd Edition Just Published!\n&gt; http://www.cafeaulait.org/books/javaio2/\n&gt; http://www.amazon.com/exec/obidos/ISBN=0596527500/ref=nosim/cafeaulaitA/\n&gt;\n\n"}}