{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Um6f-DgHW6vC40A_XdDZDSuM8owM1hqq51-ssN64z9npDBPK9aLtUUT0FNSMh9ijvOI7W3HU6FaY-AyXsSCEp0Vj1VPU4thjqrcw2QT5WQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one  DELETE","postDate":"1237660680","msgId":12297,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzIxMTIzODAwLjc1OWQyMzViLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEJMVTEwMi1EUzFENTJBMTIwNEQ0NDdGRkI5MTYyQkI1OTcwQHBoeC5nYmw+","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMTgxNTE5MzYuNDkzMzlmZTQuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8NTAzN2I2ZTQwOTAzMTgxNDI1cDY2Y2E1NzhldWY2NWIzNDAyN2NkY2I4YWVAbWFpbC5nbWFpbC5jb20+CTwyMDA5MDMxODE2MzYwMS40MDQ3ZDA2Yi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw1MDM3YjZlNDA5MDMxODE2MzhuNTVhYWM3ZTBuMzdkMjJkYzNiYzE0YjE3MEBtYWlsLmdtYWlsLmNvbT4JPDIwMDkwMzE4MjEwNTI3LmZlNDJkYWZlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDUwMzdiNmU0MDkwMzE5MDA0MXI1MzYwZTA4ZGlmNzE4ZTI3MDQ5MDQwYTljQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMTkwMjA2MDMuMjk5NDBhZTYuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8NTAzN2I2ZTQwOTAzMTkwMTE4aDM4YjhmMDRkeTQzZWIxNzE4YTIwYjEyOGNAbWFpbC5nbWFpbC5jb20+CTwyMDA5MDMxOTAzMTUzOC41ODllZjdhNi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwyZmE1NTQ0NzA5MDMxOTA1MDNrM2ZjMWM4ZjB0ZWM5NTI2MDgwNWJjYzRjZkBtYWlsLmdtYWlsLmNvbT4JPDIwMDkwMzIwMDMzMTM2LjE2OThkNGY2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEJMVTEwMi1XNUY1NzhENDJCRDU4OUMwQTFBRTFCQjU5NzBAcGh4LmdibD4JPDIwMDkwMzIwMDUyODE2LjFlMzRiMmE2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEJMVTEwMi1EUzY4NzA3NUY2MjNEMkM2OTRDOTA3OEI1OTcwQHBoeC5nYmw+CTwyMDA5MDMyMDA3MzUxNS5kNTE0OWFiMS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxCTFUxMDItRFMxRDUyQTEyMDRENDQ3RkZCOTE2MkJCNTk3MEBwaHguZ2JsPg=="},"prevInTopic":12296,"nextInTopic":12298,"prevInTime":12296,"nextInTime":12298,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... Right.  But the semantics of POST aren t quite as set in stone as those of DELETE, either... ... I don t think so.  It sounds like you re describing a code","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 79046 invoked from network); 21 Mar 2009 18:37:36 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m2.grp.sp2.yahoo.com with QMQP; 21 Mar 2009 18:37:36 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 21 Mar 2009 18:37:35 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 8EC62D051E;\n\tSat, 21 Mar 2009 14:37:34 -0400 (EDT)\r\nDate: Sat, 21 Mar 2009 12:38:00 -0600\r\nTo: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nCc: &lt;amsmota@...&gt;, &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090321123800.759d235b.eric@...&gt;\r\nIn-Reply-To: &lt;BLU102-DS1D52A1204D447FFB9162BB5970@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t&lt;20090318151936.49339fe4.eric@...&gt;\n\t&lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt;\n\t&lt;20090318163601.4047d06b.eric@...&gt;\n\t&lt;5037b6e40903181638n55aac7e0n37d22dc3bc14b170@...&gt;\n\t&lt;20090318210527.fe42dafe.eric@...&gt;\n\t&lt;5037b6e40903190041r5360e08dif718e27049040a9c@...&gt;\n\t&lt;20090319020603.29940ae6.eric@...&gt;\n\t&lt;5037b6e40903190118h38b8f04dy43eb1718a20b128c@...&gt;\n\t&lt;20090319031538.589ef7a6.eric@...&gt;\n\t&lt;2fa554470903190503k3fc1c8f0tec95260805bcc4cf@...&gt;\n\t&lt;20090320033136.1698d4f6.eric@...&gt;\n\t&lt;BLU102-W5F578D42BD589C0A1AE1BB5970@...&gt;\n\t&lt;20090320052816.1e34b2a6.eric@...&gt;\n\t&lt;BLU102-DS687075F623D2C694C9078B5970@...&gt;\n\t&lt;20090320073515.d5149ab1.eric@...&gt;\n\t&lt;BLU102-DS1D52A1204D447FFB9162BB5970@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use\n one  DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nSebastien Lambla wrote:\n\n&gt; \n&gt; If a client creates a bucket resource and append other resources to\n&gt; it (POST /bucket -&gt; 201, POST /bucket/21 etc), this is not a &quot;typed&quot;\n&gt; resource.\n&gt; \n\nRight.  But the semantics of POST aren&#39;t quite as set in stone as those\nof DELETE, either...\n\n&gt;\n&gt; Of course there&#39;s out of band information, that&#39;s exactly the job of\n&gt; a media type. It&#39;s a prior interaction contract. It would define that\n&gt; you have such a thing as collection of resources called buckets, and\n&gt; that if you create such a bucket and then delete it, it will delete\n&gt; any resource that you added to that bucket.\n&gt; \n\nI don&#39;t think so.  It sounds like you&#39;re describing a code library\nshared between client and server.  Media types don&#39;t define method\nsemantics.  If I call the DELETE method of a URI, the media type is\nirrelevant to how that request is handled.  Same with GET and PUT.\nDifferential media types for PATCH don&#39;t alter what PATCH does.\n\n&gt;\n&gt; It doesn&#39;t make the /bucket a resource type that is understood by the\n&gt; client in advance. It makes the case that when you want to create a\n&gt; new resource, and it&#39;s of type app/vnd.acme.bucket+xml, deleting said\n&gt; resource may delete any resource that has been added to that specific\n&gt; resource. *what* the resource is is not very important for the\n&gt; client, what the resource representation loos like (aka &lt;form\n&gt; method=POST class=addToBucket action=/bucket/21&gt;) and the associated\n&gt; interaction model is.\n&gt; \n\nI&#39;ve just read through a whole bunch of media-type declaration\ndocuments.  I don&#39;t see any media types which define what DELETE does,\nor any other method. RFC 2616 defines what the PUT method can do.  Atom\nProtocol constrains PUT to only one of those meanings.  It would be an\nerror for Atom Protocol to define PUT as a partial update -- media\ntypes may constrain the semantics of a method, but they don&#39;t define\nthem.\n\n&gt;\n&gt; There&#39;s no classes of resources, there&#39;s representations that do let\n&gt; you direct the interaction model. That&#39;s exactly what html forms do.\n&gt; &quot;here&#39;s a URI on which you can append data in such a way, and the\n&gt; following should happen when you click on the button&quot;.\n&gt; \n\nThe various HTML media types constrain form interaction to GET and\nPOST, they don&#39;t modify the definitions of GET and POST.\n\n&gt;\n&gt; What exactly would be the issue in the following:\n&gt; GET /items?name=a*\n&gt; SeeOther: /bucket/21\n&gt; GET /bucket/21\n&gt; &lt;bucket&gt;\n&gt;  &lt;items href=&quot;/bucket/21/items&quot;&gt;\n&gt;   &lt;order name=&quot;ah well&quot; href=&quot;http://orders/ah_well&quot; /&gt;\n&gt;  &lt;/items&gt;\n&gt;  &lt;action name=&quot;deleteEntries&quot; method=&quot;delete&quot;\n&gt; action=&quot;/bucket/21/items&quot; /&gt; &lt;action name=&quot;deleteBucket&quot;\n&gt; method=&quot;delete&quot; action=&quot;/bucket/21&quot; /&gt; &lt;/bucket&gt;\n&gt; \n\nThere&#39;s nothing wrong with a form that instructs the client to delete\ntwo different resources.  There&#39;s everything wrong, if those two\ndistinct deletions the client wants, are handled in a single request.\n\n&gt; \n&gt; How the client decides which action to invoke is out of band\n&gt; information, with semantics defined in the media type. Code on demand\n&gt; can be used for clients that do not know about the app/vnd.acme.bucket\n&gt; +xml media type.\n&gt; \n\nMethod semantics are never set by media type.\n\n&gt;\n&gt; And pre-emptively, I don&#39;t belive that having an order resource\n&gt; living at both /orders/ah_well and /bucket/21/items/1, and being\n&gt; deleted from both whenever a delete is triggered on either, is\n&gt; unrestful, or break the uniform interface.\n&gt; \n\nFor the dozenth time in this thread, you&#39;re right, it isn&#39;t and it\ndoesn&#39;t.  That&#39;s server behavior, a stored procedure, whatever you want\nto call it.  It still comes down to what the client requested.  If the\nclient is trying to delete two separate resources, whose URIs are sent\nto the server as part of a single request, then you have something\nwhich doesn&#39;t begin to resemble REST.\n\nIf the client requests one resource to be DELETEd, and the server\ndeletes another resource as well, so be it -- provided that second\ndeletion isn&#39;t somehow part of the client request.\n\n-Eric\n\n"}}