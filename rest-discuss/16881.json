{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"tggXRozfyLVEXhh-RJZI0QKhWzTJxsaOf76owCeVRs-jgAkRneTKj1eqrLyrg-oe0pRcYAuvbhodREzl-1Mi2Iruahw8Cz2UJEDQBg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Partial PUT debate","postDate":"1289496389","msgId":16881,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGliaDkwNStjZmc3QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRDREJDOTQ4LjcwMDAwMDdAb3V0ZXJ0aG91Z2h0Lm9yZz4="},"prevInTopic":16880,"nextInTopic":16883,"prevInTime":16880,"nextInTime":16882,"topicId":16839,"numMessagesInTopic":40,"msgSnippet":"... Ok but earlier in the thread I made a distinction between the server filling in the rest of the details using the previous resource state and doing so","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34974 invoked from network); 11 Nov 2010 17:26:31 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 11 Nov 2010 17:26:31 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta3.grp.sp2.yahoo.com with SMTP; 11 Nov 2010 17:26:31 -0000\r\nX-Received: from [69.147.65.149] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 11 Nov 2010 17:26:31 -0000\r\nX-Received: from [98.137.34.35] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 11 Nov 2010 17:26:31 -0000\r\nDate: Thu, 11 Nov 2010 17:26:29 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;ibh905+cfg7@...&gt;\r\nIn-Reply-To: &lt;4CDBC948.7000007@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: Partial PUT debate\r\nX-Yahoo-Group-Post: member; u=221173245; y=of5ExJkHh3WHRaHTrgnFraKhYEoI9gDWNbbGKJ_mYdr2tSFOCw\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\n\n--- In rest-discuss@yahoogroups.com, Marc Portier &lt;mpo@...&gt; wrote:\n&gt;\n&gt; \n&gt; =\r\n\n&gt; On 11/10/2010 07:34 PM, Andrew Wahbe wrote:\n&gt; &gt;\n&gt; &gt; Ok, I understand you=\r\nr question a bit better now.\n&gt; &gt; To me a key issue is that you seem to be a=\r\nddressing a specific\n&gt; &gt; sub-resource (the part of the resource updated by =\r\nthe PUT) but this\n&gt; &gt; addressing is not done in the URI. I&#39;d have to assume=\r\n you are using a\n&gt; &gt; portion of the body (implicitly or explicitly) to addr=\r\ness the piece of\n&gt; &gt; the resource that gets updated.\n&gt; \n&gt; I would think not=\r\n a portion of the body but the entire body: the \n&gt; contract that this serve=\r\nr takes in supporting partial update is that it \n&gt; offers the client the op=\r\nportunity to only transfer that portion of the \n&gt; resource-state it wants t=\r\no change (or very pragmatically only the \n&gt; portion it cares about)\n&gt; \n&gt; - =\r\nor even &quot;knows&quot; about in case of security filtering\n&gt; \n&gt; - or is &#39;capable&#39; =\r\nof updating in case it choose to use some \n&gt; format/media-type that is not =\r\ncapable to transfer all subtleties of the \n&gt; resource&#39;s members\n&gt; \n&gt; So rea=\r\nlly: I don&#39;t see a hidden &#39;address&#39;, only the agreement that the \n&gt; represe=\r\nntation in the body can be &#39;sparse&#39;  (after all: the message-body \n&gt; for an=\r\ny method just holds a representation, never the resource itself :) )\n&gt; \n\nOk=\r\n but earlier in the thread I made a distinction between the server filling =\r\nin the rest of the details using the previous resource state and doing so w=\r\nithout. Mark Baker also extended things a bit saying: \n&quot; The important part=\r\n from a REST perspective is that the meaning of the PUT message is independ=\r\nent of the state of the resource.&quot;\n\nI *think* the examples you give fall in=\r\nto the stuff that&#39;s &quot;ok&quot; based on this. In which case we&#39;re in agreement on=\r\n the above.\n\nThe sticky part is the &quot;but please *don&#39;t change* the other pa=\r\nrt(s)&quot; that is implicit in the Partial PUTs I think Mike is referring to. I=\r\n think that leads you into trouble as I&#39;ve described elsewhere in the threa=\r\nd.\n\n&gt; &gt; If you take the example to its extreme you could just execute all P=\r\nUT\n&gt; &gt; operations on the &quot;/&quot; resource and identify the sub-path in the body=\r\n.\n&gt; &gt;\n&gt; \n&gt; very extreme, and nobody is suggesting that, right?\n\nTaking some=\r\nthing to the extreme sometimes helps point out what is wrong especially whe=\r\nn there is no well-defined line where &quot;extreme&quot; starts.\n\n&gt; \n&gt; &gt; I see a few=\r\n negatives (in addition to Jan&#39;s points):\n&gt; &gt; - you are hurting visibility =\r\nby moving addressing out of the URI\n&gt; \n&gt; don&#39;t agree: there is no sub-resou=\r\nrce IMHO, just a sparse representation \n&gt; of the resource state\n&gt; \n&gt; &gt; - yo=\r\nu can&#39;t use etags and conditional requests to control updates these\n&gt; &gt; spe=\r\ncific portions you are updating, just to the &quot;parent&quot; resource\n&gt; \n&gt; on the =\r\ncontrary: in cases where this is important, the usage of etags \n&gt; and condi=\r\ntionals would allow to guarantee that the partial PUT is only \n&gt; applied if=\r\n the resource wasn&#39;t changed yet.\n&gt; \n&gt; so in fact the conditional part in t=\r\nhis case completes the sparse-ness \n&gt; of the passed sparse-representation\n\n=\r\nI think you are implying that it is ok for PUT to be non-idempotent or part=\r\nial only-if etags & conditional requests. I disagree. The properties must h=\r\nold without them.\nI touched on the advantages of this earlier here:\nhttp://=\r\ntech.groups.yahoo.com/group/rest-discuss/message/16857\n\n&gt; \n&gt; &gt; - while thin=\r\ngs seem fine from the perspective of repeating a single\n&gt; &gt; operation multi=\r\nple times, you don&#39;t have the same properties for\n&gt; &gt; non-conditional inter=\r\nleaved PUTs from multiple writers. Here, the state\n&gt; \n&gt; as mentioned above:=\r\n etags and conditionals can make it do what you want \n&gt; here I think, in th=\r\ne end you get some semantics about the parts not in \n&gt; the put-representati=\r\non saying: &quot;IF you&#39;re still in the same state I just \n&gt; GOT, then I&#39;m sure =\r\nthat changing only the fields I&#39;m passing you will \n&gt; bring the resource in=\r\n the expected state&quot;\n&gt; \n&gt; and for apps that don&#39;t need these checks the par=\r\nts not mentioned in the \n&gt; put-body can be considered as &quot;don&#39;t care&quot;\n&gt; \n&gt; =\r\n(update-counters, update-timestamps would be typical examples here, but \n&gt; =\r\non the correct level of abstraction system-data, meta-data all just is \n&gt; d=\r\nata, no?)\n&gt; \n&gt; All in all: the server still has the right to interpret, par=\r\ntially \n&gt; ignore, additionally decorate whatever you&#39;ve PUT to update the \n=\r\n&gt; &#39;resource state&#39; (it might even have an effect on resources not \n&gt; addres=\r\nsed in this put)\n\nAgain, you are preventing the &quot;normal&quot; (non-conditional) =\r\nPUT semantics of &quot;please update the state to this&quot;. Again, I&#39;m fine if the =\r\nparts you don&#39;t specify are &quot;don&#39;t care&quot; parts -- the real problem I think =\r\narises is when you do care.\n\n\n&gt; \n&gt; &gt; of the resource is not the state speci=\r\nfied by the last successful PUT\n&gt; &gt; (as is usually the case). That is quite=\r\n a significant difference in some\n&gt; &gt; apps I would think.\n&gt; &gt;\n&gt; \n&gt; I agree.=\r\n However you correctly mention apps, not user-agents (or \n&gt; intermediaries)=\r\n: those should not make any assumptions on the result of \n&gt; GET just becaus=\r\ne they just completed a successful PUT, right?\n&gt; \n&gt; Looking at it from that=\r\n angle I don&#39;t think the partial put violates the \n&gt; HTTP contracts, and al=\r\nso keeps playing nice with the REST principles.\n&gt; \nI gave an example of pot=\r\nential problems with intermediaries here:\nhttp://tech.groups.yahoo.com/grou=\r\np/rest-discuss/message/16880\n\nThe key problem is that idempotent & &quot;not dep=\r\nending on previous state&quot; imply that state is fully determined by last PUT/=\r\nDELETE. (Here I&#39;m assuming that the &quot;don&#39;t care&quot; bits &quot;don&#39;t matter&quot; in the=\r\n same way they don&#39;t for &quot;safe&quot; GETs -- i.e. the statement &quot;The important d=\r\nistinction here is that the user did not request the side-effects, so there=\r\nfore cannot be held accountable for them.&quot; has a corollary of &quot;... the user=\r\n did not specify how to change the portion of state set by the server based=\r\n on prior state and therefore cannot be held accountable for it.&quot; Or someth=\r\ning like that. This allows the intermediary I described in the linked messa=\r\nge to work correctly.\n\nAgain the key distinction is between the client &quot;not=\r\n caring&quot; about unspecified portion vs. an implicit request to leave it unch=\r\nanged.\n\nThis discussion has raised the following question for me though: Ca=\r\nn the use of an etag in a conditional request be considered as an implicit =\r\ndescription (by reference) of the portion of resource state not explicitly =\r\ndescribed in the body? i.e. the message means set the state as it was in th=\r\ne version indicated by the etag but also apply the changes described in the=\r\n body? If so then perhaps we fall into alignment... a little concerned on t=\r\nhe use of an etag for this though as it isn&#39;t necessarily clearly understoo=\r\nd by all parties (not fully self-descriptive but maybe &quot;self-descriptive en=\r\nough&quot;?). As the request fails if the current state doesn&#39;t match the one re=\r\nferred to by the etag it gets a bit fuzzy for sure... I&#39;m also not too fond=\r\n of a request that is valid only-if done conditionally...\n\nAndrew\n\n\n\n\n"}}