{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"9S8F54swyNXRF6VHquddjdStmJ5-0sM-rGVSuRsulpV4frPQiPL1_JoXApW4b1-YIppG4QhFCRoZCZrekBfw8lKmpiigKA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [MIME-RPC] MIME-RPC versus the REST+XML architectural style","postDate":"1011407829","msgId":66,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNDhEQkQ1LjVENjlGQkJCQHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTE4MTEyMjM3MC4yMzQwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":62,"nextInTopic":145,"prevInTime":65,"nextInTime":67,"topicId":54,"numMessagesInTopic":6,"msgSnippet":"... I believe that I cut and pasted all of those MIME-RPC examples from your examples pages! ... Not according to this URL: ","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 19 Jan 2002 02:38:12 -0000\r\nReceived: (qmail 71261 invoked from network); 19 Jan 2002 02:38:12 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m12.grp.snv.yahoo.com with QMQP; 19 Jan 2002 02:38:12 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.snv.yahoo.com with SMTP; 19 Jan 2002 02:38:12 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0J2bv430275;\n\tFri, 18 Jan 2002 18:37:57 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0J2bte27661;\n\tFri, 18 Jan 2002 18:37:56 -0800\r\nMessage-ID: &lt;3C48DBD5.5D69FBBB@...&gt;\r\nDate: Fri, 18 Jan 2002 18:37:09 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nCc: rest-discuss@yahoogroups.com, mime-rpc@...-rpc.com\r\nSubject: Re: [MIME-RPC] MIME-RPC versus the REST+XML architectural style\r\nReferences: &lt;Pine.WNT.4.43.0201181122370.2340-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt; Paul,\n&gt; \n&gt; Your structuring your MIME-RPC examples to be\n&gt; harder to read and biasing the discussion.\n\nI believe that I cut and pasted all of those MIME-RPC examples from your\nexamples pages!\n\n&gt; The MIME-RPC state name request looks like this:\n&gt; \n&gt;    POST /states HTTP/1.1\n&gt; \n&gt;    10023\n\nNot according to this URL:\n\nhttp://www.mime-rpc.com/examples.html\n\n&gt; It is not obvious that this is substantially\n&gt; simpler than the REST\n&gt; \n&gt;    GET /states/10023 HTTP/1.1\n\nIt may not be much more complicated. But it is less correct. If you are\nGET-ting information you should use GET. That&#39;s useful for caching and\nfirewalls.\n\n&gt; I am also thinking about ammending the MIME-RPC\n&gt; spec to note that, by convention HTTP\n&gt; applications allow urlencoded bodies to be passed\n&gt; in a querystring when the method is GET, so\n&gt; MIME-RPC implementations should as well.\n&gt; \n&gt; Then a MIME-RPC request could look like this:\n&gt; \n&gt;    GET /states?10023 HTTP/1.1\n&gt; \n&gt; Do you think these differences are substantive?\n\nNo. Now you&#39;re catching on to REST. But if that request doesn&#39;t use the\nMIME-RPC header and doesn&#39;t use any MIME-RPC conventions then how is it\nMIME-RPC? It looks like HTTP to me!\n\n&gt; (The reason I prefer to use name/value in my\n&gt; applications is that it allows web browsers to\n&gt; interact with your application directly.  You pay\n&gt; with some ugliness to support web browsers.  Such\n&gt; is life.)\n\nUnderstood. I&#39;ve been arguing that XForms should allow the construction\nof any form of URL, even /states/10023.\n\n&gt; You also said:\n&gt; &gt; (the response is the same)\n&gt; \n&gt; Note true.  The simple MIME-RPC response:\n&gt; \n&gt;    HTTP/1.1 200 OK\n&gt; \n&gt;    New York\n&gt; \n&gt; In contrast, the REST would be:\n&gt; \n&gt;     HTTP/1.1 200 OK\n&gt;     Content-type: text/xml; charset=utf-8\n&gt; \n&gt;     &lt;state xmlns=&quot;http://foo.com/bar/namespace&quot;&gt;New York&lt;/state&gt;\n\nNo. REST does not require XML. REST was invented before XML. I\npersonally encourage the use of XML for *structured* data.\n\n&gt;...\n&gt; &gt;  * rather than &quot;wasting&quot; the HTTP URL slot with /some/resource, the\n&gt; &gt; resource is the thing you are acting upon\n&gt; \n&gt; This is a poor argument.  see above.\n\nYou don&#39;t seem to understand that this is the *core idea of REST*. It is\nalso the core idea of the Web. You say that you are just formalizing\nexisting web conventions but your examples don&#39;t use GET to mean GET.\n\n&gt;...\n&gt; Claim: idempotent requests should use GET\n&gt; \n&gt; Reality: Many idempotent requests, e.g. SQL\n&gt; database queries, can&#39;t be sent with GET, because\n&gt; they are too large or entail too much structure.\n\nShow me a SQL database query that is incompatible with Python&#39;s\nurllib.urlencode. Jeff Bone&#39;s answer is more nuanced. Why are you trying\nto do SQL over the Web. The Web has a different data model than a\nrelational database. Use the web&#39;s data model.\n\n&gt; Claim: REST supports asynchronous messaging\n&gt; \n&gt; Reality: REST appears to require use of HTTP and\n&gt; HTTP does not support asynchronous requests.\n\nI&#39;ll leave that to Jeff Bone.\n\n&gt; Claim: Applications should define new HTTP methods\n&gt; \n&gt; Reality: This is very difficult to deploy for many\n&gt; users and there is no standards process for\n&gt; defining these methods (limiting interop).\n\nThis issue is more subtle. You can use REST with only the methods GET\nand POST. That&#39;s what most web sites do already. You can also define new\nmethods if you really feel it important to do so (rare, but not unheard\nof). You can also do hacky workarounds. If MIME-RPC documented its\nsyntax as a workaround for applications that don&#39;t properly support HTTP\nmethod extension then I would be more happy with it. One could build a\ngeneric translator that hid the hackiness from the underlying\napplication.\n\n&gt;...\n&gt; Very debatable.  In the states example, the\n&gt; MIME-RPC response was easier to read and shorter.\n\nNot true, as I discussed above.\n\n&gt; In the baseball example, the multipart/mixed\n&gt; actually had fewer characters than the text/xml\n&gt; exampe.  Readability is in the eye of the\n&gt; beholder.\n\nIf you say so...the XML sure looked easier to read to me.\n\n Paul Prescod\n\n"}}