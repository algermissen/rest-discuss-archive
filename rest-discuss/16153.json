{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":386718851,"authorName":"Eb","from":"Eb &lt;amaeze@...&gt;","profile":"amaeze77","replyTo":"SENDER","senderId":"dXZT0ZzbBbZkwIF1XZr7Smd4J51qd740mVwomMMllwHdbxJp_KbRSIRaScYDaq7rQAnJuuzmFqRnOEJi","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281038019","msgId":16153,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluRXFrYkxMOERZNUFtSGlTVXNycnN5Sk01MnJGS2owVlczb1RYb0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16152,"nextInTopic":16155,"prevInTime":16152,"nextInTime":16154,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"On Thu, Aug 5, 2010 at 2:59 PM, Juergen Brendel ","rawEmail":"Return-Path: &lt;amaeze@...&gt;\r\nX-Sender: amaeze@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 39167 invoked from network); 5 Aug 2010 19:53:40 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m16.grp.re1.yahoo.com with QMQP; 5 Aug 2010 19:53:40 -0000\r\nX-Received: from unknown (HELO mail-ww0-f53.google.com) (74.125.82.53)\n  by mta3.grp.re1.yahoo.com with SMTP; 5 Aug 2010 19:53:40 -0000\r\nX-Received: by wwb22 with SMTP id 22so475436wwb.34\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 05 Aug 2010 12:53:39 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.48.146 with SMTP id v18mr9782634web.56.1281038019688; Thu, \n\t05 Aug 2010 12:53:39 -0700 (PDT)\r\nX-Received: by 10.216.1.202 with HTTP; Thu, 5 Aug 2010 12:53:39 -0700 (PDT)\r\nIn-Reply-To: &lt;1281034748.2917.303.camel@backpack&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\r\nDate: Thu, 5 Aug 2010 15:53:39 -0400\r\nMessage-ID: &lt;AANLkTinEqkbLL8DY5AmHiSUsrrsyJM52rFKj0VW3oTXo@...&gt;\r\nTo: juergen.brendel@...\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001485f6c7621b7b5b048d18e8bc\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Eb &lt;amaeze@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=386718851; y=2kS3xay74grzEXmjZHQpvgIRT3zuL4IiCcnj6qezJC9HVBQ\r\nX-Yahoo-Profile: amaeze77\r\n\r\n\r\n--001485f6c7621b7b5b048d18e8bc\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Thu, Aug 5, 2010 at 2:59 PM, Juergen Brendel &lt;\njuergen.brendel@...&gt; wrote:\n\n&gt;\n&gt;\n&gt;\n&gt; Hello!\n&gt;\n&gt; Let&#39;s say I have a queue resource: /foo\n&gt;\n&gt; I can POST new entries into the queue. I can even refer to individual\n&gt; entries within the queue: /foo/&lt;id&gt;\n&gt;\n&gt; But how do I pop the next entry? How do I construct a single request\n&gt; that gets me the next/first entry but also removes the entry at the same\n&gt; time?\n&gt;\n&gt; Maybe I can implement a special resource /foo/next, which always refers\n&gt; to the next entry in the queue. But clearly, I can&#39;t use GET to pop the\n&gt; entry, since that would not be idempotent.\n&gt;\n&gt; The queue has multiple consumers, so the &#39;pop&#39; operation should be\n&gt; atomic. This seems to rule out the possibility of doing a GET to\n&gt; retrieve the latest element, followed by a DELETE to remove it. Someone\n&gt; else could have gotten the &#39;latest&#39; element in the meantime, thus\n&gt; causing the same element to be consumed twice.\n&gt;\n&gt; Maybe I can cause a &#39;move&#39;, where a single request causes the next\n&gt; element to be renamed to a unique ID, which is then returned to the\n&gt; client, who then is the only one who has a handle on that object. The\n&gt; client can then work with the resource. But the question now is:\n&gt;\n&gt; a) What happens when the client fails before it can delete the resource?\n&gt; b) What is the best way to &#39;move&#39; an item in that way?\n&gt;\n&gt; Juergen\n&gt;\n\nDoes DELETE /foo/top suffice?\n\nThe resource at the top of the queue is removed and another item replaces.\n\r\n--001485f6c7621b7b5b048d18e8bc\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Aug 5, 2010 at 2:59 PM, Juergen Bren=\r\ndel &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:juergen.brendel@...&quot;&gt;j=\r\nuergen.brendel@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;g=\r\nmail_quote&quot; style=3D&quot;margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(=\r\n204, 204, 204); padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background=\r\n-color: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n=\r\n      \n      \n      &lt;p&gt;&lt;br&gt;\nHello!&lt;br&gt;\n&lt;br&gt;\nLet&#39;s say I have a queue re=\r\nsource: /foo&lt;br&gt;\n&lt;br&gt;\nI can POST new entries into the queue. I can even ref=\r\ner to individual&lt;br&gt;\nentries within the queue: /foo/&lt;id&gt;&lt;br&gt;\n&lt;br&gt;\nBut=\r\n how do I pop the next entry? How do I construct a single request&lt;br&gt;\nthat =\r\ngets me the next/first entry but also removes the entry at the same&lt;br&gt;\ntim=\r\ne?&lt;br&gt;\n&lt;br&gt;\nMaybe I can implement a special resource /foo/next, which alway=\r\ns refers&lt;br&gt;\nto the next entry in the queue. But clearly, I can&#39;t use G=\r\nET to pop the&lt;br&gt;\nentry, since that would not be idempotent.&lt;br&gt;\n&lt;br&gt;\nThe q=\r\nueue has multiple consumers, so the &#39;pop&#39; operation should be&lt;br&gt;\na=\r\ntomic. This seems to rule out the possibility of doing a GET to&lt;br&gt;\nretriev=\r\ne the latest element, followed by a DELETE to remove it. Someone&lt;br&gt;\nelse c=\r\nould have gotten the &#39;latest&#39; element in the meantime, thus&lt;br&gt;\ncau=\r\nsing the same element to be consumed twice.&lt;br&gt;\n&lt;br&gt;\nMaybe I can cause a &#=\r\n39;move&#39;, where a single request causes the next&lt;br&gt;\nelement to be rena=\r\nmed to a unique ID, which is then returned to the&lt;br&gt;\nclient, who then is t=\r\nhe only one who has a handle on that object. The&lt;br&gt;\nclient can then work w=\r\nith the resource. But the question now is:&lt;br&gt;\n&lt;br&gt;\na) What happens when th=\r\ne client fails before it can delete the resource?&lt;br&gt;\nb) What is the best w=\r\nay to &#39;move&#39; an item in that way?&lt;br&gt;\n&lt;br&gt;\nJuergen&lt;br&gt;&lt;/p&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;Does DELETE /foo/top suffice?&lt;br&gt;&lt;br&gt;=\r\nThe resource at the top of the queue is removed and another item replaces.&lt;=\r\nbr&gt;\n\r\n--001485f6c7621b7b5b048d18e8bc--\r\n\n"}}