{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":98897749,"authorName":"Inggs, Andrew","from":"&quot;Inggs, Andrew&quot; &lt;andrew.inggs@...&gt;","profile":"aminggs","replyTo":"SENDER","senderId":"ovAcoEW24DO5mmxWcb01K48Egfp2zwVgRA8RJ-MipvW_usG1FsccESrySvhu_B8z-PGAnZ5y2-4nE5gMZOmAcn387aBCvOFgTWJFuHhd","spamInfo":{"isSpam":false,"reason":"0"},"subject":"REST applied to provisioning","postDate":"1014240954","msgId":762,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEVGRTAwMzNGNDE2QkQ1MTFCN0Q4MDA5MDI3RDBEMzkzQTAwQTgxQGd3aGRlbW50czAyLnNlcnZlci5kZW1vbi5uZXQ+"},"prevInTopic":0,"nextInTopic":763,"prevInTime":761,"nextInTime":763,"topicId":762,"numMessagesInTopic":5,"msgSnippet":"After reading Paul Prescod s REST article on XML.com I was instantly converted :-).  I m trying to apply REST principles to a provisioning interface I m","rawEmail":"Return-Path: &lt;andrew.inggs@...&gt;\r\nX-Sender: andrew.inggs@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 20 Feb 2002 21:35:57 -0000\r\nReceived: (qmail 93725 invoked from network); 20 Feb 2002 21:35:57 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m8.grp.snv.yahoo.com with QMQP; 20 Feb 2002 21:35:57 -0000\r\nReceived: from unknown (HELO internal.mail.demon.net) (193.195.224.3)\n  by mta3.grp.snv.yahoo.com with SMTP; 20 Feb 2002 21:35:56 -0000\r\nReceived: from gwhdemnts03.server.demon.net (gwhdemnts03.server.demon.net [193.195.224.75])\n\tby internal.mail.demon.net with ESMTP id g1KLZtp16441;\n\tWed, 20 Feb 2002 21:35:55 GMT\r\nReceived: by gwhdemnts03.server.demon.net with Internet Mail Service (5.5.2650.21)\n\tid &lt;FFXS94LQ&gt;; Wed, 20 Feb 2002 21:35:55 -0000\r\nMessage-ID: &lt;EFE0033F416BD511B7D8009027D0D393A00A81@...&gt;\r\nTo: &quot;&#39;rest-discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: REST applied to provisioning\r\nDate: Wed, 20 Feb 2002 21:35:54 -0000\r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2650.21)\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nFrom: &quot;Inggs, Andrew&quot; &lt;andrew.inggs@...&gt;\r\nX-Yahoo-Group-Post: member; u=98897749\r\nX-Yahoo-Profile: aminggs\r\n\r\nAfter reading Paul Prescod&#39;s REST article on XML.com I was\ninstantly converted :-).  I&#39;m trying to apply REST principles to\na provisioning interface I&#39;m working on.  The interface creates\ntypical VISP (virtual ISP) services such as a website or email\naccount.\n\nAt the highest level I&#39;ve defined what I call a profile, it looks\nsomething like this:\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;profile username=&quot;user1&quot;&gt;\n    &lt;website domain=&quot;www.customer.com&quot;&gt;\n      &lt;!-- the path (below) is mainly useful for customers that\n           don&#39;t get their own domains, in which case it would\n           typically be /username\n        --&gt;\n      &lt;path&gt;/&lt;/path&gt;\n      &lt;password&gt;secret1&lt;/password&gt;\n      &lt;storage-space&gt;15&lt;/storage-space&gt; &lt;!-- MB --&gt;\n      &lt;bandwidth&gt;50&lt;/bandwidth&gt; &lt;!-- MB/day --&gt;\n    &lt;/website&gt;\n    &lt;email-domain domain=&quot;customer.com&quot; type=&quot;standard&quot;&gt;\n      &lt;email-account local-part=&quot;me&quot;&gt;\n        &lt;password&gt;secret2&lt;/password&gt;\n        &lt;storage-space&gt;5&lt;/storage-space&gt; &lt;!-- MB again --&gt;\n        &lt;email-alias alias=&quot;myself&quot;/&gt;\n      &lt;/email-account&gt;\n    &lt;/email-domain&gt;\n  &lt;/profile&gt;\n&lt;/viml&gt;\n\nWhich provisions\n\n - The website http://www.customer.com/\n   with FTP access using the given password\n - The email address me@...\n   with POP3 access using the given password\n - The email alias myself@...\n   which really goes to me@...\n\nAn email domain can also have type=&quot;backup&quot; which means it\naccepts mail for relay only, i.e., the customer has their own\nmail server and uses us as backup.\n\nURIs have the form:\n\n    http://server/visp/serviceid/vispid/identifier\n\nThat&#39;s a little difficult to understand, so here&#39;s an example:\n\n    http://server/visp/website/xyz/user1\n    ^^^^^^^^^^^^^^^^^^\n    Fixed\n\nIn this case the serviceid is website, the vispid is xyz, and\nthe identifier is user1.  The idea is that you can make the\nidentifier more complex to drill down to only one component of\nthe profile, e.g., to refer to the alias in the example above:\n\n    http://server/visp/email-alias/xyz/user1/customer.com/me/myself\n\nNow when the XYZ client wants to provision some services for a\nnew user who&#39;s signed up, they need to create the services.\nAt the moment, for the above example, this would mean doing\nthe following PUTs with the given data:\n\nPUT /visp/website/xyz/user1/www.customer.com\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;website domain=&quot;www.customer.com&quot;&gt;\n    &lt;path&gt;/&lt;/path&gt;\n    &lt;password&gt;secret1&lt;/password&gt;\n    &lt;storage-space&gt;15&lt;/storage-space&gt;\n    &lt;bandwidth&gt;50&lt;/bandwidth&gt;\n  &lt;/website&gt;\n&lt;/viml&gt;\n\nPUT /visp/email-domain/xyz/user1/customer.com\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;email-domain domain=&quot;customer.com&quot; type=&quot;standard&quot;/&gt;\n&lt;/viml&gt;\n\nPUT /visp/email-account/xyz/user1/customer.com/me\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;email-account local-part=&quot;me&quot;&gt;\n    &lt;password&gt;secret&lt;/password&gt;\n    &lt;storage-space&gt;5&lt;/storage-space&gt;\n  &lt;/email-account&gt;\n&lt;/viml&gt;\n\nPUT /visp/email-alias/xyz/user1/customer.com/me/myself\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&lt;viml&gt;\n  &lt;email-alias alias=&quot;myself&quot;/&gt;\n&lt;/viml&gt;\n\nSome things can be updated, for example, the storage space or\npassword for a website, others must be deleted and recreated,\nlike email aliases.\n\nProblems I have with my own design:\n\n - If I were a client I would expect to be able to send a\n   whole profile and have everything provisioned at once.\n   This is not insurmountable, just more effort (and some\n   thinking about transactional guarantees, if any).\n\n - There is redundant data in each request that is already in\n   the URI.  This means extra processing on both sides, and an\n   extra check on my side -- and what do I do if there&#39;s a\n   mismatch?\n\n - For an update (POST) it&#39;s not always clear what can and\n   can&#39;t change.  For example, when updating a website you can\n   change the password but not the path.  In the case of an alias\n   you can&#39;t even do an update.  I see problems ahead.\n\nI feel like I&#39;m almost there, but I&#39;m still missing something.\nAny comments or suggestions for improvement welcome.\n\n-- Andrew\n\n"}}