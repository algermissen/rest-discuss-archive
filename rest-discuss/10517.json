{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"YtO7xJZQKna5ML5iMl6_L8CPqCxmUvlvL7d_3JVrF2k829ImbjcB1ZUtKkvgWEUbHZkPaZXGjghkF5X4u-OsmPbHo06mS6XkNLaCHhv64Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: &quot;Addressing REST Doubts&quot;","postDate":"1206502664","msgId":10517,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwMzI1MjEzNzQ0LmU5MDEyYWZlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":10516,"nextInTopic":10518,"prevInTime":10516,"nextInTime":10518,"topicId":10515,"numMessagesInTopic":19,"msgSnippet":"After all, GET, PUT, POST and DELETE are all the operations you have... Using the approach of having multiple representations, you might actually have","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 27831 invoked from network); 26 Mar 2008 03:39:23 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m47.grp.scd.yahoo.com with QMQP; 26 Mar 2008 03:39:23 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta18.grp.scd.yahoo.com with SMTP; 26 Mar 2008 03:39:23 -0000\r\nX-Received: from BigBison (unknown [66.250.152.171])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTP id 07F5423E3FC\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 25 Mar 2008 23:39:22 -0400 (EDT)\r\nDate: Tue, 25 Mar 2008 21:37:44 -0600\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20080325213744.e9012afe.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: &quot;Addressing REST Doubts&quot;\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;After all, GET, PUT, POST and DELETE are all the operations you have... \nUsing the approach of having multiple representations, you might \nactually have self-documenting resources â€” just do an HTTP GET on a \nresource from your browser and get an HTML document containing data \nas well as a list of the operations (HTTP verbs) you can perform on \nit and the content types it accepts and delivers.&quot;\n\nNo respect for OPTIONS, eh?  ;-)  I have no problem with putting \nalternate representations in hypertext, this is easily done in both \nHTML and Atom (for example).  But in terms of self-descriptive \nmessages, particularly when the available operations vary by user \nrole, wouldn&#39;t it be more RESTful to handle this at the protocol \nlevel?\n\nIn both examples below, a 300 response to an OPTIONS request is \nassumed to have no entity body.  So, the 300 response would have no \nContent-Type or ETag headers, and MUST send a Content-Length: 0 header:\n\n(GET | HEAD | OPTIONS) http://example.org/feed.atom\n(Status-Line) HTTP/1.1 200 OK (or 300 Multiple Choices for OPTIONS response)\nAllow:\tGET, HEAD, POST, DELETE\nAccept:\tapplication/atom+xml;type=entry; q=1.0, application/atom+xml; q=0.5\nETag:\tfoo\nVary:\tAuthentication\nContent-Type:\tapplication/atom+xml;type=feed\n\n(GET | HEAD | OPTIONS) http://example.org/entry:1.atom\n(Status-Line) HTTP/1.1 200 OK (or 300 Multiple Choices for OPTIONS response)\nAllow:\tGET, HEAD, PUT, DELETE\nAccept:\tapplication/atom+xml;type=entry; q=1.0, application/atom+xml; q=0.5\nETag:\tbar\nVary:\tAuthentication\nContent-Type:\tapplication/atom+xml;type=entry\n\nA client could infer that POST or PUT requests with Content-Type \napplication/atom+xml;type=feed would most likely return 406 on this \nserver, along with any other MIME type not specified in Accept.  (One \ncould also expose alternate representations by presenting a list of \nlinks in an HTML message body returned with the 300 response, which \nseems to me like a neat place to tuck the &quot;self-documentation&quot; for a \nREST application.)\n\nThis seems to me, to be in the spirit of RESTful self-descriptive \nmessaging over HTTP.  Sadly, RFC 2616 insists that the Accept header \nis only a request header.  Happily, I hear RFC 2616bis is back with \nan emphasis on extensibility... except... Accept still insists on \nbeing a request header only.  :-(  Although I could call it the Foo: \nheader, apparently?  More importantly, what am I missing that requires \nthis to be implemented as hypertext, a la the APP service document?\n\n-Eric\n\n[1] http://labs.apache.org/webarch/http/draft-fielding-http/p3-payload.html#header.accept\n\n"}}