{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":81035509,"authorName":"Vincent D Murphy","from":"&quot;Vincent D Murphy&quot; &lt;vdm@...&gt;","profile":"johnfoobar1","replyTo":"SENDER","senderId":"mUpuoXxM3JH_eXegRW4jg1LgXFEQw69FsnB_GPd_PJOdYHUs-Z9ijFKDb7MK7Gp4G1DYCNeo-TTbYJtr8pwqyeT6XNxMPg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Google&#39;s accelerator showing massive GET abuse","postDate":"1115479368","msgId":5027,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMTU0NzkzNjguMjg2ODQuMjMzNTgxNTU3QHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4=","inReplyToHeader":"PDQyN0NBQzNCLjEwMTA4MDRAcGVlai5jby51az4=","referencesHeader":"PEM4RDBGM0YxLUUyRDQtNDdDQy04RTAzLTMwMkY0QTI5NDEzMUBnbWFpbC5jb20+ICAgPDQyN0JFRUY4LjQwOTAxMDhAY3NlLnVjc2MuZWR1PiAgIDwxMTE1NDQ4MTY0LjYxNC4yMzM1NzMxODVAd2VibWFpbC5tZXNzYWdpbmdlbmdpbmUuY29tPiAgIDwzMjNBQTFGRS1FNjRFLTRFODctQUI4QS00RkYyMkFBQTNDQTdAZ21haWwuY29tPiAgIDw0MjdDQUMzQi4xMDEwODA0QHBlZWouY28udWs+"},"prevInTopic":5024,"nextInTopic":5028,"prevInTime":5026,"nextInTime":5028,"topicId":5015,"numMessagesInTopic":16,"msgSnippet":"I do respect your opinions on REST (many of your blog entries are del.icio.us) but I disagree with much of what you say here. On Sat, 07 May 2005 12:53:31","rawEmail":"Return-Path: &lt;vdm@...&gt;\r\nX-Sender: vdm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 93467 invoked from network); 7 May 2005 15:22:48 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m24.grp.scd.yahoo.com with QMQP; 7 May 2005 15:22:48 -0000\r\nReceived: from unknown (HELO out1.smtp.messagingengine.com) (66.111.4.25)\n  by mta5.grp.scd.yahoo.com with SMTP; 7 May 2005 15:22:48 -0000\r\nReceived: from web3.messagingengine.com (web3.internal [10.202.2.212])\n\tby frontend1.messagingengine.com (Postfix) with ESMTP id A1510C8BD6D;\n\tSat,  7 May 2005 11:22:47 -0400 (EDT)\r\nReceived: by web3.messagingengine.com (Postfix, from userid 99)\n\tid 49B1D1818; Sat,  7 May 2005 11:22:48 -0400 (EDT)\r\nMessage-Id: &lt;1115479368.28684.233581557@...&gt;\r\nX-Sasl-Enc: tVm2EGUBqURRGd2H8SVfKq9wLKCo1SdZDE4xG8Ysz/7T 1115479368\r\nTo: &quot;Paul James&quot; &lt;yahoogroups@...&gt;, &quot;Rest List&quot;\n   &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nMIME-Version: 1.0\r\nX-Mailer: MIME::Lite 1.5  (F2.73; T1.001; A1.64; B3.05; Q3.03)\r\nReferences: &lt;C8D0F3F1-E2D4-47CC-8E03-302F4A294131@...&gt;\n   &lt;427BEEF8.4090108@...&gt;\n   &lt;1115448164.614.233573185@...&gt;\n   &lt;323AA1FE-E64E-4E87-AB8A-4FF22AAA3CA7@...&gt;\n   &lt;427CAC3B.1010804@...&gt;\r\nIn-Reply-To: &lt;427CAC3B.1010804@...&gt;\r\nDate: Sat, 07 May 2005 16:22:48 +0100\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;Vincent D Murphy&quot; &lt;vdm@...&gt;\r\nSubject: Re: [rest-discuss] Google&#39;s accelerator showing massive GET abuse\r\nX-Yahoo-Group-Post: member; u=81035509\r\nX-Yahoo-Profile: johnfoobar1\r\n\r\nI do respect your opinions on REST (many of your\nblog entries are del.icio.us) but I disagree with\nmuch of what you say here.\n\nOn Sat, 07 May 2005 12:53:31 +0100, &quot;Paul James&quot;\n&lt;yahoogroups@...&gt; said:\n[snip]\n&gt; GET and POST(p) are &quot;safe&quot; operations, GET because it is immutable and \n&gt; POST(p) because it doesn&#39;t actually work on resources, just asks the \n&gt; server to do some processing using this data. Neither can damage my \n&gt; resources without my saying so, I&#39;m in control.\n\nYou really need to clarify what you mean by\n&quot;my&quot;, &quot;I&#39;m&quot;, and &quot;control&quot; here. Do you mean\nyour intentions expressed as a client program,\nas a server program, or just as thoughts in\nyour mind?\n\nHTTP methods as\nhuman concepts with semantics\nversus symbols in a computer\n-----------------------------\n\nThis matters because the client and server\nare components of a distributed computer\nsystem, your mind is not.\n\nhttp://www.ics.uci.edu/~fielding/pubs/dissertation/net_arch_styles.htm#sec_3_4_1\n\nI wonder whether you are confusing the names\nused for the methods with their semantics as\nexpressed in the HTTP RFC. Allow me to describe\nmy interpretation:\n\nWhen a process within a server component receives\na request message, its actions are expressed by a\nprogram. What is expressed in the program is whatever\nthe programmer expressed when (s)he wrote it, among\nother things. The semantic choices the programmer\nmakes are what determines compliance with a design\nor an architecture. There is no intrinsic &#39;magic&#39;\nin the names of the HTTP methods; they are just\nsymbols in the computer. We humans attach the\nsemantics to these symbols in the form of documents\nlike &quot;Section 9: Method Definitions&quot; in the HTTP RFC.\n\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9\n\nTherefore, neither GET nor POST are intrinsically\nsafe or unsafe. Their semantics (as expressed by\nthe programmer) are what matters here. In HTTP,\nthe *only* method with &#39;safe&#39; semantics is GET.\nThat&#39;s why the practice of abusing the GET method\nby giving it unsafe semantics in a request-handling\nprogram is profoundly wrong. It contradicts a key\nconcept of Web architecture and is therefore an act\nof Web pollution.\n\nExample\n-------\n\nConsider a HTML page with title &quot;My Nuclear Weapon&quot;\nthat includes:\n\n1. a GET-able hyperlink with the text\n   &quot;Launch Procedure&quot; that points to the URI of a\n   document with that title.\n\n2. a button with the text &quot;Launch&quot; that sends a\n   LAUNCH request (I made that method up) to a\n   server which handles such requests by executing\n   code to launch a nuclear weapon.\n\nThere is a world of difference between the two.\n\nThe visual distinction between a hyperlink and a\nbutton, and the corresponding semantic distinction\nbetween GET and any other method, are what matters.\n\n(Please don&#39;t object to this example on the\nbasis of security. Instead think of a better\nexample, like posting a blank comment to a blog with\na hyperlink GET that says &quot;Add comment&quot;, and then\nasking the user to edit it. Not likely, but possible.)\n\nAgents: Humans and Machines\n---------------------------\n\nA machine web agent such as Googlebot is quite\nentitled (under web architecture) to GET a\nrepresentation of that &quot;nuclear weapon launch\nprocedure&quot; document just to add it to Google&#39;s\nindex, or cache it, or whatever, but is absolutely\nnot entitled to send a POST (or LAUNCH) request\nto the server just to see what happens.\n\nAn agent acting on behalf of a human is entitled\nto GET URIs when users activate hyperlinks.\nHowever humans don&#39;t click on hyperlinks when\nthey see a piece of text like &#39;Delete&#39; or &#39;Undo&#39;\nor &#39;Launch&#39; unless thats what they intend.\n\nA machine agent does not have the luxury of\noptical vision and a decades-old human brain to\nunderstand the out-of-band information implied by\nthis piece of text.\n\n(And before you suggest &quot;the agent could have\na list of &#39;dangerous words&#39; or regexps to check\nthe hyperlink text against&quot;, that is a kludge\nand therefore irrelevant to a discussion on\narchitecture.)\n\nAn axiom on the choice of HTTP method\n-------------------------------------\n\nI&#39;ll go out on a limb here and state that &quot;any\nnon-GET request should be the &#39;direct&#39; consequence\nof a human UI gesture (a click or a drag, a voice\ncommand, or a terminal command, etc.) interpreted\nby a Web agent&quot;.\n\nMaybe this attempt at an axiom can be improved upon.\nGoogle are totally within their rights (under web\narchitecture, though maybe not common sense) to\ndeploy an agent that GETs speculatively. It is the\nweb apps that are broken. We can&#39;t accept that GET\npollution is OK, otherwise the concept of method in\nweb architecture will become diluted to the point\nof being meaningless.\n\nIn this context, GET can be seen as the achilles\nheel of HTTP, in the same way that DNS is for URI.\n\nPOST is not safe\n----------------\n\nPOST is a lot of things, but safe is not one of\nthem. There is nothing about the semantics of\nPOST(p) which explicitly says it will not modify\nthe state of *some* resource during its execution.\nIts semantics explicitly say that it could do\n*anything*. It is recommended as a catch-all when\nthe more restricted semantics of PUT, DELETE (or\nany other verb, e.g. LAUNCH, or something from\nWebDAV) are not applicable.\n\nAll POST says is &quot;do something, anything&quot;. Not\n&#39;this thing&#39; or &#39;that thing&#39;. Just &#39;some thing&#39;.\nAny other notion that is said about what the\nthing is may exist in your mind, or some\ndocumentation about the resource you are POSTing\nto, or even as a computer program that handles\nthe request, but it is not in the semantics of\nthe POST method as expressed in the HTTP RFC.\n\n&#39;Something&#39; can include &quot;add this email to\nyourself&quot; where the &#39;yourself&#39; resource is a\nmailbox, which is a POST(a) request.\n\nPOST is like the &#39;*&#39; wildcard symbol (which means\nany character in a Perl regular expression and many\noperating system shells). Maybe if it was written\nas &#39;*&#39; we&#39;d be better off. :)\n\n&gt; PUT and DELETE (and POST(a)) on the other hand work directly on \n&gt; resources, I don&#39;t want a dumb generic client like a Web browser messing \n&gt; about with my resources directly, I don&#39;t know what damage it might \n&gt; cause. I want to open up my resources to allow manipulation via PUT and \n&gt; DELETE, but only by clients I can full control and trust to not destroy \n&gt; my resources.\n\nThe concepts of &#39;directly&#39;, &#39;control&#39; and &#39;trust&#39;\nin this sentence are bogus, for reasons I will not\ngo in to here. Try and map those concepts to\ndistributed computing concepts.\n\n&gt; If I wrote a specific Web client for my Web app then I&#39;d trust it to \n&gt; behave and allow it to PUT and DELETE, but HTML is really a document \n&gt; markup format and not an application GUI format and HTML browsers are \n&gt; document viewers not generic application clients, so I think the HTML \n&gt; spec is sensible when it only allows GET and POST methods from HTML\n&gt; forms.\n\nHow is it that the POST method makes sense from\nwithin a &#39;document&#39;, but other methods don&#39;t?\n\nHTML may have a heritage in marking up text\ndocuments (cf. SGML), but it has been used for\nmore than marking up documents ever since somebody\nfirst thought of &lt;form&gt; and &lt;script&gt;.\n\nI cannot see a discrete boundary between the\nconcept of &#39;document&#39; and &#39;user interface&#39; and\nam skeptical that it actually exists. As soon\nas you put a document in a user interface the\nuser wants to use it as part of the interface,\nand so they become one and the same.\n\n&gt; Maybe I&#39;m not thinking hard enough about this, or maybe too hard. Maybe \n&gt; PUT and DELETE from HTML forms would be useful and wouldn&#39;t undermine \n&gt; what HTML is all about, maybe not, I think this issue needs a lot of \n&gt; careful thinking before people rush in and extend HTML forms in this way.\n\nAgreed.\n\nRushing in may have negative connotations to anyone\nwho has written a HTML parser, or HTML code, but\nexperimentation is necessary to find what works.\nIts how the Web was built. Generating theories as\na result of careful thinking will only get us so\nfar; we will always need to test those theories.\n\n"}}