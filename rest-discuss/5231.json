{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":217975397,"authorName":"Tyler Close","from":"Tyler Close &lt;tyler.close@...&gt;","profile":"tjclose","replyTo":"SENDER","senderId":"5DfDLHXSJU9wEtLkQBbPCL0FX-n9ZXIFEwO1TednaVtfbocbsg6So6CcAJWuyIVPXcJI9CwXJoeDGoK-gB0s0EKaI5ky8wWslvA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful authorization","postDate":"1127487911","msgId":5231,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU2OTEzNTZmMDUwOTIzMDgwNTM1NTc2MjIwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQzMzMyOUVELjYwNTA1MDJAcGFuaXguY29tPg==","referencesHeader":"PGRndjJmbitlamQ1QGVHcm91cHMuY29tPiA8NDMzMzI5RUQuNjA1MDUwMkBwYW5peC5jb20+"},"prevInTopic":5230,"nextInTopic":5232,"prevInTime":5230,"nextInTime":5232,"topicId":5228,"numMessagesInTopic":24,"msgSnippet":"Hi Stan, Lucas, ... It s important to understand why this is terrible, because there s a very elegant solution hidden underneath the terrible. Including the","rawEmail":"Return-Path: &lt;tyler.close@...&gt;\r\nX-Sender: tyler.close@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 58201 invoked from network); 23 Sep 2005 15:05:22 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 23 Sep 2005 15:05:22 -0000\r\nReceived: from unknown (HELO zproxy.gmail.com) (64.233.162.192)\n  by mta2.grp.scd.yahoo.com with SMTP; 23 Sep 2005 15:05:22 -0000\r\nReceived: by zproxy.gmail.com with SMTP id x7so612278nzc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 23 Sep 2005 08:05:11 -0700 (PDT)\r\nReceived: by 10.54.130.6 with SMTP id c6mr183625wrd;\n        Fri, 23 Sep 2005 08:05:11 -0700 (PDT)\r\nReceived: by 10.54.158.11 with HTTP; Fri, 23 Sep 2005 08:05:11 -0700 (PDT)\r\nMessage-ID: &lt;5691356f050923080535576220@...&gt;\r\nDate: Fri, 23 Sep 2005 08:05:11 -0700\r\nTo: lucas@..., wanderingstan &lt;sjames@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;433329ED.6050502@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;dgv2fn+ejd5@...&gt; &lt;433329ED.6050502@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Tyler Close &lt;tyler.close@...&gt;\r\nReply-To: Tyler Close &lt;tyler.close@...&gt;\r\nSubject: Re: [rest-discuss] RESTful authorization\r\nX-Yahoo-Group-Post: member; u=217975397; y=xHE6ETtl_ggidl3fTDucJzyVckNoa6OcsaD_41rTIhOwRw\r\nX-Yahoo-Profile: tjclose\r\n\r\nHi Stan, Lucas,\n\nOn 9/22/05, Lucas Gonze &lt;lgonze@...&gt; wrote:\n&gt; wander=\r\ningstan wrote:\n&gt; &gt;Or, how terrible is it if I pass the username and passwor=\r\nd as part of\n&gt; &gt;the URI?  Everything is going over SSL, so it&#39;s not a secur=\r\nity concern.\n&gt; &gt;\n&gt; Pretty terrible, because it breaks bookmarking, and beca=\r\nuse users will\n&gt; send URLs around that include their username and password.=\r\n\n\nIt&#39;s important to understand why this is terrible, because there&#39;s a\nvery=\r\n elegant solution hidden underneath the terrible.\n\nIncluding the username a=\r\nnd password in the URL is terrible because\npassing such a URL between users=\r\n means delegating all of the sender&#39;s\nauthority to the receiver. For exampl=\r\ne, I may wish to send Lucas a\nreference to a particular page I have access =\r\nto. It&#39;s very surprising\nif doing so results in Lucas getting access to all=\r\n of the pages I have\naccess to. I only intended to provide him with access =\r\nto the one page,\nand yet he received access to all of them. Passing around =\r\nall of a\nuser&#39;s authority in this way is a shortcut to terrible things.\n\nHo=\r\nwever, bundling designation and authorization in this way doesn&#39;t\nhave to b=\r\ne a terrible thing, it can be a beautiful thing. The trick is\nto first turn=\r\n your access control model on its head. Instead of\nassociating authority wi=\r\nth users, associate it with resources. Instead\nof having a password for eac=\r\nh user, have a password for each resource.\nThe user&#39;s authority is then res=\r\npresented not by a single, unique\npassword, but by a collection of possibly=\r\n shared passwords, one for\neach resource that the user has access to. These=\r\n resource passwords\ncan then be safely embedded in the URLs that refer to t=\r\nhe resource.\nNow, when a user sends another a reference to a particular pag=\r\ne, the\nreceiver gets access only to the referenced page, not all of the\nsen=\r\nder&#39;s pages. The mechanism now accurately reflects the sender&#39;s\nintentions,=\r\n and so is not surprising.\n\nIf all of this is a little theoretical, you can=\r\n make it more concrete\nby playing with an online web-app that makes use of =\r\nthese concepts.\nThe application is running at:\n\nhttps://yurl.net/id/home\n\nT=\r\nhe home page contains a description of the application and some short\ninstr=\r\nuctions on how to use it. The application should be fairly\ndiscoverable eve=\r\nn without the instructions. The short description is\nthat it&#39;s an access-co=\r\nntrolled wiki. I think this application is an\nexcellent example of a  RESTf=\r\nul, access controlled application.\n\nTyler\n\nPS\n\nThe above link only works we=\r\nll in browsers that support XSLT, such as\nIE and Firefox. Safari&#39;s support =\r\nfor XSLT is still incomplete. Opera&#39;s\nis non-existent. For the best experie=\r\nnce, I recommend using Firefox.\n\n--\nThe web-calculus is the union of REST a=\r\nnd capability-based security:\nhttp://www.waterken.com/dev/Web/\n\nName your t=\r\nrusted sites to distinguish them from phishing sites.\nhttps://addons.mozill=\r\na.org/extensions/moreinfo.php?id=3D957\n\n"}}