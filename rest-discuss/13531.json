{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":371338898,"authorName":"Bill Burke","from":"Bill Burke &lt;bburke@...&gt;","profile":"patriot1burke","replyTo":"SENDER","senderId":"-55wWL5XnF_U0lNP4x6_UrcHJsCbnROivxvAOsi0QSvGuKk-NXX5QJH5vvi2aIHXJpOExeC0rOqclTJ_JUbNtFs_cMAv","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Newbie REST Question","postDate":"1253913045","msgId":13531,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQkQzMUQ1LjMwOTA3MDNAcmVkaGF0LmNvbT4=","inReplyToHeader":"PDM5MTVjNjlkMDkwOTI1MTM0MHZlNTJkMGY2bzU0NDkyNDVlNTQwMGVlOTNAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PGg5Z2ltNytqNDl1QGVHcm91cHMuY29tPgkgPGRlNzBiMzlkMDkwOTI0MTQ0MW0zOTZjZjFjZXY1YmY4OTVhNTNkZTdjNmQzQG1haWwuZ21haWwuY29tPgkgPDQ2REZCQ0EzLTY2QTctNEJCQy1CMUY5LTE3N0JFNEE5QzBBQUBpbm5vcS5jb20+CSA8MDEyOTAxQzEtNkRCQS00QjE3LThERTgtNzk1NjRBMjEzMzVEQHVzaXQudWlvLm5vPgkgPDIxNjA2ZGNmMDkwOTI1MDQ1Mmw3YTMyNjMxN3ZkNDhlMjA5ZmNhNjQxM2ViQG1haWwuZ21haWwuY29tPgkgPDlmMDU3ODI5MDkwOTI1MDcxN3M3MGZiMWY0ZXE4NjcwZmY2YWM5MGIxM2FiQG1haWwuZ21haWwuY29tPgkgPDI4ZTI1NzExMDkwOTI1MDc0NHE0ZGFiZmJlYnVkMjQxZWVhYmM5OTk5NGMzQG1haWwuZ21haWwuY29tPiA8MzkxNWM2OWQwOTA5MjUxMzQwdmU1MmQwZjZvNTQ0OTI0NWU1NDAwZWU5M0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":13530,"nextInTopic":13532,"prevInTime":13530,"nextInTime":13532,"topicId":13516,"numMessagesInTopic":67,"msgSnippet":"... BTW, traditional RPC systems have the same exact issue.  How often should an RPC client ping its Naming Service? (Somebody already mentioned this) For REST","rawEmail":"Return-Path: &lt;bburke@...&gt;\r\nX-Sender: bburke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 97736 invoked from network); 25 Sep 2009 21:10:54 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m7.grp.re1.yahoo.com with QMQP; 25 Sep 2009 21:10:54 -0000\r\nX-Received: from unknown (HELO mx1.redhat.com) (209.132.183.28)\n  by mta3.grp.sp2.yahoo.com with SMTP; 25 Sep 2009 21:10:53 -0000\r\nX-Received: from int-mx01.intmail.prod.int.phx2.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])\n\tby mx1.redhat.com (8.13.8/8.13.8) with ESMTP id n8PLAlTV012849;\n\tFri, 25 Sep 2009 17:10:47 -0400\r\nX-Received: from bill-burkes-computer.local (vpn-12-45.rdu.redhat.com [10.11.12.45])\n\tby int-mx01.intmail.prod.int.phx2.redhat.com (8.13.8/8.13.8) with ESMTP id n8PLAkaW009822;\n\tFri, 25 Sep 2009 17:10:46 -0400\r\nMessage-ID: &lt;4ABD31D5.3090703@...&gt;\r\nDate: Fri, 25 Sep 2009 17:10:45 -0400\r\nUser-Agent: Thunderbird 2.0.0.23 (Macintosh/20090812)\r\nMIME-Version: 1.0\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: Peter Williams &lt;pezra@...&gt;,\n        Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;h9gim7+j49u@...&gt;\t &lt;de70b39d0909241441m396cf1cev5bf895a53de7c6d3@...&gt;\t &lt;46DFBCA3-66A7-4BBC-B1F9-177BE4A9C0AA@...&gt;\t &lt;012901C1-6DBA-4B17-8DE8-79564A21335D@...&gt;\t &lt;21606dcf0909250452l7a326317vd48e209fca6413eb@...&gt;\t &lt;9f0578290909250717s70fb1f4eq8670ff6ac90b13ab@...&gt;\t &lt;28e257110909250744q4dabfbebud241eeabc99994c3@...&gt; &lt;3915c69d0909251340ve52d0f6o5449245e5400ee93@...&gt;\r\nIn-Reply-To: &lt;3915c69d0909251340ve52d0f6o5449245e5400ee93@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Scanned-By: MIMEDefang 2.67 on 10.5.11.11\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bill Burke &lt;bburke@...&gt;\r\nSubject: Re: [rest-discuss] Newbie REST Question\r\nX-Yahoo-Group-Post: member; u=371338898; y=7CrOwe7LeSylyfZ-8jILu6VKwbdHvjktTHdHKrxLGi4xczc2R0Gumg\r\nX-Yahoo-Profile: patriot1burke\r\n\r\n\n\nWill Hartung wrote:\n&gt; \n&gt; If for no other reason than efficiency, it seems unrealistic that an\n&gt; application must re-examine that API for every invocation.\n&gt; \n\n\nBTW, traditional RPC systems have the same exact issue.  How often \nshould an RPC client ping its Naming Service?\n\n(Somebody already mentioned this) For REST (+ HTTP) this naming-lookup \nfrequency is built into the application protocol (Cache-Control)\n\n&gt; How far does one push it?\n&gt; \n&gt; For example:\n&gt; \n&gt; http://example.com/ &lt;http://example.com/&gt; returns a list of URIs for the \n&gt; various resources\n&gt; it publishes. One is the person/people collection.\n&gt; \n\nThis provides a set of Link relationships.  A GET /example.com may \nreturn a Cache-Control header to state how long the representation is \nvalid for, which in turn could mean how long are the Link relationships \nvalid for.\n\n\n&gt; http://example.com/people &lt;http://example.com/people&gt; returns a list of \n&gt; everyone in the system,\n&gt; but that&#39;s absurd for many cases, so there&#39;s a search facility\n&gt; \n&gt; http://example.com/people?userId=1234 \n&gt; &lt;http://example.com/people?userId=1234&gt; returns a collection of all\n&gt; people with a userId of 1234 (in this case, only 1).\n&gt; \n&gt; This result has a link to get the user details: \n&gt; http://example.com/person/1234 &lt;http://example.com/person/1234&gt;\n&gt; \n&gt; Now, I don&#39;t think it&#39;s realistic that an application would need to\n&gt; start a transaction at the root, &quot;discover&quot; the people resource URI,\n&gt; search for the user to discover the Users reference URI, and finally\n&gt; calling that to get the actual user data.\n&gt; \n\nIt is realistic for the application to initially &quot;discover&quot; all the \nLinks by surfing the resources.  This is the same thing that RPC systems \ndo when interacting with a naming service.\n\n&gt; So, it&#39;s not a 100% rule, it&#39;s a guideline that promotes robustness,\n&gt; but at the end of the day, folks have to use this stuff too.\n&gt; \n\nIt can and should be a 100% rule.  Otherwise you lose the decoupling \nattributes of opaque URIs (and REST).  Again, RPC systems have the same \nexact problem (Sorry, I know I keep repeating myself).\n\nPlease correct me if I&#39;m wrong, but there is no reason your links can&#39;t \npublish Templates instead of specific Href URIs.  For example, instead \nof one &quot;people&quot; link, the link might be:\n\n&lt;link rel=&quot;peopleById http://relationships.com/peopleById&quot; \ntemplate=&quot;http://example.com/people/{userId}&quot; type=&quot;application/xml&quot;/&gt;\n\nThen, for the definition of the &quot;peopleById&quot; link relationship it says \nit has a template parameter {userId}.\n\n\n&gt; It may be interesting to publish a document that holds the details of\n&gt; an API. The client can use that document as a local caching\n&gt; indiciator. As long as the document is unchanged, the client can cache\n&gt; the URIs it discovers, and know it doesn&#39;t have to look them up any\n&gt; more. If the doc does change, then the client can fall back in to\n&gt; &quot;discovery&quot; mode (for example, in this case, crawling from the root of\n&gt; the service again). Doesn&#39;t even have to be a &quot;real&quot; document, it can\n&gt; just be a caching indicator.\n&gt; \n\nThis &quot;magic&quot; document you talk about already exists.  It is the document \nyou received the links from.\n\n-- \nBill Burke\nJBoss, a division of Red Hat\nhttp://bill.burkecentral.com\n\n"}}