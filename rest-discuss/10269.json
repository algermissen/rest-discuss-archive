{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":20175505,"authorName":"John D. Heintz","from":"&quot;John D. Heintz&quot; &lt;jheintz@...&gt;","profile":"johndheintz","replyTo":"SENDER","senderId":"Cx_ZtPG0G_Lgk0GVcJpcKEYCH1E_W9JwUyH6jLuIOYaxKBsoYj-pWNex6BAGoKlsCYoa4W6djnHTKlCKT-2NMQ5Ga8HB6zzoJGtF","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] bootstrapping","postDate":"1200693576","msgId":10269,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM4MjA0NTQzMDgwMTE4MTM1OWoyYzFkMjQwZGxkYTA3ODczMDBlYWI4YmRhQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDUwMzdiNmU0MDgwMTE3MTkxN2gyZDM2ZTQ4MG43NjAzNzY1OTg1ZDBjNzU2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPgkgPDUwMzdiNmU0MDgwMTE2MTA0OHE0MGViYWQ4NGkzOGY3YzhhMmQ5MmU3MDA1QG1haWwuZ21haWwuY29tPgkgPDBmM2UwMWM4NTg3ZiQ5ZDhhY2Y3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+CSA8NTAzN2I2ZTQwODAxMTYyMjM5Zzc3N2I0NjdkcTY0YjEzNzMzMDAwOTg4YWNAbWFpbC5nbWFpbC5jb20+CSA8MTA1NDAxYzg1OGU3JDQ4ZmNiNWYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4JIDw1MDM3YjZlNDA4MDExNzE5MTdoMmQzNmU0ODBuNzYwMzc2NTk4NWQwYzc1NkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":10267,"nextInTopic":10270,"prevInTime":10268,"nextInTime":10270,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"Assaf, I agree very, very much. So much that I used the metaphor of signposts for exactly this same idea [1]. My most recent thinking [2] on this is that a","rawEmail":"Return-Path: &lt;jheintz@...&gt;\r\nX-Sender: jheintz@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 28472 invoked from network); 18 Jan 2008 21:59:37 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m54.grp.scd.yahoo.com with QMQP; 18 Jan 2008 21:59:37 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.178)\n  by mta15.grp.scd.yahoo.com with SMTP; 18 Jan 2008 21:59:36 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id m16so1987573waf.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 18 Jan 2008 13:59:36 -0800 (PST)\r\nX-Received: by 10.114.80.4 with SMTP id d4mr1934282wab.44.1200693576738;\n        Fri, 18 Jan 2008 13:59:36 -0800 (PST)\r\nX-Received: by 10.114.151.16 with HTTP; Fri, 18 Jan 2008 13:59:36 -0800 (PST)\r\nMessage-ID: &lt;c82045430801181359j2c1d240dlda0787300eab8bda@...&gt;\r\nDate: Fri, 18 Jan 2008 15:59:36 -0600\r\nTo: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nCc: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;fmks78+k15k@...&gt;\n\t &lt;5037b6e40801161048q40ebad84i38f7c8a2d92e7005@...&gt;\n\t &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt;\n\t &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt;\n\t &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt;\n\t &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\r\nX-Google-Sender-Auth: 4db5dd9b82793366\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;John D. Heintz&quot; &lt;jheintz@...&gt;\r\nSubject: Re: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=20175505; y=DlfcckycUfTP0Xam4regHBy2g4DhH4gkACidMGuXd3PwsCNp__s\r\nX-Yahoo-Profile: johndheintz\r\n\r\nAssaf,\n\nI agree very, very much. So much that I used the metaphor of\n&quot;signposts&quot; for exactly this same idea [1].\n\nMy most recent thinking [2] on this is that a &quot;State Description\nLanguage&quot; could provide a shared set of expectations that consumers of\na RESTful system could opportunistically take advantage of. In this\npost I also refer to several interesting papers and systems that seem\nto indicate solutions in this light.\n\nMike Schinkel: Most developers won&#39;t step up to semantic web, RDF,\nstate machines languages, and so on. We&#39;ve agreed on this generally\nbefore. (However, I don&#39;t like the names used to describe people in\nthis thread - it is just important that people can get some value with\nsmall effort, and more value with more effort.) Any solution to this\nshould introduce the smallest possible addition to enable useful and\nflexible processing.\n\nIn my opinion the example set by Microformats and GRDDL [3] together\nanswer both the smallest implication and opportunity for predictive\nspecification concerns.\n* Microformats are simple (one or a few additional pieces of data\nadded to content)\n* GRDDL transforms HTML+microformats into a formal RDF model for any\nsophisticated processing\n\nIn a uniform interface hypermedia system all of this (state transfer,\nsigns, signposts, ...) is encoded into the MIME type of a\nRepresentation. How to build a good hypermedia system, extensible and\nmachine processable hypermedia documents (and types), and process\ncurrent documents with automation support is all very naive. Today the\nmachine clients of HTTP are just starting to take advantage what could\nbe done, there is a lot of opportunity.\n\nThis quote from section 5.3.3 of the REST thesis points to the goal,\nbut doesn&#39;t give the slightest advice on how to achieve it:\n  &quot;The model application is therefore an engine that moves from one\nstate to the next by examining and choosing from among the alternative\nstate transitions in the current set of representations.&quot;\n\nJohn Heintz\n\n[1] http://johnheintz.blogspot.com/2007/05/does-rest-need-dl.html\n[2] http://johnheintz.blogspot.com/2008/01/comments-rest-interactions-and.html\n[3] http://www.w3.org/TR/grddl/\n\nOn Jan 17, 2008 9:17 PM, Assaf Arkin &lt;assaf@...&gt; wrote:\n&gt; On Jan 17, 2008 12:59 AM, Mike Schinkel &lt;mikeschinkel@...&gt; wrote:\n&gt; &gt; However, and I explain this so you&#39;ll know why I make some of my arguments,\n&gt; &gt; I&#39;m also concerned with empowering a class of people that I think most who\n&gt; &gt; participate on these lists are not concerned with. I&#39;ll call those people\n&gt; &gt; &quot;occupational&quot; programmers (as opposed to &quot;professional&quot;) programmers.\n&gt; &gt; Occupational programmers by nature program to get a job done not because\n&gt; &gt; their job is programming. The more difficult something is the less likely an\n&gt; &gt; occupational programmers will ever be able to do it because they don&#39;t\n&gt; &gt; rarely have the time to learn more than beginner-level programming skills.\n&gt;\n&gt; I just call them developers.  Those working on the business needs like\n&gt; order fullfilment and inventory management, far outweight those\n&gt; working on infrastructure problems like how to connect any given\n&gt; server to any given client.  I belong to the smaller category of\n&gt; infrastructure developers, who worry about that stuff, but only so\n&gt; other developers won&#39;t have to.\n&gt;\n&gt; Same difference, I just think it helps in remembering that what works\n&gt; for me doesn&#39;t work for most developers.\n&gt;\n&gt;\n&gt; &gt; IMO for the HATEOAS to be fully respected and generally used we need a\n&gt; &gt; standard way to discover and interact with REST-based web services and that\n&gt; &gt; standard way to interact need to then be built into browsers thus allowing\n&gt; &gt; people to discover and interact with them without having to write code.\n&gt; &gt; Until that happens, it&#39;s unrealistic to expect widespread use of HATEOAS for\n&gt; &gt; any but the most standards-pedantic of web service publishers much like\n&gt; &gt; people still use &lt;table&gt; elements instead of pure CSS because pure CSS\n&gt; &gt; doesn&#39;t fully meet the needs of users.  Companies that have a strategic\n&gt; &gt; reason for more people to use their externally published web services are\n&gt; &gt; foolish not to publish direct URL interfaces because given the current state\n&gt; &gt; of things HATEOAS signifcantly stunts adoption.\n&gt;\n&gt; HATEOAS, if I understand correctly, talks about links and their\n&gt; equivalence, or how you navigate from one resource to another, or\n&gt; change from one state to another.  The Web as we know it has another\n&gt; thing called discovery.  Given a resource I can discover how to use\n&gt; it, as I&#39;m using it, and use hypermedia to drive the application\n&gt; state.\n&gt;\n&gt; In my experience that doesn&#39;t work for the programmable Web.  You\n&gt; really do need to know what the states and transitions are, before you\n&gt; start coding for them.  Things like getting an order done is pursuing\n&gt; known transitions, to a desired end state, but you&#39;ll never start if\n&gt; you don&#39;t know there&#39;s a paved road leading to your destination.\n&gt;\n&gt; Working without a spec (i.e. pure discovery) has other down sides,\n&gt; like not always finding the optimal path, not being able to develop in\n&gt; parallel, QA servers on behalf of clients, or even determining what\n&gt; changes break clients.\n&gt;\n&gt; You need a map, and post signs along the way.\n&gt;\n&gt; The problem with WSDL, and from what I&#39;ve seen also WADL, is that\n&gt; neither one provides a map.  They provide blueprints.  They tell you\n&gt; exactly how to manufacture a service (and clients), but in doing so\n&gt; eliminates necessary deviations, extensions and compositions that can\n&gt; happen over time.  We need something better than that, which smartly\n&gt; divides that which belongs in the map and what which belongs on signs.\n&gt;\n&gt; In that world view, dynamically downloading a map is unnecessary.  You\n&gt; already have one, from which you&#39;re building your code.  And if the\n&gt; one you have is different from the one you download, there&#39;s little\n&gt; you can do about it.  But you pay attention to signs along the route,\n&gt; in fact you can&#39;t get to your destination without following signs.\n&gt;\n&gt; So in this particular case, I would say that for all the known places,\n&gt; you should just list them on a map, hand it to developers to build\n&gt; clients from it.  As you point out, public services like Google do\n&gt; that as a matter of practice, and that just means you have to honor\n&gt; these specifications once you publish them.  But some routes may\n&gt; change over time, in which case it&#39;s best to have the server resolve\n&gt; them, which is a simple matter of &quot;here&#39;s the data, give me back a\n&gt; URL&quot;.\n&gt;\n&gt; The inbetween case is putting something up with intent that it be a\n&gt; sign, but possibility to be used as a map.  If it&#39;s possible it will\n&gt; happen, much more than developers reading the manual.  So rather than\n&gt; hoping things will happen in a particular way, I say commit to them.\n&gt; Make something a map or a sign, and only available in one form.\n&gt;\n&gt;\n&gt; &gt; BTW, 99% of what I&#39;m discussing in this email are web services published for\n&gt; &gt; external use, not web services that are only used by others in the same\n&gt; &gt; organization.\n&gt;\n&gt; It&#39;s been my experience that if you follow the successful practices of\n&gt; the Web, it ends up working quite well internally, if you follow\n&gt; practices only intended to work internally, they don&#39;t always work\n&gt; internally.  There&#39;s obviously a benefit to writing a service that\n&gt; only your coworker in the next room can use -- time being one of them\n&gt; -- but that&#39;s also how we acquire technical debt.\n&gt;\n&gt; I plan on every service as if it was publish on the Web, because I\n&gt; can&#39;t tell that the person who was at the design meeting today won&#39;t\n&gt; be replaced by someone else tomorrow who doesn&#39;t share our same\n&gt; understanding of doing things.\n&gt;\n&gt; -- Assaf\n&gt; http://labnotes.org\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; There are also cases where a HATEOAS requirement effectively nullifies the\n&gt; &gt; benefit fo the service, for example the published URL interfaces for\n&gt; &gt; Google&#39;s Chart API [1].  Given that the Google Chart API returns an image\n&gt; &gt; for use in a &lt;img src=&quot;...&quot;&gt; element, requiring the client to first call a\n&gt; &gt; main URL to get the specific URL before it can use it elimates potential use\n&gt; &gt; anywhere Javascript is not an option and for anyone who does not have the\n&gt; &gt; required Javascript skills (My guess is more than 10 times more people know\n&gt; &gt; HTML than Javascript.)  Again, I&#39;m advocating for accessibility for the\n&gt; &gt; lesser skilled. They, after all, are not here to advocate for themselves\n&gt; &gt; (unless you count me in that category. :-)\n&gt; &gt;\n&gt; &gt; --\n&gt; &gt; -Mike Schinkel\n&gt; &gt; http://www.mikeschinkel.com/blogs/\n&gt; &gt; http://www.welldesignedurls.org\n&gt; &gt; http://atlanta-web.org\n&gt; &gt;\n&gt; &gt; [1] http://code.google.com/apis/chart/#url_format\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Assaf\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; But even your service is public, if it is important that the URL be\n&gt; &gt; &gt; &gt; able to change then make that clear in no uncertain terms\n&gt; &gt; &gt; in the docs\n&gt; &gt; &gt; &gt; and in UPPERCASE comments in any representations returned.\n&gt; &gt; &gt; And if you\n&gt; &gt; &gt; &gt; are paranoid, literally change the URL every time with a\n&gt; &gt; &gt; validatation\n&gt; &gt; &gt; &gt; parameter so that anyone who did hard code quickly learns\n&gt; &gt; &gt; better and\n&gt; &gt; &gt; &gt; no time is given to allow hardcoded clients time is build up.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Or IMO best of all, just document it and commit to the URL\n&gt; &gt; &gt; format just\n&gt; &gt; &gt; &gt; as Google have done with their Chart service, for example.\n&gt; &gt; &gt; Yes I know,\n&gt; &gt; &gt; &gt; that violates the HATEOAS requirement but I personally don&#39;t think\n&gt; &gt; &gt; &gt; being a fundamentalist in all things is such a good idea;\n&gt; &gt; &gt; some times\n&gt; &gt; &gt; &gt; it is better just to put a stake in the ground. If\n&gt; &gt; &gt; *everything* were\n&gt; &gt; &gt; &gt; meta, we&#39;d never get anything done.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; --\n&gt; &gt; &gt; &gt; -Mike Schinkel\n&gt; &gt; &gt; &gt; http://www.mikeschinkel.com/blogs/\n&gt; &gt; &gt; &gt; http://www.welldesignedurls.org\n&gt; &gt; &gt; &gt; http://atlanta-web.org\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; --\n&gt; &gt; &gt; -- Assaf\n&gt; &gt; &gt;\n&gt; &gt; &gt; http://labnotes.org\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n-- \nJohn D. Heintz\nPrincipal Consultant\nNew Aspects of Software\nhttp://newaspects.com\nhttp://johnheintz.blogspot.com\nAustin, TX\n(512) 633-1198\n\n"}}