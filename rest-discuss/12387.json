{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"Assaf Arkin &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"1B4kQyPNZul3HpJJl3R6m7R3PR57VqhXyoPYNMVnW69ngogX9oQbnn6XmOTF8z7L8maeeKUuPOMpL6inKfPNT1Vy_vCDBPA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Why HATEOAS?","postDate":"1239033459","msgId":12387,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDkwNDA2MDg1N3I0ZGUyOGQxcWRiNDI2YjljYWE4MTZkMmRAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGdyZDZ2Mis4dWVoQGVHcm91cHMuY29tPg==","referencesHeader":"PDQ5RDdBRkQzLjIwMDAyMDRAZGVob3JhLm5ldD4gPGdyZDZ2Mis4dWVoQGVHcm91cHMuY29tPg=="},"prevInTopic":12386,"nextInTopic":12392,"prevInTime":12386,"nextInTime":12388,"topicId":12357,"numMessagesInTopic":27,"msgSnippet":"... Let s say you re writing a new database server based on a new theory for massively scaling megadata to the cloud. To get taken seriously you ll need ","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21954 invoked from network); 6 Apr 2009 15:58:12 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m1.grp.re1.yahoo.com with QMQP; 6 Apr 2009 15:58:12 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.237)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 Apr 2009 15:58:11 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id k40so2141125rvb.41\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 06 Apr 2009 08:57:54 -0700 (PDT)\r\nMIME-Version: 1.0\r\nIn-Reply-To: &lt;grd6v2+8ueh@...&gt;\r\nReferences: &lt;49D7AFD3.2000204@...&gt; &lt;grd6v2+8ueh@...&gt;\r\nDate: Mon, 6 Apr 2009 08:57:39 -0700\r\nX-Received: by 10.141.21.5 with SMTP id y5mr2250361rvi.178.1239033474123; Mon, \n\t06 Apr 2009 08:57:54 -0700 (PDT)\r\nMessage-ID: &lt;5037b6e40904060857r4de28d1qdb426b9caa816d2d@...&gt;\r\nTo: wahbedahbe &lt;andrew.wahbe@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=000e0cd1a8da1707cd0466e4f610\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Assaf Arkin &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] Re: Why HATEOAS?\r\nX-Yahoo-Group-Post: member; u=319607554; y=4LAtePx6RF-bpP8grHYU_w3y-tNnNJAaPSsdsGY8vlpm5a7K1Q\r\nX-Yahoo-Profile: assafarkin\r\n\r\n\r\n--000e0cd1a8da1707cd0466e4f610\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Mon, Apr 6, 2009 at 8:26 AM, wahbedahbe &lt;andrew.wahbe@...&gt; wrote:\n\n&gt; Ok, but I&#39;m more wondering about the specific gains folks are seeing in\n&gt; practice in the systems they are building. The reason I&#39;m curious is because\n&gt; there are a lot of frameworks like Rails which claim &quot;RESTfulness&quot; but seem\n&gt; to just deliver REST - HATEOAS (well at least on the &quot;machine to machine&quot;\n&gt; ActiveResource side of things when I last looked at it). Lots of folks seem\n&gt; to think this is really great and is light years better than RPC but I don&#39;t\n&gt; really understand why.\n\n\nLet&#39;s say you&#39;re writing a new database server based on a new theory for\nmassively scaling megadata to the cloud. To get taken seriously you&#39;ll need\nconnectors for Java, .Net and C, with wrappers for PHP, Ruby and Python.\nThat&#39;s a lot of connectivity overhead.\n\nOr you can do CRUD over HTTP. You can just adapt a client library from\nanother database, or use one of the many rapid-client devkits out there. You\nget the four basic operations, authentication, encryption, load balancing\nand caching out of the box.\n\nOr think about it a different way. I&#39;m writing a script to add user accounts\nfrom CSV file onto remote server, I wrote the back-end so I&#39;m in control of\nthe protocol. I can get something up and running with ActiveResource in a\nfew minutes. It won&#39;t have the survivability of HATEOAS, but it only takes a\nfew minutes to build and only takes a few minutes to fix.\n\nIf you work with HTTP day in an day out, I can see why it would be\nsignificantly better to use HTTP over IIOP or RMI or\ninsert-other-binary-format.\n\nAssaf\n\n\n&gt;\n&gt; Also, things like the idempotency of PUT and DELETE have never yielded any\n&gt; practical benefits to me (though I get how they can in _theory_) so I&#39;m also\n&gt; really curious to know how people are making practical use of them in the\n&gt; systems they are building.\n&gt;\n&gt; I have personally seen huge gains with &quot;full&quot; REST in systems I&#39;ve built --\n&gt; chiefly in decoupling clients and servers (a lot of the stuff Craig\n&gt; McClanahan brings up in this thread) -- and so I really &quot;get&quot; that. REST -\n&gt; HATEOAS -- not so much.\n&gt;\n&gt; On another note: I think HATEOAS is much more than &quot;links in content&quot;\n&gt; unless your client is something like a spider. What&#39;s your take on the\n&gt; discussion here:\n&gt; http://www.intertwingly.net/blog/2008/03/23/Connecting\n&gt;\n&gt; Andrew Wahbe\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, Bill de hOra &lt;bill@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; wahbedahbe wrote:\n&gt; &gt;\n&gt; &gt; &gt; Actually, I&#39;d like to turn this question around.\n&gt; &gt; &gt;\n&gt; &gt; &gt; I&#39;ve always been confused by what folks who design systems that comply\n&gt; &gt; &gt; with all of REST except HATEOAS think they are getting out of it. It\n&gt; &gt; &gt; makes no sense to me. The only benefit I can think of is that\n&gt; &gt; &gt; intermediaries have some insight into what is going on. From a\n&gt; practical\n&gt; &gt; &gt; perspective this means you get caching (yes, theoretically it can be\n&gt; &gt; &gt; more than caching but most systems stop there). Is that it?\n&gt; &gt;\n&gt; &gt; To turn this round again - I would not agree that all REST benefits are\n&gt; &gt; derived from links in content.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; &gt; What do folks think? What are the benefits of a REST - HATEOAS based\n&gt; &gt; &gt; architecture?\n&gt; &gt;\n&gt; &gt; Each principle and constraint adopted gets you some benefit, and those\n&gt; &gt; are well documented. So the answer seems to the benefits except those\n&gt; &gt; derived from links in content.\n&gt; &gt; Bill\n&gt; &gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\r\n--000e0cd1a8da1707cd0466e4f610\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Apr 6, 2009 at 8:26 AM, wahbedahbe &lt;span=\r\n dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:andrew.wahbe@...&quot;&gt;andrew.wahbe@gma=\r\nil.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nmargin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\nOk, but I=\r\n&#39;m more wondering about the specific gains folks are seeing in practice=\r\n in the systems they are building. The reason I&#39;m curious is because th=\r\nere are a lot of frameworks like Rails which claim &quot;RESTfulness&quot; =\r\nbut seem to just deliver REST - HATEOAS (well at least on the &quot;machine=\r\n to machine&quot; ActiveResource side of things when I last looked at it). =\r\nLots of folks seem to think this is really great and is light years better =\r\nthan RPC but I don&#39;t really understand why.&lt;/blockquote&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;div&gt;Let&#39;s say you&#39;re writing a new database server based on a ne=\r\nw theory for massively scaling megadata to the cloud. To get taken seriousl=\r\ny you&#39;ll need connectors for Java, .Net and C, with wrappers for PHP, R=\r\nuby and Python. That&#39;s a lot of connectivity overhead.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;div&gt;Or you can do CRUD over HTTP. You can just adapt a client librar=\r\ny from another database, or use one of the many rapid-client devkits out th=\r\nere. You get the four basic operations, authentication, encryption, load ba=\r\nlancing and caching out of the box.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Or think abo=\r\nut it a different way. I&#39;m writing a script to add user accounts from C=\r\nSV file onto remote server, I wrote the back-end so I&#39;m in control of t=\r\nhe protocol. I can get something up and running with ActiveResource in a fe=\r\nw minutes. It won&#39;t have the survivability of HATEOAS, but it only take=\r\ns a few minutes to build and only takes a few minutes to fix.&lt;/div&gt;\n\n&lt;div&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div&gt;If you work with HTTP day in an day out, I can see why it wou=\r\nld be significantly better to use HTTP over IIOP or RMI or insert-other-bin=\r\nary-format.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assaf&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote =\r\nclass=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid=\r\n;padding-left:1ex;&quot;&gt;\n\n&lt;br&gt;\n&lt;br&gt;\nAlso, things like the idempotency of PUT an=\r\nd DELETE have never yielded any practical benefits to me (though I get how =\r\nthey can in _theory_) so I&#39;m also really curious to know how people are=\r\n making practical use of them in the systems they are building.&lt;br&gt;\n\n\n&lt;br&gt;\n=\r\nI have personally seen huge gains with &quot;full&quot; REST in systems I&#=\r\n39;ve built -- chiefly in decoupling clients and servers (a lot of the stuf=\r\nf Craig McClanahan brings up in this thread) -- and so I really &quot;get&q=\r\nuot; that. REST - HATEOAS -- not so much.&lt;br&gt;\n\n\n&lt;br&gt;\nOn another note: I thi=\r\nnk HATEOAS is much more than &quot;links in content&quot; unless your clien=\r\nt is something like a spider. What&#39;s your take on the discussion here:&lt;=\r\nbr&gt;\n&lt;a href=3D&quot;http://www.intertwingly.net/blog/2008/03/23/Connecting&quot; targ=\r\net=3D&quot;_blank&quot;&gt;http://www.intertwingly.net/blog/2008/03/23/Connecting&lt;/a&gt;&lt;br=\r\n&gt;\n&lt;br&gt;\nAndrew Wahbe&lt;br&gt;\n&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n--- In &lt;a hr=\r\nef=3D&quot;mailto:rest-discuss@yahoogroups.com&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;=\r\n, Bill de hOra &lt;bill@...&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; wahbedahbe wrote:&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&gt; &gt; Actually, I&#39;d like to turn this question around.=\r\n&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; I&#39;ve always been confused by what folks wh=\r\no design systems that comply&lt;br&gt;\n&gt; &gt; with all of REST except HATEOAS =\r\nthink they are getting out of it. It&lt;br&gt;\n&gt; &gt; makes no sense to me. Th=\r\ne only benefit I can think of is that&lt;br&gt;\n&gt; &gt; intermediaries have som=\r\ne insight into what is going on. From a practical&lt;br&gt;\n&gt; &gt; perspective=\r\n this means you get caching (yes, theoretically it can be&lt;br&gt;\n&gt; &gt; mor=\r\ne than caching but most systems stop there). Is that it?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; =\r\nTo turn this round again - I would not agree that all REST benefits are&lt;br&gt;=\r\n\n&gt; derived from links in content.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &gt; What d=\r\no folks think? What are the benefits of a REST - HATEOAS based&lt;br&gt;\n&gt; &gt=\r\n; architecture?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Each principle and constraint adopted get=\r\ns you some benefit, and those&lt;br&gt;\n&gt; are well documented. So the answer s=\r\neems to the benefits except those&lt;br&gt;\n&gt; derived from links in content.&lt;b=\r\nr&gt;\n&gt; Bill&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n-----------------------------=\r\n-------&lt;br&gt;\n&lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit your group=\r\n on the web, go to:&lt;br&gt;\n =A0 =A0&lt;a href=3D&quot;http://groups.yahoo.com/group/re=\r\nst-discuss/&quot; target=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/group/rest-discuss/&lt;=\r\n/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your email settings:&lt;br&gt;\n =A0 =A0Individual Email | =\r\nTraditional&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings online go to:&lt;br&gt;\n =A0 =\r\n=A0&lt;a href=3D&quot;http://groups.yahoo.com/group/rest-discuss/join&quot; target=3D&quot;_b=\r\nlank&quot;&gt;http://groups.yahoo.com/group/rest-discuss/join&lt;/a&gt;&lt;br&gt;\n =A0 =A0(Yaho=\r\no! ID required)&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings via email:&lt;br&gt;\n =A0 =\r\n=A0mailto:&lt;a href=3D&quot;mailto:rest-discuss-digest@yahoogroups.com&quot;&gt;rest-discu=\r\nss-digest@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n =A0 =A0mailto:&lt;a href=3D&quot;mailto:rest-dis=\r\ncuss-fullfeatured@yahoogroups.com&quot;&gt;rest-discuss-fullfeatured@...=\r\nm&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from this group, send an email to:&lt;=\r\nbr&gt;\n =A0 =A0&lt;a href=3D&quot;mailto:rest-discuss-unsubscribe@yahoogroups.com&quot;&gt;res=\r\nt-discuss-unsubscribe@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Ya=\r\nhoo! Groups is subject to:&lt;br&gt;\n =A0 =A0&lt;a href=3D&quot;http://docs.yahoo.com/inf=\r\no/terms/&quot; target=3D&quot;_blank&quot;&gt;http://docs.yahoo.com/info/terms/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n=\r\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd1a8da1707cd0466e4f610--\r\n\n"}}