{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"bZop3yozXidQyTtDJvZkXz892LTYSbqYxKSR0NQ3fhRMDGdsKrJ8juqXYciVSex3PO8PoymtZoyhbw_eqNa_Qmx-ejjQPXLNng","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Objects at REST...","postDate":"1205413917","msgId":10482,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM1ODBENEZELUVFNTUtNDcxMS1BRjE5LTg2MTRFRjcwQTdDNkBtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PGU1YzZlY2FiMDgwMzEyMTQ1MXk1ZWQyZWM1MHA1MTI5ZGE0NTRiOTk3MzJAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDQ3RDc4NjBELjMyNzUuMjJFRjgwNjBAYW5kcnplai5jaGFlcm9uLmNvbT4gPGU1YzZlY2FiMDgwMzEyMDYyM2s2YWI3N2UxM3FkN2UzNWQzNTZmOTEzMzljQG1haWwuZ21haWwuY29tPiA8NDdEODA4MDkuMjg5OS4yNEVCM0Q4NEBhbmRyemVqLmNoYWVyb24uY29tPiA8ZTVjNmVjYWIwODAzMTIxNDUxeTVlZDJlYzUwcDUxMjlkYTQ1NGI5OTczMkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":10481,"nextInTopic":10491,"prevInTime":10481,"nextInTime":10483,"topicId":10454,"numMessagesInTopic":17,"msgSnippet":"... The problem in your thinking here is that you re still partitioning behavioral into sets of methods.  If you fix the set of methods to HTTP verbs (GET,","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 61786 invoked from network); 13 Mar 2008 13:12:16 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m44.grp.scd.yahoo.com with QMQP; 13 Mar 2008 13:12:16 -0000\r\nX-Received: from unknown (HELO smtp.01.com) (38.98.186.166)\n  by mta18.grp.scd.yahoo.com with SMTP; 13 Mar 2008 13:12:15 -0000\r\nX-Received: from asav-1.01.com (localhost.localdomain [127.0.0.1])\n\tby asav-1.01.com (8.13.1/8.13.1) with SMTP id m2DDCcgD015508\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 13 Mar 2008 08:12:38 -0500\r\nX-Received: from smtp-2.01.com (smtp-2.01.com [38.98.186.158])\n\tby asav-1.01.com (asav-1.01.com [10.25.1.11])\n\tid k2C8Cc0034628843WZ ret-id none; Thu, 13 Mar 2008 08:12:38 -0500\r\nX-Received: from localhost (localhost.localdomain [127.0.0.1])\n\tby smtp-2.01.com (Postfix) with ESMTP id 56C501BA222;\n\tThu, 13 Mar 2008 08:12:06 -0500 (CDT)\r\nX-Received: from smtp-2.01.com ([127.0.0.1])\n\tby localhost (smtp-2.01.com [127.0.0.1]) (amavisd-new, port 10024)\n\twith ESMTP id T1mZf8La3Xon; Thu, 13 Mar 2008 08:12:06 -0500 (CDT)\r\nX-Received: from [192.168.1.108] (ip68-107-88-60.sd.sd.cox.net [68.107.88.60])\n\tby smtp-2.01.com (Postfix) with ESMTP id 864551BA216;\n\tThu, 13 Mar 2008 08:12:05 -0500 (CDT)\r\nIn-Reply-To: &lt;e5c6ecab0803121451y5ed2ec50p5129da454b99732@...&gt;\r\nReferences: &lt;47D7860D.3275.22EF8060@...&gt; &lt;e5c6ecab0803120623k6ab77e13qd7e35d356f91339c@...&gt; &lt;47D80809.2899.24EB3D84@...&gt; &lt;e5c6ecab0803121451y5ed2ec50p5129da454b99732@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v753)\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-45--526549167\r\nMessage-Id: &lt;C580D4FD-EE55-4711-AF19-8614EF70A7C6@...&gt;\r\nCc: andrzej@..., rest-discuss@yahoogroups.com\r\nDate: Thu, 13 Mar 2008 06:11:57 -0700\r\nTo: Daniel Yokomizo &lt;daniel.yokomizo@...&gt;\r\nX-Mailer: Apple Mail (2.753)\r\nX-FSL-MailScanner-Information: Please contact postmaster@... for more information\r\nX-FSL-MailScanner: Found to be clean\r\nX-FSL-MailScanner-SpamCheck: \r\nX-FSL-MailScanner-From: steveb@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] Objects at REST...\r\nX-Yahoo-Group-Post: member; u=292691042; y=vjj_T0jUNUSD_u0Bwt1VILrqc3CNKPcqa0R0mPldApb9hMCuYeM\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\n\r\n--Apple-Mail-45--526549167\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\n&gt; On Wed, Mar 12, 2008 at 6:42 PM, Andrzej Jan Taramina\n&gt; &lt;andrzej@...&gt; wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;  Daniel suggests:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; otherwise we treat methods as subordinate URLs of\n&gt;&gt;&gt; the parent objects (e.g. /articles/1/publish()), but it only accepts\n&gt;&gt;&gt; GET (we return a representation to fill the parameters and submit  \n&gt;&gt;&gt; it,\n&gt;&gt;&gt; usually is a xhtml form but it can be something else for other\n&gt;&gt;&gt; media-types) and POST for invocation responding with redirect. It  \n&gt;&gt;&gt; will\n&gt;&gt;&gt; emphasize not using RPC style methods but if you must it should use\n&gt;&gt;&gt; safe semantics.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;  That&#39;s the start of a very slippery slope.  You&#39;re basically  \n&gt;&gt; encouraging the\n&gt;&gt;  OO folks to tunnel RPC over HTTP.\n&gt;&gt;\n&gt;\n&gt; I&#39;m not encouraging anything. As I said the primary method of\n&gt; interaction is basically REST using whatever verbs you are want to\n&gt; work with (e.g. HTTP, WebDAV), but there&#39;s a escape clause, which is\n&gt; different from encouraging. As I said it only supports POST, which\n&gt; gives almost no guarantees and it return a 303 if there&#39;s a return to\n&gt; a know resource (no body in any case), so the user of the framework\n&gt; must work with resources.\n\nThe problem in your thinking here is that you&#39;re still partitioning  \nbehavioral into sets of &quot;methods.&quot;  If you fix the set of methods to  \nHTTP verbs (GET, PUT, DELETE, POST), the only way you can partition  \nthe behavioral space is by topologies of resources (i.e. relationships).\n\nAnother way to think about is that you&#39;re building your software out  \nof a few building blocks that you _cannot_ add behavior to.  These  \nbuilding blocks are entities (GET, PUT) and collections (GET, PUT,  \nPOST, DELETE).\n\nIn this view of the world, there is no URI that corresponds to the  \n&quot;publish&quot; method found in OO.  However, &quot;the act of publishing&quot; is  \ndefined as POSTing a new entity to the publications collection.   \n(Reading ahead, it appears you&#39;re already well familiar with this  \napproach).\n\n&gt;&gt;\n&gt;&gt;&gt; Obviously I&#39;m biased for it but I think it&#39;s a good way to  \n&gt;&gt;&gt; develop an\n&gt;&gt;&gt; application, because the user&#39;s interface will map the domain model.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;  That doesn&#39;t work in the world of machine to machine  \n&gt;&gt; communications, since it\n&gt;&gt;  is rare that disparate systems have common domain or object models.\n&gt;&gt;\n&gt;\n&gt; It doesn&#39;t matter if the user is a machine or a human. If the model we\n&gt; use to expose the resources is different from the domain model,\n&gt; otherwise the programmer have to write especialized code to do the\n&gt; mapping. It&#39;s the same issue with ORM, this kind of impedance mismatch\n&gt; always requires more work.\n\nHaving to &quot;specialized code to do the mapping&quot; is exactly what this  \nis about.  If you don&#39;t, you&#39;re doomed because you&#39;re forcing  \neveryone to buy into your view of the world.  In REST, there are many  \nviews of the world (representations), but none of them are  \nnecessarily the state of the world (the resource).\n\nCoupling at the representation level is the weakest, and therefore  \nthe most flexible way to interface communicating systems.\n\n&gt;\n&gt;\n&gt;&gt;  The better approach in that scenario is to design a data  \n&gt;&gt; representation\n&gt;&gt;  format that is better suited to the integration and transmission of\n&gt;&gt;  information, rather than cater to internal implementation models  \n&gt;&gt; on both\n&gt;&gt;  sides.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; As we can use URIs to identify objects we can save those in other\n&gt;&gt;&gt; systems, so we are planning to use URIs for every inter application\n&gt;&gt;&gt; references, which lends itself to very easy integration.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;  I beg to differ.  Common/consistent URI&#39;s are a help, but a  \n&gt;&gt; properly designed\n&gt;&gt;  data representation, with concomittent semantic definitions,  \n&gt;&gt; independent of\n&gt;&gt;  back end domain/object models is what makes integration easier,  \n&gt;&gt; though even\n&gt;&gt;  at the best of times, integration is still hard.\n&gt;&gt;\n&gt;\n&gt; Instead of sending &lt;customer id=&#39;XXX&#39;/&gt; we respond with &lt;customer\n&gt; ref=&#39;/customers/XXX&#39;/&gt; which is the REST approach. It&#39;s easier to have\n&gt; integration if we know that every resource is sent with its\n&gt; corresponding URI.\n&gt;\n&gt;\n&gt;&gt;&gt; Also if the\n&gt;&gt;&gt; only interface to your app is via REST, everything can be an WS\n&gt;&gt;&gt; without additional effort.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;  What you&#39;re doing isn&#39;t REST for the most part.  It&#39;s using HTTP  \n&gt;&gt; as a\n&gt;&gt;  transport mechanism for RPC and inter-object distributed  \n&gt;&gt; communications.\n&gt;&gt;\n&gt;\n&gt; Why do you think so? If I have all my operations working on resources\n&gt; and I&#39;m able to issue a DELETE /orders/XXX, it can work if the client\n&gt; is a browser or another app. The whole idea behind RESTful Web\n&gt; Services is about this. My apps are resource oriented, the only usage\n&gt; of POST in the app I&#39;m working right now is when I want to create new\n&gt; resources (i.e. POST /resources). To my app it doesn&#39;t matter if the\n&gt; request comes from a browser or another machine, that&#39;s why I say that\n&gt; I have no effort providing WS for everything.\n\nHmm, that was not the impression I got from the /articles/1/publish  \nexample given above.  Maybe this is a case of vehement agreement?\n\n\n- Steve\n\n--------------\nSteve G. Bjorg\nhttp://wiki.mindtouch.com\nhttp://wiki.opengarden.org\n\n\n\r\n--Apple-Mail-45--526549167\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=ISO-8859-1\r\n\r\n&lt;html&gt;&lt;body style=3D&quot;word-wrap: break-word; -webkit-nbsp-mode: space; -webk=\r\nit-line-break: after-white-space; &quot;&gt;&lt;blockquote type=3D&quot;cite&quot; class=3D&quot;&quot;&gt;&lt;d=\r\niv style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-=\r\nleft: 0px; &quot;&gt;On Wed, Mar 12, 2008 at 6:42 PM, Andrzej Jan Taramina&lt;/div&gt;&lt;di=\r\nv style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-l=\r\neft: 0px; &quot;&gt;&lt;&lt;a href=3D&quot;mailto:andrzej@...&quot;&gt;andrzej@...&lt;=\r\n/a&gt;&gt; wrote:&lt;/div&gt; &lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;margin-top=\r\n: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height:=\r\n 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin=\r\n-bottom: 0px; margin-left: 0px; &quot;&gt;=A0Daniel suggests:&lt;/div&gt;&lt;div style=3D&quot;ma=\r\nrgin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min=\r\n-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt; &lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;mar=\r\ngin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;ot=\r\nherwise we treat methods as subordinate URLs of&lt;/div&gt;&lt;div style=3D&quot;margin-t=\r\nop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;the par=\r\nent objects (e.g. /articles/1/publish()), but it only accepts&lt;/div&gt;&lt;div sty=\r\nle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: =\r\n0px; &quot;&gt;GET (we return a representation to fill the parameters and submit it=\r\n,&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px=\r\n; margin-left: 0px; &quot;&gt;usually is a xhtml form but it can be something else =\r\nfor other&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bot=\r\ntom: 0px; margin-left: 0px; &quot;&gt;media-types) and POST for invocation respondi=\r\nng with redirect. It will&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right:=\r\n 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;emphasize not using RPC style=\r\n methods but if you must it should use&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; =\r\nmargin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;safe semantics.&lt;=\r\n/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; ma=\r\nrgin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div styl=\r\ne=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0=\r\npx; &quot;&gt;=A0That&#39;s the start of a very slippery slope.=A0 You&#39;re basically enc=\r\nouraging the&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-=\r\nbottom: 0px; margin-left: 0px; &quot;&gt;=A0OO folks to tunnel RPC over HTTP.&lt;/div&gt;=\r\n &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-=\r\nbottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;=\r\nmargin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;=\r\n&gt;I&#39;m not encouraging anything. As I said the primary method of&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left:=\r\n 0px; &quot;&gt;interaction is basically REST using whatever verbs you are want to&lt;=\r\n/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =\r\nmargin-left: 0px; &quot;&gt;work with (e.g. HTTP, WebDAV), but there&#39;s a escape cla=\r\nuse, which is&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin=\r\n-bottom: 0px; margin-left: 0px; &quot;&gt;different from encouraging. As I said it =\r\nonly supports POST, which&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right:=\r\n 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;gives almost no guarantees an=\r\nd it return a 303 if there&#39;s a return to&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px=\r\n; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;a know resourc=\r\ne (no body in any case), so the user of the framework&lt;/div&gt;&lt;div style=3D&quot;ma=\r\nrgin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;m=\r\nust work with resources.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-p=\r\nlaceholder&quot;&gt;&lt;/div&gt;&lt;div&gt;The problem in your thinking here is that you&#39;re sti=\r\nll partitioning behavioral into sets of &quot;methods.&quot; =A0If you fix the set of=\r\n methods to HTTP verbs (GET, PUT, DELETE, POST), the only way you can parti=\r\ntion the behavioral space is by topologies of resources (i.e. relationships=\r\n).&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;Another way =\r\nto think about is that you&#39;re building your software out of a few building =\r\nblocks that you _cannot_ add behavior to. =A0These building blocks are enti=\r\nties (GET, PUT) and collections (GET, PUT, POST, DELETE).&lt;/div&gt;&lt;div&gt;&lt;br cla=\r\nss=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;In this view of the world, there=\r\n is no URI that corresponds to the &quot;publish&quot; method found in OO. =A0However=\r\n, &quot;the act of publishing&quot; is defined as POSTing a new entity to the publica=\r\ntions collection. =A0(Reading ahead, it appears you&#39;re already well familia=\r\nr with this approach).&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/d=\r\niv&gt;&lt;blockquote type=3D&quot;cite&quot; class=3D&quot;&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;br&gt;&lt;bloc=\r\nkquote type=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; marg=\r\nin-bottom: 0px; margin-left: 0px; &quot;&gt;Obviously I&#39;m biased for it but I think=\r\n it&#39;s a good way to develop an&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-r=\r\night: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;application, because the=\r\n user&#39;s interface will map the domain model.&lt;/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div st=\r\nyle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left:=\r\n 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-r=\r\night: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0That doesn&#39;t work in =\r\nthe world of machine to machine communications, since it&lt;/div&gt;&lt;div style=3D=\r\n&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =\r\n&quot;&gt;=A0is rare that disparate systems have common domain or object models.&lt;/d=\r\niv&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; marg=\r\nin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=\r\n=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0p=\r\nx; &quot;&gt;It doesn&#39;t matter if the user is a machine or a human. If the model we=\r\n&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px;=\r\n margin-left: 0px; &quot;&gt;use to expose the resources is different from the doma=\r\nin model,&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bot=\r\ntom: 0px; margin-left: 0px; &quot;&gt;otherwise the programmer have to write especi=\r\nalized code to do the&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px=\r\n; margin-bottom: 0px; margin-left: 0px; &quot;&gt;mapping. It&#39;s the same issue with=\r\n ORM, this kind of impedance mismatch&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; m=\r\nargin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;always requires m=\r\nore work.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/d=\r\niv&gt;&lt;div&gt;Having to &quot;specialized code to do the mapping&quot; is exactly what this=\r\n is about. =A0If you don&#39;t, you&#39;re doomed because you&#39;re forcing everyone t=\r\no buy into your view of the world. =A0In REST, there are many views of the =\r\nworld (representations), but none of them are necessarily the state of the =\r\nworld (the resource).&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/di=\r\nv&gt;&lt;div&gt;Coupling at the representation level is the weakest, and therefore t=\r\nhe most flexible way to interface communicating systems.&lt;/div&gt;&lt;br&gt;&lt;blockquo=\r\nte type=3D&quot;cite&quot; class=3D&quot;&quot;&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0p=\r\nx; margin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt; &lt;br=\r\n&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px=\r\n; margin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0The better approach in that sc=\r\nenario is to design a data representation&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0p=\r\nx; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0format tha=\r\nt is better suited to the integration and transmission of&lt;/div&gt;&lt;div style=\r\n=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0p=\r\nx; &quot;&gt;=A0information, rather than cater to internal implementation models on=\r\n both&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom:=\r\n 0px; margin-left: 0px; &quot;&gt;=A0sides.&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; mar=\r\ngin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0=\r\npx; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt; &lt;br&gt;&lt;blockquote type=\r\n=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: =\r\n0px; margin-left: 0px; &quot;&gt;As we can use URIs to identify objects we can save=\r\n those in other&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; marg=\r\nin-bottom: 0px; margin-left: 0px; &quot;&gt;systems, so we are planning to use URIs=\r\n for every inter application&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-rig=\r\nht: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;references, which lends it=\r\nself to very easy integration.&lt;/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-=\r\ntop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-heig=\r\nht: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; mar=\r\ngin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0I beg to differ.=A0 Common/consiste=\r\nnt URI&#39;s are a help, but a properly designed&lt;/div&gt;&lt;div style=3D&quot;margin-top:=\r\n 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0data re=\r\npresentation, with concomittent semantic definitions, independent of&lt;/div&gt;&lt;=\r\ndiv style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin=\r\n-left: 0px; &quot;&gt;=A0back end domain/object models is what makes integration ea=\r\nsier, though even&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; ma=\r\nrgin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0at the best of times, integration =\r\nis still hard.&lt;/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-top: 0px; margin=\r\n-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px;=\r\n margin-left: 0px; &quot;&gt;Instead of sending &lt;customer id=3D&#39;XXX&#39;/&gt; we res=\r\npond with &lt;customer&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0p=\r\nx; margin-bottom: 0px; margin-left: 0px; &quot;&gt;ref=3D&#39;/customers/XXX&#39;/&gt; whic=\r\nh is the REST approach. It&#39;s easier to have&lt;/div&gt;&lt;div style=3D&quot;margin-top: =\r\n0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;integration=\r\n if we know that every resource is sent with its&lt;/div&gt;&lt;div style=3D&quot;margin-=\r\ntop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;corres=\r\nponding URI.&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-=\r\nbottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt; &lt;br&gt;&lt;blockquo=\r\nte type=3D&quot;cite&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div style=3D&quot;margin-top: 0px; m=\r\nargin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;Also if the&lt;/div&gt;=\r\n&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margi=\r\nn-left: 0px; &quot;&gt;only interface to your app is via REST, everything can be an=\r\n WS&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0=\r\npx; margin-left: 0px; &quot;&gt;without additional effort.&lt;/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;=\r\ndiv style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin=\r\n-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; ma=\r\nrgin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;=A0What you&#39;re doi=\r\nng isn&#39;t REST for the most part.=A0 It&#39;s using HTTP as a&lt;/div&gt;&lt;div style=3D=\r\n&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =\r\n&quot;&gt;=A0transport mechanism for RPC and inter-object distributed communication=\r\ns.&lt;/div&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px;=\r\n margin-bottom: 0px; margin-left: 0px; min-height: 14px; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div s=\r\ntyle=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left=\r\n: 0px; &quot;&gt;Why do you think so? If I have all my operations working on resour=\r\nces&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0=\r\npx; margin-left: 0px; &quot;&gt;and I&#39;m able to issue a DELETE /orders/XXX, it can =\r\nwork if the client&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; m=\r\nargin-bottom: 0px; margin-left: 0px; &quot;&gt;is a browser or another app. The who=\r\nle idea behind RESTful Web&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right=\r\n: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;Services is about this. My a=\r\npps are resource oriented, the only usage&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0p=\r\nx; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;of POST in th=\r\ne app I&#39;m working right now is when I want to create new&lt;/div&gt;&lt;div style=3D=\r\n&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =\r\n&quot;&gt;resources (i.e. POST /resources). To my app it doesn&#39;t matter if the&lt;/div=\r\n&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; marg=\r\nin-left: 0px; &quot;&gt;request comes from a browser or another machine, that&#39;s why=\r\n I say that&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-b=\r\nottom: 0px; margin-left: 0px; &quot;&gt;I have no effort providing WS for everythin=\r\ng.&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div=\r\n&gt;Hmm, that was not the impression I got from the /articles/1/publish exampl=\r\ne given above. =A0Maybe this is a case of vehement agreement?&lt;/div&gt;&lt;div&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt; &lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse:=\r\n separate; border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Helve=\r\ntica; font-size: 12px; font-style: normal; font-variant: normal; font-weigh=\r\nt: normal; letter-spacing: normal; line-height: normal; text-align: auto; -=\r\nkhtml-text-decorations-in-effect: none; text-indent: 0px; -apple-text-size-=\r\nadjust: auto; text-transform: none; orphans: 2; white-space: normal; widows=\r\n: 2; word-spacing: 0px; &quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-=\r\ncollapse: separate; border-spacing: 0px 0px; color: rgb(0, 0, 0); font-fami=\r\nly: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; f=\r\nont-weight: normal; letter-spacing: normal; line-height: normal; text-align=\r\n: auto; -khtml-text-decorations-in-effect: none; text-indent: 0px; -apple-t=\r\next-size-adjust: auto; text-transform: none; orphans: 2; white-space: norma=\r\nl; widows: 2; word-spacing: 0px; &quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;border-collapse: separate; border-spacing: 0px 0px; color: rgb(0, 0, 0)=\r\n; font-family: Helvetica; font-size: 12px; font-style: normal; font-variant=\r\n: normal; font-weight: normal; letter-spacing: normal; line-height: normal;=\r\n text-align: auto; -khtml-text-decorations-in-effect: none; text-indent: 0p=\r\nx; -apple-text-size-adjust: auto; text-transform: none; orphans: 2; white-s=\r\npace: normal; widows: 2; word-spacing: 0px; &quot;&gt;&lt;div style=3D&quot;margin-top: 0px=\r\n; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;- Steve&lt;/div&gt;&lt;=\r\ndiv style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin=\r\n-left: 0px; &quot;&gt;&lt;br class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div style=3D&quot;mar=\r\ngin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;--=\r\n------------&lt;/div&gt;&lt;div style=3D&quot;margin-top: 0px; margin-right: 0px; margin-=\r\nbottom: 0px; margin-left: 0px; &quot;&gt;Steve G. Bjorg&lt;/div&gt;&lt;div style=3D&quot;margin-t=\r\nop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; &quot;&gt;&lt;a href=\r\n=3D&quot;http://wiki.mindtouch.com&quot;&gt;http://wiki.mindtouch.com&lt;/a&gt;&lt;/div&gt;&lt;div styl=\r\ne=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0=\r\npx; &quot;&gt;&lt;a href=3D&quot;http://wiki.opengarden.org&quot;&gt;http://wiki.opengarden.org&lt;/a&gt;=\r\n&lt;/div&gt;&lt;br class=3D&quot;Apple-interchange-newline&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;/div&gt;&lt;=\r\nbr&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail-45--526549167--\r\n\n"}}