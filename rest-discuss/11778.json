{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":177648456,"authorName":"Sanjiva Weerawarana","from":"Sanjiva Weerawarana &lt;sanjiva@...&gt;","profile":"sanjivaw","replyTo":"SENDER","senderId":"1Z8mLEf37LAGKXFdL9CHQF5xHcHmm1kgTMBUObtnqy_1IavWJJmP_RXxR6sUebCZ4UC23554Ngca-xyQg_IjrG11CSJAE3nV-OOlKYfQG1Dwlg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] MIME properties instead +","postDate":"1229075136","msgId":11778,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5NDIzMkMwLjgwOTA2MDdAb3BlbnNvdXJjZS5saz4=","inReplyToHeader":"PDQ5NDE2MUM2LjQwNTAzQHJlZGhhdC5jb20+","referencesHeader":"PDQ5NDEyODcwLjUwMjAzMDVAcmVkaGF0LmNvbT4gPDE1QjU4NkI1LTE5RTQtNDg3MS05MDY3LTg4ODgzOTAwQTYyNEBpbm5vcS5jb20+IDw0OTQxNjFDNi40MDUwM0ByZWRoYXQuY29tPg=="},"prevInTopic":11777,"nextInTopic":11779,"prevInTime":11777,"nextInTime":11779,"topicId":11734,"numMessagesInTopic":119,"msgSnippet":"Bill, the reason for the RDDL document is because often a schema is simply not enough info. The schema is simply syntactic info - it doesn t tell you even","rawEmail":"Return-Path: &lt;sanjiva@...&gt;\r\nX-Sender: sanjiva@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88851 invoked from network); 12 Dec 2008 09:45:44 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m46.grp.scd.yahoo.com with QMQP; 12 Dec 2008 09:45:44 -0000\r\nX-Received: from unknown (HELO ti-out-0910.google.com) (209.85.142.188)\n  by mta18.grp.scd.yahoo.com with SMTP; 12 Dec 2008 09:45:44 -0000\r\nX-Received: by ti-out-0910.google.com with SMTP id a20so893829tia.0\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 12 Dec 2008 01:45:43 -0800 (PST)\r\nX-Received: by 10.110.109.12 with SMTP id h12mr5071785tic.56.1229075142975;\n        Fri, 12 Dec 2008 01:45:42 -0800 (PST)\r\nReturn-Path: &lt;sanjiva@...&gt;\r\nX-Received: from ?10.100.1.235? ([123.231.64.242])\n        by mx.google.com with ESMTPS id 14sm113273tim.30.2008.12.12.01.45.39\n        (version=SSLv3 cipher=RC4-MD5);\n        Fri, 12 Dec 2008 01:45:41 -0800 (PST)\r\nMessage-ID: &lt;494232C0.8090607@...&gt;\r\nDate: Fri, 12 Dec 2008 15:15:36 +0530\r\nUser-Agent: Thunderbird 2.0.0.14 (X11/20080505)\r\nMIME-Version: 1.0\r\nTo: Bill Burke &lt;bburke@...&gt;\r\nCc: Stefan Tilkov &lt;stefan.tilkov@...&gt;, \n REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;49412870.5020305@...&gt; &lt;15B586B5-19E4-4871-9067-88883900A624@...&gt; &lt;494161C6.40503@...&gt;\r\nIn-Reply-To: &lt;494161C6.40503@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Sanjiva Weerawarana &lt;sanjiva@...&gt;\r\nSubject: Re: [rest-discuss] MIME properties instead +\r\nX-Yahoo-Group-Post: member; u=177648456; y=IeQMhAvuXKremMFQR50XdNoO0WlCU6clga2KXaCf_ouFqxc\r\nX-Yahoo-Profile: sanjivaw\r\n\r\nBill, the reason for the RDDL document is because often a schema is simply \nnot enough info. The schema is simply syntactic info - it doesn&#39;t tell you \neven whether a value of type anyURI is a link or just a URI string for you \nto keep (think HTAEOS). So you need more than XSD .. RDDL gives a nice \nstandard way to put any number of stuff into a single doc.\n\nThe theory that REST doesn&#39;t need new media type is simply not practical. \nIf you really want to use HTTP RESTfully, then you have to use media types \nto fully describe the content that&#39;s flowing. Tieing one hand behind the \nback and saying &quot;use one of the pre-registered ones&quot; is simply silly.\n\nTrying to hide behind application/xml doesn&#39;t cut it either IMO because of \nthe first paragraph I wrote above.\n\nBTW for the XML case we could actually special case and have another media \ntype that knows its XML without having to do a GET on the RDDL. That way \ndefault rendering can occur even without having special knowledge of the \nXML itself.\n\nOf course today&#39;s browsers can&#39;t deal with this - but that&#39;s true about \nany new media type! The idea we had was that we&#39;d write plugins for \ntoday&#39;s browsers to make them support this concept naturally .. so prior \nto rendering it&#39;d GET the RDDL and see how to render it using some built \nin thing if possible. (One of the natures we were going to suggest is that \nof &quot;parent type&quot; or super type .. again providing fallback behavior.)\n\nSanjiva.\n\nBill Burke wrote:\n&gt; \n&gt; Stefan Tilkov wrote:\n&gt;&gt; application/data-format;uri=http://mediatypes.example.com/foo/bar\n&gt;&gt;\n&gt; \n&gt; I commented this on your blog when you wrote it.  I didn&#39;t like it \n&gt; because again, a browser wouldn&#39;t know how to render it.  Also, you as a \n&gt; programmer don&#39;t know its XML until you follow the link.\n&gt; \n&gt;&gt; I think the concept could even be extended to allow for querying of  \n&gt;&gt; supported media types: You could just do a GET on the resource with an  \n&gt;&gt; accept header of application/data-format and get back the link to the  \n&gt;&gt; RDDL (if there is any).\n&gt;&gt;\n&gt; \n&gt; For XML a RDDL doesn&#39;t make sense.  We already have XML Schema.  With \n&gt; formats like Badger you could say XML schema is good enough for JSON too.\n&gt; \n&gt; I do like the idea of asking the server for what data formats it \n&gt; supports though.  I wish the OPTIONS method of HTTP provided this \n&gt; information.  For example:\n&gt; \n&gt; OPTIONS /foo/bar\n&gt; \n&gt; would return a response of\n&gt; \n&gt; HTTP/1.1 200 OK\n&gt; Accept: application/xml, application/json, text/plain\n&gt; Accept-Language: en, es, fr\n&gt; Allow: GET, POST, HEAD\n&gt; \n&gt; \n&gt; Could something like this be done?  Or is this overloading OPTIONS too \n&gt; much.  The specification really doesn&#39;t say exactly what OPTIONS \n&gt; returns, but what I&#39;m proposing does seem to fall in the definition of \n&gt; the method.\n&gt; \n&gt; Bill\n&gt; \n\n-- \nSanjiva Weerawarana, Ph.D.\nFounder & Director; Lanka Software Foundation; http://www.opensource.lk/\nFounder, Chairman & CEO; WSO2, Inc.; http://www.wso2.com/\nMember; Apache Software Foundation; http://www.apache.org/\nVisiting Lecturer; University of Moratuwa; http://www.cse.mrt.ac.lk/\n\nBlog: http://sanjiva.weerawarana.org/\n\n"}}