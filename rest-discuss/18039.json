{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"FtPk9qzPaQmD8eKthYdPCocrzswre7MqRB6u9jT0aGrKAAR4yWi7z2_NNh6ES6meV7icIJZJxeSRKop5Bva0zhSfL7_xp9c_mz0ldyQbvw","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Re: Rails 3.2 and PATCH","postDate":"1324041351","msgId":18039,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTExMjE2MDYxNTUxLjQxYjljMGUxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDQ5Q0QxRjQ3LUQxNkEtNDdCOS05NzczLUQzMkQ5OTIyMzY3NkBub3Jkc2MuY29tPg==","referencesHeader":"PEI2M0JCMzA3LTk3MDYtNENDRS04RDFDLTc3MjM4QTdBMjUxOUBub3Jkc2MuY29tPgk8amNkamE2K29zNjJAZUdyb3Vwcy5jb20+CTwzREREMEJFNjU1ODY5RDRFQTUwNjY1MkIzODAzQUVGNkMwM0JFNDk0QFBSSVNNLmNhZmZlaW5lLWl0Lm5ldD4JPENBTnFpWkpZcDQtRj1GRnRQUjdmbzlQdjNCdDFfOURfSC1ES3Y0Z1hqZUdnbUJiOFQtQUBtYWlsLmdtYWlsLmNvbT4JPDdFODIyNDYxLTM5MzItNEYxMS1BODE4LTgzM0RGRUJBMTgxMEBzZXJpYWxzZWIuY29tPgk8NDlDRDFGNDctRDE2QS00N0I5LTk3NzMtRDMyRDk5MjIzNjc2QG5vcmRzYy5jb20+"},"prevInTopic":18038,"nextInTopic":18040,"prevInTime":18038,"nextInTime":18040,"topicId":18011,"numMessagesInTopic":86,"msgSnippet":"... +1 Dumbing down PUT would leave no method in the protocol with discrete creation/replacement semantics.  Meaning we d have to invent another method with","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 80191 invoked from network); 16 Dec 2011 13:16:11 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m7.grp.sp2.yahoo.com with QMQP; 16 Dec 2011 13:16:11 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta5.grp.sp2.yahoo.com with SMTP; 16 Dec 2011 13:16:10 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id C9B9050A64;\n\tFri, 16 Dec 2011 08:16:08 -0500 (EST)\r\nDate: Fri, 16 Dec 2011 06:15:51 -0700\r\nTo: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nCc: Sebastien Lambla &lt;seb@...&gt;, Mike Kelly &lt;mike@...&gt;,\n Jakob Strauch &lt;jakob.strauch@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20111216061551.41b9c0e1.eric@...&gt;\r\nIn-Reply-To: &lt;49CD1F47-D16A-47B9-9773-D32D99223676@...&gt;\r\nReferences: &lt;B63BB307-9706-4CCE-8D1C-77238A7A2519@...&gt;\n\t&lt;jcdja6+os62@...&gt;\n\t&lt;3DDD0BE655869D4EA506652B3803AEF6C03BE494@...-it.net&gt;\n\t&lt;CANqiZJYp4-F=FFtPR7fo9Pv3Bt1_9D_H-DKv4gXjeGgmBb8T-A@...&gt;\n\t&lt;7E822461-3932-4F11-A818-833DFEBA1810@...&gt;\n\t&lt;49CD1F47-D16A-47B9-9773-D32D99223676@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Rails 3.2 and PATCH\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJan Algermissen wrote:\n&gt; \n&gt; The thing really is that there is no problem to be fixed.\n&gt; \n\n+1\n\nDumbing down PUT would leave no method in the protocol with discrete\ncreation/replacement semantics.  Meaning we&#39;d have to invent another\nmethod with semantics identical to what PUT *used* to mean.  From the\nthesis:\n\n&quot;REST constrains messages between components to be self-descriptive in\norder to support intermediate processing of interactions.&quot;\n\n&quot;HTTP is designed to extend the generic connector interface across a\nnetwork connection.&quot;\n\nHmmm, generic interface.  Meaning we have universal semantics like\n&#39;create&#39;, &#39;update&#39;, and &#39;patch&#39; which need mapping to protocol methods.\nCreate and update may be considered to be the same by virtue of their\nidempotency, but patch in the generic sense is not idempotent so it\nmust need another mapping; thus, PUT and PATCH have always been &quot;in\nHTTP&quot; (according to its creators/editors).\n\n&quot;What makes HTTP significantly different from RPC is that the requests\nare directed to resources using a generic interface with standard\nsemantics that can be interpreted by intermediaries almost as well as\nby the machines that originate services.&quot;\n\nSurely that can&#39;t happen when methods are overloaded with multiple\ndiscrete semantics, i.e. update != patch.  How is it self-descriptive,\nmeaning how is it visible to intermediaries, when PUT is being used as\nupdate vs. when PUT is being used as patch?\n\nSeems the very idea defeats the entire purpose of REST as a style, and\nHTTP as a protocol allowing implementation of systems following that\nstyle (vs. being guided by the mob rule of ignorant implementations).\n\nWhen the semantics of an interaction aren&#39;t standard and can&#39;t be\nmodeled to be standard, POST is used.  That isn&#39;t the case here, so to\nbe RESTful, Rails should model the interaction correctly (by which I\nmean universally) using PATCH and constrain PUT to creation/replacement\n(as per HTTP), for the benefit of generic intermediaries.\n\n&gt; \n&gt; What is the problem of just using POST for the partial update in the\n&gt; first place? This is what POST is for.\n&gt; \n\nOr, if for some reason PATCH isn&#39;t used, what&#39;s the problem with minting\na URI for the sub-resource being updated and using PUT?  Since this is\neasily done, I see no basis for eliminating self-descriptiveness from\nHTTP by borking PUT.\n\nMedia types can&#39;t change the semantics of methods, but they&#39;re free to\ndefine their patching semantics when used as a delta for an appropriate\nmethod like PATCH.  That way, intermediaries know when that media type\nis being used as replace vs. when that media type is being used as a\ndelta, by definition of the protocol (visibility).\n\nSince this is easily done, I see no basis for allowing media types to\ninvisibly change the semantics of PUT.  Each intermediary participating\nin such conversations would need to be application-aware, precluding the\ngeneric intermediaries REST and HTTP explicitly cater to.\n\nWhich is the problem with pointing to Rails as the basis for changing\nHTTP; in the name of REST (!) it solves a problem which has no basis\nin reality, by violating one of the four (core) uniform interface\nconstraints -- self-descriptive messaging.\n\n-Eric\n\n"}}