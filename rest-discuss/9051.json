{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"&#39;A. Pagaltzis&#39;","from":"&quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"Y5ez1NsoW84L6mG6_lSC907EILdwTvxqzY5UhTeM3A6RLGD3BEaA8cUO9inyVnxwYGJD7S6IWVs5QC3tOsQ3Rr45QA_BodqwNmo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: A humble terminological proposal","postDate":"1181941831","msgId":9051,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcwNjE1MjExMDMxLkdJMzM2MUBrbGFuZ3JhdW0+","inReplyToHeader":"PDAxNmMwMWM3YWY3ZCRmZDdhYmE0MCQyMTAyZmVhOUBHdWlkZXMubG9jYWw+","referencesHeader":"PDIwMDcwNjA3MDQyOTIyLkdBMjExNzNAa2xhbmdyYXVtPiA8MDA3MzAxYzdhOGM2JDI3YmMyMGEwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDQ2NjdENzdCLjUwOTA4MDlAaGFja2NyYWZ0Lm5ldD4gPDAxMmIwMWM3YWFkNiQ1MzFmZTE3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+IDwyMDA3MDYxNTA2MjM0MC5HQzMzNjFAa2xhbmdyYXVtPiA8MDE2YzAxYzdhZjdkJGZkN2FiYTQwJDIxMDJmZWE5QEd1aWRlcy5sb2NhbD4="},"prevInTopic":9049,"nextInTopic":9053,"prevInTime":9050,"nextInTime":9052,"topicId":8859,"numMessagesInTopic":41,"msgSnippet":"... You mean you assume that Jon doesn’t know what REST means and doesn’t mean? ... Uh, nowhere did I admit that it needs to be constructed. The client","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 19359 invoked from network); 15 Jun 2007 21:10:56 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m49.grp.scd.yahoo.com with QMQP; 15 Jun 2007 21:10:56 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta8.grp.scd.yahoo.com with SMTP; 15 Jun 2007 21:10:55 -0000\r\nReceived: (qmail invoked by alias); 15 Jun 2007 21:10:32 -0000\r\nReceived: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp020) with SMTP; 15 Jun 2007 23:10:32 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX1+wCdMLxzqwDfqYzVEo87VGJ55FvzocOstE1y74Xh\n\tTy/8eZPZTvPAnH\r\nDate: Fri, 15 Jun 2007 23:10:31 +0200\r\nTo: &#39;rest-discuss&#39; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-ID: &lt;20070615211031.GI3361@klangraum&gt;\r\nMail-Followup-To: &#39;rest-discuss&#39; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20070607042922.GA21173@klangraum&gt; &lt;007301c7a8c6$27bc20a0$0702a8c0@...&gt; &lt;4667D77B.5090809@...&gt; &lt;012b01c7aad6$531fe170$0702a8c0@...&gt; &lt;20070615062340.GC3361@klangraum&gt; &lt;016c01c7af7d$fd7aba40$2102fea9@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;016c01c7af7d$fd7aba40$2102fea9@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;\r\nSubject: Re: A humble terminological proposal\r\nX-Yahoo-Group-Post: member; u=147780944; y=z5efs2s9FCmSawvDkor9Z-8uPDm0bFBPQ7ew5IGIfaqK\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Mike Schinkel &lt;mikeschinkel@...&gt; [2007-06-15 20:55]:\n&gt; A. Pagaltzis wrote:\n&gt; &gt; That&#39;s very simple: if the URI is constructed based on\n&gt; &gt; hypermedia, then the application is RESTful. If not, it&#39;s\n&gt; &gt; not.\n&gt; \n&gt; But it is a point that is not even addressed by many when\n&gt; discussing with people who are learning REST, and those newly\n&gt; christened RESTians go forth and preach the dogma that URIs\n&gt; cannot be constructed, period. My &quot;tiresome&quot; comments are meant\n&gt; to shine a light on the issue to discourage even more furture\n&gt; cargo-cultists.\n\nYou mean you assume that Jon doesn’t know what REST means and\ndoesn’t mean?\n\n&gt; &gt; &gt; Heh. Any and every REST system will fail that test. After\n&gt; &gt; &gt; all, how do you change the entry point URL? &#39;-)\n&gt; &gt; \n&gt; &gt; Not by changing the code, hopefully. \n&gt; &gt; \n&gt; &gt; In fact, you could make that URI a link in a resource you\n&gt; &gt; control, in which case the REST client would in fact not need\n&gt; &gt; to change *at all*.\n&gt; &gt; \n&gt; &gt; See? We could split hairs about the exceptional case of the\n&gt; &gt; entry point all day long. :-)\n&gt; &gt; \n&gt; &gt; What matters is you know what Jon meant; and you do.\n&gt; \n&gt; That&#39;s a marginal case on the open Internet. Publishing an API\n&gt; for others to consume ensures that this will almost certainly\n&gt; not be the case. My bringing it up was NOT splitting hairs, it\n&gt; was to make the point that REST is not pure as physics is pure,\n&gt; and that there are edge case problems with the hypermedia\n&gt; constraint. As every REST system could theoretically be\n&gt; composed to make a larger REST system, the once published entry\n&gt; point now becomes verboten to be constructed.\n\nUh, nowhere did I admit that it needs to be constructed. The\nclient needs to receive *some* entry point URI out of band. This\nis called a “bookmark.” Why would the client ever *construct*\none?\n\nSo since your premise looks false to me…\n\n&gt; And the converse is also true, that many REST services could be\n&gt; decomposed into smaller independent services. When the\n&gt; decomposition occurs, what is the entry point? Is it a\n&gt; constructed URL, or did you have to follow hypermedia from the\n&gt; larger service to get to it? And if that larger service is then\n&gt; composed with yet more services, where are the valid entry\n&gt; points that don&#39;t require hypermedia? Thus I see a problem with\n&gt; the hypermedia constraint because it does not scale upwards or\n&gt; downwards.\n\n… then necessarily I must consider your conclusion false too.\n\n&gt; While I see it&#39;s theoretical benefit, I see problems in its\n&gt; real world use as just described and that&#39;s why I think it is\n&gt; so important to actively encourage the incorporation of URL\n&gt; composition into the mix at all levels. By encouraging URL\n&gt; construction using templates, REST services will be more\n&gt; easiler able to scale albeit there will still be edge problems\n&gt; but less so.\n\nNo, they will just be easier to create, but harder to maintain,\nbecause they’ll be stronger coupled – unless the URI template\ncomes from hypermedia. Additionally, non-hypermedia based URI\nconstruction has no scalibility effect in the small and a second-\norder negative one in the large.\n\n&gt; Services would compose URLs based on templates, but where the\n&gt; template comes from is the edge case yet that can easily be\n&gt; provided by the larger service when services are composed. As\n&gt; is, services faithfully the following hypermedia constraint are\n&gt; ironically brittle with respect any changes involving\n&gt; composition or decomposition.\n\nI really can’t follow that conclusion.\n\n&gt; What&#39;s more, assuming an arbitrary Internet-published\n&gt; REST-based API, it is much easier to program a direct resource\n&gt; retrieval using URI composition than it is to program a\n&gt; hypermedia-following resource retrieval, partly because there\n&gt; are absolutely no standards for such discovery and retrieval\n&gt; leaving the hapless developer or entrepreneur to code it\n&gt; themselves.\n\nThat’s why AtomPP is such a huge deal.\n\n&gt; For a great developers it is trivial, but for many smaller\n&gt; businesses or entrepreneurs w/o hotshot developers on staff it\n&gt; is not. So a company publishing a web API can either tell it&#39;s\n&gt; potential users to follow the pure REST hypermedia model, or do\n&gt; URI construction. And if they do the former, they are likely to\n&gt; get a lot more people using it. Which would you chose? If you\n&gt; say hypermedia, I can tell we are discussing a hypothetical\n&gt; question and not one on which your livelihood depends.\n\nSeeing as I’m primarily a Perl hacker, I’ll just point to\nWWW::Mechanize for this matter. Proof’s in eating the pudding.\nDoing hypermedia is very easy given tooling that abstracts the\nrote work. I’m basing this on actual experience, not hypothesis,\nmuch as you’d like to paint the REST proponents with the ivory\ntower brush.\n\n&gt; Finally, for an open API published on the web, I am almost\n&gt; willing to argue that textually publishing the URL format and\n&gt; encouraging people to do URI construction w/o hypermedia is\n&gt; okay assuming the company is willing to maintain those URLs.\n&gt; After all, I can&#39;t see any reason why Amazon couldn&#39;t commit\n&gt; itself to maintain its services at http://services.amazon.com/\n&gt; where to get info on one of the items they sell you would just\n&gt; append their &quot;ASIN&quot; to the end of their &quot;items&quot; URL\n&gt; http://services.amazon.com/items/1234567890/\n\nThat’s fine for Amazon. It’s not so fine at the other end of the\nwire, because then the other end of the wire is an Amazon client\nas opposed to a web shop client. Of course Amazon has no\nincentive to care about that.\n\n&gt; There are many things in life where companies need to put a\n&gt; stake in the ground and then maintain that stake, i.e. car\n&gt; makers have to maintain spare parts for their cars for many\n&gt; years, I see no reason why it should be absolutely forbidden\n&gt; for companies to publish REST apis for the open Internet that\n&gt; do not require hypermedia to discover and parse.\n\nImagine if every car company had their own designs for screws,\nnuts, bolts, lightbulbs, batteries, tires, etc. complete with\ncar-maker-specific screwdrivers, rechargers, tire inflators etc.,\nwith a stated promise that production of these parts would be\nmaintained indefinitely.\n\n&gt; The hypermedia constraint is simply the web&#39;s example of the\n&gt; more general abstraction and indirection pattern used to\n&gt; improve maintainability of systems throughout software\n&gt; development. But as experience has shown us, too much\n&gt; abstraction and too much indirection make for too much\n&gt; complexity, and that pill can at times be worse than the\n&gt; ailment it attempts to cure.\n\nSmalltalk is based on an indirection at the core of the language\nsemantics level, and practice has since shown that extremely\nlate-bound messaging communication leads to much more flexible\nand resilient systems than are possible with static early\nbinding.\n\n&gt; I know this as I have often tried to over-generalize a system\n&gt; only to find I&#39;d made it too complex to work with.\n\nAnd you found no cases where too little indirection made things\ntoo hard? Beware of confirmation bias.\n\n&gt; Sometimes it is better to simply hardcode something than to\n&gt; make it too complex. And I&#39;d argue that plublished open apis on\n&gt; the Internet could well be a valid place where URLs could be\n&gt; reasonably hardcoded.\n\nIf that’s the case, then AtomPP, which is machine-readable\nhypermedia writ large, will crash and burn.\n\nI’ll let history be the judge of that, but I think I can already\ntell what history will have had to say about this one.\n\n&gt; My guess is that you deal with internal systems a lot more than\n&gt; you deal with the open internet. Maybe that&#39;s why your bias\n&gt; differs from mine.\n\nFunny you should say that, as the SOAP/WS-* philosophy with its\nearly binding/tight coupling/code gen mindset comes from internal\nsystems rather than the open web.\n\nAnd no, I don’t deal much at all with internal systems.\n\nDon’t you think I’d believe much more in tools if that were the\ncase?\n\n&gt; &gt; But I think this matter will straighten itself out over time\n&gt; &gt; as more people absorb the lessons and apply it in practice,\n&gt; &gt; coming away with examples from experience.\n&gt; &gt; \n&gt; &gt; It&#39;s just the natural process of adoption.\n&gt; \n&gt; ...and as people like me, and you, have these *tiresome*\n&gt; debates.\n\nWhat I found tiresome is not the debate but rather your desire to\nbe be controverted, leading you to incessantly make up sentiments\nlike “begrudging” out of thin air. I’m not here for an interest\nin claims about each other’s supposed belief systems.\n\nAs for my own bias, I’ll note that my lightbulb moment regarding\nhypermedia was just two weeks or so ago and I’m since realigning\nmy understanding of REST as a whole already.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}