{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"kLkbY4CP4smYDdPxdAvzzF-z8Bn1iU6QmLuBzeUAJoSHomHWmU9JEdgF0QtMy7bVYw9A5eECoyeZoEnpp_COWLOiiiodhsdoIlEkog","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: HATEOAS: JSON-based examples?","postDate":"1239842281","msgId":12432,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMDkwNDE1MTczOHExODE2NzdlN3hlYTA2OGFjYWExNzkzZjUyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ5RTY3MTg2LjQwNzA3MDFAcmVkaGF0LmNvbT4=","referencesHeader":"PDIwMDkwNDEyMDIzNi4wNzU1NS5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ5RTRBN0M1LjMwNDA0MDVAcmVkaGF0LmNvbT4gPDIwMDkwNDE0MTgwMy40MDgxNC5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ1QzU0QzE0LTgzQjgtNERBMC1BRENCLUEwQUVFNzYyNjYwOEBzdWJidS5vcmc+CSA8NTVjNjBlMzcwOTA0MTQxMDMwdDE1OTdhYjFmdWIyMzllNzVhMjc0MjE4ZDJAbWFpbC5nbWFpbC5jb20+CSA8NDlFNENDMUIuNDA2MDAwM0ByZWRoYXQuY29tPiA8NDlFNEUwNTAuODAwMDMwMEBteWthbmpvLmNvLnVrPgkgPDQ5RTY3MTg2LjQwNzA3MDFAcmVkaGF0LmNvbT4="},"prevInTopic":12431,"nextInTopic":12433,"prevInTime":12431,"nextInTime":12433,"topicId":12399,"numMessagesInTopic":66,"msgSnippet":"... I ve had a little bit of experience in this area (we have not made dramatic changes, but we have modified some things), and so far the following set of","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47943 invoked from network); 16 Apr 2009 00:38:19 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m1.grp.sp2.yahoo.com with QMQP; 16 Apr 2009 00:38:19 -0000\r\nX-Received: from unknown (HELO qw-out-1920.google.com) (74.125.92.149)\n  by mta3.grp.re1.yahoo.com with SMTP; 16 Apr 2009 00:38:19 -0000\r\nX-Received: by qw-out-1920.google.com with SMTP id 5so138377qwf.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 15 Apr 2009 17:38:02 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.74.20 with SMTP id s20mr194478vcj.36.1239842281935; Wed, \n\t15 Apr 2009 17:38:01 -0700 (PDT)\r\nIn-Reply-To: &lt;49E67186.4070701@...&gt;\r\nReferences: &lt;200904120236.07555.michael@...&gt;\n\t &lt;49E4A7C5.3040405@...&gt; &lt;200904141803.40814.michael@...&gt;\n\t &lt;45C54C14-83B8-4DA0-ADCB-A0AEE7626608@...&gt;\n\t &lt;55c60e370904141030t1597ab1fub239e75a274218d2@...&gt;\n\t &lt;49E4CC1B.4060003@...&gt; &lt;49E4E050.8000300@...&gt;\n\t &lt;49E67186.4070701@...&gt;\r\nDate: Wed, 15 Apr 2009 17:38:01 -0700\r\nMessage-ID: &lt;f8b39ace0904151738q181677e7xea068acaa1793f52@...&gt;\r\nTo: Bill Burke &lt;bburke@...&gt;\r\nCc: Mike Kelly &lt;mike@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Re: HATEOAS: JSON-based examples?\r\nX-Yahoo-Group-Post: member; u=352334505; y=2LqU8qBFI3gTv4zNYX2F9x1v5MtkuIK-dm94__oUxbrSr7JEBz6E27Vnhw\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\nOn Wed, Apr 15, 2009 at 4:45 PM, Bill Burke &lt;bburke@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Mike Kelly wrote:\n&gt;&gt; Bill Burke wrote:\n&gt;&gt;&gt; Solomon Duskis wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; IMHO, HATEOAS techniques and tooling are a key aspect of success for\n&gt;&gt;&gt;&gt; REST in internal apps.\n&gt;&gt;&gt;&gt; I respectfully disagree on the following point:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; For internal apps, IMO, there is less motivation to treat URIs as\n&gt;&gt;&gt;&gt; opaque as it is tempting to assume that clients know about URIs as\n&gt;&gt;&gt;&gt; well as all possible state transitions\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I&#39;m guessing that external APIs haven&#39;t delved into HATEOAS as deeply\n&gt;&gt;&gt;&gt; as they could have specifically because they have different problems\n&gt;&gt;&gt;&gt; that internal apps do.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; If anything, I would suggest that internal apps have a bigger need\n&gt;&gt;&gt;&gt; for opaque URIs and possible state transitions. Internal APIs tend\n&gt;&gt;&gt;&gt; to be more fine-grained and have a richer feature set than their\n&gt;&gt;&gt;&gt; external counterparts. Those fine-grained APIs are more prone to\n&gt;&gt;&gt;&gt; change over time. HATEOAS is meant help manage those kinds of changes .\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; I disagree. HATEOAS helps humans manage change pretty well on the\n&gt;&gt;&gt; web. I&#39;m very skeptical it can do the same for machine clients, for\n&gt;&gt;&gt; reasons stated in an earlier thread. Still, that doesn&#39;t mean its not\n&gt;&gt;&gt; useful. Its just not as useful for machine clients as it is for humans.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I know I stated this in an earlier thread, but combining links\n&gt;&gt;&gt; (HATEOAS), conneg, custom versioned media types, and XML schema is the\n&gt;&gt;&gt; most interesting for me. Then, you can have validated, guaranteed,\n&gt;&gt;&gt; versioned interactions with your services.\n&gt;&gt;&gt;\n&gt;&gt; Hi Bill,\n&gt;&gt;\n&gt;&gt; Are there benefits of using custom versioned media types instead of\n&gt;&gt; using a combination of standard media types and a custom version header?\n&gt;&gt;\n&gt;\n&gt; My thoughts are all theory, no practice but, IMO custom versioned media\n&gt; types are better because they follow an existing standard. Others have\n&gt; warned against the explosion of custom media types. I&#39;m not sure how\n&gt; you can avoid it if you want validation and to leverage conneg.\n\nI&#39;ve had a little bit of experience in this area (we have not made\ndramatic changes, but we have modified some things), and so far the\nfollowing set of rules has avoided the need to do any kind of\nversioning in my representations so far, but also avoided breaking old\nclients:\n\n* Clients MUST ignore fields in the representation that they don&#39;t understand\n  (i.e. that are not defined in whatever version of the spec the client is\n  programmed to expect).\n\n* Clients SHOULD indicate the version of the API specification they are\n  programmed to expect.  Because this has to happen on GET requests\n  too, there&#39;s no representation to include it in, so we use a custom HTTP\n  header -- sort of analogous to a User-Agent header that webapps\n  can use to customize their responses.  An alternative might be to use\n  a request parameter, or bake the version number into the service URI\n  or something like that.\n\n* Servers MUST respect the client&#39;s indication of version preference\n  if it matters.  Given the rules above, it&#39;s OK to include additional fields\n  added in some later version -- the client should just ignore them --\n  but it&#39;s not OK to remove a field that was required to be present\n  in the version of the spec that the client specifies.\n\n* Servers MAY assume that a client not describing their version preference\n  should get the latest and greatest version.\n\n* If the representation sent by a server includes links (per our HATEOAS\n  threads), the server MAY send different URIs depending on the version,\n  or MAY handle multiple versions at the same URI ... whatever it wants.\n\n&gt; Bill Burke\n\nCraig McClanahan\n\n"}}