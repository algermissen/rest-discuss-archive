{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":183752316,"authorName":"Jonathan Arkell","from":"Jonathan Arkell &lt;yahoo@...&gt;","profile":"jonnay23","replyTo":"SENDER","senderId":"jJCb9v0W9fSY8F3vUOD5z6vCcuak6kqdNes__1b0uz4BxE50jeXmbY-adK5c8geLTUNiS7YqgSVk2W5111oZdWSEzMUAoYY6OQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Personalization as Representation","postDate":"1143558220","msgId":5830,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0Mjk1MDRDLjYwMDA0MDBAam9ubmF5Lm5ldD4=","inReplyToHeader":"PDMwQkZGNTg4LTVEN0ItNDc0OS1BQ0MxLUE2RThDMzBBQTA0M0BhcnRpbWEuY29tPg==","referencesHeader":"PDQ0MTg2RERELjYwMTAzMDVAam9ubmF5Lm5ldD4gPDQ0MjE5NEU5LjgwMDA2MDlAdmVpY29uLmNvbT4gPDg3YWNiaW1ncTIuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMUE5RjguNTA3MDUwM0B2ZWljb24uY29tPiA8NDQyMUY1MzAuODAwMDgwMkBzZWFpcnRoLmNvbT4gPDg3NHExcWx6NGMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMjMzNkMuNTAwMDMwN0BzZWFpcnRoLmNvbT4gPDg3eTd6MWw2Y28uZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NzNlYzU5OWQwNjAzMjMwNjA4cDJhYmU1MTRjdWNiNDUxZGNkMjQ0NjcxZDhAbWFpbC5nbWFpbC5jb20+IDw4N3ZldTVreTB4LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDczZWM1OTlkMDYwMzIzMTM0M3M0MjNjYmM5Mm80NjhmMGNlZjZlN2UwNmE4QG1haWwuZ21haWwuY29tPiA8ODdwc2tjbHQ5MS5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw5RThGN0U5MC01M0NFLTRBRjEtOTI0RS00RURGMDI2RkVEQzRAYXJ0aW1hLmNvbT4gPDg3aXJxNGxnZWcuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8OTlBODdBNjgtNjU5Qy00MDUyLTkwNzQtM0Q2RDE5NzFGMUZDQGFydGltYS5jb20+IDw4N2Q1Z2NsYnNkLmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPEI0RUQ3ODMzLUIwNTMtNDBDMi04RTUwLTVFODc3MTg2MjYyOEBhcnRpbWEuY29tPiA8NDQyM0ZDMDMuODAwMDQwMkBtZXRhbGFiLnVuYy5lZHU+IDwxMjdFNzI3My0xM0NELTRCQkMtOTQ1Ri1DRDIyRTk4M0JGNEFAdG9waWNtYXBwaW5nLmNvbT4gPDQ0MjQwNDlBLjcwMzAzMDdAbWV0YWxhYi51bmMuZWR1PiA8M0Q2MDRBODQtMzAyQy00OTkxLTgxQTgtNzk2RTdCNkQxNDQ1QGFydGltYS5jb20+IDw0NDI1RDBEQy42MDMwNzA4QGpvbm5heS5uZXQ+IDwzMEJGRjU4OC01RDdCLTQ3NDktQUNDMS1BNkU4QzMwQUEwNDNAYXJ0aW1hLmNvbT4="},"prevInTopic":5829,"nextInTopic":5831,"prevInTime":5829,"nextInTime":5831,"topicId":5693,"numMessagesInTopic":89,"msgSnippet":"Hi Bill Sorry it has taken me so long to respond. Let me sketch out how I see this system working: User visits http://yoursite/ and wants to log on, they click","rawEmail":"Return-Path: &lt;yahoo@...&gt;\r\nX-Sender: yahoo@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 14844 invoked from network); 28 Mar 2006 15:04:59 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m22.grp.scd.yahoo.com with QMQP; 28 Mar 2006 15:04:59 -0000\r\nReceived: from unknown (HELO panda-ba.sanriowasteland.net) (142.179.114.225)\n  by mta7.grp.scd.yahoo.com with SMTP; 28 Mar 2006 15:04:54 -0000\r\nReceived: from [127.0.0.1] (panda-ba.sanriowasteland.net [142.179.114.225])\n\tby panda-ba.sanriowasteland.net (Postfix) with ESMTP id 0FF5B1A5902\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 28 Mar 2006 08:03:42 -0700 (MST)\r\nMessage-ID: &lt;4429504C.6000400@...&gt;\r\nDate: Tue, 28 Mar 2006 08:03:40 -0700\r\nUser-Agent: Thunderbird 1.5 (Windows/20051201)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nReferences: &lt;44186DDD.6010305@...&gt; &lt;442194E9.8000609@...&gt; &lt;87acbimgq2.fsf@...&gt; &lt;4421A9F8.5070503@...&gt; &lt;4421F530.8000802@...&gt; &lt;874q1qlz4c.fsf@...&gt; &lt;4422336C.5000307@...&gt; &lt;87y7z1l6co.fsf@...&gt; &lt;73ec599d0603230608p2abe514cucb451dcd244671d8@...&gt; &lt;87veu5ky0x.fsf@...&gt; &lt;73ec599d0603231343s423cbc92o468f0cef6e7e06a8@...&gt; &lt;87pskclt91.fsf@...&gt; &lt;9E8F7E90-53CE-4AF1-924E-4EDF026FEDC4@...&gt; &lt;87irq4lgeg.fsf@...&gt; &lt;99A87A68-659C-4052-9074-3D6D1971F1FC@...&gt; &lt;87d5gclbsd.fsf@...&gt; &lt;B4ED7833-B053-40C2-8E50-5E8771862628@...&gt; &lt;4423FC03.8000402@...&gt; &lt;127E7273-13CD-4BBC-945F-CD22E983BF4A@...&gt; &lt;4424049A.7030307@...&gt; &lt;3D604A84-302C-4991-81A8-796E7B6D1445@...&gt; &lt;4425D0DC.6030708@...&gt; &lt;30BFF588-5D7B-4749-ACC1-A6E8C30AA043@...&gt;\r\nIn-Reply-To: &lt;30BFF588-5D7B-4749-ACC1-A6E8C30AA043@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Jonathan Arkell &lt;yahoo@...&gt;\r\nSubject: Re: [rest-discuss] Personalization as Representation\r\nX-Yahoo-Group-Post: member; u=183752316; y=-CjEdfmi0jZIa6J9HQwylNXr9mbTybrfeu_SxMRh03yVofE\r\nX-Yahoo-Profile: jonnay23\r\n\r\nHi Bill\n\nSorry it has taken me so long to respond.\n\nLet me sketch out how I see this system working:\nUser visits http://yoursite/ and wants to log on, they click on the\n&quot;Start log on now&quot; button, which does a POST (or ideally a PUT) to\n/sessions/foo-realm-session-id (upon further reflection, storing the\nuser id in the session was a dumb idea.)\n\nOnce the foo-realm-session-id has been PUT, then the response can ask\nfor authentication based on the new realm.  Now the realm has a\ntime-stamp of creation, and any other pertinent details.\n\nThe user then continues to use your application (GET /someresouce, POST\n/someresource/foo, DELETE /beleted), all the while handing off the\nappropriate credentials, as well as the realm identifying this\nparticular session.\n\nWhen the user wants to log off, they just make the apropos request (POST\nor DELETE) to /sessions/foo-realm-session-id.\n\nOk, the more I talk about it, the more I have to wonder if this is all\njust horrible realm abuse.  At this point, why not just use HTTP auth\nand a cookie?  Hell, lets call the whole thing off and store the session\n in the URL (not even on the query string) ;)\n\nReally, I wonder if you can meet your needs with REST at all.  See, the\nclincher for me is the timing out of user logins, because you need to\nstore the state of the user somewhere on the server to know when to time\n them out.  Perhaps my method (storing the session as a resource) is\nRESTfully not REST :P ?  At least this way the client has some kind of\ncontrol over the session, and the session isn&#39;t interfering with the\ncachability.\n\nWhy avoid iframes?  Avoiding Javascript seems cut and dried, what are\nthe issues with Iframes?\n\nBill Venners wrote:\n&gt; I had to think about this idea for a bit, and am still not quite sure I\n&gt; understand it fully. One problem I believe I see is that it doesn&#39;t\n&gt; provide the server with a sure-fire way to recognize the client, so it\n&gt; won&#39;t always know for which realm to prompt authentication. I.e., if you\n&gt; use a different realm string for each session, then the server needs to\n&gt; know what realm string to prompt for in its 401 response on a request.\n&gt; Once authenticated, the client may preemptively send the Authorization\n&gt; header, but the realm is buried inside the digest-response, and anyway\n&gt; the client may not send it until getting a 401. But before the server\n&gt; sends the 401, it needs to know the realm. So really I think the realm\n&gt; needs to something the server can determine from the request URI.\n&gt; \n&gt; The other concern is that a URL like this:\n&gt; \n&gt; http://yoursite/sessions/SessionID\n&gt; \n&gt; seems to indicate I&#39;ve created state on the server for the auth session,\n&gt; which is something I&#39;d rather avoid. I would prefer the auth state to be\n&gt; on the client, so when a user creates an auth session, that state is on\n&gt; the client for the duration of the session, after which it gets cleared.\n&gt; On each request during the auth session, the auth state goes from client\n&gt; to the server. This my current best understanding of what REST says\n&gt; about authentication. (Even though you&#39;ve taken the innovative step of\n&gt; giving the session a URI on the server, it still feels to me like it&#39;s\n&gt; in the wrong place there on the server.)\n&gt; \n&gt; My understanding of why REST suggests we avoid session state (almost\n&gt; every web framework makes using session state easy), is that extra-URI\n&gt; state breaks caching and hinders scalability. There are good answers to\n&gt; scalability with session state too, such as cache coherence tools and\n&gt; several other techniques, but I really don&#39;t think it would be harder to\n&gt; build a RESTful HTTP app then a stateful one if you just keep REST in\n&gt; mind as you go.\n&gt; \n&gt; I know Roy complained about the use of cookies for session IDs in his\n&gt; dissertation. My guess is that his main concern was that in practice\n&gt; session cookies are used not just for auth, usually, but to point to\n&gt; session state on the server. The cookies I&#39;ve been considering using in\n&gt; our new architecture are really auth tokens. They will essentially\n&gt; contain the username and password hash encrypted with a password that\n&gt; all the servers will share for a half hour, after which they&#39;ll all\n&gt; forget it. So if you bring a server up cold, and it gets one of these\n&gt; cookies within the half-hour timeout, it can figure out who you are and\n&gt; authenticate you (with the caveat that the session cookie can be easily\n&gt; hijacked). In this approach once the server sends back this cookie, it\n&gt; really represents the authentication state sitting there in the client,\n&gt; and it gets sent up to the server with each request. The server can\n&gt; forget all about the authentication, so long as it remembers the\n&gt; half-hour passwords used to encrypt the cookies.\n&gt; \n&gt;&gt; As for sending out personalized content... what about an iframe?\n&gt;&gt; Enclose all personalizable content inside of an iframe, and make a\n&gt;&gt; secondary request for that personalized content.  This helps to avoid\n&gt;&gt; the Javascript issue (while opening up another can of iframe worms mind\n&gt;&gt; you).\n&gt;&gt;\n&gt; I don&#39;t think I want to go there. I don&#39;t want to go to JavaScript\n&gt; either, to assemble the personalized representation on the client. I see\n&gt; how that would reduce server load and bandwidth, but in exchange for\n&gt; that cost savings, I&#39;d have the expense of testing a lot more JavaScript\n&gt; in a lot more places. I expect I&#39;ll just send out personalized\n&gt; representations of resources, each with their own ETag.\n\n"}}