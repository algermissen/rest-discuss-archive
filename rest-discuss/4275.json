{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"OY56frhTJSVRuMjqjboKxB1uH5YxVFUr4zYdq6b6zETu_G8OkLmbwMORR7kMNGH5-Lb-F2guVRtKUGCOCkA0l794xmPMfWyiSw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Do not put actions in URIs","postDate":"1079548220","msgId":4275,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNzk1NDgyMjAuMTg0MDcuMzk4LmNhbWVsQHBob2VuaXg+","inReplyToHeader":"PEMxNzE3NDY4LTc4MkQtMTFEOC1CREUyLTAwMEE5NUIxOEQ1QUB2ZG0uY2M+","referencesHeader":"PEVGNTREOUFEMDlFNzMyNDU4MUQxRTlEMEM3MDgwMDFBMjAyNjIyQG1vZS5jcmQuY29tPgkgPDEwNzk0NTk4OTIuMTcxNDAuMTcwLmNhbWVsQHBob2VuaXg+CSA8QzE3MTc0NjgtNzgyRC0xMUQ4LUJERTItMDAwQTk1QjE4RDVBQHZkbS5jYz4="},"prevInTopic":4274,"nextInTopic":4276,"prevInTime":4274,"nextInTime":4276,"topicId":4263,"numMessagesInTopic":17,"msgSnippet":"... Well, it might be the same as a merge -- it s really up to what the client is doing, and what the nature of the state being put back is. The real question","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 65270 invoked from network); 17 Mar 2004 18:31:13 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m20.grp.scd.yahoo.com with QMQP; 17 Mar 2004 18:31:12 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.142.253)\n  by mta6.grp.scd.yahoo.com with SMTP; 17 Mar 2004 18:31:12 -0000\r\nReceived: (qmail 17440 invoked by uid 1000); 17 Mar 2004 13:30:20 -0500\r\nTo: Vincent D Murphy &lt;vdm@...&gt;, Jeffrey Winter &lt;jeffreywinter@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;C1717468-782D-11D8-BDE2-000A95B18D5A@...&gt;\r\nReferences: &lt;EF54D9AD09E7324581D1E9D0C708001A202622@...&gt;\n\t &lt;1079459892.17140.170.camel@phoenix&gt;\n\t &lt;C1717468-782D-11D8-BDE2-000A95B18D5A@...&gt;\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: 7bit\r\nOrganization: Asynchronous.org\r\nMessage-Id: &lt;1079548220.18407.398.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 \r\nDate: Wed, 17 Mar 2004 13:30:20 -0500\r\nX-eGroups-Remote-IP: 216.114.142.253\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nReply-To: jsled@...\r\nSubject: Re: [rest-discuss] Do not put actions in URIs\r\nX-Yahoo-Group-Post: member; u=93099516\r\nX-Yahoo-Profile: joshsled\r\n\r\nOn Wed, 2004-03-17 at 11:11, Vincent D Murphy wrote:\n\n&gt; PUT suggests replacing the state completely, which is not the\n&gt; same thing as a merge.\n\nWell, it might be the same as a merge -- it&#39;s really up to what the\nclient is doing, and what the nature of the state being put back is.\n\nThe real question is: which side [client or server] is responsible for\ndoing the merge?  A sufficiently complex client can understand the\napplication logic sufficiently to do the merge, but it might be\nextremely inefficient, as well as impractical, to put the logic there.\n\n&gt; POST means &quot;take this entity and just process it&quot;.  This sounds\n&gt; like a better fit to me.  The meaning of &#39;process&#39; in that sentence\n&gt; is part of the contract.  In fact, the more I think about it, the\n\nI don&#39;t think of POST as &quot;doStuff&quot;...  POST means &quot;create a new\nsubordinate resource&quot;.  In this case, the resource is a constrained\n&quot;change&quot;-schema message.  The resource being created is\n/account/1/change/1.\n\n\nAs Jeffry points out, this seems very RPC like, but I think some\ndifferences are there: we have a resource which has a sub-resource which\naccepts a defined set of states [change-requests].  Do the\nchange-requests directly map to procedures ... sure.  But are they\nconstrained in a useful way?  Yes.  Are they exposed as resources?  Yes.\n\nEverything ends up being procedural at some point; code needs to be\nrun.  The interface, however, should be very clear about:\n\na/ where those requests belong -- not in resource-identifiers, but in\nand _as_ the resource itself.\n\nb/ what the allowable set of requests are -- ideally through a standard\nand widely-accepted media-type.\n\nOn the web, those media-types are known and well-accepted.  In a\nnew/specific system, that&#39;s not always true ... but the other benefits\nwith respect to intermediaries [visibility, transformation, filtering,\n&c.] are still present.\n\n\nI don&#39;t see how you get entirely away from the client requesting \nspecific actions from the server, ever.  I do see how to make such\nrequests more message/resource-based, and how to leverage the nice\naspects of REST and HTTP along the way.\n\n\n&gt; more I think POST is *perfect* for a merge, as long as you can\n&gt; indicate to the server that a merge is what you want, and not\n&gt; anything else.  POST is very general.  But maybe I&#39;m getting ahead\n&gt; of myself and that is YAGNI.\n\nThe generality of POST is constrained by the actions as described in the\nmessage.  More importantly, the agreement of the allowable message-types\n[it&#39;s schema and semantics].\n\n&gt; Maybe one could simply do:\n&gt; \n&gt; POST /account/1\n&gt; &lt;account about=&quot;account/2&quot; /&gt;\n&gt; and the server would DWIM.  This includes merging the resources&#39;\n&gt; state, coming up with a new state, and PUTing it.  This PUT could\n&gt; appear in the resource&#39;s revision history (at /account/1/revisions),\n&gt; and be annotated with information about the PUT being the result of\n&gt; a merge with /account/2.\n\nJust POSTing the to-be-merged-to account is a little too ambiguous for\nmy taste.  If it&#39;s _extremely_ clear that &quot;merge&quot; is the only message\nthat&#39;s _ever_ going to be posted to an account, then Y-definitely-AGNI\n...  but that&#39;s a hard situation to imagine.\n\nSure, don&#39;t create the future messages that the design doesn&#39;t call for,\nbut also don&#39;t back yourself into a corner if it&#39;s obvious that future\nmessage-types will be needed...  I can&#39;t help but believe there will be\nother account-change types. But it&#39;s a specific design issue, at that\npoint.\n\n...jsled\n\n-- \nhttp://www.asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n\n\n"}}