{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"txb6QuOuH30pZ27YAOGz7OxkFuKn_dDFPsFw6G-Q7XascSqUF7qlixs6wtXrSeyu1PLGsp63QROLVWE13wt80GkyZAccUinK9fjoGdCZvw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: HTML REST API example [was: Link relations]","postDate":"1291672584","msgId":17081,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMjA2MTQ1NjI0LjYzYjEzNTg5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGlkaXV2cys3ZXBzQGVHcm91cHMuY29tPg==","referencesHeader":"PDIwMTAxMjA1MjIyNDA5LjJkYzZjYjY2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPGlkaXV2cys3ZXBzQGVHcm91cHMuY29tPg=="},"prevInTopic":17080,"nextInTopic":17082,"prevInTime":17080,"nextInTime":17082,"topicId":17057,"numMessagesInTopic":43,"msgSnippet":"... Those id values are neither here nor there in terms of the API.  The markup is how it is because of WCAG checkpoints, which means every field has a label","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95212 invoked from network); 6 Dec 2010 21:56:23 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 6 Dec 2010 21:56:23 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 6 Dec 2010 21:56:23 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 612EC509DB;\n\tMon,  6 Dec 2010 16:56:22 -0500 (EST)\r\nDate: Mon, 6 Dec 2010 14:56:24 -0700\r\nTo: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20101206145624.63b13589.eric@...&gt;\r\nIn-Reply-To: &lt;idiuvs+7eps@...&gt;\r\nReferences: &lt;20101205222409.2dc6cb66.eric@...&gt;\n\t&lt;idiuvs+7eps@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: HTML REST API example [was: Link relations]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;wahbedahbe&quot; wrote:\n&gt; \n&gt; And sure -- you are using XHTML and any browser can interact with\n&gt; your service. Ok. But these M2M clients that are keying off of the id\n&gt; values etc. (which one can argue is &quot;out of band knowledge&quot; -- but it\n&gt; is questionable) can&#39;t interact with ANY service that is similarly\n&gt; designed using the same media type.\n&gt; \n\nThose id values are neither here nor there in terms of the API.  The\nmarkup is how it is because of WCAG checkpoints, which means every\nfield has a label bound to its @id using @for.  I don&#39;t understand why\nan m2m client keys off of anything -- I&#39;ve distributed an API in a\nstandardized format which makes the name-value pairs obvious, as well\nas the format and method the server expects.  Anyone can code an m2m\nclient to make those POST requests with the specified name-value pairs.\n\n&gt;\n&gt; The issue is this: the meaning of the id values is described in the\n&gt; HTML you are serving, but is really only readable by a human being\n&gt; who is doing the coding. It is an odd sort of &quot;out of band&quot; -- it is\n&gt; sort of like a signal embedded within a signal. But the client itself\n&gt; is not picking up the extra signal -- the human being developing (not\n&gt; using) the client is. I still consider it out of band but see how\n&gt; this is debatable.\n&gt; \n\nThe id values aren&#39;t intended for human consumption, either.  They are\nthere for machine-readability by assistive devices, because that&#39;s the\nmost-widely-interoperable manner of binding a label to a field.\n\n&gt;\n&gt; To me your example, while hard to argue against, still doesn&#39;t yield\n&gt; the benefits I&#39;d like to see from a RESTful m2m system. With your\n&gt; methodology, I still can&#39;t write a single client that a wide range of\n&gt; services can be targeted against.\n&gt;\n\nIt&#39;s possible to write such a client for shopping carts which re-use\nthe GoodRelations ontology.  But I still don&#39;t see why the desire to\nwrite such clients has anything to do with the media type.  If you&#39;re\ncreating media types which attempt to lead the user-agent around by the\nnose, it isn&#39;t REST -- in REST, the media type instructs the user-agent\nhow to determine what the state transitions are, so the user can choose\nbetween them.  Don&#39;t change this basic paradigm and tell me it&#39;s REST,\nor a proper use case for custom media types.\n\n&gt; \n&gt; I keep hearing that what I&#39;m targeting is not possible -- thing is I\n&gt; know that it is, because I&#39;ve done it for specific use cases. The\n&gt; problem is boiling it down to the key essential, generic\n&gt; methodologies that apply across domains. I&#39;m continuing to plug away\n&gt; at it when I have time though...\n&gt; \n\nWhat is possible, and what is RESTful, are not always the same thing.\nWhile it&#39;s possible to reach your goals by defining media types as\nobject keys, the result is a library-based API instead of a network-\nbased API -- the opposite of a uniform interface.  So I say, use media\ntypes properly and look for solutions to this problem where it&#39;s\nproperly solved -- domain-specific vocabulary embedded within\nubiquitous media types.\n\n-Eric\n\n"}}