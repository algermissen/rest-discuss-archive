{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter","from":"&quot;Peter&quot; &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"xNl28RpoQRtO5EFA4IgNZcdWdKpteHknqpz5SJZ-GZk6RPcAwD7f8KSJY3EqRmIQ5C7-6u9v4n1iQKHYGITYU8rZEFCdYMo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Google proposes RPC style APIs over REST","postDate":"1280503861","msgId":16038,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGkydXI3bCs0Y3R2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PEFBTkxrVGluWk9xXy1VYjluRjhlaUQwcnZVblJuMnhtWkItVmYzWXdndzNudUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16037,"nextInTopic":16039,"prevInTime":16037,"nextInTime":16039,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... I agree. There s no doubt in my mind that the folks behind the new discovery approach know exactly what they are doing.  In fact, Joe Gregorio (editor of","rawEmail":"Return-Path: &lt;pkeane@...&gt;\r\nX-Sender: pkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 40905 invoked from network); 30 Jul 2010 15:34:36 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 30 Jul 2010 15:34:36 -0000\r\nX-Received: from unknown (HELO n42b.bullet.mail.sp1.yahoo.com) (66.163.168.156)\n  by mta2.grp.sp2.yahoo.com with SMTP; 30 Jul 2010 15:34:36 -0000\r\nX-Received: from [69.147.65.147] by n42.bullet.mail.sp1.yahoo.com with NNFMP; 30 Jul 2010 15:31:01 -0000\r\nX-Received: from [98.137.34.34] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 30 Jul 2010 15:31:01 -0000\r\nDate: Fri, 30 Jul 2010 15:31:01 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i2ur7l+4ctv@...&gt;\r\nIn-Reply-To: &lt;AANLkTinZOq_-Ub9nF8eiD0rvUnRn2xmZB-Vf3Ywgw3nu@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Peter&quot; &lt;pkeane@...&gt;\r\nSubject: Re: Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=11652427; y=78uo-ej3JREYeeozXELeHDV-xzHDVr1UAPVaqwY4Orxii7-_Euqnmuh8Pw\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;\n=\r\n&gt; veering the thread slightly off to another angle...\n&gt; \n&gt; there are lots o=\r\nf engineering disciplines present @ Google. one\n&gt; engineering discipline th=\r\nat i suspect paid a role in the new\n&gt; &quot;Discovery-Based API&quot; model is _socia=\r\nl_ engineering.\n&gt; \n&gt; i think this is an example of a team @ Google offering=\r\n their audience\n&gt; (developers in this case) what Google thinks developers w=\r\nant; what\n&gt; Google needs to do to get developers to adopt their platform.\n&gt;=\r\n \n&gt; i, personally, have seen the same thing happen at Microsoft.\n&gt; \n&gt; these=\r\n are smart people. they &quot;get&quot; REST. however, they suspect their\n&gt; target au=\r\ndience does not.\n\nI agree. There&#39;s no doubt in my mind that the folks behin=\r\nd the new discovery approach know exactly what they are doing.  In fact, Jo=\r\ne Gregorio (editor of AtomPub spec & well-regarded RESTian), who is involve=\r\nd in the new (v3) discovery approach has been promising a blog post which I=\r\n suspect will be of great interest to folks here.  \n\nThat has not always be=\r\nen the case, though.  The Atom/AtomPub (v2) approach had some shortcomings =\r\nthat I think were hard to work around -- each service did enough &quot;customizi=\r\nng&quot; to the Atom document, that what you ended up with was essentially &quot;sema=\r\nntic tunnelling&quot; (hat-tip - Bill de hOra), a sub-optimal starting point for=\r\n a RESTful system that was really in need of custom media types.\n\n\n&gt; \n&gt; Als=\r\no, it&#39;s been said on this list (more than once) that one of the\n&gt; prime bar=\r\nriers to adopting the REST style (or any new pattern, tech,\n&gt; etc.) is psyc=\r\nho-social.  people don&#39;t like change, don&#39;t find the new\n&gt; thing appealing,=\r\n don&#39;t want to lose something in the change, etc. and\n&gt; to prevent these pe=\r\nrceived &quot;negative consequences&quot; from occurring,\n&gt; people will attempt to ar=\r\ngue against the new thing using\n&gt; pseudo-technical reasoning (basically uns=\r\nupported assertions like &quot;it\n&gt; won&#39;t scale&quot; or &quot;no one will like it&quot;, and s=\r\no forth). often, this kind\n&gt; of arguing is effective in the social setting =\r\nof the office since some\n&gt; in the conversation hold power over others (&quot;i c=\r\nan&#39;t convince my\n&gt; boss&quot;, etc.).\n\nI&#39;m disappointed that I will not be able =\r\nto point to Google as an example of &quot;REST done right&quot; as that makes the edu=\r\ncation (overcoming psycho-social  barriers) so much easier.  I&#39;m not yet co=\r\nnvinced that this is an engineering or design failure, though.  The *is* so=\r\nme RESTfulness in there, and there are some interesting ideas.  It will be =\r\ninteresting ot see how it plays out.  My own take is that this sort of JSON=\r\n/WADL approach was an attempt to get around that need to mint new media typ=\r\nes (or to come up w/ a suitably generic media type for all Google services =\r\n-- a role that Atom fell short of).  One of the stated goals was to make it=\r\n easier to bring a new API online (interfaces, documentation, clients, etc.=\r\n) when a new service was rolled out.  Ideally that would entail careful con=\r\nsideration of (perhaps custom) media type and link relations.  The approach=\r\n here essentially makes those media types dynamic &quot;runtime&quot; artifacts descr=\r\nibed by this discovery (JSON/WADL) document.\n\nI&#39;m not passing judgement on =\r\nit and certainly not asserting this was the best/most-RESTful approach, but=\r\n I do find it worthy of study, given the needs and requirements of their pa=\r\nrticular situation.\n\n--peter keane\n\n\n&gt; \n&gt; Finally, the REST style is not co=\r\nmplicated (it&#39;s one of the few\n&gt; network arch styles based in clear constra=\r\nint-based terms), but it is\n&gt; hard work. hard work is not very appealing. i=\r\nn my experience the REST\n&gt; style is most demanding on those building _clien=\r\nts_ not servers.\n&gt; Google is trying to get people to build &quot;consuming&quot; appl=\r\nications; the\n&gt; hardest part, IMO. i think Google has decided to not try to=\r\n convince\n&gt; their audience they need to adopt a state-machine style in orde=\r\nr to\n&gt; consume the data Google is offering. instead, they decided to make\n&gt;=\r\n consuming Google data &quot;easy&quot; and &quot;familiar.&quot; hence the adoption of an\n&gt; RP=\r\nC over HTTP pattern.\n&gt; \n&gt; I think Google thought about this carefully and k=\r\nnows exactly what\n&gt; they are doing. and they&#39;ll get lots of adoption, too.\n=\r\n&gt; \n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt; http://mamund.com/foaf.rdf#me\n&gt; \n&gt; \n=\r\n&gt; \n&gt; \n&gt; On Fri, Jul 30, 2010 at 09:45, Eric J. Bowman &lt;eric@...&gt; wrote:\n&gt; &gt;=\r\n&gt;\n&gt; &gt;&gt; I made this too hard. =EF=BF=BDForget the first GET. =EF=BF=BDThe co=\r\nnditional PUT uses\n&gt; &gt;&gt; if-none-match the Etag of /image.jpg?rot=3D90. =EF=\r\n=BF=BDMakes the hypertext API\n&gt; &gt;&gt; even easier to write.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; What =\r\nif we don&#39;t want to transfer a representation of image.jpg to the\n&gt; &gt; clien=\r\nt, or back to the server? =EF=BF=BDNo problem. =EF=BF=BDHEAD /image.jpg?rot=\r\n=3D90 to\n&gt; &gt; get the Etag (or GET), followed by a conditional POST to /imag=\r\ne.jpg of a\n&gt; &gt; representation of the desired application state as applicati=\r\non/x-www-\n&gt; &gt; form-urlencoded, i.e. POST /image.jpg?rot=3D90 if-none-match =\r\nEtag.\n&gt; &gt;\n&gt; &gt; While this may technically solve the lost-update problem, wit=\r\nhout\n&gt; &gt; actually transferring the image, how does the user (human or machi=\r\nne)\n&gt; &gt; know the image hasn&#39;t already been rotated by 90 degrees? =EF=BF=BD=\r\nIf what\n&gt; &gt; Google meant to call awkward wasn&#39;t the notion of the client do=\r\ning the\n&gt; &gt; rotation, but the notion that the image needs to be transferred=\r\n to the\n&gt; &gt; client at all, then I don&#39;t see any way around it -- without vi=\r\newing\n&gt; &gt; the image, how would a human or machine user know that it needs\n&gt;=\r\n &gt; rotation, or by how many degrees?\n&gt; &gt;\n&gt; &gt; So my HEAD-conditional POST so=\r\nlution is only RESTful in situations\n&gt; &gt; where the user goal is to rotate a=\r\nn image regardless of current\n&gt; &gt; orientation. =EF=BF=BDWhereas this is the=\r\n only use-case Google&#39;s RPC supports,\n&gt; &gt; without solving for lost-update, =\r\nmaking it brittle even where lost-\n&gt; &gt; update isn&#39;t a problem: =EF=BF=BDGoo=\r\ngle&#39;s way, if the confirmation of the POST\n&gt; &gt; is lost and the operation re=\r\npeated as a result, the rotation is 180\n&gt; &gt; degrees not 90. =EF=BF=BDMy way=\r\n, prevents this by properly identifying\n&gt; &gt; resources (for starters) and us=\r\ning conditional requests. =EF=BF=BDNot brittle.\n&gt; &gt;\n&gt; &gt; There is nothing un=\r\nRESTful about POST /image.jpg?rot=3D90 being\n&gt; &gt; interpreted by the server =\r\nto mean &quot;rotate image.jpg 90 degrees&quot; unless\n&gt; &gt; such an operation isn&#39;t hy=\r\npertext-driven, and provided the media type is\n&gt; &gt; application/x-www-form-u=\r\nrlencoded. =EF=BF=BDIn which case &quot;rot&quot; is not a &quot;verb&quot;,\n&gt; &gt; it is a noun i=\r\ndentifying a stored procedure (regardless of HTTP method).\n&gt; &gt;\n&gt; &gt; Google&#39;s=\r\n POST, by way of comparison, is not a transfer of a\n&gt; &gt; representation of t=\r\nhe desired resource state. =EF=BF=BDIt&#39;s RPC. =EF=BF=BDI couldn&#39;t\n&gt; &gt; make =\r\nthis argument if Google allowed GET on the same URI -- this is the\n&gt; &gt; diff=\r\nerence between identification of resources (regardless of how sloppy\n&gt; &gt; th=\r\ne URIs) and custom verbs tunneled over POST.\n&gt; &gt;\n&gt; &gt; -Eric\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ----=\r\n--------------------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; =\r\n&gt;\n&gt;\n\n\n\n"}}