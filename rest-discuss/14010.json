{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"Andrew Wahbe","from":"Andrew Wahbe &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"lGRr3VQ7oStPuvbtPRD_ovdF17dC_Svnyv3PNMf3V71hkfA8WrggUQJBiHQUZ4adCdb9TwDFvC6CJ3z-qX0dkykIxqsJ7v1dzUZ5SA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Service descriptions and legal contracts","postDate":"1257536476","msgId":14010,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGIwZWJhZmQxMDkxMTA2MTE0MW8xYmVhYWI1MXJmYmI3MDMzZDM2NzQ1MTBkQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PENDNzM5QTY4LTFCQjEtNEMwOS1BNzM1LTFDRTRGMzMxNjA4OUBtYWMuY29tPg==","referencesHeader":"PGhkMWM5aitiN2d2QGVHcm91cHMuY29tPgkgPENDNzM5QTY4LTFCQjEtNEMwOS1BNzM1LTFDRTRGMzMxNjA4OUBtYWMuY29tPg=="},"prevInTopic":14009,"nextInTopic":14011,"prevInTime":14009,"nextInTime":14011,"topicId":13996,"numMessagesInTopic":25,"msgSnippet":"On Fri, Nov 6, 2009 at 10:58 AM, Jan Algermissen ... Ok so right out of the gate I have issues with this. Coding a client for a service seems unRESTful to","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 53195 invoked from network); 6 Nov 2009 19:41:21 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 6 Nov 2009 19:41:21 -0000\r\nX-Received: from unknown (HELO mail-ew0-f223.google.com) (209.85.219.223)\n  by mta1.grp.sp2.yahoo.com with SMTP; 6 Nov 2009 19:41:21 -0000\r\nX-Received: by ewy23 with SMTP id 23so1431286ewy.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Nov 2009 11:41:17 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.88.6 with SMTP id z6mr1573472wee.52.1257536476911; Fri, 06 \n\tNov 2009 11:41:16 -0800 (PST)\r\nIn-Reply-To: &lt;CC739A68-1BB1-4C09-A735-1CE4F3316089@...&gt;\r\nReferences: &lt;hd1c9j+b7gv@...&gt;\n\t &lt;CC739A68-1BB1-4C09-A735-1CE4F3316089@...&gt;\r\nDate: Fri, 6 Nov 2009 14:41:16 -0500\r\nMessage-ID: &lt;b0ebafd10911061141o1beaab51rfbb7033d3674510d@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Andrew Wahbe &lt;andrew.wahbe@...&gt;\r\nSubject: Re: [rest-discuss] Re: Service descriptions and legal contracts\r\nX-Yahoo-Group-Post: member; u=221173245; y=xnmue3pVww-kY0jnHbk_DN2V0Ijb4Cfi5JqbZv6Z2q5ETgFt4g\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nOn Fri, Nov 6, 2009 at 10:58 AM, Jan Algermissen\n&lt;algermissen1971@...&gt; =\r\nwrote:\n&gt;\n&gt; On Nov 6, 2009, at 3:36 PM, wahbedahbe wrote:\n&gt;\n&gt;&gt; --- In rest-d=\r\niscuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...&gt;\n&gt;&gt; wrote:\n&gt;&gt;&gt;=\r\n\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Nov 6, 2009, at 6:45 AM, wahbedahbe wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; There are a=\r\n lot of assumptions here about the limitations of machine\n&gt;&gt;&gt;&gt; to machine R=\r\nESTful interaction. I have never seen any proof of these\n&gt;&gt;&gt;&gt; limitations. =\r\nIt just seems that because the general REST community\n&gt;&gt;&gt;&gt; can&#39;t figure out=\r\n how to design good media types for machine to\n&gt;&gt;&gt;&gt; machine interaction, th=\r\ne consensus is that it isn&#39;t possible.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I did not say that at all. O=\r\nf course machine to machine RESTful\n&gt;&gt;&gt; systems are possible (e.g. AtomPub)=\r\n. I was talking about inevitable\n&gt;&gt;&gt; assumptions the client has to make tha=\r\nt manifest itself in code or\n&gt;&gt;&gt; configuration of and how to document these=\r\n such that\n&gt;&gt;&gt;\n&gt;&gt;&gt; - no unnecessary coupling is created by the documentatio=\r\nn\n&gt;&gt;&gt; =A0(as is by many of the documentations of the so called REST\n&gt;&gt;&gt; =A0=\r\ninterfaces on the Web)\n&gt;&gt;&gt; - the style of documentation will be accepted by=\r\n e.g.\n&gt;&gt;&gt; =A0the legal department\n&gt;&gt;&gt;\n&gt;&gt;&gt; Jan\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; Right, but it&#39;s the=\r\n assumption that these out-of-band contracts are needed\n&gt;&gt; is what I&#39;m ques=\r\ntioning.\n&gt;\n&gt; Suppose you are coding a client for service that lets you sear=\r\nch stuff and\n&gt; then do something with it (e.g. update). Your client code wi=\r\nll inevitably\n&gt; contain the &#39;invocation&#39; of the search (e.g. GET request to=\r\n search\n&gt; resource). And this is based on the expectation that the search r=\r\nesource\n&gt; will be there (=3D=3D being discoverable).\n\nOk so right out of th=\r\ne gate I have issues with this. &quot;Coding a client\nfor a service&quot; seems unRES=\r\nTful to me. Firefox is not coded for Google,\nFacebook or Amazon. It is code=\r\nd for URIs, HTTP and HTML (and HTML&#39;s\n&quot;friends&quot; CSS, Javascript etc.). Your=\r\n client will only have code that\nhas a notion of search invocation if it is=\r\n inherent in the media type\n(including extensions and relations). But that =\r\nis not necessary for\nsearch to work. The client could be performing a searc=\r\nh without\n&quot;knowing&quot; it, because a combination of the media type, the curren=\r\nt\nrepresentation/state, and the client disposition and/or client side\nevent=\r\ns have caused the search link to be followed. This is what\nhappens when I u=\r\nse my browser to do a Google search. I don&#39;t see why\nthis can&#39;t be the case=\r\n for media types other than HTML (and it\ncertainly would be for VoiceXML an=\r\nd CCXML).\n\n&gt;  If the service does not provide the\n&gt; search resource anymore=\r\n the client will break (if you code it to expect that\n&gt; there is a search r=\r\nesource and sudden;y there is none what else could the\n&gt; code do?). Humans =\r\ncan work on a solution for the problem, software cannot\n&gt; (unless we go int=\r\no AI of some form).\n\nI&#39;m not sure what is &quot;broken&quot; here. The service seems =\r\nbroken, but I&#39;m\nnot sure if the client is broken -- you should be able to p=\r\noint it at\nany other service that supports the client&#39;s media type(s) and i=\r\nt\nshould still work just fine. Or is the service just changed so that\nthe s=\r\nearch step is not required anymore? If the service is still\naccomplishing a=\r\n useful goal within the bounds of the client&#39;s media\ntype, things still see=\r\nm ok. If the service is now not doing something\nuseful -- well that is a se=\r\nrvice implementation issue. If it&#39;s still\nworking within the bounds of the =\r\nmedia type then it is not a technical\nissue with the contract between clien=\r\nt and service _software_. It is\nmore of an issue between the operator of th=\r\ne client and the operator\nof the service -- maybe I&#39;m splitting hairs here =\r\nbut it seems to be\ndifferent than what you are describing. And more importa=\r\nntly doesn&#39;t\nseem to have any differences in the machine-to-machine vs.\nhum=\r\nan-to-machine contexts. i.e. if Amazon stopped selling books, it\nwould trip=\r\n up a human too. The solution --  go to a different start\nURI -- applies in=\r\n both contexts as well. And Firefox is not going to\nfigure out what alterna=\r\nte URI to use just as a machine-driven client\nwill not.\n\nIf the service sta=\r\nrted spitting back representations that did not\nconform to the client&#39;s med=\r\nia type. Then I think you can say that the\nsoftware contract is broken (esp=\r\necially if the client is setting it&#39;s\naccept headers properly). But this ag=\r\nain equally trips up machine\ndriven and human driven client software.\n\n&gt;\n&gt; =\r\nTechnically, this is inevitable and no other, more specialized interface\n&gt; =\r\nwill help you, because if a Web service does not implement some\n&gt; service.s=\r\nearch() anymore the SOAP call will also fail and no WSDL will\n&gt; prevent tha=\r\nt. This is just the nature of binding the components at runtime\n&gt; and not a=\r\nt compile time (as you would in a non-networked application).\n&gt;\n&gt; The probl=\r\nem is at the business level though because the WSDL specifies a\n&gt; contract =\r\nthat defines the search method to be there and if you SOAP call\n&gt; fails, yo=\r\nu can take the WSDL and the stack trace, run to your service\n&gt; provider and=\r\n say: &quot;Where&#39;s that method you *promised*?&quot;).\n&gt;\n\nRight. So in REST, the sof=\r\ntware contract is more &quot;client specific&quot;.\ni.e. the client supports a known =\r\nmedia type and the service targets\nthat media type and all clients that sup=\r\nport it. So the &quot;missing\nmethod&quot; equivalent would be somehow not conforming=\r\n to the media type\nsupported by the client. And if search capability was so=\r\nmething that\nhad to be in every document of that media type then you get th=\r\ne same\nsort of contract. But often that is not the case (it isn&#39;t the case\n=\r\nwith HTML and lots of other media types anyways).\n\nInstead the service is p=\r\nublishing a URI and saying  &quot;somewhere behind\nthis URI, search is going to =\r\nhappen&quot;. But that is a contract between\nthe client operator and the service=\r\n operator about the semantics of\nthe service, not the interface. The WSDL e=\r\nquivalent might be the case\nwhere the search method is there but it doesn&#39;t=\r\n provide search\nsemantics (e.g. it always spits back the same results no ma=\r\ntter what\nthe search terms are).\n\n\n&gt; With REST, there is (deliberately) no =\r\nsuch contract and the client&#39;s\n&gt; expectation that there will be a search re=\r\nsource is based on observation and\n&gt; trust and on some cloud-level based kn=\r\nowledge about the overall kind of the\n&gt; interaction.\n&gt;\n&gt; From the service o=\r\nwner perspective it is also an interesting question, how a\n&gt; developer woul=\r\nd know if he could take away the search resource. After all,\n&gt; there is no =\r\ncontract to look at that would make clear what the client\n&gt; expectations re=\r\nally are. IOW, if you are in charge of evolving the service,\n&gt; you should h=\r\nave a pretty clear source that tells you what you can change and\n&gt; what you=\r\n cannot change. This is rather easy on the media type level but it\n&gt; is als=\r\no the combination of hypermedia sematics in use that matter. &quot;Are my\n&gt; clie=\r\nnts &#39;licensed&#39; to assume the presence of that Atom extension or are they\n&gt; =\r\nnot? Well, we never told them we&#39;d never take it away so we can drop it at\n=\r\n&gt; any time, right?&quot;\n&gt;\n&gt; One approach to all this is probably to simply stat=\r\ne that a service will\n&gt; never evolve in an incompatible way (e.g. &quot;we&#39;ll ne=\r\nver remove anything&quot;) and\n&gt; if it has to be incompatible, there&#39;ll just be =\r\na new service.\n&gt;\n&gt; Now, I am not trying to be enterprisey and ride the &#39;oh,=\r\n inside the enetrpsi\n&gt; there are the hard problems&#39; horse, but &#39;follow your=\r\n nose&#39; just does not\n&gt; provide the specifics that managers and lawyers (usu=\r\nally rightly so) demand.\n&gt;\n&gt; What is particulary interesting is that IMHO t=\r\nhere is the danger of, in the\n&gt; usual attempt to escape this situation, the=\r\nre is far too much coupling put\n&gt; into the descriptive documents and many o=\r\nf REST&#39;s advantages lost (see\n&gt; interface docs for example that list the UR=\r\nIs of the resources to use, what\n&gt; formats to expect and which HTTP return =\r\ncodes - and what they mean(!) in the\n&gt; service context).\n&gt;\n&gt; So, balance is=\r\n really important.\n&gt;\n&gt; Jan\n&gt;\n\nSo here&#39;s an observation: In the web (and in =\r\nthe VoiceXML/CCXML\nworld), extension support and in general, media type evo=\r\nlution is\ndriven by clients not services. In the machine-driven-REST world,=\r\n the\ntrend seems to be the opposite. That means service interfaces are\n&quot;ser=\r\nvice specific&quot; (e.g. the media type is service-specific or\nincludes service=\r\n-specific extensions, namespaces or relations). That\nmeans coupling. That m=\r\neans that you don&#39;t get the full advantages of\nREST. If I had to point to a=\r\n constraint being violated, I&#39;d say it was\n&quot;Self-Descriptive Messages&quot;. I d=\r\non&#39;t see how a message can be\nself-descriptive if it is in a service-specif=\r\nic format. To me that is\na key part of using &quot;standard&quot; media types -- the =\r\nmedia type exists\noutside of the context of your service. But I know a lot =\r\nof folks have\ndifferent interpretations of what &quot;standard&quot; means in the con=\r\ntext of\nREST. The differences are subtle but I think the implications are\nh=\r\nuge.\n\nAndrew\n\n"}}