{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"I1xc94Opx7frSAaf0dPJbEEAncjn5qXrW1TbPGQPlSf4NbddtvWjuN-O-ASoazQp9peEYQYkY_NYV1-84Qu8OzLBeTA-3-wG","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST Server API test harness?","postDate":"1226074388","msgId":11446,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDc5OTMzMGMzMDgxMTA3MDgxM3AyZTYzMWY0MXhhOTUwODE1OWFkYTdlOWExQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDYzM0NCRERBLURCQTEtNDhBNC05RTc4LTFDNjlEMDUyQUU1N0BtaW5kdG91Y2guY29tPg==","referencesHeader":"PEJMVTEwMi1EUzQ3RDdCQTRCOEYyNTRDMzc2OEQ1NEI1MTkwQHBoeC5nYmw+CSA8MjdFRkVBOEUtMEMxOS00MUIxLThFQUEtMDMxNTI1QTQ5MjVEQG1pbmR0b3VjaC5jb20+CSA8Nzk5MzMwYzMwODExMDcwNzI1dTZmMjhmYTUza2M3MzVhZGVhOTEzM2VkMzFAbWFpbC5nbWFpbC5jb20+CSA8NjMzQ0JEREEtREJBMS00OEE0LTlFNzgtMUM2OUQwNTJBRTU3QG1pbmR0b3VjaC5jb20+"},"prevInTopic":11445,"nextInTopic":11448,"prevInTime":11445,"nextInTime":11447,"topicId":11439,"numMessagesInTopic":20,"msgSnippet":"I agree: a generic HTTP test harness would have value too, aside from REST. A couple of people tried to help out with the conversion to SVG but to no avail","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 85755 invoked from network); 7 Nov 2008 16:13:09 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m52.grp.scd.yahoo.com with QMQP; 7 Nov 2008 16:13:09 -0000\r\nX-Received: from unknown (HELO ey-out-2122.google.com) (74.125.78.25)\n  by mta18.grp.scd.yahoo.com with SMTP; 7 Nov 2008 16:13:09 -0000\r\nX-Received: by ey-out-2122.google.com with SMTP id 6so551506eyi.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 07 Nov 2008 08:13:08 -0800 (PST)\r\nX-Received: by 10.210.77.2 with SMTP id z2mr4124739eba.58.1226074388564;\n        Fri, 07 Nov 2008 08:13:08 -0800 (PST)\r\nX-Received: by 10.210.134.2 with HTTP; Fri, 7 Nov 2008 08:13:08 -0800 (PST)\r\nMessage-ID: &lt;799330c30811070813p2e631f41xa9508159ada7e9a1@...&gt;\r\nDate: Fri, 7 Nov 2008 16:13:08 +0000\r\nTo: &quot;Steve Bjorg&quot; &lt;steveb@...&gt;\r\nCc: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;633CBDDA-DBA1-48A4-9E78-1C69D052AE57@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;BLU102-DS47D7BA4B8F254C3768D54B5190@...&gt;\n\t &lt;27EFEA8E-0C19-41B1-8EAA-031525A4925D@...&gt;\n\t &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\n\t &lt;633CBDDA-DBA1-48A4-9E78-1C69D052AE57@...&gt;\r\nX-Google-Sender-Auth: 9ed693efccdf93c5\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] REST Server API test harness?\r\nX-Yahoo-Group-Post: member; u=189321215; y=WBdAAT5N9ANddQHS41Takl37pATRxwT2X_kPDFXuOOEOdVjQYcVyjRkc\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\nI agree: a generic HTTP test harness would have value too, aside from REST.\n\nA couple of people tried to help out with the conversion to SVG but to\nno avail yet. What I really need is a way to automate the process, not\ndo it manually. That, or MS fix up the support for SVG in Visio ...\n\nAlan\n\nOn Fri, Nov 7, 2008 at 3:46 PM, Steve Bjorg &lt;steveb@...&gt; wrote:\n&gt; Alan,\n&gt;\n&gt; I would imagine there is a reasonable good test surface for HTTP even\n&gt; without knowledge of content-types.  Your diagram is a great resource for\n&gt; this! (btw, did you ever get help on converting it to SVG?)\n&gt;\n&gt; For instance, OPTIONS could be used to retrieve the list of supported HTTP\n&gt; methods.  If GET is among them, check if a ETag response header is present.\n&gt;  If so, does the server respond with 204 No Content when a matching\n&gt; If-None-Match request header is present.  Similarly, if PUT is supported,\n&gt; try If-Match header, and so forth.\n&gt;\n&gt; Although, none of this has anything to do with REST, such a litmus test\n&gt; would be very relevant to WOA implementers.\n&gt;\n&gt; - Steve\n&gt;\n&gt; --------------\n&gt; Steve G. Bjorg\n&gt; http://wiki.mindtouch.com\n&gt; http://twitter.com/bjorg\n&gt;\n&gt; On Nov 7, 2008, at 7:25 AM, Alan Dean wrote:\n&gt;\n&gt;&gt; I agree with Steve.\n&gt;&gt;\n&gt;&gt; A test harness for REST-over-HTTP could be valuable though; however it\n&gt;&gt; can&#39;t be ignorant of media-types. How can such a test harness assess\n&gt;&gt; HATEOAS without knowledge of the media-type exchanged? Without\n&gt;&gt; knowledge of HATEOAS, the test harness is unable to traverse the links\n&gt;&gt; between steady states.\n&gt;&gt;\n&gt;&gt; Some problems come to mind. In order to assess REST-over-HTTP,\n&gt;&gt; resource state changes must be made. In many, perhaps most, test\n&gt;&gt; subjects this will be either impossible (due to access control\n&gt;&gt; restrictions) or undesirable (filling a site with dummy data). The\n&gt;&gt; Code-on-Demand constraint further complicates the testability of\n&gt;&gt; subjects, as it reduces visibility.\n&gt;&gt;\n&gt;&gt; Given the necessity to have knowledge of many media-types, I suspect\n&gt;&gt; this would not be a trivial development. Good idea though (my\n&gt;&gt; http-headers-status diagram grew out of just such a test suite,\n&gt;&gt; although that was very application-specific).\n&gt;&gt;\n&gt;&gt; Alan\n&gt;&gt;\n&gt;&gt; On Fri, Nov 7, 2008 at 2:34 PM, Steve Bjorg &lt;steveb@...&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; I&#39;m not aware of any, but from your description, it sounds a HTTP test\n&gt;&gt;&gt; harness, not REST.\n&gt;&gt;&gt; - Steve\n&gt;&gt;&gt; --------------\n&gt;&gt;&gt; Steve G. Bjorg\n&gt;&gt;&gt; http://wiki.mindtouch.com\n&gt;&gt;&gt; http://twitter.com/bjorg\n&gt;&gt;&gt; On Nov 7, 2008, at 4:42 AM, Sebastien Lambla wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; Hi,\n&gt;&gt;&gt;\n&gt;&gt;&gt; I had an idea a while ago. As I&#39;m writing a REST enabler toolkit, and as\n&gt;&gt;&gt; i\n&gt;&gt;&gt; know others do exist too, it would be of great help to have a test\n&gt;&gt;&gt; harness\n&gt;&gt;&gt; to ensure valid (http / webarch) behavior.\n&gt;&gt;&gt;\n&gt;&gt;&gt; What I&#39;m thinking of is a bunch of specifications for various areas to be\n&gt;&gt;&gt; implemented using an http or rest toolit, with an automated client\n&gt;&gt;&gt; checking\n&gt;&gt;&gt; for accurate responses.\n&gt;&gt;&gt;\n&gt;&gt;&gt; For example, the following would be a specification:\n&gt;&gt;&gt;\n&gt;&gt;&gt; Generic resources\n&gt;&gt;&gt; =============\n&gt;&gt;&gt; A generic resource /customer({id}) is exposed as an xml represetnation, a\n&gt;&gt;&gt; json representation and an html representation. Content-type negotiation\n&gt;&gt;&gt; is\n&gt;&gt;&gt; supported on such resource. Format-specific URIs exist at\n&gt;&gt;&gt; /customer({id}).html, /customer({id}).json and /customer({id}).html\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Acceptance criterias\n&gt;&gt;&gt; - A request to /customer(22) with Accept:\n&gt;&gt;&gt; application/xml;q=0.9,application/json triggers a 200 with Content-Type:\n&gt;&gt;&gt; application/json and Content-Location: /customer(22).json\n&gt;&gt;&gt; - A request to /customer(22) with Accept: */* triggers a 300 Multiple\n&gt;&gt;&gt; representations\n&gt;&gt;&gt; - A request to /customer(22).html with Accept: text/html triggers a 200\n&gt;&gt;&gt; - A request to /customer(22).html with Accept: application/json triggers\n&gt;&gt;&gt; xxx\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; I&#39;m building integration tests around my API that follow such a pattern,\n&gt;&gt;&gt; but\n&gt;&gt;&gt; having a common test suite for any API that has an implementation of such\n&gt;&gt;&gt; test harness would be invaluable.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Is there such a harness and I missed it? Would anyone be interested in\n&gt;&gt;&gt; working on such harness?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Seb\n&gt;&gt;&gt;\n&gt;&gt;&gt; \n&gt;\n&gt;\n\n"}}