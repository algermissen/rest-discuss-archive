{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":248248154,"authorName":"Bruno Harbulot","from":"Bruno Harbulot &lt;Bruno.Harbulot@...&gt;","profile":"bruno_harbulot","replyTo":"SENDER","senderId":"Oa-ugnBo3l1qE-sHJjeXx_JA87LNGGYQhRVzOsTzNrU_sFJoAj1EyzG8oTDuzojH2_0EUTl7jDEpcyuyCd7oDrjQSdxrEtMeA3gL3rltN7J93grdsCcD","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: HTTP cookies as unconditional violations of REST","postDate":"1213277107","msgId":10945,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGcycjgzbCRqdWQkMUBnZXIuZ21hbmUub3JnPg==","inReplyToHeader":"PDIwMDgwNjExMTE1MzU4LmFhOWEzZmIzNTViZDc2NzM1MjY4OGM2MjE1MDRkZjI0LjU0OTRmNDBkNGEud2JlQGVtYWlsLnNlY3VyZXNlcnZlci5uZXQ+","referencesHeader":"IDwyMDA4MDYxMTExNTM1OC5hYTlhM2ZiMzU1YmQ3NjczNTI2ODhjNjIxNTA0ZGYyNC41NDk0ZjQwZDRhLndiZUBlbWFpbC5zZWN1cmVzZXJ2ZXIubmV0Pg=="},"prevInTopic":10939,"nextInTopic":10948,"prevInTime":10944,"nextInTime":10946,"topicId":10920,"numMessagesInTopic":14,"msgSnippet":"Hi, ... Well... I suppose I meant cookie, and therefore session, [...] , since, as you point out below, cookies are a mechanism for associating requests with","rawEmail":"Return-Path: &lt;Bruno.Harbulot@...&gt;\r\nX-Sender: Bruno.Harbulot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88342 invoked from network); 12 Jun 2008 13:25:24 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m50.grp.scd.yahoo.com with QMQP; 12 Jun 2008 13:25:24 -0000\r\nX-Received: from unknown (HELO ciao.gmane.org) (80.91.229.2)\n  by mta18.grp.scd.yahoo.com with SMTP; 12 Jun 2008 13:25:23 -0000\r\nX-Received: from list by ciao.gmane.org with local (Exim 4.43)\n\tid 1K6mnq-0003Tq-QF\n\tfor rest-discuss@yahoogroups.com; Thu, 12 Jun 2008 13:25:23 +0000\r\nX-Received: from rain.gmane.org ([80.91.229.7])\n        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Jun 2008 13:25:22 +0000\r\nX-Received: from Bruno.Harbulot by rain.gmane.org with local (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Jun 2008 13:25:22 +0000\r\nX-Injected-Via-Gmane: http://gmane.org/\r\nTo: rest-discuss@yahoogroups.com\r\nDate:  Thu, 12 Jun 2008 14:25:07 +0100\r\nLines: 89\r\nMessage-ID: &lt;g2r83l$jud$1@...&gt;\r\nReferences:  &lt;20080611115358.aa9a3fb355bd767352688c621504df24.5494f40d4a.wbe@...&gt;\r\nMime-Version:  1.0\r\nContent-Type:  text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding:  7bit\r\nX-Complaints-To: usenet@...\r\nX-Gmane-NNTP-Posting-Host: rain.gmane.org\r\nUser-Agent: Thunderbird 2.0.0.14 (Macintosh/20080421)\r\nIn-Reply-To: &lt;20080611115358.aa9a3fb355bd767352688c621504df24.5494f40d4a.wbe@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bruno Harbulot &lt;Bruno.Harbulot@...&gt;\r\nSubject: Re: HTTP cookies as unconditional violations of REST\r\nX-Yahoo-Group-Post: member; u=248248154; y=280oGR0TSJJ1k85RfMXhcJsSRhH2fmWmu0Th7chd0kaVczAtMKsybak\r\nX-Yahoo-Profile: bruno_harbulot\r\n\r\nHi,\n\nEtan Wexler wrote:\n&gt; \n&gt; \n&gt; Bruno Harbulot wrote (in\n&gt; &lt;http://tech.groups.yahoo.com/group/rest-discuss/message/10906 \n&gt; &lt;http://tech.groups.yahoo.com/group/rest-discuss/message/10906&gt;&gt;):\n&gt; \n&gt;  &gt; Although I&#39;d also prefer authentication mechanisms\n&gt;  &gt; based on WWW-Authenticate (and related headers), sometimes, it&#39;s\n&gt;  &gt; practically impossible, hence the use of a cookie to maintain an\n&gt;  &gt; authenticated session (using a cookie being by far better than using a\n&gt;  &gt; session id in a URI parameter).\n&gt;  &gt;\n&gt;  &gt; I think this doesn&#39;t contradict the stateless interactions principle of\n&gt;  &gt; REST, as long as the session is only used for authentication purposes.\n&gt; \n&gt; In that last sentence, &quot;principle&quot; should be &quot;constraint&quot;. I think that\n&gt; you may have meant &quot;cookie&quot; where you wrote &quot;session&quot;. Is that the case?\n\nWell... I suppose I meant &quot;cookie, and therefore session, [...]&quot;, since, \nas you point out below, &quot;cookies are a mechanism for associating \nrequests with a session maintained on an origin server&quot;.\n\nAs much as an SSL session that is used for authentication is not \nparticularly relevant to the REST/non-REST argument, there are also \nother authentication mechanisms that rely on a form of session or at \nleast some shared state (often temporarily) between the client and the \nserver, and this is not strictly related to the &quot;RESTfulness&quot; of the \napplication.\nBy lack of support (especially in browsers) for transferring this \nauthentication-state information in the defined authentication headers \nof HTTP, some web servers rely on a cookie to check that a client has \nbeen authenticated, effectively by giving them a shared secret which \nthey are supposed send back so that it can be verified in subsequent \nrequests.\n\n\nInstead of it being done via cookies with:\nS-&gt;C: Set-Cookie: auth_token=0123456789\nC-&gt;S: Cookie: auth_token=0123456789\n\nThis could be done with something along the lines of:\nS-&gt;C: Authentication-Info: auth_token=0123456789\nC-&gt;S: Authorization: SharedToken auth_token=0123456789\n\nIn addition to this, if that shared token were to be obtained via a \nform, there could be an initial challenge along these lines:\nS-&gt;C: WWW-Authenticate: Form http://the/logon/form\n\n\nMy point was that such cookies are (or at least can and should be) \ncompletely distinct from the REST concern.\n\n\nThe difficulty with forms for authentication is that they are a subset \nof the application itself and not handled separately by the user-agent. \nThey carry out the authentication task by changing the application \nstate. What servers that challenge clients with a form should do is to \nenable the client to respond to the authentication challenge but invite \nthe client to re-attempt their initial request, by responding with a \nsufficiently self-descriptive message.\nOnce authentication has been performed, the authentication information \nshould be treated separately from the main application (cookie or not). \nWhether-or-not that application is RESTful should be a different problem.\n\n\nBest wishes,\n\nBruno.\n\n\n&gt; Cookies in HTTP always violate REST. By definition, cookies are a\n&gt; mechanism for associating requests with a session maintained on an\n&gt; origin server. If an application uses cookies as intended, the use of\n&gt; the cookies violates the constraint of stateless communication. If an\n&gt; application uses cookies but does not use them as intended, the use of\n&gt; the cookies violates the constraint of self-descriptive messages. Maybe\n&gt; my premise is wrong and cookies are not a mechanism for associating\n&gt; requests with a session maintained on an origin server. Maybe cookies\n&gt; pass arbitrary information from origin server to user agent and back. If\n&gt; that is so, then the use of cookies still violates the constraint of\n&gt; self-descriptive messages, because cookies are not self-descriptive at\n&gt; all.\n&gt; \n&gt; Given that cookies in HTTP always violate REST, I add that violating\n&gt; REST is not the end of the world, and so using cookies is not the end of\n&gt; the world. Sometimes cookies are a decent way to get a job done.\n\n\n"}}