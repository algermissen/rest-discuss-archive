{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"ADFV_oSCI2VE6IqfsdJCIZOUpFRNWlmSg-zLUrvDv0pnnbZNZngC9-_CpnBBiN0WPFUfOeWxj9X0Xgzpgae0sZCdkUzF3S-F4Pn6vvmDyw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Implementing RESTful Queue with HTTP","postDate":"1026791244","msgId":1868,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNjhnc1ZXREtwenhEUEhwcnAwMDAwMDUzN0Bob3RtYWlsLmNvbT4=","referencesHeader":"PEI5NTNCQkM5LjNERkMlamJvbmVAZGVlcGZpbGUuY29tPiA8MDBjODAxYzIyOWI3JGEwN2YwYzcwJDJhMDExNGFjQE5JVEVPLkNPTT4gPE9FMzN3UlBRSVdETzNoUkRUNlowMDAwMDUzM0Bob3RtYWlsLmNvbT4gPE9FNjQ2TUxyMUtYekN3NnFxRlQwMDAwYjRlZUBob3RtYWlsLmNvbT4gPDNEMzI2NzE3LjE2RENEMTFBQHByZXNjb2QubmV0Pg=="},"prevInTopic":1866,"nextInTopic":0,"prevInTime":1867,"nextInTime":1869,"topicId":1853,"numMessagesInTopic":10,"msgSnippet":"... From: Paul Prescod  ... message ... for ... Very good point. I d forgotten to consider lost responses. ... The return message from a","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 16 Jul 2002 03:45:49 -0000\r\nReceived: (qmail 35216 invoked from network); 16 Jul 2002 03:45:48 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m5.grp.scd.yahoo.com with QMQP; 16 Jul 2002 03:45:48 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.203)\n  by mta2.grp.scd.yahoo.com with SMTP; 16 Jul 2002 03:45:48 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Mon, 15 Jul 2002 20:45:48 -0700\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Paul Prescod&quot; &lt;paul@...&gt;\r\nReferences: &lt;B953BBC9.3DFC%jbone@...&gt; &lt;00c801c229b7$a07f0c70$2a0114ac@...&gt; &lt;OE33wRPQIWDO3hRDT6Z00000533@...&gt; &lt;OE646MLr1KXzCw6qqFT0000b4ee@...&gt; &lt;3D326717.16DCD11A@...&gt;\r\nSubject: Re: [rest-discuss] Implementing RESTful Queue with HTTP\r\nDate: Mon, 15 Jul 2002 20:47:24 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nMessage-ID: &lt;OE68gsVWDKpzxDPHprp00000537@...&gt;\r\nX-OriginalArrivalTime: 16 Jul 2002 03:45:48.0339 (UTC) FILETIME=[45CBF830:01C22C7B]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Paul Prescod&quot; &lt;paul@...&gt;\n\n&gt;\n&gt; &gt; 3 remove message from queue with DELETE\n&gt; &gt; The listing provides URIs which represent /links/ to messages which have\n&gt; &gt; URIs independent of being part of a queue. The client removed the\nmessage\n&gt; &gt; from the queue by doing a DELETE on the URI for the &#39;message in outbox&#39;\n&gt; &gt; resource. It then is free to get the message (as is anybody else, like\nfor\n&gt; &gt; audits, referencing, etc.).\n&gt;\n&gt; I don&#39;t think this is safe. Two clients could DELETE at the same time\n&gt; and both of the return messages could be lost. Then nobody knows who is\n&gt; responsible for dealing with that message.\nVery good point. I&#39;d forgotten to consider lost responses.\n\n&gt; A conditional PUT or POST\n&gt; allows clients to &quot;mark&quot; the message (e.g. with a UUID or signature) to\n&gt; say: &quot;I&#39;m in charge of this.&quot; Then they can deal with it at their\n&gt; leisure.\nThe return message from a PUT can be lost just as much as a return message\nfrom a DELETE .\nBut I do like the PUT, since client information can be saved by the server,\nand so a lost response isn&#39;t that critical - a client will eventually\nre-discover the state of the queue and notice that /it/ is responsible for a\nmessage - even though it never got the response.\n\nBut this means clients need to know their IDs & it better be &#39;globally\nunique&#39; for some degree of &#39;global&#39;.\n\nPerhaps the server can hand out tokens to any client that asks for a message\nand the first client that successfully puts one of them back wins. Each time\na client does a GET on the &#39;message-in-queue&#39; resource a new token is\ngenerated (i know i know &#39;non-idempotent get&#39;, blah blah blah, i can&#39;t hear\nyou....). The client saves that and confirms back to the server - it then\nhas either a success response, fail response, or null response. It processes\nthe message if a success response, drops the message on a fail response and\nre-tries later on the null response.\nThis approach has the server control the id&#39;s and the clients don&#39;t need\nid&#39;s.\n\n&gt; The conditionality can allow the server to ensure that there is\n&gt; no race condition.\nI don&#39;t think the DELETE would cause a race condition any more than a\nconditional PUT, the origin server would be responsible for ensuring only\none request is successful in either case.\n\n\n\n"}}