{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"m6ZHXwJQtC4xlCmr0J0qo_G8Jtre8925dtHLb21iH1PKikuK9kA27xTGdPNzURHhWkqri6oveJXTdrKf92tp6PFIYPu9cnV_a9f18V524ZBxwj3pm43-qt8l","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Application state","postDate":"1254918166","msgId":13718,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhaTE2bSszNWtiQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRjZjdlZDJjMDkxMDA2MDcyNHAzNGMyYTQ0MGtkMzlkM2YzMjcwMjY0YWI4QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":13700,"nextInTopic":0,"prevInTime":13717,"nextInTime":13719,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Hi Alexandros. ... given ... get the ... all ... other ... sending ... the ... resource at ... That is correct. ... server that receives the request to ... ","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20948 invoked from network); 7 Oct 2009 12:23:07 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.re1.yahoo.com with QMQP; 7 Oct 2009 12:23:07 -0000\r\nX-Received: from unknown (HELO n41b.bullet.mail.sp1.yahoo.com) (66.163.168.155)\n  by mta1.grp.sp2.yahoo.com with SMTP; 7 Oct 2009 12:23:07 -0000\r\nX-Received: from [69.147.65.147] by n41.bullet.mail.sp1.yahoo.com with NNFMP; 07 Oct 2009 12:22:48 -0000\r\nX-Received: from [98.137.34.73] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 07 Oct 2009 12:22:48 -0000\r\nDate: Wed, 07 Oct 2009 12:22:46 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hai16m+35kb@...&gt;\r\nIn-Reply-To: &lt;4cf7ed2c0910060724p34c2a440kd39d3f3270264ab8@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Application state\r\nX-Yahoo-Group-Post: member; u=124198377; y=Iv7Hw21EQB0SIF1w1O-IrfvczIevyPC_OPYcs0XuxrFgYoEs\r\nX-Yahoo-Profile: willmarpo\r\n\r\nHi Alexandros.\n\n--- In rest-discuss@yahoogroups.com, Alexandros Marinos &lt;al=\r\n3xgr@...&gt;\nwrote:\n&gt;\n&gt; Hello William,\n&gt;\n&gt; On Tue, Oct 6, 2009 at 2:21 PM, Wil=\r\nliam Martinez Pomares &lt;\n&gt; wmartinez@... wrote:\n&gt;\n&gt; &gt; So, the client creates=\r\n an order, which is then a resource, and it is\ngiven\n&gt; &gt; an ID for it (ID=\r\n=3DURI). Then, it adds line items. At the end, it can\nget the\n&gt; &gt; order to =\r\nverify and the server in turn will send back the header and\nall\n&gt; &gt; lines s=\r\no far. The client then requests to place the order, which the\nother\n&gt; &gt; ser=\r\nver that responds does.\n&gt; &gt;\n&gt;\n&gt;\n&gt; &gt; As you can see, no server has a state, =\r\nand I don&#39;t need to keep\nsending\n&gt; &gt; back and forth all the data.\n&gt; &gt;\n&gt;\n&gt; T=\r\nhe issues I see with this are the following: If the client can GET\nthe\n&gt; or=\r\nder resource, then any server has access to the state of the\nresource at\n&gt; =\r\nany time and can return it to the client.\n\nThat is correct.\n\n&gt; If any serve=\r\nr can access the state of the order at any time, then the\nserver that recei=\r\nves the request to\n&gt; purchase all items will be able to as well.\n\nThat is t=\r\nhe idea.\n\n\n&gt;Which means there is a shared database backend.\n\nThis depends o=\r\nn implementation, but let&#39;s say it is.\n\n\n&gt; Therefore, adding an extra round=\r\ntrip doesn&#39;t get you any additional\nflexibility.\n\nOk, here we disagree: The=\r\n extra roundtrip you mention is the get of the\ncomplete order, to actually =\r\nrequest to confirm that complete order. If\nyou use any locking mechanism, I=\r\n will lose flexibility, so not adding it\nwill make me free!\n\n&gt; What it cost=\r\ns you however is a possible consistency\n&gt; problem. If there are multiple pa=\r\nrties that can add items to the\norder, and\n&gt; one commits this order by purc=\r\nhasing, if there is a new order item\nadded in\n&gt; the time it takes for the &#39;=\r\ncommitter&#39; to GET and POST the order, then\nthe\n&gt; last item is lost.\n\nNot re=\r\nally! The get and then post is the way I can tell the server: this\nis the s=\r\ntate of the resource I&#39;m committing, please do so. The server\nwill then ver=\r\nify if there are no less, nor more lines and commit. If it\nfounds any diffe=\r\nrence, the it will throw an error.\nNow, that problem you mention may happen=\r\n, but it will be the most\ndifficult. So, adding the most complex mechanism =\r\nto avoid other party\nadding a line at that split second window, costs me mo=\r\nre than just\nchecking and then throwing an error, which may not happen at a=\r\nll. See?\nThat is being optimistic due to the business case. Please check th=\r\ne\nprinciples eBay uses to gain flexibility it their massive site: no\ntransa=\r\nctions at all, just faith and smart failure recovery.\n\n\n&gt;  Additionally, si=\r\nnce the server presumably does not know which order\nresource this purchase =\r\nis related to, it can&#39;t change it&#39;s\n&gt; status to &#39;purchased&#39; or whatever. So=\r\n items can keep being added in\n&gt; perpetuity. Clearly we need something bett=\r\ner than this.\n&gt;\n\nNot sure I understand this. The last server of course does=\r\n know the ID\nof the order, since it is sent by client! That last server has=\r\n a great\ndeal of work to do:\n1. Lock the order\n2. Check all the lines are s=\r\ntill in inventory.\n3. Subtract the items\n4. Change order status and commit.=\r\n\n\nAll that in one transaction. In this case, the ACID transaction is done\ni=\r\nnternally, at one hit, from the last request a server receives, not\nstep by=\r\n step from the client.\n\n&gt; Alexandros\n&gt;\n\nCheers!\n\nWilliam Martinez Pomares\n\n=\r\n(Sorry if I post this twice)\n\n\n\n"}}