{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115001042,"authorName":"Joe Gregorio","from":"Joe Gregorio &lt;joe@...&gt;","profile":"JCGregorio","replyTo":"SENDER","senderId":"BEG8U0zPc1a9dpEhLHRIQo-O5DfqhAU0h8pmutuvYWI9WPw4PyN7O7V7xTifCttqSsPM7qU6bdQQYkubjRfVRS2nPGA1IKQs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Future proof","postDate":"1040739973","msgId":3111,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNFMDg2RTg1LjcwODAxMDFAYml0d29ya2luZy5vcmc+","inReplyToHeader":"PEQ3QjVBNEIwLTE3MzktMTFENy05REQ1LTAwMzA2NUEyNzhFNkBtY2xpbmsuaXQ+","referencesHeader":"PEQ3QjVBNEIwLTE3MzktMTFENy05REQ1LTAwMzA2NUEyNzhFNkBtY2xpbmsuaXQ+"},"prevInTopic":3110,"nextInTopic":3112,"prevInTime":3110,"nextInTime":3112,"topicId":3110,"numMessagesInTopic":7,"msgSnippet":"... I took the second approach in the implementation of RESTLog. How that extensibility works is explained here: http://wellformedweb.org/RESTLog.cgi/17 ... In","rawEmail":"Return-Path: &lt;joe@...&gt;\r\nX-Sender: joe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 24 Dec 2002 14:22:59 -0000\r\nReceived: (qmail 6282 invoked from network); 24 Dec 2002 14:22:58 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m3.grp.scd.yahoo.com with QMQP; 24 Dec 2002 14:22:58 -0000\r\nReceived: from unknown (HELO scandium.sabren.com) (209.61.155.99)\n  by mta3.grp.scd.yahoo.com with SMTP; 24 Dec 2002 14:22:58 -0000\r\nReceived: from bitworking.org (198-143-226-158.dsl.btitelecom.net [198.143.226.158])\n\t(authenticated (0 bits))\n\tby scandium.sabren.com (8.11.6/8.11.6) with ESMTP id gBOENic25057;\n\tTue, 24 Dec 2002 09:23:44 -0500\r\nMessage-ID: &lt;3E086E85.7080101@...&gt;\r\nDate: Tue, 24 Dec 2002 09:26:13 -0500\r\nUser-Agent: Mozilla/5.0 (Windows; U; WinNT4.0; en-US; rv:1.2.1) Gecko/20021130\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: Duncan Wilcox &lt;duncan@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Future proof\r\nReferences: &lt;D7B5A4B0-1739-11D7-9DD5-003065A278E6@...&gt;\r\nIn-Reply-To: &lt;D7B5A4B0-1739-11D7-9DD5-003065A278E6@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Joe Gregorio &lt;joe@...&gt;\r\nX-Yahoo-Group-Post: member; u=115001042\r\nX-Yahoo-Profile: JCGregorio\r\n\r\nDuncan Wilcox wrote:\n&gt; I have recently been working on a REST interface for a set of services, \n&gt; exchanging mainly service configuration documents.\n&gt; \n&gt; In reading recent blogging about the power of unintended, unexpected \n&gt; use and combination of web resources (as opposed to contractualized \n&gt; RPC), it has occurred to me that I might be &quot;limiting creativity&quot; by \n&gt; how I handle documents.\n&gt; \n&gt; On the PUT of a service configuration expressed as XML, I currently \n&gt; extract the data I know about (or return an error), and store only the \n&gt; valid, known configuration.\n&gt; \n&gt; I remember reading on this list (if I&#39;m not mistaken), that PUT should \n&gt; store the document as is, and you should be able to retrieve the \n&gt; unchanged document through a GET.\n&gt; \n&gt; I suspect that along with a reasonable path design, this is one of the \n&gt; keys to making a REST interface future proof and usable beyond the \n&gt; initial expectations.\n&gt; \n&gt; If this assumption is correct I guess I should fix my interface, \n&gt; however there different problems for different solutions:\n&gt; \n&gt; - always return an error if the document isn&#39;t strictly what I want \n&gt; (i.e. if the XML contains unexpected tags)\n&gt; \n&gt; - return an error only when the subset of the document I currently \n&gt; support isn&#39;t what I want, extract relevant part for service \n&gt; configuration purposes, store the whole document for a later GET\n&gt; \n\nI took the second approach in the implementation of RESTLog.\nHow that extensibility works is explained here:\nhttp://wellformedweb.org/RESTLog.cgi/17\n\n&gt; The rationale for the first solution is to preserve the expectation \n&gt; that you will GET what you PUT, however it also seems to swing the \n&gt; interface towards a rigidly defined RPC direction.\n&gt; \n&gt; Solution 2 would be better, I guess it would allow the user to store \n&gt; her own extra tidbits without ever needing to let me know about it, but \n&gt; it doesn&#39;t seem to be very future proof in that I might want to use \n&gt; portions of the document structure for myself in later versions. In the \n&gt; specific case of configuration documents in XML, there could be \n&gt; conflict of tags, and I&#39;d rather take a monastic approach to the use of \n&gt; XML namespaces (limit their use, that is).\n\nIn this case I am just re-using the work already done in \nusing namespaces in RSS 1.0 and 2.0 which is fairly stable. YMMV.\n\n\t-joe\n\n-- \nhttp://BitWorking.org\nhttp://WellFormedWeb.org\n\n\n"}}