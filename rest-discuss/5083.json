{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic Ferrier","from":"Nic Ferrier &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"2LrvZMR4OsJxEl7gluRkVSbRKqrE2rMSStfEAgbfUcu8h0hBZSSPZpmHEGZB75B4a4O453QC2TddYmDDx2onNnLOm7wkgU9KUHJknm6ja8H4Pg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: transactions with REST","postDate":"1117921681","msgId":5083,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3M2JyeHZsbnkuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","inReplyToHeader":"PDcxOTc4N0ZELUFENTYtNDQyMC05QjE0LTFDMDUzNDAwNDYxOEB0b3BpY21hcHBpbmcuY29tPiAoSmFuIEFsZ2VybWlzc2VuJ3MgbWVzc2FnZSBvZiAiU2F0LCA0IEp1biAyMDA1IDE1OjQwOjAxICswMjAwIik=","referencesHeader":"PDQyQTE3MEQ5LjI3MjY5LjVFQjlFQjZFQGxvY2FsaG9zdD4JPDcxOTc4N0ZELUFENTYtNDQyMC05QjE0LTFDMDUzNDAwNDYxOEB0b3BpY21hcHBpbmcuY29tPg=="},"prevInTopic":5082,"nextInTopic":5088,"prevInTime":5082,"nextInTime":5084,"topicId":4544,"numMessagesInTopic":19,"msgSnippet":"... The system I outlined could be easily made to do distributed transactions. Just allow a GET against /transactions to return the current in progress","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 16501 invoked from network); 4 Jun 2005 21:52:31 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m24.grp.scd.yahoo.com with QMQP; 4 Jun 2005 21:52:31 -0000\r\nReceived: from unknown (HELO owls-tree.tapsellferrier.co.uk) (80.168.156.78)\n  by mta2.grp.scd.yahoo.com with SMTP; 4 Jun 2005 21:52:31 -0000\r\nReceived: from [80.168.156.68] (helo=kanga)\n\tby owls-tree.tapsellferrier.co.uk with esmtp (Exim 4.50 #1 (Debian))\n\tid 1DegUd-0006MY-Fc; Sat, 04 Jun 2005 22:47:47 +0100\r\nReceived: from nferrier by kanga with local (Exim 4.44)\n\tid 1DegUs-0001Or-Ks; Sat, 04 Jun 2005 22:48:02 +0100\r\nTo: Jan Algermissen &lt;jalgermissen@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;42A170D9.27269.5EB9EB6E@localhost&gt;\n\t&lt;719787FD-AD56-4420-9B14-1C0534004618@...&gt;\r\nDate: Sat, 04 Jun 2005 22:48:01 +0100\r\nIn-Reply-To: &lt;719787FD-AD56-4420-9B14-1C0534004618@...&gt; (Jan\n Algermissen&#39;s message of &quot;Sat, 4 Jun 2005 15:40:01 +0200&quot;)\r\nMessage-ID: &lt;873brxvlny.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Nic Ferrier &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Re: transactions with REST\r\nX-Yahoo-Group-Post: member; u=3702469; y=rCyVbw6LJjcIab8RUf3ExqJMuPVLLqdA5c1Loe_jv2PwTJfH5qH8TmZMF-fkaPHUR48\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\nJan Algermissen &lt;jalgermissen@...&gt; writes:\n\n&gt; - if transactions across unrelated systems indeed make sense in a  \n&gt; networked system and how we do them with REST.\n\nThe system I outlined could be easily made to do distributed\ntransactions.\n\nJust allow a GET against /transactions to return the current\nin progress transactions. A discovery protocol if you like.\n\nOnce you know what transaction you want to join in with then you just\nPOST an item into it as I previously described.\n\n\n\nSome of this could be formalized, the list of extant transactions\ncould be defined by DTD or schema, the current state of a transaction\ncould be modeled by a namespace document.\n\nAnyone think that it&#39;s worthwhile specing these out and doing a demo\napp?\n\n\n&gt; BTW: can a single HTTP method call considered to be atomic? If a PUT\n&gt; fails, can I assume that nothing of the operation succeded? Can a\n&gt; POST be partially processed and still return with an error? Or is\n&gt; this allways either/or?\n\nSingle HTTP methods can never be truly atomic because HTTP doesn&#39;t\nnecessarily care about whether you recieve the response or not.\n\nYou can implement the methods to be atomic on the program side.\n\nBut unless you write your own webserver, and write it to be really\nsmart, then you won&#39;t know that the client definitely receieved the\nresponse from your method implementation.\n\n\nIt&#39;s not just implementing a server to roll back the operation\nif the response was not completly transmitted to the client... there\nare no semantics for that. \n\nFor example, if the client gets the status code, and if the status\ncode is an error (so the client knows the operation failed) but the\nclient doesn&#39;t get the rest of the response, is that a failure to\nsend, or not?\n\nThat&#39;s why you need something else on top, to implement transactions\n(well, you do when you need this kind of behaviour).\n\n\nOne of the reasons why I think my suggestion works is that it&#39;s able\nto do 2 phase commit quite well. The final commit can be:\n\n   x = GET ; PUT x ; assert x == GET \n\n\nNic\n\n"}}