{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":323709912,"authorName":"Erik Wilde","from":"Erik Wilde &lt;dret@...&gt;","profile":"drethoo","replyTo":"SENDER","senderId":"BESOwKoy4SwIUYvqgv4Xy5lIiSUMqCuxjPnsULRiuAbRf8SCAet04fK8hnultDobsPEaPh1ENysib3iYPxZPFqSNRx4t","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400625644","msgId":19654,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzN0JEOUVDLjcwMjA2MDNAYmVya2VsZXkuZWR1Pg==","inReplyToHeader":"PDVDMEI3NEJCLTVGRDYtNDZBOC1BMEFGLUJDOERENjg4NDIwM0BnbWFpbC5jb20+","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPiA8NDM3NjcyMTEudGd1TWJqcHJ1aUBmdWNoc2lhPiA8NTM3ODA5QTEuMTA2MDMwN0BiZXJrZWxleS5lZHU+IDwyMDkwNzQ2NS5hT1oyajAzcFRzQGZ1Y2hzaWE+IDw5MDcxNjQxQS0yMzAwLTRENkYtOUY4RC0xRDcxQTk1QkYwNDNAZ21haWwuY29tPiA8NUMwQjc0QkItNUZENi00NkE4LUEwQUYtQkM4REQ2ODg0MjAzQGdtYWlsLmNvbT4="},"prevInTopic":19653,"nextInTopic":19655,"prevInTime":19653,"nextInTime":19655,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"hello philippe. On 2014-05-19, 6:49 , Philippe Marsteau marsteau@gmail.com ... i am not sure how you get to this conclusion. a client subscription to a service","rawEmail":"Return-Path: &lt;dret@...&gt;\r\nX-Sender: dret@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83977 invoked by uid 102); 20 May 2014 22:40:47 -0000\r\nX-Received: from unknown (HELO mtaq6.grp.bf1.yahoo.com) (10.193.84.37)\n  by m7.grp.bf1.yahoo.com with SMTP; 20 May 2014 22:40:47 -0000\r\nX-Received: (qmail 6563 invoked from network); 20 May 2014 22:40:47 -0000\r\nX-Received: from unknown (HELO cm04fe.IST.Berkeley.EDU) (169.229.218.145)\n  by mtaq6.grp.bf1.yahoo.com with SMTP; 20 May 2014 22:40:47 -0000\r\nX-Received: from airbears-136-152-7-105.airbears.berkeley.edu ([136.152.7.105] helo=dretpro.local)\n\tby cm04fe.ist.berkeley.edu with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.76)\n\t(auth plain:dret@...)\n\t(envelope-from &lt;dret@...&gt;)\n\tid 1WmsiC-0001jJ-DV; Tue, 20 May 2014 15:40:45 -0700\r\nMessage-ID: &lt;537BD9EC.7020603@...&gt;\r\nDate: Tue, 20 May 2014 15:40:44 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Thunderbird/24.4.0\r\nMIME-Version: 1.0\r\nTo: Philippe Marsteau &lt;marsteau@...&gt;, \n Hubert A Le Van Gong &lt;hubertlvg@...&gt;\r\nCc: Michael Schuerig &lt;michael.lists@...&gt;, \n rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt; &lt;43767211.tguMbjprui@fuchsia&gt; &lt;537809A1.1060307@...&gt; &lt;20907465.aOZ2j03pTs@fuchsia&gt; &lt;9071641A-2300-4D6F-9F8D-1D71A95BF043@...&gt; &lt;5C0B74BB-5FD6-46A8-A0AF-BC8DD6884203@...&gt;\r\nIn-Reply-To: &lt;5C0B74BB-5FD6-46A8-A0AF-BC8DD6884203@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=323709912; y=vBm6lA-LeIabvtkaZa9qSRZelNunDJ3XzbsWkrJ1IlXHLw\r\nX-Yahoo-Profile: drethoo\r\nFrom: Erik Wilde &lt;dret@...&gt;\r\n\r\nhello philippe.\n\nOn 2014-05-19, 6:49 , Philippe Marsteau marsteau@... \n[rest-discuss] wrote:\n&gt; This being said you certainly can model a pub/sub polling scenario\n&gt; within REST constraints. The pushing scenario however do require state\n&gt; on the server that belongs to client. Because the client determines\n&gt; lifecycle of these &quot;push config&quot; dynamic resources, eg when to delete\n&gt; it, that data need to be kept in sync between machines, and handling*\n&gt; that extra state breaks statelessness of REST (*handling like in\n&gt; auto-expiring subscriptions over time, etc.)\n\ni am not sure how you get to this conclusion. a client subscription to a \nservice is a resource, and yes, when a service has to manage millions of \nclient subscriptions, that is not trivial. but it can be implemented, at \na certain cost, and when you&#39;re willing to do that, then you have those \nsubscriptions available to the service, which can then use them to send \npush notifications. that is now services such as APN or C2DM work. it&#39;s \nRESTful, if you model it in a way that a client POSTs a subscription and \ncan DELETE it when it cancels.\n\n&gt; The other technical pb of pub/sub over HTTP are firewalls or related\n&gt; network issues. It is not uncommon that clients have firewalls in place\n&gt; that let outgoing calls but require IP whitelisting to let calls come\n&gt; in. That further reduces scalability of such model (basically each\n&gt; client must be seen as a server and vice-versa). The clients costs is\n&gt; typically higher than server (clients establish the HTTP connection and\n&gt; close them as appropriate for their use cases). This cost is acceptable\n&gt; because you usually have many clients for one server. If the server had\n&gt; to pay that connection cost (eg to push data), it would be central and\n&gt; all clients would deal with a less responsive server as a result.\n\nyes, for back-end m2m scenarios, URI-based push works. but for pushing \nto mobile devices, it doesn&#39;t, because they are not part of the open \ninternet (i.e., they don&#39;t have a stable public IP address).\n\n&gt; Finally, pub/sub model implies a level of trusts normal HTTP app servers\n&gt; do not need to have. Blindly connecting to any HTTP endpoint opens to\n&gt; security vulnerabilities. The client (subscriber) will typically expect\n&gt; some shared secret or key cert exchange, and the server may not be\n&gt; willing to blindly post data to unknown locations.\n\nyes, pubsub probably requires some level of trust, and may just be the \n&quot;premium&quot; way of getting information from a service. for massive scale \ninformation distribution, pubsub probably really is not a good model, \nbut for some other scenarios, that may be different.\n\ncheers,\n\ndret.\n\n-- \nerik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n            | UC Berkeley  -  School of Information (ISchool) |\n            | http://dret.net/netdret http://twitter.com/dret |\n\n"}}