{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":314380873,"authorName":"Karen","from":"Karen &lt;karen.cravens@...&gt;","profile":"karencravens","replyTo":"SENDER","senderId":"v44RYXO06bF539F-B7cc0oSvh7pw_27Ysela75ACPEt26VlFJMxOQJQODSSw63SZ7oS2m50reL-ODnpPBv6r2hB6RxxCOg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Fun with DELETE","postDate":"1183759295","msgId":9358,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdjYzdjMWNlMDcwNzA2MTUwMWoyNDY4ZjJhOXMzMGE2NjZjZDdiNTM2MjY2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PFc1NTU1MzE3ODgwMTc5MDQxMTgzNzU1NTY2QG1haWwubWFpbHNuYXJlLm5ldD4=","referencesHeader":"PFc1NTU1MzE3ODgwMTc5MDQxMTgzNzU1NTY2QG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9357,"nextInTopic":9359,"prevInTime":9357,"nextInTime":9359,"topicId":8604,"numMessagesInTopic":107,"msgSnippet":"... Before, sure; otherwise the whole notion of POSTing a new resource (to other than a factory) can t work. And you *can* refer to it after, of course,","rawEmail":"Return-Path: &lt;karen.cravens@...&gt;\r\nX-Sender: karen.cravens@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 40098 invoked from network); 6 Jul 2007 22:01:37 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m44.grp.scd.yahoo.com with QMQP; 6 Jul 2007 22:01:37 -0000\r\nReceived: from unknown (HELO wa-out-1112.google.com) (209.85.146.179)\n  by mta14.grp.scd.yahoo.com with SMTP; 6 Jul 2007 22:01:36 -0000\r\nReceived: by wa-out-1112.google.com with SMTP id k40so476076wah\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Jul 2007 15:01:36 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=RHx0l1yFFS167iPFljMIKUdOgNrRU3WgAJ+PO3WIp2iRIJoP63pabyW1QD7hFmSKUMDUFLGMTsFds/iDpbxPZCoAns6COUBd+SNYsfQbt8HR0VGIJQ921DBCb30p/UvSWUlTa2asV+FhDaprCpeMjV8Y93wYk+WkFt3lctG7Hig=\r\nReceived: by 10.115.106.7 with SMTP id i7mr1055097wam.1183759295123;\n        Fri, 06 Jul 2007 15:01:35 -0700 (PDT)\r\nReceived: by 10.114.108.10 with HTTP; Fri, 6 Jul 2007 15:01:35 -0700 (PDT)\r\nMessage-ID: &lt;7cc7c1ce0707061501j2468f2a9s30a666cd7b536266@...&gt;\r\nDate: Fri, 6 Jul 2007 17:01:35 -0500\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;W5555317880179041183755566@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;W5555317880179041183755566@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Karen &lt;karen.cravens@...&gt;\r\nSubject: Re: [rest-discuss] Re: Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=314380873; y=Juw-VLIjZh-S3Mef2NB5XtuJFL-5kdmBodwUXqHyy6wA22dNpk83\r\nX-Yahoo-Profile: karencravens\r\n\r\nOn 7/6/07, Eric J. Bowman &lt;eric@...&gt; wrote:\n\n&gt; &quot;A resource can map to the empty set, which allows references to be made\n&gt; to a concept before any realization of that concept exists...&quot;\n\n&quot;Before,&quot; sure; otherwise the whole notion of POSTing a new resource\n(to other than a factory) can&#39;t work. And you *can* refer to it after,\nof course, otherwise there wouldn&#39;t be a 404/410/etc. distinction at\nall.\n\nBut actually, I meant explain what the distinction was in your app.\nThat is, your reasoning for needing both 404 and 410 - what it does\nfor the client.\n\n&gt; The 410 response after one DELETE on my server indicates that the\n&gt; resource &quot;used to exist&quot;, not that the file is zero bytes -- that\n&gt; information is opaque to the client.  The zero-byte thing is just my\n&gt; implementation, it certainly doesn&#39;t redefine the 410 response as\n&gt; meaning anything about the status of the source file.  The 410\n&gt; representation is merely a status code informing the client that the\n&gt; resource &quot;used to exist&quot;.\n\nOkay, that&#39;s what I was questioning: at some point in the discussion,\nthe 404/410 got reversed, and I was trying to figure out why you&#39;d\nwant to go 200-&gt;404-&gt;410. 200-&gt;410-&gt;404 makes more sense (though I&#39;m\nstill curious as to why, on a practical level, you need the\ndistinction).\n\n&gt; Which makes my analogy fail why, exactly?  DELETE imposes no\n&gt; requirement on server behavior.  As the server implementer I am free\n&gt; to move the source file, delete the source file, &quot;mark&quot; the source\n&gt; file or implement some sort of lookup table bearing no relation to\n&gt; the source file, and I am free to decide whether to use 404, 410 or\n&gt; both over time to indicate a successful DELETE.\n\nI mean that the &quot;mark&quot; isn&#39;t really a system-level deletion, but a\nfiction imposed by Windows Explorer or whomever. (I could be wrong; I\nhaven&#39;t groveled in the Windows filesystem and hope never to have to.\nBut that&#39;s what it looks like to me.)\n\n&gt; Sorry, but if your PUT results in a subsequent GET returning a 404\n&gt; or a 410 response then you have still broken the uniform interface\n&gt; constraint of REST by defining PUT as &quot;move&quot; or &quot;remove&quot; instead of\n&gt; &quot;replace&quot;.\n\nI&#39;m not sure I agree. Otherwise, you have to deal with the whole\nexpiry issue I mentioned, and all of the similar cases where PUT (or\neven POST) can directly result in a 4xx response. Perhaps you changed\nthe access level, and now unauthorized people get a 404 because the\nserver doesn&#39;t want to admit the existence of a top-secret file - that\nstill doesn&#39;t mean REST is broken if you don&#39;t use a DELETE to get it\nthere. Indeed, you could look at the deletion flag as an authorization\nissue: if the resource is merely flagged for deletion, it might well\nreturn 410 or 404 for unauthorized people, but administrators could\nstill see, and thus choose to undelete, the resource.\n\nI&#39;m not saying the way you&#39;re wanting to do it isn&#39;t workable, and I\ndon&#39;t think I&#39;m qualified to judge if it&#39;s RESTful or not. I&#39;m just\nsaying it isn&#39;t the only way to do it (Perl programmers are like\nthat).\n\n"}}