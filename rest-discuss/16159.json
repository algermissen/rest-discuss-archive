{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"JKx_b0-orUEFHtA94t_rhpgph9oYbvaSzMG-3zYRKCWdg1XqokHSucfqOXqTBfX3iTwGwIXHoNO_niGD1wQVBOX3NtEpHChx5JmiYgN_Bw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281041651","msgId":16159,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODA1MTQ1NDExLjk4YWNmODQyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwODA1MTQzNTIwLjQwYjdkODE4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+CTwyMDEwMDgwNTE0MzUyMC40MGI3ZDgxOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":16158,"nextInTopic":16160,"prevInTime":16158,"nextInTime":16160,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"What s important to remember here, is the importance of the initial GET or HEAD request.  REST APIs which just know how to pop a stack are not hypertext","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4394 invoked from network); 5 Aug 2010 20:54:25 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.sp2.yahoo.com with QMQP; 5 Aug 2010 20:54:25 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 5 Aug 2010 20:54:25 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 379B2509E3;\n\tThu,  5 Aug 2010 16:54:24 -0400 (EDT)\r\nDate: Thu, 5 Aug 2010 14:54:11 -0600\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: juergen.brendel@..., rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100805145411.98acf842.eric@...&gt;\r\nIn-Reply-To: &lt;20100805143520.40b7d818.eric@...&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\n\t&lt;20100805143520.40b7d818.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nWhat&#39;s important to remember here, is the importance of the initial GET\nor HEAD request.  &quot;REST&quot; APIs which &quot;just know&quot; how to pop a stack are\nnot hypertext driven.  Whereas, say, Xforms allows you to define a\nbutton, let&#39;s label it &#39;pop&#39;.  When the user selects &#39;pop&#39; as the state\ntransition, hypertext informs the user agent to fetch an Etag with\nHEAD, then uses that Etag to make a conditional request.\n\nThere&#39;s nothing wrong with a user pressing a form button, and having it\ntrigger a series of requests; instead of requiring the user to first\nselect the item to pop, then confirm the pop.  The user expressed a\ndesire to initiate the pop, hypertext made it happen, the next\napplication steady-state is just a successful retrieval operation with\nside effects... erm... oops!!!\n\nWhich, come to think of it, suggests that GET is the proper method;\nagain, make it If-Match.  Making n If-Match GET requests will always\nyield the same result:  either no match, or a one-time pop.  The one\nthing we can&#39;t have, is subsequent GET requests activating the pop --\nthat violates the idempotency of GET, but only on unconditional GET, so\ndon&#39;t do the pop unless the Etag matches.\n\nThere still needs to be an initial GET or HEAD request for the Etag.\n\nThere is nothing wrong, IMO, with a GET causing a resource to be\nremoved.  The client can&#39;t be held accountable because the client didn&#39;t\nrequest such removal -- the user requested a representation of some\nother resource, and that&#39;s exactly what the user agent retrieved.\n\nAllowing unconditional requests would yield undesirable results. Those\ncaveats aside, go for it. Unless I&#39;m wrong, I&#39;m not fully confident of\neither the POST or GET approach, and suspect that modelling the\nresources differently might yield more elegant results if I were to\nthink it through more carefully.\n\n-Eric\n\n"}}