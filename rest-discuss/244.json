{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"JC-7L_K7Rk8nZURjTMcglvNvBJBDj1sxt0LWH5dWDq6RR8gWX2JpjeLjAFtAECroHYAyAhvBSCl7kXFDjlaQ_RBpdylNSQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011917049","msgId":244,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTBBMEY5LjNCQ0M3QUE3QHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTYwMjA3MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":243,"nextInTopic":247,"prevInTime":243,"nextInTime":245,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... Yeah, that s what I heard Google did. ;) ... PUT/POST/DELETE/GET are primitives. You build things on top of them. Like CPU instructions. Modern CPUs don t","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 25 Jan 2002 00:22:12 -0000\r\nReceived: (qmail 34898 invoked from network); 25 Jan 2002 00:05:07 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m6.grp.snv.yahoo.com with QMQP; 25 Jan 2002 00:05:07 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 25 Jan 2002 00:05:07 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0P054110056\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 16:05:04 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0P053e32117\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 16:05:03 -0800\r\nMessage-ID: &lt;3C50A0F9.3BCC7AA7@...&gt;\r\nDate: Thu, 24 Jan 2002 16:04:09 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nReferences: &lt;Pine.WNT.4.43.0201241602070.1892-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; Hmm.  This is a start, but:\n&gt; * If HTTP is centered on read/write and I want\n&gt; find, then perhaps I want a different protocol.\n\nYeah, that&#39;s what I heard Google did. ;)\n\n&gt; But, then why does the URI spec have a query\n&gt; string?  It feels like we are now hacking around\n&gt; either the inadequacies of HTTP or the\n&gt; inadequacies of REST.\n\nPUT/POST/DELETE/GET are primitives. You build things on top of them.\nLike CPU instructions. Modern CPUs don&#39;t have an evaluate polynomial\ninstruction. It was found that it was really expensive to have\ninstructions that catered only to one kind of problem or another. RPCs\nare like that.\n\n&gt; * I think you would PUT rather than POST the\n&gt; images (you are not appending to anything)\n\nI believe PUT is only good if the client already has an address to PUT\nthe thing. If not, then yes you are creating something and the new thing\nis considered a &quot;sub-resource&quot; (appendage) of the old thing.\n\n&gt; * either PUT or POST is bad, because the server\n&gt; now needs to maintain a copy of the results for\n&gt; some indeterminate period of time -- which is\n&gt; ugly.\n\nPUT or POST do not require this, really, but maintaing the data is good\nfor caching and it is more polite in my opinion to send the client a URL\nthan the data. What if it is a handheld computer? If they want all of\nthe data they should be able to get it but if they want only a link then\nthe server should be willing to serve it for a while.\n\n&gt; * if processing the request takes a while, the\n&gt; client has to keep polling the GET url until it\n&gt; gets a response -- which is also ugly.\n\nIf it wants to poll it can do so. Otherwise it can ask for a\nnotification. \n\n&gt;...\n&gt; That being said, if we want to expose the\n&gt; application to web browsers, the correct answer is\n&gt; for the server to handle multipart/form-data, and\n&gt; either respond with the answer, or response with a\n&gt; form asking where the answer should be delivered.\n\nMore or less my design also. And inventing a new protocol to do this\nwould have only made your life harder. Working with sockets. No caching.\nCan&#39;t use PHP, Zope or JSP. Can&#39;t use web browsers. Would require a\n&quot;client library&quot; for each language. Etc. Etc.\n\n Paul Prescod\n\n"}}