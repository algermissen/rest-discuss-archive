{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":265185497,"authorName":"Jérôme Louvel","from":"=?iso-8859-1?B?Suly9G1lIExvdXZlbA==?= &lt;contact@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"-8RS4nZ58cjiKfaiiiRmurzrwcOVOT4xuYIDgEIC30bDd5NxoD_ApZcAfnY-WD5XmKN9m7ka5TlWxkMqR_E55ZdWNlWgqrgjDLQ9CB_tWBpjbgJsiWKHhWy_1n_RdB0nVQY","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Another potential problem with the 311 proposal","postDate":"1171552427","msgId":7876,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVyMXRiYitqdnM1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ1RDQ3MUE3LjgwMjAyMDJAbWV0YWxhYi51bmMuZWR1Pg=="},"prevInTopic":7875,"nextInTopic":7877,"prevInTime":7875,"nextInTime":7877,"topicId":7871,"numMessagesInTopic":23,"msgSnippet":"Elliotte, Interoperability between clients and servers at the wire level is different from consistency between client-side and server-side API design,","rawEmail":"Return-Path: &lt;contact@...&gt;\r\nX-Sender: contact@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67180 invoked from network); 15 Feb 2007 15:15:15 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m47.grp.scd.yahoo.com with QMQP; 15 Feb 2007 15:15:15 -0000\r\nReceived: from unknown (HELO n32c.bullet.scd.yahoo.com) (66.94.237.10)\n  by mta7.grp.scd.yahoo.com with SMTP; 15 Feb 2007 15:15:14 -0000\r\nReceived: from [66.218.69.2] by n32.bullet.scd.yahoo.com with NNFMP; 15 Feb 2007 15:13:47 -0000\r\nReceived: from [66.218.66.74] by t2.bullet.scd.yahoo.com with NNFMP; 15 Feb 2007 15:13:47 -0000\r\nDate: Thu, 15 Feb 2007 15:13:47 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;er1tbb+jvs5@...&gt;\r\nIn-Reply-To: &lt;45D471A7.8020202@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: =?iso-8859-1?B?Suly9G1lIExvdXZlbA==?= &lt;contact@...&gt;\r\nSubject: Re: Another potential problem with the 311 proposal\r\nX-Yahoo-Group-Post: member; u=265185497; y=sQE9LnGoJjhNVtNGbp99nThXBy0pLptrifnXli1_BHY89Xcoa91Yig\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\n\nElliotte,\n\nInteroperability between clients and servers at the wire level =\r\nis\ndifferent from consistency between client-side and server-side API\ndesig=\r\nn, especially when several implementations of the same API are\nexpected. In=\r\n our case (RESTful Web services API), the common\ndenominator should be all =\r\nof HTTP 1.1 and just HTTP 1.1.\n\nI don&#39;t think it would be wise to include a=\r\nny kind of object\nserialization to/from XML in such API if that is your con=\r\ncern. We\ndon&#39;t want to fall into WS-* interop issues as you correctly point=\r\n.\n\n&gt; Consider a Representation class, for example. The server sends a \n&gt; re=\r\npresentation and the client receives it, so it should be appropriate \n&gt; for=\r\n them to use the same class to model it, right? Actually no. The \n&gt; client =\r\nand server have different views of this object. For instance the \n&gt; server =\r\nis probably going to want some sort of pointer back to the\nactual \n&gt; resour=\r\nce from which the representation is derived while the client \n&gt; should not =\r\nsee any such pointer. \n\nTalking about the Restlet&#39;s Representation class, i=\r\nt doesn&#39;t contain\nany reference to the parent Resource, so that is not an i=\r\nssue for us.\nWe never had an user complaining about this design choice. \n\n&gt;=\r\n Furthermore, the client needs a way to get a byte array or\nInputStream for=\r\n the message body in the Representation. The server\nneeds a way to set the =\r\nbyte array or get an \n&gt; OutputStream for the message body. If you try to ge=\r\nt away with one \n&gt; Representation class, then each side will have methods i=\r\nt doesn&#39;t need.\n\nIn our case, we designed the Representation class like a C=\r\nontent (or\nlike an HTTP entity if you prefer) that can be either written to=\r\n an\nOutputStream (or to an NIO WritableByteChannel) or read by getting an\nI=\r\nnputStream (or an NIO ReadableByteChannel). We have several abstract\nimplem=\r\nentations that can let you automatically convert from one IO\nmode to anothe=\r\nr. Have a look at this hierarchy diagram:\nhttp://www.restlet.org/tutorial#c=\r\nonclusion\n\nCheck also the Javadocs of the org.restlet.resource package:\nhtt=\r\np://www.restlet.org/docs/api/org/restlet/resource/package-summary.html\n\nBes=\r\nt regards,\nJerome\n\n\n\n"}}