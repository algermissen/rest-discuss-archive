{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":364579677,"authorName":"Mike","from":"Mike &lt;mike@...&gt;","profile":"pleb1985","replyTo":"SENDER","senderId":"HRR3FBg2rNNKcq9ZpYwoFCiQzB7jU8ivTyuzhYWMSgxqwG2Ibi16ucvro44wRXvoOBV4KwJKuHclaMh_FAo9Kg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers","postDate":"1227807390","msgId":11630,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MkVEQTlFLjkwMDAyMDRAbXlrYW5qby5jby51az4=","inReplyToHeader":"PDQ5MkVDRDE4LjIwMTAwQGhhY2tjcmFmdC5uZXQ+","referencesHeader":"PFAtSVJDLUVYQkUwMmRqYVMzNkkwMDAwMjk3ZUBFWC5VQ09QLkVEVT4gPDQ5MkU3NEFFLjYwMzA2MDFAbXlrYW5qby5jby51az4gPDQ5MkU3RUU1LjMwMDAyMDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkU4NDVDLjMwMzAwMDBAbXlrYW5qby5jby51az4gPDQ5MkU5NzZELjQwMzA0QGhhY2tjcmFmdC5uZXQ+IDw0OTJFQTJBQy4zMDUwOTA2QG15a2Fuam8uY28udWs+IDxCTFUxMDItRFMyMEUwNzM3NTUxMTU0MjM3Qzk5REVCNTA1MEBwaHguZ2JsPiA8NDkyRUI0MkQuNTA5MDgwNEBteWthbmpvLmNvLnVrPiA8NDkyRUI2RjEuMTAzMDkwMUBoYWNrY3JhZnQubmV0PiA8NDkyRUI4MEMuMzAyMDYwMkBteWthbmpvLmNvLnVrPiA8NDkyRUJCRjMuMzA5MDVAaGFja2NyYWZ0Lm5ldD4gPDQ5MkVCRkQyLjkwMjA2MDlAbXlrYW5qby5jby51az4gPDQ5MkVDMjA0LjIwMDAyMDhAaGFja2NyYWZ0Lm5ldD4gPDQ5MkVDNzNELjQwNDA4MDVAbXlrYW5qby5jby51az4gPDQ5MkVDRDE4LjIwMTAwQGhhY2tjcmFmdC5uZXQ+"},"prevInTopic":11629,"nextInTopic":11631,"prevInTime":11629,"nextInTime":11631,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... If your REST interface is the only interface that you provide for your application then I don t see how or why contact could occur without passing through","rawEmail":"Return-Path: &lt;mike@...&gt;\r\nX-Sender: mike@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83018 invoked from network); 27 Nov 2008 17:36:07 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m57.grp.scd.yahoo.com with QMQP; 27 Nov 2008 17:36:07 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.187)\n  by mta18.grp.scd.yahoo.com with SMTP; 27 Nov 2008 17:36:07 -0000\r\nX-Received: from [192.168.10.13] (evojsyfw02.evolve-online.com [213.133.221.98])\n\tby mrelayeu.kundenserver.de (node=mrelayeu5) with ESMTP (Nemesis)\n\tid 0ML25U-1L5kmV48cd-0003Ds; Thu, 27 Nov 2008 18:36:00 +0100\r\nMessage-ID: &lt;492EDA9E.9000204@...&gt;\r\nDate: Thu, 27 Nov 2008 17:36:30 +0000\r\nUser-Agent: Thunderbird 2.0.0.17 (X11/20080925)\r\nMIME-Version: 1.0\r\nTo: Jon Hanna &lt;jon@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;P-IRC-EXBE02djaS36I0000297e@...&gt; &lt;492E74AE.6030601@...&gt; &lt;492E7EE5.3000201@...&gt; &lt;492E845C.3030000@...&gt; &lt;492E976D.40304@...&gt; &lt;492EA2AC.3050906@...&gt; &lt;BLU102-DS20E0737551154237C99DEB5050@...&gt; &lt;492EB42D.5090804@...&gt; &lt;492EB6F1.1030901@...&gt; &lt;492EB80C.3020602@...&gt; &lt;492EBBF3.30905@...&gt; &lt;492EBFD2.9020609@...&gt; &lt;492EC204.2000208@...&gt; &lt;492EC73D.4040805@...&gt; &lt;492ECD18.20100@...&gt;\r\nIn-Reply-To: &lt;492ECD18.20100@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: V01U2FsdGVkX18EmtVgz+0gjaEZzr05XYomIFXA/RdWdg8C/IS\n R3eDA/zkPBNRdbWKQ/iLX7CQSB2L8nDgDzHQPRPSxqjI+0SdzY\n Ne3v1sYF5SIekJBKMRLPkavACNuDTIx\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mike &lt;mike@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=364579677; y=dOqZYHEiDhLMsCCwSOmfNRY4BCGvcc_pBSveJpvPJ_gEp5w\r\nX-Yahoo-Profile: pleb1985\r\n\r\nJon Hanna wrote:\n&gt; Mike wrote:\n&gt;   \n&gt;&gt; I&#39;m talking about intermediaries (e.g. reverse proxys) on the server side.\n&gt;&gt;     \n&gt;\n&gt; Which are still intermediaries. Even a proxy that is a single point of \n&gt; contact with the web either has to deal with non-web based changes (even \n&gt; if they theoretically should never happen, in reality they almost \n&gt; certainly will) and other side-effects beyond the resource referenced, \n&gt; or else they are highly application-aware, and hence no longer just web \n&gt; proxies.\n\nIf your REST interface is the only interface that you provide for your \napplication then I don&#39;t see how or why contact could occur without \npassing through the proxy.\n\nI did say &#39;intermediaries&#39; and not &#39;just web proxies&#39;.\n\n&gt;\n&gt;   \n&gt;&gt; In my system, I have:\n&gt;&gt;\n&gt;&gt; /document\n&gt;&gt;\n&gt;&gt; serving representations:\n&gt;&gt;\n&gt;&gt; text/plain\n&gt;&gt; text/html\n&gt;&gt; application/xml\n&gt;&gt;\n&gt;&gt; Each of which can be cached separately. A client can then:\n&gt;&gt;\n&gt;&gt; PUT /document\n&gt;&gt;\n&gt;&gt; It is completely clear to the reverse proxy in front of my application \n&gt;&gt; that all the representations need to be re-cached. This can be assumed \n&gt;&gt; and work automatically out of the box.\n&gt;&gt;\n&gt;&gt; In your system, you have:\n&gt;&gt;\n&gt;&gt; /document.txt\n&gt;&gt; /document.html\n&gt;&gt; /document.xml\n&gt;&gt;\n&gt;&gt; If a client:\n&gt;&gt;\n&gt;&gt; PUT /document.xml\n&gt;&gt;\n&gt;&gt; How is a reverse proxy in front of your application supposed to know \n&gt;&gt; whether the other URI&#39;s need to be re-cached? Won&#39;t you have to spend \n&gt;&gt; time explaining to the proxy how the URIs are related?\n&gt;&gt;     \n&gt;\n&gt; In my system I have\n&gt;\n&gt; /document\n&gt;\n&gt; serving representations:\n&gt;\n&gt; text/plain\n&gt; text/html\n&gt; application/xml\n&gt;\n&gt; The case of someone asking for just text/plain, just text/html or just \n&gt; application/xml is clear.\n&gt;\n&gt; The case of someone asking for preferences which include just one of \n&gt; those along with content types I do not serve and/or with */* is clear.\n&gt;\n&gt; The case of someone asking for preference lists of two or more of those \n&gt; (perhaps along with */*, perhaps not) is handled according to a \n&gt; combination of the client&#39;s weighting of the preferences along with the \n&gt; server&#39;s weighting of their relative quality.\n&gt;\n&gt; The case of someone asking for only content-types that do not exist may \n&gt; be dealt with either a 200 and one of the types anyway (suitable for \n&gt; some applications) or with a 406 with an entity linking to the:\n&gt;\n&gt; /document.txt\n&gt; /document.html\n&gt; /document.xml\n&gt;   \n\nYou haven&#39;t explained why it&#39;s necessary to have these URIs in place to \ndeal with this.\n\nWhy would you not just return a list of the available content types?\n\n&quot;10.4.7 406 Not Acceptable\n\nThe resource identified by the request is only capable of generating \nresponse entities which have content characteristics not acceptable \naccording to the accept headers sent in the request.\n\nUnless it was a HEAD request, the response SHOULD include an entity \ncontaining a list of available entity characteristics and location from \nwhich the user or user agent can choose the one most appropriate.&quot;\n\npresumably &#39;entity characteristics&#39; could refer to available content types?\n&gt; Now. If someone decides to PUT to /document.txt I am likely to do one of \n&gt; the four following things:\n&gt;\n&gt; 1. Not let them (not everyone can PUT everywhere after all).\n&gt;\n&gt; 2. a. Accept /document.txt, with the understanding that this represents \n&gt; solely the one representation of the resource /document. (E.g. if my \n&gt; system is actually intended to let people edit different representations \n&gt; separately this may be precisely what is wanted).\n&gt;   \n\nIf the intention is to &#39;let people edit different representations \nseparately&#39; then they aren&#39;t different *representations*; they&#39;re \ndifferent *resources* and they *should* have different URIs, surely?\n\n&gt; b. Update /document.txt and metadata for /document.txt.\n&gt; c. Update any related documents, and update the metadata for them. This \n&gt; means that any freshness checks for those related documents will reflect \n&gt; a change.\n&gt;\n&gt; 3 a. Accept /document.txt, with the understanding that this change \n&gt; represents not just a change to the resource /document.txt but also the \n&gt; resource /document.\n&gt; b. Update /document and all the related resources.\n&gt; c. Update any related documents, and update the metadata for them. This \n&gt; means that any freshness checks for those related documents will reflect \n&gt; a change.\n&gt;\n&gt; 4 a. 307 to /document\n&gt; b. Accept text/plain entity at /document\n&gt; c. Update /document and all the related resources.\n&gt; d. Update any related documents, and update the metadata for them. This \n&gt; means that any freshness checks for those related documents will reflect \n&gt; a change.\n&gt;\n&gt; Now. In each and every one of those cases intermediaries will function \n&gt; fine. If they try to GET any of the resources affected they will do so \n&gt; on the basis of freshness information set by the server and \n&gt; freshness-required information sent by the client. If either the client \n&gt; insist that the information must be checked for freshness or the server \n&gt; has indicated that future requests much be checked for freshness (or \n&gt; both) then a conditional GET will find that the updated resources have \n&gt; been updated and the un-updated resources haven&#39;t.\n&gt;\n&gt; Perfect.\nI don&#39;t know about perfect, it seems a little long winded compared to my \nsolution which can update all of the representations on the backend \nwithout having to send an update for each representation back through \nthe proxy (I assume that was what you meant??).\n\nAdding a new representation is an interesting use case; seems like a lot \nmore work with your solution.\n\nI still don&#39;t understand the benefit or necessity of adding these extra \nURIs - other than the obvious; that you can&#39;t negotiate in browsers any \nother way at the moment.\n\nRegards,\nMike\n\n"}}