{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":203744831,"authorName":"Justin Sampson","from":"Justin Sampson &lt;justin@...&gt;","profile":"justin_t_sampson","replyTo":"SENDER","senderId":"VvQQR5mRM3loR6VyYlV0OJLHxS6TgRBnN3D77OXCwxgqwvEgE2iS5sepmpGXB43sQVddVA-XgDgK9QNpI7fJu0FapB-EyD_cyPs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] coding question","postDate":"1113151015","msgId":4993,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuTE5YLjQuNDQuMDUwNDEwMDgzNTAwMS40NDM3LTEwMDAwMEBuZW90ZXJyYS5jb20+","inReplyToHeader":"PFBpbmUuTkVCLjQuNjIuMDUwNDA5MDExMDE3MC4yODgwOUBwYW5peDIucGFuaXguY29tPg=="},"prevInTopic":4992,"nextInTopic":4994,"prevInTime":4992,"nextInTime":4994,"topicId":4983,"numMessagesInTopic":14,"msgSnippet":"... I recommend the book The Four Agreements, by Don Miguel Ruiz. :) Anyway, the points I was trying unsuccesfully to make were (a) that the code you posted","rawEmail":"Return-Path: &lt;justin@...&gt;\r\nX-Sender: justin@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 89580 invoked from network); 10 Apr 2005 17:29:23 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m28.grp.scd.yahoo.com with QMQP; 10 Apr 2005 17:29:23 -0000\r\nReceived: from unknown (HELO neoterra.com) (66.166.16.35)\n  by mta2.grp.scd.yahoo.com with SMTP; 10 Apr 2005 17:29:23 -0000\r\nReceived: from localhost (justin_krasama@localhost)\n\tby neoterra.com (8.12.5/8.11.6) with ESMTP id j3AGatsh004654\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun, 10 Apr 2005 09:36:59 -0700\r\nDate: Sun, 10 Apr 2005 09:36:55 -0700 (PDT)\r\nX-X-Sender: justin_krasama@...\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;Pine.NEB.4.62.0504090110170.28809@...&gt;\r\nMessage-ID: &lt;Pine.LNX.4.44.0504100835001.4437-100000@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Justin Sampson &lt;justin@...&gt;\r\nSubject: Re: [rest-discuss] coding question\r\nX-Yahoo-Group-Post: member; u=203744831\r\nX-Yahoo-Profile: justin_t_sampson\r\n\r\nOn Sat, 9 Apr 2005, Lucas Gonze wrote:\n\n&gt; &gt; On Fri, 8 Apr 2005, Lucas Gonze wrote:\n&gt; &gt;\n&gt; &gt; &gt; What sort of idioms are other people using? How do you keep the\n&gt; &gt; &gt; nesting under control?\n&gt; \n&gt; On Sat, 9 Apr 2005, Justin Sampson wrote:\n&gt;\n&gt; &gt; I recommend the book Refactoring, by Martin Fowler.\n&gt; ...\n&gt; &gt; I recommend the book Test-Driven Development, by Kent Beck.\n&gt;\n&gt; You need to learn many things before you understand how immature these\n&gt; comments are. On a formal level, you need to learn enough about code\n&gt; factoring and test-driven development to speak in your own words.  \n&gt; Probably this is just a matter of experience. On an intellectual level,\n&gt; you need to understand how communities of practice accomplish so much.  \n&gt; As a hacker, you need to to learn how the development process works.\n\nI recommend the book The Four Agreements, by Don Miguel Ruiz. :)\n\nAnyway, the points I was trying unsuccesfully to make were (a) that the\ncode you posted has some obvious smells, such as the deep nesting you\nmentioned as well as code duplication, which are where I would start; and\n(b) that while regular expressions can get ugly, they are very easy to\ntest, so writing broken regular expressions need not be a concern (though\nwriting *readable* regular expressions is of course another matter).\n\nFor (a), at least try extracting each case as its own method. That should\nsuggest further refactorings, such as turning each method into a &quot;method\nobject&quot; to allow getting rid of the duplication between the cases through\ninheritance or composition. I hesitated to go into more detail simply\nbecause my own preference is to evolve the code freshly. As your subject\nsuggested, this is a coding question; it can be answered by\ngenerally-applicable coding techniques.\n\nThe last time I did this (www.newedu.com) we ended up with an object\ncalled Triage that would look at a prefix of the URL path and delegate to\none of four or five Zone objects, which would each have a big if-else\nstatement looking at the path in more detail. Each Zone would have maybe\nup to a dozen cases, but since each case contained only a single statement\nthey were quite readable. (By the way, I find that keeping everything in\nthe source language is preferable to pulling stuff out to a declarative\ntext file; it allows much easier browsing, testing, and refactoring.)\n\nFor parsing the path, we had an object called PathMatcher that provided a\nsimple pattern language that it internally translated into regular\nexpressions. Specifically, &quot;@&quot; was a numerical unique identifier, &quot;#&quot; was\nan ordinal number, &quot;$&quot; was a single path component (without slashes), &quot;*&quot;\nwas multiple path components, and &quot;...&quot; was an ignored suffix.\n\nFor example, Triage would use the pattern &quot;/directory/...&quot; to dispatch to\nDirectoryZone, where the pattern &quot;/directory/*/&quot; would match a particular\ntopic in the hierarchical directory. Likewise, Triage would use the\npattern &quot;/lesson/...&quot; to dispatch to LessonZone, where &quot;/lesson/@/#&quot; would\nmatch a particular page (#) of a particular lesson (@).\n\n(If you look at the site, it&#39;s a little empty right now, but \nhttp://www.newedu.com/directory/sports_and_recreation/pet_training/ has \nsome good lessons.)\n\nCheers,\nJustin\n\n\n"}}