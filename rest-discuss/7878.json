{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":67464514,"authorName":"Marc Hadley","from":"Marc Hadley &lt;hadley@...&gt;","profile":"marc_hadley","replyTo":"SENDER","senderId":"6HzmOQaG9cgUhjbkSy8J8wxNWkzDfK1XuEZ3RCXyy7Y0hs1S5AxBtPI1S_Xp1_8C552mz2iBM9cq8VRne5Dn-EIOcg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Sun proposes to apply Web service standardization principles to REST","postDate":"1171553874","msgId":7878,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJDQjg5RjRDLTczMDgtNERBOC04Mzg3LTU2MENGRkM0Qzc5NEBTdW4uQ09NPg==","inReplyToHeader":"PDlkYzc4ZDdiMDcwMjE1MDMxMHYxN2I2OWZiY25kYWQyMDRiZGFjNWY0MTQ2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ1RDMyMzE5LjQwNTA2MDNAbWV0YWxhYi51bmMuZWR1PiA8ZXF2djhxKzI4dmlAZUdyb3Vwcy5jb20+IDw5ZGM3OGQ3YjA3MDIxNTAzMTB2MTdiNjlmYmNuZGFkMjA0YmRhYzVmNDE0NkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":7872,"nextInTopic":7879,"prevInTime":7877,"nextInTime":7879,"topicId":7830,"numMessagesInTopic":53,"msgSnippet":"Hi Steve, You raise some interesting points, detailed discussion of which really belong in the expert group once it is formed. For now I ll take a shot at some","rawEmail":"Return-Path: &lt;Marc.Hadley@...&gt;\r\nX-Sender: Marc.Hadley@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 11766 invoked from network); 15 Feb 2007 15:38:22 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m44.grp.scd.yahoo.com with QMQP; 15 Feb 2007 15:38:22 -0000\r\nReceived: from unknown (HELO brmea-mail-4.sun.com) (192.18.98.36)\n  by mta11.grp.scd.yahoo.com with SMTP; 15 Feb 2007 15:38:22 -0000\r\nReceived: from fe-amer-02.sun.com ([192.18.108.176])\n\tby brmea-mail-4.sun.com (8.13.6+Sun/8.12.9) with ESMTP id l1FFbvjl029785\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 15 Feb 2007 08:37:57 -0700 (MST)\r\nReceived: from conversion-daemon.mail-amer.sun.com by mail-amer.sun.com\n (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))\n id &lt;0JDI00C01GQ6YZ00@...&gt;\n (original mail from Marc.Hadley@...) for rest-discuss@yahoogroups.com;\n Thu, 15 Feb 2007 08:37:57 -0700 (MST)\r\nReceived: from [192.168.0.200] ([68.116.196.215])\n by mail-amer.sun.com (Sun Java System Messaging Server 6.2-6.01 (built Apr  3\n 2006)) with ESMTPSA id &lt;0JDI00HGDGR85M05@...&gt;; Thu,\n 15 Feb 2007 08:37:57 -0700 (MST)\r\nDate: Thu, 15 Feb 2007 10:37:54 -0500\r\nIn-reply-to: &lt;9dc78d7b0702150310v17b69fbcndad204bdac5f4146@...&gt;\r\nTo: Steve Loughran &lt;steve.loughran.soapbuilders@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Don Box &lt;dbox@...&gt;,\n        savasp@...\r\nMessage-id: &lt;2CB89F4C-7308-4DA8-8387-560CFFC4C794@...&gt;\r\nMIME-version: 1.0\r\nX-Mailer: Apple Mail (2.752.2)\r\nContent-type: multipart/signed; protocol=&quot;application/pkcs7-signature&quot;;\n boundary=Apple-Mail-8--26853057; micalg=sha1\r\nReferences: &lt;45D32319.4050603@...&gt; &lt;eqvv8q+28vi@...&gt;\n &lt;9dc78d7b0702150310v17b69fbcndad204bdac5f4146@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nX-eGroups-From: Marc Hadley &lt;Marc.Hadley@...&gt;\r\nFrom: Marc Hadley &lt;hadley@...&gt;\r\nSubject: Re: [rest-discuss] Re: Sun proposes to apply Web service\n standardization principles to REST\r\nX-Yahoo-Group-Post: member; u=67464514; y=y4rQR5IPP8cY0hV0LIigmDvyPM_kzjxAshr4j9C5ZzwsF6f-1SQ\r\nX-Yahoo-Profile: marc_hadley\r\n\r\n\r\n--Apple-Mail-8--26853057\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\nHi Steve,\n\nYou raise some interesting points, detailed discussion of which  \nreally belong in the expert group once it is formed. For now I&#39;ll  \ntake a shot at some of the higher level questions, answers  \ninterspersed below.\n\nOn Feb 15, 2007, at 6:10 AM, Steve Loughran wrote:\n&gt;\n&gt; o Why not just have an interface with the well known verbs on? I know\n&gt; Java5 makes annotations possible, but it is not clear they are always\n&gt; appropriate. Maybe with WS-*, where your endpoints want to marshall\n&gt; arbitrary java graphs across a broad set of verbs, but with HTTP you\n&gt; have the fairly constrained verb set of Http+DAV,\n&gt;\nIMO, an interface locks down the method signatures too tightly. Look  \nat the example on my blog where I show a URI parameter being injected  \nas a method parameter, you can do same kind of thing with query  \nparameters, matrix parameters or even HTTP headers but to do that you  \nneed to leave the method signatures flexible.\n\n&gt; o It should be the option of the of previous elements in the directory\n&gt; path to dynamically determine which resource classes should receive\n&gt; the next part of the path. That is, not merely a simple regexp mapping\n&gt; of url-&gt;resource, but something that multiple components can\n&gt; dynamically resolve.\n&gt;\n&gt; o Is this intended to be an adjunct to Java EE, something to export\n&gt; session beans over HTTP, or something svelte that runs atop something\n&gt; minimal like jetty?\n&gt;\nIts intended to run atop a variety of HTTP servers, I&#39;d like to see  \nJetty supported. We have some ideas for a container SPI that should  \nallow an impl to be hosted on top of any container that can make the  \nrequest information available and write a response.\n\n&gt; o Is this going to be the place where the servlet API gets looked at,\n&gt; for the first time in a decade? I recall discussing with the Java EE\n&gt; spec leads the absence of any annotations to make writing servlets as\n&gt; easy as it is to do stateful Java EE session beans; for some reason\n&gt; you dont need to edit any XML files to create a WS epr bound to a\n&gt; session bean, yet to write your own servlet you need to code web.xml\n&gt; files or play with XDoclet.\n&gt;\nThis isn&#39;t intended to replace Servlet, deployment within a servlet  \ncontainer is one of the options called out explicitly in the JSR.\n\n&gt; o Is JAX-RS going to focus on O/X mapping as the best way to work with\n&gt; XML, with JAXB 2.0 as the mapping system?\n&gt;\nNo, though it should be easy to plug in JAXB if you want to use it.  \nWe have some ideas for a representation SPI that should allow you to  \nplug in support for a variety of serialization/deserialization  \ntechnologies.\n\n&gt; o Is the server-side metaphor still going to be something with the\n&gt; flavour of RPC? OR something that makes effective use of the NIO and\n&gt; concurrency libraries\n&gt;\nThe server side metaphor should be that of a uniform interface. Sync  \nvs async is a very good question and one I think the expert group  \nneeds to spend some cycles on.\n\n&gt; o What&#39;s the fault model going to be? What happens if a method throws\n&gt; an exception?\n&gt;\nIt gets converted into an appropriate HTTP status code.\n\n&gt; o What public repository is the TCK test suite going to be hosted in\n&gt; (apache, java.net, google, sourceforge?), and will you be using JUnit\n&gt; or TestNG with HttpUnit/XmlUnit?\n&gt;\nAll TBD.\n\n&gt; I am seriously debating joining this group, perhaps even as an\n&gt; representative of an organisation. However I am concerned not just\n&gt; about the basic architecture, but about the test process.\n&gt;\n&gt; I am currently finalising the interop result documents for an\n&gt; OASIS-based standard, one built on the house of cards that is WS-*,\n&gt; and have come to some strong opinions about how test-driven standards\n&gt; can be, in contrast to things like WS-A where testability was clearly\n&gt; an afterthought (see attached document). While I celebrate the fact\n&gt; that the JCP, unlike the W3C or OASIS, has a test-centric process, I\n&gt; have seen how hard it is for OSS projects to even get access to the\n&gt; TCK to products such as JAX-WS, creating a barrier to testing and\n&gt; redistribution. A public TCK that could be checked out a build under\n&gt; Gump would let downstream implementations also build and test nightly,\n&gt; and it would let the implementors add more test cases to the TCK as\n&gt; they encountered problems or ambiguity.\n&gt;\n&gt; Returning to the architecture. Anything that tries to bring the same\n&gt; ease of use of building WS-* to the REST world has missed something\n&gt; obvious. While JAX-WS may make it easy to export a java method to the\n&gt; rest of the world, it does nothing to ensure the world can talk to it.\n&gt; If there are things from the Java world we ought to borrow, it could\n&gt; be\n&gt;\n&gt; -the option of generating structured faults, be they SOAPFaults or\n&gt; XHTML with machine parseable content. Not using the &quot;transparent&quot;\n&gt; marshalling of JAX-WS, but something more like I describe in my M32\n&gt; paper; having an interface that faults can implement if they want to\n&gt; generate their own XML/XHTML\n&gt;\nSounds like a nice idea. I wouldn&#39;t tie it XML though, an endpoint  \nmight want to support other formats like JSON too.\n\n&gt; -a handler chain for incoming content instead of relying on what is\n&gt; built in to the system. There is already much of this built in to\n&gt; Apache Tomcat, of course.\n&gt;\nI have mixed feelings about handler chains, as you note that sort of  \nfunctionality is already built into a variety of containers.\n\n&gt; -a programmatic way to configure things. Right now the normal servlet\n&gt; API is purely declarative, except for system-specific APIs. I need the\n&gt; right to add an remove resource mappings dynamically.\n&gt;\nAlso an interesting idea.\n\nRegards,\nMarc.\n\n---\nMarc Hadley &lt;marc.hadley at sun.com&gt;\nCTO Office, Sun Microsystems.\n\n\n\r\n--Apple-Mail-8--26853057\r\nContent-Type: application/pkcs7-signature;\n\tname=smime.p7s\r\nContent-Disposition: attachment;\n\tfilename=smime.p7s\r\n\r\n[ Attachment content not displayed ]\r\n--Apple-Mail-8--26853057--\r\n\n"}}