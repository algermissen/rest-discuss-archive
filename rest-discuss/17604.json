{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"M2dEPs-D7eFnXekJERPCuPaXmW3K8S8Uxj0U6Ine95OuvXN3JHNYTl5eemUjSTPa8ObKXT3NF3QcMwK53TiL9ppz8FLjf_ndJNk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Implementing implementation upgrade service RESTfully.","postDate":"1310395736","msgId":17604,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRXdENTBEelpPc2ZfczdGN0t5MkdQeXIrbz1oR0ZTUHFIYlpZcm83cTFXZWloTndEZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDBBQTFDRUIzLTk4NEItNDhDRi1BRDg2LTkwNzlDNzAyNTRDRUBnbWFpbC5jb20+","referencesHeader":"PDU5OTEzNzkzNzIwODg1MTY0N0B1bmtub3dubXNnaWQ+CTwwQUExQ0VCMy05ODRCLTQ4Q0YtQUQ4Ni05MDc5QzcwMjU0Q0VAZ21haWwuY29tPg=="},"prevInTopic":17603,"nextInTopic":0,"prevInTime":17603,"nextInTime":17605,"topicId":17602,"numMessagesInTopic":3,"msgSnippet":"1. I was thinking that a client receives an ETag that represents the current state of the files on the server. The first time the client connects it would not","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 24369 invoked from network); 11 Jul 2011 14:48:58 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 11 Jul 2011 14:48:58 -0000\r\nX-Received: from unknown (HELO mail-fx0-f41.google.com) (209.85.161.41)\n  by mta1.grp.sp2.yahoo.com with SMTP; 11 Jul 2011 14:48:58 -0000\r\nX-Received: by fxg9 with SMTP id 9so4297118fxg.0\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 11 Jul 2011 07:48:56 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.63.19 with SMTP id z19mr7723510fah.15.1310395736122; Mon,\n 11 Jul 2011 07:48:56 -0700 (PDT)\r\nX-Received: by 10.223.96.74 with HTTP; Mon, 11 Jul 2011 07:48:56 -0700 (PDT)\r\nIn-Reply-To: &lt;0AA1CEB3-984B-48CF-AD86-9079C70254CE@...&gt;\r\nReferences: &lt;599137937208851647@unknownmsgid&gt;\n\t&lt;0AA1CEB3-984B-48CF-AD86-9079C70254CE@...&gt;\r\nDate: Mon, 11 Jul 2011 07:48:56 -0700\r\nMessage-ID: &lt;CAEwD50DzZOsf_s7F7Ky2GPyr+o=hGFSPqHbZYro7q1WeihNwDg@...&gt;\r\nTo: rest-discuss@yahoogroups.com, Mark Kharitonov &lt;mark.kharitonov@...&gt;\r\nContent-Type: multipart/alternative; boundary=000e0ce0f9105de56004a7cc4864\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: [rest-discuss] Implementing implementation upgrade service RESTfully.\r\nX-Yahoo-Group-Post: member; u=210009313; y=SyBZg318doRitDX1i2AXIW_yaug9pQhcS0ZE91JGj-PvQW8rOe8\r\nX-Yahoo-Profile: glenn_block\r\n\r\n\r\n--000e0ce0f9105de56004a7cc4864\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n1. I was thinking that a client receives an ETag that represents the curren=\r\nt\nstate of the files on the server. The first time the client connects it\nw=\r\nould not send an ETag thus it would receive all files along with an ETag\nre=\r\npresenting that snapshot. Once files change the etag would change. As the\nc=\r\nlient sent an original tag as part of the if-none-match the server can use\n=\r\nthat to determine the delta of what the client has.\n\n2. Not sure the uri sc=\r\nheme matters there could be anything. The important\nthing is that the resou=\r\nrce. The ETag does not specify the delta, it\nspecifies what version of file=\r\ns the client has at any point in time.\n\nOn Sun, Jul 10, 2011 at 9:21 PM, Ma=\r\nrk Kharitonov\n&lt;mark.kharitonov@...&gt;wrote:\n\n&gt; Since I do not want to f=\r\nind myself dealing with agents getting partial\n&gt; upgrades the whole upgrade=\r\n must be done in a single round trip. I.e. one\n&gt; conditional GET statement =\r\n- one response.\n&gt;\n&gt; Now this brings the following questions:\n&gt;\n&gt;    1. Do y=\r\nou mean to use multiples ETag values or encode the request\n&gt;    file-hash m=\r\napping as a single ETag value which the server then unfolds into\n&gt;    the o=\r\nriginal mapping?\n&gt;    2. What is the name of the resource exposed by the se=\r\nrver? Should it be\n&gt;    something like &quot;delta&quot; or like &quot;snapshot&quot; ?\n&gt;\n&gt;    =\r\nFor example, should the client GET *\n&gt;    http://bla-bla/agent-implementati=\r\non/delta*\n&gt;    or\n&gt;    *http://bla-bla/agent-implementation/snapshot* ?\n&gt;\n&gt;=\r\n    If it is *delta*, then the delta specification is given in the etag,\n&gt; =\r\n   which seems a bit strange to me (I refrain from utilizing the URI query\n=\r\n&gt;    component for fearing to overflow it). But if it is a well known techn=\r\nique -\n&gt;    I am fine with it.\n&gt;\n&gt;    If it is *snapshot*, then one has to =\r\nbe aware that it is only a partial\n&gt;    snapshot, because not all the files=\r\n in the repository are returned. But,\n&gt;    then where is it expressed that =\r\nthe snapshot is partial? Should I employ the\n&gt;    partial GET semantics as =\r\nwell?\n&gt;\n&gt;\n&gt;\n&gt; On 11/07/2011, at 05:45, Glenn Block wrote:\n&gt;\n&gt; What about us=\r\ning ETags? With ETags the client can send an if-none-match\n&gt; header to do a=\r\n conditional GET it will receive 304 Not Modified status as\n&gt; long as the s=\r\nerver files have not changed. If files have changed, the server\n&gt; issues an=\r\n ETag header along with the response which the client holds.\n&gt;\n&gt; Ideally th=\r\ne server would then return the full file list in order to avoid\n&gt; server re=\r\nsources. An alternative would be to store the deltas for each etag.\n&gt; Then =\r\nwhen a client request comes in you could determine based on the etah\n&gt; whic=\r\nh files have change. As long as only deltas are stored the storage cost\n&gt; w=\r\nould be minimal.\n&gt;\n&gt; Sent from my Windows Phone\n&gt; -------------------------=\r\n-----\n&gt; From: mark69_fnd\n&gt; Sent: Sunday, July 10, 2011 6:51 PM\n&gt; To: rest-d=\r\niscuss@yahoogroups.com\n&gt; Subject: [rest-discuss] Implementing implementatio=\r\nn upgrade service\n&gt; RESTfully.\n&gt;\n&gt;\n&gt;\n&gt; Dear ladies and sirs.\n&gt;\n&gt; Please, fo=\r\nrgive me for this long post, but I have to present the full\n&gt; context, befo=\r\nre actually asking my question. Whoever is going to read this\n&gt; post throug=\r\nh - thank you for your patience.\n&gt;\n&gt; Our product consists of a server and m=\r\nultiple agents and we wish to\n&gt; implement an agent upgrade service, so that=\r\n agents can upgrade their\n&gt; implementation silently without human intervent=\r\nion.\n&gt;\n&gt; I would also like to make the upgrade process in one round-trip to=\r\n the\n&gt; service, otherwise I have to deal with issues like an agent getting =\r\npartial\n&gt; implementation and I really really do not want to allow it.\n&gt;\n&gt; M=\r\ny current implementation uses overloaded POST method with the following\n&gt; s=\r\nemantics:\n&gt;\n&gt;    - Agent periodically sends the server a mapping between th=\r\ne names of\n&gt;    the files constituting the current implementation and their=\r\n respective MD5\n&gt;    hash values. The mapping is represented in JSON.\n&gt;    =\r\n- The service compares the snapshot received from the agent with the\n&gt;    l=\r\nocal repository containing the most up-to-date agent implementation. The\n&gt; =\r\n   service then composes the mapping between the names of the modified/new\n=\r\n&gt;    files and their respective contents (zipped) and includes it in the\n&gt; =\r\n   response. Deleted files are mapped with no content. The response is\n&gt;   =\r\n represented in JSON again.\n&gt;\n&gt;\n&gt; For instance, here is a sample request fr=\r\nom an agent:\n&gt;\n&gt; POST http://il-mark-lt/NC/AgentImplService/RepositoryDelta=\r\n HTTP/1.1\n&gt; Accept: application/json, application/xml, text/json, text/x-js=\r\non,\n&gt; text/javascript, text/xml, application/json\n&gt; User-Agent: RestSharp 1=\r\n01.3.0.0\n&gt; Content-Type: application/json\n&gt; Host: il-mark-lt\n&gt; Content-Leng=\r\nth: 4013\n&gt; Expect: 100-continue\n&gt; Accept-Encoding: gzip, deflate\n&gt;\n&gt; {\n&gt;   =\r\n&quot;Lib1.dll&quot;: &quot;Ud/QDKYI8CPcWTxwBhfLjQ=3D=3D&quot;,\n&gt;   &quot;Lib2.dll&quot;: &quot;2yjGP63c4Pcdtk=\r\nK+MQS+5g=3D=3D&quot;,\n&gt;   &quot;Lib3.dll&quot;: &quot;1slfkwOzqfj/RDEYSKDE/Q=3D=3D&quot;,\n&gt;   &quot;Lib4.=\r\ndll&quot;: &quot;l7Q8q4Tn2P6DSPkZS7GMQA=3D=3D&quot;,\n&gt; }\n&gt;\n&gt; If nothing has changed, then =\r\nthe service response would be:\n&gt;\n&gt; HTTP/1.1 200 OK\n&gt; Content-Length: 5\n&gt; Co=\r\nntent-Type: application/json\n&gt; Server: Microsoft-HTTPAPI/2.0\n&gt; Date: Thu, 0=\r\n7 Jul 2011 13:51:50 GMT\n&gt;\n&gt; {}\n&gt;\n&gt; Otherwise, if for instance, Lib2 was cha=\r\nnged, Lib3 was deleted and Lib5 was\n&gt; added:\n&gt;\n&gt; HTTP/1.1 200 OK\n&gt; Content-=\r\nLength: 591\n&gt; Content-Type: application/json\n&gt; Server: Microsoft-HTTPAPI/2.=\r\n0\n&gt; Date: Thu, 07 Jul 2011 13:59:16 GMT\n&gt;\n&gt; {\n&gt;   &quot;Lib2.dll&quot;: &quot;H4sIAAAA....=\r\n.....&quot;\n&gt;   &quot;Lib3.dll&quot;: null\n&gt;   &quot;Lib5.dll&quot;: &quot;OPUguh89.........&quot;\n&gt; }\n&gt;\n&gt; (I =\r\nhave omitted the actual contents for the sake of clarity)\n&gt;\n&gt; There is a me=\r\nchanism on the server side that prevents the service from\n&gt; serving request=\r\ns while the local repository is being updated, so everything\n&gt; is fine on t=\r\nhat end.\n&gt;\n&gt; Another note to make is that it is highly unlikely that anyone=\r\n else, but\n&gt; our agents will ever use this service.\n&gt;\n&gt; What I am intereste=\r\nd to know is whether it is feasible to implement it with\n&gt; a single GET req=\r\nuest utilizing some clever conditional and/or partial GET\n&gt; semantics?\n&gt;\n&gt; =\r\nThank you very much.\n&gt;\n&gt;  \n&gt;\n&gt;\n&gt; =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n&gt; There are two kinds of people. Those whose=\r\n guns are loaded and those who\n&gt; dig.\n&gt; *(The good, the bad and the ugly).*=\r\n\n&gt; So let us raise our cups for our guns always be loaded.\n&gt;\n&gt;\n&gt;\n\r\n--000e0ce0f9105de56004a7cc4864\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n1. I was thinking that a client receives an ETag that represents the curren=\r\nt state of the files on the server. The first time the client connects it w=\r\nould not send an ETag thus it would receive all files along with an ETag re=\r\npresenting that snapshot. Once files change the etag would change. As the c=\r\nlient sent an original tag as part of the if-none-match the server can use =\r\nthat to determine the delta of what the client has.&lt;div&gt;\n&lt;br&gt;&lt;div&gt;2. Not su=\r\nre the uri scheme matters there could be anything. The important thing is t=\r\nhat the resource. The ETag does not specify the delta, it specifies what ve=\r\nrsion of files the client has at any point in time.&lt;br&gt;\n&lt;br&gt;&lt;div class=3D&quot;g=\r\nmail_quote&quot;&gt;On Sun, Jul 10, 2011 at 9:21 PM, Mark Kharitonov &lt;span dir=3D&quot;l=\r\ntr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mark.kharitonov@...&quot;&gt;mark.kharitonov@gmail.=\r\ncom&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;mar=\r\ngin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n&lt;div style=3D=\r\n&quot;word-wrap:break-word&quot;&gt;Since I do not want to find myself dealing with agen=\r\nts getting partial upgrades the whole upgrade must be done in a single roun=\r\nd trip. I.e. one conditional GET statement - one response.&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;=\r\ndiv&gt;Now this brings the following questions:&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;Do you mean =\r\nto use multiples ETag values or encode the request file-hash mapping as a s=\r\ningle ETag value which the server then unfolds into the original mapping?&lt;/=\r\nli&gt;\n&lt;li&gt;What is the name of\n the resource exposed by the server? Should it =\r\nbe something like \n&quot;delta&quot; or like &quot;snapshot&quot; ?&lt;br&gt;\n&lt;br=\r\n&gt;For example, should the client GET &lt;b&gt;&lt;br&gt;&lt;a href=3D&quot;http://bla-bla/agent-=\r\nimplementation/delta&quot; target=3D&quot;_blank&quot;&gt;http://bla-bla/agent-&lt;u&gt;&lt;/u&gt;impleme=\r\nntation/delta&lt;/a&gt;&lt;/b&gt;&lt;br&gt;or&lt;br&gt;&lt;b&gt;&lt;a href=3D&quot;http://bla-bla/agent-implement=\r\nation/snapshot&quot; target=3D&quot;_blank&quot;&gt;http://bla-bla/agent-&lt;u&gt;&lt;/u&gt;implementatio=\r\nn/snapshot&lt;/a&gt;&lt;/b&gt; ?&lt;br&gt;\n\n&lt;br&gt;If it is &lt;b&gt;delta&lt;/b&gt;, then the delta specifi=\r\ncation is given in the etag, \nwhich seems a bit strange to me (I refrain fr=\r\nom utilizing the URI query \ncomponent for fearing to overflow it). But if i=\r\nt is a well known technique - I am fine with it.&lt;br&gt;&lt;br&gt;If it is &lt;b&gt;snapsho=\r\nt&lt;/b&gt;, then \none has to be aware that it is only a partial snapshot, becaus=\r\ne not all \nthe files in the repository are returned. But, then where is it =\r\n\nexpressed that the snapshot is partial? Should I employ the partial GET \ns=\r\nemantics as well?&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div cla=\r\nss=3D&quot;h5&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On 11/07/2011, at 05:45, Glenn Block wrote:&lt;/div&gt;&lt;b=\r\nr&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;\n&lt;div style=3D&quot;font-size:11pt;font-family:=\r\nCalibri,sans-serif&quot;&gt;What about using ETags? With ETags the client can send =\r\nan if-none-match header to do a conditional GET it will receive 304 Not Mod=\r\nified status as long as the server files have not changed. If files have ch=\r\nanged, the server issues an ETag header along with the response which the c=\r\nlient holds.&lt;br&gt;\n\n&lt;br&gt;Ideally the server would then return the full file li=\r\nst in order to avoid server resources. An alternative would be to store the=\r\n deltas for each etag. Then when a client request comes in you could determ=\r\nine based on the etah which files have change. As long as only deltas are s=\r\ntored the storage cost would be minimal.&lt;br&gt;\n\n&lt;br&gt;Sent from my Windows Phon=\r\ne&lt;/div&gt;\n&lt;hr&gt;\n&lt;span style=3D&quot;font-weight:bold;font-size:10pt;font-family:Tah=\r\noma,sans-serif&quot;&gt;From: &lt;/span&gt;&lt;span style=3D&quot;font-size:10pt;font-family:Taho=\r\nma,sans-serif&quot;&gt;mark69_fnd&lt;/span&gt;&lt;br&gt;&lt;span style=3D&quot;font-weight:bold;font-si=\r\nze:10pt;font-family:Tahoma,sans-serif&quot;&gt;Sent: &lt;/span&gt;&lt;span style=3D&quot;font-siz=\r\ne:10pt;font-family:Tahoma,sans-serif&quot;&gt;Sunday, July 10, 2011 6:51 PM&lt;/span&gt;&lt;=\r\nbr&gt;\n\n&lt;span style=3D&quot;font-weight:bold;font-size:10pt;font-family:Tahoma,sans=\r\n-serif&quot;&gt;To: &lt;/span&gt;&lt;span style=3D&quot;font-size:10pt;font-family:Tahoma,sans-se=\r\nrif&quot;&gt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest=\r\n-discuss@yahoogroups.com&lt;/a&gt;&lt;/span&gt;&lt;br&gt;\n\n&lt;span style=3D&quot;font-weight:bold;fo=\r\nnt-size:10pt;font-family:Tahoma,sans-serif&quot;&gt;Subject: &lt;/span&gt;&lt;span style=3D&quot;=\r\nfont-size:10pt;font-family:Tahoma,sans-serif&quot;&gt;[rest-discuss] Implementing i=\r\nmplementation upgrade service RESTfully.&lt;/span&gt;&lt;br&gt;\n\n&lt;br&gt;&lt;/div&gt;\n\n\n\n\n\n\n\n\n\n\n\n=\r\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n=\r\n    &lt;div&gt;&lt;p&gt;Dear ladies and sirs.&lt;br&gt;&lt;br&gt;Please, forgive me for this long p=\r\nost, but I have to present the full context, before actually asking my ques=\r\ntion. Whoever is going to read this post through - thank you for your patie=\r\nnce.&lt;br&gt;\n\n&lt;br&gt;Our product consists of a server and multiple agents and we w=\r\nish to implement an agent upgrade service, so that agents can upgrade their=\r\n implementation silently without human intervention.&lt;br&gt;&lt;br&gt;I would also li=\r\nke to make the upgrade process in one round-trip to the service, otherwise =\r\nI have to deal with issues like an agent getting partial implementation and=\r\n I really really do not want to allow it.&lt;br&gt;\n\n&lt;br&gt;My current implementatio=\r\nn uses overloaded POST method with the following semantics:&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;=\r\nAgent periodically sends the server a mapping between the names of the file=\r\ns constituting the current implementation and their respective MD5 hash val=\r\nues. The mapping is represented in JSON.&lt;/li&gt;\n\n&lt;li&gt;The service compares the=\r\n snapshot received from the agent with the local repository containing the =\r\nmost up-to-date agent implementation. The service then composes the mapping=\r\n between the names of the modified/new files and their respective contents =\r\n(zipped) and includes it in the response. Deleted files are mapped with no =\r\ncontent. The response is represented in JSON again.&lt;br&gt;\n\n&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;For =\r\ninstance, here is a sample request from an agent:&lt;br&gt;&lt;br&gt;&lt;font face=3D&quot;cour=\r\nier new&quot;&gt;POST &lt;a href=3D&quot;http://il-mark-lt/NC/AgentImplService/RepositoryDe=\r\nlta&quot; target=3D&quot;_blank&quot;&gt;http://il-mark-lt/NC/AgentImplService/RepositoryDelt=\r\na&lt;/a&gt; HTTP/1.1&lt;br&gt;\n\nAccept: application/json, application/xml, text/json, t=\r\next/x-json, text/javascript, text/xml, application/json&lt;br&gt;User-Agent: Rest=\r\nSharp 101.3.0.0&lt;br&gt;Content-Type: application/json&lt;br&gt;Host: il-mark-lt&lt;br&gt;Co=\r\nntent-Length: 4013&lt;br&gt;\n\nExpect: 100-continue&lt;br&gt;Accept-Encoding: gzip, defl=\r\nate&lt;br&gt;&lt;br&gt;{&lt;br&gt;=A0 &quot;Lib1.dll&quot;: &quot;Ud/QDKYI8CPcWTxwBhfLjQ=3D=\r\n=3D&quot;,&lt;br&gt;=A0 &quot;Lib2.dll&quot;: &quot;2yjGP63c4PcdtkK+MQS+5g=3D=3D&=\r\nquot;,&lt;br&gt;=A0 &quot;Lib3.dll&quot;: &quot;1slfkwOzqfj/RDEYSKDE/Q=3D=3D&quot=\r\n;,&lt;br&gt;\n\n=A0 &quot;Lib4.dll&quot;: &quot;l7Q8q4Tn2P6DSPkZS7GMQA=3D=3D&quot;,=\r\n&lt;br&gt;}&lt;br&gt;&lt;/font&gt;&lt;br&gt;If nothing has changed, then the service response would=\r\n be:&lt;br&gt;&lt;br&gt;&lt;font face=3D&quot;courier new&quot;&gt;HTTP/1.1 200 OK&lt;br&gt;Content-Length: 5=\r\n&lt;br&gt;Content-Type: application/json&lt;br&gt;\n\nServer: Microsoft-HTTPAPI/2.0&lt;br&gt;Da=\r\nte: Thu, 07 Jul 2011 13:51:50 GMT&lt;br&gt;&lt;br&gt;{}&lt;br&gt;&lt;/font&gt;&lt;br&gt;Otherwise, if for=\r\n instance, Lib2 was changed, Lib3 was deleted and Lib5 was added:&lt;br&gt;&lt;br&gt;&lt;f=\r\nont face=3D&quot;courier new&quot;&gt;HTTP/1.1 200 OK&lt;br&gt;\n\nContent-Length: 591&lt;br&gt;Conten=\r\nt-Type: application/json&lt;br&gt;Server: Microsoft-HTTPAPI/2.0&lt;br&gt;Date: Thu, 07 =\r\nJul 2011 13:59:16 GMT&lt;br&gt;&lt;br&gt;{&lt;br&gt;=A0 &quot;Lib2.dll&quot;: &quot;H4sIAAAA.=\r\n........&quot;&lt;br&gt;=A0 &quot;Lib3.dll&quot;: null&lt;br&gt;\n\n=A0 &quot;Lib5.dll&qu=\r\not;: &quot;OPUguh89.........&quot;&lt;br&gt;}&lt;br&gt;&lt;/font&gt;&lt;br&gt;(I have omitted the a=\r\nctual contents for the sake of clarity)&lt;br&gt;&lt;br&gt;There is a mechanism on the =\r\nserver side that prevents the service from serving requests while the local=\r\n repository is being updated, so everything is fine on that end.&lt;br&gt;\n\n&lt;br&gt;A=\r\nnother note to make is that it is highly unlikely that anyone else, but our=\r\n agents will ever use this service.&lt;br&gt;&lt;br&gt;What I am interested to know is =\r\nwhether it is feasible to implement it with a single GET request utilizing =\r\nsome clever conditional and/or partial GET semantics?&lt;br&gt;\n\n&lt;br&gt;Thank you ve=\r\nry much.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color=\r\n:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;/div&gt;&lt;div&gt;\n&lt;span style=3D&quot;font-size:16px&quot;&gt;&lt;span style=3D&quot;border-collapse=\r\n:separate;border-spacing:0px 0px;color:rgb(0, 0, 0);font-family:Times New R=\r\noman;font-size:16px;font-style:normal;font-variant:normal;font-weight:norma=\r\nl;letter-spacing:normal;line-height:normal;text-align:auto;text-indent:0px;=\r\ntext-transform:none;white-space:normal;word-spacing:0px&quot;&gt;&lt;div&gt;\n=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D&lt;/div&gt;&lt;div&gt;Ther=\r\ne are two kinds of people. Those whose guns are loaded and those who dig.&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;span style=3D&quot;white-space:pre-wrap&quot;&gt;&lt;span style=3D&quot;white-space:pr=\r\ne-wrap&quot;&gt;&lt;span style=3D&quot;white-space:pre-wrap&quot;&gt;&lt;span style=3D&quot;white-space:pre=\r\n-wrap&quot;&gt;\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i style=3D&quot;font-style:ita=\r\nlic&quot;&gt;&lt;span style=3D&quot;font-style:italic&quot;&gt;&lt;span style=3D&quot;font-style:italic&quot;&gt;(T=\r\nhe good, the bad and the ugly).&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/div&gt;\n&lt;div&gt;So let us rais=\r\ne our cups for our guns always be loaded.&lt;/div&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;b=\r\nr&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--000e0ce0f9105de56004a7cc4864--\r\n\n"}}