{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"d5Z3hUfCvf3FLzKElkp_Ai-X1rEXLVTeIYS6M1qQzxIvzHO-c2zQvBR7NB0KHzlgXnNT6BoGAx9Z0fjdKmvrQfkzRzToU9mIgrTvSCqJkg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Implementing REST and resource modeling","postDate":"1021482838","msgId":1255,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNjdqY1AxanhUeFhQaFRnMzEwMDAwYWE4OEBob3RtYWlsLmNvbT4=","referencesHeader":"PGFidHIydSs0dHRmQGVHcm91cHMuY29tPg=="},"prevInTopic":1253,"nextInTopic":1256,"prevInTime":1254,"nextInTime":1256,"topicId":1247,"numMessagesInTopic":9,"msgSnippet":"... From: xemplify  ... This gets into collections of resources. Both PUT and POST can create new resources - but you have to be","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 15 May 2002 17:13:05 -0000\r\nReceived: (qmail 2036 invoked from network); 15 May 2002 17:13:05 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m7.grp.scd.yahoo.com with QMQP; 15 May 2002 17:13:05 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.202)\n  by mta3.grp.scd.yahoo.com with SMTP; 15 May 2002 17:13:05 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Wed, 15 May 2002 10:13:05 -0700\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;xemplify&quot; &lt;xemplify@...&gt;\r\nReferences: &lt;abtr2u+4ttf@...&gt;\r\nSubject: Re: [rest-discuss] Re: Implementing REST and resource modeling\r\nDate: Wed, 15 May 2002 10:13:58 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nMessage-ID: &lt;OE67jcP1jxTxXPhTg310000aa88@...&gt;\r\nX-OriginalArrivalTime: 15 May 2002 17:13:05.0367 (UTC) FILETIME=[C6E76670:01C1FC33]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;xemplify&quot; &lt;xemplify@...&gt;\n\n&gt; The trade may need modification because of a mistake; effectively the\n&gt; client wants to store a complete new version of the trade, hence the\n&gt; use of PUT (though old versions are retained, so perhaps POST more\n&gt; relevant?).\nThis gets into &#39;collections&#39; of resources. Both PUT and POST can create new\nresources - but you have to be careful with using PUT to do this. With POST,\nyou are sending the new resource, with PUT, the old resource is moved out to\nthe new resource. POST typically responds with the location of the new\nresource, PUT doesn&#39;t have to because it only visibly replaces the old\nresource (and the client already knows that URI). The problem with rolling\noff versions when a PUT happens is idempotency - what happens if you PUT\ntwice? do you get two backup versions? You can use E-Tag stuff to tell if\nthis incoming data is the same as the current resource, but that requires\nmore coordination between client and server.\nSo... neither method fits very well. I&#39;d suggest you use PUT and consider\nthe duplicate message case carefully.\n\n\n&gt; 2) To get an older version\n&gt; -&gt; HTTP GET //host/trades/122?version=2\n&gt;    or\n&gt; -&gt; HTTP GET //host/trades/122/2\n&gt; returns the trade XML for the second version.\n&gt; Versions are a history of the resource&#39;s state. Which is preferred,\n&gt; using a query based off the existing URI or a new URI?\n\n&lt;yoda&gt;There is no query. There is only URI.&lt;/yoda&gt;\n\nBoth are full URI - the portion before the &#39;?&#39; character is the &#39;path&#39;. The\nquestion mark is used when you have to generate URIs on the client & you\nhave a declarative form to do that - like &lt;form&gt; for html. Creating the URI\nworks in a pinch, but the more complete solution is to have the server\nreport the versions available (in xml or something) and then the specific\nURI format becomes unimportant. Rather than knowing the syntax with slashes\nand question marks, you need to know the names (or paths) of elements within\nXML (or whatever infoset/grove you use).\n\nA more practical answer to your question is &quot;depends on your server\ntechnology&quot;.  I have found path-based URI to be treated as second-class\ncitizens in many server environments (clients that generate URI based on\nuser input also typically don&#39;t do path based stuff very well), so I&#39;d\nsuggest query terms (even though I personally like paths better). If you\nhave a flexible server-side environment (like servlets) then path based is\nfine. A few years ago I wrote a java servlet-based framework that was very\npath based and dispatched methods into java objects identified by the path -\nthe query terms became parameters. It&#39;s at http://xml.apache.org/xang/ if\nyou are interested in digging into old code (it works fine, its just not\nused by anybody - look into the packages around\norg.apache.xang.net.http.object.HTTPObjectServer )\n\n\n\n"}}