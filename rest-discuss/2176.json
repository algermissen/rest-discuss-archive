{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"jS_FxdZeWvAxkZRmattFCHPjgIETwETEAjlvCO_qrAP3jXnpwmHvCXY--BQMlDVnWbHXNLvuADb4wdOgwHNwuso","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Security in a REST world?","postDate":"1030027940","msgId":2176,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNENjRGQUE0LjcwODA3MDlAYnJpdm8ubmV0Pg==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QTFAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2173,"nextInTopic":2177,"prevInTime":2175,"nextInTime":2177,"topicId":2135,"numMessagesInTopic":17,"msgSnippet":"... Probably.  I agree that the URI has to be at least mildly understood by the container. ... Well, the app still needs to do something intelligent.  That s","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 22 Aug 2002 14:50:10 -0000\r\nReceived: (qmail 72386 invoked from network); 22 Aug 2002 14:50:09 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m11.grp.scd.yahoo.com with QMQP; 22 Aug 2002 14:50:09 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.226)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Aug 2002 14:50:09 -0000\r\nReceived: (qmail 19211 invoked from network); 22 Aug 2002 14:50:05 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.110]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 22 Aug 2002 14:50:05 -0000\r\nMessage-ID: &lt;3D64FAA4.7080709@...&gt;\r\nDate: Thu, 22 Aug 2002 10:52:20 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Security in a REST world?\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F640155F8A1@...&gt;\r\nContent-Type: multipart/signed; protocol=&quot;application/x-pkcs7-signature&quot;; micalg=sha1; boundary=&quot;------------ms090109090505040107010304&quot;\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\r\n--------------ms090109090505040107010304\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\n&gt; I think you&#39;re carrying the opaqueness of URI too far.  As I understand,\n&gt; URI should be opaque *to clients*, but are allowed to be (and should be\n&gt; encouraged to be) meaningful for servers.  Else you&#39;re constrained to\n&gt; &quot;bag&quot; storage at the conceptual level, and that looks like your problem\n&gt; at this point.\n\nProbably.  I agree that the URI has to be at least mildly understood by \nthe container.\n\n&gt; You read me wrong.  I said you objected to NOT being able to push\n&gt; validation all the way out.  Not knowing your application, it&#39;s not for\n&gt; me to say, except that pushing ALL validation out to the container\n&gt; leaves you what for an application?\n\nWell, the app still needs to do something intelligent.  That&#39;s the \nservlet itself (or the implementation).  The information would only get \nto the servlet if it passed all authorization and validation checks.\n\nI used the car example below to simplify the example.  Our application \ndeals with security and access control to resources (physical and \nvirtual) so the question of &quot;Can this person do this method to this \nthing&quot; is essentially our application.\n\nIn trying to apply REST to it, we&#39;re changing &quot;do this method&quot; to \n&quot;PUT/GET/DELETE/POST&quot;.  The car example below illustrates this.  Suppose \nI can only drive the car to the repair center, while my sister can drive \nto the movies.  I have to somehow ask the car, &quot;Can I drive you to the \nmovies&quot; which it should then say no.\n\nSo, question is:\n\nAm I sending the state of myself at the movies to the car?\nAm I sending the state of the car at the movies to the car?\n\nWould would I be PUTting and to what resource is where I&#39;m getting all \nconfused.  I keep thinking the car knows whether or not I&#39;m allowed at \nthe movies, so I need to ask the car.\n\nPretend all this talk of me, the car, and the movies each has a URI and \nare web enabled and very RESTful. :)\n\n\n&gt; Curious as to what that means.  To begin with, the car ought to know\n&gt; where it&#39;s starting from, i.e., where it is now, no?\n\nGood point.  Let&#39;s remove starting from in this example.  Let&#39;s just use \nwhere I want to take it as an example (see movies example above).\n\n&gt; In my most orthodox interpretation of Representational State Transfer,\n&gt; I believe you can accomplish your trip by PUTting a version of your\n&gt; car whose current location is the destination you seek.  But we don&#39;t\n&gt; really know what the purpose of Car is, so again we&#39;re kind of stuck\n&gt; giving advice.\n\nI think you understand really well!  I also think you&#39;re right... to get \nthe car to the movies, I would PUT a version of the car at the movies, \nwith me at the steering wheel.  In the HTTP request, via HTTP Auth, the \nserver knows who is asking the question, so the Who and the What are all \nknown.  This is cool.\n\nNow comes the interesting part.  How do we secure this?  We need to say:\n\nSeth can PUT this:\n\nPUT /car HTTP/1.0\n\n&lt;car&gt;\n   &lt;at rdf:resource=&quot;http://example.com/movies&quot;/&gt;\n&lt;/car&gt;\n\nBut can&#39;t PUT this:\n\nPUT /car HTTP/1.0\n\n&lt;car&gt;\n   &lt;at rdf:resource=&quot;http://example.com/liquorstore&quot;/&gt;\n&lt;/car&gt;\n\nBasic web site security will govern if I can PUT to a resource or not, \nbut doesn&#39;t talk about WHAT I&#39;m PUTting.\n\nThat&#39;s where this discussion stems from.  I need to control certain \nstates of resources, plus who is trying to put them into that state.  To \ndo this, I need to look at the RDF/XML and ask &quot;Are all Statements \ncorrect for this person?&quot;\n\nPhew! :)\n\nThanks for helping me sort all this out,\nSeth\n\r\n--------------ms090109090505040107010304\r\nContent-Type: application/x-pkcs7-signature; name=&quot;smime.p7s&quot;\r\nContent-Disposition: attachment; filename=&quot;smime.p7s&quot;\r\nContent-Description: S/MIME Cryptographic Signature\r\n\r\n[ Attachment content not displayed ]\r\n--------------ms090109090505040107010304--\r\n\n"}}