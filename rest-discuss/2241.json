{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"5e67eFYBLSsfu9_GhS3q_lK-fqJ7AcrgWxTREDpKG3qtNW2CFWgWlCxzejdpbP77i5zwUyZTaWX-JUQX03M9WuCgQPcnrja3QmlY9-w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Shoulda been the &quot;authentication&quot; wall (was Re: Beating my head against the &quot;session management&quot; wall)","postDate":"1030410776","msgId":2241,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNzAwMWMyNGQ2NiRlMGZmZjkzMCQ2NDAwYThjMEBzZWFpcnRobGFwdG9wPg==","referencesHeader":"PDAwMDkwMWMyNGNhYSRjNTRhYTUzMCQ2NDAwYThjMEBzZWFpcnRobGFwdG9wPiA8MDEzZTAxYzI0Y2MyJGY1MzkzYTUwJDI2MGJhOGMwQG1ub3RsYXB0b3A+IDwwMDEwMDFjMjRkMDkkYjhhZjVkMjAkNjQwMGE4YzBAc2VhaXJ0aGxhcHRvcD4gPDAwY2MwMWMyNGQzMiQ4YzM3NjdhMCQyODBiYThjMEBtbm90bGFwdG9wPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":2240,"nextInTime":2242,"topicId":2241,"numMessagesInTopic":1,"msgSnippet":"... From: Mark Nottingham  ... *whew* While I know I am not understanding this concept as well as I want, I was worried that those answers","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 27 Aug 2002 01:12:14 -0000\r\nReceived: (qmail 98726 invoked from network); 27 Aug 2002 01:12:14 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 27 Aug 2002 01:12:14 -0000\r\nReceived: from unknown (HELO mail.bbglobex.com) (208.251.163.4)\n  by mta3.grp.scd.yahoo.com with SMTP; 27 Aug 2002 01:12:16 -0000\r\nReceived: from seairthlaptop [68.10.252.58] by mail.bbglobex.com with ESMTP\n  (SMTPD32-7.12) id A101F250112; Mon, 26 Aug 2002 21:08:17 -0400\r\nMessage-ID: &lt;007001c24d66$e0fff930$6400a8c0@seairthlaptop&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;000901c24caa$c54aa530$6400a8c0@seairthlaptop&gt; &lt;013e01c24cc2$f5393a50$260ba8c0@mnotlaptop&gt; &lt;001001c24d09$b8af5d20$6400a8c0@seairthlaptop&gt; &lt;00cc01c24d32$8c3767a0$280ba8c0@mnotlaptop&gt;\r\nSubject: Shoulda been the &quot;authentication&quot; wall (was Re: Beating my head against the &quot;session management&quot; wall)\r\nDate: Mon, 26 Aug 2002 21:12:56 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n----- Original Message -----\nFrom: &quot;Mark Nottingham&quot; &lt;mnot@...&gt;\n\n\n&gt; My pop culture references weren&#39;t meant to answer your questions; I was\n&gt; hoping/assuming that someone more REST enlightened than I would do so.\n\n*whew* While I know I am not understanding this concept as well as I want, I\nwas worried that those answers were either zen statements meant to shock me\ninto enlightenment or that the answer was so obvious that nothing more\nneeded to be said.  :)\n\n&gt; Since noone has, here are my thoughts;\n&gt;\n&gt; HTTP authentication clearly involves keeping state on the client; as such,\n&gt; whenever I try to resource model an application, this is the main means of\n&gt; identifying a client in order to tailor information for it. As you\n&gt; surmise, cookies are often used in place of HTTP authentication because\n&gt; they can be persistent across invocations of the browser (although modern\n&gt; browsers address this with a &#39;password store&#39; mechanism), they can be\n&gt; deleted, and because there is more control over the UI. Authentication,\n&gt; OTOH, has advantages in that the state can be incorporated into the URI\n&gt; (cookies can&#39;t), and the mechanism is standardized, allowing for machines\n&gt; to present credentials (this could be possible with cookies, but\n&gt; practically, it&#39;s impossible; they&#39;d have to understand your specific\n&gt; authentication scheme).\n\nI&#39;m not sure what you mean by &quot;Authentication [...] can be incorporated into\nthe URI&quot;.  Otherwise, I agree with everything else you said.\n\n&gt; Doing it in the request body (POST) is clearly not RESTful, and doing it\n&gt; correctly with the URI query is tricky at best, IMHO.\n\nI absolutely agree.  As a result, I am not even considering these as\noptions.\n\n&gt; So, when choosing between these mechanisms, I prefer HTTP authentication\n&gt; wherever possible; if you investigate modern browsers, you should find\n&gt; that Digest has been implemented correctly (I use it opften with IE6,\n&gt; Mozilla and Amaya; IIRC it also works on Opera).\n\nWell, this is the first time I have seen mention that IE6 is compatible (IE5\nwasn&#39;t, appearently).  This is certainly good news.  And yes, Opera does\nproperly support digest authentication.\n\n&gt; All of this notwithstanding, and most importantly, if you approach your\n&gt; application from a model of &#39;sessions&#39; (which most environments encourage\n&gt; you to do), you&#39;ll find it very hard to keep it RESTful. Model your\n&gt; application as resources which expose state as representations, and the\n&gt; issue of sessions will (hopefully) dissolve into the background, for the\n&gt; most part.\n\nThat is what I have been trying to do.  In fact, part of the purpose of this\nproject is to gain better understanding and experience with the REST model.\nAt first, I only focused on the resource model, ignoring authentication\nissues.  This allowed me to construct what I believe to be a very clean and\nsimple model.  This model works quite well when was issuing unauthenticated\nGET requests.  However, I then got to the part where people had the ability\nto modify and create (well, request creation of) new resources via POST.\nFor these operations, it is necessary to be authenticated.  Then I also came\nacross a part of the model that required authenticated GET access.  As I\nstarted workding this part out, all that came to mind was the use of\nsessions.  I admit that this was an &quot;easy&quot; conclusion partly because I have\nwritten several other web applications in the past that were heavily\ndependent on the session-oriented model.\n\nThen I started learning more abouth HTTP authentication.  I knew that basic\nauthentication had the fundamental flaw that the user/pwd were submitted\nwith every request.  This did not seem a very good solution to me\nconsidering the security implications.  I then started learning about digest\nauthentication, but this too seemed to suffer some drawbacks:\n\n* inconsistant implemenation between MS and non-MS browsers:  As I know now,\nthis is no longer an issue since now IE6 seems to be compliant.\n* it only really added protection to the password: That&#39;s fine, really.  The\npassword was the important part, since their e-mail addresses were going to\nbe their userId.\n* someone could still potentially use replay attacks and man-in-the-middle\nattacks (can&#39;t remember if there were others):  I know that you could\nfrequently change the nonce to limit the attacks, but at the cost of\nadditional server-side application overhead.  I am beginning to think this\nis worth the security.  If I needed complete privacy, I would just use SSL\non top of it all.\n* and an extreme lack of code demonstrating its use.  This isn&#39;t really a\nproblem with the method.  It&#39;s really more of a problem because it&#39;s harder\nfor me to figure out how to properly implement it.\n\n&gt; Architecting applications that don&#39;t require client state brings many\n&gt; benefits. Witness search engines, translation services, annotation\n&gt; services, shared caching, &#39;this page has changed&#39; bots, etc., etc.\n\nI absolutely agree.\n\n&gt; Requiring client state reduces the effectiveness or even eliminates these\n&gt; benefits, and locks your users into exactly one way of seeing the data:\n&gt; the way that you lead them through it. While this is attractive to the\n&gt; application developer, it isn&#39;t to users, and hence ultimately reduces the\n&gt; potential benefit of making the application part of the Web.\n\nAgain, I agree.  Which is why I want to get this authentication thing right\nthe first time...\n\n\nNow that I know that digest authentication works properly in IE6, this is\nlooking like a much, much more attractive solution than cookies.  Now all I\nneed to do is find some code to implement it properly in PHP.  Any\nsuggestions?  I&#39;ll take anything I can get at this point.  Resources of this\ntype for PHP seem to be non-existent.\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}