{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"O8THfIc44IEN8KB9nU0HgwupWJmfoM8vZ6JV2E8eaFM7eeG0NmIJNOg_8iVww2wXsCLQqZ2-BcsBwBnZEfXKasfxywQB5hTq4JFEyIRsIRI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Understanding Steady States","postDate":"1265031090","msgId":14709,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI0NjAyMjk0LUU2OTQtNDRGQS05REE0LTI1NUE5RTJCODAwRkBtYWMuY29tPg==","inReplyToHeader":"PDRCNjZDQjNDLjUwMTA2MDNAbXlrYW5qby5jby51az4=","referencesHeader":"PGhqaGZnaStxbzJjQGVHcm91cHMuY29tPiA8NEI1QzQ2MDIuOTA0MDkwNkBteWthbmpvLmNvLnVrPiA8NUZCNkMzMUEtNzZCRS00OUZCLTgyOTQtMDJEODc1NDU3NThCQG1hYy5jb20+IDw0QjVDNkI1Ny40MDgwNjA2QG15a2Fuam8uY28udWs+IDxFRUI2NTg3OC02NjFBLTRBMUQtQkUzNy1GRDczQkMxNzBBMUZAbWFjLmNvbT4gPDRCNjZDQjNDLjUwMTA2MDNAbXlrYW5qby5jby51az4="},"prevInTopic":14708,"nextInTopic":14710,"prevInTime":14708,"nextInTime":14710,"topicId":14643,"numMessagesInTopic":27,"msgSnippet":"... Predefined application flows violate the hypermedia constraint and couple the server in a way that REST deliberately aims to avoid. As you know from my","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 12519 invoked from network); 1 Feb 2010 13:31:35 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m4.grp.sp2.yahoo.com with QMQP; 1 Feb 2010 13:31:35 -0000\r\nX-Received: from unknown (HELO asmtpout024.mac.com) (17.148.16.99)\n  by mta1.grp.re1.yahoo.com with SMTP; 1 Feb 2010 13:31:35 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [192.168.2.102] ([84.144.113.122])\n by asmtp024.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KX6003FJ08JWD70@...&gt; for\n rest-discuss@yahoogroups.com; Mon, 01 Feb 2010 05:31:34 -0800 (PST)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=5.0.0-0908210000 definitions=main-1002010082\r\nIn-reply-to: &lt;4B66CB3C.5010603@...&gt;\r\nDate: Mon, 01 Feb 2010 14:31:30 +0100\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-id: &lt;24602294-E694-44FA-9DA4-255A9E2B800F@...&gt;\r\nReferences: &lt;hjhfgi+qo2c@...&gt; &lt;4B5C4602.9040906@...&gt;\n &lt;5FB6C31A-76BE-49FB-8294-02D87545758B@...&gt;\n &lt;4B5C6B57.4080606@...&gt;\n &lt;EEB65878-661A-4A1D-BE37-FD73BC170A1F@...&gt; &lt;4B66CB3C.5010603@...&gt;\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Re: Understanding Steady States\r\nX-Yahoo-Group-Post: member; u=289191104; y=vqQDZmsB0sJxy3y9vXwYJES5Q_lSlSXV5sid5SXYoci_penG3k_4W-gD\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Feb 1, 2010, at 1:38 PM, Mike Kelly wrote:\n\n&gt; I think we need to agree on the definition of &#39;meaning&#39; in this \n&gt; context.. because, to me, it includes more than just the current set of \n&gt; available link relations, and since we&#39;re not supposed to type resources \n&gt; - the only approach I can see working is predefined application flows\n\nPredefined application flows violate the hypermedia constraint and couple the server in a way that REST deliberately aims to avoid. As you know from my questions on this list around this issue I have been banging my head against that wall, but the more it hurt, the clearer the picture became (for me at least) :-)\n\nIt is really as simple as this:\n\no The client needs an understanding of the set of media types that the service uses, IOW, the set of types the client has to be able to deal with. (this is what I think makes up a service type for discovery and &#39;governance&#39; purposes)\n\no For any request the client sends it must expect any HTTP response code and a representation of any of the set of media types. It is completely up to the client to deal with whatever it receives. 4xx is not &#39;broken contract&#39; but an *essential* part of the contract.\n\no The server has the obligation to not lie about the links it sends, e.g. using &lt;img src=&quot;&quot;/&gt; to point to an Atom feed can be considered a broken server\n\no The server must keep resource sematics stable (and steady state (==bookmarkable) resources should be presistent)\n\nBottom line: it is really about putting *all* change handling into the clients (and to actively expect change) to allow independent server evolution and avoid ned for communication between server and client owners.\n\nThe funny thing for me was that, once actively accepting these consequences, it turns out there is really not so much that can change about a server given the above obligations. REST externalises everything about an API that *can* be kept stable and lets the client deal with the remaining instabilities.\n\nJan\n\n\n&gt; (which may or may not contain several &#39;steady states&#39;) driven by link \n&gt; relations.\n\n-----------------------------------\n Jan Algermissen, Consultant\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n"}}