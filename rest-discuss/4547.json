{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":172277276,"authorName":"thompsonbry","from":"&quot;thompsonbry&quot; &lt;thompsonbry@...&gt;","profile":"thompsonbry","replyTo":"SENDER","senderId":"W-URgZ6TQrPonKrJ1Bs2F1xRKGTOJPTu7dShMTZTagxfDFn7ioIwFWfMoQo7hnt5djO_GIJ_OYsqM14nhJadD8TfzZfVzv1W0yHt","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REST for P2P application?","postDate":"1096977305","msgId":4547,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNqdTIycCtybmo4QGVHcm91cHMuY29tPg==","inReplyToHeader":"PG9wc2ZiZWVpZWRrM2U3YnFAd2hpc3Blci52Yy5zaGF3Y2FibGUubmV0Pg=="},"prevInTopic":4546,"nextInTopic":4548,"prevInTime":4546,"nextInTime":4548,"topicId":4544,"numMessagesInTopic":19,"msgSnippet":"Ryan, I ve recently been thinking about something similar -- a p2p protocol for a generic object system (data, not behavior) based on a network database model.","rawEmail":"Return-Path: &lt;thompsonbry@...&gt;\r\nX-Sender: thompsonbry@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 96345 invoked from network); 5 Oct 2004 11:55:25 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m23.grp.scd.yahoo.com with QMQP; 5 Oct 2004 11:55:25 -0000\r\nReceived: from unknown (HELO n2a.bulk.scd.yahoo.com) (66.94.237.36)\n  by mta3.grp.scd.yahoo.com with SMTP; 5 Oct 2004 11:55:24 -0000\r\nReceived: from [66.218.69.4] by n2.bulk.scd.yahoo.com with NNFMP; 05 Oct 2004 11:55:06 -0000\r\nReceived: from [66.218.66.118] by mailer4.bulk.scd.yahoo.com with NNFMP; 05 Oct 2004 11:55:06 -0000\r\nDate: Tue, 05 Oct 2004 11:55:05 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;cju22p+rnj8@...&gt;\r\nIn-Reply-To: &lt;opsfbeeiedk3e7bq@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 4901\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.36\r\nFrom: &quot;thompsonbry&quot; &lt;thompsonbry@...&gt;\r\nSubject: Re: REST for P2P application?\r\nX-Yahoo-Group-Post: member; u=172277276\r\nX-Yahoo-Profile: thompsonbry\r\n\r\n\nRyan,\n\nI&#39;ve recently been thinking about something similar -- a p2p protocol\nfor a generic object system (data, not behavior) based on a network\ndatabase model.  I have done more modeling of the client-server\ninteractions than the interactions among the peers, but I can share\nsome of my thoughts.\n\nI am also using URIs to identify objects.  A new URI is minted each\ntime a new object is created.  However, the URIs are NOT providing\naddresses for objects.  Instead, each peer needs to lookup whether\nor not it currently holds an copy of an object with that URI.  I\nthink that you will also need a similar distinction between identifier\nand address.  You could make this even more clear by using a URN\nscheme, which would emphasize that the URI is not functioning as an\naddress.\n\nI am just assigning a unique base URI to each peer.  The objects\nwithin the store hosted by a peer have unique identifiers.  The\nURI of the object just combines the URI of the store with the\nunique-within-store identifier for the object (which is an\ninteger).\n\nThe URI of an object NEVER changes throughout its life cycle.  It\nis the persistent identity of that object, but not its address. \n\nThis also means that de-referencing an object, even within the same\nstore, requires running through the locator and figuring out whether\nthe object is local or remote.  While protocol interactions pass URIs\naround, inside a store they are always interned and the peer just\n&quot;thinks&quot; about them as ints.\n\nIn terms of the &quot;simple uniform interface&quot; dimension, I have less\nto say so far.  The generic object system is something that I am\nexploring for scalable semantic stores (RDF and TopicMaps).  The\ndata structure is very simple, so I should be able to use a simple\nkind of representation transfer to materialize the objects, or to\nupdate them.\n\nThe query side is where I am hoping that things will really shine.\nThe network database model makes it possible to get by with a\nstateless protocol for iterators.  Basically, the client needs to\npass back some minimal state in the connection, essentially\ncorresponding to the current generic object in a list or the\ncurrent generic object in a tree traversal.  All of which are\nidentified by URIs.\n\nOne of the interesting things is that I expect that a client will\nbe able to ask for itr.next() and recieve the response from whatever\npeer actually holds the next generic object.\n\nThanks,\n\n-bryan\n\n--- In rest-discuss@yahoogroups.com, Ryan Fugger &lt;rfugger@y...&gt; wrote:\n&gt; \n&gt; Hi.  I&#39;ve been struggling with trying to apply REST to a project of \nmine,  \n&gt; a decentralized P2P payment system using only IOUs passed between \nfriends  \n&gt; in a social network:\n&gt; \n&gt; http://ripple.sourceforge.net/\n&gt; \n&gt; The payment network is made up of nodes living on http servers.  I \ncan see  \n&gt; how REST would be appropriate for a client API to a node on the \nnetwork --  \n&gt; to allow users to perform actions through their node, to allow \necommerce  \n&gt; sites to access the network, etc.  But I&#39;m having trouble seeing \nhow a  \n&gt; RESTful approach might improve the protocol for communications \nbetween  \n&gt; nodes.\n&gt; \n&gt; Some issues I&#39;ve come across:\n&gt; \n&gt; * Identifying distributed objects with resolvable URIs is \nproblematic  \n&gt; since it seems to want to locate them on a single node, when in \nreality  \n&gt; they live on several nodes.  Giving them several identifiers seems  \n&gt; inelegant.\n&gt; * Nodes must be able to move to different servers, and if there are \nURI  \n&gt; identifiers for resources on a node that must be resolvable, then \nthere  \n&gt; must a mechanism for changing those identifiers when a node moves.  \nThis  \n&gt; could cause problems with historical audit information backed up \non  \n&gt; offline machines, unless two identifiers are stored.  A node could \nmove  \n&gt; many times, so many identifiers may be needed for each resource.\n&gt; * Only fully-functional nodes may communicate with other nodes as \nnodes.   \n&gt; Scalability in terms of third-party access to partial node \nfunctionality  \n&gt; (the main benefit of giving all resources a URI?) is not an issue.  \nFor  \n&gt; simplicity and security, all access to the network must be through \none&#39;s  \n&gt; own node.\n&gt; \n&gt; I&#39;m a big fan of the REST philosophy, and I&#39;d like to take \nadvantage of it  \n&gt; wherever appropriate.  In this case however, REST seems to me like  \n&gt; complicated overkill compared to simple XML messaging.  I don&#39;t \nhave a lot  \n&gt; of experience with RESTful applications, so I&#39;d like to know if \nothers  \n&gt; agree with me, or if there&#39;s something I&#39;m really not getting here.\n&gt; \n&gt; Here is a link to the beginnings of a RESTful version of inter-\nnode  \n&gt; communications:\n&gt; \n&gt; http://ripple.sourceforge.net/resources.xml.txt\n&gt; \n&gt; And here is a link to a fairly complete XML messaging version:\n&gt; \n&gt; http://ripple.sourceforge.net/messages.xml.txt\n&gt; \n&gt; Much more background information is available at the project home \npage.\n&gt; \n&gt; Thanks,\n&gt; Ryan\n\n\n\n\n"}}