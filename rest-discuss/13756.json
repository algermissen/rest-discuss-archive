{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223379095,"authorName":"groovepapa","from":"&quot;groovepapa&quot; &lt;luke.crouch@...&gt;","profile":"groovepapa82","replyTo":"SENDER","senderId":"YBoXK6RcbxiTldH3v-h7mRPgpc8gNdkKf1sDT5zuZQl0nqoeop2Bw_v3yXNO1NmFt5C0NzvTOOkxrsH_kCe3nkLAEWzDPJ9lE_ka","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: RESTful Cookies?","postDate":"1255016242","msgId":13756,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhbDB2aSt1ZnZvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRBQ0UwNEQ3LjYwNjAzMDdAYWNhZC5iZz4="},"prevInTopic":13755,"nextInTopic":13763,"prevInTime":13755,"nextInTime":13757,"topicId":13750,"numMessagesInTopic":9,"msgSnippet":"I like to use cookies from javascript for things like preserving the values of input boxes between requests. That seems like it s all client state data anyway,","rawEmail":"Return-Path: &lt;luke.crouch@...&gt;\r\nX-Sender: luke.crouch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11763 invoked from network); 8 Oct 2009 15:37:23 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.re1.yahoo.com with QMQP; 8 Oct 2009 15:37:23 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta3.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 15:37:23 -0000\r\nX-Received: from [69.147.65.171] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 08 Oct 2009 15:37:23 -0000\r\nX-Received: from [98.137.34.72] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 08 Oct 2009 15:37:23 -0000\r\nDate: Thu, 08 Oct 2009 15:37:22 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hal0vi+ufvo@...&gt;\r\nIn-Reply-To: &lt;4ACE04D7.6060307@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;groovepapa&quot; &lt;luke.crouch@...&gt;\r\nSubject: Re: RESTful Cookies?\r\nX-Yahoo-Group-Post: member; u=223379095; y=Hl7_SK26O2OzMIqOGc7VyDlbHhDUjc9IV1F65GH6ZJyMDgBfxBWC\r\nX-Yahoo-Profile: groovepapa82\r\n\r\nI like to use cookies from javascript for things like preserving the values=\r\n of input boxes between requests. That seems like it&#39;s all client state dat=\r\na anyway, so I&#39;ve never felt RESTless doing it. It&#39;s just persisting the cl=\r\nient-side (HTML) application state.\n\n-L\n\n--- In rest-discuss@...=\r\nm, Nina Jeliazkova &lt;nina@...&gt; wrote:\n&gt;\n&gt; \n&gt; Moore, Jonathan (CIM) wrote:\n&gt; =\r\n&gt; Nina Jeliazkova wrote:\n&gt; &gt;   \n&gt; &gt;&gt; Besides, REST does not encourages cook=\r\nies and sessions, meaning\n&gt; &gt;&gt; credentials or something derived from creden=\r\ntials should be sent\n&gt; &gt;&gt; on_every_ request.\n&gt; &gt;&gt;     \n&gt; &gt;\n&gt; &gt; I&#39;m curious =\r\nabout this assertion, at least as it applies to cookies. Cookies represent =\r\npieces of application state that are stored with the client, and they get s=\r\nent on every request (where domains apply). Why isn&#39;t that RESTful?\n&gt; &gt;   \n=\r\n&gt; Well, this is what REST gurus [1] are telling us:\n&gt; \n&gt;     /*&quot;The Trouble=\r\n with Cookies*\n&gt;     A web service that sends HTTP cookies violates the pri=\r\nnciple of\n&gt;     statelessness. In fact, it usually violates statelessness t=\r\nwice. It\n&gt;     moves application state onto the server even though it belon=\r\ngs on\n&gt;     the client, and it stops clients from being in charge of their =\r\nown\n&gt;     application state.&quot;\n&gt;     ...\n&gt;     OK, so cookies shouldn=E2=80=\r\n=99t contain session IDs: that=E2=80=99s just an excuse\n&gt;     to keep appli=\r\ncation state on the server. What about cookies that\n&gt;     really do contain=\r\n application state? What if you serialize the\n&gt;     actual session hash and=\r\n send it as a cookie, instead of just sending\n&gt;     a reference to a hash o=\r\nn the server?\n&gt;     This can be RESTful, but it=E2=80=99s usually not. The =\r\ncookie standard says\n&gt;     that the client can get rid of a cookie when it =\r\nexpires, or when the\n&gt;     client terminates. This is a pretty big restrict=\r\nion on the client=E2=80=99s\n&gt;     control over application state. If you ma=\r\nke 10 web requests and\n&gt;     suddenly the server sends you a cookie, you ha=\r\nve to start sending\n&gt;     this cookie with your future requests. You can=E2=\r\n=80=99t make those 10\n&gt;     precookie requests unless you quit and start ov=\r\ner. To use a web\n&gt;     browser analogy, your =E2=80=9CBack=E2=80=9D button =\r\nis broken. You can=E2=80=99t put the\n&gt;     application in any of the states=\r\n it was in before you got the cookie.\n&gt;     ...\n&gt;     The only RESTful use =\r\nof cookies is one where the client is in charge\n&gt;     of the cookie value. =\r\nThe server can suggest values for a cookie\n&gt;     using the Set-Cookie heade=\r\nr, just like it can suggest links the\n&gt;     client might want to follow, bu=\r\nt the client chooses what cookie to\n&gt;     send just as it chooses what link=\r\ns to follow. In some browser-based\n&gt;     applications, cookies are created =\r\nby the client and never sent to\n&gt;     the server. The cookie is just a conv=\r\nenient container for\n&gt;     application state, which makes its way to the se=\r\nrver in\n&gt;     representations and URIs. That=E2=80=99s a very RESTful use o=\r\nf cookies.&quot;\n&gt; \n&gt;     /\n&gt; \n&gt; I hope the authors don&#39;t mind the long citation=\r\n .\n&gt; \n&gt; Best regards,\n&gt; Nina\n&gt; \n&gt; [1] Leonard Richardson and Sam Ruby, REST=\r\nful Web Services, O&#39;Reilly\n&gt; 2007, p.252\n&gt; \n&gt; &gt; (Noting that some cookies m=\r\nay contain more interesting information than JSESSIONID, for example. I agr=\r\nee with an understand the general assessment that server-side session stora=\r\nge is not RESTful).\n&gt; &gt;\n&gt; &gt; Jon\n&gt; &gt; ........\n&gt; &gt; Jon Moore\n&gt; &gt; Comcast Inte=\r\nractive Media\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; -----Original Message-----\n&gt; &gt; From: rest-dis=\r\ncuss@yahoogroups.com on behalf of Nina Jeliazkova\n&gt; &gt; Sent: Thu 10/8/2009 1=\r\n0:53 AM\n&gt; &gt; To: Subbu Allamaraju\n&gt; &gt; Cc: jeliazkova.nina@...; Rest List\n&gt; &gt;=\r\n Subject: Re: [rest-discuss] composition of REST services\n&gt; &gt;  \n&gt; &gt; Subbu A=\r\nllamaraju wrote:\n&gt; &gt;   \n&gt; &gt;&gt; Learning how to authenticate is no different f=\r\nrom leaning about the\n&gt; &gt;&gt; media types and formats.\n&gt; &gt;&gt;\n&gt; &gt;&gt; I don&#39;t mean =\r\nto undermine the difficulty here, but the problem does\n&gt; &gt;&gt; not change just=\r\n because a URI belongs to a server different from the\n&gt; &gt;&gt; one that served =\r\nthe representation.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Subbu\n&gt; &gt;&gt;     \n&gt; &gt; The difficulty is not in =\r\nthe authentication itself, but with the\n&gt; &gt; federated authentication/author=\r\nization, encompassing multiple servers.\n&gt; &gt; Otherwise, it is pretty easy to=\r\n protect each resource with arbitrary\n&gt; &gt; kind of available authentication =\r\nscheme and ask the client to provide\n&gt; &gt; credentials on each POST.  It is q=\r\nuite sure users will not be happy with\n&gt; &gt; such approach. \n&gt; &gt;\n&gt; &gt; Besides,=\r\n REST does not encourages cookies and sessions, meaning\n&gt; &gt; credentials or =\r\nsomething derived from credentials should be sent\n&gt; &gt; on_every_ request.\n&gt; =\r\n&gt;\n&gt; &gt; Best regards,\n&gt; &gt; Nina\n&gt; &gt;   \n&gt; &gt;&gt; On Thu, Oct 8, 2009 at 4:24 PM, Ni=\r\nna Jeliazkova &lt;nina@...\n&gt; &gt;&gt; &lt;mailto:nina@...&gt;&gt; wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n=\r\n&gt; &gt;&gt;     \n&gt; &gt;&gt;&gt;     The integration problem is real, but the server boundar=\r\ny does not\n&gt; &gt;&gt;&gt;     change the problem very much. Does the client care if =\r\nthe\n&gt; &gt;&gt;&gt;     resource it is accessing is on hateoas.com &lt;http://hateoas.co=\r\nm&gt;\n&gt; &gt;&gt;&gt;     or ulser.com &lt;http://ulser.com&gt; as long it knows the semantics=\r\n of\n&gt; &gt;&gt;&gt;     the link, the methods to use, security requirements, media ty=\r\npes\n&gt; &gt;&gt;&gt;     and so on?\n&gt; &gt;&gt;&gt;       \n&gt; &gt;&gt;     At least transparently acces=\r\nsing resources outside of server\n&gt; &gt;&gt;     boundary under different domains =\r\nrequires /slightly/ more\n&gt; &gt;&gt;     complicated authentication/authorization =\r\nscheme, that just a\n&gt; &gt;&gt;     single server, unless all resources are consid=\r\nered unprotected. \n&gt; &gt;&gt;\n&gt; &gt;&gt;     Best regards,\n&gt; &gt;&gt;     Nina\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;=\r\n      \n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;     \n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ----------------=\r\n--------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}