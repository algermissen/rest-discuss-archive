{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"ZY6goaFC5dhlRbybHrwuTcM1ciKDwVY6NpCNK1rwQ0ZpMQpRinkwZERCdelxF90DgU1Jpg4jt7h2_nXqHjMFMgWSkpVqkSnmdSoUaxdg-A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RDF Database Access Protocol","postDate":"1015836469","msgId":1001,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNjM5ZHRIWFprYUlacmJLRm4wMDAwMTk4Y0Bob3RtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":1003,"prevInTime":1000,"nextInTime":1002,"topicId":1001,"numMessagesInTopic":2,"msgSnippet":"Cool, another protocol from the W3C. -- RDF Database Access Protocol http://www.w3.org/2002/01/rdf-databases/protocol -- Protocol Abstraction We ll say that","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 11 Mar 2002 08:39:26 -0000\r\nReceived: (qmail 44623 invoked from network); 11 Mar 2002 08:39:26 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m6.grp.snv.yahoo.com with QMQP; 11 Mar 2002 08:39:26 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.198)\n  by mta2.grp.snv.yahoo.com with SMTP; 11 Mar 2002 08:39:26 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Mon, 11 Mar 2002 00:39:25 -0800\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RDF Database Access Protocol\r\nDate: Mon, 11 Mar 2002 00:47:49 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE639dtHXZkaIZrbKFn0000198c@...&gt;\r\nX-OriginalArrivalTime: 11 Mar 2002 08:39:25.0941 (UTC) FILETIME=[403E7250:01C1C8D8]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\nCool, another protocol from the W3C.\n\n--\nRDF Database Access Protocol\nhttp://www.w3.org/2002/01/rdf-databases/protocol\n\n--\nProtocol Abstraction\nWe&#39;ll say that RDF Database Clients communicate with RDF Database Servers by\nexchanging serialized objects. The serialization may look like SQL, LISP,\nXML, N-Triples, etc. The underlying protocols may be TCP, UDP, HTTP, SMTP,\netc. In other words, something like\n\n  INSERT\n    INTO DATABASE &lt;http://example.com/temperature-readings&gt;\n    TRIPLE (&lt;http://example.com/temperature-readings#reading311232&gt;,\n            &lt;http://example.com/temperature-readings#locationName&gt;,\n     &quot;Waltham&quot;);\n\nis basically the same as\n  &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n           xmlns=&quot;http://www.w3.org/2002/01/rdap/ont-1#&quot; &gt;\n    &lt;InsertionRequest&gt;\n       &lt;database rdf:resource=&quot;http://example.com/temperature-readings&quot; /&gt;\n       &lt;rdf:subject\n        rdf:resource=&quot;http://example.com/temperature-readings#reading311232&quot;\n/&gt;\n       &lt;rdf:predicate\n        rdf:resource=&quot;http://example.com/temperature-readings#locationName&quot;\n/&gt;\n       &lt;rdf:object&gt;Waltham&lt;/rdf:object&gt;\n    &lt;/InsertionRequest&gt;\n  &lt;/rdf:RDF&gt;\n\nand we wont worry about which kind of syntaxes people are using for now.\n(These are just vague examples; I don&#39;t know if they are really workable\nsyntaxes.)\n\nNote that we cannot nicely map this to an API, because some of the\noperations have a recursive structure. For example we&#39;d like &quot;delete\ntriple(a,b,c)&quot; and &quot;foreach ?x where ?x=c do delete triple(a,b,?x)&quot; to use\nthe same &quot;delete&quot; operation. We&#39;d also like to be able to nest foreach\nwithin foreach, etc. We can only do this with an API like &quot;do(RequestObject)\nreturns ResponseObject&quot;. So our focus remains on designing Request and\nResponse objects.\n\nWe&#39;ll consider HTTP GET of an XML/RDF file as a kind of degenerate\nquery-for-everything, PUT as a replace-entire-database-contents. That works\nfor some things, but many other times we&#39;ll want more fine-grained access.\n\n\n\n"}}