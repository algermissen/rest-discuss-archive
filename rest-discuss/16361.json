{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Q4hV585WF8k8EJiQfjLCKsTbXm68LhM9fJlyk3vAmzNZl76Mnyu3_l8p-JhuQmnvfeMtQs_KkflxkJZLsUc42E-Hx5womTtLraRC5DmcTw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs. list of orders]","postDate":"1282558402","msgId":16361,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODIzMDQxMzIyLjgwMjM2ZTZjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDEyODI1NTQ2MjAuMTczNTcuNjguY2FtZWxAYmFja3BhY2s+","referencesHeader":"PEFBTkxrVGluNlctcDhxX3Bmc29FR3JiT1NtRnFDWFNqVENfZnZnTDEyOW8xdUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMTMyS3RfPW1aQytrYm5NQlVLZUJtOGE5cEVma0VaOHNab0M5RkBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlua25fUTdZRGhqbS1LWlBBYTlNRj16eXNlODFMS0x0VTZYX1U1VEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGluV25OdXVXWGJLZGVUWmFmOW9aYzZLQlo9VG5wVXk1Q25YZmZZZEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9b1Qxc0t5VjNjUD0tejd6dFJlcEVPMFk1Mi01QkMzc1NVWDFvYUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9aFRyekVYRzk1VHl5Q0ZmNlVNVnY0XzMrM2FCTlBUZk9CdmszZ0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwODIzMDIxODUwLjI1ZTM4M2Q1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyODI1NTQ2MjAuMTczNTcuNjguY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16360,"nextInTopic":16362,"prevInTime":16360,"nextInTime":16362,"topicId":16269,"numMessagesInTopic":139,"msgSnippet":"... Remebering that HTTP != REST, RFC 2616 says this:  Media-type values are registered with the Internet Assigned Number Authority (IANA [19]). The media","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 70611 invoked from network); 23 Aug 2010 10:13:18 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m7.grp.sp2.yahoo.com with QMQP; 23 Aug 2010 10:13:18 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 23 Aug 2010 10:13:18 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 59A24509DC;\n\tMon, 23 Aug 2010 06:13:17 -0400 (EDT)\r\nDate: Mon, 23 Aug 2010 04:13:22 -0600\r\nTo: juergen.brendel@...\r\nCc: Glenn Block &lt;glenn.block@...&gt;, mike amundsen &lt;mamund@...&gt;,\n =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;, Peter Williams\n &lt;pezra@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100823041322.80236e6c.eric@...&gt;\r\nIn-Reply-To: &lt;1282554620.17357.68.camel@backpack&gt;\r\nReferences: &lt;AANLkTin6W-p8q_pfsoEGrbOSmFqCXSjTC_fvgL129o1u@...&gt;\n\t&lt;AANLkTik132Kt_=mZC+kbnMBUKeBm8a9pEfkEZ8sZoC9F@...&gt;\n\t&lt;AANLkTinkn_Q7YDhjm-KZPAa9MF=zyse81LKLtU6X_U5T@...&gt;\n\t&lt;AANLkTinWnNuuWXbKdeTZaf9oZc6KBZ=TnpUy5CnXffYd@...&gt;\n\t&lt;AANLkTi=oT1sKyV3cP=-z7ztRepEO0Y52-5BC3sSUX1oa@...&gt;\n\t&lt;AANLkTi=hTrzEXG95TyyCFf6UMVv4_3+3aBNPTfOBvk3g@...&gt;\n\t&lt;20100823021850.25e383d5.eric@...&gt;\n\t&lt;1282554620.17357.68.camel@backpack&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs.\n list of orders]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJuergen Brendel wrote:\n&gt; \n&gt; I am really interested to find out where it says that on the\n&gt; public Internet the only permissible media types have to be\n&gt; IANA registered.\n&gt; \n\nRemebering that HTTP != REST, RFC 2616 says this:\n\n&quot;\nMedia-type values are registered with the Internet Assigned Number\nAuthority (IANA [19]). The media type registration process is\noutlined in RFC 1590 [17]. Use of non-registered media types is\ndiscouraged.\n&quot;\n\nThe RFC makes no distinction between public/private use of HTTP.  So\nRFC 2616 discourages the use of non-registered media types on\nintranets, as do I.\n\n&gt;\n&gt; Isn&#39;t it enough to say that the type is registered &#39;somewhere&#39;?\n&gt;\n\nNo, because there is only one registration authority defined by HTTP,\nand that&#39;s IANA.\n\n&gt;\n&gt; Isn&#39;t it completely normal already that some media types - even\n&gt; IANA registered ones - are not supported by all clients?\n&gt; \n\nOf course.  Which is why I use the term &#39;ubiquitous media types&#39; when\ndiscussing REST -- being registered != being standardized, while being\nstandardized != being registered.  To clarify:  an unregistered media\ntype on your intranet, is a de-facto standard on your intranet, IANA be\ndamned.  If it&#39;s traversing the Internet, however, REST requires that\nit be standardized, therefore registered.\n\n&gt;\n&gt; So, what makes the IANA registration so special? It doesn&#39;t magically\n&gt; make all clients understand all those types. It&#39;s just a place where\n&gt; you can go to find the official definition of the type. And when you\n&gt; feel like it, you could possibly implement a proper handler for it.\n&gt; \n\nThat&#39;s exactly what *does* make it so special.  If your traffic is\ntraversing my public intermediary on the public Internet, then I have\nevery right to insist that you don&#39;t use a private media type\nidentifier.  I need to be able to make sure that your chocolate doesn&#39;t\nget in my peanut butter, so to speak, and the only way I can do that is\nif I know where to look for a definition of your media type.\n\nWhich is what a media type identifier _does_.  By looking up the\nidentifier in a registry, I can see what media type it is bound to\n(remember that a single media type may have multiple valid identifiers).\nThat binding is the address of the specification of the media type.\nWithout a registry to correlate a media type identifier to a spec, the\nmedia type identifier is semantically meaningless.\n\nIf I see a media type identifier that isn&#39;t in the IANA registry, how\ndo I know where to look, if I *do* want to implement a handler for it?\n\n&gt;\n&gt; In that case: Isn&#39;t the real requirement that an explanation of the\n&gt; type should be available &#39;somewhere&#39;? And if it&#39;s not an official\n&gt; IANA type, should it not suffice if you can provide a place where\n&gt; that definition can be retrieved?\n&gt;\n\nNo, and no.  I&#39;m sending &#39;application/xbel+xml&#39; over the Internet.\nThis is clearly a REST mismatch -- the media type being identified is\nstandardized, but by Python not IETF, and defines no media type\nidentifier.  My use of &#39;application/xbel+xml&#39; is ad-hoc.  To determine\nwhat it means, you have to Google for &#39;xbel&#39; and even then you&#39;re just\nguessing until you&#39;ve validated the payload.\n\nThe whole point of self-descriptive messaging is that you _don&#39;t_ have\nto set about Googling and introspecting, in order to confirm what spec\na media type identifier points to.  There&#39;s a registry for that...\n\nSo the solution to my REST mismatch, is to write up XBEL as an IETF\nstandard, such that it qualifies for the &quot;standards tree&quot; in the IANA\nregistry of media type identifiers.  I think that&#39;s too strict a\nrequirement, but it isn&#39;t my call.  Once it&#39;s done, though, my REST\nmismatch disappears because now, like all standards-tree media type\nidentifiers, &#39;application/xbel+xml&#39; will point to an IETF-standardized\nmedia type specification.\n\n(Yeah, I know, nothing I call a spec is really a spec, just go with\nit...)\n\n&gt;\n&gt; Maybe a link to the definition of your &#39;non standard&#39; media type\n&gt; could be included every time you send an object with that media type?\n&gt; \n\nHTTP defines no such mechanism, HTTP only defines the IANA registry.\nWhich, if you think about it, is quite the improvement over Gopher,\nwhere the nascent concept of a protocol-layer token engaging a codec\nwas baked into the spec, requiring the spec to be versioned every time\na new token needed creating.  Although this did restrict Gopher to a\nuniform interface of only a very limited number of ubiquitous types.\n\n&gt;\n&gt; In that case, clients would be free to examine that definition so\n&gt; that they can start to make sense of it. For a public type, they\n&gt; would go to the IANA site and read up on it, in your particular case\n&gt; they go to your server and read about it.\n&gt; \n\nThis mechanism just isn&#39;t in, and won&#39;t be added to, HTTP 1.1 -- which\nis not to say that such an extension mechanism isn&#39;t slated for some\nsuccessor protocol or another, like HTTP 2 or Waka.  Roy has dropped\nhints here and there that Waka will not be adopting IANA, or its\nassociated media type identifiers.  This would mean that, like Gopher,\nsome token other than &#39;text/html&#39; would be used to identify the family\nof HTML media types.\n\n&gt;\n&gt; If your client is unable to understand that definition, then offering\n&gt; one of the standard types as an alternative (as mentioned by some\n&gt; people in this thread) seems to be reasonable.\n&gt; \n\nBut the media type identifier must be understood by all participants in\nthe communication!  This includes intermediaries, whose owners have\nevery right to insist that you not be able to bypass security\nrestrictions they have implemented on, say, &#39;image/jpg&#39; by tunneling\nthat codec selection through some private media type identifier that\nthe intermediary owner can&#39;t possibly agree to because it isn&#39;t any\nsort of standard, or even if it is, isn&#39;t contained in the IANA\nregistry.\n\nThe Internet is part of the public commons.  Don&#39;t abuse that trust,\nespecially for the sake of avoiding the anarchic scalability and\nserendipitous re-use that come from choosing ubiquitous media type\nidentifiers, by sending private media type identifiers which are the\nantithesis of self-descriptive messaging.  It isn&#39;t fair to anyone who\nwants to understand the nature of the data traversing their network,\nand it isn&#39;t fair to yourself if your goals correlate with those of\nREST.\n\n-Eric\n\n"}}