{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"DMeGveuNCMokye8jx2gjPhZymAwdxMtg2eeajd5cT7B2Kvz7JEOJM3HHpEpga4pDDPf7QWQtXdnw_bazlV4l3_trdsofvWWvr7kHM0E_fg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Rails 3.2 and PATCH","postDate":"1324298762","msgId":18100,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTExMjE5MDU0NjAyLjFhZGFmMjk3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PENBTnFpWkphSzVYdHlrekpoYXQ2ZmFaQ1FqeHZlOGdZb3kwNm03ck1qMWMyS001cDBkUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEEyQUQxMjUyLTY2N0QtNDRBNS1BNDg0LUIyMTREQzA2ODkxREBub3Jkc2MuY29tPgk8Q0IxMEY5NTEuMjcxMTklSm9uYXRoYW5fTW9vcmVAQ29tY2FzdC5jb20+CTwyMDExMTIxNjE1MzQzMS45ZDQxMmNjNS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwxQjE2QTU5QS1BNzkzLTQxQjktODRFMC03QzVEQTM1N0Y2MzBAQ29tY2FzdC5jb20+CTwyMDExMTIxNjE2MjI1OC43NzI4NzcyZi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw5QkQwM0U3QUExRDgxNTQzQUUzQUQ2N0NCNkZBREZFQzEzOEI5QzQ4QFBBQ0RDRVhNQjAzLmNhYmxlLmNvbWNhc3QuY29tPgk8MjAxMTEyMTcwOTMxMDEuZjU3MjJiNjIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8Q0FOcWlaSmFLNVh0eWt6SmhhdDZmYVpDUWp4dmU4Z1lveTA2bTdyTWoxYzJLTTVwMGRRQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":18098,"nextInTopic":18101,"prevInTime":18099,"nextInTime":18101,"topicId":18011,"numMessagesInTopic":86,"msgSnippet":"... For when it isn t a sufficient solution, i.e. the majority case where a patch isn t expected to be idempotent. ... Good grief, we re talking about","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73224 invoked from network); 19 Dec 2011 12:46:10 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 19 Dec 2011 12:46:10 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 19 Dec 2011 12:46:10 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 0C48150A65;\n\tMon, 19 Dec 2011 07:46:08 -0500 (EST)\r\nDate: Mon, 19 Dec 2011 05:46:02 -0700\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: &quot;Moore, Jonathan (CIM)&quot; &lt;Jonathan_Moore@...&gt;, Jan Algermissen\n &lt;jan.algermissen@...&gt;, Sebastien Lambla &lt;seb@...&gt;, Jakob\n Strauch &lt;jakob.strauch@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20111219054602.1adaf297.eric@...&gt;\r\nIn-Reply-To: &lt;CANqiZJaK5XtykzJhat6faZCQjxve8gYoy06m7rMj1c2KM5p0dQ@...&gt;\r\nReferences: &lt;A2AD1252-667D-44A5-A484-B214DC06891D@...&gt;\n\t&lt;CB10F951.27119%Jonathan_Moore@...&gt;\n\t&lt;20111216153431.9d412cc5.eric@...&gt;\n\t&lt;1B16A59A-A793-41B9-84E0-7C5DA357F630@...&gt;\n\t&lt;20111216162258.7728772f.eric@...&gt;\n\t&lt;9BD03E7AA1D81543AE3AD67CB6FADFEC138B9C48@...&gt;\n\t&lt;20111217093101.f5722b62.eric@...&gt;\n\t&lt;CANqiZJaK5XtykzJhat6faZCQjxve8gYoy06m7rMj1c2KM5p0dQ@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Rails 3.2 and PATCH\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; They are with PATCH, or by making them sub-reso=\r\nurces and using PUT,\n&gt; &gt; I hope is your takeaway...\n&gt; \n&gt; If creating sub-re=\r\nsources was a sufficient solution, why was PATCH\n&gt; created?\n&gt; \n\nFor when it=\r\n isn&#39;t a sufficient solution, i.e. the majority case where a\npatch isn&#39;t ex=\r\npected to be idempotent.\n\n&gt;\n&gt; &gt;\n&gt; &gt; Because now you&#39;d have two methods desc=\r\nribing the same sender\n&gt; &gt; intent of partial update. =A0That some partial-u=\r\npdate interactions\n&gt; &gt; may be idempotent is interesting, but it&#39;s an edge c=\r\nase, so I don&#39;t\n&gt; &gt; understand the need to optimize for it.\n&gt; \n&gt; I don&#39;t th=\r\nink it&#39;s as edge as you think it is.\n&gt; \n\nGood grief, we&#39;re talking about op=\r\ntimizing upstream traffic, which is\nalways an edge case.  The reasons for w=\r\nhat you don&#39;t like being told,\nis that REST optimizes the hell out of GET. =\r\n It just isn&#39;t a big deal\nto create a subresource, because then it&#39;s indivi=\r\ndually cacheable,\nwhich would seem to be a benefit if you want idempotent p=\r\nartial updates.\n\n&gt;\n&gt; Mobile clients are becoming more and more prevalent; t=\r\nhey operate on a\n&gt; relatively inefficient network where requests need to be=\r\n as lean as\n&gt; possible (partial) and easily re-issued(idempotent).\n&gt; \n\nI be=\r\nlieve Roy took that into account in his thesis, REST is designed\nfor just s=\r\nuch a problem domain.\n\n&gt;\n&gt; All that is required to make this possible if fo=\r\nr PUT semantics to be\n&gt; more general - i.e. drop the full replace semantic,=\r\n and make no\n&gt; assertion about the partial/fullness one way or the other.\n&gt;=\r\n \n\nOr make them subresources, at least you&#39;ve given a reason (fwiw) you\ncan=\r\n&#39;t use PATCH.\n\n&gt;\n&gt; &gt; I believe that sender intent stops at partial update,\n=\r\n&gt; &gt; without considering idempotency, and I see no advantage in adding\n&gt; &gt; c=\r\nomplexity to the protocol to take that into account -- especially\n&gt; &gt; not i=\r\nf there&#39;s already a RESTful solution to the problem...\n&gt; \n&gt; Removing the co=\r\nnstraint which specifies &#39;PUT requests must be full\n&gt; replace&#39; is less comp=\r\nlex, not more.\n&gt; \n\nYour response only makes sense when you take me out of c=\r\nontext.  I said\nadding another method for this edge case would increase com=\r\nplexity.\n\n&gt; \n&gt; &gt;\n&gt; &gt; If it&#39;s important to intermediaries that your partial =\r\nupdate be\n&gt; &gt; considered idempotent, then mint a URI for a subresource and =\r\nuse\n&gt; &gt; PUT. I should think that approach needs to be falsified before\n&gt; &gt; =\r\nlobbying for a new method.\n&gt; \n&gt; The problem with this advice is that it&#39;s n=\r\not a practical solution:\n&gt; the requirements for what constitutes efficient =\r\ngranularity can differ\n&gt; between clients, can change over time, and are ver=\r\ny difficult to get\n&gt; right up front.\n&gt; \n\nDisagree.  It&#39;s a common design pa=\r\nttern in REST.  Your argument amounts\nto, &quot;it&#39;s a tradeoff&quot;.  Well, yes, so=\r\nmetimes RESTful design decisions\nare, but they do have benefits.  In this c=\r\nase, making the update\nidempotent, and if it&#39;s the only thing of interest t=\r\no change, then it&#39;s\na benefit to make it its own resource for cacheability.=\r\n  Still not\nseeing the problem, here.\n\n&gt;\n&gt; Also, doing so reduces the visib=\r\nility of interaction in terms of\n&gt; smearing shared state across several res=\r\nources, this makes mechanisms\n&gt; like cache invalidation far more difficult =\r\nto leverage - it&#39;s\n&gt; redundant and costly.\n&gt; \n\nOnly if by visibility, you m=\r\nean by your definition of that term vs.\nRoy&#39;s.  What needs to be visible is=\r\n the interaction itself; if it&#39;s a\nsubresource using PUT, that&#39;s very visib=\r\nle on the wire, and how it fits\ninto the application is completely irreleva=\r\nnt because implementation\nspecifics are hidden behind the uniform interface=\r\n.\n\n-Eric\n\n"}}