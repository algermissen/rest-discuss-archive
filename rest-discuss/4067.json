{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":5507691,"authorName":"Seth Johnson","from":"Seth Johnson &lt;seth.johnson@...&gt;","profile":"differance1","replyTo":"SENDER","senderId":"v-PFOVfdHghUzUYtLLkzAwsyRL9q7sId5PNDDtwj1dFvHGQOAxQRGkbitQqUfcfOq6tQEpJQBfQWhEFTWeK1sMX-lbXyFAYKqZsaQWrJ35sF_0d0uQkRJsDQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Next: *Universal* State Transfer","postDate":"1071791331","msgId":4067,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGRTIzQ0UzLkNFRjNFMEVDQFJlYWxNZWFzdXJlcy5keW5kbnMub3JnPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":4066,"nextInTime":4068,"topicId":4067,"numMessagesInTopic":1,"msgSnippet":"(The following is a broad overview of a system I am developing; I think it is right exactly up the alley of REST, though it proposes to transcend some parts of","rawEmail":"Return-Path: &lt;seth.johnson@...&gt;\r\nReceived: (qmail 33423 invoked from network); 19 Dec 2003 00:19:52 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m6.grp.scd.yahoo.com with QMQP; 19 Dec 2003 00:19:52 -0000\r\nReceived: from unknown (HELO n38.grp.scd.yahoo.com) (66.218.66.106)\n  by mta3.grp.scd.yahoo.com with SMTP; 19 Dec 2003 00:19:52 -0000\r\nX-eGroups-Return: seth.johnson@...\r\nReceived: from [66.218.67.167] by n38.grp.scd.yahoo.com with NNFMP; 19 Dec 2003 00:19:42 -0000\r\nX-Sender: seth.johnson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 25272 invoked from network); 18 Dec 2003 23:49:11 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m14.grp.scd.yahoo.com with QMQP; 18 Dec 2003 23:49:11 -0000\r\nReceived: from unknown (HELO flamingo.mail.pas.earthlink.net) (207.217.120.232)\n  by mta3.grp.scd.yahoo.com with SMTP; 18 Dec 2003 23:49:11 -0000\r\nReceived: from 1cust191.tnt5.nyc9.da.uu.net ([67.192.228.191] helo=realmeasures.dyndns.org)\n\tby flamingo.mail.pas.earthlink.net with esmtp (Exim 3.33 #1)\n\tid 1AX7t9-0002CW-00\n\tfor rest-discuss@yahoogroups.com; Thu, 18 Dec 2003 15:49:04 -0800\r\nReceived: from RealMeasures.dyndns.org by realmeasures.dyndns.org\n\twith SMTP (MDaemon.v2.8.7.5.R)\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 18 Dec 2003 18:48:52 -0500\r\nMessage-ID: &lt;3FE23CE3.CEF3E0EC@...&gt;\r\nDate: Thu, 18 Dec 2003 18:48:51 -0500\r\nOrganization: Real Measures\r\nX-Mailer: Mozilla 4.79 [en] (Win98; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-MDaemon-Deliver-To: rest-discuss@yahoogroups.com\r\nX-Return-Path: seth.johnson@...\r\nX-eGroups-Remote-IP: 207.217.120.232\r\nFrom: Seth Johnson &lt;seth.johnson@...&gt;\r\nSubject: Next: *Universal* State Transfer\r\nX-Yahoo-Group-Post: member; u=5507691\r\nX-Yahoo-Profile: differance1\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 19 Dec 2003 00:19:42 -0000\r\nX-eGroups-Remote-IP: 66.218.66.106\r\n\r\n\n(The following is a broad overview of a system I am developing; I think it\nis right exactly up the alley of REST, though it proposes to transcend some\nparts of the REST architectural setup, without violating its motivations. \nIn two brief &quot;appendices&quot; I briefly begin describing the relationship\nbetween this model and 1) RDF and 2) REST.  -- Seth Johnson)\n\n\nContext Transfer Protocol\n\nThe context transfer protocol (CTP) is an end-to-end data transport protocol\nthat supports manipulable distributed hypermedia and data processing on the\nbasis of the concept of universal state transfer.  It employs a set of\nabstract terms that designate the elements of a uniform structure for\nrepresenting and transferring state, called the uniform context framework\n(UCF).\n\nIn place of documents and files, CTP implements contexts, manipulable\ncollections of resource elements which are referred to according to the UCF\nabstractions.  All of the elements of a context are assigned key values\nwhich function as links to the servers at which the elements originate. \nBecause all elements are links, multiple contexts may freely reuse the same\nelements.\n\nThe elements of the UCF reflect a universal information architecture which\nsupports all the fundamental operations one needs for managing information,\nincluding modeling, updating and maintenance, manipulation, querying,\ncategorizing, distribution and dependency tracking.  In this way, CTP\nimplements the notion of an atomic application.  Fundamental information\nprocessing functions for any application can be implemented simply by\ndeclaring a CTP context, or by declaring multiple contexts to be combined in\na complex application.  Any CTP front end interface that surfaces the full\ncomplement of CTP functionality can be used to browse and work with any\ninformation for any other application served by a CTP server.\n\nCTP is designed for scalability, providing a simple uniform interface\nthrough the use of a small set of verbs (GET, PUT, REMOVE and HOST) and the\nfinite set of generic elements which make up the UCF.  CTP servers attain\nthe status of universal application servers in the sense that all\nfundamental information management functions are provided by means of this\ninterface and the rest of the functions and architecture incorporated within\nthe protocol.\n\nThe information architecture underlying CTP affords a maximum degree of\nflexibility in data processing.  Entity relationships for all applications\nare stored in a flat fact table form, allowing information to be accessed\nand worked with rapidly, flexibly and with implicit interoperability among\nall applications.  In addition, by using the UCF abstractions as generic\nprimitives, CTP makes possible a highly granular procedural approach to data\nprocessing that is unimpeded by the intricacies of entity-relationship\nmodels or the strictures of table- or record-level distribution and/or\nreplication.  Higher-level techniques for managing complexity, such as\nset-oriented and object-oriented data processing and programming, may be\nimplemented on top of the CTP layer.\n\nInstead of working with information through the representation of diverse\nentities in separate physical tables, the CTP physical data model is a\ngeneralized and denormalized structure that directly represents relations as\nsuch.  Relations implemented under CTP are called contexts.  CTP uses the\nfollowing generic abstractions to represent the elements of any context:\n\n * Space\n * Location\n * Standpoint\n * Use Type\n * Use\n * Link Type\n * Link\n * Use Attribute\n * Link Attribute\n * Use Attribute Value\n * Link Attribute Value\n * Use Category\n * Link Category\n * Use Category Value\n * Link Category Value\n\nThese elements make up the uniform context framework (UCF), a standard\nstructure for representing and transferring state.  CTP assigns unique key\nvalues to each element, made up of a URL (designating the location of a CTP\nserver), a forward slash, and a key value unique to that server.  For\nexample: ctphome.org/18273645.\n\nA general context in CTP is comprised of a use type related to a link type. \nA particular context instance is designated by a particular use of the use\ntype, which can have any number of links, particular instances of the link\ntype, related to it.  This combination of use types, link types, uses, and\nlinks describes a traditional one-to-many relationship, wherein the various\nuses of a use type serve as �records� of the parent entity type (on the\n�one� side), and the multiple links of a link type serve as �records� of the\nchild entity type (on the �many� side).\n\nIn CTP, state is an aspect of contexts representing their generality, and is\ndesignated in terms of the concepts of space, location, and standpoint. \nDeclaring a state for a CTP context means that the context serves as a\nconvention among all clients and servers that participate in that state. \nSpace represents the notion of an abstract realm within which numerous CTP\nservers participate and interoperate as they support shared contexts. \nLocation represents an individual CTP server.  Standpoint is an abstraction\nused to represent states of narrow scope hosted at particular locations, for\nthe purpose of independent or provisional development work.\n\nGenerality of a state is designated by either providing key values for\nspace, location and/or standpoint, or leaving their key values empty.  A\nstate representing generality across an entire space is represented by\nproviding a unique key value for the space, while leaving the location and\nstandpoint keys empty.\n\nA state for representing universal conventions would be designated by\nleaving all three key values empty.  However, since this designates no\nauthoritative server for the state, contexts defined within such a state\ncannot be managed by CTP, and would require ratification as standards by\nexternal standards bodies, followed by general adoption in code and\npractice.  With CTP, this process of fostering general adoption by means of\nstandards bodies becomes significantly less necessary.  Instead of\npresupposing that state and physical data models are so arbitrarily complex\nand diverse as to necessitate such a process in order to assure\ninteroperability, CTP provides for universal interoperability at the data\ntransport level.\n\nTraditional entity-relationship modeling entails record- and table-level\nreplication in distributed environments because it binds sets of attributes\nto individual physical tables representing discrete entities.  Under CTP,\ndistribution of attributes and their values is not accomplished in the same\nmanner.  CTP uses the UCF to distribute metadata describing the relational\norganization of information across servers, while it leaves particular\nattribute values at particular locations, where CTP servers act as their\nauthoritative hosts.  User agents and interoperating CTP servers may\nmaintain the currency of their local caches of attribute values according to\nany algorithm appropriate to their own purposes.\n\nInstead of binding sets of attributes to particular tables representing\nparticular entities, CTP uses the abstractions that make up the UCF to\ndescribe scopes of relevance for link and use attributes.  Attributes can be\ndeclared to be relevant for all links of a particular link type, or for all\nlinks used by a particular use type, or for all instances of a particular\nuse or link regardless of general context (use type and/or link type), or\nfor any other of the finite number of scopes that can be described by the\npossible permutations of the UCF elements.  CTP servers provide and maintain\nappropriate attributes and values for various contexts according to these\nscopes of relevance.\n\nCTP contexts do not presuppose or require locking mechanisms, since whenever\nuser agents request an occasion to modify a context, CTP servers notify them\nwhether the context has been modified in whole or in part since the time of\nthe user agent&#39;s local copy.  CTP servers may implement shared contexts as\nfreely interruptible or as &quot;reservable&quot; according to diverse governing\nprinciples.  Separate protocols may implement locking or other &quot;reservation&quot;\nschemes on top of the CTP layer, for contexts for which that is desired.\n\nMessage structure \t- requests, responses, occasions, events\n\nState distribution system \t- metadata, attributes, values, hosts\n\nData structure \t- denormalized\n\nErrors / Responses\n\nAppendix A: CTP and RDF\n\nThe correlates for RDF&#39;s subjects, predicates, and objects under CTP are\nuses, link types, and links.\n\nCTP/Use - Rdf Subject\nCTP/Link Type - Rdf Predicate\nCTP/Link - Rdf Object\n\nCTP moves beyond RDF&#39;s knowledge-modeling assertions by splitting subjects\ninto use types and uses, and then using the combination of use types with\nlink types to define atomic applications, contexts which automatically\nprovide all fundamental information functions needed to manage information\nfor any application.  Because CTP is designed in this manner, it is\nperfectly suited for RDF applications.  It simply goes beyond the\nknowledge-modeling purposes of RDF and the semantic web, to providing\nuniversal fundamental functions and implicit interoperability among all\napplications.\n\nAppendix B: CTP and REST\n\nRoy Fielding has articulated a comprehensive set of engineering principles\nwhich constitute an architectural style called &quot;representational state\ntransfer&quot; (REST) intended to govern optimal Web architecture and Web\napplication design.  By describing how CTP&#39;s implementation of universal\nstate transfer compares with the architectural principles of REST, we can\naddress its design implications in an orderly and reasonably complete\nmanner.  The chief differences stem from the fact that past architectural\nprinciples have presupposed the arbitrary complexity of state and data\nmodels, and therefore have taken certain design decisions geared toward\nmanaging complexity, which are unnecessary within CTP.\n\n\n-- \n\nDRM is Theft!  We are the Stakeholders!\n\nNew Yorkers for Fair Use\nhttp://www.nyfairuse.org\n\n[CC] Counter-copyright: http://realmeasures.dyndns.org/cc\n\nI reserve no rights restricting copying, modification or distribution of\nthis incidentally recorded communication.  Original authorship should be\nattributed reasonably, but only so far as such an expectation might hold for\nusual practice in ordinary social discourse to which one holds no claim of\nexclusive rights.\n\n\n\n"}}