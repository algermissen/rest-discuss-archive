{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229540941,"authorName":"dev","from":"dev &lt;dev.akhawe@...&gt;","profile":"bertie_wooster_funny","replyTo":"SENDER","senderId":"OBsZncLAx2Np5ArUUb1yPf-Bi1nvpdl5B4Z28vHtGHYv_FuoDiS-GSfxaW6nU0K7k4fIXx3IEflv17QeFD-WiDg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: The Use of Metadata in URIs: How long does a FORM assertion last?","postDate":"1209835488","msgId":10705,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVjZjM1YTFiMDgwNTAzMTAyNG4xNWRjYjQ4YXEyMmVkNTE3MzYxMjZhNDI1QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGE2YTZkZjM2MDgwNTAxMTMwMW4zN2ZjMDhkNGczYmEzZmE5ZDU2Mzk5NDhjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGE2YTZkZjM2MDgwNDMwMTM1MnAyZTc3YzM5NWhiMDJmODhiNzVjZmQ4YjRiQG1haWwuZ21haWwuY29tPgkgPGE2YTZkZjM2MDgwNDMwMTQyOG1lZWJiY2MydmZlMzI0NWU2ZDNlNWJkYTlAbWFpbC5nbWFpbC5jb20+CSA8ZTlkZmZkNjQwODA0MzAyMTEycjY0YTg5M2ZmdGM5NmJmODhiNDUyOGU0ZjFAbWFpbC5nbWFpbC5jb20+CSA8YTZhNmRmMzYwODA0MzAyMjIwaDdlZmJlMGYyaWIzMjMwYjVjNzQwOTUwODdAbWFpbC5nbWFpbC5jb20+CSA8N0I1NzUyNDItRjMzMi00MjY1LUFCMTAtREFCMkZGOUU3M0QyQGdiaXYuY29tPgkgPDEyMDk2MzI2MTcuODczNC4xOC5jYW1lbEBsaW5uYT4gPDQ4MTlEOEVCLjQwOTA5MDJAYmFyZWx5ZW5vdWdoLm9yZz4JIDxhNmE2ZGYzNjA4MDUwMTEzMDFuMzdmYzA4ZDRnM2JhM2ZhOWQ1NjM5OTQ4Y0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":10701,"nextInTopic":10757,"prevInTime":10704,"nextInTime":10706,"topicId":10677,"numMessagesInTopic":22,"msgSnippet":"... long lived URLs or a hypermedia application poor in long lived URLs, just a few bootstrap URLs? Hypermedia as the engine of application state! ","rawEmail":"Return-Path: &lt;dev.akhawe@...&gt;\r\nX-Sender: dev.akhawe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96313 invoked from network); 3 May 2008 17:24:50 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m50.grp.scd.yahoo.com with QMQP; 3 May 2008 17:24:50 -0000\r\nX-Received: from unknown (HELO an-out-0708.google.com) (209.85.132.245)\n  by mta18.grp.scd.yahoo.com with SMTP; 3 May 2008 17:24:50 -0000\r\nX-Received: by an-out-0708.google.com with SMTP id b33so399941ana.112\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 03 May 2008 10:24:49 -0700 (PDT)\r\nX-Received: by 10.100.240.17 with SMTP id n17mr6101261anh.49.1209835488565;\n        Sat, 03 May 2008 10:24:48 -0700 (PDT)\r\nX-Received: by 10.100.226.5 with HTTP; Sat, 3 May 2008 10:24:48 -0700 (PDT)\r\nMessage-ID: &lt;ecf35a1b0805031024n15dcb48aq22ed51736126a425@...&gt;\r\nDate: Sat, 3 May 2008 22:54:48 +0530\r\nTo: &quot;Nick Gall&quot; &lt;nick.gall@...&gt;\r\nCc: &quot;Peter Williams&quot; &lt;pezra@...&gt;, \n\t&quot;Andrew S. Townley&quot; &lt;ast@...&gt;, \n\t&quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;a6a6df360805011301n37fc08d4g3ba3fa9d5639948c@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;a6a6df360804301352p2e77c395hb02f88b75cfd8b4b@...&gt;\n\t &lt;a6a6df360804301428meebbcc2vfe3245e6d3e5bda9@...&gt;\n\t &lt;e9dffd640804302112r64a893fftc96bf88b4528e4f1@...&gt;\n\t &lt;a6a6df360804302220h7efbe0f2ib3230b5c74095087@...&gt;\n\t &lt;7B575242-F332-4265-AB10-DAB2FF9E73D2@...&gt;\n\t &lt;1209632617.8734.18.camel@linna&gt; &lt;4819D8EB.4090902@...&gt;\n\t &lt;a6a6df360805011301n37fc08d4g3ba3fa9d5639948c@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: dev &lt;dev.akhawe@...&gt;\r\nSubject: Re: [rest-discuss] Re: The Use of Metadata in URIs: How long does a FORM assertion last?\r\nX-Yahoo-Group-Post: member; u=229540941; y=oZr3QzrBnknBZmwf6bOxVleOSB6wLK61GmkR9xzk72GsNPi0NW6ukqyi2komNg4\r\nX-Yahoo-Profile: bertie_wooster_funny\r\n\r\n&gt;So which is the better design -- a hypermedia application rich in\nlong lived URLs or a &gt;hypermedia application poor in long lived URLs,\njust a few &quot;bootstrap&quot; URLs?\n\nHypermedia as the engine of application state!\nHypermedia as the engine of application state!\nHATEOAS induces loose coupling in your network application. This\ncauses interesting stuff in your application like anarchic scalability\netc. etc. (see Roy&#39;s Thesis). Thus you want to use HATEOAS, as much as\nyou can. You WANT to try and use the links / hrefs as much as\npossible. Its just nice software engineering to decouple your client\nand servers from each other.\n\n&quot;When we think about WS-* style services, there&#39;s little notion of\ngraphs of information resources. One exchanges documents with\nembedded, &quot;managed&quot; data identifiers, like primary keys. The client\nhas to maintain the context of what the identifier signifies and know\nthe provider&#39;s assumptions in how, when, and where the identifier\nshould be accessed. All of these assumptions are tacit, and hence,\ntightly coupled.&quot;[1]\n\nCool URIs are a nice etiquette . But do NOT put this above your basic\nrequirement viz. building an application that will scale to the web\nand be able to live on the web (for which it will need various\ninteresting properties .. again see the REST-bible :)\n\nThe whole thrust of the &quot;cool uris don&#39;t change&quot; note , was that it is\nfrustrating for humans to see a dangling or broken link. But this\nwon&#39;t be the case if you are building a bot / your own application\nthat traverses your network based application.\n\nWhile I have concentrated on Scalability till now , you know that on\nthe net it is ANARCHIC scalability. There are NO guarentees and it is\nwrong of you to assume any (even if some &quot;best practices&quot; document\ntells you to).\n\n[1] http://www.stucharlton.com/blog/archives/000141.html\n\nRegards\nDevdatta\n\nOn 02/05/2008, Nick Gall &lt;nick.gall@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Thu, May 1, 2008 at 10:51 AM, Peter Williams &lt;pezra@...&gt; wrote:\n&gt; &gt; For example, in the application on which I work tracks time series\n&gt; &gt; data for a large number of metrics. Each metric is a resource, as is\n&gt;  &gt; the observations for those metrics. Many (non-browser) agents need all\n&gt; &gt; the observations from specific time frames to perform their work. To\n&gt; &gt; facilitate this we have provided a &quot;link&quot; in the metric\n&gt;  &gt; representations to any time based subset of the observations for that\n&gt; &gt; metric using a template. For example,\n&gt; &gt;\n&gt; &gt; http://foo.example/metrics/232/observations?start={start_time}&end={end_time}\n&gt;  &gt;\n&gt; &gt; This works quite well for us, and I cannot think of any other approach\n&gt; &gt; that would be as efficient and simple. It is worth noting that we do\n&gt; &gt; not guarantee that URL will exist in the future. Rather, we guarantee\n&gt;  &gt; that there will be a URL template in the metric representations that\n&gt; &gt; you can substitute `start_time` and `end_time` into and use get the\n&gt; &gt; set of observation in that time frame.\n&gt;\n&gt; An elegant approach. A couple of observations/questions:\n&gt;\n&gt;\n&gt; I infer from &quot;we do not guarantee that [any observation interval] URL will exist in the future&quot; that you&#39;ve decided that such URLs should be considered ephemeral, ie not &quot;cool URLs&quot;. Since cool URLs are good practice according to the AWWWv1 and TBL, can you share the thinking behind not following good practice? Would users never want to bookmark such observation intervals?\n&gt; I assume that the URLs to the metrics are cool, eg http://foo.example/metrics/232/ . If not, what is the cool URL that bootstraps me into the system and how do I navigate to metric URLs like this one? And again, why was the decision made to not follow good practice by making metric URL ephemeral.\n&gt; I am trying to measure the coupling of your approach in terms of fixed points: dependencies that must be established &quot;out of band&quot; before the client and server can share information. In other words, these are long-lived, static dependencies that are NOT dynamically and ephemerally established in the course of a sequence of request/replies between the client and server. I count five fixed points required to access an observation interval using the indirect method you describe:\n&gt;\n&gt;\n&gt; the metric authority:http://foo.example/\n&gt; the metric relative URL: metrics/232/\n&gt; the JSON name/value pair for the URL template: observations_in_interval_href: &lt;template&gt;\n&gt;\n&gt; the template variable name: start_time\n&gt; the template variable name: stop_time\n&gt; Direct use of an observation interval template alone has only four fixed points:\n&gt;\n&gt; the observation authority: http://foo.example/\n&gt; the observations relative URL: /metrics/232/observations?\n&gt; the URL argument name: start\n&gt; The URL argument name: end\n&gt; Given that your approach has more fixed point dependencies than a simple direct use of a URL, can you explain what dependencies you were trying to eliminate and why? For example, is observations_in_interval_href less likely to change than /metrics/232/observations? Is start_time less likely to change than start? As I wrote this up, it dawned on me that establishing the use of server-generated ephemeral URLs in returned representations as a good practice is effectively contradicting the cool URL good practice. The former seeks to minimize the number of cool (long lived) URLs and the latter practice seeks to maximize them. Put another way, proponents of server-generated ephemeral URLs appear to believe that long-lived URLs are not cool because they create long-lived dependencies.\n&gt;\n&gt; So which is the better design -- a hypermedia application rich in long lived URLs or a hypermedia application poor in long lived URLs, just a few &quot;bootstrap&quot; URLs? Up til now I always assumed the former, but now I&#39;m not so sure. Again this reminds me a bit of the deep-linking debate, eg a building with many doors vs a building with few doors.\n&gt;\n&gt; -- Nick\n&gt;\n&gt;\n&gt;                   \n\n"}}