{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"Assaf Arkin &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"ZJUZvL6L7mz4aAWx_-v3puJQtKA1SRFfnB3LtpgJqylXO7uc7jDyE0_drVuZWSdvSeQFD93xarT1hncAxMr3dcWcVnsNqTk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Why HATEOAS?","postDate":"1238552778","msgId":12360,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDkwMzMxMTkyNnIxYzNiN2RkOHVjOTA4NTYwODZkM2E4M2E5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDU1YzYwZTM3MDkwMzMxMTcwMXg0YWRhYzAyZG8zNjliNWQ4NjE3MDBmNmU2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMzMxMTcwMXg0YWRhYzAyZG8zNjliNWQ4NjE3MDBmNmU2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12358,"nextInTopic":12361,"prevInTime":12359,"nextInTime":12361,"topicId":12357,"numMessagesInTopic":27,"msgSnippet":"... SOAP is stateless, but many services are not, so the WS-* architecture has to deal with some of the same problems REST deals with. You have WS-Addressing","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50283 invoked from network); 1 Apr 2009 02:26:37 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.re1.yahoo.com with QMQP; 1 Apr 2009 02:26:37 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.239)\n  by mta3.grp.sp2.yahoo.com with SMTP; 1 Apr 2009 02:26:36 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id b25so3881192rvf.55\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 31 Mar 2009 19:26:33 -0700 (PDT)\r\nMIME-Version: 1.0\r\nIn-Reply-To: &lt;55c60e370903311701x4adac02do369b5d861700f6e6@...&gt;\r\nReferences: &lt;55c60e370903311701x4adac02do369b5d861700f6e6@...&gt;\r\nDate: Tue, 31 Mar 2009 19:26:18 -0700\r\nX-Received: by 10.140.144.6 with SMTP id r6mr3758870rvd.185.1238552793335; Tue, \n\t31 Mar 2009 19:26:33 -0700 (PDT)\r\nMessage-ID: &lt;5037b6e40903311926r1c3b7dd8uc90856086d3a83a9@...&gt;\r\nTo: Solomon Duskis &lt;sduskis@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd2296048488c0466750b50\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Assaf Arkin &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] Why HATEOAS?\r\nX-Yahoo-Group-Post: member; u=319607554; y=oHeQ2gScz6cOrwCT2fQqqFoowDg_QXls7iBVOtGKgS-V2SmajA\r\nX-Yahoo-Profile: assafarkin\r\n\r\n\r\n--000e0cd2296048488c0466750b50\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Tue, Mar 31, 2009 at 5:01 PM, Solomon Duskis &lt;sduskis@...&gt; wrote:\n\n&gt;  There seems to be a pretty big conceptual and practical barrier of entry\n&gt; to HATEOAS in machine-to-machine interaction.  We simply don&#39;t have examples\n&gt; of HATEOAS done fully.\n&gt; Why is HATEOAS even worth while?\n&gt;\n&gt; What&#39;s the need for HATEOAS in machine-to-machine APIs?  Existing SOAP and\n&gt; &quot;REST&quot; APIs don&#39;t really take advantage of HATEOAS for some reason.  If\n&gt; you&#39;re observing all of the REST constraints but HATEOAS, you&#39;re may not\n&gt; have a RESTful architecture, but you have something tremendously useful.\n&gt;\n\nSOAP is stateless, but many services are not, so the WS-* architecture has\nto deal with some of the same problems REST deals with.\n\nYou have WS-Addressing (and friends) that allow you to address a given state\nbehind the service, and all sort of WS-Addressing exchanges that are (to\nmake a point) scripted HATEOS.\n\nSome operations are only material at a given state, some states create more\nstates (e.g. at some point an order is joined by shipment tracking) so you\nneed to reason about these.  Hence WS-BPEL and friends.\n\nIt&#39;s a different approach but broadly speaking to the same problem HATEOS\nsolves: knowing what actions are relevant at any given state and how to\nperform them.\n\nAssaf\n\n\n&gt;\n&gt;\n&gt; The best that I can come up with is that HATEOAS will help long-term\n&gt; evolution of APIs, especially the type of intricate fine-grained APIs that\n&gt; enterprises favor.  It will also help with &quot;serendipity&quot; - meaning that it&#39;s\n&gt; easier in the long run to reuse a distributed REST solution than other types\n&gt; of distributed solutions.  While those are interesting benefits, they are\n&gt; really difficult to sell... I can&#39;t really sell &quot;something good will happen\n&gt; later if you choose REST.&quot;\n&gt;\n&gt; Assuming that the practical barriers of entry are removed, what practical\n&gt; benefits will we see?\n&gt;\n&gt; -Solomon\n&gt;\n&gt;\n&gt; \n&gt;\n\r\n--000e0cd2296048488c0466750b50\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Mar 31, 2009 at 5:01 PM, Solomon Duskis =\r\n&lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:sduskis@...&quot;&gt;sduskis@...=\r\nm&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margi=\r\nn:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n       =\r\n \n\n\n\n&lt;div&gt;\n\n\nThere seems to be a pretty big conceptual and practical barrie=\r\nr of entry to HATEOAS in machine-to-machine interaction.=A0 We simply don&#=\r\n39;t have examples of HATEOAS done fully.=A0 &lt;br&gt;Why is HATEOAS even worth =\r\nwhile?&lt;br&gt;&lt;br&gt;\n\n\nWhat&#39;s the need for HATEOAS in machine-to-machine APIs=\r\n?=A0 Existing SOAP and &quot;REST&quot; APIs don&#39;t really take advantag=\r\ne of HATEOAS for some reason.=A0 If you&#39;re observing all of the REST co=\r\nnstraints but HATEOAS, you&#39;re may not have a RESTful architecture, but =\r\nyou have something tremendously useful.&lt;/div&gt;\n\n&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;SOAP is stateless,=A0but many services are not, so the WS-* architectu=\r\nre has to deal with some of the same problems REST deals with.&lt;/div&gt;&lt;div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;&lt;div&gt;You have WS-Addressing (and friends) that allow you to address=\r\n a given state behind the service, and all sort of WS-Addressing exchanges =\r\nthat are (to make a point) scripted HATEOS.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Some=\r\n operations are only material at a given state, some states create more sta=\r\ntes (e.g. at some point an order is joined by shipment tracking) so you nee=\r\nd to reason about these. =A0Hence WS-BPEL and friends.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;div&gt;It&#39;s a different approach but broadly speaking to the same probl=\r\nem HATEOS solves: knowing what actions are relevant at any given state and =\r\nhow to perform them.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assaf&lt;/div&gt;\n&lt;div&gt;\n=A0&lt;/div&gt;&lt;b=\r\nlockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px =\r\n#ccc solid;padding-left:1ex;&quot;&gt;&lt;div&gt;&lt;br&gt;\n&lt;br&gt;The best that I can come up wit=\r\nh is that HATEOAS will help long-term evolution of APIs, especially the typ=\r\ne of intricate fine-grained APIs that enterprises favor.=A0 It will also he=\r\nlp with &quot;serendipity&quot; - meaning that it&#39;s easier in the long =\r\nrun to reuse a distributed REST solution than other types of distributed so=\r\nlutions.=A0 While those are interesting benefits, they are really difficult=\r\n to sell... I can&#39;t really sell &quot;something good will happen later =\r\nif you choose REST.&quot;&lt;br&gt;\n\n\n&lt;br&gt;Assuming that the practical barriers of=\r\n entry are removed, what practical benefits will we see?&lt;br&gt;&lt;br&gt;-Solomon&lt;br=\r\n&gt;\n\n\n\n\n\n\n&lt;br&gt;\n\n    \n&lt;br&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color:white;clear:bot=\r\nh&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd2296048488c0466750b50--\r\n\n"}}