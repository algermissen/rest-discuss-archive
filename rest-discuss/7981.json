{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":237604743,"authorName":"Bill de hOra","from":"Bill de hOra &lt;bill@...&gt;","profile":"bdehora","replyTo":"SENDER","senderId":"AMAHSTI4YEiVr7uZ1G9bxBs9s9J2OVYoE4g7IkJX6usVrA_o4wUcfi7eSNWL1egOtMWsRJutowruP4DB2c1X_fmG1vCW","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: The XML Semantic Web","postDate":"1172342455","msgId":7981,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1RTA4NkI3LjcwNTA4MDdAZGVob3JhLm5ldD4=","inReplyToHeader":"PDExNzIyNjc3NzEuNDc1NS42MS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","referencesHeader":"PDExNzE5NjkxNzYuMjA3LjI3NTcyLm0xNkB5YWhvb2dyb3Vwcy5jb20+CSA8NDVEQUQyNjIuMjM4Ny4zRUFBNjg3QGFuZHJ6ZWouY2hhZXJvbi5jb20+CSA8MTE3MjAwNTEwMC4xMjIwMi4xMC5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8NDVEQjdDRTUuNTA1MDFAZGVob3JhLm5ldD4JIDw5Mjc0NDFiMzA3MDIyMDE4MTB1NDQ3Yjk4OWZzYjZlMjBhMGI3MzQ4MmEwNEBtYWlsLmdtYWlsLmNvbT4JIDw0NURDMTMzRi4xMDIwMDA1QGRlaG9yYS5uZXQ+IDwxMTcyMjY3NzcxLjQ3NTUuNjEuY2FtZWxAbG9jYWxob3N0LmxvY2FsZG9tYWluPg=="},"prevInTopic":7973,"nextInTopic":7983,"prevInTime":7980,"nextInTime":7982,"topicId":7927,"numMessagesInTopic":81,"msgSnippet":"... I m not sure what you mean, but it doesn t jibe with me. I think I would disagree. ... Again I don t know what you mean. What s machine insofar as giving","rawEmail":"Return-Path: &lt;bill@...&gt;\r\nX-Sender: bill@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 36731 invoked from network); 24 Feb 2007 18:41:12 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m46.grp.scd.yahoo.com with QMQP; 24 Feb 2007 18:41:12 -0000\r\nReceived: from unknown (HELO chilco.textdrive.com) (207.7.108.242)\n  by mta10.grp.scd.yahoo.com with SMTP; 24 Feb 2007 18:41:12 -0000\r\nReceived: from [192.168.2.180] (83-70-217-117.b-ras1.prp.dublin.eircom.net [83.70.217.117])\n\tby chilco.textdrive.com (Postfix) with ESMTP id 13193DCDBF;\n\tSat, 24 Feb 2007 18:40:58 +0000 (UTC)\r\nMessage-ID: &lt;45E086B7.7050807@...&gt;\r\nDate: Sat, 24 Feb 2007 18:40:55 +0000\r\nUser-Agent: Thunderbird 1.5.0.9 (X11/20070103)\r\nMIME-Version: 1.0\r\nTo: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;1171969176.207.27572.m16@yahoogroups.com&gt;\t &lt;45DAD262.2387.3EAA687@...&gt;\t &lt;1172005100.12202.10.camel@...&gt;\t &lt;45DB7CE5.50501@...&gt;\t &lt;927441b30702201810u447b989fsb6e20a0b73482a04@...&gt;\t &lt;45DC133F.1020005@...&gt; &lt;1172267771.4755.61.camel@...&gt;\r\nIn-Reply-To: &lt;1172267771.4755.61.camel@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Bill de hOra &lt;bill@...&gt;\r\nSubject: Re: [rest-discuss] Re: The XML Semantic Web\r\nX-Yahoo-Group-Post: member; u=237604743; y=PnUJNt3WyIBK56F44NihCDIb4Qs0Pzs9-kLEHEm_bRm-fg\r\nX-Yahoo-Profile: bdehora\r\n\r\nBenjamin Carlyle wrote:\n\n\n&gt; In other words, the graph does not add value to machine to machine\n&gt; communications. Higher-level structured XML documents have proven\n&gt; themselves as more effective. It is easier to encode information to or\n&gt; extract information from an atom document than from the equivalent RDF.\n&gt; RDF requires more complex model-to-model transformations than the\n&gt; easy-to-traverse tree structure of XML. RDF imposes an unnecessary\n&gt; burden on both sides of the information exchange that results in more\n&gt; code being written, rather than less.\n\nI&#39;m not sure what you mean, but it doesn&#39;t jibe with me. I think I would \ndisagree.\n\n\n&gt; Graph-level Aggregation\n&gt; The core selling point of RDF seems to be the ability to aggregate\n&gt; arbitrary information into a single document. In the machine-to-machine\n&gt; example this has no value because the additional information won&#39;t be\n&gt; understood by the second machine and will be ignored. However, if we\n&gt; throw the data into an RDF triplestore we might be able to extract it\n&gt; later using appropriate SPARQL or other queries.\n\nAgain I don&#39;t know what you mean. What&#39;s &quot;machine&quot; insofar as giving it \na data fragment is assured to be pointless? That would seem to be to be \nanything written that is designed not to understand RDF, which is kind \nof circular.\n\nIf you&#39;re saying &quot;there&#39;s no point emitting RDF because nothing \ndownstream can treat it as RDF&quot;, then I would agree with you:\n\n- statistically speaking nobody deploys code to process RDF as RDF, and\n\n- definitely nobody writes code that does much more than switch on type \nunless they are mapping to local domain entities (eg &#39;User&#39;), and,\n\n-  if they are doing that, than received XML is easier to map in because \nXML is equally as inflexible.\n\nBut if you have RDF on both ends, you don&#39;t tend have model to model \nmappings (ie the entire economic basis of the systems integration \nbusiness). Where you do map, you can do so so with much more precision.\n\nI think the thing to bear in mind here is that most IT systems don&#39;t \nhave &quot;models&quot; in the RDF sense. In RDF a model is more like the formal \ndefinition of a programming language than an object written in that \nlanguage. Real interchange with RDF assumes a shared runtime - it&#39;s the \nWeb&#39;s version of the .Net CLR.\n\n\n\n&gt; As I will point out later in the document, I\n&gt; don&#39;t think RDF is as conducive to good vocabulary evolution as XML. \n\nXML isn&#39;t conducive to vocabulary evolution either. This is very strange \n  juxtaposition. Most XML vocabulairies I&#39;ve seen that declare an \nextensibility based end up defining a subset of what RDF defines.\n\n[I would say you and I are going to disagree on extensibility at some \npoint. lets&#39; get that out of the way. For example, what the Atom Format \ndoes in its extension model is what I call &quot;modularity&quot;. What RDF does \nis more akin to what Smalltalk and Lisp people might consider to be \n&quot;extensibility&quot;. You should also know that I think RDF has as about much \nto do with XML as ECMAScript has to do with JSON. They&#39;re not even both \nfruit.]\n\n\n&gt; RSS was defined in terms of RDF so that it\n&gt; could be easily aggregated. However, aggregation did not happen at the\n&gt; RDF level in practice. Instead, RSS was aggregated at a higher level.\n\nBut you don&#39;t say why that was. Why was that?\n\n&gt; As well as allowing targetted aggregation, XML can be subclassed.\n\nSome of the worst thinking around XML is down to this - in the form of \ninheritance, type inference, acquisition, implicit values, and making \noverreaching assumptions about what element containment means. It&#39;s \nalways resulted in a mess because it assumes in a processing model that \nis rarely written down.\n\n\n&gt; Must-ignore semantics mean that a document with additional elements will\n&gt; be ignored by old implementations. \n\nmI in my mind is about having having a trailing &quot;else&quot; in the code that \nlogs to disk instead of throwing an exception. It&#39;s a sensible \nprogrammatic default.\n\n\n&gt; This allows new versions of the\n&gt; document type to be deployed without breaking the architecture. It also\n&gt; allows extensions to be added for various purposes. If we continue to\n&gt; use mime we can be specific about particular kinds of subclasses. For\n&gt; example, I might sub-class atom for the special purpose of indicating\n&gt; the next three trains that will arrive at a railway station:\n&gt; application/pids+atom+xml.\n&gt;\n&gt; RDF isn&#39;t really as flexible. \n\nI can&#39;t agree. RDF&#39;s handling of unknown triples is far more flexible \nthan mI. Too flexible for most programmers in fact. As for subclassing, \nhow would I know what you&#39;re doing with MIME specializations unless I \nbaked that knowledge into my code?  RDF at least has class based \ninference built in.\n\n\n&gt; Conclusion\n&gt; \n&gt; RDF does not seem to have the vocubarly evolution mechanisms that XML\n&gt; content types have available to it. \n\nSure. RDF has one vocabulary evolution mechanism, and all the XML \nvocabularies have on of their own.\n\n[aside: it&#39;s weird to watch people argue up the uniform interface as a \nkey constraint of REST, but happily rail on uniform data. ]\n\n\nHere&#39;s the problem with RDF and its style of information architecture - \nit&#39;s being pushed on a world that isn&#39;t ready for it. It&#39;s not wrong, \nit&#39;s impractical. There&#39;s a hierarchy of needs, which for most people \nmeans that RDF can&#39;t be a practical concern right now. We have to more \nimmediate, base concerns, like encoding, and tags, and addressing, and \ntranslations, and indexing, and term search, and malformedness. The W3C \n  missed this point for the better part of a decade, by assuming that \nsyntax didn&#39;t matter, whereas for most people syntax is everything. The \nconsortium telling developers in these times that syntax doesn&#39;t matter \nis like Marie-Antoinette telling people to eat cake.\n\nThe web will evolve to support interlingua of the kind the W3C thinks we \nshould have now;  the success of application protocols clearly indicate \nthat  speech act style communications do work, and short of a paradigm \nshift, that suggests interlingua very likely critically important to the \n  future of distributed systems. But the future where they are generally \navailable and used is years off. Broad use of horseless carriages \nimplies a good enough road infrastructure gets built out in advance.\n\ncheers\nBill\n\n"}}