{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"bryan_w_taylor","from":"&quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"4yQ3cDEob0Sq4KHdRQ-6Y8gvty_JjJM2etgNWiAkakV2zkKqiXh_VTQ9cgPGqrTZi-z8D_LD7u6yB4dCaqYhIem5ynOykWyU0RqO_Wuh12BiQQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Restful Approaches to some Enterprise Integration Problems","postDate":"1278568284","msgId":15811,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGkxM3AwcytsMHRkQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDA2MUM2MzJBLUREQjctNERFMy1CMjBELUU4MUY2NzcyMUMwOEBnYml2LmNvbT4="},"prevInTopic":15810,"nextInTopic":15812,"prevInTime":15810,"nextInTime":15812,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"trimmed quotes for brevity ... Fair enough. ... Good question. I think using other tools for eventing makes a lot of sense in some cases. But there are","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 49895 invoked from network); 8 Jul 2010 05:53:14 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m13.grp.re1.yahoo.com with QMQP; 8 Jul 2010 05:53:14 -0000\r\nX-Received: from unknown (HELO n41b.bullet.mail.sp1.yahoo.com) (66.163.168.155)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Jul 2010 05:53:14 -0000\r\nX-Received: from [69.147.65.172] by n41.bullet.mail.sp1.yahoo.com with NNFMP; 08 Jul 2010 05:51:27 -0000\r\nX-Received: from [98.137.34.72] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 08 Jul 2010 05:51:27 -0000\r\nDate: Thu, 08 Jul 2010 05:51:24 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i13p0s+l0td@...&gt;\r\nIn-Reply-To: &lt;061C632A-DDB7-4DE3-B20D-E81F67721C08@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: Restful Approaches to some Enterprise Integration Problems\r\nX-Yahoo-Group-Post: member; u=119533972; y=aCj_v-m8AAegpH03dc2OROGOl-ZpfU_Nhs6vCDYx0lere3M8ZX9eHNQ\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\n\n\n\n\n\ntrimmed quotes for brevity\n\n--- In rest-discuss@yahoogroups.com, Roy T=\r\n.Fielding &lt;fielding@...&gt; wrote:\n&gt;\n&gt; On Jul 6, 2010, at 12:22 AM, bryan_w_ta=\r\nylor wrote:\n&gt; &gt; --- In rest-discuss@yahoogroups.com, &quot;Roy T. Fielding&quot; &lt;fie=\r\nlding@&gt; wrote:\n\n&gt; I guess it depends on how you define guaranteed delivery.=\r\n  You can\n&gt; certainly do such things with HTTP, but doing CRUD ops via HTTP=\r\n does\n&gt; not automatically make it a RESTful paradigm.\n\nFair enough.\n\n&gt; &gt; Bu=\r\nt that answers &quot;how&quot; and I think you are getting at &quot;why&quot;. I&#39;m imagining th=\r\nat we have two servers A and B, where A plays the role of the client in the=\r\n interaction. Events happen on server A and server B must receive some repr=\r\nesentation related to each event or unacceptable business consequences occu=\r\nr.\n&gt; \n&gt; Ah, typical event-based integration.  That&#39;s a good architectural\n&gt;=\r\n style for some applications.  Why use REST to do that?\n\nGood question. I t=\r\nhink using other tools for eventing makes a lot of sense in some cases. But=\r\n there are sometimes disadvantages too... any of platform interoperability,=\r\n additional infrastructure, development or runtime complexity sometimes get=\r\n in the way. So there are times where it might be nice to at least use a st=\r\nraightforward HTTP based mechanism. \n\n&gt; &gt; Why can&#39;t we merge the functional=\r\nity of server A and B? Lots of reasons: Security, regulatory compliance, us=\r\ne of 3rd party systems, organizational boundaries and/or politics are a few=\r\n. The way a company manages it&#39;s systems engineering work is to partition b=\r\nusiness functionality into pieces, give ownership of each piece to a team, =\r\nand align physical resources like servers to those teams. If this imposes c=\r\nonstraints not found in RESTful systems, then I have no choice but to deal =\r\nwith those. \n&gt; \n&gt; Yes, but the RESTful solution is not to pretend that REST=\r\n is an\n&gt; event-based integration style.  What you want to do with REST is\n&gt;=\r\n re-architect the system into more isolated parts that are event-based\n&gt; (u=\r\nsually a very small communication subsystem) and the remainder\n&gt; as a layer=\r\ned information system.  The reason to do this, presumably,\n&gt; is to expose t=\r\nhe RESTful interface to consumers instead of exposing\n&gt; the much more compl=\r\nex (and brittle) event interface.\n\nWell said, and I think this is what I wi=\r\nll take away and promote.\n\n&gt; &gt; &gt; Any resource can behave as a long-running =\r\nservice. Just program it that way.\n&gt; &gt; \n&gt; &gt; Right, the question is how, exa=\r\nctly. Good solutions have been posted in this thread for this. Subbu&#39;s REST=\r\nful Web Services Cookbook solves this in examples 1.10 and 1.11. I think th=\r\nis was another slam dunk.\n&gt; &gt; \n&gt; &gt; I&#39;m curious what you think about using s=\r\no called &quot;web hooks&quot; for this kind of thing. Would you consider this a viol=\r\nation of the client-server constraint? \n&gt; \n&gt; No, web hooks is just someone&#39;=\r\ns marketing term for registering\n&gt; notifications.  The components that act =\r\non them are still either\n&gt; clients or servers during the communication (i.e=\r\n., they are not\n&gt; trying to do both at the same time and functionality is s=\r\ntill\n&gt; split across components).  This is not a new concept.  E.g.,\n&gt; \n&gt; ht=\r\ntp://www.xent.com/FoRK-archive/apr98/0445.html\n&gt; \n&gt; http://www.xent.com/FoR=\r\nK-archive/august98/0307.html\n\nGood to know. I like section 5.1.3 of that 2n=\r\nd one from 12 years ago.\n\n&gt; As much as I like doing things in HTTP, there a=\r\nre many closed systems\n&gt; that are better implemented in an efficient RPC sy=\r\nntax or a wire\n&gt; protocol specifically designed for message queues.  Use wh=\r\natever\n&gt; works best for the specific architecture behind the resource inter=\r\nface\n&gt; and then apply REST as the external facade to support large-scale\n&gt; =\r\nintegration and reusability of the information produced/consumed.\n\nOK, I th=\r\nink this is very practical. Thanks for some good input.\n\n\n\n"}}