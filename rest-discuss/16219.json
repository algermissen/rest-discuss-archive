{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"DdhTT7WFkfoL-7rxSdZSkq3M-DGaellS6NNSJ_sL7Q7rplPyORWp9jaIKIbEikeHsq71hbiBNqNZrLaq1Q0b-LFg7LOPMUY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281197631","msgId":16219,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrMGRyUlgyb2U4WWpvUkYtLWQtdWVNYmN1MFkrUkFiOGcrLTc0SkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDExNTgzREFFLUYxRUEtNDhCMi05QjU1LTNFM0JEOTQ2QjY3NUBtYWMuY29tPg==","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPgk8RjE5NjI2NDZEM0I2NDY0MkI3QzlBMDYwNjhFRTFFNjQwRTE0Mzg1N0BleDEwLmhvc3RlZGV4Y2hhbmdlLmxvY2FsPgk8RUE2MDczMkMtM0IwMC00NUQ0LThGRDgtMDJFQjFCMjE0NEY1QG1hYy5jb20+CTxGMTk2MjY0NkQzQjY0NjQyQjdDOUEwNjA2OEVFMUU2NDBFMTQzQjExQGV4MTAuaG9zdGVkZXhjaGFuZ2UubG9jYWw+CTxCRTNEODY1OS1CNzYyLTQ3NTktQkM4Qy0xM0I0REE5ODVDNUZAbWFjLmNvbT4JPEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4JPDExNTgzREFFLUYxRUEtNDhCMi05QjU1LTNFM0JEOTQ2QjY3NUBtYWMuY29tPg=="},"prevInTopic":16218,"nextInTopic":16220,"prevInTime":16218,"nextInTime":16220,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":" ...  not a problem. this would be easy in a face-to-face, but email has it s limitations that must be overcome. OK, because we did not program","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17094 invoked from network); 7 Aug 2010 16:14:24 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m12.grp.re1.yahoo.com with QMQP; 7 Aug 2010 16:14:24 -0000\r\nX-Received: from unknown (HELO mail-fx0-f48.google.com) (209.85.161.48)\n  by mta3.grp.re1.yahoo.com with SMTP; 7 Aug 2010 16:14:24 -0000\r\nX-Received: by fxm11 with SMTP id 11so5600901fxm.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 07 Aug 2010 09:13:51 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.103.172.19 with SMTP id z19mr1035398muo.128.1281197631324; \n\tSat, 07 Aug 2010 09:13:51 -0700 (PDT)\r\nX-Received: by 10.102.87.23 with HTTP; Sat, 7 Aug 2010 09:13:51 -0700 (PDT)\r\nIn-Reply-To: &lt;11583DAE-F1EA-48B2-9B55-3E3BD946B675@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143857@...&gt;\n\t&lt;EA60732C-3B00-45D4-8FD8-02EB1B2144F5@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143B11@...&gt;\n\t&lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\n\t&lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\n\t&lt;11583DAE-F1EA-48B2-9B55-3E3BD946B675@...&gt;\r\nDate: Sat, 7 Aug 2010 12:13:51 -0400\r\nX-Google-Sender-Auth: -Y21VMBICJ6DQV41MdVR6A7k9YA\r\nMessage-ID: &lt;AANLkTik0drRX2oe8YjoRF--d-ueMbcu0Y+RAb8g+-74J@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Robert Brewer &lt;fumanchu@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=69164307; y=tNjDASN3GV8_-h1D8HR03ofxjv6-F5RunpQBYsT3KP2c\r\nX-Yahoo-Profile: mamund\r\n\r\n&lt;snip&gt;\n&gt; We know the user agent cannot handle the HTML-containing/scan-refe=\r\nrencing feed because we did not program it that way. And besides that: both=\r\n, HTML and the scan do not make good candidates for machine processing with=\r\nout a hidden contract regarding the structure.\n&lt;/snip&gt;\n\nnot a problem. this=\r\n would be easy in a face-to-face, but email has\nit&#39;s limitations that must =\r\nbe overcome.\n\nOK, &quot;because we did not program it that way&quot; is the key here.=\r\n IOW, the\nability to &quot;pluck&quot; the proper content out of a representation (th=\r\nat\nlooks like the one you offered as your example) has not been\nprogrammed =\r\ninto the client. I understand that.\n\n&lt;snip&gt;\nHTML and the scan do not make g=\r\nood candidates for machine processing\nwithout a hidden contract regarding t=\r\nhe structure.\n&lt;/snip&gt;\nand\n&lt;snip&gt;\nIf the implemented goal is to compile a li=\r\nst of ordered items from\neach order the user agent needs to be able to pars=\r\ne the order\nrepresentation.\n&lt;/snip&gt;\n\nand then: &quot;..without a [hidden] contra=\r\nct...&quot;\nAll media-type processing is by contract: the contract offered when\n=\r\nthe media-type is documented. I think I hear you saying that the\ncontract d=\r\netails for a client that uses Atom would need (in your case)\n_additional_ c=\r\nontract information such as (&quot;here is how you can\nrecognize an order list i=\r\nnside an Atom feed&quot;, etc.). I can see that\nthis is so.\n\n&lt;snip&gt;\nBut the prob=\r\nlem is really that of formats embedded in formats because\nwe cannot impleme=\r\nnt the client without making assumptions about the\npossible =A0sub-formats.=\r\n If these assumptions cannot be stated in the\nAcept header, the situation I=\r\n am dealing with exists.\n&lt;/snip&gt;\n\nPROBLEM RESTATEMENT:\nOK, now I think we&#39;r=\r\ne getting to the heart of the matter. It would\nseem that the issue here is =\r\nwhether it is possible or reasonable to\ncreate ways for clients to &quot;know wh=\r\nether they understand this\nrepresentation&quot; even in cases where the Accept h=\r\neader is &quot;insufficient\nas a descriptor&quot; (due to the fact that a well-known =\r\ngeneric media-type\nis employed for the representation).\n\nPROPOSED SOLUTION:=\r\n\nI will offer the following that I&#39;ve done in the past that might address t=\r\nhis:\n1 - for cases where the representation is based on HTML, I use the\n@pr=\r\nofile model[1]. This allows me to program clients to look for the\nproper in=\r\nformation within the @profile attribute and reject it if\nnecessary (invalid=\r\n representation) or, if the @profile is valid, but\nthe body does not confor=\r\nm, pitch another error (invalid body), etc.\n\n2 - for cases where the presen=\r\ntation is based on XML (Atom, etc.), I\nuse standard namespace checking. Tha=\r\nt means, for my designs, I use\nAtom&#39;s extension model rather than embedding=\r\n custom XML in the content\nelement. I have, in the past, used a namespace w=\r\nithin the content\nelement, but no longer do that.\n\nThese two &quot;hacks&quot; allow =\r\nme to design representations that use\nwell-known formats and still provide =\r\na simple test for clients to use\nin order to validate the representation be=\r\nfore attempting to process\nit.\n\nDoes this make sense?\n\nmca\nhttp://amundsen.=\r\ncom/blog/\nhttp://mamund.com/foaf.rdf#me\n\n\n\n\nOn Sat, Aug 7, 2010 at 11:43, J=\r\nan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt;\n&gt; On Aug 7, 2010, at 5:17=\r\n PM, mike amundsen wrote:\n&gt;\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; While a usual feed reader (e.g. Ap=\r\nple Mail) would be able to perform\n&gt;&gt; it&#39;s implemented goal based on that f=\r\need our\n&gt;&gt; compile-list-of-newly-ordered-items user agent would definitely =\r\nnot be\n&gt;&gt; able to do what it is implemented to do.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt;\n&gt;&gt; QUESTIO=\r\nN:\n&gt;&gt; how do you &quot;know&quot; this to be true? IOW, what is it about the\n&gt;&gt; repre=\r\nsentation example you provided that leads you to believe your\n&gt;&gt; &quot;compile-l=\r\nist-of-newly-ordered-items user agent&quot; cannot &quot;do what it is\n&gt;&gt; implemented=\r\n to do&quot;?\n&gt;\n&gt; Gee - every sentence I leave out leads to confusion. Sorry. Wh=\r\nat I meant to say was:\n&gt;\n&gt; We know the user agent cannot handle the HTML-co=\r\nntaining/scan-referencing feed because we did not program it that way. And =\r\nbesides that: both, HTML and the scan do not make good candidates for machi=\r\nne processing without a hidden contract regarding the structure.\n&gt;\n&gt;&gt;\n&gt;&gt; AS=\r\nSUMPTION:\n&gt;&gt; I think I hear you talking about the need for clients to know =\r\nahead of\n&gt;&gt; time whether the representation returned is something they can\n=\r\n&gt;&gt; process.\n&gt;\n&gt; Yes. That is: meaningfully process according to their imple=\r\nmented goals. If the goal is to turn the controls contained in the represen=\r\ntation into something the user can activate (e.g. as browsers or feed reade=\r\nrs do) then fine. If the implemented goal is to compile a list of ordered i=\r\ntems from each order the user agent needs to be able to parse the order rep=\r\nresentation. If it understands that there are orders at all (feed not empty=\r\n) but it does not understand the individual order syntax it needs to reposr=\r\nt an error somehow. (Which might just be ok - depending on the goal impleme=\r\nntation).\n&gt;\n&gt; But the problem is really that of formats embedded in formats=\r\n because we cannot implement the client without making assumptions about th=\r\ne possible =A0sub-formats. If these assumptions cannot be stated in the Ace=\r\npt header, the situation I am dealing with exists.\n&gt;\n&gt;&gt; If that&#39;s the case,=\r\n that means there must be some information\n&gt;&gt; baked into the client that is=\r\n used to &quot;check&quot; the representation\n&gt;&gt; returned. The Accept header is one o=\r\nf these methods (&quot;I am a client\n&gt;&gt; that will only be able to understand the=\r\n following representation\n&gt;&gt; formats&quot;).\n&gt;&gt;\n&gt;&gt; I that what this is about?\n&gt;\n=\r\n&gt; Yes. It is the question of how specific the Acept header needs to be with=\r\nout causing hidden coupling. (Or whether we should just live with the uncer=\r\ntainty on the client side - which I think we should not).\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt;=\r\n mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt; http://mamund.com/foaf.rdf#me\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;=\r\n\n&gt;&gt;\n&gt;&gt; On Sat, Aug 7, 2010 at 06:47, Jan Algermissen &lt;algermissen1971@mac.c=\r\nom&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Aug 7, 2010, at 12:25 AM, Robert Brewer wrote:\n&gt;&gt;&gt;\n&gt;&gt;=\r\n&gt;&gt;&gt; Jan Algermissen wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The question is whether Accept: text/h=\r\ntml is indeed sufficient. Is it\n&gt;&gt;&gt;&gt;&gt; true that the user agent can persue i=\r\nts implemented goal of compiling\n&gt;&gt;&gt;&gt; a\n&gt;&gt;&gt;&gt;&gt; list of all newly ordered ite=\r\nms from any HTML document?\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Suppose the server provides both, ap=\r\nplication/order and text/html as\n&gt;&gt;&gt;&gt;&gt; representations of the list of new o=\r\nrders. When a user agent comes\n&gt;&gt;&gt;&gt;&gt; along that says Accept: text/html the =\r\nserver can freely assume\n&gt;&gt;&gt;&gt; browser-\n&gt;&gt;&gt;&gt;&gt; like capabilities of the user =\r\nagent (any HTML will do; even an &lt;ul&gt;\n&gt;&gt;&gt;&gt;&gt; with items referring to scanned=\r\n PNGs of the orders). IOW, the owner of\n&gt;&gt;&gt;&gt;&gt; the server is free to change =\r\nthe implementation for text/html as long\n&gt;&gt;&gt;&gt;&gt; as a) the resource semantics=\r\n remain stable (list of new orders) and\n&gt;&gt;&gt;&gt;&gt; valid HTML is returned.\n&gt;&gt;&gt;&gt;&gt;=\r\n\n&gt;&gt;&gt;&gt;&gt; How would the user agent implementation deal with HTML? Special\n&gt;&gt;&gt;&gt;=\r\n&gt; syntactic assumptions are not allowed (because of Accept: text/html)\n&gt;&gt;&gt;&gt;=\r\n or\n&gt;&gt;&gt;&gt;&gt; would mean a hidden coupling. How would a user agent distinguish\n=\r\n&gt;&gt;&gt;&gt;&gt; between an HTML it does not understand but that contains orders (e.g.=\r\n\n&gt;&gt;&gt;&gt;&gt; the list of scanned order images) and an empty list of orders that i=\r\ns\n&gt;&gt;&gt;&gt;&gt; augmented with some HTML it does not (and need not) understand?\n&gt;&gt;&gt;=\r\n&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; IMO that is impossible and hence Accept: text/html does not cut it=\r\n.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I think all that demonstrates is that HTML is too generic to be=\r\n useful\n&gt;&gt;&gt;&gt; for your particular task, not that all media types require &quot;sp=\r\necial\n&gt;&gt;&gt;&gt; syntactic assumptions&quot; (whether implicit or explicit). The fact =\r\nthat you\n&gt;&gt;&gt;&gt; can make a &quot;list&quot; in HTML using any of a hundred types of tag=\r\ns doesn&#39;t\n&gt;&gt;&gt;&gt; mean Atom, for example, also suffers from the same inappropr=\r\niateness to\n&gt;&gt;&gt;&gt; your task.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; I knew you were going to say =\r\nthat :-)\n&gt;&gt;&gt;\n&gt;&gt;&gt; Let&#39;s see:\n&gt;&gt;&gt;\n&gt;&gt;&gt; The implementor of the server side choo=\r\nses to expose the order list as HTML and Atom. In the Atom case, she would =\r\nwrite sth like this (in JAX-RS):\n&gt;&gt;&gt;\n&gt;&gt;&gt; @Path(&quot;/new-orders&quot;)\n&gt;&gt;&gt; class New=\r\nOrders {\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt; =A0@Produces(&quot;text/html&quot;)\n&gt;&gt;&gt; =A0public Respon=\r\nse newOrdersAsHTML() {\n&gt;&gt;&gt; =A0 =A0 // ...\n&gt;&gt;&gt; =A0}\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt; =A0@=\r\nProduces(&quot;application/atom+xml&quot;)\n&gt;&gt;&gt; =A0public Response newOrdersAsAtomFeed=\r\n() {\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0}\n&gt;&gt;&gt; }\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; When it comes to implementing (or chang=\r\ning) the Atom-producing method, the server developer need not (must not) be=\r\n concerned with any client expectations. All that matters is to produce any=\r\n valid Atom feed[1].\n&gt;&gt;&gt;\n&gt;&gt;&gt; Given that, it would be a perfectly fine imple=\r\nmentation to produce an Atom feed such as this:\n&gt;&gt;&gt;\n&gt;&gt;&gt; &lt;feed&gt;\n&gt;&gt;&gt; =A0&lt;entr=\r\ny&gt;\n&gt;&gt;&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt; =A0 =A0 =A0&lt;xhtml:div xmlns:xhtm=\r\nl=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:h1&gt;Order 551-=\r\nA-1272&lt;/xhtml:h1&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xht=\r\nml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml=\r\n:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt;=\r\n&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;&gt; =A0 =A0 =A0&lt;/xhtml:=\r\ndiv&gt;\n&gt;&gt;&gt; =A0 =A0&lt;/summary&gt;\n&gt;&gt;&gt; =A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D&quot;/s=\r\ncan-archive/orders/551-A-1272.png&quot;/&gt;\n&gt;&gt;&gt; =A0&lt;/entry&gt;\n&gt;&gt;&gt; =A0&lt;entry&gt;\n&gt;&gt;&gt; =A0=\r\n =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt; =A0 =A0 =A0&lt;xhtml:div xmlns:xhtml=3D&quot;http:=\r\n//www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:h1&gt;Order 551-A-1273&lt;/xh=\r\ntml:h1&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Devi=\r\nce Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Screw =\r\nBar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt;&gt;&gt; =A0 =A0=\r\n =A0 =A0&lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;&gt; =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt;&gt;&gt; =\r\n=A0 =A0&lt;/summary&gt;\n&gt;&gt;&gt; =A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D&quot;/scan-archi=\r\nve/orders/551-A-1273.png&quot;/&gt;\n&gt;&gt;&gt; =A0&lt;/entry&gt;\n&gt;&gt;&gt; &lt;/feed&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; If you =\r\ndevelop a user agent that says Accept: application/atom+xml;type=3Dfeed you=\r\n must be prepared to receive the above feed.\n&gt;&gt;&gt;\n&gt;&gt;&gt; While a usual feed rea=\r\nder (e.g. Apple Mail) would be able to perform it&#39;s implemented goal based =\r\non that feed our compile-list-of-newly-ordered-items user agent would defin=\r\nitely not be able to do what it is implemented to do.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Two questions=\r\n arise:\n&gt;&gt;&gt;\n&gt;&gt;&gt; 1. How does the user agent detect that it cannot perform it=\r\ns task but (despite having a perfectly valid answer)\n&gt;&gt;&gt; 2. What to do abou=\r\nt that\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; 1.:\n&gt;&gt;&gt; Given the feed above, how do we need to implemen=\r\nt the client to report to the user (e.g. someone that at some point looks i=\r\nn a log file or someone that uses the business intelligence application tha=\r\nt uses the compiled reports about newly ordered items) that a correct answe=\r\nr was received, that it did indeed contain orders but that the list could n=\r\not be processed as intended?\n&gt;&gt;&gt;\n&gt;&gt;&gt; First of all, the client trusts the hi=\r\ngher level assumption that the resource indeed provides the list of new ord=\r\ners. This is the same kind of trust that any browser has when it follows an=\r\n &lt;img src=3D&quot;&quot;/&gt; hypermedia control. The server told the user agent somethi=\r\nng about the referenced resource and the client can reasonably expect that =\r\nto be true (otherwise we would deal with a broken server and that is not th=\r\ne issue here).\n&gt;&gt;&gt;\n&gt;&gt;&gt; Since the client expects the feed to represent the l=\r\nist of new orders, it is IMHO reasonable to assume that any entry in that f=\r\need points to a new order. No entries would mean &#39;no new orders&#39;. This is I=\r\nMHO not semantic tunneling through the Atom feed because the assumption is =\r\nbacked by the semantics of the resource as advertised by the server.\n&gt;&gt;&gt;\n&gt;&gt;=\r\n&gt; The feed appearently contains two entries, hence the user agent can be pr=\r\nogrammed to understand that there are two new orders to process. When it co=\r\nmes to processing the orders the user agent will have to realize that neith=\r\ner the summary nor the referenced content is available in a format that is =\r\nsufficient to extract the ordered items automatically. Hence the user agent=\r\n has to report an error eventually leading to some human action to fix the =\r\nsituation:\n&gt;&gt;&gt;\n&gt;&gt;&gt; 2.:\n&gt;&gt;&gt; We reach question #2 once the fact that a proble=\r\nm exists for the user agent has reached a human. What is he supposed to do?=\r\n There are three options:\n&gt;&gt;&gt;\n&gt;&gt;&gt; a) call the server developer and negotiat=\r\ne a certain format for the Atom feed\n&gt;&gt;&gt; b) adjust the user agent implement=\r\nation to handle the format received (e.g. parse out the HTML from the summa=\r\nry or OCR the scanned orders)\n&gt;&gt;&gt; c) do nothing except mark the compiled re=\r\nport as &#39;wrong&#39; or &#39;unusable&#39;. IWO, accept the fact that the user goal cann=\r\not be satisfied\n&gt;&gt;&gt;\n&gt;&gt;&gt; a) Leads to coupling (if it is at all possible/desi=\r\nreable to call the server implementor)\n&gt;&gt;&gt; b) Does not improve the situatio=\r\nn because the format can just change again tomorrow\n&gt;&gt;&gt; c) is the honest op=\r\ntion but provides no business value\n&gt;&gt;&gt;\n&gt;&gt;&gt; In my opinion, the only thing t=\r\no really improve the situation is to standardize a format that allows the s=\r\nerver developer to actually determine the user agent expectations (capabili=\r\nties) from the Accept header. If we had application/orderlist (or at least =\r\napplication/atom+xml;profile=3Dorderlist) the server developer would need t=\r\no either add a new response-producing method or send a 406.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Does th=\r\nat sufficiently illustrate the point?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Jan\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; [1] and of co=\r\nurse be true to be true to the server&#39;s own statement that the resource rep=\r\nresents\n&gt;&gt;&gt; =A0 =A0the new orders. It would be bad to serve a list of shipp=\r\ned orders, for example.\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Robert Brewer\n&gt;&gt;&gt;&gt; fum=\r\nanchu@...\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; -----------------------------------\n&gt;&gt;&gt; =A0Ja=\r\nn Algermissen, Consultant\n&gt;&gt;&gt; =A0NORD Software Consulting\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0Mail: =\r\nalgermissen@...\n&gt;&gt;&gt; =A0Blog: http://www.nordsc.com/blog/\n&gt;&gt;&gt; =A0Work: h=\r\nttp://www.nordsc.com/\n&gt;&gt;&gt; -----------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;=\r\n&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups L=\r\ninks\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Ya=\r\nhoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt; -----------------------------------\n&gt; =A0Jan=\r\n Algermissen, Consultant\n&gt; =A0NORD Software Consulting\n&gt;\n&gt; =A0Mail: algermi=\r\nssen@...\n&gt; =A0Blog: http://www.nordsc.com/blog/\n&gt; =A0Work: http://www.n=\r\nordsc.com/\n&gt; -----------------------------------\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}