{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"Sebastien Lambla &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"8SrgCGKHQvwR05BXNeGt282MBQNlmj54NiPF9brZo_HchXW9g_uiWq5-zb4eZt5rgrVLJqioDrWzmPGfeM1L9G0TJBhl6JKOyEi1","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [rest-discuss] Re: Best approach for a complex API?","postDate":"1324400331","msgId":18113,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2QzAzRTI0NzhAUFJJU00uY2FmZmVpbmUtaXQubmV0Pg==","inReplyToHeader":"PGpjcGN0OStqZWF1QGVHcm91cHMuY29tPg==","referencesHeader":"PENBS2lvT3FzdVA5dTNBRThLSkY3Z3VzWHd6czNYNW5XWDcxUGZNZj1yYjBLMmlPNkxHQUBtYWlsLmdtYWlsLmNvbT4sPGpjcGN0OStqZWF1QGVHcm91cHMuY29tPg=="},"prevInTopic":18109,"nextInTopic":18114,"prevInTime":18112,"nextInTime":18114,"topicId":18105,"numMessagesInTopic":11,"msgSnippet":"Jakob, is there something in OpenRasta you believe would be better solved using WebAPI? Sebastien ________________________________________ From:","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11471 invoked from network); 20 Dec 2011 16:59:18 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m2.grp.sp2.yahoo.com with QMQP; 20 Dec 2011 16:59:18 -0000\r\nX-Received: from unknown (HELO prism.caffeine-it.net) (109.169.48.57)\n  by mta5.grp.sp2.yahoo.com with SMTP; 20 Dec 2011 16:59:17 -0000\r\nX-Received: from PRISM.caffeine-it.net ([fe80::35e4:b04c:7dd0:3207]) by\n PRISM.caffeine-it.net ([fe80::35e4:b04c:7dd0:3207%14]) with mapi; Tue, 20 Dec\n 2011 16:59:17 +0000\r\nTo: Jakob Strauch &lt;jakob.strauch@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nThread-Topic: [rest-discuss] Re: Best approach for a complex API?\r\nThread-Index: AQHMvuexdBvzk7ZRD06ttqPDNfN1iJXk83xq\r\nDate: Tue, 20 Dec 2011 16:58:51 +0000\r\nMessage-ID: &lt;3DDD0BE655869D4EA506652B3803AEF6C03E2478@...-it.net&gt;\r\nReferences: &lt;CAKioOqsuP9u3AE8KJF7gusXwzs3X5nWX71PfMf=rb0K2iO6LGA@...&gt;,&lt;jcpct9+jeau@...&gt;\r\nIn-Reply-To: &lt;jcpct9+jeau@...&gt;\r\nAccept-Language: en-GB, en-US\r\nContent-Language: en-GB\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nMIME-Version: 1.0\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Sebastien Lambla &lt;seb@...&gt;\r\nSubject: RE: [rest-discuss] Re: Best approach for a complex API?\r\nX-Yahoo-Group-Post: member; u=331949899; y=54Dp8Nj8E2WORqBPV4CknkIefHwuO2nM6PJujiIFrTk1S_BV\r\nX-Yahoo-Profile: serialseb\r\n\r\nJakob,\n\nis there something in OpenRasta you believe would be better solved =\r\nusing WebAPI?\n\nSebastien\n________________________________________\nFrom: res=\r\nt-discuss@yahoogroups.com [rest-discuss@yahoogroups.com] on behalf of Jakob=\r\n Strauch [jakob.strauch@...]\nSent: 20 December 2011 07:19\nTo: rest-discu=\r\nss@yahoogroups.com\nSubject: [rest-discuss] Re: Best approach for a complex =\r\nAPI?\n\nDid you try the WCF Web API [1]? It is still a preview release, but w=\r\nork already very nicely.\n\nBtw. i=B4m using also hal+xml, but i worked on an=\r\n own serializer (and formatter for the web api) with a much more convient w=\r\nay to work with hal. I will release a first version soon...\n\nCheers,\nJakob\n=\r\n\n\n[1] http://wcf.codeplex.com/wikipage?title=3DWCF%20HTTP\n\n\n--- In rest-dis=\r\ncuss@yahoogroups.com, Darrel Miller &lt;darrel.miller@...&gt; wrote:\n&gt;\n&gt; One opti=\r\non would be to use XML variant of Hal.  There is a .net based\n&gt; parser avai=\r\nlable here http://hal.codeplex.com.   Hal is a generic media\n&gt; type but you=\r\n can convey specific semantics using extended link relations.\n&gt;  It is easy=\r\n to specify hierarchies of resources and has a standard way of\n&gt; representi=\r\nng links.  I also built a path syntax for querying into the\n&gt; parser but th=\r\nat is not yet part of the spec.\n&gt;\n&gt; Darrel\n&gt;\n&gt;\n&gt; On Mon, Dec 19, 2011 at 3:=\r\n08 PM, J=F8rn Wildt &lt;jw@...&gt; wrote:\n&gt;\n&gt; &gt; **\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I am at the beginn=\r\ning of a project where we need a web/http-based API for\n&gt; &gt; reading and cre=\r\nating complex objects (more on that later). Right now I\n&gt; &gt; need\n&gt; &gt; to dec=\r\nide wether to do this with a SOAP service or a REST API.\n&gt; &gt;\n&gt; &gt; SOAP has t=\r\nhe benefits of being well understood and having lots of tooling\n&gt; &gt; thereby=\r\n making it easy to get up and running. REST has some more long term\n&gt; &gt; ben=\r\nefits but requires a bit more work up front.\n&gt; &gt;\n&gt; &gt; I would rather do it w=\r\nith REST but doing REST right puts some burden on\n&gt; &gt; the\n&gt; &gt; client that I=\r\n struggle with. It is extremely easy to create a SOAP service\n&gt; &gt; in .NET u=\r\nsing WCF and create a proxy client that works with it. Creating a\n&gt; &gt; REST =\r\nclient requires a bit more work if it must know how to follow links\n&gt; &gt; via=\r\n\n&gt; &gt; link-relations, read (x)forms definitions on the fly and so on.\n&gt; &gt;\n&gt; =\r\n&gt; The API works with case files in a case management system (*). A case fil=\r\ne\n&gt; &gt; contains dossiers, dossiers contain documents, and dossiers can be\n&gt; =\r\n&gt; associated with various persons and/or organizations (parties) - like for=\r\n\n&gt; &gt; instance a responsible party.\n&gt; &gt;\n&gt; &gt; So I need to read case files, do=\r\nssiers, binary documents and parties. I\n&gt; &gt; also\n&gt; &gt; need to be able to cre=\r\nate those entities and create the hierarchical\n&gt; &gt; relationship between the=\r\nm. I expect to have web ressources for the\n&gt; &gt; entities:\n&gt; &gt; case file, dos=\r\nsier, document, party ... and, no, I am not going to expose\n&gt; &gt; my\n&gt; &gt; inte=\r\nrnal entity types as web objects, there will be some kind of\n&gt; &gt; transforma=\r\ntion to a public facing representation.\n&gt; &gt;\n&gt; &gt; My first design question is=\r\n; what content type should I use for\n&gt; &gt; representing\n&gt; &gt; these entities? B=\r\ny using HTML I can use &lt;form&gt; and &lt;a&gt; as hypermedia\n&gt; &gt; controls - but then=\r\n there is no well known machine readable representation\n&gt; &gt; of the entities=\r\n except RDFa which I have found rather difficult to use due\n&gt; &gt; to lack of =\r\ntooling in .NET.\n&gt; &gt;\n&gt; &gt; I could also use some proprietary XML variation. T=\r\nhat would solve the\n&gt; &gt; entity\n&gt; &gt; representation but leave me without well=\r\n known hypermedia controls. That\n&gt; &gt; could although be fixed by allowing el=\r\nements like ATOM links and such in\n&gt; &gt; the\n&gt; &gt; XML.\n&gt; &gt;\n&gt; &gt; Initial scenari=\r\no: the API must support creation of a case file, adding a\n&gt; &gt; dossier, and =\r\nassociate various parties to it. That can be a two step\n&gt; &gt; operation - 1) =\r\npost case file data, 2) post dossier data with reference to\n&gt; &gt; (1) and inc=\r\nluded party references. The result would probably be a &quot;403\n&gt; &gt; created&quot; wi=\r\nth a link to the new case file resource.\n&gt; &gt;\n&gt; &gt; Second scenario: add addit=\r\nional binary documents to the dossier. That\n&gt; &gt; should\n&gt; &gt; be easy with the=\r\n dossier representation having a link to its document\n&gt; &gt; collection such t=\r\nhat the client can post new documents to the collection.\n&gt; &gt; It\n&gt; &gt; should =\r\nbe possible to represent a document upload using only standard HTTP\n&gt; &gt; hea=\r\nders, posted content type, and binary data in the body.\n&gt; &gt;\n&gt; &gt; My biggest =\r\nconcern is what content types to use in order to make it as\n&gt; &gt; easy\n&gt; &gt; to=\r\n use from .NET as possible while still being a &quot;real&quot; REST API?\n&gt; &gt;\n&gt; &gt; Wha=\r\nt I would like to be able to do, is to write code like this when\n&gt; &gt; creati=\r\nng\n&gt; &gt; for instance a new case file:\n&gt; &gt;\n&gt; &gt; // Assume &quot;CaseFile&quot; correspon=\r\nds to the public facing content type\n&gt; &gt; CaseFile f =3D new CaseFile();\n&gt; &gt;=\r\n f.Title =3D &quot;A new case file&quot;;\n&gt; &gt; f.OtherProperties =3D ...;\n&gt; &gt;\n&gt; &gt; Uri =\r\ncreateCaseFileUri =3D ... a way to fetch the URI - how? ...\n&gt; &gt; Uri newCase=\r\nFileUri =3D createCaseFileUri.SerializeAndPostSomeData(f);\n&gt; &gt;\n&gt; &gt; Where wo=\r\nuld you guys start with such a project? What tools would you use\n&gt; &gt; for\n&gt; =\r\n&gt; a C# .NET client (the server is built on Open Rasta)?\n&gt; &gt;\n&gt; &gt; Thanks, J=\r\n=F8rn\n&gt; &gt;\n&gt; &gt; (*) I have mentioned this some time ago on this mailing list,=\r\n but the\n&gt; &gt; project has been sleeping for some time, so now time has come =\r\nto re-think\n&gt; &gt; bits of it.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n\n-----------------------------=\r\n-------\n\nYahoo! Groups Links\n\n\n\n\n"}}