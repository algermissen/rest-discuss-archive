{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63369774,"authorName":"Eric Newcomer","from":"Eric Newcomer &lt;e_newcomer@...&gt;","profile":"e_newcomer","replyTo":"SENDER","senderId":"Rer1ADBcFZ61c3mOR3ujl8tYuyqYKhKRa8IxYNdYfERNnkYCLaQQTNjOERSq86WP61qcPobBOYbWp6U_se0ece4NBzZjUX3N-kNu","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] A different approach to supporting transactions  over HTTP","postDate":"1262869322","msgId":14457,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE5MzcyNC41MjUzNS5xbUB3ZWIzNzUwOC5tYWlsLm11ZC55YWhvby5jb20+","inReplyToHeader":"PDM0M2VjYjNlMTAwMTA3MDM0OXYzOTcwZDA0NnM5MDBhMDY3YWYxYzllOGVlQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTA1MTkyMXMzMzBiZjE1Y3I5YjE0YmVhYTJmYjgwNmRhQG1haWwuZ21haWwuY29tPiAgPDM0M2VjYjNlMTAwMTA2MDQ0NXE3Yzk3YjU0NWtjNTFiMmYwMjY2OTgwYzIzQG1haWwuZ21haWwuY29tPiAgPDM3NzUwMi4zODAzMC5xbUB3ZWIzNzUwOC5tYWlsLm11ZC55YWhvby5jb20+IDwzNDNlY2IzZTEwMDEwNzAzNDl2Mzk3MGQwNDZzOTAwYTA2N2FmMWM5ZThlZUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":14456,"nextInTopic":14459,"prevInTime":14456,"nextInTime":14458,"topicId":14439,"numMessagesInTopic":17,"msgSnippet":"Hi Bob, I m aware of the research, and with BTP. I just want to point out that while this is an interesting theory, it has not been proven in practice.  Also I","rawEmail":"Return-Path: &lt;e_newcomer@...&gt;\r\nX-Sender: e_newcomer@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 89998 invoked from network); 7 Jan 2010 13:03:05 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 7 Jan 2010 13:03:05 -0000\r\nX-Received: from unknown (HELO web37508.mail.mud.yahoo.com) (209.191.91.155)\n  by mta1.grp.sp2.yahoo.com with SMTP; 7 Jan 2010 13:03:04 -0000\r\nX-Received: (qmail 53708 invoked by uid 60001); 7 Jan 2010 13:02:02 -0000\r\nMessage-ID: &lt;193724.52535.qm@...&gt;\r\nX-YMail-OSG: o9PtsKcVM1kPfDb_AjFzZ0TMWnJoI4XBhSPU9uh5fWfciFUTTNmPKfcHlGsCMc2B5ZbQV2BPM02FJbWats5tjByS8l.vvCAzwRxVfVJctOzj2_bPnxWyNwpSrfc.lm9WyNp0pGvZcDcIVDIyf4YyCOUSA4HjdB03eTiU9jbot9RvqNzinR9OY38WsJ5yztAru3cgy0qkOktJrhhR0TuQ6m033JLkuD7FMGVju3c8yXMEfHViypLy0yfIAqd8ZoBPBodvH6x_VM.vVty1GlnLz4GT1.q43KvCvBsTA5B8BuuSo3XcTb.I6L9LcEUGOAuMe_2Kxt4YDMfJBQhBvaR1Ml2LelZ6zF4a1TqquVe9fugEf68QNKiBokN6wrpNIrtGraA.__hrSiKS1TK.zSIVvQTCVFSdwQwXlxQJ9Kh4QR3.5_zNsw0NK3eDISjsRNSU0MR0JdnPWtWMTTZ42NVY_g1U.KCA2z8TXzoCvyXJNV.L.njNHO202.MFddRAhCpZkiRpbQLVA9yYHwNRy2jnYrU9ebtl3HxXqDSw2kX9dyYm4D20JoNSl9TvU4HHMIdvWK8Htxd7dtomdieu1EDX5t.HZxo7vsZWZFF4vCxWEjz4hEYc3dh42AXvp9VgGbyUXp3PiRvDJ0C8ROEwuG5Yt7f9mrWgg9XCmItKxbV7riM6gbowpeocp5Fr7FqYeVWBDXHAX9Z4FSGYkM6RjLsEH5AHM1Cns_cK3cJChCI2tmi9PlfPYUBNfENvFOD.Pe8gNZU1a1rL_bHcKDb7f5TxdaiVIjYRhENnaeBCawJ.kBH.\r\nX-Received: from [69.86.107.41] by web37508.mail.mud.yahoo.com via HTTP; Thu, 07 Jan 2010 05:02:02 PST\r\nX-Mailer: YahooMailRC/240.3 YahooMailWebService/0.8.100.260964\r\nReferences: &lt;b548df651001051921s330bf15cr9b14beaa2fb806da@...&gt;  &lt;343ecb3e1001060445q7c97b545kc51b2f0266980c23@...&gt;  &lt;377502.38030.qm@...&gt; &lt;343ecb3e1001070349v3970d046s900a067af1c9e8ee@...&gt;\r\nDate: Thu, 7 Jan 2010 05:02:02 -0800 (PST)\r\nTo: Bob Haugen &lt;bob.haugen@...&gt;,\n  rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;343ecb3e1001070349v3970d046s900a067af1c9e8ee@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Eric Newcomer &lt;e_newcomer@...&gt;\r\nSubject: Re: [rest-discuss] A different approach to supporting transactions  over HTTP\r\nX-Yahoo-Group-Post: member; u=63369774; y=TiQlmYtXxv8LkdfMWscCcMeVP8bnJiKyO5OIqm194PPBaa_mBA\r\nX-Yahoo-Profile: e_newcomer\r\n\r\nHi Bob,\n\nI&#39;m aware of the research, and with BTP. I just want to point out =\r\nthat while this is an interesting theory, it has not been proven in practic=\r\ne.  Also I wanted to correct the terminology.\n\nAnother interesting theory t=\r\nhat hasn&#39;t worked out in practice is three-phase commit. This does actually=\r\n solve a known problem with two-phase commit (the uncertainty phase) but it=\r\n isn&#39;t practical.\n\nI don&#39;t know that the so called &quot;provisional transaction=\r\ns&quot; solve a real problem, although the idea is interesting.  I also know it =\r\nwas a centerpiece of BTP, which has not been adopted.\n\nWith respect to &quot;und=\r\no&quot; - the problem is that we need to be precise about the terms we&#39;re using =\r\nto describe transactions.  I am going to assume we are discussing &quot;technica=\r\nl&quot; transactions rather than &quot;logical&quot; transactions - i.e. the way in which =\r\nthe transaction paradigm is implemented in software.  This is a very import=\r\nant point, because any suggestion of a new capability has to take into acco=\r\nunt existing implementations (something BTP didn&#39;t really do very well BTW)=\r\n.\n\nIn current practice, a transaction is the execution of a program that op=\r\nerates on shared data, typically on behalf of an online user. The program e=\r\nither runs to completion and the results are permanent, or the program does=\r\n not complete and the results are discarded.  A transaction has no meaning =\r\nunless it is operating on data, since it&#39;s purpose is to reliably change th=\r\ne state of the shared data, without leaving any partial results in the case=\r\n of a crash or other failure.  Thus, there is no such thing  as a &quot;partial&quot;=\r\n transaction in today&#39;s world.\n\nThe term &quot;undo&quot; refers to one mechanism tha=\r\nt ensures that there are no partial results, by undoing the &quot;temporary&quot; wri=\r\ntes to a database or other transactional resource manager that are typicall=\r\ny done in place for better performance (i.e the assumption is that a commit=\r\n is a more likely to occur than an abort) when a failure occurs. The undo m=\r\nechanism relies on writing the &quot;before&quot; state of the resource manager&#39;s dat=\r\na to a recovery of undo log, from which it can be retrieved and restored if=\r\n necessary.\n\nThe term &quot;compensation&quot; refers to a separate transaction that =\r\nis run only after a previous transaction has already run to completion, in =\r\nfact only after a previous transaction has committed. Because the definitio=\r\nn of a commit includes the assumption that the results are permanent, the o=\r\nnly way to change the results is to run another transaction (which is calle=\r\nd a compensating transaction when it reverses or as you say undoes the resu=\r\nlts of a prior transaction).  Compensation is not undo - the key difference=\r\n is that undo runs before commit, and compensation runs after commit.  \n\nTh=\r\ne fallacy in the partial transaction or reservation pattern is that partial=\r\n results are visible.  No results are visible until after commit - this is =\r\nthe way things work in practice, and to suggest otherwise ignores reality.\n=\r\n\nNow if you compare the reservation pattern to a saga, that&#39;s is a referenc=\r\ne to an accepted pattern.  Compensation is used in this pattern exactly as =\r\nI describe it, to reverse the results of a prior commit. A saga is just a s=\r\ntring of individual transactions that commit or abort separately.  They may=\r\n have a logical relationship, but there is no transaction mechanism that jo=\r\nins them together.  A saga is typically done to avoid maintaining locks ove=\r\nr a long sequence of operations on data, and this is fine and works.  But i=\r\nt also requires the developer to write specific compensation transactions f=\r\nor each step in the saga. No automatic mechanism exists for this.  \n\nThe pr=\r\noblem is the suggestion that a partial result of a transaction is possible.=\r\n  It is not. A transaction either commits or aborts.  If you run multiple t=\r\nransactions in sequence (as in a saga) they are related only logically, not=\r\n in the transaction paradigm.  If you run a &quot;provisional&quot; transaction it ha=\r\ns exactly the same behavior as a &quot;final&quot; transaction.\n\nI just don&#39;t want an=\r\nyone thinking this theory represents actual practice. \n\nEric\n\n\n\n\n----- Orig=\r\ninal Message ----\nFrom: Bob Haugen &lt;bob.haugen@...&gt;\nTo: rest-discuss =\r\n&lt;rest-discuss@yahoogroups.com&gt;\nSent: Thu, January 7, 2010 6:49:37 AM\nSubjec=\r\nt: Re: [rest-discuss] A different approach to supporting transactions  over=\r\n HTTP\n\nI should probably explain that Eric Newcomer is an expert in\ntransac=\r\ntions and I am not.  Nevertheless, I disagree, and will cite\nsome other tra=\r\nnsaction experts (below).\n\n(And I promised to myself I would stop engaging =\r\nin this thread, but whatever...)\n\n(And yes this level of transactional deta=\r\nil is probably off-topic for\nREST-discuss so I will shut up now...)\n\nOn Wed=\r\n, Jan 6, 2010 at 7:49 PM, Eric Newcomer &lt;e_newcomer@...&gt; wrote:\n&gt;\n&gt; C=\r\nompensation is not the same as undo, that is a big error in this discussion=\r\n.\n\nCompensation has been used as undo, as a replacement for cancel or\nabort=\r\n in the 2nd phase of 2PC, in several transactional methods,\nincluding BTP (=\r\nbelow) and Sagas:\nwww.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf\n\n=\r\n&quot;To amend partial executions, each saga T, should be provided with a\ncompen=\r\nsating transaction C. The compensating transaction undoes, from\na semantic =\r\npoint of view, any of the actions performed by T, but does\nnot necessarily =\r\nreturn the database to the state that existed when the\nexecution of T began=\r\n.&quot;\n\n&gt; A similar bit of bad logic is involved in the idea of a &quot;provisional&quot;=\r\n transaction.  I realize this idea has been around for a while, and there a=\r\nre several proponents of it. However a transaction is a transaction, and ei=\r\nther it is complete or it is not complete and is rolled back (or undone). I=\r\nf you want to model two transactions, that&#39;s fine, but don&#39;t call one &quot;prov=\r\nisional&quot; when it has the exact same semantics as the &quot;real&quot; transaction.\n&gt;\n=\r\n\nThat is an inaccurate representatiton of the provisional-final\npattern, le=\r\naving off the &quot;final&quot; part (the 2nd phase).\n\nHere&#39;s one fairly early versio=\r\nn. The paper is introduced by its author::\n&#39;&quot;The Escrow Transactional Metho=\r\nd,&quot; Presented at First Annual Workshop\non High Performance Transaction Syst=\r\nems, September 1985, later\npublished in ACM Transactions on Database System=\r\ns, V. 11, No. 4,\nDecember 1986,pp. 405-430. This has been an influential pa=\r\nper. I know\nof nearly 30 citations to the Escrow Transactions paper in the\n=\r\nliterature including a series of papers by different authors extending\nthe =\r\nEscrow method to database replication. Authors of these papers\ninclude: The=\r\no Haerder, Akhil Kumar and Michael Stonebraker, N.\nSoparkar and Avi Silbers=\r\nchats, Daniel Barbar-Mill and Hector\nGarcia-Molina.&#39;\nhttp://www.cs.umb.edu/=\r\n~poneil/EscrowTM.pdf\n\nAnd here&#39;s another from OASIS BTP:\nhttp://www.oasis-o=\r\npen.org/committees/tc_home.php?wg_abbrev=3Dbusiness-transaction\n\n&lt;excerpt&gt;\n=\r\nIn general, to be able to satisfy such contracts a BTP-enabled service\nmust=\r\n support in some\nmanner provisional or tentative state changes (the transac=\r\ntion=E2=80=99s\nProvisional Effect) and\ncompletion either through confirmati=\r\non (Final Effect) or cancellation\n(Counter-effect). The\nmeaning of provisio=\r\nnal, final, and Counter-effect are specific to the\napplication and to the\ni=\r\nmplementation of the application.\n[...]\n           Table 1 Some alternative=\r\ns for Provisional, Final and Counter-Effects\n------------------------------=\r\n\n\nProvisional Effect:\nPerform the changes, making them visible; store infor=\r\nmation to undo the changes\n\nFinal Effect::\nDelete undo information\n\nCounter=\r\n effect:\nPerform undo action\n\nComment:\nOne form of compensation approach\n\n-=\r\n----------------------------------------------------\n\nProvisional Effect:\nP=\r\nerform the changes, marked or typed as provisional, making them visible\n\nFi=\r\nnal Effect::\nMark or transform as final\n\nCounter effect:\nDelete or mark/tra=\r\nnsform as cancelled\n\nComment:\nE.g. quote-to-order cycle\n&lt;/excerpt&gt;\n\n\n------=\r\n------------------------------\n\nYahoo! Groups Links\n\n\n\n\n      \n\n"}}