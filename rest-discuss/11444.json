{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"pLDw9dS_PtyPINpg5znVFC0cszDRzN1ATb2MHIG5c2wh6tskIa_Ltd_5DmtS-WcEDcYo9-h5-whhitWZ0g1MX1w7nIXUZvyKqg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST Server API test harness?","postDate":"1226072812","msgId":11444,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYzM0NCRERBLURCQTEtNDhBNC05RTc4LTFDNjlEMDUyQUU1N0BtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PDc5OTMzMGMzMDgxMTA3MDcyNXU2ZjI4ZmE1M2tjNzM1YWRlYTkxMzNlZDMxQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PEJMVTEwMi1EUzQ3RDdCQTRCOEYyNTRDMzc2OEQ1NEI1MTkwQHBoeC5nYmw+IDwyN0VGRUE4RS0wQzE5LTQxQjEtOEVBQS0wMzE1MjVBNDkyNURAbWluZHRvdWNoLmNvbT4gPDc5OTMzMGMzMDgxMTA3MDcyNXU2ZjI4ZmE1M2tjNzM1YWRlYTkxMzNlZDMxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":11443,"nextInTopic":11445,"prevInTime":11443,"nextInTime":11445,"topicId":11439,"numMessagesInTopic":20,"msgSnippet":"Alan, I would imagine there is a reasonable good test surface for HTTP even without knowledge of content-types.  Your diagram is a great resource for this!","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 18075 invoked from network); 7 Nov 2008 15:48:34 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m54.grp.scd.yahoo.com with QMQP; 7 Nov 2008 15:48:34 -0000\r\nX-Received: from unknown (HELO smtp.01.com) (38.98.186.166)\n  by mta15.grp.scd.yahoo.com with SMTP; 7 Nov 2008 15:48:33 -0000\r\nX-Received: from asav-1.01.com (localhost.localdomain [127.0.0.1])\n\tby asav-1.01.com (8.13.1/8.13.1) with SMTP id mA7FksLv029544;\n\tFri, 7 Nov 2008 09:46:54 -0600\r\nX-Received: from smtp-2.01.com (smtp-2.01.com [38.98.186.158])\n\tby asav-1.01.com (asav-1.01.com [10.25.1.11])\n\tid kA69ks0518643564Ux ret-id none; Fri, 07 Nov 2008 09:46:54 -0600\r\nX-Received: from localhost (localhost.localdomain [127.0.0.1])\n\tby smtp-2.01.com (Postfix) with ESMTP id 80E661AD5C2;\n\tFri,  7 Nov 2008 09:46:54 -0600 (CST)\r\nX-Received: from smtp-2.01.com ([127.0.0.1])\n\tby localhost (smtp-2.01.com [127.0.0.1]) (amavisd-new, port 10024)\n\twith ESMTP id Ytme5Zo6Nbhb; Fri,  7 Nov 2008 09:46:54 -0600 (CST)\r\nX-Received: from [192.168.1.102] (ip70-179-9-103.sd.sd.cox.net [70.179.9.103])\n\tby smtp-2.01.com (Postfix) with ESMTP id E3A5C1AD5BE;\n\tFri,  7 Nov 2008 09:46:53 -0600 (CST)\r\nCc: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;633CBDDA-DBA1-48A4-9E78-1C69D052AE57@...&gt;\r\nTo: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nIn-Reply-To: &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v929.2)\r\nDate: Fri, 7 Nov 2008 07:46:52 -0800\r\nReferences: &lt;BLU102-DS47D7BA4B8F254C3768D54B5190@...&gt; &lt;27EFEA8E-0C19-41B1-8EAA-031525A4925D@...&gt; &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\r\nX-Mailer: Apple Mail (2.929.2)\r\nX-FSL-MailScanner-Information: Please contact postmaster@... for more information\r\nX-FSL-MailScanner: Found to be clean\r\nX-FSL-MailScanner-SpamCheck: \r\nX-FSL-MailScanner-From: steveb@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] REST Server API test harness?\r\nX-Yahoo-Group-Post: member; u=292691042; y=UHFMkh9Hq2D6i8FZsxvyw3aq-HqK_Zsfqma2nTNv7ZcIVw2he30\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\nAlan,\n\nI would imagine there is a reasonable good test surface for HTTP even  \nwithout knowledge of content-types.  Your diagram is a great resource  \nfor this! (btw, did you ever get help on converting it to SVG?)\n\nFor instance, OPTIONS could be used to retrieve the list of supported  \nHTTP methods.  If GET is among them, check if a ETag response header  \nis present.  If so, does the server respond with 204 No Content when a  \nmatching If-None-Match request header is present.  Similarly, if PUT  \nis supported, try If-Match header, and so forth.\n\nAlthough, none of this has anything to do with REST, such a litmus  \ntest would be very relevant to WOA implementers.\n\n- Steve\n\n--------------\nSteve G. Bjorg\nhttp://wiki.mindtouch.com\nhttp://twitter.com/bjorg\n\nOn Nov 7, 2008, at 7:25 AM, Alan Dean wrote:\n\n&gt; I agree with Steve.\n&gt;\n&gt; A test harness for REST-over-HTTP could be valuable though; however it\n&gt; can&#39;t be ignorant of media-types. How can such a test harness assess\n&gt; HATEOAS without knowledge of the media-type exchanged? Without\n&gt; knowledge of HATEOAS, the test harness is unable to traverse the links\n&gt; between steady states.\n&gt;\n&gt; Some problems come to mind. In order to assess REST-over-HTTP,\n&gt; resource state changes must be made. In many, perhaps most, test\n&gt; subjects this will be either impossible (due to access control\n&gt; restrictions) or undesirable (filling a site with dummy data). The\n&gt; Code-on-Demand constraint further complicates the testability of\n&gt; subjects, as it reduces visibility.\n&gt;\n&gt; Given the necessity to have knowledge of many media-types, I suspect\n&gt; this would not be a trivial development. Good idea though (my\n&gt; http-headers-status diagram grew out of just such a test suite,\n&gt; although that was very application-specific).\n&gt;\n&gt; Alan\n&gt;\n&gt; On Fri, Nov 7, 2008 at 2:34 PM, Steve Bjorg &lt;steveb@...&gt;  \n&gt; wrote:\n&gt;&gt; I&#39;m not aware of any, but from your description, it sounds a HTTP  \n&gt;&gt; test\n&gt;&gt; harness, not REST.\n&gt;&gt; - Steve\n&gt;&gt; --------------\n&gt;&gt; Steve G. Bjorg\n&gt;&gt; http://wiki.mindtouch.com\n&gt;&gt; http://twitter.com/bjorg\n&gt;&gt; On Nov 7, 2008, at 4:42 AM, Sebastien Lambla wrote:\n&gt;&gt;\n&gt;&gt; Hi,\n&gt;&gt;\n&gt;&gt; I had an idea a while ago. As I&#39;m writing a REST enabler toolkit,  \n&gt;&gt; and as i\n&gt;&gt; know others do exist too, it would be of great help to have a test  \n&gt;&gt; harness\n&gt;&gt; to ensure valid (http / webarch) behavior.\n&gt;&gt;\n&gt;&gt; What I&#39;m thinking of is a bunch of specifications for various areas  \n&gt;&gt; to be\n&gt;&gt; implemented using an http or rest toolit, with an automated client  \n&gt;&gt; checking\n&gt;&gt; for accurate responses.\n&gt;&gt;\n&gt;&gt; For example, the following would be a specification:\n&gt;&gt;\n&gt;&gt; Generic resources\n&gt;&gt; =============\n&gt;&gt; A generic resource /customer({id}) is exposed as an xml  \n&gt;&gt; represetnation, a\n&gt;&gt; json representation and an html representation. Content-type  \n&gt;&gt; negotiation is\n&gt;&gt; supported on such resource. Format-specific URIs exist at\n&gt;&gt; /customer({id}).html, /customer({id}).json and /customer({id}).html\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Acceptance criterias\n&gt;&gt; - A request to /customer(22) with Accept:\n&gt;&gt; application/xml;q=0.9,application/json triggers a 200 with Content- \n&gt;&gt; Type:\n&gt;&gt; application/json and Content-Location: /customer(22).json\n&gt;&gt; - A request to /customer(22) with Accept: */* triggers a 300 Multiple\n&gt;&gt; representations\n&gt;&gt; - A request to /customer(22).html with Accept: text/html triggers a  \n&gt;&gt; 200\n&gt;&gt; - A request to /customer(22).html with Accept: application/json  \n&gt;&gt; triggers xxx\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m building integration tests around my API that follow such a  \n&gt;&gt; pattern, but\n&gt;&gt; having a common test suite for any API that has an implementation  \n&gt;&gt; of such\n&gt;&gt; test harness would be invaluable.\n&gt;&gt;\n&gt;&gt; Is there such a harness and I missed it? Would anyone be interested  \n&gt;&gt; in\n&gt;&gt; working on such harness?\n&gt;&gt;\n&gt;&gt; Seb\n&gt;&gt;\n&gt;&gt; \n\n\n"}}