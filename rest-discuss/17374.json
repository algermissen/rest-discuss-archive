{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":180614093,"authorName":"Stuart Charlton","from":"Stuart Charlton &lt;stuartcharlton@...&gt;","profile":"stuartcharlton","replyTo":"SENDER","senderId":"53YHS1LUZIcDReAP8m4HjoWAHneeDDPdoM7hJeqnjETExRd4f3xUZUN9x1LI7r1RoPzMRQ-CQb8LN5knQyBkDo-AZCuE4VYm7MerERqcUGdn","spamInfo":{"isSpam":false,"reason":"12"},"subject":"design vs runtime in representations","postDate":"1298437427","msgId":17374,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDc0MjM4Ni41MDc4OS5xbUB3ZWIxMTQ2MTIubWFpbC5ncTEueWFob28uY29tPg=="},"prevInTopic":0,"nextInTopic":17375,"prevInTime":17373,"nextInTime":17375,"topicId":17374,"numMessagesInTopic":9,"msgSnippet":"An idea that s been needling in my head for a while, just want to float it out there.  This likely has been discussed before and I ve just missed the thread. ","rawEmail":"Return-Path: &lt;stuartcharlton@...&gt;\r\nX-Sender: stuartcharlton@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17447 invoked from network); 23 Feb 2011 05:03:48 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m7.grp.sp2.yahoo.com with QMQP; 23 Feb 2011 05:03:48 -0000\r\nX-Received: from unknown (HELO web114612.mail.gq1.yahoo.com) (98.136.183.65)\n  by mta1.grp.sp2.yahoo.com with SMTP; 23 Feb 2011 05:03:48 -0000\r\nX-Received: (qmail 55416 invoked by uid 60001); 23 Feb 2011 05:03:47 -0000\r\nMessage-ID: &lt;742386.50789.qm@...&gt;\r\nX-YMail-OSG: aYMuW88VM1nfJ1gaqwRIrQAYF6rFB6VBPeZ6Ob6vYGf6A3P\n cEh6xcYw9IMX3C24oqbJ5bahm3pokr3an6_QpauhvJZwbKPa87TcWv2nozMW\n Bp52zY5pWynu78Z0jV2ynJTfk_Rcm6zdz15A2W9bV._SO02JtAyzjM0j3Gan\n 9_kW5dZJpVhITJ6g9Jc6ebXwBfyGhlyN5sRmvDvwuUsBIk3KQXaKFVGSnLPS\n kz_I2EKmPtftZfII1BxqQcLC27Fdojfs_ml4HIHbRUueEyMApWHhV3AiHz7K\n X9OrJEgqlufUzTUreMPcjfS2mepxFQtMXwdRIH21TOPpFmgajYOgwW.Hz8nQ\n Os8L1wItMiIQ4K.CMI2GgwLW9cKlKyCSkxu_L8_IzrZESbwl1YGTK2w0uUsX\n mzblDMVUWivNY\r\nX-Received: from [75.158.83.96] by web114612.mail.gq1.yahoo.com via HTTP; Tue, 22 Feb 2011 21:03:47 PST\r\nX-Mailer: YahooMailRC/555 YahooMailWebService/0.8.109.292656\r\nDate: Tue, 22 Feb 2011 21:03:47 -0800 (PST)\r\nTo: rest-discuss@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Stuart Charlton &lt;stuartcharlton@...&gt;\r\nSubject: design vs runtime in representations\r\nX-Yahoo-Group-Post: member; u=180614093; y=HdStjrNDeXgXvSoUXRV0EX0auALR0bxLSR5s0Fy1oB8-PcM7EHc8lW4\r\nX-Yahoo-Profile: stuartcharlton\r\n\r\nAn idea that&#39;s been needling in my head for a while, just want to float it out \nthere.  This likely has been discussed before and I&#39;ve just missed the thread.\n\n\n Suppose the following\n\n1. you have a media type that describes how to interact with other resources.   \n\n2. you have resource http://MetaA that describes how to interact with a \nhyperlinked resource, http://RealA.  \n\n3.  MetaA&#39;s representation has defined a very long cache TTL (say, 3 months)\n\n4. A user agent that GETs the representation MetaA,  caches the representation \nof MetaA, and prompts User 1 to manipulate MetaA&#39;s representation to configure \nintegration of the user agent&#39;s overall application to representations that may \nbe transferred to/from RealA\n\n5. This same user agent is leveraged by User 2 over many months to interact with \nRealA given the cached MetaA.\n\n6. If MetaA&#39;s representation changes, the User 1 is notified by the user agent \n(via some undefined mechanism) to change its configuration so that User 2 can \ncontinue to interact with RealA.\n\nSteps 1 - 3 are &quot;design time&quot;,  steps 4-5 are &quot;runtime&quot; in the traditional sense \nof the term;\nUser 1 is a developer (or technical user)\nUser 2 is an automaton (i.e. client code of some sort)\nBoth MetaA and RealA&#39;s representations are part of the application state (aka. \nits hypermedia workspace), but the origin server(s) have set different \nexpectations on how long they can be cached (MetaA for a long time, RealA for a \nshort time).\n\n\nOr, if you&#39;re more concrete minded, imagine:\n- You write a scraping application that caches an HTML form to a stock quote \nservice, which a developer then uses to generate URIs to GET a stock quote \nprice.   The application is smart enough to periodically GET the HTML form and \ncan detect changes, but would require developer intervention in some cases, such \nas if the required bound form field names changed.\n\nMy question:\n\nHow is this not RESTful? (in the sense of it not being respectful of the \nconstraints of the style and thus sacrificing some beneficial properties like \nscalability, evolvability, etc.)\n  \nMy proposition:\n\n1. If this is not RESTful, we&#39;ll have to talk.\n\n2. If this is RESTful, we need to be really careful when we say there&#39;s no \n&quot;design time&quot; in RESTful systems.  \n\nI think the clearer statement is that &quot;static code generation&quot; (e.g. client \nstubs) is discouraged in properly RESTful systems, since it tends towards \nsucktacular rigidity in the user agent.\n\n\nCheers\nStu\n\n\n\n\n"}}