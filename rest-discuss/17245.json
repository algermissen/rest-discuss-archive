{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Rf_eg6rJMv8A5tgo72lOkuF50oKAUBe8goRCiyWOdmWJfzB4IhDZQQxrknY8dxarpBwjzrjW_O5depT-UI1U_4_a8TDHqdXF_ZxJt58GKw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] The relation of Linked Data/Semantic Web to REST","postDate":"1296443329","msgId":17245,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwMTMwMjAwODQ5LjNkZGY0OWM1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGlpMHBocitsbDhoQGVHcm91cHMuY29tPg==","referencesHeader":"PGlpMHBocitsbDhoQGVHcm91cHMuY29tPg=="},"prevInTopic":17244,"nextInTopic":17246,"prevInTime":17244,"nextInTime":17246,"topicId":17242,"numMessagesInTopic":40,"msgSnippet":"... No, they are unrelated.  REST is primarily concerned with the semantics of the messaging between network connectors.  All REST cares about the data type,","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 91720 invoked from network); 31 Jan 2011 03:09:02 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m17.grp.re1.yahoo.com with QMQP; 31 Jan 2011 03:09:02 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 31 Jan 2011 03:09:02 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 34F42509ED;\n\tSun, 30 Jan 2011 22:09:01 -0500 (EST)\r\nDate: Sun, 30 Jan 2011 20:08:49 -0700\r\nTo: &quot;Bob Ferris&quot; &lt;zazi@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20110130200849.3ddf49c5.eric@...&gt;\r\nIn-Reply-To: &lt;ii0phr+ll8h@...&gt;\r\nReferences: &lt;ii0phr+ll8h@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] The relation of Linked Data/Semantic Web to REST\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Bob Ferris&quot; wrote:\n&gt; \n&gt; Is the common, layered Semantic Web technology stack a implementation\n&gt; of a Uniform Interface re. REST principles?\n&gt;\n\nNo, they are unrelated.  REST is primarily concerned with the semantics\nof the messaging between network connectors.  All REST cares about the\ndata type, is that it be standardized and capable of the progressive\nrendering (processable as a stream) of choices for transitioning to\nother application states.  SemWeb is all about the semantics of the\npayload, as interpreted by the components, which has no bearing on\nmessaging between connectors (IOW, how to tell a machine how a\nparticular state transition relates to its goal).\n\n&gt;\n&gt; Or is it only HTTP as communication protocol?\n&gt;\n\nSimply stated, you can GET or PUT your RDF documents with FTP, too.\n\n&gt;\n&gt; And what does &quot;The same small set of operations applies to\n&gt; everything&quot; then mean? Do I have to enable an processing of every\n&gt; operation on every (information) resource?\n&gt;\n\nNo.  What&#39;s uniform isn&#39;t the set of methods allowed by all resources;\nit&#39;s the semantics of whatever methods a given resource allows.  You\ndon&#39;t use GET to delete stuff, or POST to retrieve stuff, or FOO to\ndenote nonstandardized semantics.\n\n&gt; \n&gt;     HTTP operations are generic: they are allowed or not, per\n&gt; resource, but they are always valid. (see [11])\n&gt; \n&gt; This is in accord with my last statement.\n&gt; \n\nAny HTTP resource has a DELETE method which removes the resource,\nwhether it&#39;s allowed (for the requesting user) or not, whether the\nmethod is implemented (501 response) or not, which never means anything\nbut remove the resource.\n\n&gt;\n&gt; As the common, layered Semantic Web technology stack uses HTTP as\n&gt; communication protocol, it uniformly defines/provides also the small\n&gt; set of operations of the Uniform Interface.\n&gt;\n\nI don&#39;t understand.  HTML and Atom define HTTP method operations\n(beyond the default retrieval operation), SemWeb doesn&#39;t.\n\n&gt; \n&gt; Side note: I know, there is some progress in providing media type\n&gt; specification as resources with a URI.\n&gt;\n\nNo, there isn&#39;t.  Yes, it&#39;s been raised repeatedly, and shot down\nrepeatedly, here and elsewhere.  There is an effort underway to\nidentify and resolve problems with media types and their registration:\n\nhttp://tools.ietf.org/html/draft-masinter-mime-web-info \n\nI don&#39;t recall if it&#39;s in the document or the surrounding debate, but\nthis notion of allowing URIs as tokens in Content-Type has been\nexplicitly rejected many times now as poor architectural design.  Most\nrecently, this reality was summed up earlier today in seven words:\n\nhttp://lists.w3.org/Archives/Public/www-tag/2011Jan/0058.html\n\nRegistries are oversight mechanisms.  It&#39;s non-sequitir to suggest\nreplacing registries with URIs, without first explaining why oversight\nisn&#39;t required.  Otherwise the result is registered URIs, so the\n&quot;problem&quot; isn&#39;t actually solved, only compounded by more bits in the\nheader and reduced visibility.\n\n&gt;\n&gt; All in all, an agent must be able to automatically learn the\n&gt; processing model of a previously unknown media type, if wanted\n&gt; (analogues the HTTP Upgrade header field).\n&gt;\n\nI have no idea what you&#39;re talking about, what purpose this serves,\nwhat need it fills, what it has to do with architecture, or why the\nsubject of machines learning media type processing models keeps coming\nup, particularly since the level of AI sophistication required for a\nmachine, with no advance knowledge of either, to somehow learn how to\nrender HTML or SVG or anything else is decades away, IBM&#39;s Jeopardy-\nplaying machine notwithstanding.\n\nMedia types are meant to explain the processing model of a data type to\nhumans, who then write code implementing that processing model.  Media\ntypes are not targeted towards machine readability, an architectural\nrequirement I can&#39;t begin to fathom when mentioned as a deficiency.\nThe scope of the effort to fix the registry does not include machine-\nreadable media types.\n\n&gt; \n&gt; This is addressed by the constraints &quot;Self-Describing Messages&quot; and\n&gt; &quot;Hypermedia Driving Application State&quot; (a.k.a. HATEOAS).\n&gt;\n\nThe constraint is &quot;self-descriptive messaging&quot; and has nothing to do\nwith the self-describing messages (payloads) of SemWeb.  All a\ncomponent needs to be able to do, when it comes to Content-Type, is\nrecognize the token to determine if it has the corresponding codec.\nThe component takes that token to be self-descriptive of the sender&#39;s\nintended processing model, thus hopefully rendering HTML as plaintext\nif the representation was labelled as text/plain.\n\nThat REST has anything to do with machines which generate that codec\nbased on inferring something from a URI in Content-Type, or that the\npayload itself must be self-describing (self-describing is a SemWeb\nterm having to do with extensible document semantics, self-descriptive\nis a REST term having to do with registered header semantics), are\npervasive myths whose origins baffle me.\n\n&gt;\n&gt; That means, I would (currently) conclude that only the methods of the\n&gt; HTTP protocol are an implementation of a set of operations of a\n&gt; Uniform Interface and Semantic Web knowledge representation languages\n&gt; are related to the other two constraints.\n&gt; \n\nYou&#39;re drawing the wrong conclusion.  REST&#39;s hypertext constraint\nrequires that instructions for how to proceed to other application\nstates be included in the payload, that&#39;s all.  SemWeb operates at a\nlayer above this, concerned with making those hypertext instructions\nmachine-readable (self-describing).\n\nIt&#39;s possible to make a RESTful SemWeb application, but not required;\njust as it&#39;s possible to add SemWeb to a REST system, or not -- the\narchitectural style of a system is not a product of using SemWeb\ntechnologies.  SemWeb is component architecture, REST is connector\narchitecture.\n\n&gt; \n&gt; Self-Describing Messages are enforced for machine processing by using\n&gt; as basis the common knowledge representation languages of the\n&gt; Semantic Web (i.e. RDF Model, RDF Schema, OWL, RIF) and all knowledge\n&gt; representation languages (incl. further Semantic Web ontologies) are\n&gt; referenced in this &#39;message&#39;. This is somehow generalized in the\n&gt; third Linked Data principles as defined by timbl[9] (&quot;provide useful\n&gt; information, using the standards&quot;).\n&gt; \n\nI can&#39;t stress enough, not to confuse self-describing messages with\nself-descriptive messaging.  Tim&#39;s principles apply for the wide-open\nsemantics of describing anything, as a payload.  Roy&#39;s principles apply\nto the limited set of uniformly-understood semantics of messaging (i.e.\nHTTP headers) which may be extended across network boundaries.\n\n-Eric\n\n"}}