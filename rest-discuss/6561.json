{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"tASo7VgqlJA5I5OOvxopb4o422LQnoOytNiVQIb5lHoERztjUvCp5xZnMyGTGDBKb1_SArtU2XZGKzhS3s09SPuhQa_KJJye0Yq_sEE6t3ta_JstrU1YmNE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP OPTIONS method for querying capabilities \tof a resource.","postDate":"1158375632","msgId":6561,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNTgzNzU2MzIuNTU0NS41NS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PDg3dmVub3ZjZXIuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+","referencesHeader":"PGVjMjFvdCtqbmE1QGVHcm91cHMuY29tPgkgPDExNTgzNjY4MjQuNTU0NS4yOS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8ODd2ZW5vdmNlci5mc2ZAbmljZmVycmllci50YXBzZWxsZmVycmllci5jby51az4="},"prevInTopic":6560,"nextInTopic":0,"prevInTime":6560,"nextInTime":6562,"topicId":6473,"numMessagesInTopic":10,"msgSnippet":"... Of course it is: C- S: POST http://bank.example.com/transactions C S: PUT","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 37945 invoked from network); 16 Sep 2006 03:01:53 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m36.grp.scd.yahoo.com with QMQP; 16 Sep 2006 03:01:53 -0000\r\nReceived: from unknown (HELO mail29.syd.optusnet.com.au) (211.29.132.171)\n  by mta1.grp.scd.yahoo.com with SMTP; 16 Sep 2006 03:01:53 -0000\r\nReceived: from c210-49-78-16.rochd2.qld.optusnet.com.au (c210-49-78-16.rochd2.qld.optusnet.com.au [210.49.78.16])\n\tby mail29.syd.optusnet.com.au (8.12.11/8.12.11) with ESMTP id k8G30WS7025518;\n\tSat, 16 Sep 2006 13:00:33 +1000\r\nTo: Nic James Ferrier &lt;nferrier@...&gt;\r\nCc: Andy &lt;IMarvinTPA@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;87venovcer.fsf@...&gt;\r\nReferences: &lt;ec21ot+jna5@...&gt;\n\t &lt;1158366824.5545.29.camel@...&gt;\n\t &lt;87venovcer.fsf@...&gt;\r\nContent-Type: text/plain\r\nDate: Sat, 16 Sep 2006 13:00:32 +1000\r\nMessage-Id: &lt;1158375632.5545.55.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.2 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] HTTP OPTIONS method for querying capabilities \n\tof a resource.\r\nX-Yahoo-Group-Post: member; u=184797058; y=nbuHtnkjiGqxmA5obXZMbNlFExL5l51zXDLWd6DLgw9YYWc\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Sat, 2006-09-16 at 02:16 +0100, Nic James Ferrier wrote:\n&gt; Benjamin Carlyle &lt;benjamincarlyle@...&gt; writes:\n&gt; &gt; On Thu, 2006-08-17 at 15:25 +0000, Andy wrote:\n&gt; &gt;&gt; I see lots of discussion on the &quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, and &quot;DELETE&quot;\n&gt; &gt;&gt; HTTP methods when talking about REST, but I never see much about\n&gt; how\n&gt; &gt;&gt; to discover what you can do with a resource. Wouldn&#39;t it make sense\n&gt; &gt;&gt; to ask the resource what it is capable of?\n&gt; &gt;\n&gt; &gt; The best way to discover what a resource is capable of is probably\n&gt; to\n&gt; &gt; try the thing you need it to do, and see if it succeeds or fails. \n&gt; That&#39;s not very good advice if the thing to try is &quot;debit bankaccount&quot;\n\nOf course it is:\n\nC-&gt;S: POST http://bank.example.com/transactions\nC&lt;-S: 201 Created\nC&lt;-S: Location: http://bank.example.com/transactions/1234\nC-&gt;S: PUT http://bank.example.com/transactions/1234\nC-&gt;S: Content-Type: application/bank-transaction\nC-&gt;S: &lt;transaction&gt;\nC-&gt;S: \t&lt;entry&gt;\nC-&gt;S: \t\t&lt;account&gt;http://example.com/bank/accounts/1000&lt;/account&gt;\nC-&gt;S: \t\t&lt;type&gt;debit&lt;/type&gt;\nC-&gt;S: \t\t&lt;amount&gt;100.00&lt;/amount&gt;\nC-&gt;S: \t&lt;/entry&gt;\nC-&gt;S: \t&lt;entry&gt;\nC-&gt;S: \t\t&lt;account&gt;http://example.com/bank/accounts/1001&lt;/account&gt;\nC-&gt;S: \t\t&lt;type&gt;credit&lt;/type&gt;\nC-&gt;S: \t\t&lt;amount&gt;100.00&lt;/amount&gt;\nC-&gt;S: \t&lt;/entry&gt;\nC-&gt;S: &lt;/transaction&gt;\n\nI know what transaction I want to post (the content). I know which url\nto send it to. I know which verb to use. I don&#39;t need to discover\nanything more about the resource. I&#39;ll send the same kind of request to\nany bank I talk to. The resource either responds indicating success,\nfailure, or a gateway or proxy failure (which is why we need the\ndouble-request, to avoid duplicate submission).\n\nA machine is only going to be able learn something from an OPTIONS\nrequest if there are multiple ways of doing this transaction that it\nalready has code for and must decide between. There should not be\nmultiple ways. It is up to REST proponents and implementors to actively\ndevelop standard approaches. This is lesscode by better agreements, so\nmultiple implementations and the negotiation that goes with them are not\nrequired.\n\n&gt; &gt; Doing an OPTIONS on a resource you already know you want to hold a\n&gt; &gt; conversation with is not as useful in practical REST as it might\n&gt; seem,\n&gt; &gt; unless perhaps you are a human being trying to debug a faulty\n&gt; &gt; interaction.\n&gt; But we ought to be able to work towards completely automatic discovery\n&gt; of services. OPTIONS does allow part of that.\n\nWe have completely automatic discovery of services today. The mechanism\nis called hypertext. You navigate from one resource to another issuing\nGET requests. The hyperlink should indicate what we can expect to do\nwith the resource. The context should determine it. We shouldn&#39;t need to\nnegotiate with the resource itself. It should accept data in any format\nwe happen to use, and we should accept responses in any format it\nchooses. These should be standard formats. The methods should be\nstandard. Requiring machines to negotiate is a poor second cousin to\nagreeing on a common approach to begin with. REST is not a purely\ntechnical discipline. It is also a social one. Solving social problems\nin the technical space leaves them unsovled.\n\n&gt; For example, you might have a url of a service and do an OPTIONS and\n&gt; see that it supports GET and POST so you GET it and it returns an HTML\n&gt; FORM. The FORM is tagged up to POST back to the same URL. \n\nWhereas in the web of today, you would have a url of the service and\nknow from the context that it supports a GET. The form you get back also\ncontains a url, this time in the context of the form. From this context\nyou know that you can POST to this url. OPTIONS is unnecessary, and\nincreases both latency and complexity.\n\n&gt; But what is supposed to go into the various fields? what will the\n&gt; effect of the POST be? Are the fact that the url supports a GET and a\n&gt; POST related?\n\nIf you don&#39;t have answers to these questions you are not yet ready to\nbuild your applicication. You first need to negotiate with the people\nwho own the resource on appropriate urls, methods, and content types.\nThe method specification has theorietically been done for you in\nREST[1]. Content type specficiation is an industry-wide or world-wide\nconcern, not an individual client to individual resource concern. The\nonly thing you should have to negotiate on an individual basis with the\nsupplier of the resource is its name. That name can either be configured\nin your application (eg, by being your home page), or be discovered by\nnavigating from configured starting points.\n\n&gt; This of course is a really hard problem and I don&#39;t think WSDL/SOAP\n&gt; does it either.\n\nThe problem is not only hard, it is unsolvable as a technical problem.\nIt is a standardisation problem, and thus a social one.\n\nBenjamin.\n\n\n\n"}}