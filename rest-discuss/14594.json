{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":157827282,"authorName":"johnzabroski","from":"&quot;johnzabroski&quot; &lt;johnzabroski@...&gt;","profile":"johnzabroski","replyTo":"SENDER","senderId":"WT8qdxmOmdL_bjh0aiq2B1TsAwJu30ahbw0OXVq6sOefxzeHPkuMwujIEmysGhPDkM1vdUwNZJAb78ZgcTXmGRcN1c1RtzCHEFHj4PpV","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: How can a framework/library encourage REST-ful development?","postDate":"1263838001","msgId":14594,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhqMjd2aCtjajRlQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDgxNThhZDc1MTAwMTE1MTMzM2lkOTE5NDZjcmE0MzNhMTUxNGExMjY1YjVAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14593,"nextInTopic":14595,"prevInTime":14593,"nextInTime":14595,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"... I think you are conflating too many things here. First, you are conflating low-level plumbing with higher-level concepts. Second, since REST is about","rawEmail":"Return-Path: &lt;johnzabroski@...&gt;\r\nX-Sender: johnzabroski@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 27059 invoked from network); 18 Jan 2010 18:06:48 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 18 Jan 2010 18:06:48 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta1.grp.sp2.yahoo.com with SMTP; 18 Jan 2010 18:06:48 -0000\r\nX-Received: from [69.147.65.173] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 18 Jan 2010 18:06:41 -0000\r\nX-Received: from [98.137.34.35] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 18 Jan 2010 18:06:41 -0000\r\nDate: Mon, 18 Jan 2010 18:06:41 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hj27vh+cj4e@...&gt;\r\nIn-Reply-To: &lt;8158ad751001151333id91946cra433a1514a1265b5@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;johnzabroski&quot; &lt;johnzabroski@...&gt;\r\nSubject: Re: How can a framework/library encourage REST-ful development?\r\nX-Yahoo-Group-Post: member; u=157827282; y=8-PLGFXWISsgp7hcDyx97CUu9pQLxF5R3fEkUxGEJapZk5K_u7r6\r\nX-Yahoo-Profile: johnzabroski\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Peter Keane &lt;pkeane@...&gt; wrote:\n&gt;\n&gt; =\r\nYou might check out this post from Erik Wilde:\n&gt; \n&gt; http://dret.typepad.com=\r\n/dretblog/2009/05/rest-programming-toolbox-requirements.html\n&gt; \n&gt; For me, t=\r\nhe bare minimum includes:\n&gt; \n&gt; - support for GET,PUT,POST, DELETE http meth=\r\nods (at least ... HEAD, OPTIONS\n&gt; nice, too).\n&gt; - for GET requests, I want =\r\nto know what media type is preferred (combination\n&gt; of looking at Accept he=\r\nader and/or file extension, etc.)\n&gt; - for PUT/POST I want to be able to qui=\r\nckly and easily now the incoming\n&gt; Content-type\n&gt; - an easy way to parse th=\r\ne requested URL (w/ regex or named sections, etc.)\n&gt; - the ability to dispa=\r\ntch to a handler function by any combination of the\n&gt; above\n&gt; - tools for c=\r\nreating representations in the most common media types: HTML (a\n&gt; template =\r\nlanguage), JSON, Atom, RDF, etc. and serving the proper one based\n&gt; on requ=\r\nested type.\n&gt; \n&gt; In PHP, I don&#39;t think there is an obvious option (we&#39;ve bu=\r\nilt our own\n&gt; RESTful classes for Zend Framework: http://github.com/pkeane/=\r\ncola-zend),\n&gt; what I know of RoR seems to meet criteria, Django seems prett=\r\ny nicely\n&gt; RESTful, as does the Google App Engine &quot;WebApp.&quot;\n&gt; \n&gt; --peter\n&gt; =\r\n\n\n\nI think you are conflating too many things here.\n\nFirst, you are conflat=\r\ning low-level plumbing with higher-level concepts.\n\nSecond, since REST is a=\r\nbout information resources, any API that doesn&#39;t have a strategy for automa=\r\ntically destroying resources after invalid operations, is useless, stupid, =\r\nand ugly.  This is higher-level than garbage collected memory management.\n\n=\r\nStuff like URI parsing seems silly to me to consider as on the same level a=\r\ns those other concerns.  The author is monolithically treating the problem;=\r\n he is not designing a media type. Instead, he is exposing the entire state=\r\nspace of a session to the programmer.  How do you impose semantics on that?=\r\n??\n\nAgain, Real-time Object-Oriented programming is helpful here, despite w=\r\nhat some on this list have countered to saying (by attacking me unfairly by=\r\n saying I was attempting to re-create &quot;distributed objects&quot;, rather than us=\r\ning real math to back up their arguments, or rather than simply using anyth=\r\ning more than attacking with buzzwords to justify their position).  Modelin=\r\ng communication in a distributed system using composable Input/Output Autom=\r\nata sequences is a proven technique.  State machines can thus radically sim=\r\nplify the design of any system.  Realizing that in a truly object-oriented =\r\nsystem, built from abstract data objects (ADOs), you cannot have any notion=\r\n of history, allows you to more modularly solve problems.\n\nIn short, yes, y=\r\nou can use the stuff listed above, but don&#39;t think it is as simple as AND-j=\r\noin&#39;ing all those properties together and you get REST.  That&#39;s just dumb a=\r\nnd silly.\n\n\n"}}