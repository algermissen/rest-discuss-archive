{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"mOx9Tu-kSUWFpMjUmWemELl6h7lXlQVXTfULTiNaDb815jAQrPPmU3ZukCTV5Kbdm2XdxlixJrn2mfXZEJcSCM4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP/Linda, and versioning/locking rant","postDate":"1026238961","msgId":1773,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMkIyOUYxLjcwOTAxMDlAYnJpdm8ubmV0Pg==","referencesHeader":"PEI5NEY1RTIxLjNDNDUlamJvbmVAZGVlcGZpbGUuY29tPiA8T0U2OTAwZjJlRkVSQzBZanpwNDAwMDA3NWYxQGhvdG1haWwuY29tPg=="},"prevInTopic":1772,"nextInTopic":1774,"prevInTime":1772,"nextInTime":1774,"topicId":1733,"numMessagesInTopic":74,"msgSnippet":"... We ve wrestled with this problem for a long time.  The tuplespace (in this case, javaspaces) is very core to our system.  As our application evolves over","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 9 Jul 2002 18:21:49 -0000\r\nReceived: (qmail 54518 invoked from network); 9 Jul 2002 18:21:49 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 9 Jul 2002 18:21:49 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.238)\n  by mta1.grp.scd.yahoo.com with SMTP; 9 Jul 2002 18:21:51 -0000\r\nReceived: (qmail 12062 invoked from network); 9 Jul 2002 18:21:50 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.110]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 9 Jul 2002 18:21:50 -0000\r\nMessage-ID: &lt;3D2B29F1.7090109@...&gt;\r\nDate: Tue, 09 Jul 2002 14:22:41 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] HTTP/Linda, and versioning/locking rant\r\nReferences: &lt;B94F5E21.3C45%jbone@...&gt; &lt;OE6900f2eFERC0Yjzp4000075f1@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\n&gt;&gt;Could we all get over this whole idea of locking as necessary or desirable\n&gt;&gt;for versioning, avoiding conflict in object evolution, etc.?  It&#39;s a\n&gt;&gt;side-effect of a bad storage metaphor, namely that stored entities are\n&gt;&gt;mutable.  Stored entities need not be mutable:  imagine a filesystem in\n&gt;&gt;which stored files are immutable, identified by OIDs (maybe hashes), and\n&gt; \n&gt; \n&gt; Somebody I respect a lot once said &quot;Dynamism is an illusion&quot;. This was in\n&gt; reference to versioning in Groves. Kind of similar I suppose...\n\nWe&#39;ve wrestled with this problem for a long time.  The tuplespace (in \nthis case, javaspaces) is very core to our system.  As our application \nevolves over time, we&#39;ve found that our data evolves over time.  We&#39;ve \nhad to keep good track of our Java classes so that we don&#39;t create \nincompatible serialization issues.  Granted, this is very Java specific.\n\nWhat I&#39;d love for our application to do is use XML + RDF as our \ninformation serialization.  We can then become a lot more flexible with \ninterpreting and parsing the documents (especially when using RDF).\n\nBut data definitions are mutable in the real world, and in some cases \n(java serialization) can cause big headaches.\n\nSeth\n\n\n"}}