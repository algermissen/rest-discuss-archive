{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"fhqv9PORaFUhME3PMd990kf81cLTv_h3p8YghLFdbLvEMFLumxA9Dz9oz601uC8CE7mQDPDYW9WqfI_vI1lY2LfNsokj2LvCcNhj21sdZw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Google proposes RPC style APIs over REST","postDate":"1283753652","msgId":16450,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTA2MDAxNDEyLjBkYTYzMmFkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGkydWhjNCthZHJjQGVHcm91cHMuY29tPg==","referencesHeader":"PGkydGhyditzZjd0QGVHcm91cHMuY29tPgk8aTJ1aGM0K2FkcmNAZUdyb3Vwcy5jb20+"},"prevInTopic":16230,"nextInTopic":0,"prevInTime":16449,"nextInTime":16451,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... This is one of REST s finer points.  Although there is no late binding of representation to resource constraint it doesn t hurt to think of it like there","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 10626 invoked from network); 6 Sep 2010 06:14:07 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 6 Sep 2010 06:14:07 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 6 Sep 2010 06:14:06 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 41947509B3;\n\tMon,  6 Sep 2010 02:14:06 -0400 (EDT)\r\nDate: Mon, 6 Sep 2010 00:14:12 -0600\r\nTo: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100906001412.0da632ad.eric@...&gt;\r\nIn-Reply-To: &lt;i2uhc4+adrc@...&gt;\r\nReferences: &lt;i2thrv+sf7t@...&gt;\n\t&lt;i2uhc4+adrc@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;William Martinez Pomares&quot; wrote:\n&gt; \n&gt; XML and JSOn? Requesting a representation in the URL?\n&gt; \n\nThis is one of REST&#39;s finer points.  Although there is no &quot;late binding\nof representation to resource constraint&quot; it doesn&#39;t hurt to think of\nit like there is.  What&#39;s actually being violated is the identification\nof resources constraint.  &quot;Cool URIs Don&#39;t Change&quot; isn&#39;t a normative\nREST reference, because URIs are opaque, but that&#39;s no reason not to\nfollow it...\n\nEvery resource of interest must be assigned a URI.  Where multiple\nvariant representations of the same resource exist, they need their own\nunique URIs, given their nature as discrete resources.  I&#39;ve harped on\nenough about assigning URIs to variants; what we have here is the\nopposite, and just as critical, problem -- failing to assign the\nnegotiated URI.\n\nMy online demo, initial conneg-free variant, has that very REST\nmismatch itself.  Instead of resources whose representations vary by\nmedia type, what I have in effect is a different &quot;channel&quot; for each\nmedia type.  Compare and contrast these two variants:\n\nhttp://charger.bisonsystems.net/xmltest/index.xht\nhttp://charger.bisonsystems.net/xmltest/index.axm\n\nNotice the filename extensions (my upcoming parameter example, and\nGoogle&#39;s use of the query string to select format, are bike-shed colors)\nhave to be reflected in the links embedded in each representation -- why\nI say &quot;channels&quot;.  This aliasing impacts scalability -- each &quot;channel&quot;\nhas links which are coupled to the media type of the response... which\nis totally un-cool.\n\nThus, sharing a link commits the recipient to understanding a specific\nmedia type.  Ideally, sharing a link allows the user agent to negotiate\nfor whichever available media type it understands best.  IOW, if I share\na link that&#39;s coupled to application/xhtml+xml, it&#39;s useless to IE\nusers, whereas sharing a link to a negotiated resource allows IE to\nreceive application/xml:\n\nhttp://charger.bisonsystems.net/conneg/\n\nNo &quot;channels&quot; there!  Each variant uses the _same_ links, allowing links\nto be shared independent of user-agent concerns.  See the decoupling?\nWilliam&#39;s concern is spot-on, and Google ought to know better.  If I\nwant to link to a representation of a specific media type, I use the\nURI I assigned to the variant:\n\nhttp://charger.bisonsystems.net/conneg/;type=xhtm\nhttp://charger.bisonsystems.net/conneg/;type=xml\nhttp://charger.bisonsystems.net/conneg/;type=txml\nhttp://charger.bisonsystems.net/conneg/;type=html\n(Yeah, I need to fix my XSLT so the &quot;type menu&quot;, etc. works...)\n\nBut, doing so is an edge case.  The general case is to link to the\nnegotiated resource, which allows the server to determine the best\nmatch for the requesting client.  *That&#39;s* what the identification of\nresources constraint is all about -- not simply &quot;use URIs,&quot; which seems\nto be a common misunderstanding of the constraint.\n\nIf a system provides multiple variant representations of a resource, it\nis NOT REST if it fails to provide _both_ negotiated URIs _and_ variant\nURIs.  Meeting the identification of resources constraint is what\nallows for &quot;service discovery&quot; -- try this in a shell:\n\n# curl -I -H &#39;Accept: application/atom+xml&#39; http://charger.bisonsystems.net/conneg/\n\nWithout the negotiated resource, there would be no way to service Atom-\nonly requests -- unless the variant URI is known in advance, the\nresponse must be 406 (perhaps with an Alternates: header).\n\nWith both negotiated and variant URIs, the 301-redirect is possible --\nvoila, service discovery, courtesy of late binding of representation to\nresource.\n\nWhat&#39;s important, is that there exist negotiated URIs for general-\npurpose linking; variant URIs as identifiers only, or for special-\npurpose linking; and the ability to vary selection headers for the\npurpose of service discovery at negotiated URIs.\n\nWhat&#39;s the theme in that last paragraph?  Identification of resources,\nespecially negotiated resources, which are one of the power features of\nREST we can tell Google&#39;s missing out on just by looking at their URI\nallocation scheme.  I again point to the BBC website as an example of\nextensive conneg running at Web scale (if not Google scale).\n\n-Eric\n\n"}}