{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":362018624,"authorName":"Jan Vincent","from":"Jan Vincent &lt;jvliwanag@...&gt;","profile":"jv.liwanag","replyTo":"SENDER","senderId":"V92-2M3kiFCun04lUlfwQpppcrX4a7CJdIeomU0Is7Kqo8liufd5Cd-PdZaM945D_lmqU1FT3kJiG-lP2GzqOzpCN7cRipmu","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Generic REST client","postDate":"1255140252","msgId":13780,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNGNTE5MzBDLTREQjQtNDE4MC05NTQ1LTI4MEZCRjg0ODE0N0BnbWFpbC5jb20+","inReplyToHeader":"PGI1NDhkZjY1MDkxMDA5MTgyMnYzYjNkNTM3NHUzNmZkYjE0ZWZmYjc2OTU4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDk2RDQwQkQyLUJFNjQtNDcwQi04NTFDLUU4MDgwMDc1MjNBMEBnbWFpbC5jb20+IDw4N2lxZW95dng0LmZzZkBwaG9lbml4LmFzeW5jaHJvbm91cy5vcmc+IDxiNTQ4ZGY2NTA5MTAwOTE4MjJ2M2IzZDUzNzR1MzZmZGIxNGVmZmI3Njk1OEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":13779,"nextInTopic":13781,"prevInTime":13779,"nextInTime":13781,"topicId":13776,"numMessagesInTopic":48,"msgSnippet":"If humans can do it, why can t we build computers that do too? What are the cues human users of the web follow to understand the html page rendered to them? I","rawEmail":"Return-Path: &lt;jvliwanag@...&gt;\r\nX-Sender: jvliwanag@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 67771 invoked from network); 10 Oct 2009 02:04:40 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.re1.yahoo.com with QMQP; 10 Oct 2009 02:04:40 -0000\r\nX-Received: from unknown (HELO mail-pz0-f189.google.com) (209.85.222.189)\n  by mta2.grp.sp2.yahoo.com with SMTP; 10 Oct 2009 02:04:39 -0000\r\nX-Received: by pzk27 with SMTP id 27so1244004pzk.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 09 Oct 2009 19:04:39 -0700 (PDT)\r\nX-Received: by 10.115.38.30 with SMTP id q30mr4409812waj.184.1255140279428;\n        Fri, 09 Oct 2009 19:04:39 -0700 (PDT)\r\nReturn-Path: &lt;jvliwanag@...&gt;\r\nX-Received: from ?192.168.20.2? ([222.127.12.76])\n        by mx.google.com with ESMTPS id 22sm988606pxi.14.2009.10.09.19.04.31\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Fri, 09 Oct 2009 19:04:39 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v1076)\r\nContent-Type: text/plain; charset=windows-1252; format=flowed; delsp=yes\r\nIn-Reply-To: &lt;b548df650910091822v3b3d5374u36fdb14effb76958@...&gt;\r\nDate: Sat, 10 Oct 2009 10:04:12 +0800\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;3F51930C-4DB4-4180-9545-280FBF848147@...&gt;\r\nReferences: &lt;96D40BD2-BE64-470B-851C-E808007523A0@...&gt; &lt;87iqeoyvx4.fsf@...&gt; &lt;b548df650910091822v3b3d5374u36fdb14effb76958@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nX-Mailer: Apple Mail (2.1076)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Vincent &lt;jvliwanag@...&gt;\r\nSubject: Re: [rest-discuss] Generic REST client\r\nX-Yahoo-Group-Post: member; u=362018624; y=vii5_ZxuYYgVaJIhN-qsAIZzpf24uupeojI9FK3DeZjpr-B16fI\r\nX-Yahoo-Profile: jv.liwanag\r\n\r\nIf humans can do it, why can&#39;t we build computers that do too? What  \nare t=\r\nhe cues human users of the web follow to understand the html page  \nrendere=\r\nd to them? I was wondering if such might be applied to work  \nsimilarly to =\r\ncomputers. I&#39;ve been reading some works on the semantic  \nweb (RDFs and suc=\r\nh) and the topics it touches that overlaps with the  \nREST discussion. I wa=\r\ns wondering though if this would help in building  \nthe generic REST client=\r\n.\n\nMy concern however is if we use RDFs couple this with ontologies,  \nther=\r\ne might be too much complexity already. On the other hand, is  \nthere a &#39;sm=\r\nart&#39; way for a generic REST client to figure out the  \nmeanings of the hype=\r\nrmedia without explicit specifications? People  \nseem to do just fine when =\r\nvisiting a site and typing in, say, their  \n&#39;Birthday&#39;, knowing what that m=\r\neans without really needing having to  \nread the specs of the site and conf=\r\norming strictly to it.\n\nJan Vincent Liwanag\njvliwanag@...\n\nOn Oct 10,=\r\n 2009, at 9:22 AM, mike amundsen wrote:\n\n&gt; In my experience, the two bigges=\r\nt hurdles to a generic HTTP client are\n&gt; - media types\n&gt; - link relations\n&gt;=\r\n\n&gt; Media-types includes not just data format issues (are you using a\n&gt; well=\r\n-known format or a custom XML format?) but also the semantics\n&gt; related to =\r\nthe format (which elements are inputs, which are elements\n&gt; to query for da=\r\nta, what actions are supported, what data format is\n&gt; used to send data, et=\r\nc.). Link relations includes which relations are\n&gt; supported for links, und=\r\nerstanding custom rel values, etc.\n&gt;\n&gt; The only data format that works even=\r\n mildly well in this space is\n&gt; HTML; and there is a reliable (but rather l=\r\nimited) client for it,\n&gt; too&lt;g&gt;.\n&gt;\n&gt; OPTIONS seems quite inadequate for thi=\r\ns information, so run-time\n&gt; discovery is pretty weak. That means reliance =\r\non out-of-band\n&gt; information and &quot;design-time&quot; discovery.\n&gt;\n&gt; That leads to=\r\n, IMO, some interesting questions:\n&gt; - what would it take build a &quot;better b=\r\nrowser&quot;; one that supports PUT\n&gt; and DELETE, understands a wider range of l=\r\nink relations?\n&gt; - what would it take to establish rendering engines for AT=\r\nOM and other\n&gt; well-known, validate-able media types?\n&gt; - what would it tak=\r\ne to establish reliable rendering engines for\n&gt; constrained media-types (XM=\r\nL, JSON)?\n&gt; - what would it take to establish a standardized documentation =\r\nthat\n&gt; includes meda-type details such as sematics, schema, link relations,=\r\n\n&gt; etc?\n&gt; - what would it take to improve the OPTIONS method in order to be=\r\n able\n&gt; to include (or point to) these standardized documents?\n&gt;\n&gt; All fert=\r\nile ground for study, IMO.\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On=\r\n Fri, Oct 9, 2009 at 19:44, Josh Sled &lt;jsled@...&gt;  \n&gt; wrote:\n&gt;=\r\n&gt; Jan Vincent &lt;jvliwanag@...&gt; writes:\n&gt;&gt;&gt; I know one may simply use s=\r\nome HTTP client and work\n&gt;&gt;&gt; from there. However, I tend to see this practi=\r\nce as being quite\n&gt;&gt;&gt; tedious.\n&gt;&gt;\n&gt;&gt; I&#39;ve not seen a good higher-level HTTP=\r\n framework that would:\n&gt;&gt;\n&gt;&gt; - interpret an out-of-band description of a RE=\r\nSTful web service to\n&gt;&gt;  produce high-level forms/state-machine stubs that =\r\ncan be coded to in\n&gt;&gt;  the implementation language.\n&gt;&gt;\n&gt;&gt;  - integrating th=\r\nat with run-time in-band conditional-GET of previous\n&gt;&gt;    responses, respo=\r\nnse codes, &c.\n&gt;&gt;\n&gt;&gt; - supports the more interesting HTTP response codes li=\r\nke\n&gt;&gt;\n&gt;&gt;  - 202 + maybe polling some &lt;handwave&gt;url in the repsonse to check=\r\n\n&gt;&gt;    final creation state&lt;/&gt;\n&gt;&gt;\n&gt;&gt;  - 204, 205, 206\n&gt;&gt;\n&gt;&gt;  - 3xx redirect=\r\nion codes with stateful recoding of temp/perm\n&gt;&gt;    redirects.\n&gt;&gt;\n&gt;&gt;  - 503=\r\n + retry-after info.\n&gt;&gt;\n&gt;&gt; - Supports cache control, in combination with th=\r\ne above.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; I&#39;d imagine such a framework to:\n&gt;&gt;\n&gt;&gt; a/ again, use some=\r\n description language that identifies the  \n&gt;&gt; *potential*\n&gt;&gt; resource-/med=\r\nia-types, state-space, and forms a-priori without  \n&gt;&gt; having to\n&gt;&gt; activel=\r\ny traverse every class of link on the site, but=85\n&gt;&gt;\n&gt;&gt; b/ would require t=\r\nhe active traversal of links to function, ensuring\n&gt;&gt; that the runtime bind=\r\ning of the resources is the same as the build- \n&gt;&gt; time\n&gt;&gt; binding (withing=\r\n epsilon of versioning);\n&gt;&gt;\n&gt;&gt; c/ as such, would always start at a safe ent=\r\nry point (e.g., &#39;/&#39;)  \n&gt;&gt; for a\n&gt;&gt; resource-space, with conditional request=\r\ns to validate any previous\n&gt;&gt; (cached) assumptions about the site are still=\r\n valid.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; I&#39;ve built a couple of ad-hoc things that use something li=\r\nke Apache\n&gt;&gt; HTTPClient, but they&#39;re usually just my application code using=\r\n\n&gt;&gt; HTTPClient to do some specific thing, not a generic solution one  \n&gt;&gt; l=\r\nevel\n&gt;&gt; removed from that.\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; ...jsled\n&gt;&gt; http://asynchronous.org/=\r\n - a=3Djsled; b=3Dasynchronous.org; echo ${a}@$ \n&gt;&gt; {b}\n&gt;&gt;\n\n\n\n\n\n"}}