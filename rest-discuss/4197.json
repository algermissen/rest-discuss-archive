{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159556043,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jalgermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"zCc1afGBVRyrs3LzsU6LeYq9xRjOZeFVQ5uftCc16AW6HuYFY2cv8DmSoR9kYjU0HtvKn0pOo4z9rrq9TV_-64bpzPIHz_8ZxSlfY2mCXkcSfwN_rRU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: REST Transaction Process","postDate":"1076883146","msgId":4197,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwMkZFRUNBLjQ2NDMxODlDQHRvcGljbWFwcGluZy5jb20+","referencesHeader":"PDQwMkY5MjI4LjIwNTA3QHNlYWlydGguY29tPg=="},"prevInTopic":4196,"nextInTopic":4198,"prevInTime":4196,"nextInTime":4198,"topicId":4141,"numMessagesInTopic":67,"msgSnippet":"... That s a nice way to approach the problem. This comes to my mind: If access to http://example.com/item is transaction based, all clients would be in","rawEmail":"Return-Path: &lt;jalgermissen@...&gt;\r\nX-Sender: jalgermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 18437 invoked from network); 15 Feb 2004 22:11:44 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m10.grp.scd.yahoo.com with QMQP; 15 Feb 2004 22:11:44 -0000\r\nReceived: from unknown (HELO moutng.kundenserver.de) (212.227.126.176)\n  by mta6.grp.scd.yahoo.com with SMTP; 15 Feb 2004 22:11:44 -0000\r\nReceived: from [212.227.126.209] (helo=mrelayng.kundenserver.de)\n\tby moutng.kundenserver.de with esmtp (Exim 3.35 #1)\n\tid 1AsUUC-0004KS-00; Sun, 15 Feb 2004 23:11:36 +0100\r\nReceived: from [217.87.94.177] (helo=topicmapping.com)\n\tby mrelayng.kundenserver.de with asmtp (Exim 3.35 #1)\n\tid 1AsUUB-0001fZ-00; Sun, 15 Feb 2004 23:11:35 +0100\r\nSender: jan\r\nMessage-ID: &lt;402FEECA.4643189C@...&gt;\r\nDate: Sun, 15 Feb 2004 23:12:26 +0100\r\nX-Mailer: Mozilla 4.76 [en] (X11; U; Linux 2.4.2-2 i586)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Seairth Jacobs &lt;seairth@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;402F9228.20507@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: kundenserver.de abuse@... auth:9fd5cd4d1b290f5c8d8bf21248da35c6\r\nX-eGroups-Remote-IP: 212.227.126.176\r\nFrom: Jan Algermissen &lt;jalgermissen@...&gt;\r\nReply-To: algermissen@...\r\nSubject: Re: [rest-discuss] Re: REST Transaction Process\r\nX-Yahoo-Group-Post: member; u=159556043\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nSeairth Jacobs wrote:\n\n\n&gt; [...] Suppose the following scenario:\n&gt; \n&gt; &quot;http://example.com/item&quot; points to a resource we want to update using a\n&gt; transaction (there are other resources involved, but those are not\n&gt; relevant to this example).  Now, if we were to do a GET on that URI (no\n&gt; transaction involved), we would get back a response.  For clarity, let&#39;s\n&gt; give the response an Etag of &quot;1&quot;.  Next, we start a transaction\n&gt; (complete with resource and reference URI).  We then perform a T-GET\n&gt; (I&#39;ll use &quot;T-&quot; to indicate request that happen within the context of the\n&gt; transaction) on the same resource.  We get back a response with an Etag\n&gt; of &quot;1&quot;.  Now, we T-PUT an entity to the same resource (within the\n&gt; transaction).  We then T-GET the resource again, only this time, the\n&gt; Etag is &quot;2&quot;.  If you do a GET of that same resource, you get back an\n&gt; Etag of &quot;1&quot; (since the transaction has not been committed).  What this\n&gt; says to me is that the resource is existing in two different states at\n&gt; the same time, all depending on which way you are looking at it.  \n\nThat&#39;s a nice way to approach the problem. This comes to my mind:\n\nIf access to &quot;http://example.com/item&quot; is transaction based, all\nclients would be in their own transaction and if several transactions where\nopen at the same time, there would be no answer to any GET before the\ntransaction manager would have decided how to serialize the transactions.\n\nSo in your example the second GET would not receive a response until the\ntransaction  involving PUT would ahve been either commited or aborted.\n\n\n\nIf you open a transaction every GET would have to return the same state\n(representations might vary based on conneg) as long as the transaction is\nopen and *you* don&#39;t alter the state.\n\nDoes that make sense?\n\nJan\n\n\n\n\n\n\nMaybe\n&gt; I am just not grasping the finer details, but this doesn&#39;t seem like a\n&gt; valid REST approach.  And to complicate it more, suppose that I had\n&gt; performed a T-DELETE instead.  Now, the URI returns an Etag of &quot;1&quot; and\n&gt; the T-URI is no longer mapped.  Again, this does not feel RESTful at all.\n&gt; \n&gt; Now, suppose we go back to the approach I suggested, where you\n&gt; effectively create an entire new address space for the same resource.\n&gt; In this case, the above &quot;split personality&quot; issue would not arise.  If\n&gt; you T-PUT an entity to the URI in the new address space, a GET (which is\n&gt; effectively a T-GET) would always return the same thing.\n&gt; \n&gt; The address space doesn&#39;t even have to have the transaction resource&#39;s\n&gt; URI as the root (though it still could).  Instead, the transaction\n&gt; resource could indicate the constraints of the new address space, more\n&gt; specifically that it could provide the mapping rules between the two\n&gt; address spaces.  The transaction resource might look something like:\n&gt; \n&gt; &lt;transaction type=&quot;optimistic&quot; status=&quot;active&quot;\n&gt; uri=&quot;http://example.com/t/123&quot;&gt;\n&gt;     &lt;map uri=&quot;http://example.com/item&quot;\n&gt; to-uri=&quot;http://t.example.com/123/example.com/item&quot;/&gt;\n&gt;     &lt;map uri=&quot;http://sample.com/*&quot;\n&gt; to-uri=&quot;http://t.example.com/123/sample.com/*&quot;/&gt;\n&gt; &lt;/transaction&gt;\n&gt; \n&gt; Would this still be considered address munging?  Also, as I suggested\n&gt; earlier, it would still be a good thing to have the responses contain an\n&gt; HTTP header pointing to the related transaction resource, which would\n&gt; also mean that there&#39;d be no need to un-munge (de-munge?) to get to that\n&gt; URI.\n&gt; \n&gt; Further,  Roy suggests that using a second (and temporary) address space\n&gt; partitions users.  In this case, I don&#39;t see this as being a bad thing.\n&gt; Yes, I realize that the lack of permanence means that the addresses are\n&gt; less useful over a long period of time.  But so what!  If one really\n&gt; wanted to, you could leave the new address space around &quot;forever&quot;.  Once\n&gt; the transaction was completed, respond to every request with a 301\n&gt; (moved permanently) response.\n&gt; \n&gt; Seairth\n&gt; http://www.seairth.com\n&gt; \n&gt; \n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt; \n\n-- \nJan Algermissen                           http://www.topicmapping.com\nConsultant & Programmer\t                  http://www.gooseworks.org\n\n"}}