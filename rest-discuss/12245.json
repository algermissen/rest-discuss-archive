{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"Assaf Arkin &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"587-sQEbC4zSTDLKcFksyel88s28943UhVa7I-7o9GQmNbqgm7Kbj7zwpSbK4eBUksXPodaGaVo84Tf2kYSWPQjoWSHnNhw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237419518","msgId":12245,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDkwMzE4MTYzOG41NWFhYzdlMG4zN2QyMmRjM2JjMTRiMTcwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzE4MTYzNjAxLjQwNDdkMDZiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgkgPDUwMzdiNmU0MDkwMzE4MDk1N2c3MGMyNmQ1OHE2ZmNkODllY2JkMjMwYzk3QG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE4MTUxOTM2LjQ5MzM5ZmU0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JIDw1MDM3YjZlNDA5MDMxODE0MjVwNjZjYTU3OGV1ZjY1YjM0MDI3Y2RjYjhhZUBtYWlsLmdtYWlsLmNvbT4JIDwyMDA5MDMxODE2MzYwMS40MDQ3ZDA2Yi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":12244,"nextInTopic":12247,"prevInTime":12244,"nextInTime":12246,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... What would be the litmus test? ... The example this thread started from creates a unique resource using PUT only to immediately discard it using DELETE,","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 58042 invoked from network); 18 Mar 2009 23:38:39 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m2.grp.re1.yahoo.com with QMQP; 18 Mar 2009 23:38:39 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.233)\n  by mta1.grp.re1.yahoo.com with SMTP; 18 Mar 2009 23:38:39 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id g9so249098rvb.9\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 Mar 2009 16:38:39 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.141.66.16 with SMTP id t16mr436553rvk.103.1237419518686; Wed, \n\t18 Mar 2009 16:38:38 -0700 (PDT)\r\nIn-Reply-To: &lt;20090318163601.4047d06b.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t &lt;5037b6e40903180957g70c26d58q6fcd89ecbd230c97@...&gt;\n\t &lt;20090318151936.49339fe4.eric@...&gt;\n\t &lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt;\n\t &lt;20090318163601.4047d06b.eric@...&gt;\r\nDate: Wed, 18 Mar 2009 16:38:38 -0700\r\nMessage-ID: &lt;5037b6e40903181638n55aac7e0n37d22dc3bc14b170@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Dong Liu &lt;edongliu@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd156a4d9755704656d2e64\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Assaf Arkin &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=319607554; y=Z4mURe3AFxvcgi_77jkkE-ex4FgbGl2_i-gtFiqcPOj_6-lzdA\r\nX-Yahoo-Profile: assafarkin\r\n\r\n\r\n--000e0cd156a4d9755704656d2e64\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Wed, Mar 18, 2009 at 3:36 PM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; Assaf Arkin wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; &gt; Assaf Arkin wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; From an engineering standpoint I would recommend and use POST\n&gt; &gt; &gt; &gt; because it&#39;s more explicit and clear.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Agreed.  Like I said in another thread, just write an HTML form and\n&gt; &gt; &gt; a POST handler to do &quot;batch&quot; deletions.  So long as it&#39;s understood\n&gt; &gt; &gt; that this has nothing to do with a uniform interface.  In REST, the\n&gt; &gt; &gt; semantics assigned to DELETE are not also duplicated in POST --\n&gt; &gt; &gt; deletion of resources has one and only one method.  POST is usually\n&gt; &gt; &gt; being used to accept data, making it sometimes mean delete makes the\n&gt; &gt; &gt; semantics of POST clear as mud.\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; That&#39;s not what I understood. What I understood is: if you ask the\n&gt; &gt; server to do some operation, and it tells you which URL to POST to\n&gt; &gt; (say via form), and use POST as HTTP intended it to be used, then\n&gt; &gt; you&#39;re following the uniform interface.\n&gt; &gt;\n&gt;\n&gt; There&#39;s nothing wrong with the pragmatism or ease-of-use of an HTML\n&gt; form using POST to batch-delete.  It even adheres to the HEAS\n&gt; constraint of REST, but that&#39;s about as far as that goes.  I&#39;d say,\n&gt; &quot;you&#39;re following HEAS&quot; not &quot;you&#39;re following the uniform interface&quot;\n&gt; because HEAS is only one of the constraints which make up the uniform\n&gt; interface.\n&gt;\n&gt; &gt;\n&gt; &gt; The server may tell you to use DELETE instead, which has different,\n&gt; &gt; and possibly better semantics, and following those would also be part\n&gt; &gt; of the uniform interface. But it&#39;s up to the server to decide which\n&gt; &gt; method it prefers -- as long as the semantics are obeyed -- it&#39;s\n&gt; &gt; applying a uniform interface.\n&gt; &gt;\n&gt;\n&gt; If an API doesn&#39;t implement DELETE, and also doesn&#39;t use POST for\n&gt; anything but deletion (single or batch), and the options are presented\n&gt; in an HTML form then yes, it&#39;s a uniform interface.  However, once\n&gt; DELETE is also implemented, or if POST is used for anything else like\n&gt; accepting content uploads, the interface is no longer uniform, unless\n&gt; and until the previous usage of POST to delete is deprecated.\n\n\nWhat would be the litmus test?\n\n\n&gt;\n&gt;\n&gt; The fact remains, that only the use of the DELETE method on a URI-by-\n&gt; URI basis is visible to intermediaries.  This is the only way to\n&gt; prevent the user who requested the deletion from reloading the deleted\n&gt; content from cache.  Except, of course, to not cache anything --\n&gt; thereby defeating the entire premise of using REST to begin with...\n\n\nThe example this thread started from creates a unique resource using PUT\nonly to immediately discard it using DELETE, without ever retrieving that\nresource.\n\nI provided some justification for why it would be better to replace the\nPUT/DELETE pair with a POST, likely against a resource that will never be\nretrieved. I think that falls under the uniform interface.\n\nI&#39;m not interested in forcing caching down the throat of this use case: the\nonly interesting resources we operate on are never retrieved. So strawman\naside, why is this use of POST not uniform interface?\n\n\nSeparately, cache control has provisions for preventing clients from\nreloading deleted content, and often enough, the deleted content we want\nthem to forget is not deleted by them. So you can cache resources and be\nable to magically remove not by DELETE and be very uniform interface about\nit.\n\nAssaf\n\n\n&gt;\n&gt;\n&gt; -Eric\n&gt;\n\r\n--000e0cd156a4d9755704656d2e64\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Mar 18, 2009 at 3:36 PM, Eric J. Bowman =\r\n&lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...&quot;&gt;eric@bisonsy=\r\nstems.net&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n&lt;div c=\r\nlass=3D&quot;im&quot;&gt;Assaf Arkin wrote:&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &gt; Assaf Arkin wrot=\r\ne:&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt; &gt; From an engineering =\r\nstandpoint I would recommend and use POST&lt;br&gt;\n&gt; &gt; &gt; because it&#39=\r\n;s more explicit and clear.&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; =\r\nAgreed. =A0Like I said in another thread, just write an HTML form and&lt;br&gt;\n&=\r\ngt; &gt; a POST handler to do &quot;batch&quot; deletions. =A0So long as it=\r\n&#39;s understood&lt;br&gt;\n&gt; &gt; that this has nothing to do with a uniform =\r\ninterface. =A0In REST, the&lt;br&gt;\n&gt; &gt; semantics assigned to DELETE are n=\r\not also duplicated in POST --&lt;br&gt;\n&gt; &gt; deletion of resources has one a=\r\nnd only one method. =A0POST is usually&lt;br&gt;\n&gt; &gt; being used to accept d=\r\nata, making it sometimes mean delete makes the&lt;br&gt;\n&gt; &gt; semantics of P=\r\nOST clear as mud.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; That&#39;s not what I und=\r\nerstood. What I understood is: if you ask the&lt;br&gt;\n&gt; server to do some op=\r\neration, and it tells you which URL to POST to&lt;br&gt;\n&gt; (say via form), and=\r\n use POST as HTTP intended it to be used, then&lt;br&gt;\n&gt; you&#39;re followin=\r\ng the uniform interface.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;There&#39;s nothing wrong =\r\nwith the pragmatism or ease-of-use of an HTML&lt;br&gt;\nform using POST to batch-=\r\ndelete. =A0It even adheres to the HEAS&lt;br&gt;\nconstraint of REST, but that&#39=\r\n;s about as far as that goes. =A0I&#39;d say,&lt;br&gt;\n&quot;you&#39;re followin=\r\ng HEAS&quot; not &quot;you&#39;re following the uniform interface&quot;&lt;br&gt;=\r\n\nbecause HEAS is only one of the constraints which make up the uniform&lt;br&gt;\n=\r\n&lt;div class=3D&quot;im&quot;&gt;interface.&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The server may tell you=\r\n to use DELETE instead, which has different,&lt;br&gt;\n&gt; and possibly better s=\r\nemantics, and following those would also be part&lt;br&gt;\n&gt; of the uniform in=\r\nterface. But it&#39;s up to the server to decide which&lt;br&gt;\n&gt; method it p=\r\nrefers -- as long as the semantics are obeyed -- it&#39;s&lt;br&gt;\n&gt; applying=\r\n a uniform interface.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;If an API doesn&#39;t impleme=\r\nnt DELETE, and also doesn&#39;t use POST for&lt;br&gt;\nanything but deletion (sin=\r\ngle or batch), and the options are presented&lt;br&gt;\nin an HTML form then yes, =\r\nit&#39;s a uniform interface. =A0However, once&lt;br&gt;\nDELETE is also implement=\r\ned, or if POST is used for anything else like&lt;br&gt;\naccepting content uploads=\r\n, the interface is no longer uniform, unless&lt;br&gt;\nand until the previous usa=\r\nge of POST to delete is deprecated.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What wo=\r\nuld be the litmus test?&lt;/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;=\r\n\n&lt;br&gt;\n&lt;br&gt;\nThe fact remains, that only the use of the DELETE method on a UR=\r\nI-by-&lt;br&gt;\nURI basis is visible to intermediaries. =A0This is the only way t=\r\no&lt;br&gt;\nprevent the user who requested the deletion from reloading the delete=\r\nd&lt;br&gt;\ncontent from cache. =A0Except, of course, to not cache anything --&lt;br=\r\n&gt;\nthereby defeating the entire premise of using REST to begin with...&lt;/bloc=\r\nkquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The example this thread started from creates a u=\r\nnique resource using PUT only to immediately discard it using DELETE, witho=\r\nut ever retrieving that resource.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I provided some=\r\n justification for why it would be better to replace the PUT/DELETE pair wi=\r\nth a POST, likely against a resource that will never be retrieved. I think =\r\nthat falls under the uniform interface.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&#39;m n=\r\not interested in forcing caching down the throat of this use case: the only=\r\n interesting resources we operate on are never retrieved. So strawman aside=\r\n, why is this use of POST not uniform interface?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;=\r\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Separately, cache control has provisions for preventing clie=\r\nnts from reloading deleted content, and often enough, the deleted content w=\r\ne want them to forget is not deleted by them. So you can cache resources an=\r\nd be able to magically remove not by DELETE and be very uniform interface a=\r\nbout it.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assaf&lt;/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote cla=\r\nss=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;pa=\r\ndding-left:1ex;&quot;&gt;&lt;br&gt;\n&lt;font color=3D&quot;#888888&quot;&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/block=\r\nquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd156a4d9755704656d2e64--\r\n\n"}}