{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"TuZdiRjYG7gbPV2wvEct2swHvtbKb1_mwkjLnC2Jdl1QQdL-9tYGbSXorlPzJ6b0qIONFP1o1uPKrPbzPSwmTo4CQZzNE_H4WerU6_0EBZs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267127379","msgId":14916,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCQjgxQ0NFLTZCQzItNDE2QS05MTg1LTRCNUQ2RkU0QzhGREBtYWMuY29tPg==","inReplyToHeader":"PGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDAxQjg4QUYxLUM2RjQtNDg3Mi05ODAyLUM1ODY4QjU5MjM2MEBtYWMuY29tPiA8MmZhNTU0NDcxMDAyMjUwODI1dTNiNTI2ZWRjaDczM2E4ZTYzNTg0NDUwZWVAbWFpbC5nbWFpbC5jb20+IDw2RjcxQjlFNi01QUE0LTQyQjktOTI2QS0wNjgwRjg4RUU1NzBAbWFjLmNvbT4gPDAyRUZGQzZELTMwRTUtNDk0QS1CRkVDLTFBOTk2MTE3MzBDNkBnbWFpbC5jb20+IDw2N0ExMzE4NC01RkI1LTRDMUUtOEZGRS05MTExREZGMUU3OTJAbWFjLmNvbT4gPGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14914,"nextInTopic":14917,"prevInTime":14915,"nextInTime":14917,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"... That s a good approach. If you are using specific media types that means the annotated classes map to media types or individual doctypes of a media type","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 37771 invoked from network); 25 Feb 2010 20:50:00 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m12.grp.re1.yahoo.com with QMQP; 25 Feb 2010 20:50:00 -0000\r\nX-Received: from unknown (HELO asmtpout028.mac.com) (17.148.16.103)\n  by mta1.grp.sp2.yahoo.com with SMTP; 25 Feb 2010 20:50:00 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [192.168.2.102] ([84.144.77.174])\n by asmtp028.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KYE00DVMXQSKE10@...&gt; for\n rest-discuss@yahoogroups.com; Thu, 25 Feb 2010 11:49:46 -0800 (PST)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=5.0.0-0908210000 definitions=main-1002250176\r\nIn-reply-to: &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\r\nDate: Thu, 25 Feb 2010 20:49:39 +0100\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;4BB81CCE-6BC2-416A-9185-4B5D6FE4C8FD@...&gt;\r\nReferences: &lt;01B88AF1-C6F4-4872-9802-C5868B592360@...&gt;\n &lt;2fa554471002250825u3b526edch733a8e63584450ee@...&gt;\n &lt;6F71B9E6-5AA4-42B9-926A-0680F88EE570@...&gt;\n &lt;02EFFC6D-30E5-494A-BFEC-1A99611730C6@...&gt;\n &lt;67A13184-5FB5-4C1E-8FFE-9111DFF1E792@...&gt;\n &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\r\nTo: craigmcc@...\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=289191104; y=JO0MH-hfYAgZISzdgea-p0YpKEakvXwU83_5Ityi1Ff_ksvfybCe1kH3\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Feb 25, 2010, at 8:37 PM, Craig McClanahan wrote:\n\n&gt; On Thu, Feb 25, 2010 at 9:12 AM, Jan Algermissen\n&gt; &lt;algermissen1971@...&gt; wrote:\n&gt;&gt; \n&gt;&gt; On Feb 25, 2010, at 5:50 PM, Felipe Gaucho wrote:\n&gt;&gt; \n&gt;&gt;&gt; You can use jaxb and use xml and get a restful service...\n&gt;&gt;&gt; There is no mandatory link between these technologies and &quot;non-rest&quot; style...\n&gt;&gt; \n&gt;&gt; Right, sorry to imply that. OTH, there will often be no 1:1 mapping between domain object (that&#39;s how I understood POJO) so if you use JAXB on your POJO you&#39;ll rather have a serialized domain object than &#39;resource representation&#39;\n&gt;&gt; \n&gt; \n&gt; When using JAX-RS, I&#39;m finding myself more and more often building a\n&gt; set of JAXB annotated classes that directly represent my resources,\n\nThat&#39;s a good approach. If you are using specific media types that means the annotated classes map to media types or individual doctypes of a media type (Apache Abdera for example).\n\n\n&gt; separate from the classes that might represent my domain tier (with,\n&gt; perhaps, JPA or Hibernate annotations on them).  Besides the fact that\n&gt; this means I don&#39;t have to write all of the boring serialization code,\n&gt; it has some other benefits:\n\n\n\n&gt; \n&gt; - Both XML and JSON serialization, nearly for free.\n&gt; \n&gt; - Ability to include properties for however I&#39;m going to represent\n&gt;  links (which don&#39;t belong in the domain model at all).\n&gt; \n&gt; - Ability to include properties for related resources (either individual\n&gt;  child beans or collections of them), for which JAXB does a\n&gt;  slick job of including as nested sub-elements, versus\n&gt;  entity beans that are typically associated with only one table.\n&gt; \n&gt; - Ability to write business logic that is natural to Java\n&gt;  developers used to beans oriented development,\n&gt;  independent of the fact that this resource was received\n&gt;  (or will be sent) across some HTTP or other transport.\n&gt; \n&gt; - Ablity to write much better unit and functional tests that can\n&gt;  reason about the resource model (independent of how the\n&gt;  resources got received from a client or synthesized from my\n&gt;  database domain objects), with all the usual\n&gt;  benefits of a strongly typed language (versus using\n&gt;  XPath or poking through some JSON data structure\n&gt;  with string based keys and hoping I spelled the keys right).\n&gt; \n&gt; It&#39;s good stuff for Java developers.\n\nGood points, thanks.\n\nJan\n\n\n&gt; \n&gt; Craig\n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}