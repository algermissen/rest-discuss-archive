{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":310618341,"authorName":"Stephen Bannasch","from":"Stephen Bannasch &lt;stephen.bannasch@...&gt;","profile":"stepheneb2001","replyTo":"SENDER","senderId":"DEuIn1eGOx8ZEdZvzDzkFh_jWOLy26Q5Ssz2qrv9vrjL1AZQCwp1EU8J0zib0L_8okYNVfc8PsHLGQ_g8lTNhLdsn41Z8WEry4PVlpCfAstr5hCrEYU46A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: restful way to create an association between 2 resources","postDate":"1194253420","msgId":9739,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHAwNjI0MDgwMWMzNTQ3YzZjNDY1NEBbMTkyLjE2OC4xLjExNF0+","inReplyToHeader":"PDdjYzdjMWNlMDcxMTA0MTk1M3YxYzQ0NDYxYXY5ZDYyZDg0ZTkwZGQ1NTk2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PHAwNjI0MDgxZmMzNTMwYWE4MTU0NkAxOTIuMTY4LjEuMTE0PgkgPDdjYzdjMWNlMDcxMTA0MTEyNWg2ZTEwODUyOHFiODIxZjg4ZmZlYmMyYzc2QG1haWwuZ21haWwuY29tPgkgPHAwNjI0MDgwMmMzNTNkOWYxNjNlZEAxOTIuMTY4LjEuMTE0PiA8N2NjN2MxY2UwNzExMDQxOTUzdjFjNDQ0NjFhdjlkNjJkODRlOTBkZDU1OTZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":9737,"nextInTopic":9742,"prevInTime":9738,"nextInTime":9740,"topicId":9731,"numMessagesInTopic":14,"msgSnippet":"Thanks Karen and Etan for responding, I ve replied to both of your comments in this post: ... Well right now (the way I ve implemented it) that url will update","rawEmail":"Return-Path: &lt;stephen.bannasch@...&gt;\r\nX-Sender: stephen.bannasch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48416 invoked from network); 5 Nov 2007 09:04:05 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m54.grp.scd.yahoo.com with QMQP; 5 Nov 2007 09:04:05 -0000\r\nX-Received: from unknown (HELO deanbrook.org) (66.160.189.173)\n  by mta17.grp.scd.yahoo.com with SMTP; 5 Nov 2007 09:04:05 -0000\r\nX-Received: from 72.173.28.49 ([72.173.28.49]) by deanbrook.org for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 5 Nov 2007 01:03:57 -0800\r\nMime-Version: 1.0\r\nMessage-Id: &lt;p06240801c3547c6c4654@[192.168.1.114]&gt;\r\nIn-Reply-To: &lt;7cc7c1ce0711041953v1c44461av9d62d84e90dd5596@...&gt;\r\nReferences: &lt;p0624081fc3530aa81546@192.168.1.114&gt;\t\n &lt;7cc7c1ce0711041125h6e108528qb821f88ffebc2c76@...&gt;\t\n &lt;p06240802c353d9f163ed@192.168.1.114&gt;\n &lt;7cc7c1ce0711041953v1c44461av9d62d84e90dd5596@...&gt;\r\nDate: Mon, 5 Nov 2007 04:03:40 -0500\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Stephen Bannasch &lt;stephen.bannasch@...&gt;\r\nSubject: Re: restful way to create an association between 2 resources\r\nX-Yahoo-Group-Post: member; u=310618341; y=mveMonxuGw_agN2Glmo4-yFCLvCnLM2bUI4tvjdmE6CNXeoRdwTpEw\r\nX-Yahoo-Profile: stepheneb2001\r\n\r\nThanks Karen and Etan for responding,\n\nI&#39;ve replied to both of your comments in this post:\n\nAt 9:53 PM -0600 11/4/07, Karen wrote:\n&gt;On 11/4/07, Stephen Bannasch &lt;stephen.bannasch@...&gt; wrote:\n&gt;&gt;   PUT  /subjects/5/activities/18\n&gt;&gt;\n&gt;&gt; updates the existing activity 18 resource AND associates it with subject 5.\n&gt;\n&gt;No, it should just be the association. That&#39;s the key: the\n&gt;relationship *is* a resource all to itself. Same with a transaction\n\nWell right now (the way I&#39;ve implemented it) that url will update activity 18 AND create an association between activity 8 and subject 5.\n\nThe following:\n\n  PUT /activities/18\n\nwould update activity 18 without updating any associations between activity 18 and any other resource.\n\nAnd this:\n\n  PUT /gradelevels/7/activities/18\n\nwill update activity 18 AND create an association between activity 8 and gradelevel 7 if it doesn&#39;t already exist.\n\nThis:\n\n  POST /subjects/5/activities\n\nWill create a new activity AND associate it with subject 5.\n\nBut I agree with you that it makes sense that the association should be a resource all to itself. It isn&#39;t right now and I&#39;m wrestling with the best way to expose it.\n\n&gt;(the example in the REST book).\n\nWhat REST book?\n\nAt 4:02 AM +0000 11/5/07, Etan Wexler wrote:\n&gt;If you want to specify an association between &quot;/subjects/5&quot; and\n&gt;&quot;/activities/18&quot; without making a request upon &quot;/activities/18&quot;, you\n&gt;have good options. If you want to specify an association between\n&gt;&quot;/subjects/5&quot; and &quot;/activities/18&quot; without affecting &quot;/activities/18&quot;\n&gt;, I&#39;d want to know why you harbor such a goal.\n\nThe association is a many-to-many association and I implement this as a separate object with a link to both of the associated objects. In the domain I am modeling activity 18 doesn&#39;t change when associations are made between it and subjects 5 and 6 and the fact that I have separate objects that link activity 18 with subjects 5 and 6 is an implementation detail.\n\nWhat is important is that the system can (besides just being able to restfully interact with activity and subject resources themselves) support these interactions:\n\n1) respond with all the subjects associated with an activity\n2) respond with all the activities associated with subject\n3) assert that an association exists between an activity and a subject\n4) assert that an association does not exist between an activity and a subject\n\nRequests 1 and 2 return a response that is not the associations but the collection of resources the associations specify.\n\nLooking at this from the object relationships I&#39;m modeling -- requests 3 and 4 can be thought of as just setting the boolean state of an existing association.\n\nAnother aspect of this model is that it seems unreasonable for a client to have to know whether an association exists before asserting the association is true or false.\n\nAt 9:53 PM -0600 11/4/07, Karen wrote:\n&gt;The association doesn&#39;t need to map directly to a database resource.\n&gt;That&#39;s one of the things that&#39;s hard to let go of, or at least was for\n&gt;me. There&#39;s nothing wrong with exposing, for instance, a single flag\n&gt;out of a database record as its own separate resource, if it makes\n&gt;sense to need it that way.\n&gt;\n&gt;I ended up doing this to maintain a newsrc-type list of read messages.\n&gt;The newsrc list might, for instance, look like this: &quot;1-50, 52, 54-55,\n&gt;57&quot;. Send a DELETE to http://blahblahblah/55 and internally the newsrc\n&gt;line gets changed to &quot;1-50, 52, 54, 57&quot;. The &quot;resource&quot; isn&#39;t even an\n&gt;entire *field* in the database in this case.\n\nThat&#39;s a good point to keep in mind -- I&#39;ve definitely started with the idea that a resource &lt;=&gt; object &lt;=&gt; database record.\n\nNow I&#39;m thinking this might be clear:\n\nAssert this association is true:\n\n  PUT /subjects/5/activities/18/association\n\nAssert this association is false:\n\n  DELETE /subjects/5/activities/18/association\n\nDetermine the state of this association:\n\n  GET /subjects/5/activities/18/association\n\nIf the association is true (resource exists)\n  return: HTTP 204 No Content.\n\nIf the association is false (resource does not exist)\n  return: HTTP 404 Not Found.\n\nIf either associated resource doesn&#39;t exist (the conditions necessary for the resource to exist at all are not true)\n  return: HTTP 400 Bad Request.\n\nExtending the way I&#39;ve already implemented part of this would also means this alternate url points to the same resource:\n\n  /activities/18/subjects/5/association\n\n\n"}}