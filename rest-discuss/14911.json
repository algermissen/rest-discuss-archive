{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"ZCVhS0Pee1j_hb0HxVJTL7P2syRHhzwP1vVLyDflxsdYrixTxFI7BAiHZqMTx2xUaEwuOlhLGyr6J6208afSSFknatjyPvpMu9O-4wEUJVs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267115298","msgId":14911,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEY0QTZDQ0U2LTU4RTEtNDY1Mi05MjBGLUFEOTA4NUY4OUVEMEBtYWMuY29tPg==","inReplyToHeader":"PDM3MDMwNi42MzU2OC5xbUB3ZWI1NTkwMy5tYWlsLnJlMy55YWhvby5jb20+","referencesHeader":"PDM3MDMwNi42MzU2OC5xbUB3ZWI1NTkwMy5tYWlsLnJlMy55YWhvby5jb20+"},"prevInTopic":14910,"nextInTopic":14912,"prevInTime":14910,"nextInTime":14912,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"... Well....it had to come down on *somebody* :-) ... Yes, correct. ... Yes, as long as the representation that contains the links has a specific media type","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 75435 invoked from network); 25 Feb 2010 17:29:18 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 25 Feb 2010 17:29:18 -0000\r\nX-Received: from unknown (HELO asmtpout026.mac.com) (17.148.16.101)\n  by mta3.grp.sp2.yahoo.com with SMTP; 25 Feb 2010 17:29:18 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=windows-1252\r\nX-Received: from [192.168.2.102] ([84.144.77.174])\n by asmtp026.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KYE00FX6OF6Z790@...&gt; for\n rest-discuss@yahoogroups.com; Thu, 25 Feb 2010 08:28:28 -0800 (PST)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=5.0.0-0908210000 definitions=main-1002250135\r\nIn-reply-to: &lt;370306.63568.qm@...&gt;\r\nDate: Thu, 25 Feb 2010 17:28:18 +0100\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-transfer-encoding: quoted-printable\r\nMessage-id: &lt;F4A6CCE6-58E1-4652-920F-AD9085F89ED0@...&gt;\r\nReferences: &lt;370306.63568.qm@...&gt;\r\nTo: Kevin Duffey &lt;andjarnic@...&gt;\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=289191104; y=qZuuUfUuofyXwH7HFn5TUApgz8OTk7RXW7IWP8Wu4u8I0Z2E3klUCBzX\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Feb 25, 2010, at 4:57 PM, Kevin Duffey wrote:\n\n&gt; Hi Jan,\n&gt; \n&gt; Good info=\r\n. Wonder if Flickr is going to give you a call? :D\n\nWell....it had to come =\r\ndown on *somebody* :-)\n\n&gt; \n&gt; Of all the types, the Type II you list gives m=\r\ne the hardest time accepting. Your red box indicates that the client side i=\r\ns aware of the state ahead of time, thus it fails the REST test.\n\nYes, corr=\r\nect.\n\n&gt; I don&#39;t quite get this tho. I understand that if I call a single UR=\r\nI, and it returns me with some dynamic list of links I can call based on th=\r\ne representation at that time.. that I can only use those links. That shoul=\r\nd remain REST based correct?\n\nYes, as long as the representation that conta=\r\nins the links has a specific media type (that defines the meaning of the li=\r\nnks).\n\n&gt; \n&gt; I don&#39;t understand why, ahead of time a client might not know t=\r\nhe possible outcomes.\n\nBecause the hypermedia constraint constrains that :-=\r\n) The client MUST not assume what is coming back - only discover it. That i=\r\ns REST&#39;s essence if you want.\n\nBecause it enables the server to evolve with=\r\nout asking the client what it assmes.\n\n&gt; Let&#39;s say you call a get on /order=\r\ns. It returns a list of orders.\n\n.. maybe ...\n\n&gt; For each order you can cal=\r\nl GET on it,\n\n.. maybe ...\n\n&gt; PUT to update it, or DELETE.\n\n... maybe ...\n\n=\r\nTh epoint being: if you *find* a link to an order that has the semantics (f=\r\nrom a media type or link rel specs) that these methods can be called *then*=\r\n you know you can do that with an order resource. (The &#39;edit&#39; link of AtomP=\r\nub does something like that).\n\nAs long as the server does not tell you, you=\r\n cannot assume that you can do what you describe.\n\n&gt; As well, you can call =\r\nPOST on /orders to create a new order.\n\nIf some hypermedia tells you that a=\r\nbout /orders - then you can go ahead and POST. You need to discover that in=\r\nformation.\n\n&gt; I am confused on why it is UN-RESTful if a client knows ahead=\r\n of time that these are ALL the actions that can happen at this point.\n\nIt =\r\nis unESTful because the client would break if the server chooses to change.=\r\n\n\n&gt; By this I mean, let&#39;s say the GET /orders did NOT return a URI to allow=\r\n a user to create a new order. Ok..that&#39;s fine, the client wrapper that say=\r\ns order.create() simply wont work.\n\nRight. The current state machine you ar=\r\ne &#39;walking through&#39; does not allow you to do that. Might be different next =\r\ntime.\n\n[Side note: the essential thing to understand here is that in a dece=\r\nntralized environment there can never be a guarrantee that something works =\r\nat some point because you do not control the server. Hiding the decentraliz=\r\nation by an OO API doesnot change that - it just causes the false impressio=\r\nn because the IDL specifies that method on class orders. IDLs are for APIs =\r\nof compoenents that are inside the same &#39;piece of software&#39;.\n\nREST only emp=\r\nhasizes that the client should plan for the create link not to be there.]\n\n=\r\n\n&gt; If I am a client wrapping a RESTful api into an couple of classes to pro=\r\nvide a java based api,\n\nThat is generally a bad idea - do not hide the netw=\r\nork!\n\n&gt; so that other client users can simply use my classes and not try to=\r\n figure out REST... I would check the URIs and if a user of my wrapper clas=\r\nses tried to call order.create(), I would simply fail immediately because t=\r\nhe URI did not come back from the first get /orders.\n\nThis would again just=\r\n lead you deveoper to think being able to create would be the normal case.\n=\r\n\n\n&gt; \n&gt; I can&#39;t imagine Amazon, Flickr or anyone would simply publish a sing=\r\nle URI and say &quot;Hey world.. here is the published URI.. go have fun&quot; and th=\r\nen make clients guess what is possible within the realms of the API.\n\nThe c=\r\nlients need to know up front what the media types are that the service uses=\r\n. You need *some* information to code the client.\n\nSee http://www.nordsc.co=\r\nm/blog/?p=3D382 (and previous blogs on that issue)\n\n&gt; There has got to be s=\r\nome sort of knowledge about what this API will allow. I think as long as it=\r\n stresses in the document that a client must never assume all possible call=\r\ns are available.. there should be no reason why this wouldn&#39;t work.\n\nRight.=\r\n See above.\n\n&gt; \n&gt; For example, if I go to a certain web site, I can easily =\r\njot down the list of href links I can click on. Most of the time, those are=\r\n going to be the same based on a given state. If I log in, a web site lists=\r\n some menus/links I can click. They are pretty much always the same thing. =\r\nI could write a client side test system to automate testing of this. I migh=\r\nt have to do something like &quot;get me all links&quot;.. and then a &quot;if this link..=\r\n click it.. I know it does this..&quot;. sort of thing.. so that in case I log i=\r\nn and a new News link is available, I can handle it, possibly based on the =\r\nmedia type.\n\nThis assumes you have the service instance before you code the=\r\n client. That model would work on the Web (learing about the service by ins=\r\npection) but it does not work inside the enterprise because those people us=\r\nually want to develop in parallel :-)\n\n&gt; \n&gt; I guess my point is, I don&#39;t un=\r\nderstand how a client is supposed to go into a RESTful API completely blind=\r\n.\n\nSee above - you need to know the media types.\n\n&gt; There has to be some id=\r\nea of what is possible with the API and that if you create an order, the po=\r\nssible links coming back might be these.. they may or may not all be presen=\r\nt, but at most it&#39;s these so you can at least know ahead of time what you m=\r\night have and can do.\n\nHTH,\n\nJan\n\n&gt; \n&gt; thanks.\n&gt; \n&gt; \n&gt; --- On Thu, 2/25/10,=\r\n Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt; \n&gt; From: Jan Algermisse=\r\nn &lt;algermissen1971@...&gt;\n&gt; Subject: [rest-discuss] Differentiating HTTP-=\r\nbased APIs\n&gt; To: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\n&gt; Date: Thur=\r\nsday, February 25, 2010, 5:19 AM\n&gt; \n&gt; Hi,\n&gt; \n&gt; I have put together a table =\r\nclassifying HTTP-based API-types according to the REST constraints they adh=\r\nere to:\n&gt; \n&gt; &lt;http://nordsc. com/ext/classifi cation_of_ http_based_ apis.h=\r\ntml&gt;\n&gt; \n&gt; Hope this is useful.\n&gt; \n&gt; Jan\n&gt; \n&gt; ------------ --------- -------=\r\n-- -----\n&gt; Jan Algermissen, Consultant\n&gt; NORD Software Consulting\n&gt; \n&gt; Mail=\r\n: algermissen@ acm.org\n&gt; Blog: http://www.nordsc. com/blog/\n&gt; Work: http://=\r\nwww.nordsc. com/\n&gt; ------------ --------- --------- -----\n&gt; \n&gt; \n&gt; \n\n-------=\r\n----------------------------\n Jan Algermissen, Consultant\n NORD Software Co=\r\nnsulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Wo=\r\nrk: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}