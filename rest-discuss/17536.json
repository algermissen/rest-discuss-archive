{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"utxNlW71jgU36PdRlLpuV8a__jLnuKxHI8brVnaHbado85RO1MQ1AZYG2bVp_xrV5o5xOcKjcujU29JKdS_g9pWuClN7CTvSZA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Should GET be used if request has unintended side effects","postDate":"1305741284","msgId":17536,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBTkxrVGludU1DelZ1S3hhaHZyY0E3RUptaFBZMXZKSHB3QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRERDM0NDczLjgwMTA2MDVAZ21haWwuY29tPg==","referencesHeader":"PDRERDE2ODU1LjgwNzA5MDRAZ21haWwuY29tPgk8NjBFNzIwRDctOUYxNy00NzcxLThDNTQtMkQ0NkM4NjQyM0QzQGFzdHJvLmdsYS5hYy51az4JPDRERDJCRTg0LjkwMjA4MDhAZ21haWwuY29tPgk8QkFOTGtUaWtKK2dCbi1oYjZ0UjAzdStSN1ZvPWN4REFheXdAbWFpbC5nbWFpbC5jb20+CTw0REQyQzE4Qy45MDMwMDAxQGdtYWlsLmNvbT4JPEJBTkxrVGluVllOTEJ6TkNGQTFLTDZVZ2JQS1NHR1ZOMjhnQG1haWwuZ21haWwuY29tPgk8NEREMzQ0NzMuODAxMDYwNUBnbWFpbC5jb20+"},"prevInTopic":17535,"nextInTopic":17538,"prevInTime":17535,"nextInTime":17537,"topicId":17527,"numMessagesInTopic":11,"msgSnippet":"... There is no conflict here. REST is REST. HTTP is HTTP. REST != HTTP. There are many, unRESTful properties to HTTP and ways to use HTTP in an unRESTful ","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 94706 invoked from network); 18 May 2011 17:54:45 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m7.grp.sp2.yahoo.com with QMQP; 18 May 2011 17:54:45 -0000\r\nX-Received: from unknown (HELO mail-gx0-f171.google.com) (209.85.161.171)\n  by mta2.grp.sp2.yahoo.com with SMTP; 18 May 2011 17:54:45 -0000\r\nX-Received: by gxk22 with SMTP id 22so818929gxk.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 May 2011 10:54:45 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.100.15.4 with SMTP id 4mr1285647ano.126.1305741284950; Wed, 18\n May 2011 10:54:44 -0700 (PDT)\r\nX-Received: by 10.100.137.9 with HTTP; Wed, 18 May 2011 10:54:44 -0700 (PDT)\r\nIn-Reply-To: &lt;4DD34473.8010605@...&gt;\r\nReferences: &lt;4DD16855.8070904@...&gt;\n\t&lt;60E720D7-9F17-4771-8C54-2D46C86423D3@...&gt;\n\t&lt;4DD2BE84.9020808@...&gt;\n\t&lt;BANLkTikJ+gBn-hb6tR03u+R7Vo=cxDAayw@...&gt;\n\t&lt;4DD2C18C.9030001@...&gt;\n\t&lt;BANLkTinVYNLBzNCFA1KL6UgbPKSGGVN28g@...&gt;\n\t&lt;4DD34473.8010605@...&gt;\r\nDate: Wed, 18 May 2011 10:54:44 -0700\r\nMessage-ID: &lt;BANLkTinuMCzVuKxahvrcA7EJmhPY1vJHpw@...&gt;\r\nTo: aakash dharmadhikari &lt;aakashd@...&gt;\r\nCc: mike amundsen &lt;mamund@...&gt;, Norman Gray &lt;norman@...&gt;, \n\trest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016e64698187542d604a390952b\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Should GET be used if request has unintended side effects\r\nX-Yahoo-Group-Post: member; u=401876259; y=e69YGIHPRQqy6iW-WmFw9BpbfYR-f7LToMG-Mo578wm4Ke0MwFfsag\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--0016e64698187542d604a390952b\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Tue, May 17, 2011 at 9:00 PM, aakash dharmadhikari &lt;aakashd@...&gt;wrote:\n\n&gt;  2. I have gone through the RFC2616 & some resources for REST; just to\n&gt;\n&gt; find that HTTP talks about user&#39;s intention & REST talks about server\n&gt; state. When we use both of them together, there is a lot of confusion\n&gt; about which prevails over the other.\n&gt;\n&gt;\nThere is no &quot;conflict&quot; here. REST is REST. HTTP is HTTP. REST != HTTP. There\nare many, unRESTful properties to HTTP and ways to use HTTP in an unRESTful\nmanner.\n\nIf you wish to build a REST system on top of HTTP, then you need to\nconstrain your use of HTTP so that it stays within the boundaries of a REST\narchitecture.\n\nAlso, there are several examples of resources that use GET but do not return\nthe same payload each time.\n\nGET /current_temperature\nGET /random_number\nGET /new_items\n\nThe premise is that you are not using GET to change state. If state changes\non the server, then that&#39;s the servers problem. That&#39;s an issue for the\ndeveloper of the service, but it doesn&#39;t change the contract for the client.\n\nIf GET /new_items returns a list of items and then you call it again and get\nan empty list (because the server implementation feels that since it served\nthe items up once, then the items are no longer &quot;new&quot;), well that&#39;s the\nserver&#39;s problem. Not the clients.\n\nYou do GET /new_items, and you got all of the &quot;new items&quot;. You didn&#39;t call\nGET /new_items to change the state of the items from &quot;new&quot; to &quot;not new&quot;, you\ncalled it to get &quot;new items&quot; using whatever criteria the server set for\n&quot;new-ness&quot;, in contrast to whatever your definition of &quot;new-ness&quot; is. It&#39;s\nthe servers resource, not yours. It could give you the same or growing list\nall day long and reset abruptly at 12am.\n\nNow, you can question the wisdom of the server implementation, but that&#39;s a\ndifferent discussion.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\r\n--0016e64698187542d604a390952b\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, May 17, 2011 at 9:00 PM, aakash =\r\ndharmadhikari &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:aakashd@...&quot;&gt;aa=\r\nkashd@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; =\r\nstyle=3D&quot;margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 20=\r\n4); padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(=\r\n255, 255, 255);&quot;&gt;&lt;span&gt; &lt;/span&gt;2. I have gone through the RFC2616 &amp; som=\r\ne resources for REST; just to &lt;br&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;p&gt;\nfind that HTTP talks a=\r\nbout user&#39;s intention &amp; REST talks about server &lt;br&gt;\nstate. When we=\r\n use both of them together, there is a lot of confusion &lt;br&gt;\nabout which pr=\r\nevails over the other.&lt;br&gt;\n&lt;br&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;di=\r\nv&gt;&lt;br&gt;There is no &quot;conflict&quot; here. REST is REST. HTTP is HTTP. RE=\r\nST !=3D HTTP. There are many, unRESTful properties to HTTP and ways to use =\r\nHTTP in an unRESTful manner.&lt;br&gt;\n&lt;br&gt;If you wish to build a REST system on =\r\ntop of HTTP, then you need to constrain your use of HTTP so that it stays w=\r\nithin the boundaries of a REST architecture.&lt;br&gt;&lt;br&gt;Also, there are several=\r\n examples of resources that use GET but do not return the same payload each=\r\n time.&lt;br&gt;\n&lt;br&gt;GET /current_temperature&lt;br&gt;GET /random_number&lt;br&gt;GET /new_i=\r\ntems&lt;br&gt;&lt;br&gt;The premise is that you are not using GET to change state. If s=\r\ntate changes on the server, then that&#39;s the servers problem. That&#39;s=\r\n an issue for the developer of the service, but it doesn&#39;t change the c=\r\nontract for the client.&lt;br&gt;\n&lt;br&gt;If GET /new_items returns a list of items a=\r\nnd then you call it again and get an empty list (because the server impleme=\r\nntation feels that since it served the items up once, then the items are no=\r\n longer &quot;new&quot;), well that&#39;s the server&#39;s problem. Not the=\r\n clients.&lt;br&gt;\n&lt;br&gt;You do GET /new_items, and you got all of the &quot;new i=\r\ntems&quot;. You didn&#39;t call GET /new_items to change the state of the i=\r\ntems from &quot;new&quot; to &quot;not new&quot;, you called it to get &quo=\r\nt;new items&quot; using whatever criteria the server set for &quot;new-ness=\r\n&quot;, in contrast to whatever your definition of &quot;new-ness&quot; is.=\r\n It&#39;s the servers resource, not yours. It could give you the same or gr=\r\nowing list all day long and reset abruptly at 12am.&lt;br&gt;\n&lt;br&gt;Now, you can qu=\r\nestion the wisdom of the server implementation, but that&#39;s a different =\r\ndiscussion.&lt;br&gt;&lt;br&gt;Regards,&lt;br&gt;&lt;br&gt;Will Hartung&lt;br&gt;(&lt;a href=3D&quot;mailto:willh=\r\n@...&quot;&gt;willh@...&lt;/a&gt;)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;\n\r\n--0016e64698187542d604a390952b--\r\n\n"}}