{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":68033963,"authorName":"Chris Dent","from":"Chris Dent &lt;cdent@...&gt;","profile":"chrislondonbridge","replyTo":"SENDER","senderId":"MVulJFRHljpoonjNHbPizOxhyZu9JAF-Nl5pk_US88Mg6KguRfgALJNViHI6tHu0LjXvji5WgJzfrLsfj6m3CCZn0TjvumB-X4-k","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] supporting multiple media types for POST and PUT","postDate":"1197646690","msgId":9981,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI3MzRBRkE1LTJFOTQtNDBBRC1BREJGLUY5NkFFNzk4NjE4OUBidXJuaW5nY2hyb21lLmNvbT4=","inReplyToHeader":"PGI1NDhkZjY1MDcxMjE0MDYxOGsxMjRhZDcxY3ZkZTdmZWM4MjljYjYyOWJjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MDcxMjEzMTk0MnYyMmY5MjAyZnAzMDg5ZGIyN2YwMzZmMjQ1QG1haWwuZ21haWwuY29tPiA8NDc2MjVGMTMuNjA3MDAwNkBnbXguZGU+IDxiNTQ4ZGY2NTA3MTIxNDA2MThrMTI0YWQ3MWN2ZGU3ZmVjODI5Y2I2MjliY0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":9980,"nextInTopic":9982,"prevInTime":9980,"nextInTime":9982,"topicId":9972,"numMessagesInTopic":23,"msgSnippet":"... I think this must be fairly common, or if not it should be. It s kind of the point right? You have a resource or some collection of resources that you want","rawEmail":"Return-Path: &lt;cdent@...&gt;\r\nX-Sender: cdent@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95207 invoked from network); 14 Dec 2007 15:38:14 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m54.grp.scd.yahoo.com with QMQP; 14 Dec 2007 15:38:14 -0000\r\nX-Received: from unknown (HELO umbra.saturn-5.com) (69.12.216.78)\n  by mta15.grp.scd.yahoo.com with SMTP; 14 Dec 2007 15:38:14 -0000\r\nX-Received: from [192.168.1.100] (unknown [213.83.70.113])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby umbra.saturn-5.com (Postfix) with ESMTP id 2B2012096D;\n\tFri, 14 Dec 2007 15:38:14 +0000 (UTC)\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;B734AFA5-2E94-40AD-ADBF-F96AE7986189@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nIn-Reply-To: &lt;b548df650712140618k124ad71cvde7fec829cb629bc@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v915)\r\nDate: Fri, 14 Dec 2007 15:38:10 +0000\r\nReferences: &lt;b548df650712131942v22f9202fp3089db27f036f245@...&gt; &lt;47625F13.6070006@...&gt; &lt;b548df650712140618k124ad71cvde7fec829cb629bc@...&gt;\r\nX-Mailer: Apple Mail (2.915)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Chris Dent &lt;cdent@...&gt;\r\nSubject: Re: [rest-discuss] supporting multiple media types for POST and PUT\r\nX-Yahoo-Group-Post: member; u=68033963; y=1LGfkT7S-X4XHlmtoFoMYfJFcADg40-_IKXZt6uDhFLUtILXGIG9LZ_wgN4\r\nX-Yahoo-Profile: chrislondonbridge\r\n\r\n\nOn Dec 14, 2007, at 2:18 PM, mike amundsen wrote:\n\n&gt; Again, my question is two-fold:\n&gt; - how common is it to support multiple media types for POST/PUT\n\nI think this must be fairly common, or if not it should be. It&#39;s kind  \nof the point right? You have a resource or some collection of  \nresources that you want updated. The most flexible way of supporting  \nupdate would be to support multiple media types on input.\n\nIn the systems I&#39;ve worked with (primarily wikis[1]), we&#39;ll accept  \nwikitext, HTML, JSON packages that include wikitext or HTML along with  \nsome metadata. We&#39;ve explored Atom and various (other) XML packagings  \ntoo, but have not solidified those as we don&#39;t yet have the use case.\n\nOn the server side we store the incoming representation (after some  \ntranslation) to our canonical storage representation, wikitext, and  \nthen make it available in a variety of outgoing representations.\n\nOn input we look at the Content-Type header. If we don&#39;t support a  \nparticular type, we send a 415. Ideally we&#39;d respond with the types we  \ndo support but we didn&#39;t get around to that.\n\nFor output we look at the accept header. We don&#39;t do full content- \nnegotiation with the header: we hope the client to send a single type  \nthat they accept, not multiples from which we&#39;ll pick the one we like  \nbest. We try with that latter bit but it never comes out as happy as  \nwe&#39;d like, so in our own client code we always just accept one thing  \nand one thing only.\n\nOur thinking in all this is that for our style of API--which is purely  \na data mover, not something we expect to use as a human UI (although  \nit works just great that way if you are happy not having a bunch of UI  \nfurniture)--we want the URIs for the resources to really be the place  \nwhere things happen: for any entity its URL is the place where you GET  \nit, you PUT it and you DELETE it, for any collection its URL is the  \nplace where you GET it and you POST to it. We don&#39;t bother providing   \nforms output or support for CGI form content-types input. If we did  \nwant to have a resource which was the editor for other resources, then  \nwe might, but at this point we expect the client side to make its own  \neditor.\n\n\n[1] Socialtext REST API docs: https://www.socialtext.net/st-rest-docs/index.cgi\n-- \nChris Dent http://www.burningchrome.com/\nor I&#39;ll remove your commit bit\n\n\n\n\n"}}