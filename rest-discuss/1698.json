{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"0h9bVOnP6rv_nrJ8Omr0io4ytnPh68c8yYd9pD9yuvmWnBTX7Ocaszj3IzIFMhXST-vYJFc8DBRKOBTczQl21EFTmhAMoA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"&quot;Application Protocols&quot; -- an analogy","postDate":"1025919070","msgId":1698,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMjY0ODVFLkRCOUNDRTNEQHByZXNjb2QubmV0Pg=="},"prevInTopic":0,"nextInTopic":1702,"prevInTime":1697,"nextInTime":1699,"topicId":1698,"numMessagesInTopic":10,"msgSnippet":"http://blogstream.com/pauls/1025918592 HTTP is an Application Protocol Posted by Paul Prescod on Friday July 05, @06:23PM from the","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 6 Jul 2002 01:31:16 -0000\r\nReceived: (qmail 70352 invoked from network); 6 Jul 2002 01:31:16 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m1.grp.scd.yahoo.com with QMQP; 6 Jul 2002 01:31:16 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 6 Jul 2002 01:31:16 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g661VFW08663\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 5 Jul 2002 18:31:15 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g661VE211691\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 5 Jul 2002 18:31:14 -0700\r\nMessage-ID: &lt;3D26485E.DB9CCE3D@...&gt;\r\nDate: Fri, 05 Jul 2002 18:31:10 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: &quot;Application Protocols&quot; -- an analogy\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nhttp://blogstream.com/pauls/1025918592\n\nHTTP is an Application Protocol  \n  \nPosted by Paul Prescod on Friday July 05, @06:23PM\nfrom the what-the-hell-are-you-REST-guys-talking-about? dept.\nREST people often say that HTTP is an application protocol and therefore\nyou should not layer a &quot;protocol independent&quot; protocol on top of it, but\nrather should only use it as is or extend it using documented extension\nmechanisms. I want to offer an analogy that may clarify this.\n\nI think we all agree that HTTP should be the basis for new technologies.\nThe question is whether these new technologies are new layers or new\nextensions. \n\nHere&#39;s an analogy that might be useful. \n\nTCP is to HTTP as XML is to XHTML. XHTML is layered on top of XML and\nXML makes almost no semantic demands on XHTML at all. XHTML can use an\nelement like &lt;title&gt; to represent something that is &quot;logically&quot; an\nattribute and nobody complains. XHTML could use an attribute &quot;date&quot; to\nrepresent something that &quot;logically&quot; has sub-structure and if anyone\ncomplains it is because they are making life somewhat more difficult for\ndevelopers. But the XML standard does not say that you should use\nattributes for &quot;metadata-like things&quot; and elements for &quot;content-like\nthings&quot;. It makes almost no semantic demands on the vocabulary at all.\nYou would have to work pretty hard to violate the &quot;semantics&quot; of the XML\nspecification. All you could do, really, is break the syntax -- be\nnot-well-formed. Similarly, applications running on top of TCP have very\nfew semantic responsibilities. Both XML and TCP are designed to say: &quot;do\nwhat you want, just obey the syntactic rules of the specification.&quot; \n\nNow let&#39;s go up a step. XHTML is an XML application (in the old &quot;SGML\napplication sense). HTTP is an application protocol. They *do* make\nsemantic demands on things building on top of them. In other words, you\nMUST extend, not layer, on them. &quot;P&quot; means &quot;paragraph&quot; in XHTML. There\nshould never, ever, be a &quot;layer&quot; that adds another semantic on P like\n&quot;parachute&quot;. That would destroy interoperability with XHTML processors\nin a very dangerous way. The documents would be valid XHTML (according\nto validating parsers) but meaningless! \n\nYou are supposed to extend XHTML with new elements, and you are supposed\nto &quot;subclass&quot; P with &quot;big paragraph&quot; or &quot;important paragraph&quot; or\n&quot;disputed paragraph&quot; but you should never state that in &quot;in my variant\nof XHTML, two P elements in a row means &#39;table&#39;&quot; Once you&#39;ve done that,\nit is no longer a variant of XHTML. It is a semantically incompatible\nlanguage and interoperability will suffer. Browsers can display it (if\nit is valid XHTML) but they are displaying gibberish. \n\nImagine a future scenario where firewalls filter out all vocabularies\nexcept known ones like XHTML. Someone comes along and says: &quot;We really\nneed to route arbitrary new hypertext vocabularies through firewalls.\nHere&#39;s what we&#39;ll do. We&#39;ll write in NewML and &#39;serialize&#39; down to HTML.\nIt won&#39;t be semantically meaningful HTML, because we&#39;ll use all of the\nelement types to mean what we want them to mean, and &#39;deserialize&#39; back\nto NewML on the other side. No, even better: we&#39;ll make a meta-markup\nlanguage and every man woman and child can invent their own new\nhypertext markup languages that serialize to and deserialize from HTML.&quot; \n\nNow if somebody proposed that, I would have the following responses: \n\n * If you needed more features in HTML, did you approach the working\ngroup to add them? Having an incompatible bifurcation doesn&#39;t seem\nproductive. Maybe we could all benefit from your new features? \n\n * If the working group turned you down, did you consider using the\nexisting, documented extension mechanisms? Millions of people have used\nthem with success. How did they fail you? \n\n * Why do you have to piggy-back on HTML? Just because HTML slips\nthrough firewalls and is popular? Surely your new markup language could\nhave achieved popularity of its own accord on the open market without\npretending to be HTML. Why not build on XML (TCP, in our analogy). \n\n * Anyhow, why do we even need a framework for building hypertext markup\nlanguages? HTML is an extensible hypertext markup language which\ndemonstrably satisfies most if not all distributed hypertext\npresentation needs. When there are a hundred or a thousand markup\nlanguage variants, will interoperability be better or worse? \n\nThese are the questions REST people ask SOAP people. \n\nMy goal is to clarify why the relationship between SOAP (when running\nover HTTP) and HTTP is very different than the relationship between HTTP\nand TCP or TCP and IP. HTTP is &quot;top dog&quot; because it defines the baseline\nsemantics for anything that builds on it, just as XHTML (or RSS or\nDocBook or...) does.\n-- \nCome discuss XML and REST web services at:\n  Open Source Conference: July 22-26, 2002, conferences.oreillynet.com\n  Extreme Markup: Aug 4-9, 2002,  www.extrememarkup.com/extreme/\n\n"}}