{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"e0bC4cIT741mRU3X6_TohPoJd8linFsRw25ZUHKe5nfzpFK2W9zWgNp7IT7by0T18EwG_lXD_WS68AeXZRZBORu7hzP9hZC4IM5tdE-EECo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &#39;No application data on client&#39; constraint? was: RESTful ordering and order-rejection","postDate":"1257196605","msgId":13979,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDkwRTU0MkE3LTJGNUMtNDAyNC04NjNFLTZBNDM0RDlFRURBNUBtYWMuY29tPg==","inReplyToHeader":"PEJMVTEwMi1XMjY0QUU0MDVENDc4QTYxRjFBQUM4MkI1QjMwQHBoeC5nYmw+","referencesHeader":"PDJCNkI4NDNFLTVGNDUtNENCQy05QzM5LTBBMkY4RDMwQTk1QUBtYWMuY29tPiA8QkxVMTAyLVcyNjRBRTQwNUQ0NzhBNjFGMUFBQzgyQjVCMzBAcGh4LmdibD4="},"prevInTopic":13978,"nextInTopic":13981,"prevInTime":13978,"nextInTime":13980,"topicId":13970,"numMessagesInTopic":18,"msgSnippet":"... A request in a local cache is not what I mean by application data. Suppose a service were designed in a way that it would require the client to store data","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5122 invoked from network); 2 Nov 2009 21:16:50 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 2 Nov 2009 21:16:50 -0000\r\nX-Received: from unknown (HELO asmtpout014.mac.com) (17.148.16.89)\n  by mta1.grp.sp2.yahoo.com with SMTP; 2 Nov 2009 21:16:50 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.102] ([84.144.98.104])\n by asmtp014.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KSI00C0H33YYG50@...&gt; for\n rest-discuss@yahoogroups.com; Mon, 02 Nov 2009 13:16:50 -0800 (PST)\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;90E542A7-2F5C-4024-863E-6A434D9EEDA5@...&gt;\r\nTo: Sebastien Lambla &lt;seb@...&gt;\r\nIn-reply-to: &lt;BLU102-W264AE405D478A61F1AAC82B5B30@...&gt;\r\nDate: Mon, 02 Nov 2009 22:16:45 +0100\r\nReferences: &lt;2B6B843E-5F45-4CBC-9C39-0A2F8D30A95A@...&gt;\n &lt;BLU102-W264AE405D478A61F1AAC82B5B30@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] &#39;No application data on client&#39; constraint? was:\n RESTful ordering and order-rejection\r\nX-Yahoo-Group-Post: member; u=289191104; y=gD8J51_JxY9sMh6Mm3OJ_4WSAxOLjTRGYzImKFKaAobjYVVFgBCnyM-a\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Nov 2, 2009, at 9:43 PM, Sebastien Lambla wrote:\n\n&gt;\n&gt;\n&gt; Application state is the state of the application, that spans both  \n&gt; the client and the server. There is no constraint preventing state  \n&gt; residing on the client, otherwise you couldn&#39;t have a local cache in  \n&gt; your browser.\n\nA request in a local cache is not what I mean by application data.  \nSuppose a service were designed in a way that it would require the  \nclient to store data besides URIs in order to make the next request.  \nIOW, to continue its interaction with the service on another machine,  \nit would not only need to take the appropriate URIs with it (e.g. send  \nby mail) but also other data elements.\n\nI think that would be a violation of REST - I just cannot derive it  \nfrom the other constraints.\n\nMy hunch is that in a RESTful system\n\na) all application state (aka session state) is on the client\nb) all application data resides on the server (as resource state)\n\nThe question that drives me is what the significance of resource state  \nis (what is its meaning/purpose in a given design? What are the design  \nconditions that lead to the creation of new resource state? Etc.) I am  \ntrying to get away from the &quot;you could do this and you could do that  \nbut you also could do it that way&quot; kinds of answers to practical REST  \ndesign questions.\n\nJan\n\n\n&gt;\n&gt; S\n&gt;\n&gt; &gt; To: rest-discuss@yahoogroups.com\n&gt; &gt; From: algermissen1971@...\n&gt; &gt; Date: Sun, 1 Nov 2009 21:17:11 +0100\n&gt; &gt; Subject: Re: [rest-discuss] &#39;No application data on client&#39;  \n&gt; constraint? was: RESTful ordering and order-rejection\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Oct 31, 2009, at 12:01 AM, Jan Algermissen wrote:\n&gt; &gt;\n&gt; &gt; &gt; Hi,\n&gt; &gt; &gt;\n&gt; &gt; &gt; suppose the following media types do exist:\n&gt; &gt; &gt;\n&gt; &gt; &gt; - application/procurement-order for orders\n&gt; &gt; &gt; - application/procurement-orderrejection for order rejections\n&gt; &gt; &gt;\n&gt; &gt; &gt; also suppose the client knows there is a resource at /order- \n&gt; processor\n&gt; &gt; &gt; that accepts orders in application/procurement-order media type.\n&gt; &gt; &gt;\n&gt; &gt; &gt; What if the client submits an order and the server wants to reject\n&gt; &gt; &gt; the order (maybe because the requested items are permanently out\n&gt; &gt; &gt; of stock)? What return code would the server use and does it make\n&gt; &gt; &gt; sense to send the order rejection document as the body of the\n&gt; &gt; &gt; (error-)response?\n&gt; &gt;\n&gt; &gt; I am trying to rule out the abve approach by deriving from REST&#39;s\n&gt; &gt; constraints.\n&gt; &gt; Here is my thinking:\n&gt; &gt;\n&gt; &gt; I assume (because I am not able yet to derive that from the REST\n&gt; &gt; constraints)\n&gt; &gt; that there is an implicit constraint in REST that demands all\n&gt; &gt; application data\n&gt; &gt; to be stored on the server.\n&gt; &gt;\n&gt; &gt; To put this in other words: a client must be able to perform any of\n&gt; &gt; the next\n&gt; &gt; possible transitions in an application soley based on the responses\n&gt; &gt; previously\n&gt; &gt; received. The client-server collaboration must not be designed in a\n&gt; &gt; way that\n&gt; &gt; requires a client to keep track of its own requests.\n&gt; &gt;\n&gt; &gt; Applied to my question above I think that a RESTful solution demands\n&gt; &gt; that the\n&gt; &gt; server creates application data as the basis for subsequent\n&gt; &gt; interactions and\n&gt; &gt; then instructs the client how to procede through the application.  \n&gt; (This\n&gt; &gt; implies a solution where the order is created on the server and  \n&gt; marked\n&gt; &gt; as\n&gt; &gt; &#39;pending&#39; to provide the application data. The client would then  \n&gt; alter\n&gt; &gt; the\n&gt; &gt; order (the application data) to &#39;fix&#39; the (item-out-of- \n&gt; stock-)problem.\n&gt; &gt;\n&gt; &gt; The solution proposed in my original posting on the other hand would\n&gt; &gt; require the client to record it&#39;s own order and apply the suggested\n&gt; &gt; change to it\n&gt; &gt; before repeating the original request.\n&gt; &gt;\n&gt; &gt; (Aside: is maintaining application data on both, client and server a\n&gt; &gt; property of\n&gt; &gt; messaging styles?)\n&gt; &gt;\n&gt; &gt; Generally, I have for some time now wondered what could be used as a\n&gt; &gt; guiding\n&gt; &gt; principle for answering the question when to create a resource on  \n&gt; the\n&gt; &gt; server?\n&gt; &gt; (*Why* create a resource instead of just sending an answer document\n&gt; &gt; like you\n&gt; &gt; would do in synchronous messaging).\n&gt; &gt;\n&gt; &gt; When the resource is seen as application data, the answer would be\n&gt; &gt; that resources\n&gt; &gt; must be created when otherwise application data would have to be\n&gt; &gt; recorded on the\n&gt; &gt; client side (which we do not want according to my above reasoning).\n&gt; &gt;\n&gt; &gt; I am not really satisfied with the &#39;flow&#39; of this argumentation  \n&gt; yet -\n&gt; &gt; comments/criticism\n&gt; &gt; would be very welcome.\n&gt; &gt;\n&gt; &gt; Jan\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Example:\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; -&gt;\n&gt; &gt; &gt; POST /order=processor\n&gt; &gt; &gt; Content-Type: application/procurement-order\n&gt; &gt; &gt;\n&gt; &gt; &gt; &lt;the order XML goes here&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; 409 Confilct\n&gt; &gt; &gt; Content-Type: application/procurement-orderrejection\n&gt; &gt; &gt;\n&gt; &gt; &gt; &lt;xml of order rejection document goes here, maybe\n&gt; &gt; &gt; telling the client how to fix the problem (e.g.\n&gt; &gt; &gt; suggesting similar goods that are in stock)&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Does that make sense? And if not - how else to do it?\n&gt; &gt; &gt;\n&gt; &gt; &gt; Hmm, an alternative would be to create an order request resource  \n&gt; and\n&gt; &gt; &gt; not just an order resource and make the rejection part of the\n&gt; &gt; &gt; representation of the order request:\n&gt; &gt; &gt;\n&gt; &gt; &gt; POST /order-processor\n&gt; &gt; &gt; Content-Type: application/procurement-order\n&gt; &gt; &gt;\n&gt; &gt; &gt; 201 Created\n&gt; &gt; &gt; Location /order-processor/order-requests\n&gt; &gt; &gt; Content-Type: application/order-request\n&gt; &gt; &gt;\n&gt; &gt; &gt; &lt;XML representing the state of the order-request, which at the\n&gt; &gt; &gt; moment is\n&gt; &gt; &gt; &#39;rejected&#39;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; A client could then PUT/PATCH the order to fix the problem  \n&gt; according\n&gt; &gt; &gt; to\n&gt; &gt; &gt; suggestions made in the order-request response.\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Does that sound better?\n&gt; &gt; &gt;\n&gt; &gt; &gt; Jan\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; ------------------------------------\n&gt; &gt; &gt;\n&gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; --------------------------------------\n&gt; &gt; Jan Algermissen\n&gt; &gt;\n&gt; &gt; Mail: algermissen@...\n&gt; &gt; Blog: http://algermissen.blogspot.com/\n&gt; &gt; Home: http://www.jalgermissen.com\n&gt; &gt; --------------------------------------\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ------------------------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt; Chat to your friends for free on selected mobiles. Learn more.\n&gt;\n&gt; \n\n--------------------------------------\nJan Algermissen\n\nMail: algermissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalgermissen.com\n--------------------------------------\n\n\n\n\n"}}