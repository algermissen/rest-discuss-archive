{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"Aristotle Pagaltzis","from":"Aristotle Pagaltzis &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"R-XeysdH9FqZ92Y52V2jNynaEm_bu2W-OZEVwcJ40r2Q1J7CSR0O_lgyHUNoDNJEN3Xr6bfWIXtDzgAYcGNHy7bdMHhy0nethfUUWa8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: On  (API design)","postDate":"1223567503","msgId":11379,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgxMDA5MTU1MTQzLkdFMTQ4MzRAa2xhbmdyYXVtLnBsYXNtYXN0dXJtLm9yZz4=","inReplyToHeader":"PGI1NDhkZjY1MDgxMDA3MTYxM2w3MWY4M2NlZXQ2MGNkYmRmMzZiYzE2MGUxQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDEwZGYwM2EzMDgwOTMwMjExM3k1YTA0ZDZlYmc3YjU1NTVjZGJjMTRmMmQzQG1haWwuZ21haWwuY29tPiA8NzMwOTZBNEMtODBGRS00RjY2LTgwNzAtRDVFMTQxRjg3RUJFQHN1YmJ1Lm9yZz4gPDEwZGYwM2EzMDgxMDA3MTU1N3UzODAxOGYyMWo3MDljYjJjZWM2YzE0ZWVhQG1haWwuZ21haWwuY29tPiA8YjU0OGRmNjUwODEwMDcxNjEzbDcxZjgzY2VldDYwY2RiZGYzNmJjMTYwZTFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":11377,"nextInTopic":0,"prevInTime":11378,"nextInTime":11380,"topicId":11368,"numMessagesInTopic":10,"msgSnippet":"... That doesn’t seem like a concern to me. The basic link element pattern is trivial to handle. The complexity in handling links is in dealing with the","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 35789 invoked from network); 9 Oct 2008 15:51:46 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m49.grp.scd.yahoo.com with QMQP; 9 Oct 2008 15:51:46 -0000\r\nX-Received: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta18.grp.scd.yahoo.com with SMTP; 9 Oct 2008 15:51:45 -0000\r\nX-Received: (qmail invoked by alias); 09 Oct 2008 15:51:44 -0000\r\nX-Received: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp013) with SMTP; 09 Oct 2008 17:51:44 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX1+ARzRSr5WA65ChJHA1BOcnhWrAmO2Q9V5zKe6ceE\n\tvVgkhsgdfuEBuX\r\nDate: Thu, 9 Oct 2008 17:51:43 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20081009155143.GE14834@...&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;10df03a30809302113y5a04d6ebg7b5555cdbc14f2d3@...&gt; &lt;73096A4C-80FE-4F66-8070-D5E141F87EBE@...&gt; &lt;10df03a30810071557u38018f21j709cb2cec6c14eea@...&gt; &lt;b548df650810071613l71f83ceet60cdbdf36bc160e1@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;b548df650810071613l71f83ceet60cdbdf36bc160e1@...&gt;\r\nUser-Agent: Mutt/1.5.18 (2008-05-17)\r\nX-Y-GMX-Trusted: 0\r\nX-FuHaFi: 0.74\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Aristotle Pagaltzis &lt;pagaltzis@...&gt;\r\nSubject: Re: On &lt;link&gt; (API design)\r\nX-Yahoo-Group-Post: member; u=147780944; y=kO08gPnrdJu_dWOV2WuAiWSGBSQ0yvBzGyWJlgcy2XVJ\r\nX-Yahoo-Profile: a22pag\r\n\r\n* mike amundsen &lt;mamund@...&gt; [2008-10-08 01:15]:\n&gt; The &lt;link&gt; idiom is common enough that there will be a good\n&gt; deal of existing code to handle them. Creating your own way to\n&gt; share links in an XML document could make that existing code\n&gt; worthless.\n\nThat doesn’t seem like a concern to me. The basic link element\npattern is trivial to handle. The complexity in handling links is\nin dealing with the constraints imposed by the container format,\neg. in Atom, there are specific demands on what links an Entry\nmust and must not have. That logic is going to need writing from\nscratch for every format anyway.\n\nIf you’re designing a vocabulary from scratch I don’t see an\nextremely compelling reason to go with the link element pattern\nor break it.\n\nHowever, note that I am arguing only about the case where you\n*have* decided to design a new vocabulary. But that is not a step\nto be take lightly. I would be very reluctant to do that. Even if\nsticking with an existing standard format causes inconvenience,\nas long as you don’t need to actively work against the format to\nmake it work, you stand to benefit greatly – through code reuse,\nf.ex., bringing us full circle.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}