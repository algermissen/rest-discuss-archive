{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"6gbedgEXuchYQVGw22gWV72caxLbI1vcTQf6uxN1S8tjxvIdf-pfBxsHJo2aZe-Uft5l_kKaCRJ6v35PHJnqJu74R7-TMKY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] 4 Verbs and CRUD","postDate":"1288274311","msgId":16778,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGltUnR1bXZtUjc0bkdHS1NDd0VUNU1xZGhNOWFhR3lQNW5PRm1jNEBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDRDQzk2ODM3LjQwMTAxMDRAd2VicjMub3JnPg==","referencesHeader":"PGlhYXZpNStyc2JoQGVHcm91cHMuY29tPgk8NENDOTY4MzcuNDAxMDEwNEB3ZWJyMy5vcmc+"},"prevInTopic":16777,"nextInTopic":16779,"prevInTime":16777,"nextInTime":16779,"topicId":16776,"numMessagesInTopic":5,"msgSnippet":"First, the CRUD-dy REST pattern, while common, is something that is applied to Web implementations; it s not something described in Fielding s","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 90521 invoked from network); 28 Oct 2010 13:58:32 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 28 Oct 2010 13:58:32 -0000\r\nX-Received: from unknown (HELO mail-fx0-f47.google.com) (209.85.161.47)\n  by mta3.grp.sp2.yahoo.com with SMTP; 28 Oct 2010 13:58:32 -0000\r\nX-Received: by mail-fx0-f47.google.com with SMTP id 3so2036959fxm.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 28 Oct 2010 06:58:31 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.79.77 with SMTP id o13mr4007030fak.113.1288274311676; Thu,\n 28 Oct 2010 06:58:31 -0700 (PDT)\r\nX-Received: by 10.223.13.67 with HTTP; Thu, 28 Oct 2010 06:58:31 -0700 (PDT)\r\nIn-Reply-To: &lt;4CC96837.4010104@...&gt;\r\nReferences: &lt;iaavi5+rsbh@...&gt;\n\t&lt;4CC96837.4010104@...&gt;\r\nDate: Thu, 28 Oct 2010 09:58:31 -0400\r\nX-Google-Sender-Auth: yiXB05wGtmdXX2hGHYdy8kDa4PQ\r\nMessage-ID: &lt;AANLkTimRtumvmR74nGGKSCwET5MqdhM9aaGyP5nOFmc4@...&gt;\r\nTo: nathan@...\r\nCc: Tom &lt;thomasamarrs@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] 4 Verbs and CRUD\r\nX-Yahoo-Group-Post: member; u=69164307; y=4etprtMtL8RKYUdqG--3Lg_hNYCoIrdCQ9XA2ca6Vp9-\r\nX-Yahoo-Profile: mamund\r\n\r\nFirst, the CRUD-dy REST pattern, while common, is something that is\n&quot;applie=\r\nd&quot; to Web implementations; it&#39;s not something described in\nFielding&#39;s disse=\r\nrtation[1]. Since REST is an architectural style (not\na coding style, not a=\r\nn application model, etc.), saying &quot;REST CRUD&quot; is\na bit like saying &quot;Gothic=\r\n Object-Orientation&quot; or some other humorous\nphrase.\n\nSecond, CRUD is not ad=\r\ndressed in the HTTP specifications[2]. True\nthere are methods that seem to =\r\nmap easily to the CRUD pattern (GET =3D\nread, DELETE=3Dwell, you know). How=\r\never, the spec does a good job of\ndetailing the way PUT is to be used to cr=\r\neate new resources as well as\nreplace existing ones[3]. In fact, POST and P=\r\nUT are differentiated\nprimary by the way the URI is treated for that reques=\r\nt:\nPOST: &quot;...accept the entity enclosed in the request as a new\nsubordinate=\r\n of the resource identified by the Request-URI...&quot;\nPUT: &quot;...the enclosed en=\r\ntity be stored under the supplied Request-URI.&quot;\n\nThird, Subbu Allamaraju&#39;s =\r\nbook &quot;RESTful Web Services Cookbook&quot;[4] does\na very good job (IMO) of descr=\r\nibing the concept of the &quot;Controller\nResource&quot; that can be used to handle a=\r\n wide range of no-CRUD-dy\nactivity (&quot;How and When to Use Controller Resourc=\r\nes&quot;[5]). There are\nseveral sections in his book devoted to resource operati=\r\nons that do\nnot fall into the CRUD model; too many to list here.\n\nFourth, a=\r\nn important aspect of the REST style is reliance on\nhypermedia. The book &quot;R=\r\nEST in Practice&quot; by\nWebber|Parastatidis|Robinson[6] does a very good job of=\r\n showing how\nthis can be done and introduces the concept of &quot;Application Do=\r\nmain\nProtocols&quot;[7] as a way to implement hypermedia. This has nothing to do=\r\n\nw/ CRUD and quite a bit to do w/ the REST style.\n\nFinally, I think the CUR=\r\nD-dy REST pattern arises when servers fall\ninto the habit of serializing re=\r\nader/write objects over the wire using\nHTTP. A number of frameworks actuall=\r\ny &quot;promote&quot; this habit since much\nof the framework is devoted to making it =\r\neasy to convert private\nobjects into public markup in XML, JSON, etc. I fou=\r\nnd the easiest way\nto get past this CRUD-dy pattern is to bypass these fram=\r\nework\n&quot;conveniences&quot;  and focus instead on crafting hypermedia requests and=\r\n\nresponses that support clean state transitions initiated by the\nclient. Th=\r\nere are many examples of this kind of work in the references\nI mentioned he=\r\nre; hopefully they give you some ideas on how to use the\nREST style w/o bei=\r\nng limited to CRUD implementations.\n\n[1] http://www.ics.uci.edu/~fielding/p=\r\nubs/dissertation/top.htm\n[2] http://www.w3.org/Protocols/rfc2616/rfc2616.ht=\r\nml\n[3] http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.6\n[4] htt=\r\np://oreilly.com/catalog/9780596801694\n[5] http://my.safaribooksonline.com/9=\r\n780596809140/recipe-how-to-use-controllers\n[6] http://oreilly.com/catalog/9=\r\n780596805838\n[7] http://my.safaribooksonline.com/9781449383312/hypermedia_p=\r\nrotocols\n\nmca\nhttp://amundsen.com/blog/\nhttp://twitter.com@mamund\nhttp://ma=\r\nmund.com/foaf.rdf#me\n\n\n#RESTFest 2010\nhttp://rest-fest.googlecode.com\n\n\n\n\nO=\r\nn Thu, Oct 28, 2010 at 08:10, Nathan &lt;nathan@...&gt; wrote:\n&gt; Tom wrote:=\r\n\n&gt;&gt; I&#39;ve been successfully using REST for a while now with both JAX-RS and =\r\nRuby on Rails, so I believe in the overall concept and use it in my archite=\r\ncture.\n&gt;&gt;\n&gt;&gt; It seems like everything now is just CRUD (i.e., Create/Read/U=\r\npdate/Delete) using the 4 HTTP request types. This is good, simple, and get=\r\ns you a long way.\n&gt;&gt;\n&gt;&gt; But is everything just CRUD? Isn&#39;t that too limitin=\r\ng? What about situations where CRUD isn&#39;t sophisticated enough or just does=\r\nn&#39;t fit with what you&#39;re trying to do? I&#39;ve heard that everything that can =\r\nbe expressed in a RESTful URL, but I&#39;m not buying that.\n&gt;&gt;\n&gt;&gt; Like I said, =\r\nI do believe in and love REST, and that it covers a LOT of situations. But =\r\nI don&#39;t think that REST applies to everything.\n&gt;&gt;\n&gt;&gt; What do other people t=\r\nhink?\n&gt;\n&gt; Personally I think that there isn&#39;t really a &quot;REST&quot;, and see it m=\r\nore as\n&gt; a set of constraints and a style which you apply to a situation in=\r\n order\n&gt; to assess how RESTful it is, and then use the constraints to make =\r\nit\n&gt; more RESTful.\n&gt;\n&gt; Usually this involves making things that bit simpler=\r\n and more crud-like,\n&gt; and personally I&#39;ve always seen many benefits in doi=\r\nng this.\n&gt;\n&gt; Certainly, I&#39;ve not found a need for anything beyond the core =\r\nset of\n&gt; HTTP Verbs and a couple from older specs + webdav.\n&gt;\n&gt; Best,\n&gt;\n&gt; N=\r\nathan\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n=\r\n&gt;\n&gt;\n&gt;\n\n"}}