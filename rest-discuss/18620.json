{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"1BbQ7DdEskb4W85Ak8cR4UuAE8XjGTZR4fgSkKy22MYGcdDReysOrmnoXyYn8YOjbLz5-41FOwNEnrIYVECFIJSTk5jf9wadgA1SIikuHAeauM1fRaURwB_g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Does the client contribute to the RESTfulness of an application?","postDate":"1331234119","msgId":18620,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpqYjBnNytrbHRuQGVHcm91cHMuY29tPg==","inReplyToHeader":"PENBQTJpRGlETjJzbVc4ZEwtaXB5QkRpU0ZfWlI4dDl4bkxtZkt4eHVkdFAwRzN6NTl3Z0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18618,"nextInTopic":18621,"prevInTime":18619,"nextInTime":18621,"topicId":18602,"numMessagesInTopic":50,"msgSnippet":"Will, I completely agree with your thoughts about the client and the validation of the REST design, at least of what I understand. My point a subtlety","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 40799 invoked from network); 8 Mar 2012 19:15:22 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.sp2.yahoo.com with QMQP; 8 Mar 2012 19:15:22 -0000\r\nX-Received: from unknown (HELO ng12-vm5.bullet.mail.gq1.yahoo.com) (98.136.219.148)\n  by mta3.grp.sp2.yahoo.com with SMTP; 8 Mar 2012 19:15:22 -0000\r\nX-Received: from [98.137.0.86] by ng12.bullet.mail.gq1.yahoo.com with NNFMP; 08 Mar 2012 19:15:22 -0000\r\nX-Received: from [69.147.65.151] by tg6.bullet.mail.gq1.yahoo.com with NNFMP; 08 Mar 2012 19:15:22 -0000\r\nX-Received: from [98.137.34.72] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 08 Mar 2012 19:15:22 -0000\r\nDate: Thu, 08 Mar 2012 19:15:19 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;jjb0g7+kltn@...&gt;\r\nIn-Reply-To: &lt;CAA2iDiDN2smW8dL-ipyBDiSF_ZR8t9xnLmfKxxudtP0G3z59wg@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Does the client contribute to the RESTfulness of an application?\r\nX-Yahoo-Group-Post: member; u=124198377; y=6TeqR25fdanxRf2g-40m7Ofc1BI2et1vSukiyl4PYSiEYy5E\r\nX-Yahoo-Profile: willmarpo\r\n\r\nWill, I completely agree with your thoughts about the client and the valida=\r\ntion of the REST design, at least of what I understand. My point a subtlety=\r\n different. Anyway, I understand REST was designed to meet some quality pro=\r\nperties that were needed, and the benefits of the client are just collatera=\r\nl damage due to its role of service consumer and display agent (yes, it say=\r\ns so in the dissertation).\n\nAn architectural style is not a complete defini=\r\ntion of the architecture, but just the ideas to achieve quality attributes.=\r\n \n\nI often say to my students that a system can implement perfectly all the=\r\n functional requirements, and meet all the quality property standards requi=\r\nred, but if it does not deliver business value, it is a failure.\n\nIn the sa=\r\nme sense, just one level down: The good REST design badge is achieved by im=\r\nplementing the REST constrains in your part of the system. But that badge w=\r\nill not assure the REST qualities are achieved in the whole system, or even=\r\n in the system of systems above. \nEven more: having a completely perfect RE=\r\nST design and execution at all components, doesn&#39;t mean the app will give t=\r\nhe business value and as such be a success. It may also fail.\n\nSo, to answe=\r\nr the original question, and a couple more I answered without being questio=\r\nned:\n1. Does the client contribute to the RESTfulness of an application? Ye=\r\ns if the client is part of the application. It will not invalidate the REST=\r\nFulness of the server, but it may do so for the whole system.\n\n2. Does desi=\r\ngning an app server side to be compliant with REST rules delivers the goals=\r\n of REST. Not necessarily, we need a compliant client and complaint interim=\r\n layers (yup, REST is a layered architecture).\n\n3. Does having a fully comp=\r\nliant REST architecture implemented is enough to be a success. No, it isn&#39;t=\r\n. \n\nThose were the points I wanted to share.\n\nCheers\n\nWilliam Martinez.\n\n--=\r\n- In rest-discuss@yahoogroups.com, Will Hartung &lt;willh@...&gt; wrote:\n&gt;\n&gt; As M=\r\nike says, and part of generic matra REST for me is that a bad client\n&gt; does=\r\n not invalidate a good REST design. By the nature of REST, many of the\n&gt; as=\r\npects of the architecture are in fact designed to benefit the client. And\n&gt;=\r\n other aspects simply cannot be counted on by the server in the wild anyway=\r\n.\n&gt; \n&gt; The HATEOS is a client advantage. If a client cares about the robust=\r\nness of\n&gt; their implementation, they will leverage HATEOS in order to help =\r\nkeep their\n&gt; systems running without interruption. Many applications that o=\r\nffer HATEOS,\n&gt; don&#39;t per se take advantage of it right off as it&#39;s mostly a=\r\n future\n&gt; proofing mechanism. You have simple apps on a single machine with=\r\n a few,\n&gt; solid services that will &quot;never change&quot; vs an app that is an aggr=\r\nessive\n&gt; user of HATEOS, and pretty much forces a client to leverage as wel=\r\nl (i.e.\n&gt; no URL will ever be the same kind of thing). Those are opposite e=\r\nxtremes.\n&gt; Most fall in the former sense, they&#39;re just easier to design and=\r\n manage\n&gt; unless you have a very compelling reason to do otherwise.\n&gt; \n&gt; So=\r\n, you can see how a &quot;dumb&quot; client can easily get by with the first type\n&gt; o=\r\nf application, but fail miserably with the latter.\n&gt; \n&gt; Caches are another =\r\nimportant aspect of the architecture that the system may\n&gt; or may not be ab=\r\nle to leverage. If your system implements their own caches,\n&gt; then you can =\r\nexpect to see a benefit and plan around it. At this point a\n&gt; bad client (i=\r\n.e. one the completely ignores the caching constraints) can\n&gt; put an excess=\r\nive load on your core system. They&#39;re still a REST client, in\n&gt; fact they c=\r\nan be an external cache themselves (perhaps a badly configured\n&gt; one).\n&gt; \n&gt;=\r\n Now, if you&#39;re not providing you own caching layer, and effectively hoping=\r\n\n&gt; to leverage external caches, then you have no room to complain when you =\r\nget\n&gt; several clients that perhaps ignore the caching aspect. When you&#39;re r=\r\nelying\n&gt; on external systems that you have no control over, you&#39;re on the b=\r\norderline\n&gt; of &quot;serendipitous reuse&quot;. The bright side of SU is the new valu=\r\ne it can\n&gt; provide, the down side is the &quot;serendipitous&quot; part.\n&gt; \n&gt; And fin=\r\nally, you can address the serendipitous reuse aspect. That too, is a\n&gt; bene=\r\nfit of the client. It lets someone use the data in ways not envisioned\n&gt; by=\r\n the application designers. Thus providing added value to the client\n&gt; Whet=\r\nher it&#39;s added value to the application is a different issue (maybe you\n&gt; d=\r\nidn&#39;t want or plan for all of this new traffic, then again maybe you&#39;re\n&gt; e=\r\nxcited to be offering new value that you didn&#39;t have to code and design).\n&gt;=\r\n \n&gt; So, yes, it takes good corporation between the clients and the servers =\r\nto\n&gt; get the highest level of benefits from the architecture, but the simpl=\r\ne\n&gt; truth is much of the design is really there for the clients in the firs=\r\nt\n&gt; place and they&#39;re only hurting themselves in the long run by not playin=\r\ng\n&gt; along.\n&gt; \n&gt; Regards,\n&gt; \n&gt; Will Hartung\n&gt; (willh@...)\n&gt; \n&gt; -- \n&gt; CONFIDE=\r\nNTIALITY NOTICE: The information contained in this electronic \n&gt; transmissi=\r\non may be confidential. If you are not an intended recipient, be \n&gt; aware t=\r\nhat any disclosure, copying, distribution or use of the information \n&gt; cont=\r\nained in this transmission is prohibited and may be unlawful. If you \n&gt; hav=\r\ne received this transmission in error, please notify us by email reply \n&gt; a=\r\nnd then erase it from your computer system.\n&gt;\n\n\n\n"}}