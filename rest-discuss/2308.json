{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":121832671,"authorName":"inthedarkplace","from":"&quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;","profile":"inthedarkplace","replyTo":"SENDER","senderId":"rxiJvicVxcADKoGgrRDBJkXYfKjCu_Qmg_nlA5PfI_WtkWN5eCxG9-OjH_v_ihgKLZ61tB0q1O0_GP1yonb6Y34OCuu7h_3hu71mL9Odxs_xig","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: When REST should and should not be used Was: Evidence","postDate":"1030742971","msgId":2308,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFrb28zcityOWpkQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNENkZFMTRDLkUxMzlERUZFQHByZXNjb2QubmV0Pg=="},"prevInTopic":2307,"nextInTopic":2309,"prevInTime":2307,"nextInTime":2309,"topicId":2205,"numMessagesInTopic":64,"msgSnippet":"This seems like the wrong tack to take. On close analaysis, Resource Oriented Programming is far more object oriented than SOAP/RPC. In fact there s a strong","rawEmail":"Return-Path: &lt;inthedarkplace@...&gt;\r\nX-Sender: inthedarkplace@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 30 Aug 2002 21:29:34 -0000\r\nReceived: (qmail 52037 invoked from network); 30 Aug 2002 21:29:33 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m3.grp.scd.yahoo.com with QMQP; 30 Aug 2002 21:29:33 -0000\r\nReceived: from unknown (HELO n15.grp.scd.yahoo.com) (66.218.66.70)\n  by mta1.grp.scd.yahoo.com with SMTP; 30 Aug 2002 21:29:33 -0000\r\nReceived: from [66.218.67.145] by n15.grp.scd.yahoo.com with NNFMP; 30 Aug 2002 21:29:32 -0000\r\nDate: Fri, 30 Aug 2002 21:29:31 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: When REST should and should not be used Was: Evidence\r\nMessage-ID: &lt;akoo3r+r9jd@...&gt;\r\nIn-Reply-To: &lt;3D6FE14C.E139DEFE@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2071\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;\r\nX-Yahoo-Group-Post: member; u=121832671\r\nX-Yahoo-Profile: inthedarkplace\r\n\r\n\nThis seems like the wrong tack to take. On close analaysis, Resource \nOriented Programming is far more object oriented than SOAP/RPC. In \nfact there&#39;s a strong case to be made that ROP is a degenerate case \nof OOP, simplified and constrained in order to meet the scalability \nrequirements of internet class applications. \n\n\n-itdp\n\n\n--- In rest-discuss@y..., Paul Prescod &lt;paul@p...&gt; wrote:\n&gt; Toivo &#92;&quot;Deutsch&#92;&quot; Lainevool wrote:\n&gt; &gt; \n&gt; &gt; I think you hit upon a key point here. &quot;Resource Orientation&quot; is \na great\n&gt; &gt; phrase for what you need to do to work with Rest.  I think that&#39;s \none of\n&gt; &gt; the key reasons many developers (myself included) have such a \nhard time\n&gt; &gt; getting their heads wrapped around REST.  We&#39;re used to Object-\nOriented\n&gt; &gt; Development, so SOAP/RPC is just a natural extension of that.  We \ntry to\n&gt; &gt; use REST and suddenly we are faced with a completely different \nparadigm,\n&gt; &gt; Resource-Oriented Development.\n&gt; \n&gt; Jeff Bone: &quot;It&#39;s a *really attractive*\n&gt; proposition to the OOP / IT guys to think of taking an existing \nobject\n&gt; model and, with no or minimal Web-specific &quot;glue&quot;, simply exporting\n&gt; those interfaces to the Web.&quot;\n&gt; \n&gt; http://www.xent.com/pipermail/fork/2001-August/002801.html\n&gt; \n&gt; (it&#39;s been an interesting year for REST)\n&gt; \n&gt; Anyhow, if people can succeed at doing standard OO over the network,\n&gt; more power to them. Why learn REST if you don&#39;t have to. But most \nof us\n&gt; believe that just exporting the OO local style to the Web will not \nwork. \n&gt; \n&gt;  * http://www.javatech.dk/javatech2/slides/Jini/img8.html\n&gt; \n&gt;  * http://research.sun.com/techrep/1994/abstract-29.html\n&gt; \n&gt; Interestingly, there are roughly three main camps in the web \nservices\n&gt; world, RPC, &quot;messaging&quot; (I use scare quotes because the term doesn&#39;t\n&gt; seem to be very well defined) and REST. Standard OO (with \naddressable\n&gt; object interfaces and type-specific interfaces) isn&#39;t really \nrepresented\n&gt; at all. Procedural, single-endpoint RPC may &quot;seem like&quot; the closest\n&gt; pattern but its limitations are also the most obvious and severe.\n&gt; -- \n&gt;  Paul Prescod\n\n\n"}}