{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"Roy T. Fielding &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"6li2uwoCpkpw2uOfuHoCLPSS4WVK9zzKkahwiPjFfnn6tyUMIPSvOaS0zkdIeKvYpQ4Fm0EOUJYHjYlAPRnpKUD9qTMZMiCUh80","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Querying with POST","postDate":"1098206187","msgId":4573,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlDQzIwQ0YyLTIxRjItMTFEOS04QTgzLTAwMDM5Mzc1MzkzNkBnYml2LmNvbT4=","inReplyToHeader":"PDIwMDQxMDE5MTQwNDA4LkdUMjQwNThAbWFya2Jha2VyLmNhPg==","referencesHeader":"PDIwMDQxMDA5MjAyNzI5LkdNMzIwNEBtYXJrYmFrZXIuY2E+IDxjbDJvOWMrY3JqMkBlR3JvdXBzLmNvbT4gPDIwMDQxMDE5MTIxNzM4LkdSMjQwNThAbWFya2Jha2VyLmNhPiA8NDE3NTBGNTUuNDAyMDYwNkBiaXR3b3JraW5nLm9yZz4gPDIwMDQxMDE5MTQwNDA4LkdUMjQwNThAbWFya2Jha2VyLmNhPg=="},"prevInTopic":4572,"nextInTopic":4574,"prevInTime":4572,"nextInTime":4574,"topicId":4554,"numMessagesInTopic":73,"msgSnippet":"... Nonsense, Mark.  Of course that is REST -- it is right in the HTTP standard.  The client is *told* by the server the URI of the new resource.  The client","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 16108 invoked from network); 19 Oct 2004 17:16:28 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m22.grp.scd.yahoo.com with QMQP; 19 Oct 2004 17:16:28 -0000\r\nReceived: from unknown (HELO fed1rmmtao10.cox.net) (68.230.241.29)\n  by mta5.grp.scd.yahoo.com with SMTP; 19 Oct 2004 17:16:28 -0000\r\nReceived: from [192.168.0.100] (really [68.4.71.218])\n          by fed1rmmtao10.cox.net\n          (InterMail vM.6.01.03.04 201-2131-111-106-20040729) with ESMTP\n          id &lt;20041019171628.HNTY25594.fed1rmmtao10.cox.net@[192.168.0.100]&gt;;\n          Tue, 19 Oct 2004 13:16:28 -0400\r\nIn-Reply-To: &lt;20041019140408.GT24058@...&gt;\r\nReferences: &lt;20041009202729.GM3204@...&gt; &lt;cl2o9c+crj2@...&gt; &lt;20041019121738.GR24058@...&gt; &lt;41750F55.4020606@...&gt; &lt;20041019140408.GT24058@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v619)\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;9CC20CF2-21F2-11D9-8A83-000393753936@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nCc: Joe Gregorio &lt;joe@...&gt;,\n rest-discuss@yahoogroups.com\r\nDate: Tue, 19 Oct 2004 10:16:27 -0700\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nX-Mailer: Apple Mail (2.619)\r\nX-eGroups-Remote-IP: 68.230.241.29\r\nFrom: Roy T. Fielding &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] Querying with POST\r\nX-Yahoo-Group-Post: member; u=175757792\r\nX-Yahoo-Profile: roy_fielding\r\n\r\n&gt;&gt; That is, we have GET, PUT, POST and DELETE, our fundamental\n&gt;&gt; ways of dereferencing a URI. We&#39;ll assume that we are putting\n&gt;&gt; together nice RESTful services and using all these methods correctly.\n&gt;&gt; What happens when we start combining these dereferences?\n&gt;&gt;\n&gt;&gt; For example:\n&gt;&gt;   POST is used to create new resources\n&gt;&gt;   GET is used to retrieve a representation of a resource\n&gt;&gt;\n&gt;&gt; On their own they&#39;re RESTful,\n&gt;\n&gt; No, the POST invocation isn&#39;t RESTful by itself.  In the examples\n&gt; people have given, the client expects that a particular POST invocation\n&gt; will result in a resource being created (and furthermore, that this\n&gt; resource will have a particular relationship to the POSTed\n&gt; representation).\n\nNonsense, Mark.  Of course that is REST -- it is right in the\nHTTP standard.  The client is *told* by the server the URI of\nthe new resource.  The client doesn&#39;t need any other expectation than\nsimply following HTTP.  This is no different from following application\nstate as presented by links within representations.\n\n&gt; Sometimes it&#39;s hard to see the forest for the trees here.  I&#39;ve found \n&gt; it\n&gt; helpful to focus on one of the primary objectives of the uniform\n&gt; interface; substitutability, i.e. the ability to substitute one service\n&gt; implementing POST with another service implementing POST.\n&gt; Query-via-POST fails this test because the expectation about the query\n&gt; results being returned cannot be provided by other services.  For\n&gt; example, if one swapped in a resource which spat out the input document\n&gt; to a printer, then clearly it wouldn&#39;t meet the expectation of\n&gt; performing a query.\n\nSorry, that makes no sense.  The interface is substitutable.  Resources\nare not substitutable.  Nobody has an expectation that you can replace\none resource with a different resource and have continuation of\nsemantics.  What you get with REST is an interface that tells you\nhow it works.  POST is part of that interface when used right.\n\n....Roy\n\n\n"}}