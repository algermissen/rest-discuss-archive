{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"ALnyToT4NmssilP-4fUz1acGQOOaT7KGRvWpVU4H40AioAokZhSlT8tUr3qFeFxTQr3P5SXURbAwavlc413EDsMxonwZNiRyCIUSQYpcdA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Methods and the uniform interface [was: Re: [rest-discuss] REST isn&#39;t hard to learn, it&#39;s just taught wrong.","postDate":"1261618429","msgId":14393,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjIzMTgzMzQ5LmNmOTJjYjkxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRCMzJCQkFBLjIwODA5MDdAZ21haWwuY29tPg==","referencesHeader":"PDQ5OTg4ODQ0MDkxMjIxMDYwN3EzMTdlMmQ4aTQ3OWEzNjU2ZjQxMjViZWFAbWFpbC5nbWFpbC5jb20+CTxiNTQ4ZGY2NTA5MTIyMTA3MTl0MzdhODhmNzZ5ZGUxY2JlODdjNjY3NTA1YUBtYWlsLmdtYWlsLmNvbT4JPDQ5OTg4ODQ0MDkxMjIxMDg1M2k1OTJlNmQ1dTY3ZmI1ZmZmNzk3ZDBmMjRAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIyMTE5MzY0MC45YzY5M2E5YS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QjMxMDBBNC4xMDUwMDAxQGdtYWlsLmNvbT4JPDIwMDkxMjIzMTMxNTEwLjgzYzNiODcyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDRCMzJCQkFBLjIwODA5MDdAZ21haWwuY29tPg=="},"prevInTopic":14391,"nextInTopic":14398,"prevInTime":14392,"nextInTime":14394,"topicId":14293,"numMessagesInTopic":37,"msgSnippet":"I have no idea if your proposed use of DELETE is RESTful or not, as you have not given me any notion of the specification of application/assets+ json.  Does","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21319 invoked from network); 24 Dec 2009 01:34:02 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 24 Dec 2009 01:34:02 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 24 Dec 2009 01:34:02 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 160AB509B4;\n\tWed, 23 Dec 2009 20:33:59 -0500 (EST)\r\nDate: Wed, 23 Dec 2009 18:33:49 -0700\r\nTo: Roger Gonzalez &lt;roger.gonzalez@...&gt;\r\nCc: Tim Williams &lt;williamstw@...&gt;, mike amundsen &lt;mamund@...&gt;,\n berend@..., rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20091223183349.cf92cb91.eric@...&gt;\r\nIn-Reply-To: &lt;4B32BBAA.2080907@...&gt;\r\nReferences: &lt;499888440912210607q317e2d8i479a3656f4125bea@...&gt;\n\t&lt;b548df650912210719t37a88f76yde1cbe87c667505a@...&gt;\n\t&lt;499888440912210853i592e6d5u67fb5fff797d0f24@...&gt;\n\t&lt;20091221193640.9c693a9a.eric@...&gt;\n\t&lt;4B3100A4.1050001@...&gt;\n\t&lt;20091223131510.83c3b872.eric@...&gt;\n\t&lt;4B32BBAA.2080907@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: Methods and the uniform interface [was: Re: [rest-discuss] REST\n isn&#39;t hard to learn, it&#39;s just taught wrong.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nI have no idea if your proposed use of DELETE is RESTful or not, as you\nhave not given me any notion of the specification of application/assets+\njson.  Does the media type definition encompass DELETE?  Even if it\ndoes, you still aren&#39;t instructing the client how to DELETE an image\nthrough a hypertext representation.  You&#39;re relying on out-of-band\nknowledge hard-coded to a client&#39;s DELETE facility, the media type\nisn&#39;t defining any sort of selection mechanism or button to push to\ndrive application state.\n\nIt is trivial in Xforms to create a standard listbox of image URIs,\nallowing one or more to be selected, with a DELETE button for the user\nto press when the selection of images to remove is complete.  Each\nimage is removed with a separate HTTP DELETE and success/failure is\nreported back to the user for each image selected for removal.  It does\nnot matter that image/jpeg doesn&#39;t encompass DELETE, what matters is\nthat hypertext instructed the client how to carry out the user request\nby using application/xhtml+xml, which encompasses DELETE.  That&#39;s REST.\n\n-Eric\n\nRoger Gonzalez wrote:\n&gt;\n&gt; Eric J. Bowman wrote:\n&gt; &gt; Roger Gonzalez wrote:\n&gt; &gt;   \n&gt; &gt;&gt; It strikes me as\n&gt; &gt;&gt; inefficient and unnecessarily revisionist to force every &quot;dumb&quot;\n&gt; &gt;&gt; media type to be wrapped and manipulated through a hypertext proxy\n&gt; &gt;&gt; resource. \n&gt; &gt;&gt;\n&gt; &gt;&gt;     \n&gt; &gt;\n&gt; &gt; This isn&#39;t revisionist; it&#39;s part of the REST architectural style.\n&gt; &gt; Of course it&#39;s less efficient, the decsion is whether or not the\n&gt; &gt; benefits of the style outweigh the consequences:\n&gt; &gt;\n&gt; &gt; &quot;\n&gt; &gt; The trade-off, though, is that a uniform interface degrades\n&gt; &gt; efficiency, since information is transferred in a standardized form\n&gt; &gt; rather than one which is specific to an application&#39;s needs.\n&gt; &gt; &quot;\n&gt; &gt;\n&gt; &gt; If this degradation in efficiency outweighs the benefits of the\n&gt; &gt; uniform REST interface for your system, then don&#39;t apply this\n&gt; &gt; constraint.\n&gt; &gt;\n&gt; &gt; -Eric\n&gt; &gt;   \n&gt; Your selective quotation of my message misses my point.  I&#39;m not\n&gt; talking about the uniform interface between components (as Roy is,\n&gt; which I agree is valuable), I&#39;m talking about your assertion that the\n&gt; uniform interface does not apply to a resource whose client-side\n&gt; representation is not &quot;hypertexty&quot;, and that DELETE on an image isn&#39;t\n&gt; legal.  I believe that it does apply, and that it is legal.\n&gt; \n&gt; I feel you&#39;re overreading &quot;hypertext is the engine&quot; as &quot;every \n&gt; representation must be hypertext&quot;.  I strongly believe that it&#39;s \n&gt; perfectly legitimate to have initial hypertext point you to\n&gt; absolutely any resource, even those with a dumb media type, and you\n&gt; should be allowed to interact with that resource using the uniform\n&gt; interface. It&#39;s a leaf node in the hypertext graph.  There are layers\n&gt; of contract involved; the per-resource contract (what control\n&gt; messages will this particular resource accept; i.e. what content\n&gt; types) but then there are higher-level contracts (what operations can\n&gt; be performed on a given resource).\n&gt; \n&gt; In an OO sense, given a Collection&lt;User&gt;, it wouldn&#39;t make sense for \n&gt; User to have to implement DeletableFromCollections in order to be \n&gt; deleted.  That actually interferes with abstraction; the User\n&gt; shouldn&#39;t even need to know whether it is ever in a collection, or\n&gt; sitting around as a temp object, or whatever.  Same goes for\n&gt; resources.  The confusion is that we think we&#39;re talking directly to\n&gt; the resource, but we really aren&#39;t, we&#39;re talking through an agent.\n&gt; \n&gt; PUT: hey agent, here&#39;s a resource representation, m\n&gt; \n&gt; Roy sez: &quot;REST connectors provide a generic interface for accessing\n&gt; and manipulating the value set of a resource.&quot;\n&gt; \n&gt; Therefore, there is nothing wrong with:\n&gt; \n&gt; GET /bob/assets\n&gt; application/assets+json\n&gt; {\n&gt;      &quot;assets&quot;: [&quot;http://server/bob/vacation.jpg&quot;, \n&gt; &quot;http://server/bob/wife.gif&quot;]\n&gt; }\n&gt; DELETE /bob/vacation.jpg\n&gt; \n&gt; The resource &quot;/bob/assets&quot; acted as the hypertext engine, linking me\n&gt; to a bunch of image resources, and I sent a control message to the\n&gt; http connector requesting that one of them be deleted.  The media\n&gt; type of the resource I deleted was frankly irrelevant.  The notion\n&gt; that I can&#39;t delete an image/jpg off a server until someone creates a\n&gt; new &quot;hypertext image&quot; format that advertises its own contract is what\n&gt; I object to. (Besides, image/jpg is just a representation, the\n&gt; backing resource is anonymous to the client, so I fail to see why the\n&gt; &quot;manipulating the value set of a resource&quot; has to do with one\n&gt; representation rather than the more important aspect: the uniform\n&gt; interface for the connector.)\n&gt; \n&gt; -rg\n&gt; \n\n"}}