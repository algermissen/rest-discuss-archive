{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"T_hmH9Cd4r-V3X1MbKlgBFA50H27qw5_UEOAwjAHpSdXQmt7Kr7sKIDbzfhmTtHBv_dGzRdd1VMG3cPWY_ky8RAKkhhts3od_g","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] HTTP request and &quot;type safety&quot;","postDate":"1268585425","msgId":15036,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDMyNDAwOS45MDc4Ny5xbUB3ZWI1NTkwNS5tYWlsLnJlMy55YWhvby5jb20+","inReplyToHeader":"PDI4ZTI1NzExMTAwMzEzMDgzN3YyYmY2N2E1OHkzMTYwYWMzMjg0NTVlOThjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15035,"nextInTopic":15037,"prevInTime":15035,"nextInTime":15037,"topicId":15020,"numMessagesInTopic":18,"msgSnippet":"Hi Peter, As for why I care.. I don t.. I thought it would not be HATEOAS if a URI could be accessed directly and not discovered ? From all the posts, it","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 67603 invoked from network); 14 Mar 2010 16:50:27 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m12.grp.re1.yahoo.com with QMQP; 14 Mar 2010 16:50:27 -0000\r\nX-Received: from unknown (HELO n10.bullet.re3.yahoo.com) (68.142.237.123)\n  by mta3.grp.sp2.yahoo.com with SMTP; 14 Mar 2010 16:50:26 -0000\r\nX-Received: from [68.142.237.89] by n10.bullet.re3.yahoo.com with NNFMP; 14 Mar 2010 16:50:25 -0000\r\nX-Received: from [66.196.114.76] by t5.bullet.re3.yahoo.com with NNFMP; 14 Mar 2010 16:50:25 -0000\r\nX-Received: from [127.0.0.1] by omp305.mail.re3.yahoo.com with NNFMP; 14 Mar 2010 16:50:25 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 429595.91740.bm@...\r\nX-Received: (qmail 92331 invoked by uid 60001); 14 Mar 2010 16:50:25 -0000\r\nMessage-ID: &lt;324009.90787.qm@...&gt;\r\nX-YMail-OSG: srOrOfwVM1m8cRSE65X3Z7vjyNBcOWZIUW2eeCCekb072uy\n e5TIW9UaJ6ZOsVbNY8HRQyjY3ZENFJUx0I3AopY1aSANUTsjM3TUr7FWWcT3\n JMRmIuiFldbmgkq.DTEnU5lzQyLjH3C5B9yOWJZzaQXWfcx3Y8jhdNkM.P7Y\n WZ9uqoO6O1k4Z.ur3RXpjC5CrC7Ouwsnvy2ke.sSAw69AXFIgYGFsJiKMAaV\n 8MXvwkrwYBcPKl0lXkctUka67.w99WsiSHpcO880j9Y04rpZK6kI_AOrMK8Q\n SEQYJtEvBTo1ekD5QLt1zOC1IuwNMR55dMY4pbTeRjc6x\r\nX-Received: from [99.22.138.61] by web55905.mail.re3.yahoo.com via HTTP; Sun, 14 Mar 2010 09:50:25 PDT\r\nX-Mailer: YahooMailClassic/9.2.12 YahooMailWebService/0.8.100.260964\r\nDate: Sun, 14 Mar 2010 09:50:25 -0700 (PDT)\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;,\n  Peter Williams &lt;pezra@...&gt;\r\nIn-Reply-To: &lt;28e257111003130837v2bf67a58y3160ac328455e98c@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-104753428-1268585425=:90787&quot;\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Re: [rest-discuss] HTTP request and &quot;type safety&quot;\r\nX-Yahoo-Group-Post: member; u=272793929; y=lTPOUDTRs5iOsL3MWFKhbdTSK75t4CdMV4ZbaZn2LWEHrUZL\r\nX-Yahoo-Profile: andjarnic\r\n\r\n\r\n--0-104753428-1268585425=:90787\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Peter,\nAs for why I care.. I don&#39;t.. I thought it would not be HATEOAS i=\r\nf a URI could be accessed directly and not &quot;discovered&quot;? From all the posts=\r\n, it seemed to me that if you accessed any URI directly, and not via an ini=\r\ntial URI entry point that then gave you URIs you could use based on the res=\r\nource state, I figured that was not the HATEOAS/REST way. I couldn&#39;t figure=\r\n out how you could actually validate that a URI was called based on a URI y=\r\nou passed back previously, given the no state restraint in terms of resourc=\r\nes on the server side.\nI suppose tho, that a client should not save URIs fo=\r\nr future direct access, as data may change, even resources could change, he=\r\nnce the ability to evolve the server side without breaking the client.\n\n---=\r\n On Sat, 3/13/10, Peter Williams &lt;pezra@...&gt; wrote:\n\nFrom: Pet=\r\ner Williams &lt;pezra@...&gt;\nSubject: Re: [rest-discuss] HTTP reque=\r\nst and &quot;type safety&quot;\nTo: &quot;Kevin Duffey&quot; &lt;andjarnic@...&gt;, &quot;Rest List&quot; =\r\n&lt;rest-discuss@yahoogroups.com&gt;\nDate: Saturday, March 13, 2010, 8:37 AM\n\nOn =\r\nFri, Mar 12, 2010 at 9:57 PM, Kevin Duffey &lt;andjarnic@...&gt; wrote:\n\n&gt; =\r\nI am confused a bit about this. I was just thinking this today. If I\n&gt; prov=\r\nide a single URI point of entry, and an OPTION or GET request is\n&gt; sent, it=\r\n returns some relevant links that can be called based on the\n&gt; state of the=\r\n resource. Now, to get those links, I have to first\n&gt; access the point of e=\r\nntry URI. What happens if say a bot program (or\n&gt; even a client developer) =\r\ndecides to cache/save these URIs that\n&gt; return. Then at some point later, c=\r\nall those URIs directly instead\n&gt; of the point of entry URI first to get th=\r\nose URIs back. They could\n&gt; even navigate some links for a while, then save=\r\n the various URIs\n&gt; deeper down. Later, call those directly.\n\nA URI that is=\r\n saved -- iow, bookmarked -- counts as an entry point\nURI.=A0 This sort of =\r\nbookmarking is required to implement many kinds of\nsystems composed of mult=\r\niple components that expose REST style\ninterfaces.\n\nOf course, there is no =\r\nguarantee that URIs saved by a client will\nremain valid over time.=A0 Clien=\r\nts that save URIs must accept that the\nresources those URIs name may disapp=\r\near as any point in the future.\nWell behaved servers do not disable URIs ca=\r\npriciously (see Cool URIs),\nbut resources do have life-cycles that are gove=\r\nrned by their domain.\n\n\n&gt; My confusion of this is because the server side i=\r\ns stateless. It\n&gt; retains no state. So how can I validate a URI that a clie=\r\nnt/bot\n&gt; saved from some previous use, to make sure it&#39;s valid at the time =\r\nof\n&gt; call? I have no state on the server side that says &quot;this URI is\n&gt; bein=\r\ng called BEFORE the URI that returns this URI was called.. it&#39;s\n&gt; a bad cal=\r\nl&quot;. So I am unsure as to how to validate every single URI\n&gt; call to make su=\r\nre it was called at a time when it should be called,\n&gt; and not just randoml=\r\ny out of order. I suppse we can use some sort of\n&gt; timestamp on every singl=\r\ne URI that goes back, not sure entirely how\n&gt; that would work at this point=\r\n, but I suppose the server would check\n&gt; this value when it came back in to=\r\n the current server time stamp and\n&gt; make sure it&#39;s within so many minutes =\r\nof when it was issued. But a\n&gt; smart client developer/bot could possibly fi=\r\ngure that out, and\n&gt; update this value before making the request, and since=\r\n the server\n&gt; keeps no state, if the modified timestamp is within the right=\r\n time\n&gt; of the server, it would void that route of validating a URI.\n\nWhy d=\r\no you care if the resources are accessed &quot;out of order&quot;?\n\nIf there are doma=\r\nin reasons for a resource to be available for a\nlimited time, the applicati=\r\non logic should destroy/deactivate the\nresource once it is no longer valid.=\r\n=A0 In that case, this hypothetical\nclient with get a 410 or 404 when it at=\r\ntempts to make requests of the\nnow nonexistent resource.\n\nIf there is no do=\r\nmain reason for the resource to expire why is it a\nproblem for a client to =\r\nsave a URI and the access it later?\n\nPeter\nhttp://barelyenough.org\n\n\n\n     =\r\n \r\n--0-104753428-1268585425=:90787\r\nContent-Type: text/html; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;table cellspacing=3D&quot;0&quot; cellpadding=3D&quot;0&quot; border=3D&quot;0&quot; &gt;&lt;tr&gt;&lt;td valign=3D&quot;=\r\ntop&quot; style=3D&quot;font: inherit;&quot;&gt;Hi Peter,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As for why I car=\r\ne.. I don&#39;t.. I thought it would not be HATEOAS if a URI could be accessed =\r\ndirectly and not &quot;discovered&quot;? From all the posts, it seemed to me that if =\r\nyou accessed any URI directly, and not via an initial URI entry point that =\r\nthen gave you URIs you could use based on the resource state, I figured tha=\r\nt was not the HATEOAS/REST way. I couldn&#39;t figure out how you could actuall=\r\ny validate that a URI was called based on a URI you passed back previously,=\r\n given the no state restraint in terms of resources on the server side.&lt;/di=\r\nv&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I suppose tho, that a client should not save URIs for=\r\n future direct access, as data may change, even resources could change, hen=\r\nce the ability to evolve the server side without breaking the client.&lt;/div&gt;=\r\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;--- On &lt;b&gt;Sat, 3/13/10, Peter Williams\n &lt;i&gt;&lt;pezr=\r\na@...&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;&lt;blockquote style=3D&quot;border-left: =\r\n2px solid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;&quot;&gt;&lt;br&gt;From:=\r\n Peter Williams &lt;pezra@...&gt;&lt;br&gt;Subject: Re: [rest-discus=\r\ns] HTTP request and &quot;type safety&quot;&lt;br&gt;To: &quot;Kevin Duffey&quot; &lt;andjarnic@yahoo=\r\n.com&gt;, &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;&lt;br&gt;Date: Saturda=\r\ny, March 13, 2010, 8:37 AM&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;plainMail&quot;&gt;On Fri, Mar 12, =\r\n2010 at 9:57 PM, Kevin Duffey &lt;&lt;a ymailto=3D&quot;mailto:andjarnic@...&quot;=\r\n href=3D&quot;/mc/compose?to=3Dandjarnic@...&quot;&gt;andjarnic@...&lt;/a&gt;&gt; =\r\nwrote:&lt;br&gt;&lt;br&gt;&gt; I am confused a bit about this. I was just thinking this=\r\n today. If I&lt;br&gt;&gt; provide a single URI point of entry, and an OPTION or =\r\nGET request is&lt;br&gt;&gt; sent, it returns some relevant links that can be cal=\r\nled based on the&lt;br&gt;&gt; state of the resource. Now, to get those links, I =\r\nhave to first&lt;br&gt;&gt; access the point of entry URI. What happens\n if say a=\r\n bot program (or&lt;br&gt;&gt; even a client developer) decides to cache/save the=\r\nse URIs that&lt;br&gt;&gt; return. Then at some point later, call those URIs dire=\r\nctly instead&lt;br&gt;&gt; of the point of entry URI first to get those URIs back=\r\n. They could&lt;br&gt;&gt; even navigate some links for a while, then save the va=\r\nrious URIs&lt;br&gt;&gt; deeper down. Later, call those directly.&lt;br&gt;&lt;br&gt;A URI th=\r\nat is saved -- iow, bookmarked -- counts as an entry point&lt;br&gt;URI.&nbsp; Th=\r\nis sort of bookmarking is required to implement many kinds of&lt;br&gt;systems co=\r\nmposed of multiple components that expose REST style&lt;br&gt;interfaces.&lt;br&gt;&lt;br&gt;=\r\nOf course, there is no guarantee that URIs saved by a client will&lt;br&gt;remain=\r\n valid over time.&nbsp; Clients that save URIs must accept that the&lt;br&gt;reso=\r\nurces those URIs name may disappear as any point in the future.&lt;br&gt;Well beh=\r\naved servers do not disable URIs capriciously (see Cool URIs),&lt;br&gt;but resou=\r\nrces do have life-cycles that are governed by their\n domain.&lt;br&gt;&lt;br&gt;&lt;br&gt;&gt=\r\n; My confusion of this is because the server side is stateless. It&lt;br&gt;&gt; =\r\nretains no state. So how can I validate a URI that a client/bot&lt;br&gt;&gt; sav=\r\ned from some previous use, to make sure it&#39;s valid at the time of&lt;br&gt;&gt; c=\r\nall? I have no state on the server side that says &quot;this URI is&lt;br&gt;&gt; bein=\r\ng called BEFORE the URI that returns this URI was called.. it&#39;s&lt;br&gt;&gt; a b=\r\nad call&quot;. So I am unsure as to how to validate every single URI&lt;br&gt;&gt; cal=\r\nl to make sure it was called at a time when it should be called,&lt;br&gt;&gt; an=\r\nd not just randomly out of order. I suppse we can use some sort of&lt;br&gt;&gt; =\r\ntimestamp on every single URI that goes back, not sure entirely how&lt;br&gt;&gt;=\r\n that would work at this point, but I suppose the server would check&lt;br&gt;&gt=\r\n; this value when it came back in to the current server time stamp and&lt;br&gt;&=\r\ngt; make sure it&#39;s within so many minutes of when it was issued. But a&lt;br&gt;&=\r\ngt; smart client developer/bot could possibly\n figure that out, and&lt;br&gt;&gt;=\r\n update this value before making the request, and since the server&lt;br&gt;&gt; =\r\nkeeps no state, if the modified timestamp is within the right time&lt;br&gt;&gt; =\r\nof the server, it would void that route of validating a URI.&lt;br&gt;&lt;br&gt;Why do =\r\nyou care if the resources are accessed &quot;out of order&quot;?&lt;br&gt;&lt;br&gt;If there are =\r\ndomain reasons for a resource to be available for a&lt;br&gt;limited time, the ap=\r\nplication logic should destroy/deactivate the&lt;br&gt;resource once it is no lon=\r\nger valid.&nbsp; In that case, this hypothetical&lt;br&gt;client with get a 410 o=\r\nr 404 when it attempts to make requests of the&lt;br&gt;now nonexistent resource.=\r\n&lt;br&gt;&lt;br&gt;If there is no domain reason for the resource to expire why is it a=\r\n&lt;br&gt;problem for a client to save a URI and the access it later?&lt;br&gt;&lt;br&gt;Pete=\r\nr&lt;br&gt;&lt;a href=3D&quot;http://barelyenough.org&quot; target=3D&quot;_blank&quot;&gt;http://barelyeno=\r\nugh.org&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;\n\n      \r\n--0-104753428-1268585425=:90787--\r\n\n"}}