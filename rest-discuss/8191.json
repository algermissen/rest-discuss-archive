{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"c8JRQBYueZJtK3m1L02oUmBz07LrmeFSaDqVyEG62BTTxQnRT-znFR-ienDLdgE6BJjkqaaepyiHTSY0ZVRNVU7O0I4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: {Disarmed} Re: [rest-discuss] Interface for non-idempotent fetch?","postDate":"1175679155","msgId":8191,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2MTM3MEIzLjYwNTAxMDJAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDQ2MTM2OTJDLjcwMjAyMDlAYmxhY2tuaWdodC5pZT4=","referencesHeader":"PDgxODE1MzA0LTc0M0MtNDg5OC1BNzdDLTM0NzhCNzMzNEIxRUBjbGFyaW5vdmEuY29tPiA8ODdpcmNjYW85cy5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw0NjEzNjkyQy43MDIwMjA5QGJsYWNrbmlnaHQuaWU+"},"prevInTopic":8190,"nextInTopic":8192,"prevInTime":8190,"nextInTime":8192,"topicId":8185,"numMessagesInTopic":50,"msgSnippet":"... Your problem is that what you are doing is not really fetch. Problem solved :) That said, if there was no issue with id s getting lost then I see no ","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 93495 invoked from network); 4 Apr 2007 09:33:41 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m48.grp.scd.yahoo.com with QMQP; 4 Apr 2007 09:33:41 -0000\r\nReceived: from unknown (HELO mail.arena1.com) (63.116.216.131)\n  by mta6.grp.scd.yahoo.com with SMTP; 4 Apr 2007 09:33:41 -0000\r\nReceived: from UnknownHost [83.70.80.115] by mail.arena1.com with SMTP;\n   Wed, 4 Apr 2007 05:33:02 -0400\r\nMessage-ID: &lt;461370B3.6050102@...&gt;\r\nDate: Wed, 04 Apr 2007 10:32:35 +0100\r\nUser-Agent: Thunderbird 1.5.0.10 (Windows/20070221)\r\nMIME-Version: 1.0\r\nTo: Keith Gaughan &lt;keith@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;81815304-743C-4898-A77C-3478B7334B1E@...&gt; &lt;87irccao9s.fsf@...&gt; &lt;4613692C.7020209@...&gt;\r\nIn-Reply-To: &lt;4613692C.7020209@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [83.70.80.115]\r\nX-Declude-Spoolname: 2102424779722.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.14 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [4] at 05:33:09 on 04 Apr 2007\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: {Disarmed} Re: [rest-discuss] Interface for non-idempotent fetch?\r\nX-Yahoo-Group-Post: member; u=164939419; y=t7FpXexVc1BPLWLFnGu1ihKy5i2J58M6NRTZ8Q1rAn5r0gaH\r\nX-Yahoo-Profile: hack_poet\r\n\r\nKeith Gaughan wrote:\n&gt; That&#39;s not really a fetch then, is it?\n\nYour problem is that what you are doing is not really fetch. Problem \nsolved :)\n\nThat said, if there was no issue with id&#39;s getting lost then I see no \nproblem in GETting it as long as it is clearly marked as not cacheable.\n\nResources can change over time (the fact that time is a factor in REST \nis often neglected). Conceptually you have a resource that changes so \nquickly that it will never have the same representation from one GET to \nthe next.\n\nThe fact that it&#39;s the actual GET that causes this change to be apparent \nis just an implementation detail :)\n\nThat&#39;s a tad facetious perhaps, but consider the case where each time \nthe GET is done it calls into a UUID algorithm - you&#39;ve no side-effects \nfrom the GET, but you&#39;re still getting a different ID each time. \nUpdating a sequence based on when a GET is done has the same effects. As \nfar as the bytes on the wire are concerned, both just give you a \ndifferent response each time.\n\nIf however the way in which the GET causes changes is important (e.g. \nit&#39;s important that items in the sequence aren&#39;t lost) then the nature \nof the side-effect becomes important, and GET ceases to be appropriate.\n\n\n"}}