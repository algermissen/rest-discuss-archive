{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"_46J43ToOMwZMt4xxT5LEeP0t36AI8RU3r4-OmJCylG3286TPeCsBv0SUSS0P2LLvy79veIGTMABNenfr5ANW8hIr9Molg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Reliable HTTP","postDate":"1011917659","msgId":245,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTBBMzVCLjg0RkQwOTI2QHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTQzNDM2MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":234,"nextInTopic":246,"prevInTime":244,"nextInTime":246,"topicId":208,"numMessagesInTopic":32,"msgSnippet":"... But the failure and keep trying parts have nothing to do with this problem. That s why I think it is orthogonal. Between your *original* GET and your","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 25 Jan 2002 00:25:12 -0000\r\nReceived: (qmail 33848 invoked from network); 25 Jan 2002 00:15:17 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m8.grp.snv.yahoo.com with QMQP; 25 Jan 2002 00:15:17 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 25 Jan 2002 00:15:16 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0P0FE110425\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 16:15:14 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0P0FDe01642\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 16:15:13 -0800\r\nMessage-ID: &lt;3C50A35B.84FD0926@...&gt;\r\nDate: Thu, 24 Jan 2002 16:14:19 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Reliable HTTP\r\nReferences: &lt;Pine.WNT.4.43.0201241434360.1892-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; Developers should be very careful here.   All of\n&gt; these methods are time dependent and there is no\n&gt; guarantee that multiple idempotent requests won&#39;t\n&gt; interfere with one another.  Order matters.\n&gt; \n&gt; Suppose you decide to increment a value by 1 and\n&gt; then by 100.  Now suppose you GET the value 25.\n&gt; You then PUT the value 26, but it fails so you\n&gt; keep trying.  While this is happening you GET the\n&gt; value 25 again, and PUT the value 125. \n\nBut the &quot;failure&quot; and &quot;keep trying&quot; parts have nothing to do with this\nproblem. That&#39;s why I think it is orthogonal. Between your *original*\nGET and your PUT someone could have twiddled the data.\n\nAlso, in this case it would probably be better to let the server merge\nthe data using POST. Of course the lost update problem is unavaoidable\nwhen only the client can merge the data (i.e. with human authors).\n\n&gt;...\n&gt; Even if the server is issuing message-ids and only\n&gt; processes RPOSTS in order of message-ids:\n&gt; a. Nothing in the spec says that clients have to\n&gt; use message-id&#39;s in the order in which they were\n&gt; issued.\n\nAre we talking about multiple clients or a single client? If a single\nclient then the single client can sychronize its own messages! Why\nshould the server worry about that?\n\nIf we&#39;re talking about multiple clients, then the service should be\nimplemented so that order doesn&#39;t matter. If syncronization is important\nthen I guess we need some kind of &quot;lock&quot; resources to keep clients in\norder. I can&#39;t think of an application of this off the top of my head. \n\n&gt;...\n&gt; 1. clients should issue their own message-ids.  If\n&gt; they don&#39;t want to get stepped on, they should\n&gt; make them sufficiently unique (and secret).\n\nI&#39;m not happy trusting the clients not to step on each other.\n\n&gt; 2. reliable messaging looks like repeat requests\n\nTo the server application it should not. The reliable messaging\ninfrastructure (i.e. part of the web application framework) should merge\nthem.\n\n&gt; 3. you may want to support a seriality protocol in\n&gt; which clients send a cardinality header (I haven&#39;t\n&gt; decided if this should really be an ordinality\n&gt; header, leaving the cardinality header for the\n&gt; transaction protocols).\n\nI don&#39;t understand why the server is responsible for the client keeping\nits ducks in a row and I don&#39;t think that the clients should trust the\nserver to verify the semantics of an &quot;optional&quot; header. Many servers\ncould just let this pass quietly.\n\n Paul Prescod\n\n"}}