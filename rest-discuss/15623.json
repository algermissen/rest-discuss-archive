{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"tpbOa6m9AqCXc_SnD-V6KdSBktBO34X76GW3Xr69ObG_PQ_vrtxJZJ9BTxuemMOU5rT-pcWSiXVZ5zeqKPTOlJW6849ZfYMxNLcjOwwYyA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Fwd: [rest-discuss] Re: Determining which Media type for post/put","postDate":"1276108437","msgId":15623,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjA5MTIzMzU3LjJlMGZiYzk1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGlsY3lvcm5NSUwwOUNEc3RpUGl6dm01RkJ3b1VJcEsxUzJvQ0RsMEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGltTzROM0ZTeDg5bjR2Sm43RkpsMzJYaC1ERnNZUl93dG5Pd3VYdUBtYWlsLmdtYWlsLmNvbT4JPDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2MTU2RDlFNkNAUFJJU00uY2FmZmVpbmUtaXQubmV0Pgk8QUFOTGtUaW5wdXlJRmtndm41U1FkZXpIZWJqcHB6ajE3U1B2SUJrR29VOEI4QG1haWwuZ21haWwuY29tPgk8QUFOTGtUaWxjeGM3bkZEYVUtTmY2aDd4STd3NWpZUXBERVJFeUk2YUw0UUFlQG1haWwuZ21haWwuY29tPgk8QUFOTGtUaWtWVjQ1WG4waDk1UDdodmwwM2hGNW5acU14TW95eGtseTlOcEE1QG1haWwuZ21haWwuY29tPgk8QUFOTGtUaWtMbTJBUkJlUGtta0ZuSmxqOVVTc0owSC1Fdnp4cGQ0Z3lrV0dXQG1haWwuZ21haWwuY29tPgk8QUFOTGtUaW5pOFZ0Z0thMUxKai01Uk8xcW9Jb18xS1ZydmxleVRLT2N0a0JSQG1haWwuZ21haWwuY29tPgk8QUFOTGtUaW1qUXd2LVBsOG80dDZhbDFFQVlUaTFQOXExcnJhSUh0bEdLYXl4QG1haWwuZ21haWwuY29tPgk8NzkyMUM2NUYtQjhFRS00QTkzLUI0RjgtMzUwODlFMDNCQzcwQG1hYy5jb20+CTxBQU5Ma1Rpbm9QMWZmMHAwN3IyOEVxSnd1ZWYtMUhRYWJWRHU4cUNlY3dFSy1AbWFpbC5nbWFpbC5jb20+CTxBQU5Ma1RpbEh4Z3d5aXZ3VkNYSTd6MHRPM1NYQk9lQjlZbmlBUW1LWUhvZS1AbWFpbC5nbWFpbC5jb20+CTwyMDEwMDYwODExMTI0MS41ZTk4NTU4NC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwyMDEwMDYwODExMzQwMS5lMWRiMGM5OC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxBQU5Ma1RpbGN5b3JuTUlMMDlDRHN0aVBpenZtNUZCd29VSXBLMVMyb0NEbDBAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":15609,"nextInTopic":15628,"prevInTime":15622,"nextInTime":15624,"topicId":15600,"numMessagesInTopic":7,"msgSnippet":"... Changing the semantics of @type is extremist, when the same problem it solves has already been solved, by assigning URIs to variants, which isn t extreme;","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95266 invoked from network); 9 Jun 2010 18:34:21 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m12.grp.re1.yahoo.com with QMQP; 9 Jun 2010 18:34:21 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 9 Jun 2010 18:34:20 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id C3A41509B4;\n\tWed,  9 Jun 2010 14:34:19 -0400 (EDT)\r\nDate: Wed, 9 Jun 2010 12:33:57 -0600\r\nTo: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;\r\nCc: Tim Williams &lt;williamstw@...&gt;, Rest List\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100609123357.2e0fbc95.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTilcyornMIL09CDstiPizvm5FBwoUIpK1S2oCDl0@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;AANLkTimO4N3FSx89n4vJn7FJl32Xh-DFsYR_wtnOwuXu@...&gt;\n\t&lt;3DDD0BE655869D4EA506652B3803AEF6156D9E6C@...-it.net&gt;\n\t&lt;AANLkTinpuyIFkgvn5SQdezHebjppzj17SPvIBkGoU8B8@...&gt;\n\t&lt;AANLkTilcxc7nFDaU-Nf6h7xI7w5jYQpDEREyI6aL4QAe@...&gt;\n\t&lt;AANLkTikVV45Xn0h95P7hvl03hF5nZqMxMoyxkly9NpA5@...&gt;\n\t&lt;AANLkTikLm2ARBePkmkFnJlj9USsJ0H-Evzxpd4gykWGW@...&gt;\n\t&lt;AANLkTini8VtgKa1LJj-5RO1qoIo_1KVrvleyTKOctkBR@...&gt;\n\t&lt;AANLkTimjQwv-Pl8o4t6al1EAYTi1P9q1rraIHtlGKayx@...&gt;\n\t&lt;7921C65F-B8EE-4A93-B4F8-35089E03BC70@...&gt;\n\t&lt;AANLkTinoP1ff0p07r28EqJwuef-1HQabVDu8qCecwEK-@...&gt;\n\t&lt;AANLkTilHxgwyivwVCXI7z0tO3SXBOeB9YniAQmKYHoe-@...&gt;\n\t&lt;20100608111241.5e985584.eric@...&gt;\n\t&lt;20100608113401.e1db0c98.eric@...&gt;\n\t&lt;AANLkTilcyornMIL09CDstiPizvm5FBwoUIpK1S2oCDl0@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: Fwd: [rest-discuss] Re: Determining which Media type for\n post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAnt=F3nio Mota wrote:\n&gt;\n&gt; I must say I feel this point of view is way too e=\r\nxtremist, and I hope\n&gt; this is not a flaming thing to say.\n&gt;\n\nChanging the =\r\nsemantics of @type is extremist, when the same problem it\nsolves has alread=\r\ny been solved, by assigning URIs to variants, which\nisn&#39;t extreme; it&#39;s how=\r\n things are done.  There is nothing wrong with,\nlet alone extreme about, so=\r\nlving a REST problem by minting URIs.\n\nThere is nothing extremist about ass=\r\nigning URIs to variants.  Since you\ncan&#39;t do what you want to do without it=\r\n, and since that&#39;s what everyone\nwho came before you has done to solve the =\r\nsame problem, it fits the very\ndefinition of mainstream.\n\n&gt;\n&gt; Every written=\r\n text needs\n&gt; interpretation because it is a expression of what the author =\r\nthinks,\n&gt; not the thinking itself (I was almost going to say that the writt=\r\nen\n&gt; text is a representation of what the author thinks, not the thinking\n&gt;=\r\n itself) because no one can go into another people&#39;s mind,\n&gt;\n\nIn this case,=\r\n Roy isn&#39;t dead.  So if assigning URIs to variants was\nwrong, he&#39;d say some=\r\nthing about it, himself.  One thing we all know Roy\ncares about, is correct=\r\ning misinterpretations of REST... which this\nisn&#39;t.\n\n&gt; \n&gt; In this issue, al=\r\nthough I do understand the benefits regarding cache\n&gt; that Eric points, I f=\r\nail to see why that - assigning URI to each and\n&gt; every representation of a=\r\n resource - should be the norm and not the\n&gt; exception.\n&gt;\n\nBecause that&#39;s h=\r\now the Web works.  Failing to assign URIs to variant\nrepresenations leads t=\r\no clearly-identifiable problems which are easily\nfixed by applying the Iden=\r\ntification of Resources constraint, i.e.\nassigning URIs to variants.  This =\r\nsolution is the norm, because it\nworks.  Other solutions, like borking @typ=\r\ne, are not the norm because\nthey don&#39;t work.  How much more proof of what I=\r\n&#39;m saying is required?\n\n&gt;\n&gt; Because that defeats the purpose of &quot;manipulati=\r\non of\n&gt; resources through representations&quot;. Because if you assign a URI to\n=\r\n&gt; each representation they are in fact resources, not representations...\n&gt; =\r\n\n\nA representation is a representation, regardless of the resource it is\nre=\r\npresenting.  The same representation may result from dereferencing\ndifferen=\r\nt resources, this is a key element of the REST style (author&#39;s\npreferred ve=\r\nrsion).  To change the value of a resource, a\nrepresentation of that resour=\r\nce is manipulated, IOW I can change /A by\nmanipulating /A.txt, if that&#39;s wh=\r\nat the hypertext calls for.  The fact\nthat /A.txt is a different resource f=\r\nrom /A doesn&#39;t mean /A.txt can&#39;t\nalso be a representation of /A.  Assigning=\r\n URIs to variants makes those\nvariants resources in their own right, but th=\r\ney&#39;re still also variants.\n\n&gt;\n&gt; Now Roy Fielding clearly separates these tw=\r\no concepts in 5.2.1.1\n&gt; Resources and Resource Identifiers and 5.2.1.2 Repr=\r\nesentations, and\n&gt; again in 6.2.1 Redefinition of Resource and 6.2.2 Manipu=\r\nlating\n&gt; Shadows, and as far as I remember he only advocates the attributio=\r\nn of\n&gt; a URI to a specific representation when that representation is so\n&gt; =\r\nimportant that should be considered as a &quot;thing&quot; on it&#39;s own (don&#39;t\n&gt; have =\r\na quote for this, thou, so I may be wrong).\n&gt; \n\nRight.  If /A is to be mani=\r\npulated via /A.txt, there needs to be a way\nto identify /A.txt, IOW, withou=\r\nt assigning that variant a URI it can&#39;t\nbe manipulated.  If you fail to ide=\r\nntify that variant with a URI then\nyou&#39;ve failed to assign a URI to a key r=\r\nesource, IOW, that variant is\nso important that you want to consider it as =\r\na &quot;thing&quot; on its own, in\norder that it may be manipulated or cached.\n\nTryin=\r\ng to manipulate or cache things that don&#39;t have URIs doesn&#39;t work.\nThe solu=\r\ntion is to assign these things URIs, then they will work.\n\n&gt;\n&gt; Even in resp=\r\nect to caching - and I don&#39;t know much about it since we\n&gt; work in a intran=\r\net where that problem is not pressing - why would you\n&gt; want to cache a spe=\r\ncific representation? Doesn&#39;t that defeat the\n&gt; purpose of content-negotiat=\r\nion?\n&gt;\n\nSo if I want to use conneg, I can&#39;t use caching?  What&#39;s cached in\n=\r\ncaching, are representations, not resources -- a resource is an\nabstract co=\r\nncept.  My origin server isn&#39;t going to change how it\nresponds to a given A=\r\nccept header from one request to the next, so once\nit&#39;s figured out what re=\r\npresentation to return, it informs\nintermediaries of the parameters of the =\r\nnegotiation (Vary) and the URI\nto associate with those parameters.\n\nNow, a =\r\nuser agent making a subsequent request for the same\nrepresentation can bypa=\r\nss the origin server -- the Accept header maps\nto a URI in the cache, so in=\r\n the presence of the same Accept header\nstring, the cache can return the pr=\r\noper representation, without\nbothering the origin server (assuming we&#39;re ta=\r\nlking about Accept-\ndriven negotiation).\n\nSo caching representations by URI=\r\n is how the Web works, not to defeat\ncontent-negotiation, but in order to c=\r\nache despite content-\nnegotiation.  It would suck, if by using conneg I cou=\r\nldn&#39;t use\ncache, because somehow caching defeats the purpose of conneg -- b=\r\nut\nthat isn&#39;t the case.\n\n&gt;\n&gt; Suppose a UA send a Accept of\n&gt; application/pd=\r\nf, application/html\n&gt; with the pdf having more quality, and the server at t=\r\nhat time is only\n&gt; capable of serving html. And that one week later the sam=\r\ne client makes\n&gt; the same request and the server is now capable of producin=\r\ng pdf.\n&gt; \n\nYou&#39;re pointing out a problem that holds true for caching with a=\r\nny\nresources, not just negotiated resources.  What if my browser caches an\n=\r\nHTML representation of a site which then changes its output to PDF?\nThere&#39;s=\r\n the must-revalidate directive I discussed earlier, this will\nalmost-ensure=\r\n freshness.  If you want to avoid this situation, then\ndon&#39;t cache, because=\r\n with caching you must cede this control.\n\n&gt;\n&gt; If the html representation h=\r\nas it&#39;s own url, wouldn&#39;t a intermediary\n&gt; send back the html representatio=\r\nn when if the same request reach the\n&gt; server it will be back with pdf? Isn=\r\n&#39;t that the purpose of\n&gt; content-negotiation? Again, by no means I have a g=\r\nood understanding of\n&gt; cache mechanisms...\n&gt; \n\nIf you want to avoid the pro=\r\nblem you describe, simply don&#39;t assign URIs\nto your variants, and caches wo=\r\nn&#39;t be caching them to any significant\nextent.  If you want your variants t=\r\no cache, then like I said before,\nassign them URIs and use must-revalidate.=\r\n.. that&#39;s what they&#39;re there\nfor, they work, so use them.\n\nIf you&#39;re runnin=\r\ng a server which uses conneg, and you add a new media\ntype, then you&#39;re cha=\r\nnging the conneg algorithm, so I don&#39;t see why a\nuser agent would still get=\r\n that HTML instead of PDF.  The must-\nrevalidate directive tells caches to =\r\nrenegotiate the resource.  The\nresult may still be that HTML representation=\r\n, which a cache can then\nserve, if it still has it, once the server has neg=\r\notiated the request.\n\n&gt;\n&gt; Since I know this is a subject easily &quot;flammable&quot;=\r\n let me say in\n&gt; advance that I&#39;m trying to clarify myself, because my unde=\r\nrstanding\n&gt; does not match what people with more knowledge in this area tha=\r\nn me\n&gt; are saying (even if often they don&#39;t agree themselves) - not flame\n&gt;=\r\n anybody...\n&gt; \n\nOK, but you folks are testing my patience, by asking the sa=\r\nme questions\nover and over, that I&#39;ve already answered, repeatedly saying t=\r\nhe exact\nsame thing in different ways.  I&#39;m at the point of throwing my han=\r\nds up\nin the air and saying, &quot;You know what?  I don&#39;t care if your API is\nR=\r\nEST or not, so knock yourselves out.&quot;\n\nThere&#39;s a difference in trying to un=\r\nderstand why things are the way\nthey are, vs. sticking to your guns until y=\r\nou&#39;re told what you want to\nhear.  If you want to hear that assigning URIs =\r\nto variants is bad, then\nby all means, continue to argue with everything I =\r\nsay, instead of\nexplaining an actual downside from assigning URIs to varian=\r\nts...\n\nThere&#39;s no reason this subject should be flammable, and in fact, unt=\r\nil\nthis thread it hasn&#39;t been.  Every other time this issue has come up,\nap=\r\nplying Identification of Resources by assigning URIs to variants has\nbeen t=\r\nhe answer.  Except every other time, the wisdom and accuracy of\nthe best-pr=\r\nactice solution has been accepted, and the thread ended.\nMy frustration res=\r\nults from the fact that something that&#39;s understood\nbeyond the need for fur=\r\nther debate, is resulting in further debate.\n\nIdentification of Resources i=\r\ns a critical REST constraint, but easy to\nfollow.  Assign URIs to your vari=\r\nants, people.  It&#39;s that simple.  Why\npeople can&#39;t accept this, is beyond m=\r\ne, because it&#39;s so fundamental to\nmy understanding of REST (and it works). =\r\n Arguing with me until I agree\nwith you (not that that&#39;s likely) doesn&#39;t ch=\r\nange the technology I&#39;m\ntrying to help you understand.\n\nWhat is the problem=\r\n with assigning URIs to variants, other than that\nyou folks &quot;feel&quot; it shoul=\r\ndn&#39;t be that way?  Why is the evidence that\nthis solution works because tha=\r\nt&#39;s how the Web works, not convincing?\n\nThe sky will not fall and the sun r=\r\nefuse to shine, if you assign URIs\nto your variants.  The only result is in=\r\ncreased interoperability with\nthe real-world Web.  Not doom.\n\nIf you don&#39;t =\r\nunderstand this, then read up on it, and politely ask\nquestions.  Instead o=\r\nf challenging everything I say, try to learn why\nI&#39;m saying it.\n\nInstead of=\r\n challenging the fact that variants need URIs to work\nproperly, learn *why*=\r\n variants need URIs to work properly -- it&#39;s\nspelled out clearly in REST, n=\r\nothing to do with my say-so.\n\n-Eric\n\n"}}