{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"sO3rrcATAaEq7BqHdgtDcO7IFajv9DOgLL7Bni-4gxSTil36DkIAuL89L06E7Y5FcuGFgL4kZeErlFPgScfcfuC4hjro5Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [PMX:#] [rest-discuss] The Four REST Contstraints  (was Re: REST and  only REST)","postDate":"1026311777","msgId":1784,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMkM0NjYxLjczMDVBN0RCQHByZXNjb2QubmV0Pg==","referencesHeader":"PDAwNTYwMWMyMjYyZCRiNzI2NGU4MCRhMDAwYThjMEBzZWFpcnRobGFwdG9wPiA8M0QyOUQ5MDIuOTlFMkNGQ0ZAcHJlc2NvZC5uZXQ+IDwwMDIzMDFjMjI2ZTkkODBlZjU4NDAkYTAwMGE4YzBAc2VhaXJ0aGxhcHRvcD4gPE9FNTJuT3NqZHh5c2NYSVc2Sm0wMDAwNzkyNUBob3RtYWlsLmNvbT4gPDAwMDUwMWMyMjc0ZiQxNDYyZTNjMCRhMDAwYThjMEBzZWFpcnRobGFwdG9wPiA8M0QyQUY0NkUuQjk0MjExNjlAcHJlc2NvZC5uZXQ+IDwwMDEzMDFjMjI3NTkkZmFmMjIxMjAkYTAwMGE4YzBAc2VhaXJ0aGxhcHRvcD4gPDNEMkFGRDc1Ljg2NkZDNEYwQHByZXNjb2QubmV0PiA8MDAxZDAxYzIyNzY4JGM1MDkwNTYwJGEwMDBhOGMwQHNlYWlydGhsYXB0b3A+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":1783,"nextInTime":1785,"topicId":1784,"numMessagesInTopic":1,"msgSnippet":"... Whether you believe the U stands for universal or uniform , the relevant property is a good thing. Uniform is good in that you have globally","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 10 Jul 2002 14:36:28 -0000\r\nReceived: (qmail 27400 invoked from network); 10 Jul 2002 14:36:28 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 10 Jul 2002 14:36:28 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.scd.yahoo.com with SMTP; 10 Jul 2002 14:36:30 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6AEaSW17975;\n\tWed, 10 Jul 2002 07:36:28 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6AEaR204989;\n\tWed, 10 Jul 2002 07:36:27 -0700\r\nMessage-ID: &lt;3D2C4661.7305A7DB@...&gt;\r\nDate: Wed, 10 Jul 2002 07:36:17 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n   rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [PMX:#] [rest-discuss] The Four REST Contstraints  (was Re: REST and \n only REST)\r\nReferences: &lt;005601c2262d$b7264e80$a000a8c0@seairthlaptop&gt; &lt;3D29D902.99E2CFCF@...&gt; &lt;002301c226e9$80ef5840$a000a8c0@seairthlaptop&gt; &lt;OE52nOsjdxyscXIW6Jm00007925@...&gt; &lt;000501c2274f$1462e3c0$a000a8c0@seairthlaptop&gt; &lt;3D2AF46E.B9421169@...&gt; &lt;001301c22759$faf22120$a000a8c0@seairthlaptop&gt; &lt;3D2AFD75.866FC4F0@...&gt; &lt;001d01c22768$c5090560$a000a8c0@seairthlaptop&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nSeairth Jacobs wrote:\n&gt; \n&gt;...\n&gt; \n&gt; Now, this is something I can understand.  Thanks.\n&gt; \n&gt; So, the basic constraints are:\n&gt; \n&gt; 1) Identification of resources: I am not sure about this one.  In part, I\n&gt; having trouble what it means to &quot;identify a resource&quot; in a RESTful fashion.\n&gt; The most common technique, as I understand it, is the URI.  However, I am\n&gt; not sure that I understand what exactly makes the URI the right\n&gt; identification method for the job (unless this is just because of it&#39;s\n&gt; relationship to HTTP, etc.).\n\nWhether you believe the &quot;U&quot; stands for &quot;universal&quot; or &quot;uniform&quot;, the\nrelevant property is a good thing. Uniform is good in that you have\nglobally understood parsing rules. Universal is good because it implies\nthat any component may talk to any resource.\n\n&gt; I suppose the other problem here is that this part of GTP is somewhat left\n&gt; to be handled be the application that is implemented on top of it.  In other\n&gt; words, it is up to the application that uses GTP to determine the actual\n&gt; identification process, format, etc.  The main reason I did this is because\n&gt; I could not see what advantage there would be to forcing all GTP-enabled\n&gt; applications to use URIs (as opposed to some other identification format).\n\nWell if one GTP application used CORBA object ids and another used URIs\nthen the universe would be split into the world of components that know\nhow to use one kind of address and the world of components that know how\nto use the other kind of address. The web has this problem to a certain\nextent, but market pressures suppress the proliferation of variant URI\nschemes. My personal opinion is that non-GETTABLE URI schemes should\nonly be used for pre-existing legacy namespaces (like &quot;mailto:&quot; or\n&quot;isbn:&quot;).\n\n&gt; 2) Manipulation of resources through representations: Now, I have always had\n&gt; a question about this one.  How exactly can one manipulate resources over a\n&gt; network any other way?  In other words, it seems to me that any time I\n&gt; communicate with a computer that returns a resource to me, I can only ever\n&gt; get a &quot;representation&quot; of that resource (even if the representation contains\n&gt; all known aspects of that resource). \n\nObviously you can&#39;t really touch objects over the network. But some\nnetworking technologies might claim that clients may behave as if they\nare. Arguably, if you PUT a file thorugh FTP and then do an immediate\nGET, with some a priori knowledge that nobody else could touch the file,\nyou should get back the exact same bits. But HTTP doesn&#39;t define the\n&quot;bits&quot; of a resource. And according to my understanding, you could PUT\none second and GET back something different the next second, even if\nnobody else fiddled with the data.\n\n&gt; 3) Self-descriptive messages: GTP has got this one.  Since it is base on ONX\n&gt; (or XML), this is a given.\n\nNote the sub-parts of &quot;self-description&quot; from the thesis: &quot;REST enables\nintermediate processing by constraining messages to be self-descriptive:\ninteraction is stateless between requests, standard methods and media\ntypes are used to indicate semantics and exchange information, and\nresponses explicitly indicate cacheability.&quot;\n\n&gt; 4) ....\n&gt; \n&gt; Maybe in order for GTP to be more REST-like, I need to impose the resource\n&gt; identification and hypermedia rules up front.  For instance, maybe the URI\n&gt; should be the only allowable format.  This would certainly make this aspect\n&gt; of GTP universal across implementations, but would it also impose\n&gt; restrictions on what can and cannot realistically be done with GTP?\n\nA URI is just a syntax. Agreeing to use it is not much more restrictive\nthan agreeing to use ONX. If you are reinventing the universe without\nworrying about practicality, you might consider whether URIs should have\nbetter support for URIs that embed URIs without escaping. For instance\nthis is not a valid URI:\n\nhttp://google.com?get_cached_page=http://www.bates.com\n\nIIRC, slashes are not allowed in query strings unless escaped. A\nnew-fangled replacement for URIs might allow something like:\n\nhttp://google.com?get_cached_page=(http://www.bates.com)\n\nThe thing in parens is implicitly escaped and could have its own\nsub-parts:\n\nhttp://google.com?get_cached_page=(http://www.bates.com?something_else=())\n\n-- \nCome discuss XML and REST web services at:\n  Open Source Conference: July 22-26, 2002, conferences.oreillynet.com\n  Extreme Markup: Aug 4-9, 2002,  www.extrememarkup.com/extreme/\n\n"}}