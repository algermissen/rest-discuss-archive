{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"&quot;Peter Keane&quot; &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"lpYbvAHZ-p6iHwMyKFKjPRZO4S5Hsy34h9fAteaPR8Hk8FemtKnGb2imZUUUHwDTyF-3HAx4N_LkSR7DRQ2Zk-XIbgFWcL8tzDWcGuY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] New Book: RESTful .Net","postDate":"1228510239","msgId":11729,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MDgxMjA1MTI1MHM0NzI4ZGJlYXVjNTdmMWU2MGYxNjNkODJhQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGE2YTZkZjM2MDgxMjA1MTIyM240ZjkzYjQwMXZiZDhiODQ1OWRmMjU5YjFjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGdoYm91aitsMWNtQGVHcm91cHMuY29tPgkgPGE2YTZkZjM2MDgxMjA1MTIyM240ZjkzYjQwMXZiZDhiODQ1OWRmMjU5YjFjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":11728,"nextInTopic":11730,"prevInTime":11728,"nextInTime":11730,"topicId":11711,"numMessagesInTopic":14,"msgSnippet":"... I have been increasingly using what (I think) would be considered HATEOS in Ajax-rich applications, whereby the javascript XHR is following/acting on","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17197 invoked from network); 5 Dec 2008 20:50:39 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m51.grp.scd.yahoo.com with QMQP; 5 Dec 2008 20:50:39 -0000\r\nX-Received: from unknown (HELO wf-out-1314.google.com) (209.85.200.170)\n  by mta17.grp.scd.yahoo.com with SMTP; 5 Dec 2008 20:50:39 -0000\r\nX-Received: by wf-out-1314.google.com with SMTP id 29so145845wff.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 05 Dec 2008 12:50:39 -0800 (PST)\r\nX-Received: by 10.142.135.13 with SMTP id i13mr174297wfd.8.1228510239328;\n        Fri, 05 Dec 2008 12:50:39 -0800 (PST)\r\nX-Received: by 10.142.213.4 with HTTP; Fri, 5 Dec 2008 12:50:39 -0800 (PST)\r\nMessage-ID: &lt;8158ad750812051250s4728dbeauc57f1e60f163d82a@...&gt;\r\nDate: Fri, 5 Dec 2008 14:50:39 -0600\r\nTo: &quot;Nick Gall&quot; &lt;nick.gall@...&gt;\r\nCc: &quot;Colin Jack&quot; &lt;colinjack@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;a6a6df360812051223n4f93b401vbd8b8459df259b1c@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;ghbouj+l1cm@...&gt;\n\t &lt;a6a6df360812051223n4f93b401vbd8b8459df259b1c@...&gt;\r\nX-Google-Sender-Auth: fa55f739fa8a993b\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Peter Keane&quot; &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] New Book: RESTful .Net\r\nX-Yahoo-Group-Post: member; u=11652427; y=mWb2zsRrmn7hHca9AV2fTd28kVphuaeNodm6rFAzC6bEHrv82PCtyYFCsw\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\nOn Fri, Dec 5, 2008 at 2:23 PM, Nick Gall &lt;nick.gall@...&gt; wrote:\n&gt; On Fri, Dec 5, 2008 at 12:38 PM, Colin Jack &lt;colinjack@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; &gt; It pretty much sticks to &quot;This is how you can use WCF with HTTP and\n&gt;&gt; &gt; the uniform interface&quot;,\n&gt;&gt;\n&gt;&gt; Definitely, and I&#39;ve already found that content useful.\n&gt;&gt;\n&gt;&gt; &gt; It certainly fails to talk about HATEOS explicitly - which I\n&gt;&gt; &gt; definitely see as a shortcoming of the book, although again the book\n&gt;&gt; &gt; is more about technical details of WCF, I didn&#39;t write the book as a\n&gt;&gt; &gt; guide to REST, its a guide to the implementation details using WCF,\n&gt;&gt; &gt; its a very narrow book (on purpose).\n&gt;&gt;\n&gt;&gt; Yeah definitely, I definitely think any book that covers HATEOS etc\n&gt;&gt; would be better if it stayed away from any single technology and I&#39;ve\n&gt;&gt; found the WCF sections useful. The book, plus the WCF Facility with\n&gt;&gt; the Castle project, make WCF just about usable without epic frustration.\n&gt;&gt;\n&gt;&gt; Unfortunately though HATEOS and the other complex elements seem, to\n&gt;&gt; me, to be missing from RESTful WS too (or not covered in massive\n&gt;&gt; detail). To me this does somewhat leave the impression that REST is\n&gt;&gt; not that well suited to enterprise apps (which I realize is incorrect).\n&gt;\n&gt; The reason that you&#39;re not finding much on HATEOAS is that it is such a\n&gt; radically new concept in certain A2A (app-to-app, ie completely automated\n&gt; with no human in the loop) scenarios that no one is yet an expert on how to\n&gt; apply it. Yes, we have some basic HATEOAS capabilties in APP, but that&#39;s\n&gt; been pretty much only applied to content management scenarios: blogs,\n&gt; spreadsheets, DBs, calendars. Etc.\n&gt;\n\nI have been increasingly using what (I think) would be considered\nHATEOS in Ajax-rich applications, whereby the javascript XHR is\nfollowing/acting on  links on the page it, rather than constructing\nURLs to put/post/get/delete in the javascript code itself.  It&#39;s\nreally just a design technique, but you end up with a javascript\nlibrary that &quot;knows&quot; how to make use of urls on the page, and can thus\nbe reused in many scenarios.  E.g., a javascript function might look\nfor a form with a class designation &quot;deletable&quot;.  It would then know\nthat &quot;action&quot; URL of the form (generally used as the post url) could\nbe used to delete that particular resource, so it adds a delete button\nand sets an onclick handler on that button that makes a DELETE http\nrequest on that URI.  Javascript is basically the &quot;machine&quot; that uses\nhypertext to move through state transitions.\n\n--peter keane\n\n&gt; We have yet to see a real implemented &quot;enterprise&quot; example of HATEOAS for\n&gt; A2A (or B2B) for a transactional or even process control scenario. At least\n&gt; I have yet to see one. I have seen a robotics control protocol that adheres\n&gt; to most of the REST constraints, but it doesn&#39;t do HATEOAS.\n&gt; See http://msdn.microsoft.com/en-us/library/bb483056.aspx .\n&gt;\n&gt; So realistically we need a visionary pioneer to be the first to use HATEOAS\n&gt; in this way so that the rest of us can explain it to beginners. &lt;grin&gt;\n&gt;\n&gt; -- Nick\n&gt; \n\n"}}