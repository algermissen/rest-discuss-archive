{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":355965900,"authorName":"Dilip Krishnan","from":"Dilip Krishnan &lt;dilip.krishnan@...&gt;","profile":"dilipkrish_subscriptions","replyTo":"SENDER","senderId":"dvGZ10df27lwan7DJsKnMOZhjcEXw2OgWY1i_vd7inkqNve6u-IMl1Yz1_wEipi2y8F105JNu4wyRqtaedn_Old9pvWKra8_XN-xGE6ZP-4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] User dependent Resources","postDate":"1315314672","msgId":17733,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDMDdDNkRFLUUzOUEtNENENy04MjM1LUM1RTc4QUE1MEZDMEBnbWFpbC5jb20+","inReplyToHeader":"PENBUFdfOG02UUN6bWZoVUJVSjhQMWIybjlmLTl6Q3ZVaDIyT1RxX2E4SkVNdT03MGZ0QUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGo0MGs4bitodDNvQGVHcm91cHMuY29tPiA8Q0FQV184bTVOVjZ1QkV0VFluVWFTS1o3N1JmPTBxWE1GN19iSktlTGJQdXhXek9yMm9nQG1haWwuZ21haWwuY29tPiA8Q0FQV184bTRBWVhPRTJBNj13RG12RTBMYmNxSCtkWV8yeVBzR1NVazNwTnFaODdSaStnQG1haWwuZ21haWwuY29tPiA8QkNGNDY0OUEtOUJCMy00QTZDLThBMkQtNTZDNzVGM0U1NkYzQGdtYWlsLmNvbT4gPENBUFdfOG01M3pzY2dKZVZEOGt3SnF4RE56TXlTQy1hZWdSUms5eDRFbnRHMkdFRDdiUUBtYWlsLmdtYWlsLmNvbT4gPENBTnFpWkpiRnRSdWVEVz1Oa0VETDRDVUhYY2ZzY3EtME1kd1BzQlo2Y2QwYVlWb0xXZ0BtYWlsLmdtYWlsLmNvbT4gPEVDQzhDMTQxLUI2QjctNDY1Ri04NDAxLUNCREVFRkU2NjJGNkBnbWFpbC5jb20+IDxDQVBXXzhtNWlvZDdiQ2JFd1UwMXM2MmhyNWR1dVEwTGM5cFhHR25adUxPVk54ckhLUEFAbWFpbC5nbWFpbC5jb20+IDw2MTBBRUUxMy03NjY2LTQ3MDYtOEUzNC05QkVDOTA0Q0I1NjlAZ21haWwuY29tPiA8Q0FQV184bTZRQ3ptZmhVQlVKOFAxYjJuOWYtOXpDdlVoMjJPVHFfYThKRU11PTcwZnRBQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":17727,"nextInTopic":17734,"prevInTime":17732,"nextInTime":17734,"topicId":17714,"numMessagesInTopic":12,"msgSnippet":"As I re-read the example I came up with for authz; it was a poor example to justify that it might be useful to design uris on the server side :) I dint really","rawEmail":"Return-Path: &lt;dilip.krishnan@...&gt;\r\nX-Sender: dilip.krishnan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38906 invoked from network); 6 Sep 2011 13:11:17 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m4.grp.sp2.yahoo.com with QMQP; 6 Sep 2011 13:11:17 -0000\r\nX-Received: from unknown (HELO mail-gx0-f173.google.com) (209.85.161.173)\n  by mta5.grp.sp2.yahoo.com with SMTP; 6 Sep 2011 13:11:16 -0000\r\nX-Received: by gxk26 with SMTP id 26so4437095gxk.32\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 06 Sep 2011 06:11:16 -0700 (PDT)\r\nX-Received: by 10.68.48.133 with SMTP id l5mr3880232pbn.336.1315314676272;\n        Tue, 06 Sep 2011 06:11:16 -0700 (PDT)\r\nReturn-Path: &lt;dilip.krishnan@...&gt;\r\nX-Received: from [192.168.0.107] (pool-71-252-175-208.dllstx.fios.verizon.net. [71.252.175.208])\n        by mx.google.com with ESMTPS id i4sm254358pbr.4.2011.09.06.06.11.13\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Tue, 06 Sep 2011 06:11:14 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v1244.3)\r\nContent-Type: multipart/alternative; boundary=&quot;Apple-Mail=_7161743B-B91A-4BB9-B8A2-16B2F8F7F5FA&quot;\r\nIn-Reply-To: &lt;CAPW_8m6QCzmfhUBUJ8P1b2n9f-9zCvUh22OTq_a8JEMu=70ftA@...&gt;\r\nDate: Tue, 6 Sep 2011 08:11:12 -0500\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;4C07C6DE-E39A-4CD7-8235-C5E78AA50FC0@...&gt;\r\nReferences: &lt;j40k8n+ht3o@...&gt; &lt;CAPW_8m5NV6uBEtTYnUaSKZ77Rf=0qXMF7_bJKeLbPuxWzOr2og@...&gt; &lt;CAPW_8m4AYXOE2A6=wDmvE0LbcqH+dY_2yPsGSUk3pNqZ87Ri+g@...&gt; &lt;BCF4649A-9BB3-4A6C-8A2D-56C75F3E56F3@...&gt; &lt;CAPW_8m53zscgJeVD8kwJqxDNzMySC-aegRRk9x4EntG2GED7bQ@...&gt; &lt;CANqiZJbFtRueDW=NkEDL4CUHXcfscq-0MdwPsBZ6cd0aYVoLWg@...&gt; &lt;ECC8C141-B6B7-465F-8401-CBDEEFE662F6@...&gt; &lt;CAPW_8m5iod7bCbEwU01s62hr5duuQ0Lc9pXGGnZuLOVNxrHKPA@...&gt; &lt;610AEE13-7666-4706-8E34-9BEC904CB569@...&gt; &lt;CAPW_8m6QCzmfhUBUJ8P1b2n9f-9zCvUh22OTq_a8JEMu=70ftA@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nX-Mailer: Apple Mail (2.1244.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dilip Krishnan &lt;dilip.krishnan@...&gt;\r\nSubject: Re: [rest-discuss] User dependent Resources\r\nX-Yahoo-Group-Post: member; u=355965900; y=SppR8wi1zhVj45bpYpto9y-t4FKcYocfOB_kNE02zbiRaVet_MXZmxe4ssqljLXUlZPo\r\nX-Yahoo-Profile: dilipkrish_subscriptions\r\n\r\n\r\n--Apple-Mail=_7161743B-B91A-4BB9-B8A2-16B2F8F7F5FA\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/plain;\n\tcharset=windows-1252\r\n\r\nAs I re-read the example I came up with for authz; it was a poor example to=\r\n justify that it might be useful to design uris on the server side :)\n\nI di=\r\nnt really have a question perse; but am curious how folks solve authz probl=\r\nem RESTFully. You identified an approach thats similar to what we do, but I=\r\n was wondering if there are other ways of doing it.\n\n\n&gt; \n&gt; On Tue, Sep 6, 2=\r\n011 at 01:01, Dilip Krishnan &lt;dilip.krishnan@...&gt; wrote:\n&gt;&gt; seems lik=\r\ne your comments are shifting from caching and authentication issues to auth=\r\norization issues. this stuff is outside the boundaries of Fielding&#39;s REST m=\r\nodel, but still (to me) interesting. i&#39;ll focus on those items for now.\n&gt; \n=\r\n&gt; Guilty as charged :) =85 just trying to get all the problems related to s=\r\ningle uri&#39;s having multiple representations and a special case includes aut=\r\nhz as well.\n&gt; \n&gt;&gt; If i understand your Q here, you&#39;re asking about how serv=\r\ners can map authorization details to content once the request&#39;s identify ha=\r\ns been established. I usually employ a rather simple authorization model: t=\r\nhe URI alone. I usually map URIs to protocol actions (GET, PUT, POST, DELET=\r\nE, etc.) and apply that &quot;permission&quot; to a user identify (or group of them).=\r\n  \n&gt; \n&gt; May be it calls for a different thread of discussion but my questio=\r\nn wasn&#39;t about how the authorization can be implemented but more related to=\r\n uri design. For example we could have sales by region or sales by business=\r\n unit. \n&gt; \n&gt; i.e. /cpg/us/tx/sales for cpg sales in us tx\n&gt; or /us/tx/cpg f=\r\nor cpg sales in us tx\n&gt; \n&gt; So my question was, since the taxonomy is subjec=\r\nt to change depending on how the organization wants to use the resources ho=\r\nw does one design resource uri to accommodate the change. I believe these s=\r\nhould be hypermedia driven to shield the client from changing taxonomies=85=\r\n but the convenience and pragmatism of human readable uri&#39;s is compelling f=\r\nrom a pragmatic perspective.\n&gt; \n&gt;&gt; While it is helpful to use URIs that mak=\r\ne applying authZ rules easy, that&#39;s a server-side convenience that clients =\r\nneed not know about. On the implementation detail side, applying a regexp t=\r\no a URI works quite well  for me when checking authZ details. This works wi=\r\nth a wide range of URIs, whether they have easily discernible patterns or n=\r\not. keeping the authZ de-coupled from the actual content *and* using an alg=\r\norithm for checking the identifiers (URIs) means future modifications to th=\r\ne  URI name space have a limited impact on the overall system.\n&gt; \n&gt; =85 whi=\r\nch is similar to what we do, but I was wondering if there are other ways pe=\r\nople are solving this problem.\n&gt;&gt; \n&gt;&gt; Regards,\n&gt;&gt; Dilip Krishnan\n&gt;&gt; dilip.k=\r\nrishnan@...\n&gt;&gt; \n&gt;&gt; \n&gt; \n&gt; \n\n\r\n--Apple-Mail=_7161743B-B91A-4BB9-B8A2-16B2F8F7F5FA\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=windows-1252\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=3D&quot;word-wrap: break-word; -webkit-nbsp-mode:=\r\n space; -webkit-line-break: after-white-space; &quot;&gt;&lt;div&gt;&lt;div&gt;As I re-read the=\r\n example I came up with for authz; it was a poor example to justify that it=\r\n might be useful to design uris on the server side :)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;=\r\ndiv&gt;I dint really have a question perse; but am curious how folks solve aut=\r\nhz problem RESTFully. You identified an approach thats similar to what we d=\r\no, but I was wondering if there are other ways of doing it.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_=\r\nquote&quot;&gt;On Tue, Sep 6, 2011 at 01:01, Dilip Krishnan &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;=\r\na href=3D&quot;mailto:dilip.krishnan@...&quot;&gt;dilip.krishnan@...&lt;/a&gt;&gt;=\r\n&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .=\r\n8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n&lt;div style=3D&quot;word-wrap:=\r\nbreak-word&quot;&gt;&lt;div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;seems lik=\r\ne your comments are shifting from caching and authentication issues to auth=\r\norization issues. this stuff is outside the boundaries of Fielding&#39;s REST m=\r\nodel, but still (to me) interesting. i&#39;ll focus on those items for now.&lt;/di=\r\nv&gt;\n&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Guilty as charged :) =85 just trying to get =\r\nall the problems related to single uri&#39;s having multiple representations an=\r\nd a special case includes authz as well.&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;&lt;blockq=\r\nuote type=3D&quot;cite&quot;&gt;\n\n&lt;div&gt;If i understand your Q here, you&#39;re asking about =\r\nhow servers can map authorization details to content once the request&#39;s ide=\r\nntify has been established. I usually employ a rather simple authorization =\r\nmodel: the URI alone. I usually map URIs to protocol actions (GET, PUT, POS=\r\nT, DELETE, etc.) and apply that &quot;permission&quot; to a user identify (or group o=\r\nf them). &nbsp;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;May be it call=\r\ns for a different thread of discussion but my question wasn&#39;t about how the=\r\n authorization can be implemented but more related to uri design. For examp=\r\nle we could have sales by region or sales by business unit.&nbsp;&lt;/div&gt;\n&lt;di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;i.e.&nbsp;/cpg/us/tx/sales for cpg sales in us tx&lt;/div&gt;&lt;di=\r\nv&gt;or /us/tx/cpg for cpg sales in us tx&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So my quest=\r\nion was, since the taxonomy is subject to change depending on how the organ=\r\nization wants to use the resources how does one design resource uri to acco=\r\nmmodate the change. I believe these should be hypermedia driven to shield t=\r\nhe client from changing taxonomies=85 but the convenience and pragmatism of=\r\n human readable uri&#39;s is compelling from a pragmatic perspective.&lt;/div&gt;\n&lt;di=\r\nv class=3D&quot;im&quot;&gt;&lt;br&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;While it is helpful to us=\r\ne URIs that make applying authZ rules easy, that&#39;s a server-side&nbsp;conve=\r\nnience&nbsp;that clients need not know about. On the implementation detail =\r\nside, applying a regexp to a URI works quite well &nbsp;for me when checkin=\r\ng authZ details. This works with a wide range of URIs, whether they have ea=\r\nsily&nbsp;discernible&nbsp;patterns or not. keeping the authZ de-coupled fr=\r\nom the actual content *and* using an algorithm for checking the identifiers=\r\n (URIs) means future modifications to the &nbsp;URI name space have a limit=\r\ned impact on the overall system.&lt;/div&gt;\n&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;d=\r\niv&gt;=85 which is similar to what we do, but I was wondering if there are oth=\r\ner ways people are solving this problem.&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;blockquote=\r\n type=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;font color=3D&quot;#000000&quot;&gt;&lt;br&gt;\n&lt;/font&gt;&lt;div class=3D&quot;gmail=\r\n_quote&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin-top:0px;margin-ri=\r\nght:0px;margin-bottom:0px;margin-left:0.8ex;border-left-width:1px;border-le=\r\nft-color:rgb(204, 204, 204);border-left-style:solid;padding-left:1ex&quot;&gt;\n&lt;div=\r\n style=3D&quot;word-wrap:break-word&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Dilip Kri=\r\nshnan&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;mailto:dilip.krishnan@...&quot; target=3D&quot;_blan=\r\nk&quot;&gt;dilip.krishnan@...&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/bl=\r\nockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;=\r\n/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail=_7161743B-B91A-4BB9-B8A2-16B2F8F7F5FA--\r\n\n"}}