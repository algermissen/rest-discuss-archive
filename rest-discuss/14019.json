{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"Umr_6s5Msu3rMfDSDzT-zXLN8vQqqnswgBwOAPOZwW5tZIgrtbLx1phb3u8Qi2lkiOGBBoC0tWNEIyfgyDs9qOwNJ18gVLizzw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Service descriptions and legal contracts","postDate":"1257553032","msgId":14019,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM5MTVjNjlkMDkxMTA2MTYxN243OTJiOTMyYW05MmMyNzU2OTgwMmVmODQ3QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PERCMEI5MkI0LTUzNEUtNDI2MS1CMDM0LTg2NEUwNDUzQzNBM0BtYWMuY29tPg==","referencesHeader":"PGhkMWM5aitiN2d2QGVHcm91cHMuY29tPgkgPENDNzM5QTY4LTFCQjEtNEMwOS1BNzM1LTFDRTRGMzMxNjA4OUBtYWMuY29tPgkgPGIwZWJhZmQxMDkxMTA2MTE0MW8xYmVhYWI1MXJmYmI3MDMzZDM2NzQ1MTBkQG1haWwuZ21haWwuY29tPgkgPEI1MEYxMDg1LUM0MTQtNDI0RC1BMzJBLTZEMEMzREMzNzk2MkBtYWMuY29tPgkgPGIwZWJhZmQxMDkxMTA2MTMyN3U3MmJiZjllN2o4YWZiYmQyOTJiMTRmY2M4QG1haWwuZ21haWwuY29tPgkgPDhCM0IzNjQ2LTM3QUUtNDlCQS04NDMxLTE3QjA1QjNERDNENEBtYWMuY29tPgkgPDM5MTVjNjlkMDkxMTA2MTM0OGs4MTRmMTdxMTg0YzZlMDQ1Nzg4NjE1MEBtYWlsLmdtYWlsLmNvbT4JIDxEQjBCOTJCNC01MzRFLTQyNjEtQjAzNC04NjRFMDQ1M0MzQTNAbWFjLmNvbT4="},"prevInTopic":14018,"nextInTopic":14020,"prevInTime":14018,"nextInTime":14020,"topicId":13996,"numMessagesInTopic":25,"msgSnippet":"... When talking machine to machine, I don t think a REST client is any different in terms of rigidity than any other remote protocol. The REST client will do","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 14024 invoked from network); 7 Nov 2009 00:17:13 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.sp2.yahoo.com with QMQP; 7 Nov 2009 00:17:13 -0000\r\nX-Received: from unknown (HELO mail-pw0-f51.google.com) (209.85.160.51)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Nov 2009 00:17:13 -0000\r\nX-Received: by pwi19 with SMTP id 19so922560pwi.30\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Nov 2009 16:17:12 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.115.65.11 with SMTP id s11mr7288785wak.170.1257553032690; Fri, \n\t06 Nov 2009 16:17:12 -0800 (PST)\r\nIn-Reply-To: &lt;DB0B92B4-534E-4261-B034-864E0453C3A3@...&gt;\r\nReferences: &lt;hd1c9j+b7gv@...&gt;\n\t &lt;CC739A68-1BB1-4C09-A735-1CE4F3316089@...&gt;\n\t &lt;b0ebafd10911061141o1beaab51rfbb7033d3674510d@...&gt;\n\t &lt;B50F1085-C414-424D-A32A-6D0C3DC37962@...&gt;\n\t &lt;b0ebafd10911061327u72bbf9e7j8afbbd292b14fcc8@...&gt;\n\t &lt;8B3B3646-37AE-49BA-8431-17B05B3DD3D4@...&gt;\n\t &lt;3915c69d0911061348k814f17q184c6e0457886150@...&gt;\n\t &lt;DB0B92B4-534E-4261-B034-864E0453C3A3@...&gt;\r\nDate: Fri, 6 Nov 2009 16:17:12 -0800\r\nMessage-ID: &lt;3915c69d0911061617n792b932am92c27569802ef847@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Re: Service descriptions and legal contracts\r\nX-Yahoo-Group-Post: member; u=401876259; y=T_HAAKBfQs9KuaYx9Bz_L1f1ejIrclrF89aCtDmXOg4h0ggyojMdxA\r\nX-Yahoo-Profile: gaminginparis\r\n\r\nOn Fri, Nov 6, 2009 at 3:25 PM, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt; OTH, it seems contrary to what REST is aiming at. From a REST POV the\n&gt; understanding really is (IMHO) that the client makes observations,\n&gt; probably &#39;implements&#39; them and then trusts the server to &#39;do its\n&gt; best&#39;.\n\nWhen talking machine to machine, I don&#39;t think a REST client is any\ndifferent in terms of rigidity than any other remote protocol. The\nREST client will do what it&#39;s told with the payloads it sends and\nreceives.\n\nTo a human, a robust REST service should be able to be &quot;discovered&quot;.\nAt this level, REST can be a GUI view to a normal protocols Command\nLine view.\n\nIn theory, with little more than a host name, a human can &quot;crawl&quot; a\nREST service, and discover it features and data types.\n\nEach payload tells the user what are valid edges on the graph that\nmakes up the API. In theory, with robust XSDs, which can be self\ndocumenting, the user can learn how to build those payloads, and what\nis and is not valid input for them.\n\nIn a GUI, you browse Menus, you look at Dialog options, and slowly,\nover time, you can learn much about the application and it&#39;s\ncapabilities. REST can be similar. The Common Interface means certain\naspects of the API simply are left unsaid, the operations defined by\nthe Common Interface. Whether a resource supports the Common Interface\nis in itself can be discoverable (for example, using OPTIONS with\nHTTP).\n\nSo, in this case, a REST interface can be like Literal Programming.\nImagine if each payload were an XML document, with an accompanying\nXSD, and, also, a XSLT processing instruction point to a template that\nrenders a complete HTML, human readable description of the payload.\n\nBut, none of this helps machine clients. It help people CREATE machine\nclients, but once created, as we all well know, machine clients are\nbone stupid and aggravatingly literal.\n\nIf a service changes, and thus breaks an existing machine client, a\nuser can, in theory, rely on the discoverable nature to fix the client\nand bring it back on line. But obviously if you need to truly rely on\nthis transaction, it would be better to work with a guarantee of some\nkind from the provider that the service simply will not change\nunderneath the feet of deployed clients (an SLA).\n\nAt an automated level, the focus on the link relationships, rather\nthan the URIs themselves, lets the underlying infrastructure change,\npotentially in even dramatic ways, without affect (we&#39;ve seen how\nservices like Amazon and Ebay have grown with us as consumers being\npretty much none the wiser of the physical deployment aspects). By\nusing a backwards compatible formats, older clients keep working,\nnewer clients get new functionality.\n\nThe machine web can handle physical changes fairly easily, with a\nrobust client, and cooperative back ends. As long as the initial entry\npoints are properly supported, most everything else can be discovered\nby the client as it does it&#39;s processing.\n\nHowever, the machine web can not handle incompatible API changes on\nits own. It simply can&#39;t. The clients are too rigid, as they must be.\n\nEarlier someone mentioned how Firefox doesn&#39;t have to be rewritten to\nuse Google, or Amazon, or Ebay. In terms of RENDERING the servers\ncontent, they&#39;re correct. The fundamental difference is that Firefox\nis not USING those services. The Human user is. The human is\ninterpreting the resource representations and leveraging that\ninformation to perform their task (search, buying, bidding, whatever).\n\nThe contract between Firefox and Google is the same &quot;I send you URLs,\nyou send me HTML&quot;. The HTML is &quot;opaque&quot; to Firefox. It simply does not\ncare what is being returned. It&#39;s job is not to care, rather it&#39;s job\nis to execute the payload, and present the results to the user.\n\nNow, if Firefox asked Google for &quot;index.html&quot;, and Google replied\n&quot;Here you go, text/html&quot; and then streamed JPEG content, Firefox would\nblink, pause, go WTF, and finally dump a load of gibberish for the\nHuman to interpret, since the JPEG content is most certainly NOT HTML\nlike was asked for and promised.\n\nThe machine web is cold, uncaring, and not very tolerant of change.\nIt&#39;s particularly stubborn when it&#39;s lied too.\n\nI don&#39;t think it is appropriate to apply the Human Web to the Machine\nWeb in this sense. REST is no magic bullet, REST offers no\n&quot;intuition&quot;, or &quot;interpretation&quot; to make the machine web less rigid or\nmore forgiving. A Client can be, modern web browsers can do amazing\nguess work and work almost at a &quot;do what I mean&quot; level. But they leave\nmuch of the hard part of leveraging actual services to the Carbon\nBased Lifeform driving the keyboard.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\n"}}