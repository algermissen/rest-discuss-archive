{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"WsOX_7orqp-FCK2V26osJHM03CtmTbjEG7TRlZm-OwzQ_LkfsTpDGUmJV_FgIXfzczqW_67EPkIXjd9AakDXXNhJAIn8xA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HttpEvents:  Subscription Expiration, Authentication","postDate":"1011987863","msgId":295,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTFCNTk3LkZGRUUzRUFBQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDNTE4REE5LkRBQjFBNDk1QGp1bXAubmV0Pg=="},"prevInTopic":293,"nextInTopic":0,"prevInTime":294,"nextInTime":296,"topicId":273,"numMessagesInTopic":5,"msgSnippet":"... Okay. ... We need to differentiate between the subscription factory and the subscription... i.e. there is National Geographic. The subscribed-to resource. ","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 25 Jan 2002 19:45:25 -0000\r\nReceived: (qmail 30045 invoked from network); 25 Jan 2002 19:45:25 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m5.grp.snv.yahoo.com with QMQP; 25 Jan 2002 19:45:25 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.snv.yahoo.com with SMTP; 25 Jan 2002 19:45:25 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0PJjM130237;\n\tFri, 25 Jan 2002 11:45:22 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0PJjJe15691;\n\tFri, 25 Jan 2002 11:45:19 -0800\r\nMessage-ID: &lt;3C51B597.FFEE3EAA@...&gt;\r\nDate: Fri, 25 Jan 2002 11:44:23 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: jbone@...\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] HttpEvents:  Subscription Expiration, Authentication\r\nReferences: &lt;3C518DA9.DAB1A495@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt; One terminological suggestion, two problems, two suggested solutions.\n&gt; \n&gt; Suggestion:  rather than calling the target of event notifications an\n&gt; &quot;event target&quot; why not reify the notion of the subscriber and simply\n&gt; call the header that indicates that URI &quot;Subscriber&quot;?  \n\nOkay.\n\n&gt; ...\n&gt; Suggested solution:  when a Subscriber (client) obtains a subscription\n&gt; via the URI indicated in the &quot;Subscription&quot; header, \n\nWe need to differentiate between the subscription factory and the\nsubscription...\n\ni.e. there is National Geographic. The subscribed-to resource.\nThere is &quot;publisher&#39;s clearinghouse&quot;. The subscription factory.\nAnd there is MY subscription. The thing that I need to spend money to\nupkeep.\n\n&gt; ... the response SHOULD\n&gt; contain a header &quot;Expiration&quot; which indicates when the subscription\n&gt; expires.\n\nOkay. But there must be a way to retreive this later or the expiration\ndata is &quot;information not on the web.&quot; It should always be available at\nthe &quot;my subscription&quot; resource. In fact the ability to get it in the\noriginal subscription transaction should be viewed as an optimization to\navoid a hop.\n\n&gt; ...  If an Expiration is indicated, the Subscriber MUST &quot;renew&quot; the\n&gt; subscription at some point before the Expiration date in some fashion.\n&gt; (How?  Presumably via a POST of some sort to the particular\n&gt; subscription&#39;s Location: URI?) \n\nI don&#39;t want to end up overloading POST to the subscription URI. I guess\nright now we don&#39;t have any behaviour there yet so it should be okay to\nuse that for renewal. I guess you can &quot;suggest&quot; a renewal period and the\nPOST will return one.\n\n&gt; ... If a Subscriber fails to renew a\n&gt; subscription by the indicated expiration, the server MAY at any\n&gt; subsequent point remove the subscription resource and stop sending\n&gt; notifications to the Subscriber.\n\nFine. Maybe there should be a way to let them &quot;piggy back&quot; notifications\nwith expiration information. i.e. as long as we talk to each other in\nthe next hour I&#39;ll extend your subscription for an hour. But let&#39;s leave\nthat out for now and see if there is demand for it later.\n\n&gt; The mechanism Paul describes is potentially very dangerous;  it needs a\n&gt; kind of authentication beyond simple principal / session\n&gt; authentication.  Consider:  Mallory wants to DoS Alice.  To do so,\n&gt; Mallory subscribes to Bob, but gives Alice&#39;s URI to Bob as the\n&gt; Subscriber / EventTarget.  Even if Bob authenticates Mallory --- indeed,\n&gt; even if Mallory is a valid user from Bob&#39;s perspective --- that still\n&gt; doesn&#39;t prevent Mallory from using Bob to attack Alice. \n\nAttack is a strong word. I would say that annoyance is the best you\ncould achieve with any reasonable web service. Plus, if the web service\nhas authenticated Mallory, and thus has a form of accountability, then\nwhat&#39;s worse about this than having Mallory directly send data to a URI\nat Alice? Why bother with the intermediary?\n\n&gt; ... Somehow, the\n&gt; &quot;client&quot; that requests a subscription needs to be verifiably the &quot;same&quot;\n&gt; in some sense as the Subscriber / EventTarget.\n\nThe client needs to say that it really does want the messages. Whether\nit is the same or not is irrelevant. i.e. if I sign you up for FoRK,\nthat&#39;s only a problem if you happen to be a FoRK addict and you&#39;re\ntrying to quit. If you WANT FoRK then what does it matter whether you\nsigned yourself up or not?\n\nThis suggests that the original subscription should be jiggered so that\nit expires after the first message. It should require a confirmation for\nfurther messages. The confirmation does not have to be as complicated as\na subscriptionID. A simple &quot;please continue this subscription&quot; should\nsuffice.\n\nI feel like somehow this is related to expiration. Some subscriptions\nexpire after a certain amount of time. Others expire after a certain\nnumber of messages. Most SHOULD start in a state such that they expire\nafter the first message.\n\n Paul Prescod\n\n"}}