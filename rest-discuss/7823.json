{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"WDDDk0a8Q-hljvhMKQt2opXCa_wvGNnx7exnfCY3I4q3_sds5PZwgwzlbLhZ1v6S9vGaxexmYUpm0kAZSQbOGIdUWLPvNKH9xBJdbnf8k_hjpqGZftSM48s","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] POST at most once","postDate":"1170881183","msgId":7823,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNzA4ODExODMuNTY0Ni4zNy5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PGM3MGJjODVkMDcwMjAzMjAyNG01ZTY0YWM3Y204NmYzYzBlMDhiYTQ4NWJlQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDExNjkyOTc0NjUuNTEzMC41NS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8NDVCMjc0NDIuMzAzMDAwM0BkZWhvcmEubmV0PgkgPDExNjk4NzU5NzUuNTM2My40Mi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8OUI1N0JCQzgtMkIzNi00Mjc3LUJCQUItQ0Q3N0E4RTNGRTkyQG1ub3QubmV0PgkgPDExNzA1NTQ0MTAuNTMwMi42OC5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8YzcwYmM4NWQwNzAyMDMyMDI0bTVlNjRhYzdjbTg2ZjNjMGUwOGJhNDg1YmVAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":7817,"nextInTopic":7828,"prevInTime":7822,"nextInTime":7824,"topicId":7646,"numMessagesInTopic":40,"msgSnippet":"... I m starting to like this approach. Let me have a go at rephrasing it as a concrete proposal: Problem statement: (same as before) I have some state that I","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 51631 invoked from network); 7 Feb 2007 20:46:43 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m40.grp.scd.yahoo.com with QMQP; 7 Feb 2007 20:46:43 -0000\r\nReceived: from unknown (HELO mail01.syd.optusnet.com.au) (211.29.132.182)\n  by mta5.grp.scd.yahoo.com with SMTP; 7 Feb 2007 20:46:42 -0000\r\nReceived: from c210-49-93-69.rochd2.qld.optusnet.com.au (c210-49-93-69.rochd2.qld.optusnet.com.au [210.49.93.69])\n\tby mail01.syd.optusnet.com.au (8.13.1/8.13.1) with ESMTP id l17KkN0U006853;\n\tThu, 8 Feb 2007 07:46:24 +1100\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nCc: Mark Nottingham &lt;mnot@...&gt;, Bill de hOra &lt;bill@...&gt;,\n        REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;c70bc85d0702032024m5e64ac7cm86f3c0e08ba485be@...&gt;\r\nReferences: &lt;1169297465.5130.55.camel@...&gt;\n\t &lt;45B27442.3030003@...&gt;\n\t &lt;1169875975.5363.42.camel@...&gt;\n\t &lt;9B57BBC8-2B36-4277-BBAB-CD77A8E3FE92@...&gt;\n\t &lt;1170554410.5302.68.camel@...&gt;\n\t &lt;c70bc85d0702032024m5e64ac7cm86f3c0e08ba485be@...&gt;\r\nContent-Type: text/plain\r\nDate: Thu, 08 Feb 2007 06:46:23 +1000\r\nMessage-Id: &lt;1170881183.5646.37.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.3 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] POST at most once\r\nX-Yahoo-Group-Post: member; u=184797058; y=cQDzEgFllumTU6DcdsnhodJTK1bz9npvXJtId-ZHQ8BmGj8\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Sat, 2007-02-03 at 23:24 -0500, Mark Baker wrote:\n&gt; On 2/3/07, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n&gt; &gt; So here are the strategies I can think of seeing so far:\n&gt; &gt; 1. Have the user observe some property of the system to determine\n&gt; &gt; whether to retry themselves. In SCADA this might be to observe a\n&gt; change\n&gt; &gt; in voltage before deciding whether or not to retry a circuit-breaker\n&gt; &gt; trip. This can be automated as another SCADA concept: &quot;Target state\n&gt; &gt; monitoring&quot;. Regardless of the reponse we recieved, did the resource\n&gt; &gt; actually reach the state we intended?\n&gt; A technique I&#39;ve used once was to have the client send an HTTP header\n&gt; in the POST request which played a role sort of like a client-side\n&gt; etag with respect to the request body. The server, upon receiving the\n&gt; message and updating the state of the resource, would return another\n&gt; header containing a hash of the last days worth of tags (which wasn&#39;t\n&gt; many) on GET requests to that resource so that it could check if *its*\n&gt; update was applied.\n\nI&#39;m starting to like this approach. Let me have a go at rephrasing it as\na concrete proposal:\n\nProblem statement: (same as before)\nI have some state that I want to append to a resource. The right method\naccording to HTTP is POST, but if I don&#39;t get a response to my POST I\ndon&#39;t know whether or not to retry.\n\nClient algorithm:\n...\nguid = generateGloballyUniqueID();\nrequest.addHeader(&quot;Client-Etag&quot;,guid);\ntry\n{\nretryPOST:\n    startOrResetTimer(reasonable digest retention period, eg 2min);\n    factory.POST(request);\n}\ncatch (NoResponse) // aka GatewayTimeout\n{\n    etagDigest = factory.GET();\n    if (guid in etagDigest)\n    {\n        // Nothing to be done. The POST was successful.\n    }\n    else\n    {\n        // One of two possibilities exist. Either,\n        // * our POST didn&#39;t arrive, or\n        // * our etag has cycled out of the digest\n        // We try to ensure that the latter doesn&#39;t\n        // happen by giving up after a reasonable\n        // period.\n        goto retryPOST;\n    }\n}\ncatch (RetentionPeriodTimeout)\n{\n    // It is still possible that our etag would be in\n    // the digest at this point, so we could do a final\n    // GET. If we are in the digest, there is no problem.\n    // If we are not in the digest we can no longer assume\n    // that it is because our request didn&#39;t happen.\n    // Our request might have simply cycled out.\n}\ncatch (...)\n{\n    // Normal error handling\n}\n\nServer constraints:\n* Client etags are stored in the factory as a digest of recent POST\nrequests for a reasonable amount of time\n* Only successful requests have their etag stored in the digest, so\nclients can still retry failed requests. Success would generally mean\nthat state was successfully appended to the server, though there may be\nsome corner cases.\n\nPossible efficiency improvements:\n* A URI template might allow the client to query for their specific\netag, but a protocol would have to be developed for this. Perhaps\ninstead of a digest, the factory could return this template. That would\nalso potentially deal with security issues arising from guids leaking\nfrom one client to another.\n\nPros/Cons:\n* In the normal case where the POST does not time out there is very\nlittle extra communications overhead\n* The server has to store the state of recent successful requests for a\nperiod rather than the state of requests that did not go ahead. ie we\ntrade less communications overhead for more server state overhead. On\nthe other hand, this server state overhead should be proportional to the\namount of state the server allowed to be appended to itself as part of\nthe POST. It doesn&#39;t change the fundamental server-side state picture...\njust changes the constant.\n\nCautions\n* Under extreme conditions there could still be a race condition between\na POST arriving at the server and a GET request being issued to the\nfactory or template-derived url. This shouldn&#39;t really happen if the\nclient gives up on the POST under reasonable conditions. Those might\ninclude &quot;40s has passed&quot;, or &quot;I&#39;m using TCP/IP keepalive while requests\nare outstanding to monitor our shared communication state, and the HA\ncluster member I was talking to appears to have been replaced by its\nbackup, killing my connection&quot;. The final case of &quot;I&#39;m using TCP/IP\nkeepalive while requests are outstanding, and it simply timed out due to\nnetwork conditions&quot; could still be a problem.\n\nBenjamin\n\n\n"}}