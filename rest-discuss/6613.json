{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"GM2lvImgkqRskfSw3D2eTT_Z5BqIrcGQppeTPwjh5l9UsWGtwb_0UifgnAnpt3Jy_eVs6NgxwqhNG2_xCzJjut_TgMRTKko9giRvjg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Seeking feedback on the Blinksale API","postDate":"1159826970","msgId":6613,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDY5NzlFNERFLTFGNEUtNDA5OS1CRTk1LTA4OUQzN0ZEOThDQ0BnYml2LmNvbT4=","inReplyToHeader":"PGM3MGJjODVkMDYxMDAyMDgzN200ZjEyNjNjM3M0ZTMxNWQ3MWZhMjBiNDVjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGEzNzNkYzc0MDYwOTI1MjIxNXQ3ODczZjg0ZW9mMGRkZDZmYjMzNDk1OWFmQG1haWwuZ21haWwuY29tPiA8NDkwMjAxREMtOENEOS00MTkyLUE1RDMtRDA2MUQ5ODJBOEI1QGdiaXYuY29tPiA8YTM3M2RjNzQwNjA5MjgxMjQ0aDFhZDNiMjcxczI1OTk4NzE1ODIwMzRkYmJAbWFpbC5nbWFpbC5jb20+IDwxMTU5NTk5NjMzLjczMDUuMzUuY2FtZWxAbG9jYWxob3N0LmxvY2FsZG9tYWluPiA8RURFODA2M0QtNTM0Qi00MjZCLUE0MkYtQ0MzOTMwODU4RkI4QGlubm9xLmNvbT4gPDg3eTdzMGU5aWcuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+IDxGMDRGNUI2My00NzkyLTQ0RjItQjU4OC0xMzNDRTc0NTU2MkFAdG9waWNtYXBwaW5nLmNvbT4gPDg3dmVuNGUxOTQuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+IDwyMEM2RUQzQy05NkJBLTRFOUQtQUZCMS1BMTk3RkM5RjIzMDdAZ2Jpdi5jb20+IDxjNzBiYzg1ZDA2MTAwMjA4MzdtNGYxMjYzYzNzNGUzMTVkNzFmYTIwYjQ1Y0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":6612,"nextInTopic":6614,"prevInTime":6612,"nextInTime":6614,"topicId":6563,"numMessagesInTopic":57,"msgSnippet":"... Both.  That is just a summary.  The real constraint you are looking for is under 5.2.1: REST provides a hybrid of all three options by focusing on a shared","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 76046 invoked from network); 2 Oct 2006 22:09:49 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m33.grp.scd.yahoo.com with QMQP; 2 Oct 2006 22:09:49 -0000\r\nReceived: from unknown (HELO scorpio.lunarpages.com) (209.200.229.70)\n  by mta8.grp.scd.yahoo.com with SMTP; 2 Oct 2006 22:09:48 -0000\r\nReceived: from wsip-70-183-62-251.oc.oc.cox.net ([70.183.62.251] helo=[10.2.8.53])\n\tby scorpio.lunarpages.com with esmtpa (Exim 4.52)\n\tid 1GUVzG-00031b-Al; Mon, 02 Oct 2006 15:10:10 -0700\r\nIn-Reply-To: &lt;c70bc85d0610020837m4f1263c3s4e315d71fa20b45c@...&gt;\r\nReferences: &lt;a373dc740609252215t7873f84eof0ddd6fb334959af@...&gt; &lt;490201DC-8CD9-4192-A5D3-D061D982A8B5@...&gt; &lt;a373dc740609281244h1ad3b271s2599871582034dbb@...&gt; &lt;1159599633.7305.35.camel@...&gt; &lt;EDE8063D-534B-426B-A42F-CC3930858FB8@...&gt; &lt;87y7s0e9ig.fsf@...&gt; &lt;F04F5B63-4792-44F2-B588-133CE745562A@...&gt; &lt;87ven4e194.fsf@...&gt; &lt;20C6ED3C-96BA-4E9D-AFB1-A197FC9F2307@...&gt; &lt;c70bc85d0610020837m4f1263c3s4e315d71fa20b45c@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;6979E4DE-1F4E-4099-BE95-089D37FD98CC@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Mon, 2 Oct 2006 15:09:30 -0700\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-AntiAbuse: This header was added to track abuse, please include it with any abuse report\r\nX-AntiAbuse: Primary Hostname - scorpio.lunarpages.com\r\nX-AntiAbuse: Original Domain - yahoogroups.com\r\nX-AntiAbuse: Originator/Caller UID/GID - [0 0] / [47 12]\r\nX-AntiAbuse: Sender Address Domain - gbiv.com\r\nX-Source: \r\nX-Source-Args: \r\nX-Source-Dir: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] Seeking feedback on the Blinksale API\r\nX-Yahoo-Group-Post: member; u=175757792; y=Ndzl3FV0ABE-BexdUmFWmHviaBk_MLF9oaG3vkfx78xHqNZ5RIq-\r\nX-Yahoo-Profile: roy_fielding\r\n\r\nOn Oct 2, 2006, at 8:37 AM, Mark Baker wrote:\n&gt; On 10/1/06, Roy T. Fielding &lt;fielding@...&gt; wrote:\n&gt; &gt; Well, so do I. Self-descriptive means that the type is registered  \n&gt; and\n&gt; &gt; the registry points to a specification and the specification  \n&gt; explains\n&gt; &gt; how to process the data according to its intent.\n&gt;\n&gt; Ok, which one is it? 8-)\n&gt;\n&gt; &quot;REST enables intermediate processing by constraining messages to be\n&gt; self-descriptive: interaction is stateless between requests, standard\n&gt; methods and media types are used to indicate semantics and exchange\n&gt; information, and responses explicitly indicate cacheability.&quot;\n\nBoth.  That is just a summary.  The real constraint you are looking\nfor is under 5.2.1:\n\n    REST provides a hybrid of all three options by focusing on a\n    shared understanding of data types with metadata, but limiting\n    the scope of what is revealed to a standardized interface.\n    REST components communicate by transferring a representation of\n    a resource in a format matching one of an evolving set of standard\n    data types, selected dynamically based on the capabilities or\n    desires of the recipient and the nature of the resource. Whether\n    the representation is in the same format as the raw source, or is\n    derived from the source, remains hidden behind the interface. ...\n\nThis is one of those gray areas of increasing RESTfulness that will\ndoubtless drive some people nuts.  The problem is that I can&#39;t say\n&quot;REST requires media types to be registered&quot; because both Internet\nmedia types and the registry controlled by IANA are a specific\narchitecture&#39;s instance of the style -- they could just as well be\nreplaced by some other mechanism for metadata description.\n\nThe broader question is what does it take to create an *evolving*\nset of standard data types?  Obviously, I can&#39;t say that all data\ntypes have to be *the* standard before they are used in a REST-based\narchitecture.  At the same time, I do require enough standardization\nto allow the data format sent to be understood as such by the\nrecipient.  Hence, both sender and recipient agree to a common\nregistration authority (the standard) for associating media types\nwith data format descriptions.  The degree to which the format chosen\nis a commonly accepted standard is less important than making sure\nthat the sender and recipient agree to the same thing, and that&#39;s\nall I meant by an evolving set of standard data types.\n\nSure, it is easier to deploy the use of a commonly understood data\nformat.  However, it is also more efficient to use a format\nthat is more specifically intended for a given application.\nWhere those two trade-offs intersect is often dependent on the\napplication.  REST does not demand that everyone agree on a single\nformat for the exchange of data -- only that the participants in the\ncommunication agree.  Beyond that, designers need to apply their\nown common sense and choose/create the best formats for the job.\n\nIf we want to call one more RESTful than the other, then we have\nto take the goal of evolution into account.  I would say it is more\nRESTful to use a specific standard type when applicable or to define\na new type that is specific to a given purpose AND intended to be\nstandardized for that application type (i.e., proprietary types are\nless RESTful than industry-wide standard types, but new standard\ntypes are not less RESTful than old standard types).  But that is\nreally only my personal preference, since the style does not\nconstrain REST-based architectures to a single standard.\n\n....Roy\n\n"}}