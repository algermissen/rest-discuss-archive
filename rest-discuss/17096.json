{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"DXb9JjRd73XqrF-wqpK5QIekRfP2FjpiP5jCLASULKnJeJIgbsxOYjO5b79ViqvwuTYMd7kgoWVBU63lhvY5jNIIeS83m9aszoiTLgiDfA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTML REST API example [was: Link relations]","postDate":"1291966726","msgId":17096,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMjEwMDAzODQ2Ljc1OWU3ZGE0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGk9VXlaU2lIR0xnMjgrQjRtZHNzb09INlFjVURqbzBTRlBOLXFRaUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDIwMTAxMjA1MDUxODUyLmJiNTg1ZjhkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluYTNTX1ErVkdqZDlPR3hxb2c5RXlVODZONVphNG4yTllkNTlLakBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMjA1MTY0OTMxLmE1NGMyNDk3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9TkVtNndBTnlSZDhoLXE0Ty1XQVhWVVZjejdGdkc4ODE9UjVQaUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMjA1MjIyNDA5LjJkYzZjYjY2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluV0otTG92SmRMQ256enU9SiszS2I9clBWMFpBU2IrZmRqNnpyOEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMjA2MTQ0NTM3LjIzYjQ1MGMwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9Mk9hdDlZMnk2dzlIZkg9MU12UT1PWFdxZDQtSjJkUm9UUWgxV0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMjA3MDE0MDAwLjQwMzE5YjdmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9VXlaU2lIR0xnMjgrQjRtZHNzb09INlFjVURqbzBTRlBOLXFRaUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17095,"nextInTopic":17097,"prevInTime":17095,"nextInTime":17097,"topicId":17057,"numMessagesInTopic":43,"msgSnippet":"... I empathize with that position.  Here s my problem:  initially I thought it was surely an error that RDFa and XForms don t have media types.  I then","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38311 invoked from network); 10 Dec 2010 07:38:48 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 10 Dec 2010 07:38:48 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.re1.yahoo.com with SMTP; 10 Dec 2010 07:38:48 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 33355509D9;\n\tFri, 10 Dec 2010 02:38:47 -0500 (EST)\r\nDate: Fri, 10 Dec 2010 00:38:46 -0700\r\nTo: Peter Williams &lt;pezra@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20101210003846.759e7da4.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=UyZSiHGLg28+B4mdssoOH6QcUDjo0SFPN-qQi@...&gt;\r\nReferences: &lt;20101205051852.bb585f8d.eric@...&gt;\n\t&lt;AANLkTina3S_Q+VGjd9OGxqog9EyU86N5Za4n2NYd59Kj@...&gt;\n\t&lt;20101205164931.a54c2497.eric@...&gt;\n\t&lt;AANLkTi=NEm6wANyRd8h-q4O-WAXVUVcz7FvG881=R5Pi@...&gt;\n\t&lt;20101205222409.2dc6cb66.eric@...&gt;\n\t&lt;AANLkTinWJ-LovJdLCnzzu=J+3Kb=rPV0ZASb+fdj6zr8@...&gt;\n\t&lt;20101206144537.23b450c0.eric@...&gt;\n\t&lt;AANLkTi=2Oat9Y2y6w9HfH=1MvQ=OXWqd4-J2dRoTQh1W@...&gt;\n\t&lt;20101207014000.40319b7f.eric@...&gt;\n\t&lt;AANLkTi=UyZSiHGLg28+B4mdssoOH6QcUDjo0SFPN-qQi@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] HTML REST API example [was: Link relations]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nPeter Williams wrote:\n&gt; \n&gt; My biggest concern is that rdfa is hidden.\n&gt; \n\nI empathize with that position.  Here&#39;s my problem:  initially I thought\nit was surely an error that RDFa and XForms don&#39;t have media types.  I\nthen decided that the folks who know more about this than I do, probably\nknow what they&#39;re doing.  So, I based my notion of media type around the\nreality.  But maybe those experts are in error; in which case I&#39;ve drawn\nall the wrong conclusions about REST and media types.\n\nUsing an XForms-specific media type sure would make my life easier, in\nthat conneg could be used to determine user-agent capability.  Surely\nthat&#39;s the point of it all.  I felt really comfortable with my REST\nknowledge before my pursuit of XForms and RDFa stood my notion of what\nmedia types are on its head (plus Roy&#39;s REST-APIs-must-be-hypertext-\ndriven post) a couple of years back.  Understanding why XForms and RDFa\n*aren&#39;t* media types, let alone explaining it, isn&#39;t easy.\n\n&gt;\n&gt; The processing model for (x)html is basically &quot;render the document so\n&gt; that the user can interpret it base on the latent semantics in the\n&gt; natural language text and let the user decide which other related\n&gt; resources to interact with next&quot;.\n&gt;\n\nDisagree.  Accessibility markup removes human natural-language\ninterpretation from the equation, i.e. &lt;link rel=&#39;glossary&#39;/&gt;, like \nother accessibility markup, isn&#39;t meant to be seen by most users.  The\npattern &lt;hx&gt;&lt;ul&gt; with a list of links is interpreted as a menu, while a\nsighted user could care less about the markup syntax so long as what&#39;s\nrendered *looks* like a menu.  These markup semantics are also part of\nthe processing model, which isn&#39;t limited to natural-language rendering\nfor human consumption, which is why HTML isn&#39;t entirely useless for\nrepurposing as an m2m format (despite assumptions to the contrary).\n\n&gt;\n&gt; In this processing model rdfa is entirely superfluous, as is a lot of\n&gt; the other markup in most web pages.\n&gt;\n\nREST basically says superfluous markup is a good thing.  Data formats\naren&#39;t optimized for any one use case or type of user, or even user-\nagent.  Read what&#39;s needed and ignore the rest, it isn&#39;t about saving\nbytes.  Take my example markup -- just how many ways are there to set\nthe language of the document, anyway?  Well, five in (X)HTML.  I&#39;d\nprefer to pick one, and no user-agent will be looking for more than one,\nbut for the sake of accessibility (this is a WCAG checkpoint) I use them\nall, so nobody&#39;s left out.  To me, RDFa is just an extension to existing\naccessibility markup.  What&#39;s superfluous in the markup varies based on\nthe capabilities or coding of user-agents, this is an expected byproduct\nof decoupling.\n\n&gt;\n&gt; It is perfectly legal for an intermediate to complete rewrite the\n&gt; html as long at that transformation does not negatively impact the\n&gt; processing model (ie, it is still easy for the human at the end to\n&gt; understand the page).  A use case for such transformations is page\n&gt; simplification for rendering on small form factor devices.  This\n&gt; ability for intermediates to provide value is a very important\n&gt; feature of rest architectures.\n&gt; \n\nTranscoding proxies typically care about converting markup to be well-\nformed, while using other tricks common to Web accelerators to combat\ntypical problems (i.e. a 200x100 image sized to 20x10 may be reduced).\nBut I&#39;ve never heard of one stripping markup attributes to save bytes.\nTheoretically, the presence of an XHTML+RDFa DTD tells intermediaries\nto leave valid attributes alone -- they&#39;re obviously part of the data\ntype.\n\n&gt;\n&gt; Basing an autonomous client architecture entirely on rdfa embedded in\n&gt; xhtml seems risky because the media type provides no protection for\n&gt; the rdfa.  An intermediate that chooses to strip the rdfa out would be\n&gt; perfectly legal.  Removing the rdfa has zero impact on the html\n&gt; processing model.\n&gt;\n\nThis isn&#39;t the purpose of the media type; it&#39;s a problem which falls in\nthe realm of the data type version.  Intermediaries which strip out\nvalid markup that&#39;s included in the DOCTYPE are just broken.  The media\ntype really says nothing about what markup is allowed -- text/html\nworks just fine for HTML 3.2 which has no &lt;div&gt; or &lt;span&gt;, so I can see\nan intermediary removing that invalid markup -- but not based on the\nmedia type, which is only meant to identify a processing model, not the\nversion of the data type.\n\n&gt;\n&gt; A system that relies for it&#39;s basic function on xhtml+rdfa is\n&gt; effectively relying on an implementation detail of the current set of\n&gt; web servers and intermediates.\n&gt;\n\nI really don&#39;t understand your point.  My server knows nothing of RDFa,\nand neither do any intermediaries my data passes through.  Markup\nlanguages, and their extensions, are not such an implementation detail.\nAnyway, wouldn&#39;t these problems you mention be even greater for custom\nmedia/data types?\n\n&gt; \n&gt; Most autonomous clients require a different processing model than the\n&gt; one provided by (x)html.  Automata that can use use (x)html processing\n&gt; model -- eg, search engine spiders -- definitely should.  However, the\n&gt; clients i usually write lack the requisite natural language\n&gt; interpretation ai needed to achieve the necessary level of clarity\n&gt; regarding the various bits of data and relationships in an html\n&gt; document.  Machine readable precision can be layered into xhtml using\n&gt; rdfa, but a client that relies on the rdfa being there has a\n&gt; fundamentally different processing model than a browser.\n&gt; \n\nDoes it?  The semantics of a radio-button control are set in stone,\n&quot;variable x takes one and only one of this set of y values.&quot;  All RDFa\ndoes is annotate the control with some context, the processing model of\nthe control is the same whether or not that RDFa is parsed; RDFa can&#39;t\noverride the semantics of the control to mean &quot;variable x takes one or\nmore of this set of y values&quot; or anything else, nor can RDFa express\nsuch semantics in the absence of a hypertext control.\n\nThe alternative is to create a data type which does specifically what\nyou want it to do, and assign it a media type as an identifier.  In\nwhich case it will only be understood by a new class of client you&#39;re\ncreating to consume it, coupling client to server until such time as\nmultiple independent, interoperable implementations exist (the\ndefinition of standardization).  Whereas with RDFa, any user-agent can\nmanipulate the form properly even if it doesn&#39;t know (via RDFa) what\nthe form controls *mean*, which is graceful degradation.\n\n&gt;\n&gt; I think an `application/rdfa+xhtml+xml` media type would solve most of\n&gt; these problem, though.  That would surface the fact that the rdfa was\n&gt; an important part of the processing model for the representation to\n&gt; both the server and intermediates.\n&gt; \n\nAny intermediary that cares about the payload will be introspecting it\nanyway; it should glean the importance of RDFa attributes to the markup\nfrom the presence of an RDFa DOCTYPE, which seems to be enough surfacing\nnot only in my opinion, but also in the opinion of those responsible for\nRDFa.  RDFa+XHTML is just a version within the family of data types the\nmedia type references; media type isn&#39;t bound to version.  Assigining\nmedia types to every extension of HTML or Atom defeats the purpose by\nbeing too finely-grained -- the processing model of form controls isn&#39;t\nchanged by adding RDFa, so assigning it a new media type just loses\nbackwards compatibility of the data type with non-RDFa components which\ncould otherwise participate in the communication (i.e. by prefetching\nor doing DNS lookups because they know what a link is).\n\n-Eric\n\n"}}