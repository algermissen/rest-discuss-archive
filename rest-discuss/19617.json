{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"kxioL5qe3RJYrLv66HdvkUmqbk_E5QaWahAb2N1XzqlcgTNW-9PJ7GIAlu8ulEKx2uNP3-qge0o6Y4BUhvT3b3vG6k6MlwA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Fwd: [rest-discuss] User Hypermedia format","postDate":"1393613893","msgId":19617,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBUFdfOG02VEhoVk01MlhIS3dMWVpBTG5yeDh4Rk94RXMraUxQcU1YR0ZZdTZvcWhFd0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBUFdfOG01OVkwOHA3NTFZaHJYQVUxK0oyX1NxUD03VVdtPXhVZmJobVF6dTBzUjFkUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBUFdfOG03ZjBFNjhrTmtKTkxCR0hSdGllOFpRSkZtVWJwR185RmpoNG9lY2t6OXgzQUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxFMDRYVVJoRHJhLVQ3djNhZ0t2VUVCM1NTTFlOV1B3T2tIU2tkYkVyeCtnQUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG03cGVLR19iK0xTVU1YMnZtdTNMWHc1ZitnS1VTLUxkX0VkMC1jdW5TWC1ZUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01cG41WDlramFhb2lzSj1MQU9Pa1JYbUpSVUM9akxYOXYzY0FEUktlYUpKUUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxHUytuNFBaMkdNZW55Zj1aOXQxbmVQc1pNK0tpd1ByZjhBU0ZkZnhXUjJOZ0BtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01OVkwOHA3NTFZaHJYQVUxK0oyX1NxUD03VVdtPXhVZmJobVF6dTBzUjFkUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":19618,"prevInTime":19616,"nextInTime":19618,"topicId":19617,"numMessagesInTopic":4,"msgSnippet":"(copying back to the list) all good Qs... How does the XML format represent true, false, and null? **** so far, the approach i have is to treat this all as","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 97089 invoked by uid 102); 28 Feb 2014 18:58:34 -0000\r\nX-Received: from unknown (HELO mtaq3.grp.bf1.yahoo.com) (10.193.84.142)\n  by m13.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 18:58:34 -0000\r\nX-Received: (qmail 29719 invoked from network); 28 Feb 2014 18:58:33 -0000\r\nX-Received: from unknown (HELO mail-we0-f171.google.com) (74.125.82.171)\n  by mtaq3.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 18:58:33 -0000\r\nX-Received: by mail-we0-f171.google.com with SMTP id u56so903733wes.16\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 28 Feb 2014 10:58:33 -0800 (PST)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=1e100.net; s=20130820;\n        h=x-gm-message-state:mime-version:sender:in-reply-to:references:from\n         :date:message-id:subject:to:content-type;\n        bh=AgA3YWdzkEBnFotkgU4r5fDE6CnSTgNbd8Ukn+qwpmE=;\n        b=CxnMDdeiXv2oFCZ69qrrdFXcEIVgmqW+n5ZkAhBTvqB9fjcJNT9nKD+GoPW1r8odNO\n         4qXGPfKRzeBQeq8VP5w4KX8dUCNo16Bvrse2CSObUWJLYhx3/wEEO8JMVtIIwKm9r6vg\n         9JmAor6MmiLaL5eIGhPi8Yygpb3+SX4UMpIvJV3oHHyYIToerJ6fIFQP94moxFVGYroj\n         xnnV73zb6yVKm1+PFX8rsR2Bic4PgcJK5XySy0VxNKwXQHdjNMT1Eh3YVs2Q2gzQoVEa\n         f4ePFSpx5UyJEYnJGiP3q0fWVYinX6mzXOWFyCBswRlHgAJs9k2jU7RYJzsu904CMlx7\n         AX8Q==\r\nX-Gm-Message-State: ALoCoQk1VbRX7kKQMsXFKzEZoJtay2H+kE1M4JjZYerHDMg55ZeEcp+2994jwsn4Pi5BAQduTo71\r\nX-Received: by 10.180.108.199 with SMTP id hm7mr4771294wib.1.1393613913341;\n Fri, 28 Feb 2014 10:58:33 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.194.158.2 with HTTP; Fri, 28 Feb 2014 10:58:13 -0800 (PST)\r\nIn-Reply-To: &lt;CAPW_8m59Y08p751YhrXAU1+J2_SqP=7UWm=xUfbhmQzu0sR1dQ@...&gt;\r\nReferences: &lt;CAPW_8m7f0E68kNkJNLBGHRtie8ZQJFmUbpG_9Fjh4oeckz9x3A@...&gt;\n &lt;CAJELnLE04XURhDra-T7v3agKvUEB3SSLYNWPwOkHSkdbErx+gA@...&gt;\n &lt;CAPW_8m7peKG_b+LSUMX2vmu3LXw5f+gKUS-Ld_Ed0-cunSX-YQ@...&gt;\n &lt;CAPW_8m5pn5X9kjaaoisJ=LAOOkRXmJRUC=jLX9v3cADRKeaJJQ@...&gt;\n &lt;CAJELnLGS+n4PZ2GMenyf=Z9t1nePsZM+KiwPrf8ASFdfxWR2Ng@...&gt; &lt;CAPW_8m59Y08p751YhrXAU1+J2_SqP=7UWm=xUfbhmQzu0sR1dQ@...&gt;\r\nDate: Fri, 28 Feb 2014 13:58:13 -0500\r\nX-Google-Sender-Auth: ztYbG9RsHZ52aPoW8q8UiCEpa5s\r\nMessage-ID: &lt;CAPW_8m6THhVM52XHKwLYZALnrx8xFOxEs+iLPqMXGFYu6oqhEw@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=e89a8f3bae5d42596c04f37c065b\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Fwd: [rest-discuss] User Hypermedia format\r\nX-Yahoo-Group-Post: member; u=69164307; y=TEP8S6NiZzikNdJT6RhYIh4euSqwOswJyQcDyAK-WhIG\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--e89a8f3bae5d42596c04f37c065b\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\n(copying back to the list)\n\nall good Qs...\n\n&quot;How does the XML format represent true, false, and null?&quot;\n****\nso far, the approach i have is to treat this all as text data:\n&lt;data transclude=&quot;false&quot; /&gt;\n\nit&#39;s possible to go further into this space using XML Schema, but I am not\nreally interested in backing that into the format design. You could\n*definitely* use it by adding a &lt;data url=&quot;...&quot; rel=&quot;schema&quot; /&gt; element at\nthe top of a representation. if that&#39;s what you want do to.\n****\n\n&quot;How does the XML format represent objects and arrays? (Some sadist will\nput JSON in there unless we have a better answer.)&quot;\n****\nin XML there is no intrinsic Array pattern, just an implied one\n&lt;data rel=&quot;collection&quot; ...&gt;\n  &lt;data rel=&quot;item&quot; ... /&gt;\n  &lt;data rel=&quot;item&quot; ... /&gt;\n&lt;/data&gt;\n\nis usually converted into an array in code.\n\nJSON does this differently, of course by *requiring* explicit use of Array\nin the representation.\n****\n\n&quot;More generally, I imagine your intent is to constrain clients to adopt\nmore of a tolerant reader approach and use less automatic serialization and\ndeserialization.&quot;\n****\nbingo! ;)\n\nmy designs almost always attempt to downplay direct serialization into/from\ncode. The trouble is programming languages can change over time and I&#39;d\nlike to make sure my designs don&#39;t favor (or become dependent) upon a\nsub-set of programming languages.\n****\n\n&quot;At the same time, I think there&#39;s potential value in making compound,\ncomplex data more of a first class citizen. Allowing bare object and array\ndata representations (not serialized into a quoted string) would let\nclients and servers reach inside the data without additional explicit\ndeserialization steps.&quot;\n****\nKeeping in mind what you describe here is a &quot;programmer optimization&quot; there\nare lots of ways to do this. We all got used to converting XML into code by\nway of &quot;black box&quot; functions in a language. We also got used to converting\nJSON into code in languages that didn&#39;t have the same internal structure as\njavascript. we did this w/ black box code.\n\nWe can do the same with Uber (or any format, really). We need a DOM for\nthat ,but it&#39;s not too hard; esp. with something like Uber that allows for\nrecursion in the model.\n****\n\n&quot;I guess one risk of allowing objects and arrays is the antipattern of\nusing a single data element whose value is a very complex object.&quot;\n****\nright, the killer is that messages become &quot;envelopes&quot; for code. this is\nwhat i am trying to avoid. I am trying to design format where messages are\nmessages &quot;all the way down&quot; ;)\n\nthis means there is &quot;heavy lifting&quot; in creating the message (serialization)\nand parsing it for use (&quot;de-serialization&quot;) and I want to keep that heavy\nlifting in code on each end - not in the message design itself.   For\nexample the appeal of JSON is that there is &quot;zero&quot; lifting if you are\nwriting javascript. However, that value dwindles as you get into other\nlanguages (erlang, python, etc.).\n\n&quot;What are the tradeoffs you&#39;re trying to balance?&quot;\n****\ni&#39;m experimenting here with ways to make it easier to express a wide range\nof use cases in a minimal format. and ways to make it easier to\nparse/validate the message regardless of platform or language.\n\nin my Cj design i actually created a design that gave a bit &quot;middle finger&quot;\nto serializers everywhere&lt;g&gt;. i also tried to make to really hard to pass\nrecursive messages by forcing a very flat structure in the message model.\n\nwith Uber, i am working on the other end of that set of values. i want to\ncreate a model that leads devs into creating recursive messages. but I am\nstill working to thwart attempts to create code envelopes. Uber is a kind\nof &quot;proxy&quot; for objects on either end of the convo, not a &quot;high-fidelity\nobject tree tunnel&quot; (if that makes any sense).\n\nhope this helps and love to hear more from you on this.\n\n\n\nmamund\n+1.859.757.1449\nskype: mca.amundsen\nhttp://amundsen.com/blog/\nhttp://twitter.com/mamund\nhttps://github.com/mamund\nhttp://linkedin.com/in/mamund\n\n\nOn Thu, Feb 27, 2014 at 1:40 PM, Matt McClure &lt;matthewlmcclure@...&gt;wrote:\n\n&gt; Mike,\n&gt;\n&gt;\n&gt; On Monday, February 24, 2014, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;\n&gt;&gt; I&#39;ve also added some text to the &quot;value&quot; definition to say JSON format\n&gt;&gt; MUST only be set to string, number, or literals (true, false, null) and\n&gt;&gt; MUST NOT be set to object or array. What is then implied (not yet stated in\n&gt;&gt; the prose) is that, to pass arrays or objects in the &quot;value&quot; attribute, you\n&gt;&gt; need to *escape* the object/array and pass as a string.\n&gt;&gt;\n&gt;\n&gt; How does the XML format represent true, false, and null?\n&gt;\n&gt; How does the XML format represent objects and arrays? (Some sadist will\n&gt; put JSON in there unless we have a better answer.)\n&gt;\n&gt; More generally, I imagine your intent is to constrain clients to adopt\n&gt; more of a tolerant reader approach and use less automatic serialization and\n&gt; deserialization.\n&gt;\n&gt; At the same time, I think there&#39;s potential value in making compound,\n&gt; complex data more of a first class citizen. Allowing bare object and array\n&gt; data representations (not serialized into a quoted string) would let\n&gt; clients and servers reach inside the data without additional explicit\n&gt; deserialization steps.\n&gt;\n&gt; I guess one risk of allowing objects and arrays is the antipattern of\n&gt; using a single data element whose value is a very complex object.\n&gt;\n&gt; What are the tradeoffs you&#39;re trying to balance?\n&gt;\n&gt; Matt\n&gt;\n&gt;\n&gt; --\n&gt; Matt McClure\n&gt; http://matthewlmcclure.com\n&gt; http://www.mapmyfitness.com/profile/matthewlmcclure\n&gt;\n&gt;\n\r\n--e89a8f3bae5d42596c04f37c065b\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;(copying back to the list)&lt;br&gt;&lt;=\r\nbr&gt;&lt;div dir=3D&quot;ltr&quot;&gt;all good Qs...&lt;div class=3D&quot;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&quot=\r\n;&lt;span style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;How does the X=\r\nML format represent true, false, and null?&quot;&lt;/span&gt;&lt;/div&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;=\r\nfont face=3D&quot;arial, sans-serif&quot;&gt;****&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;arial,=\r\n sans-serif&quot;&gt;so far, the approach i have is to treat this all as text data:=\r\n&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;data transclude=3D&q=\r\nuot;false&quot; /&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\n\n\nit&#39;s possible =\r\nto go further into this space using XML Schema, but I am not really interes=\r\nted in backing that into the format design. You could *definitely* use it b=\r\ny adding a &lt;data url=3D&quot;...&quot; rel=3D&quot;schema&quot; /&gt; el=\r\nement at the top of a representation. if that&#39;s what you want do to.&lt;/d=\r\niv&gt;\n\n\n&lt;div&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;f=\r\nont-size:13px&quot;&gt;&quot;How does the XML format represent objects and arrays? =\r\n(Some sadist will put JSON in there unless we have a better answer.)&quot;&lt;=\r\n/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;**=\r\n**&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;in XML t=\r\nhere is no intrinsic Array pattern, just an implied one&lt;/div&gt;&lt;div style=3D&quot;=\r\nfont-family:arial,sans-serif;font-size:13px&quot;&gt;\n\n\n&lt;data rel=3D&quot;collec=\r\ntion&quot; ...&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-siz=\r\ne:13px&quot;&gt;=A0 &lt;data rel=3D&quot;item&quot; ... /&gt;&lt;/div&gt;&lt;div style=3D&quot;fo=\r\nnt-family:arial,sans-serif;font-size:13px&quot;&gt;=A0 &lt;data rel=3D&quot;item&qu=\r\not; ... /&gt;&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:=\r\n13px&quot;&gt;&lt;/data&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-si=\r\nze:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13p=\r\nx&quot;&gt;is usually converted into an array in code.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-f=\r\namily:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:=\r\narial,sans-serif;font-size:13px&quot;&gt;JSON does this differently, of course by *=\r\nrequiring* explicit use of Array in the representation.&lt;/div&gt;\n\n\n&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;=\r\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div s=\r\ntyle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&quot;More generally, =\r\nI imagine your intent is to constrain clients to adopt more of a tolerant r=\r\neader approach and use less automatic serialization and deserialization.&qu=\r\not;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px=\r\n&quot;&gt;****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;bing=\r\no! ;)&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;\n\n\nmy desig=\r\nns almost always attempt to downplay direct serialization into/from code. T=\r\nhe trouble is programming languages can change over time and I&#39;d like t=\r\no make sure my designs don&#39;t favor (or become dependent) upon a sub-set=\r\n of programming languages.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-ser=\r\nif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div style=3D&quot;font-family:aria=\r\nl,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans=\r\n-serif;font-size:13px&quot;&gt;&quot;At the same time, I think there&#39;s potentia=\r\nl value in making compound, complex data more of a first class citizen. All=\r\nowing bare object and array data representations (not serialized into a quo=\r\nted string) would let clients and servers reach inside the data without add=\r\nitional explicit deserialization steps.&quot;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div style=3D&quot;f=\r\nont-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;br&gt;Keeping in mind what yo=\r\nu describe here is a &quot;programmer optimization&quot; there are lots of =\r\nways to do this. We all got used to converting XML into code by way of &quo=\r\nt;black box&quot; functions in a language. We also got used to converting J=\r\nSON into code in languages that didn&#39;t have the same internal structure=\r\n as javascript. we did this w/ black box code.=A0&lt;/div&gt;\n\n\n&lt;div style=3D&quot;fon=\r\nt-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-fami=\r\nly:arial,sans-serif;font-size:13px&quot;&gt;We can do the same with Uber (or any fo=\r\nrmat, really). We need a DOM for that ,but it&#39;s not too hard; esp. with=\r\n something like Uber that allows for recursion in the model.&lt;/div&gt;\n\n\n&lt;div s=\r\ntyle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div class=\r\n=3D&quot;&quot;&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&quot;I guess on=\r\ne risk of allowing objects and arrays is the antipattern of using a single =\r\ndata element whose value is a very complex object.&quot;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;div=\r\n style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;right, the killer is that =\r\nmessages become &quot;envelopes&quot; for code. this is what i am trying to=\r\n avoid. I am trying to design format where messages are messages &quot;all =\r\nthe way down&quot; ;)&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;fo=\r\nnt-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-siz=\r\ne:13px&quot;&gt;this means there is &quot;heavy lifting&quot; in creating the messa=\r\nge (serialization) and parsing it for use (&quot;de-serialization&quot;) an=\r\nd I want to keep that heavy lifting in code on each end - not in the messag=\r\ne design itself. =A0 For example the appeal of JSON is that there is &quot;=\r\nzero&quot; lifting if you are writing javascript. However, that value dwind=\r\nles as you get into other languages (erlang, python, etc.).=A0&lt;/div&gt;\n\n&lt;div =\r\nclass=3D&quot;&quot;&gt;\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&quot;What=\r\n are the tradeoffs you&#39;re trying to balance?&quot;&lt;/div&gt;&lt;/div&gt;&lt;div styl=\r\ne=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;\n\n\n****&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;i&#39;m experimenting here=\r\n with ways to make it easier to express a wide range of use cases in a mini=\r\nmal format. and ways to make it easier to parse/validate the message regard=\r\nless of platform or language.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-=\r\nserif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;=\r\nfont-size:13px&quot;&gt;in my Cj design i actually created a design that gave a bit=\r\n &quot;middle finger&quot; to serializers everywhere&lt;g&gt;. i also tried=\r\n to make to really hard to pass recursive messages by forcing a very flat s=\r\ntructure in the message model.&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans=\r\n-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif=\r\n;font-size:13px&quot;&gt;with Uber, i am working on the other end of that set of va=\r\nlues. i want to create a model that leads devs into creating recursive mess=\r\nages. but I am still working to thwart attempts to create code envelopes. U=\r\nber is a kind of &quot;proxy&quot; for objects on either end of the convo, =\r\nnot a &quot;high-fidelity object tree tunnel&quot; (if that makes any sense=\r\n).&lt;/div&gt;\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;hope this h=\r\nelps and love to hear more from you on this.&lt;/div&gt;&lt;div style=3D&quot;font-family=\r\n:arial,sans-serif;font-size:13px&quot;&gt;\n\n\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_ex=\r\ntra&quot;&gt;&lt;div class=3D&quot;&quot;&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div=\r\n&gt;mamund&lt;div&gt;&lt;span&gt;&lt;span title=3D&quot;Call with Google Voice&quot;&gt;&lt;span title=3D&quot;Cal=\r\nl with Google Voice&quot;&gt;&lt;a href=3D&quot;tel:%2B1.859.757.1449&quot; value=3D&quot;+1859757144=\r\n9&quot; target=3D&quot;_blank&quot;&gt;+1.859.757.1449&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;\n\n\nskype: =\r\nmca.amundsen&lt;br&gt;&lt;a href=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;htt=\r\np://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://twitter.com/mamund&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://twitter.com/mamund&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;https://github.com/=\r\nmamund&quot; target=3D&quot;_blank&quot;&gt;https://github.com/mamund&lt;/a&gt;&lt;br&gt;\n\n\n&lt;a href=3D&quot;ht=\r\ntp://linkedin.com/in/mamund&quot; target=3D&quot;_blank&quot;&gt;http://linkedin.com/in/mamun=\r\nd&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;div class=3D&quot;=\r\ngmail_quote&quot;&gt;On Thu, Feb 27, 2014 at 1:40 PM, Matt McClure &lt;span dir=3D&quot;ltr=\r\n&quot;&gt;&lt;&lt;a href=3D&quot;mailto:matthewlmcclure@...&quot; target=3D&quot;_blank&quot;&gt;matthe=\r\nwlmcclure@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;blockquote class=3D&quot;gmail_q=\r\nuote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1e=\r\nx&quot;&gt;\nMike,&lt;div&gt;&lt;br&gt;&lt;br&gt;On Monday, February 24, 2014, mike amundsen &lt;&lt;a hr=\r\nef=3D&quot;mailto:mamund@...&quot; target=3D&quot;_blank&quot;&gt;mamund@...&lt;/a&gt;&gt; w=\r\nrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;borde=\r\nr-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;I&#39;ve =\r\nalso added some text to the &quot;value&quot; definition to say JSON format=\r\n MUST only be set to string, number, or literals (true, false, null) and MU=\r\nST NOT be set to object or array. What is then implied (not yet stated in t=\r\nhe prose) is that, to pass arrays or objects in the &quot;value&quot; attri=\r\nbute, you need to *escape* the object/array and pass as a string.=A0&lt;/div&gt;\n=\r\n\n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;How does the XML format rep=\r\nresent true, false, and null?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;How does the XML for=\r\nmat represent objects and arrays? (Some sadist will put JSON in there unles=\r\ns we have a better answer.)&lt;/div&gt;\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;More generally, I =\r\nimagine your intent is to constrain clients to adopt more of a tolerant rea=\r\nder approach and use less automatic serialization and deserialization.&lt;/div=\r\n&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;At the same time, I think there&#39;s potential value =\r\nin making compound, complex data more of a first class citizen. Allowing ba=\r\nre object and array data representations (not serialized into a quoted stri=\r\nng) would let clients and servers reach inside the data without additional =\r\nexplicit deserialization steps.&lt;/div&gt;\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I guess one ri=\r\nsk of allowing objects and arrays is the antipattern of using a single data=\r\n element whose value is a very complex object.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Wha=\r\nt are the tradeoffs you&#39;re trying to balance?&lt;/div&gt;\n\n\n&lt;span&gt;&lt;font color=\r\n=3D&quot;#888888&quot;&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Matt&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;br=\r\n&gt;-- &lt;br&gt;Matt McClure&lt;br&gt;&lt;a href=3D&quot;http://matthewlmcclure.com&quot; target=3D&quot;_b=\r\nlank&quot;&gt;http://matthewlmcclure.com&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.mapmyfitness.=\r\ncom/profile/matthewlmcclure&quot; target=3D&quot;_blank&quot;&gt;http://www.mapmyfitness.com/=\r\nprofile/matthewlmcclure&lt;/a&gt;&lt;br&gt;\n\n\n\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--e89a8f3bae5d42596c04f37c065b--\r\n\n"}}