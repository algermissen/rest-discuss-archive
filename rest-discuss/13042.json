{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"JZnS--XDQMpYz_QeWzhNKjQUakxBEcTYJZyHHqObm75gu8lt-pEffeot9KE6kG4GQrNLxNKkEAYzzAp_zIIF8Op8dBh6VLOszGvh","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking \tnon-hypertext","postDate":"1246386732","msgId":13042,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MDkwNjMwMTEzMnI0NTkxMDg4NHY1MjE2ZGVhZjQ3NWEzYWU4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDBEQ0NBMEQwLUY0NUYtNEQ1Ni1BMjY2LTNCNTVCMzg0NTM3M0BzdWJidS5vcmc+","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4JIDw0QTQzRjMwOS4xMDEwNDAyQGRlaG9yYS5uZXQ+IDw0QTQ0MDRGOC4zMDAwMDA4QHJlZGhhdC5jb20+CSA8NEE0NDE2RDIuNTA4MDMwNEBkZWhvcmEubmV0PgkgPDI4NTA1MDY4LTE5M0EtNDIxNC1CNUY1LTE4RjNFOTdBOTZDNEBzdWJidS5vcmc+CSA8MjE2MDZkY2YwOTA2MzAwMzQ0ZzRiOWY3ZmMza2M1MTQ2MjQ3ODZlYzJjZmRAbWFpbC5nbWFpbC5jb20+CSA8MERDQ0EwRDAtRjQ1Ri00RDU2LUEyNjYtM0I1NUIzODQ1MzczQHN1YmJ1Lm9yZz4="},"prevInTopic":13041,"nextInTopic":13043,"prevInTime":13041,"nextInTime":13043,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"Hi Subbu- (sorry for top-responding FF 3.5 is having trouble w/ gmail format).  Adding products to a cart is an excellent example.  How, though, effect that ","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30679 invoked from network); 30 Jun 2009 18:32:35 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.re1.yahoo.com with QMQP; 30 Jun 2009 18:32:35 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.233)\n  by mta3.grp.sp2.yahoo.com with SMTP; 30 Jun 2009 18:32:35 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id b25so134972rvf.3\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 11:32:13 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.141.42.20 with SMTP id u20mr935560rvj.227.1246386732611; Tue, \n\t30 Jun 2009 11:32:12 -0700 (PDT)\r\nIn-Reply-To: &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt;\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt;\n\t &lt;4A43F309.1010402@...&gt; &lt;4A4404F8.3000008@...&gt;\n\t &lt;4A4416D2.5080304@...&gt;\n\t &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt;\n\t &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt;\n\t &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt;\r\nDate: Tue, 30 Jun 2009 13:32:12 -0500\r\nX-Google-Sender-Auth: 158402ed45d09c87\r\nMessage-ID: &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Sam Johnston &lt;samj@...&gt;, Bill de hOra &lt;bill@...&gt;, rest-discuss@yahoogroups.com, \n\tMark Nottingham &lt;mnot@...&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd20a42733b8e046d95067e\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking \n\tnon-hypertext\r\nX-Yahoo-Group-Post: member; u=11652427; y=7htPNjFPIFsTW9yJ1oZ17Eniy6Urr3yrcXV3cQERB8ja83dSb5GfYfckbw\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\r\n--000e0cd20a42733b8e046d95067e\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nHi Subbu-\n\n(sorry for top-responding FF 3.5 is having trouble w/ gmail format).  Adding\nproducts to a cart is an excellent example.  How, though, effect that\nmodification by way of an API?\n\nI can think of:\n\n1.  post the product to the cart &quot;collection&quot;\n2.  add a link to a product pointing to the cart\n3.  add a link to a cart resource pointing to the product\n4.  create a new resource (presumably by POSTing to a known endpoint) that\nis essentially a &quot;cart-product instance&quot; that has a link to each\n\nI am not sure that abstraction solves the problem in actual implementation.\nOur atom/atompub based system uses a local atom extension that adds an\n&quot;edit-href&quot; attribute to link elements that can be modified or deleted.  I\ndo think, absent a standard PATCH, it would be nice to have a standard way\nto manipulate just specific link elements in Atom documents.  (I realize the\ncase being discussed here is broader than Atom, and includes link headers).\n\n--peter keane\n\nOn Tue, Jun 30, 2009 at 11:59 AM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Sam,\n&gt;\n&gt; I don&#39;t disagree that there are use cases, but I am not sure if\n&gt; letting clients manage relations is the right way to implement\n&gt; distributed systems. The approach you describe below is similar to a\n&gt; client trying to setup foreign key relations between different\n&gt; database entities. This model leaks abstractions and is not ideal for\n&gt; writing large systems.\n&gt;\n&gt; For instance, take a simple shopping cart application. The server may\n&gt; have decided to use links to associate products to a cart, but that\n&gt; does not mean that, clients should be able to create/edit/delete those\n&gt; links. Instead, links come into being when the client &quot;adds products\n&gt; to a cart&quot; and they go away when the client &quot;removes a product from\n&gt; the cart&quot;. That is the right level of abstraction for the client.\n&gt;\n\n\n\n\n&gt;\n&gt;\n&gt; IMO, links are for servers to provide navigability between resources,\n&gt; and to let clients make state transitions via links.\n&gt;\n&gt; Subbu\n&gt;\n&gt;\n&gt; On Jun 30, 2009, at 3:44 AM, Sam Johnston wrote:\n&gt;\n&gt; &gt; Hi Subbu,\n&gt; &gt;\n&gt; &gt; On Tue, Jun 30, 2009 at 5:45 AM, Subbu Allamaraju &lt;subbu@...&lt;subbu%40subbu.org&gt;&gt;\n&gt;\n&gt; &gt; wrote:\n&gt; &gt;\n&gt; &gt;&gt;&gt; LINK is similar - how a LINK relationship is created/managed/\n&gt; &gt;&gt;&gt; destroyed is\n&gt; &gt;&gt; undefined.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Why isn&#39;t that up to the server(s) managing the resources? Links are\n&gt; &gt;&gt; for servers to describe relations between resources, and not for\n&gt; &gt;&gt; clients to manage such relationships.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Why so? This use case requires that clients be able to manage links:\n&gt; &gt; virtual\n&gt; &gt; infrastructure is modeled as compute, storage and network resources\n&gt; &gt; and\n&gt; &gt; clients create, delete and link them as they see fit. The server can\n&gt; &gt; too\n&gt; &gt; (for example, implicitly creating a storage resource and linking it\n&gt; &gt; when you\n&gt; &gt; create a compute resource) but the point of OCCI\n&gt; &gt; &lt;http://www.occi-wg.org/&gt;is to allow for client manipulation.\n&gt; &gt;\n&gt; &gt; We&#39;re not the only ones who see a need either... the original\n&gt; &gt; authors of the\n&gt; &gt; HTTP spec (RFC 2068) including LINK and\n&gt; &gt; UNLINK&lt;http://tools.ietf.org/html/rfc2068#section-19.6.1.2&gt;verbs for\n&gt; &gt; this around the same as this\n&gt; &gt; I-D &lt;\n&gt; http://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http-links-00.txt\n&gt; &gt; &gt;specifying\n&gt; &gt; same in more detail. This is what Mark Nottingham (author of the\n&gt; &gt; Link: header I-D among other things, copied) had to say this morning\n&gt; &gt; on\n&gt; &gt; apps-discuss:\n&gt; &gt;\n&gt; &gt; *- First and foremost, in the absence of the LINK and UNLINK verbs\n&gt; &gt; originally defined in RFC 2068[2] but specifically omitted from RFC\n&gt; &gt; 2616[3],\n&gt; &gt; what is the preferred mechanism for manipulating these links via\n&gt; &gt; HTTP? It\n&gt; &gt; appears that this header is intended for GET requests only, but\n&gt; &gt; presumably\n&gt; &gt; specifying it in POST and PUT requests would be one option that\n&gt; &gt; avoids the\n&gt; &gt; creation of [not so] &quot;new&quot; verbs (bearing in mind that short of\n&gt; &gt; accepting\n&gt; &gt; Link: headers from empty POST/PUT requests, it would be necessary to\n&gt; &gt; GET and\n&gt; &gt; then PUT the entire payload to update links - twice if they were\n&gt; &gt; reciprocal). While there was an attempt a dozen years ago to better\n&gt; &gt; define\n&gt; &gt; the relevant HTTP verbs[4], it strikes me as more sensible to follow\n&gt; &gt; the\n&gt; &gt; example of the Set-Cookie: header for this rather than WebDAV&#39;s\n&gt; &gt; example of\n&gt; &gt; creating new verbs (even if we&#39;ve seen them before) but you guys are\n&gt; &gt; the\n&gt; &gt; experts.*\n&gt; &gt;\n&gt; &gt; Undefined, but I imagine in a PUT/POST body does indeed make the\n&gt; &gt; most sense.\n&gt; &gt; Using the Link header in a request doesn&#39;t have well-defined\n&gt; &gt; semantics.\n&gt; &gt;\n&gt; &gt; I wonder then whether it&#39;s not sensible to define these semantics in\n&gt; &gt; an[other] Internet Draft (ala Set-Cookie) rather than having everyone\n&gt; &gt; running off and inventing their own in-band solutions... doing so\n&gt; &gt; would make\n&gt; &gt; for some really clever RESTful interfaces.\n&gt; &gt;\n&gt; &gt; Sam\n&gt;\n&gt;  \n&gt;\n\r\n--000e0cd20a42733b8e046d95067e\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Subbu-&lt;br&gt;&lt;br&gt;(sorry for top-responding FF 3.5 is having trouble w/ gmai=\r\nl format).=C2=A0 Adding products to a cart is an excellent example.=C2=A0 H=\r\now, though, effect that modification by way of an API?&lt;br&gt;&lt;br&gt;I can think o=\r\nf:&lt;br&gt;&lt;br&gt;\n1.=C2=A0 post the product to the cart &quot;collection&quot;&lt;br&gt;=\r\n2.=C2=A0 add a link to a product pointing to the cart&lt;br&gt;3.=C2=A0 add a lin=\r\nk to a cart resource pointing to the product&lt;br&gt;4.=C2=A0 create a new resou=\r\nrce (presumably by POSTing to a known endpoint) that is essentially a &quot=\r\n;cart-product instance&quot; that has a link to each&lt;br&gt;\n&lt;br&gt;I am not sure =\r\nthat abstraction solves the problem in actual implementation.=C2=A0 Our ato=\r\nm/atompub based system uses a local atom extension that adds an &quot;edit-=\r\nhref&quot; attribute to link elements that can be modified or deleted.=C2=\r\n=A0 I do think, absent a standard PATCH, it would be nice to have a standar=\r\nd way to manipulate just specific link elements in Atom documents.=C2=A0 (I=\r\n realize the case being discussed here is broader than Atom, and includes l=\r\nink headers).&lt;br&gt;\n&lt;br&gt;--peter keane&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tu=\r\ne, Jun 30, 2009 at 11:59 AM, Subbu Allamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=\r\n=3D&quot;mailto:subbu@...&quot;&gt;subbu@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;block=\r\nquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 2=\r\n04); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=\r\n=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;=\r\n\n&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt; width: 470px; float:=\r\n left;&quot;&gt;\n\n\n    &lt;div&gt;\n            \n            &lt;br&gt;&lt;br&gt;\n      \n      &lt;p&gt;Sam,=\r\n&lt;br&gt;\n&lt;br&gt;\nI don&#39;t disagree that there are use cases, but I am not sure =\r\nif  &lt;br&gt;\nletting clients manage relations is the right way to implement  &lt;b=\r\nr&gt;\ndistributed systems. The approach you describe below is similar to a  &lt;b=\r\nr&gt;\nclient trying to setup foreign key relations between different  &lt;br&gt;\ndat=\r\nabase entities. This model leaks abstractions and is not ideal for  &lt;br&gt;\nwr=\r\niting large systems.&lt;br&gt;\n&lt;br&gt;\nFor instance, take a simple shopping cart app=\r\nlication. The server may  &lt;br&gt;\nhave decided to use links to associate produ=\r\ncts to a cart, but that  &lt;br&gt;\ndoes not mean that, clients should be able to=\r\n create/edit/delete those  &lt;br&gt;\nlinks. Instead, links come into being when =\r\nthe client &quot;adds products  &lt;br&gt;\nto a cart&quot; and they go away when =\r\nthe client &quot;removes a product from  &lt;br&gt;\nthe cart&quot;. That is the r=\r\night level of abstraction for the client.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/bloc=\r\nkquote&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;=C2=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nborder-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; paddi=\r\nng-left: 1ex;&quot;&gt;\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;div s=\r\ntyle=3D&quot;width: 655px;&quot;&gt;&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt=\r\n; width: 470px; float: left;&quot;&gt;&lt;div&gt;&lt;p&gt;&lt;br&gt;\n&lt;br&gt;\nIMO, links are for servers =\r\nto provide navigability between resources,  &lt;br&gt;\nand to let clients make st=\r\nate transitions via links.&lt;br&gt;\n&lt;br&gt;\nSubbu&lt;/p&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nOn=\r\n Jun 30, 2009, at 3:44 AM, Sam Johnston wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; Hi Subbu,&lt;br&gt;\n=\r\n&gt;&lt;br&gt;\n&gt; On Tue, Jun 30, 2009 at 5:45 AM, Subbu Allamaraju &lt;&lt;a href=\r\n=3D&quot;mailto:subbu%40subbu.org&quot; target=3D&quot;_blank&quot;&gt;subbu@...&lt;/a&gt;&gt;  &lt;b=\r\nr&gt;\n&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&gt;&gt; LINK is similar - how a LINK relat=\r\nionship is created/managed/ &lt;br&gt;\n&gt;&gt;&gt; destroyed is&lt;br&gt;\n&gt;&gt; und=\r\nefined.&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; Why isn&#39;t that up to the server(s) ma=\r\nnaging the resources? Links are&lt;br&gt;\n&gt;&gt; for servers to describe relati=\r\nons between resources, and not for&lt;br&gt;\n&gt;&gt; clients to manage such rela=\r\ntionships.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Why so? This use case requires that c=\r\nlients be able to manage links:  &lt;br&gt;\n&gt; virtual&lt;br&gt;\n&gt; infrastructure =\r\nis modeled as compute, storage and network resources  &lt;br&gt;\n&gt; and&lt;br&gt;\n&gt=\r\n; clients create, delete and link them as they see fit. The server can  &lt;br=\r\n&gt;\n&gt; too&lt;br&gt;\n&gt; (for example, implicitly creating a storage resource an=\r\nd linking it  &lt;br&gt;\n&gt; when you&lt;br&gt;\n&gt; create a compute resource) but th=\r\ne point of OCCI&lt;br&gt;&lt;/div&gt;\n&gt; &lt;&lt;a href=3D&quot;http://www.occi-wg.org/&quot; targ=\r\net=3D&quot;_blank&quot;&gt;http://www.occi-wg.org/&lt;/a&gt;&gt;is to allow for client manipul=\r\nation.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; We&#39;re not the only ones who =\r\nsee a need either... the original  &lt;br&gt;\n&gt; authors of the&lt;br&gt;\n&gt; HTTP s=\r\npec (RFC 2068) including LINK and&lt;br&gt;&lt;/div&gt;\n&gt; UNLINK&lt;&lt;a href=3D&quot;http:=\r\n//tools.ietf.org/html/rfc2068#section-19.6.1.2&quot; target=3D&quot;_blank&quot;&gt;http://to=\r\nols.ietf.org/html/rfc2068#section-19.6.1.2&lt;/a&gt;&gt;verbs for&lt;div class=3D&quot;im=\r\n&quot;&gt;&lt;br&gt;\n&gt; this around the same as this&lt;br&gt;&lt;/div&gt;\n&gt; I-D &lt;&lt;a href=3D&quot;=\r\nhttp://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http-links-00.txt&quot; tar=\r\nget=3D&quot;_blank&quot;&gt;http://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http-li=\r\nnks-00.txt&lt;/a&gt; &lt;br&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;\n\n&gt; &gt;specifying&lt;=\r\nbr&gt;\n&gt; same in more detail. This is what Mark Nottingham (author of the&lt;b=\r\nr&gt;\n&gt; Link: header I-D among other things, copied) had to say this mornin=\r\ng  &lt;br&gt;\n&gt; on&lt;br&gt;\n&gt; apps-discuss:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; *- First and forem=\r\nost, in the absence of the LINK and UNLINK verbs&lt;br&gt;\n&gt; originally define=\r\nd in RFC 2068[2] but specifically omitted from RFC  &lt;br&gt;\n&gt; 2616[3],&lt;br&gt;\n=\r\n&gt; what is the preferred mechanism for manipulating these links via  &lt;br&gt;=\r\n\n&gt; HTTP? It&lt;br&gt;\n&gt; appears that this header is intended for GET reques=\r\nts only, but  &lt;br&gt;\n&gt; presumably&lt;br&gt;\n&gt; specifying it in POST and PUT r=\r\nequests would be one option that  &lt;br&gt;\n&gt; avoids the&lt;br&gt;\n&gt; creation of=\r\n [not so] &quot;new&quot; verbs (bearing in mind that short of  &lt;br&gt;\n&gt; a=\r\nccepting&lt;br&gt;\n&gt; Link: headers from empty POST/PUT requests, it would be n=\r\necessary to  &lt;br&gt;\n&gt; GET and&lt;br&gt;\n&gt; then PUT the entire payload to upda=\r\nte links - twice if they were&lt;br&gt;\n&gt; reciprocal). While there was an atte=\r\nmpt a dozen years ago to better  &lt;br&gt;\n&gt; define&lt;br&gt;\n&gt; the relevant HTT=\r\nP verbs[4], it strikes me as more sensible to follow  &lt;br&gt;\n&gt; the&lt;br&gt;\n&gt=\r\n; example of the Set-Cookie: header for this rather than WebDAV&#39;s  &lt;br&gt;=\r\n\n&gt; example of&lt;br&gt;\n&gt; creating new verbs (even if we&#39;ve seen them b=\r\nefore) but you guys are  &lt;br&gt;\n&gt; the&lt;br&gt;\n&gt; experts.*&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n Undefined, but I imagine in a PUT/POST body does indeed make the  &lt;br&gt;\n&gt=\r\n; most sense.&lt;br&gt;\n&gt; Using the Link header in a request doesn&#39;t have =\r\nwell-defined  &lt;br&gt;\n&gt; semantics.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I wonder then whether =\r\nit&#39;s not sensible to define these semantics in&lt;br&gt;\n&gt; an[other] Inter=\r\nnet Draft (ala Set-Cookie) rather than having everyone&lt;br&gt;\n&gt; running off=\r\n and inventing their own in-band solutions... doing so  &lt;br&gt;\n&gt; would mak=\r\ne&lt;br&gt;\n&gt; for some really clever RESTful interfaces.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Sam=\r\n&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div width=3D&quot;1&quot; style=3D&quot;=\r\ncolor: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockqu=\r\note&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd20a42733b8e046d95067e--\r\n\n"}}