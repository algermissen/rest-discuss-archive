{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"eFtSWCvuzQRHMgGPmD-CGwomV1mdQFvv2MEv0cwVWKGBpWTsEExeWvGHvhGcfblTPw26JlgnzilsTmmqSBUt068F3Y6u7tXpCsvUSiBHgQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Good examples of REST implementations","postDate":"1261260499","msgId":14242,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjE5MTUwODE5LjkyODEzYTFhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMDkxMjE5MTMwODQxLmU3MWRkNzc5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGhlbXBjaCszbGRuQGVHcm91cHMuY29tPgk8OUI4OTYwM0QtQTI4Mi00ODUwLUFDRkUtRjEyRjNBOTEwMzhEQGJibGZpc2gubmV0Pgk8ZWM4NjEzYTgwOTEyMTEwMjA5cjcwNGMwNjNhazM4MGNmYjQxYzVjZTY3MjNAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIxNTAxNTcwMS4xOWJjM2IxMy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxCMDNBRkFDMS1ENUFFLTQ0REEtODc1Qy0yQjk5RDA1NkQwRDBAc3ViYnUub3JnPgk8MjAwOTEyMTkxMzA4NDEuZTcxZGQ3NzkuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":14240,"nextInTopic":14244,"prevInTime":14241,"nextInTime":14243,"topicId":14060,"numMessagesInTopic":20,"msgSnippet":"... There is another serious benefit of the n2 developers using Roy s post as a guideline to bring their Contentbox API up to REST spec.  Once that is done,","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5135 invoked from network); 19 Dec 2009 22:08:23 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 19 Dec 2009 22:08:23 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 19 Dec 2009 22:08:23 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id F0BB3509DC;\n\tSat, 19 Dec 2009 17:08:21 -0500 (EST)\r\nDate: Sat, 19 Dec 2009 15:08:19 -0700\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Subbu Allamaraju &lt;subbu@...&gt;, Ian Davis &lt;lists@...&gt;,\n swschilke &lt;steffen.schilke@...&gt;, rest-discuss@yahoogroups.com, Story\n Henry &lt;henry.story@...&gt;\r\nMessage-Id: &lt;20091219150819.92813a1a.eric@...&gt;\r\nIn-Reply-To: &lt;20091219130841.e71dd779.eric@...&gt;\r\nReferences: &lt;hempch+3ldn@...&gt;\n\t&lt;9B89603D-A282-4850-ACFE-F12F3A91038D@...&gt;\n\t&lt;ec8613a80912110209r704c063ak380cfb41c5ce6723@...&gt;\n\t&lt;20091215015701.19bc3b13.eric@...&gt;\n\t&lt;B03AFAC1-D5AE-44DA-875C-2B99D056D0D0@...&gt;\n\t&lt;20091219130841.e71dd779.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Good examples of REST implementations\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Eric J. Bowman&quot; wrote:\n&gt;\n&gt; Subbu Allamaraju wrote:\n&gt; &gt;\n&gt; &gt; IMHO, Roy&#39;s post below must be taken with a bit of reality mixed.\n&gt; &gt; Like most things in software, it is not an absolute standard to\n&gt; &gt; measure &quot;goodness&quot; of RESTful web services.\n&gt; &gt; \n&gt; \n\nThere is another serious benefit of the n2 developers using Roy&#39;s post\nas a guideline to bring their Contentbox API up to REST spec.  Once\nthat is done, implementation consists of gluing together some standard\ncode libraries, which makes it easy to maintain.  By not rolling their\nown API which re-invents a rather pedestrian wheel, Talis does not have\nto support and evolve their own custom Contentbox API -- freeing their\ndevelopers to focus on their core competency, the exciting part of their\nproject with real potential, which is the RDF stuff.\n\nThere is no other API I know of which does what the Metabox API sets\nout to do.  So it isn&#39;t a simple matter of using off-the-shelf\ncomponents, like Contentbox.  Best to be able to focus on the things\nnobody has done before, rather than to waste time bucking trends\nelsewhere in the overall n2 API. One thing that should be spun off as\na standardization proposal is the Changeset resource.  What they&#39;ve done\nis created a delta format for RDF that is neither application- nor\nvendor-specific.\n\nOf course, they&#39;ve implemented this delta format using PUT, which is\nflat-out wrong.  It is not within the scope of media types to change\nstandard method semantics on a per-resource basis, this breaks the\nuniform interface entirely, as method semantics must remain the same\nacross all resources in a system in order to be uniform.  However, this\nproposed media type would work very nicely with the only media type\ndefined with delta-processing semantics -- PATCH. While the Changeset\nProtocol is completely off-base in terms of REST, there&#39;s a nugget of a\ngood idea for a media type there, as well as the potential for a\nRESTful API for Metabox.\n\nOverall, n2 fits with my REST shortcut of being a distributed\nhypermedia application.  Therefore, there is no reason that REST&#39;s\nconstraints can&#39;t or shouldn&#39;t be applied (including, especially, the\nhypertext constraint).  The only pragmatic approach for a distributed\nhypermedia API, is REST.  No excuses here for coming up short.\n\n-Eric\n\n"}}