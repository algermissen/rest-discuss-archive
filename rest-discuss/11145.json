{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"j1o35KLBavsToPymHwtLVRT-34PhHrwxvxCkMO8Lp5WbndiG0r4YbJ0SfIytKYhgHKFYxYp53Wt3_cB8UVdj2UotZDv3XVSBqzIk9Hb_uA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: forms for web APIs","postDate":"1218007011","msgId":11145,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwODA2MDExNjUxLjNmYTI4NGEzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMDgwODA1MTYzNzExLkdQOTMyNkBrbGFuZ3JhdW0ucGxhc21hc3R1cm0ub3JnPg==","referencesHeader":"PDQ4OTYyMjJFLjUwNTAwMDNAZGVob3JhLm5ldD4JPGY5NTA5NTRlMDgwODA1MDczMXk3ZTRjMDc4Nm44OTYyOTQ2MmJiZjIxZTFhQG1haWwuZ21haWwuY29tPgk8MjAwODA4MDUxNjM3MTEuR1A5MzI2QGtsYW5ncmF1bS5wbGFzbWFzdHVybS5vcmc+"},"prevInTopic":11144,"nextInTopic":11154,"prevInTime":11144,"nextInTime":11146,"topicId":11104,"numMessagesInTopic":31,"msgSnippet":"... Thank you!  I was wondering when XForms would get a mention in this thread...  My first XForms project a couple months back, was a simple Atom Protocol","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 28176 invoked from network); 6 Aug 2008 07:16:37 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m51.grp.scd.yahoo.com with QMQP; 6 Aug 2008 07:16:37 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta17.grp.scd.yahoo.com with SMTP; 6 Aug 2008 07:16:37 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTP id 4CA7723E49A;\n\tWed,  6 Aug 2008 03:16:35 -0400 (EDT)\r\nDate: Wed, 6 Aug 2008 01:16:51 -0600\r\nTo: Aristotle Pagaltzis &lt;pagaltzis@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20080806011651.3fa284a3.eric@...&gt;\r\nIn-Reply-To: &lt;20080805163711.GP9326@...&gt;\r\nReferences: &lt;4896222E.5050003@...&gt;\n\t&lt;f950954e0808050731y7e4c0786n89629462bbf21e1a@...&gt;\n\t&lt;20080805163711.GP9326@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: forms for web APIs\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAristotle Pagaltzis wrote:\n&gt; \n&gt; Looks good; did you consciously decide against XForms?\n&gt; \n\nThank you!  I was wondering when XForms would get a mention in this\nthread...  My first XForms project a couple months back, was a simple\nAtom Protocol client, took a whole day.  Now I&#39;ve applied this to my\nlarger project, currently completely broken until I figure out how to\nimplement an outer loop (which has been kicking my butt completely):\n\nhttp://canuck.bisonsystems.net/xforms/\n\nMy Web application is based on Atom Protocol, and you can infer that\nfrom the XForms &#39;model&#39; and submission code.  In working this up, I\ncame up with the notion of using &#39;application/atomcat+xml&#39; as a PATCH\nformat, to edit tags separately from entries.  IOW, that bit of the API\nwas *invented*, implemented and documented entirely in XForms.\n\nXForms&#39; commercial viability issues aside, isn&#39;t the ability to express\nthe entire API (from the subset of Atom Protocol used, to the PATCH\nextension thing) in hypermedia the ideal set by HEAS in the first place?\n\nWith a little study on XForms, is there any aspect of the client-server\ninteraction (API) that can&#39;t be inferred from the markup?  Is there\nanything a client could do that isn&#39;t reflected in the markup?  I think \nthe answer to both questions, is &#39;no&#39;.  MVC on the client, yay!  :)\n\nIf the notion of HEAS is to promote serendipitous re-use of an API, \nthen shouldn&#39;t a Web API be expressed using hypermedia of known formats?  \nIf this is so, then isn&#39;t it a &#39;good thing&#39; to be able to describe a \nclient-server interaction using as few lines of common code as possible?  \nAm I missing some other forms language that fills this bill, today?\n\nThe following code, line-by-line, says we&#39;re making an HTTP PATCH \nrequest serialized as &#39;application/atomcat+xml&#39; using the file cats.xml \nas the model for the entity body; the target URL for the PATCH request \nmay be found in the Atom feed by finding the proper atom:id and summing \nits xml:base and &lt;link rel=&#39;edit&#39;&gt;; and the client is instructed to make \nthe PATCH a conditional request.  What isn&#39;t there yet, is reading the \nEtag from a GET request on that rel=&#39;edit&#39; link, $Etag is dummy code.\n\n...\n&lt;xfm:submission id=&#39;apply-tags&#39; ref=&quot;instance(&#39;cats.src&#39;)&quot; method=&#39;patch&#39; validate=&#39;false&#39;  \n serialization=&#39;application/atomcat+xml&#39;&gt;&lt;!-- needs @includenamespaceprefixes --&gt;\n &lt;xfm:resource value=&quot;concat(instance(&#39;feed.src&#39;)//id[.=instance(&#39;post-0.src&#39;)/id]/self::*/parent::*/@xml:base ,\n instance(&#39;feed.src&#39;)//id[.=instance(&#39;post-0.src&#39;)/id]/self::*/parent::*/link[@rel=&#39;edit&#39;]/@href)&quot;/&gt;\n &lt;xfm:header&gt;&lt;xfm:name&gt;If-Match&lt;/xfm:name&gt;&lt;xfm:value&gt;Etag&lt;/xfm:value&gt;&lt;/xfm:header&gt;\n&lt;/xfm:submission&gt;\n...\n\nAs for the &#39;cats.src&#39; model, here&#39;s the code for cats.xml, an external \nfile:\n\n&lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39;?&gt;\n&lt;app:categories xmlns:app=&#39;http://www.w3.org/2007/app&#39; scheme=&#39;http://ericjbowman.com/tags#&#39; xml:lang=&#39;en&#39;&gt;\n    &lt;category term=&#39;none&#39; label=&#39;uncategorized&#39;/&gt;\n&lt;/app:categories&gt;\n\nSince this form code will be generated by the server, questions like, \n&quot;Is the PATCH operation a merge or a replace?&quot; may be answered by simply \nremoving a tag from an existing entry and seeing what happens.  There&#39;s \nnothing about this bit of API that isn&#39;t entirely defined by operation \nof the XForms interface itself, if the answer can&#39;t be found in the code.\n\nSo, my snappy answer to Bill&#39;s original question, is &quot;XForms are a basis \nfor an API.&quot;  And, you don&#39;t have to use query parameters, you can just \nsubmit well-formed XML (the &lt;category&gt; tag in cats.xml pre-fills the tag-\nediting portion of the form, for those posts with no tags applied).  I \ndon&#39;t really know why XForms with known-format entity bodies aren&#39;t a \nde-facto standard, I couldn&#39;t help but wonder why I had to write my own \nAtom Protocol XForms client instead of seeing it as XForms example code \nsomewhere, if not all over the place.  My Atom Protocol client is Ffx 2.0 \nwith the XForms extension... so I just don&#39;t get the lack of luv for \nXForms (1.1 or better) around here!\n\n-Eric\n\n"}}