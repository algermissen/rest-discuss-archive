{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":191898322,"authorName":"Vidar Larsen","from":"Vidar Larsen &lt;vi_larsen@...&gt;","profile":"vi_larsen","replyTo":"SENDER","senderId":"1M29SgXys3w5gyr187rJGk5cOZ-jViNAzDKqjwGX03JUZd8MGoL7NfK-YkucuPFAuc9tnK-FG02cIkIZDKQq395X4xCbCpKk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Stack operations using Rest","postDate":"1211318853","msgId":10798,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJEQjgyRDlGLTYwMDAtNEM3Qy04Mjk1LUJDNEFGMTc5OTREN0B5YWhvby5ubz4=","inReplyToHeader":"PGcwcThxbSttNzZrQGVHcm91cHMuY29tPg==","referencesHeader":"PGcwcThxbSttNzZrQGVHcm91cHMuY29tPg=="},"prevInTopic":10796,"nextInTopic":10799,"prevInTime":10797,"nextInTime":10799,"topicId":10795,"numMessagesInTopic":17,"msgSnippet":"... The /queue/top resource should act as a reference to the actual top element, i.e. you should not DELETE it, as it should still exist while there are items","rawEmail":"Return-Path: &lt;vi_larsen@...&gt;\r\nX-Sender: vi_larsen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86594 invoked from network); 20 May 2008 21:27:39 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m56.grp.scd.yahoo.com with QMQP; 20 May 2008 21:27:39 -0000\r\nX-Received: from unknown (HELO osl1smout1.broadpark.no) (80.202.4.58)\n  by mta16.grp.scd.yahoo.com with SMTP; 20 May 2008 21:27:39 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from osl1sminn1.broadpark.no ([80.202.4.59])\n by osl1smout1.broadpark.no\n (Sun Java(tm) System Messaging Server 6.3-3.01 (built Jul 12 2007; 32bit))\n with ESMTP id &lt;0K1600AVTRM0XG00@...&gt; for\n rest-discuss@yahoogroups.com; Tue, 20 May 2008 23:27:36 +0200 (CEST)\r\nX-Received: from [10.0.0.129] ([80.202.19.81]) by osl1sminn1.broadpark.no\n (Sun Java(tm) System Messaging Server 6.3-3.01 (built Jul 12 2007; 32bit))\n with ESMTP id &lt;0K1600BTGRLYFLN1@...&gt; for\n rest-discuss@yahoogroups.com; Tue, 20 May 2008 23:27:36 +0200 (CEST)\r\nCc: akleak &lt;andy@...&gt;\r\nMessage-id: &lt;2DB82D9F-6000-4C7C-8295-BC4AF17994D7@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nIn-reply-to: &lt;g0q8qm+m76k@...&gt;\r\nDate: Tue, 20 May 2008 23:27:33 +0200\r\nReferences: &lt;g0q8qm+m76k@...&gt;\r\nX-Mailer: Apple Mail (2.919.2)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Vidar Larsen &lt;vi_larsen@...&gt;\r\nSubject: Re: [rest-discuss] Stack operations using Rest\r\nX-Yahoo-Group-Post: member; u=191898322; y=VRdRamvfoyKsJFVlBxR95WF5gcKaZPD0eu0EOoJ50Y0VdFeg\r\nX-Yahoo-Profile: vi_larsen\r\n\r\n\nOn 18. mai. 2008, at 23.58, akleak wrote:\n\n&gt; I would like to provide a REST interface to some Stack (Lifo)\n&gt; collections on my system.\n&gt;\n&gt; Here is my idea for a restful STACK interface:\n&gt;\n&gt; &gt;Push (add an item to the top of the stack)\n&gt; POST /queue (action:create, controller: stack)\n&gt;\n&gt; &gt; Pop (read the top item, then destroy it)\n&gt; GET /queue/top (action:read, controller: stack)\n&gt; DEL /queue/top (action:delete, controller: stack)\n&gt;\n&gt; What is the best way to implement this?? Any feedback welcome.\n\nThe /queue/top resource should act as a reference to the actual top  \nelement, i.e. you should not DELETE it, as it should still exist while  \nthere are items left on the stack.\n\nI would have the POST respond with 201 Created, and a Location: uri  \n(like /queue/item/{id}) to the new item resource.\nThen GET /queue/top could return a 200 OK+representation of the  \ntopmost item, but use the real uri in the Location:\nSo the GET whould be more like a &#39;peek&#39; rather than a proper &#39;pop&#39;.\n\nTo actually &#39;pop&#39; the stack, you would DELETE the real item uri (/ \nqueue/item/{id}), not /queue/top\n\nBut, the just deleted item/{id} must not be reused on a future POST  \ncreation (i.e. push), to guarantee that the item is 404 whenever in  \nthe future. So after a few pushes and pops, you could  have something  \nlike\n\n/queue/item/5   &lt;-   /queue/top\n/queue/item/4\n/queue/item/1\n/queue/item/0\n\nIf you need to ensure that the user is limited to only removing the  \ntopmost item, I think you would need to resort to some kind of POST  \nto /queue/op with &quot;pop&quot;, unless you want to respond with 403 Forbidden  \nif the user tries to DELETE anything that is not on top.\n\n--\n/vidar\n\n\n\n\n"}}