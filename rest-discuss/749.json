{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paulp@...&gt;","replyTo":"SENDER","senderId":"kyUQlRqJ92Qp_lbiOa5UmdIlePqjUqWOTfd3DzEx7lQzNR0yrIcALbmcM98kR6zZl4RasnVANcIvcbnYrpSQtzJqi31TDBkdBfjs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] detailed protocol writeup posted","postDate":"1014059162","msgId":749,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNzE1MDlBLjI3RkMwNEU5QGFjdGl2ZXN0YXRlLmNvbT4=","referencesHeader":"PFBpbmUuV05ULjQuNDQuMDIwMjE4MDE1MDAyMC4tMzE1NDA1QG9iaXdhbj4="},"prevInTopic":746,"nextInTopic":0,"prevInTime":748,"nextInTime":750,"topicId":744,"numMessagesInTopic":4,"msgSnippet":"... No. The watched resource can POINT to a watcher that knows how to watch it. That doesn t mean that you can t watch it if it does NOT point to such a","rawEmail":"Return-Path: &lt;paulp@...&gt;\r\nX-Sender: paulp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 18 Feb 2002 19:08:25 -0000\r\nReceived: (qmail 35306 invoked from network); 18 Feb 2002 19:08:24 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m10.grp.snv.yahoo.com with QMQP; 18 Feb 2002 19:08:24 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 18 Feb 2002 19:08:24 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1IJ8Ip02156\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon, 18 Feb 2002 11:08:18 -0800\r\nReceived: from activestate.com (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1IJ8IL31735\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon, 18 Feb 2002 11:08:18 -0800\r\nMessage-ID: &lt;3C71509A.27FC04E9@...&gt;\r\nDate: Mon, 18 Feb 2002 11:06:02 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] detailed protocol writeup posted\r\nReferences: &lt;Pine.WNT.4.44.0202180150020.-315405@obiwan&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paulp@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nLucas Gonze wrote:\n&gt; \n&gt;...\n&gt; \n&gt; If I understand this right, are you thinking the watched resource and the\n&gt; watcher are the same thing?\n\nNo. The watched resource can POINT to a watcher that knows how to watch\nit. That doesn&#39;t mean that you can&#39;t watch it if it does NOT point to\nsuch a watcher. But if you use a third-party watcher then of course you\nmay lose notification granularity.\n\n&gt; &gt;  2. I think you overspecify the structure of the notification.\n&gt; \n&gt; ...\n&gt; \n&gt; To the degree that I _was_ trying to write a recipe for implementors, it&#39;s\n&gt; not so much a standard as a debugged algorithm.  For example, anything\n&gt; that&#39;s a MUST is there because otherwise a critical feature won&#39;t work.\n&gt; It happens that the language of standards is great for writing\n&gt; meta-programs, that&#39;s the only reason I used it.\n\nIsn&#39;t interoperability between independently authored clients and\nservers a goal? If so, it is defacto a standard, if not a defacto\nstandard. ;)\n\n&gt; &gt;     * arguably methods should be application dependent...\n&gt; &gt;     * I strongly feel that the input parameters should be application\n&gt; &gt; dependent!\n&gt; \n&gt; ...again, I defer to my experiment+recipe intent, vs. an intent to\n&gt; standardize.\n\nEven so, your &quot;recipe&quot; could say: &quot;you could do X with these security\nimplications&quot; as opposed to &quot;you must do X because that&#39;s the most\nsecure way.&quot;\n\n&gt;...\n&gt; I definately agree and spent a while working on that, but found that it\n&gt; led me into turf where there&#39;s a persistent subscription to manage, and\n&gt; didn&#39;t want to open up that can of worms.  \n\nNot clear on why a re-sub is the same as a persistent subscription to\nmanage....but if you leave the notification response body structure\nundefined then maybe we can figure it out through experimentation.\n\n&gt;...\n&gt; so, basically, figuring out how to do the re-sub automatically would be a\n&gt; big win but I was hard pressed enough to do the minimum reasonably well\n&gt; that had to put off the whole issue of persistence.\n\nFair enough. Time is finite.\n\n&gt;...\n&gt; &gt; You seem not to have dealt with something on my todo list for\n&gt; &gt; HTTPEvents, container sub-resource changes.\n&gt; \n&gt; More?\n\nIf I have a resource &quot;/foo&quot; and somebody does a POST to it to create\n&quot;/foo/bar&quot; (yes, URIs are opaque but you know what I mean...a\nsubresource is created). Does that trigger a notification for &quot;foo&quot;? It\nwould be confusing to go look at &quot;/foo&quot; and see that it is exactly as\nyou left it. (because POSTing doesn&#39;t necessarily change the resource).\n\nAt one point I thought that it was important to have a feature to handle\nthis but thinking about it now I think the way to handle it is to have\n&quot;/foo&quot; be a resource with a representation that points to all of its\nsub-resources. Then it is intuitive that a change to a sub-resource\ntriggers a notification and it is relatively easy to figure out what\nsub-resource appeared or disappeared by &quot;diffing&quot; your cached copy\nagainst the sub-resources. But you could only figure out if a\nsub-resource was mutated if the entity body had something like hashes or\nlast-modified-times for each sub-resource in it.\n\nSo I&#39;m inclined to encourage you not to worry about it...\n\n Paul Prescod\n\n"}}