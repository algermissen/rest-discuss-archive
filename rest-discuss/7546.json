{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":192184872,"authorName":"Ittay Dror","from":"Ittay Dror &lt;ittayd@...&gt;","profile":"ittayf","replyTo":"SENDER","senderId":"1bDAljVdjh6PK0UHf2iEtdNEDQMJASkJMxmNr4QXMtFY2yKS0wD6YwB8rjZLPBKgJxjIzzqjlkSCTCQlhQRDvmG2Gq6YDi0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: how to model actions","postDate":"1168414672","msgId":7546,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1QTQ5N0QwLjMwMzAzMDBAcWx1c3RlcnMuY29tPg==","inReplyToHeader":"PDQ1YTQ4ZDQwLjA3NzNhNjMwLjQ4MjcuZmZmZjg4NWZAbXguZ29vZ2xlLmNvbT4=","referencesHeader":"PDQ1YTQ4ZDQwLjA3NzNhNjMwLjQ4MjcuZmZmZjg4NWZAbXguZ29vZ2xlLmNvbT4="},"prevInTopic":7545,"nextInTopic":7547,"prevInTime":7545,"nextInTime":7547,"topicId":7510,"numMessagesInTopic":39,"msgSnippet":"... yes. naturally, i would do it by sending a http://example.org/openQRM/service/abc123  data to the http://example.org/openQRM/actions","rawEmail":"Return-Path: &lt;Ittay.Dror@...&gt;\r\nX-Sender: Ittay.Dror@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 37891 invoked from network); 10 Jan 2007 07:38:33 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m29.grp.scd.yahoo.com with QMQP; 10 Jan 2007 07:38:33 -0000\r\nReceived: from unknown (HELO dhost002-84.dex002.intermedia.net) (64.78.20.222)\n  by mta6.grp.scd.yahoo.com with SMTP; 10 Jan 2007 07:38:33 -0000\r\nReceived: from misd002.dex002.intermedia.net ([64.78.61.100]) by dhost002-84.dex002.intermedia.net with Microsoft SMTPSVC(6.0.3790.1830);\n\t Tue, 9 Jan 2007 23:37:41 -0800\r\nReceived: from [10.100.2.106] ([212.143.196.226]) by misd002.dex002.intermedia.net over TLS secured channel with Microsoft SMTPSVC(6.0.3790.1830);\n\t Tue, 9 Jan 2007 23:37:55 -0800\r\nMessage-ID: &lt;45A497D0.3030300@...&gt;\r\nDate: Wed, 10 Jan 2007 09:37:52 +0200\r\nUser-Agent: Thunderbird 1.5.0.9 (X11/20061219)\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;45a48d40.0773a630.4827.ffff885f@...&gt;\r\nIn-Reply-To: &lt;45a48d40.0773a630.4827.ffff885f@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nReturn-Path: ittayd@...\r\nX-OriginalArrivalTime: 10 Jan 2007 07:37:56.0254 (UTC) FILETIME=[3E8763E0:01C7348A]\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Ittay Dror &lt;ittayd@...&gt;\r\nSubject: Re: [rest-discuss] Re: how to model actions\r\nX-Yahoo-Group-Post: member; u=192184872; y=bOb0Bi0ro8HRYnEeiYKbdhRZJsYYyQyjI9L6wWDAO7eK\r\nX-Yahoo-Profile: ittayf\r\n\r\n\n\nS. Mike Dierken wrote:\n&gt; How about a &#39;/&#39; character?\n&gt;  GET http://example.org/openQRM/service/abc123/status \n&gt; You could even use query terms\n&gt;  GET http://example.org/openQRM/service/abc123?property=status \n&gt; \n&gt;&gt; and another question, is it ok to model the &#39;start&#39; and &#39;stop&#39; actions as\n&gt; &#39;action&#39; resources?\n&gt; Sure - if you want to dynamically define and re-define the implementation of\n&gt; the &#39;start&#39; action, like upload some script. (I built a system like that\n&gt; once, it was very cool.)\n&gt; But I think this model is headed towards a queue, where you add work\n&gt; (pointers to entities) to be done.\n\nyes. naturally, i would do it by sending a &#39;&lt;start&gt;http://example.org/openQRM/service/abc123&lt;/start&gt;&#39;  data to the http://example.org/openQRM/actions resource (a queue of actions), or http://example.org/openQRM/service/abc123/actions. but this then seems very RPC\n\n\n&gt; \n&gt; \n&gt; \n&gt;&gt; -----Original Message-----\n&gt;&gt; From: rest-discuss@yahoogroups.com \n&gt;&gt; [mailto:rest-discuss@yahoogroups.com] On Behalf Of Ittay Dror\n&gt;&gt; Sent: Tuesday, January 09, 2007 10:26 PM\n&gt;&gt; To: rest-discuss@yahoogroups.com\n&gt;&gt; Subject: Re: [rest-discuss] Re: how to model actions\n&gt;&gt;\n&gt;&gt; bad choice of characters. &#39;#&#39; is for fragment identifiers. \n&gt;&gt; maybe something like:\n&gt;&gt; http://example.org/openQRM/service/abc123:status\n&gt;&gt;\n&gt;&gt; and another question, is it ok to model the &#39;start&#39; and \n&gt;&gt; &#39;stop&#39; actions as &#39;action&#39; resources?\n&gt;&gt;\n&gt;&gt; so, POST to http://example.org/openQRM/actions/start with data\n&gt;&gt; http://example.org/openQRM/service/abc123\n&gt;&gt;\n&gt;&gt; thanks,\n&gt;&gt; ittay\n&gt;&gt;\n&gt;&gt; Ittay Dror wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; thanks for your help.\n&gt;&gt;&gt;\n&gt;&gt;&gt; one final question, is it ok to model the API for &#39;status&#39; as \n&gt;&gt;&gt; http://example. org/openQRM/ service/abc123# status \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123#status&gt; (thus \n&gt;&gt; stating more \n&gt;&gt;&gt; clearly it is a property of the service, and not a resource \n&gt;&gt; in itself)\n&gt;&gt;&gt; thanks,\n&gt;&gt;&gt; ittay\n&gt;&gt;&gt;\n&gt;&gt;&gt; John D. Heintz wrote:\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; Hello Ittay,\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; Here&#39;s how I would approach the problem by way of small example. \n&gt;&gt;&gt; I&#39;ve  &gt; used &quot;====...&quot; just to help with the formatting.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; The first thing I would do is break down the name/uri \n&gt;&gt; space like this:\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; GET http://example. org/openQRM/ service/abc123  &gt; \n&gt;&gt; &lt;http://example. \n&gt;&gt;&gt; org/openQRM/ service/abc123 \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123&gt;&gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; HTTP/1.1 200 OK\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf- 8&quot;?&gt;  &gt; ...\n&gt;&gt;&gt;  &gt; &lt;service name=&quot;...&quot; status=&quot;started&quot; ...\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; This indicates that we can get a representation of the \n&gt;&gt; service  &gt; \n&gt;&gt;&gt; identified by &quot;abc123&quot;.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; We could then PUT or POST a modifed representation with  &gt; \n&gt;&gt;&gt; status=&quot;stopped&quot; , but I&#39;ll take a different approach. \n&gt;&gt; Let&#39;s have the  \n&gt;&gt;&gt;&gt; represenation provide more information via the hypertext:\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; GET http://example. org/openQRM/ service/abc123  &gt; \n&gt;&gt; &lt;http://example. \n&gt;&gt;&gt; org/openQRM/ service/abc123 \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123&gt;&gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; HTTP/1.1 200 OK\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf- 8&quot;?&gt;  &gt; ...\n&gt;&gt;&gt;  &gt; &lt;service name=&quot;...&quot; ...\n&gt;&gt;&gt;  &gt; &lt;status current=&quot;started&quot; href=&quot;abc123/ status&quot; ...\n&gt;&gt;&gt;  &gt; ============ ==\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; Now we have marked a new URI that is specially designed for the \n&gt;&gt;&gt; status  &gt; of the &quot;abc123&quot; service.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; From that URI:\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; GET http://example. org/openQRM/ service/abc123/ status  &gt; \n&gt;&gt;&gt; &lt;http://example. org/openQRM/ service/abc123/ status \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123/status&gt;&gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; HTTP/1.1 200 OK\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; started\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; Let&#39;s say that we want to support a simple PUT on this \n&gt;&gt; resource to  \n&gt;&gt;&gt;&gt; enable changing the state of a service:\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; PUT http://example. org/openQRM/ service/abc123/ status  &gt; \n&gt;&gt;&gt; &lt;http://example. org/openQRM/ service/abc123/ status \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123/status&gt;&gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; stopped\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; HTTP/1.1 200 OK\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; stopped\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; If ours was the only client controlling that service \n&gt;&gt; this would be  \n&gt;&gt;&gt;&gt; perfectly clear, but other clients (or the service itself) might \n&gt;&gt;&gt; have  &gt; already changed the status. Let&#39;s add some details that \n&gt;&gt;&gt; provide us with  &gt; information to do that.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; GET http://example. org/openQRM/ service/abc123/ status  &gt; \n&gt;&gt;&gt; &lt;http://example. org/openQRM/ service/abc123/ status \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123/status&gt;&gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; HTTP/1.1 200 OK\n&gt;&gt;&gt;  &gt; Last-Modified: Tue, 09 Jan 2007 22:34:37 GMT  &gt; ETag: &quot;xyz-789&quot;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; started\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; The Last-Modified should be clear, the ETag is a \n&gt;&gt; server-side hashed \n&gt;&gt;&gt; id  &gt; that can encode details like identity and version \n&gt;&gt; number. In our  \n&gt;&gt;&gt;&gt; subsequent PUT we can indicate to only do the work if the \n&gt;&gt; resource \n&gt;&gt;&gt; still  &gt; matches what we last saw (optimistic locking).\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; ============ ===\n&gt;&gt;&gt;  &gt; PUT http://example. org/openQRM/ service/abc123/ status  &gt; \n&gt;&gt;&gt; &lt;http://example. org/openQRM/ service/abc123/ status \n&gt;&gt;&gt; &lt;http://example.org/openQRM/service/abc123/status&gt;&gt;\n&gt;&gt;&gt;  &gt; If-Modified- Since: Tue, 09 Jan 2007 22:34:37 GMT  &gt;  &gt; \n&gt;&gt; stopped  &gt; \n&gt;&gt;&gt; ============ ===  &gt; HTTP/1.1 200 OK  &gt;  &gt; stopped  &gt; \n&gt;&gt; ============ ===  \n&gt;&gt;&gt;&gt;  &gt; Now it&#39;s safe for us to assume that &quot;we&quot; are the agent \n&gt;&gt; that did \n&gt;&gt;&gt; stop the  &gt; service. A failure response would have been returned if \n&gt;&gt;&gt; not.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; Stuff that I&#39;ve ignored so far:\n&gt;&gt;&gt;  &gt; * content type: I&#39;m just typing anything for example. \n&gt;&gt; Should always  \n&gt;&gt;&gt;&gt; prefer standard and interoperable content types.\n&gt;&gt;&gt;  &gt; * content negotiation: browsers and B2B agents may not want the \n&gt;&gt;&gt; same  &gt; representation content types  &gt; * Forms: How does \n&gt;&gt; this agent \n&gt;&gt;&gt; know it can PUT to that resource? What  &gt; values are allowed to be \n&gt;&gt;&gt; sent?\n&gt;&gt;&gt;  &gt; * probably a bunch more, I hope others jump in to \n&gt;&gt; correct me ;)  &gt;  \n&gt;&gt;&gt;&gt; Hope this helps provide a more clear example of the differences.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; John\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; On 1/9/07, *Ittay Dror* &lt; ittayd@qlusters. com  &gt; \n&gt;&gt;&gt; &lt;mailto:ittayd@qlusters. com &lt;mailto:ittayd%40qlusters.com&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; what troubles me is that most examples i find to explain \n&gt;&gt; rest use  \n&gt;&gt;&gt;&gt; simple cases, where no logic is actually running, and so \n&gt;&gt; it is easy  \n&gt;&gt;&gt;&gt; to transfer services to properties (since the services do very \n&gt;&gt;&gt; little)  &gt;  &gt; so here is my real world use case: openQRM is \n&gt;&gt; a platform \n&gt;&gt;&gt; for  &gt; provisioning and managing services in a DC. a service is an \n&gt;&gt;&gt; entity  &gt; named VirtualEnvironment that encapsulates both a set of \n&gt;&gt;&gt; policies on  &gt; how to provision and manage the real service and a \n&gt;&gt;&gt; capture of the  &gt; real service&#39;s state (resources, \n&gt;&gt; utilization, error, \n&gt;&gt;&gt; etc.)  &gt;  &gt; we can do many actions on a service, but the \n&gt;&gt; primary ones \n&gt;&gt;&gt; are to  &gt; start and stop it. starting means resources are selected \n&gt;&gt;&gt; from a pool  &gt; and assigned to work for the service, the \n&gt;&gt; software is \n&gt;&gt;&gt; deployed on  &gt; them and the service is monitored. stopping is the \n&gt;&gt;&gt; reverse.\n&gt;&gt;&gt;  &gt; obviously openQRM does all this. the client just \n&gt;&gt; requests to &#39;start&#39;\n&gt;&gt;&gt;  &gt; or &#39;stop&#39;.\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; now, it is hard for me to see &#39;start&#39; and &#39;stop&#39; as \n&gt;&gt; values of the  \n&gt;&gt;&gt;&gt; &#39;currentactivity&#39; property. if anything, it looks like a \n&gt;&gt; masquerade  \n&gt;&gt;&gt;&gt; of the RPC equivalent of posting to the \n&gt;&gt; VirtualEnvironment entity  &gt; \n&gt;&gt;&gt; with the pair &#39;action=start&#39; .\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; thank you for your help,\n&gt;&gt;&gt;  &gt; ittay\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; wahbedahbe wrote:\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; Hmmm. I&#39;m a bit of a newbie too but let me take a stab \n&gt;&gt; at this as \n&gt;&gt;&gt; an  &gt; &gt; exercise.\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; Now let me first say that the way you posed the \n&gt;&gt; question is very  \n&gt;&gt;&gt;&gt;&gt; &quot;objecty&quot; or &quot;servicey&quot; to begin with and makes it a \n&gt;&gt; bit hard to  \n&gt;&gt;&gt;&gt;&gt; answer. You&#39;ve basically said &quot;I have a service with \n&gt;&gt; methods A,  &gt; \n&gt;&gt;&gt; B, and  &gt; &gt; C; how do I make it resource based?&quot; The \n&gt;&gt; problem is that \n&gt;&gt;&gt; REST has no  &gt; &gt; concept of class-specific methods, so \n&gt;&gt; without knowing \n&gt;&gt;&gt; what A, B,  &gt; and C  &gt; &gt; do, its hard to answer your question. In \n&gt;&gt;&gt; short, there is no straight  &gt; &gt; forward transformation of \n&gt;&gt; an abstract \n&gt;&gt;&gt; service to abstract resources.\n&gt;&gt;&gt;  &gt; &gt; (At least not that I know of...) They are two very \n&gt;&gt; different ways \n&gt;&gt;&gt; of  &gt; &gt; modeling the interface. I can&#39;t transform one type \n&gt;&gt; of solution \n&gt;&gt;&gt; to  &gt; &gt; another without understanding the problem.\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; But I can infer a bit about the problem from the fact you are \n&gt;&gt;&gt; using  &gt; &gt; the concept of a person and things a person can do (eat, \n&gt;&gt;&gt; sleep,  &gt; work).\n&gt;&gt;&gt;  &gt; &gt; I&#39;ll assume here that sleep() and work() change the \n&gt;&gt; state of the  \n&gt;&gt;&gt;&gt;&gt; person (to sleeping and working respectively) . Maybe \n&gt;&gt; there is a  \n&gt;&gt;&gt;&gt;&gt; substate when working that says what work you are doing. Let&#39;s \n&gt;&gt;&gt; also  &gt; &gt; assume that eat() adds some food items to a list \n&gt;&gt; of things eaten.\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; So to work (on building a bike shed):\n&gt;&gt;&gt;  &gt; &gt; PUT /person/ittay/ currentactivity  &gt; &gt; Content-Type: \n&gt;&gt;&gt; application/ x-activity+ xml  &gt; &gt;  &gt; &gt; &lt;activity&gt;  &gt; &gt; &lt;type&gt;work&lt;/ \n&gt;&gt;&gt; type&gt;  &gt; &gt; &lt;sub-type&gt;building a bike shed&lt;/sub-type&gt;  &gt; &gt; \n&gt;&gt; &lt;/activity&gt;  \n&gt;&gt;&gt;&gt;&gt;  &gt; &gt; To sleep:\n&gt;&gt;&gt;  &gt; &gt; PUT /person/ittay/ currentactivity  &gt; &gt; Content-Type: \n&gt;&gt;&gt; application/ x-activity+ xml  &gt; &gt;  &gt; &gt; &lt;activity&gt;  &gt; &gt; &lt;type&gt;sleep&lt; \n&gt;&gt;&gt; /type&gt;  &gt; &gt; &lt;/activity&gt;  &gt; &gt;  &gt; &gt; To eat an apple:\n&gt;&gt;&gt;  &gt; &gt; POST /person/ittay/ stomach\n&gt;&gt;&gt;  &gt; &gt; Content-type: application/ x-food+xml  &gt; &gt;  &gt; &gt; &lt;food&gt;apple&lt; \n&gt;&gt;&gt; /food&gt;  &gt; &gt;  &gt; &gt; Now these actions could also kick off related \n&gt;&gt;&gt; business processes. I  &gt; &gt; think the only method that can&#39;t is GET. \n&gt;&gt;&gt; Note that you could use get  &gt; &gt; to retrieve the current \n&gt;&gt; activity from \n&gt;&gt;&gt; /person/ittay/  &gt; currentactivity or  &gt; &gt; the list of things eaten \n&gt;&gt;&gt; from /person/ittay/ stomach.\n&gt;&gt;&gt;  &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; --- In rest-discuss@ yahoogroups. com  &gt; &gt; &lt;mailto: \n&gt;&gt; rest-discuss% \n&gt;&gt;&gt; 40yahoogroups. com  &gt; &lt;mailto:rest- discuss%40yahoog roups.com&gt; &gt;, \n&gt;&gt;&gt; Ittay Dror &lt;ittayd@...&gt;\n&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; thanks for your example and site reference.\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; i did know that i use only HTTP methods, what i \n&gt;&gt; lacked is how \n&gt;&gt;&gt; to  &gt; &gt; model my business methods. i am a newbie at this (maybe i \n&gt;&gt;&gt; should have  &gt; &gt; indicated that)  &gt; &gt; &gt;  &gt; &gt; &gt; may i impose with a \n&gt;&gt;&gt; followup?\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; say i have a person entity in my application. this \n&gt;&gt; entity has  \n&gt;&gt;&gt;&gt;&gt; several business methods (eat, sleep, work). how should \n&gt;&gt; i model a  \n&gt;&gt;&gt;&gt; rest  &gt; &gt; api for these? create a PersonManager resource \n&gt;&gt; (which then \n&gt;&gt;&gt; will need  &gt; &gt; to accept as argument what action to do), or create \n&gt;&gt;&gt; resources per  &gt; &gt; action (/person/ittay/ eat maybe?).\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; thanks,\n&gt;&gt;&gt;  &gt; &gt; &gt; ittay\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; Jan Algermissen wrote:\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; Hi Ittay,\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; the kind of question you ask indicates that you \n&gt;&gt; have no yet  \n&gt;&gt;&gt;&gt;&gt; understood a fundamental aspect of REST, namely that \n&gt;&gt; there is a  &gt; \n&gt;&gt;&gt;&gt; uniform interface. You do not get any other methods as the  &gt; \n&gt;&gt;&gt; uniform set  &gt; &gt; (the HTTP methods in the case of using HTTP as an \n&gt;&gt;&gt; architecture)  &gt; &gt; &gt; &gt;  &gt; &gt; &gt; &gt; Without any intention to be rude, I \n&gt;&gt;&gt; suggest you take a while to  &gt; &gt; read through some of the REST \n&gt;&gt;&gt; material out on the Web (the REST wiki  &gt; &gt; at http://rest \n&gt;&gt;&gt; &lt;http://rest&gt;. blueoxen. net &lt;http://rest.\n&gt;&gt;&gt;  &gt; blueoxen. net &lt;http://rest. blueoxen. net \n&gt;&gt;&gt; &lt;http://rest.blueoxen.net&gt;&gt;&gt; is a good  &gt; &gt; starting point as is \n&gt;&gt;&gt; Paul&#39;s site  &gt; &gt; at http://prescod. com/rest &lt; http://prescod. \n&gt;&gt;&gt; com/rest  &gt; &lt;http://prescod. com/rest \n&gt;&gt; &lt;http://prescod.com/rest&gt;&gt;&gt; ). \n&gt;&gt;&gt; This will help  &gt; &gt; in future discussions.\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt; Should I use &#39;POST&#39; with a &#39;method=build&#39; \n&gt;&gt; parameter to the  \n&gt;&gt;&gt;&gt; &#39;plan&#39;\n&gt;&gt;&gt;  &gt; &gt; URI?\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; No, this is about the worst from a REST POV as it \n&gt;&gt; is hidden RPC.\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; Think along these lines:\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; Provide a means for clients to pick a resource \n&gt;&gt; that behaves \n&gt;&gt;&gt; the  &gt; &gt; way they are interested in (some hypermedia the \n&gt;&gt; clients come \n&gt;&gt;&gt; accross  &gt; &gt; could declare a resource as a BuildingManager) \n&gt;&gt; and then \n&gt;&gt;&gt; use POST to  &gt; &gt; submit the building plan.\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; POST /BuildingManager\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; Content-Type: application/ blueprint &lt;-- this type is  &gt; &gt; \n&gt;&gt;&gt; fictous; it would need to be standardized within the realm \n&gt;&gt; of  &gt; your \n&gt;&gt;&gt; system  &gt; &gt; &gt; &gt;  &gt; &gt; &gt; &gt; &lt;blueprint&gt;  &gt; &gt; &gt; &gt; &lt;wall \n&gt;&gt; location=&quot;.. ..&quot;/&gt;  \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;/blueprint&gt;  &gt; &gt; &gt; &gt;  &gt; &gt; &gt; &gt;  &gt; &gt; &gt; &gt; IOW, in a RESTful \n&gt;&gt;&gt; system clients late-bind to resources based on  &gt; &gt; \n&gt;&gt; runtime-declared \n&gt;&gt;&gt; abstract bahavior of those resources and they  &gt; &gt; \n&gt;&gt; communicate via a \n&gt;&gt;&gt; fixed set of methods.\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; HTH,\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt; Jan\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt; Thanks,\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt; Ittay\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;&gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt;\n&gt;&gt;&gt;  &gt; &gt; &gt; --\n&gt;&gt;&gt;  &gt; &gt; &gt; ============ ========= ========= =====  &gt; &gt; &gt; Ittay \n&gt;&gt; Dror,  &gt; &gt; \n&gt;&gt;&gt;&gt; Chief architect,  &gt; &gt; &gt; R&D, Qlusters Inc.\n&gt;&gt;&gt;  &gt; &gt; &gt; ittayd@...\n&gt;&gt;&gt;  &gt; &gt; &gt; +972-3-6081994 Fax: +972-3-6081841  &gt; &gt; &gt;  &gt; &gt; &gt; \n&gt;&gt; www.openqrm. \n&gt;&gt;&gt; org - Data Center Provisioning  &gt; &gt; &gt;  &gt; &gt;  &gt; &gt;  &gt;  &gt;  &gt; --  &gt; \n&gt;&gt;&gt; ============ ========= ========= =====  &gt; Ittay Dror,  &gt; Chief \n&gt;&gt;&gt; architect,  &gt; R&D, Qlusters Inc.\n&gt;&gt;&gt;  &gt; ittayd@qlusters. com &lt;mailto:ittayd@qlusters. com \n&gt;&gt;&gt; &lt;mailto:ittayd%40qlusters.com&gt;&gt;  &gt; +972-3-6081994 Fax: \n&gt;&gt; +972-3-6081841  \n&gt;&gt;&gt;&gt;  &gt; www.openqrm. org &lt;http://www.openqrm. org \n&gt;&gt;&gt; &lt;http://www.openqrm.org&gt;&gt; - Data Center Provisioning  &gt;  &gt;  &gt;  &gt; \n&gt;&gt;&gt; Yahoo! Groups Links  &gt;  &gt;  &gt; (Yahoo! ID required)  &gt;  &gt; \n&gt;&gt; mailto:rest- \n&gt;&gt;&gt; discuss- fullfeatured@ yahoogroups. com  &gt; &lt;mailto:rest-discuss- \n&gt;&gt;&gt; fullfeatured@ yahoogroups. com \n&gt;&gt;&gt; &lt;mailto:rest-discuss-fullfeatured%40yahoogroups.com&gt;&gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;  &gt; --\n&gt;&gt;&gt;  &gt; John D. Heintz\n&gt;&gt;&gt;  &gt; Principal Consultant\n&gt;&gt;&gt;  &gt; New Aspects of Software\n&gt;&gt;&gt;  &gt; Austin, TX\n&gt;&gt;&gt;  &gt; (512) 633-1198\n&gt;&gt;&gt;  &gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; --\n&gt;&gt;&gt; ============ ========= ========= ===== Ittay Dror, Chief architect, \n&gt;&gt;&gt; R&D, Qlusters Inc.\n&gt;&gt;&gt; ittayd@qlusters. com &lt;mailto:ittayd%40qlusters.com&gt;\n&gt;&gt;&gt; +972-3-6081994 Fax: +972-3-6081841\n&gt;&gt;&gt;\n&gt;&gt;&gt; www.openqrm. org - Data Center Provisioning\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; ===================================\n&gt;&gt; Ittay Dror,\n&gt;&gt; Chief architect,\n&gt;&gt; R&D, Qlusters Inc.\n&gt;&gt; ittayd@...\n&gt;&gt; +972-3-6081994 Fax: +972-3-6081841\n&gt;&gt;\n&gt;&gt; www.openqrm.org - Data Center Provisioning\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;  \n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt; \n&gt; \n\n\n-- \n===================================\nIttay Dror, \nChief architect, \nR&D, Qlusters Inc.\nittayd@...\n+972-3-6081994 Fax: +972-3-6081841\n\nwww.openqrm.org - Data Center Provisioning\n\n"}}