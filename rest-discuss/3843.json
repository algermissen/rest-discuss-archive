{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"VDtH7f4M6a9uApvGVmhOQhMySahgR01yb3kaErkEPOZbiQl4asglR-LsW2nLDVSQVYGq_gP01fqOVVi_kTTHJbFQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Jot, RNA and ReST vs MoST","postDate":"1060020777","msgId":3843,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIyMzYzMjAzNTguMTA2MDAwNjM3N0Bsb2NhbGhvc3Q+","inReplyToHeader":"PDAwMTcwMWMzNTg2OCQ4NzJjODIzMCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDAwMWMwMWMzNTc2NSQzZTExOTk0MCRhMDAwYThjMEBTZWFpcnRoQTMxPiA8MjAwMzA4MDExNTMwNTguSjY3NzRAd3d3Lm1hcmtiYWtlci5jYT4gPDAwMTcwMWMzNTg2OCQ4NzJjODIzMCRhMDAwYThjMEBTZWFpcnRoQTMxPg=="},"prevInTopic":3842,"nextInTopic":3844,"prevInTime":3842,"nextInTime":3844,"topicId":3818,"numMessagesInTopic":26,"msgSnippet":"Seairth, I just took a look at your blog and your comments on Jot/ReSTful blog architecture and at RNA  and ","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 16468 invoked from network); 4 Aug 2003 20:53:58 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m11.grp.scd.yahoo.com with QMQP; 4 Aug 2003 20:53:58 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (208.45.6.97)\n  by mta1.grp.scd.yahoo.com with SMTP; 4 Aug 2003 20:53:58 -0000\r\nReceived: from [10.255.218.180] (m288d36d0.tmodns.net [208.54.141.40])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid AFE2A8A5FF; Mon,  4 Aug 2003 16:53:57 -0400 (EDT)\r\nDate: Mon, 04 Aug 2003 14:12:57 -0400\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n\trest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Jot, RNA and ReST vs MoST \r\nMessage-ID: &lt;2236320358.1060006377@localhost&gt;\r\nIn-Reply-To: &lt;001701c35868$872c8230$a000a8c0@SeairthA31&gt;\r\nReferences: &lt;001c01c35765$3e119940$a000a8c0@SeairthA31&gt;\n &lt;20030801153058.J6774@...&gt;\n &lt;001701c35868$872c8230$a000a8c0@SeairthA31&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\nSeairth, I just took a look at your blog and your comments on Jot/ReSTful \nblog architecture and at RNA &lt;http://www.seairth.com/blog/industry/49&gt; and \n&lt;http://www.seairth.com/blog/jot/docs/6&gt; &lt;http://www.seairth.com/web/rna/&gt;\n\nThese specs strike me as excessively complex.  By forcing applications \ninterface specifications to include both a set of verbs and the \ncontent-types/schemas allowed w/r/t those verbs we lose all the visibility \nand genericity that ReST is intended to promise.\n\nIf we had a standard mapping between HTTP methods and underlying \ncontent-types, everything would get MUCH simpler.  The most useful mapping \nwould be from HTTP to XML and would probably look something like this:\n\nGET /myRSSblog returns an XML document.\nPOST /myRSSblog#channelId adds a new child to the XML node with that id.\nGET /myRSSblog#itemId returns an XML node with that id\nPUT /myRSSblog#itemId replaces the XML node with that id\nDELETE /myRSSblog#itemId deletes the XML node with that id\n(Style using &lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;yourstyle.xsl&quot;?&gt; for \nyour viewing pleasure.)\n\nNow you don&#39;t need any special purpose plumbing for indexing, mapping to \ndirectory structure, or all sorts of other annoying administrivia.  If you \nare maintaing a blog and you want to switch from RSS to nEcho just use an \nxslt transform and update your stylesheet.  No special purpose plumbing \nrequired....\n\nSimilarly, you can simplify the RNA spec to an addressbook/subscribers \nschema and an INBOX schema.  Sending messages obviously is just a POST to \nan inbox, etc.\n\nFor total coverage, a wiki is also just an XML document with client-side \njavascript placed in the stylesheet that does the wikitext rendering.  You \ncan even standardize the rendering by using a script-src rather than \nbundling your own (it is also, therefore, more likely to be cached).  The \nexisting wiki systems encourage proliferation of wikitext formats because \nthe rendering is done on the servers.\n\nThoughts?  Any reason why things need to be more complex than this?\n\n-Alex-\n\nPS The point of my advocating Model State Transfer over Representational \nState Transfer is precisely that I think ReST forces servers to implement \nall sorts of special purpose plumbing to hide the data model rather than \njust assuming that other agents (perhaps residing on the server) will do \ndata model conversions if needed. I&#39;d like to get to get rid of \ncontent-negotiation and get to the point where the content-type/xml-schema \nof a resource is all you need to know in order to interact with it.\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n\n--On Friday, August 01, 2003 4:07 PM -0400 Seairth Jacobs \n&lt;seairth@...&gt; wrote:\n\n&gt; That&#39;s what I thought, except when I was working on Jot (my RESTful blog\n&gt; system) someone (forgot who) said that 400 indicated a problem with HTTP\n&gt; layer itself (e.g. &quot;host&quot; header missing in HTTP/1.1) and should not be\n&gt; used for application-level errors.  Currently, I am using 403, saying\n&gt; that an invalid request entity (say, a non-well-formded XML document)\n&gt; would be &quot;forbidden&quot;. But the problem here is that the resource is what\n&gt; defines whether the request entity is valid or not (even the\n&gt; well-formedness of an XML document), so in *some* sense, a bad request\n&gt; entity &quot;conflicts&quot; with the resource.\n&gt;\n&gt; So, supposing that 409 was the correct response to use, then what is 403\n&gt; for?  About the only example I could come up with was one mirroring a\n&gt; filesystem operation.  Suppose you have a resource that is marked\n&gt; &quot;read-only&quot;.  An attempt to PUT to that resource may be valid if it were\n&gt; not read-only, but otherwise would return a 403.  This is not a conflict,\n&gt; necessarily (though I could see it rephrased that way), and therefore not\n&gt; appropriate for a 409 response.\n&gt;\n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@...\n&gt;\n&gt; From: &quot;Mark Baker&quot; &lt;distobj@...&gt;\n&gt;&gt;\n&gt;&gt; On Thu, Jul 31, 2003 at 09:11:23AM -0400, Seairth Jacobs wrote:\n&gt;&gt; &gt; Suppose an application detects a problem with the request entity.\n&gt; Should a\n&gt;&gt; &gt; 403 (forbidden) or a 409 (conflict) be returned?\n&gt;&gt;\n&gt;&gt; I&#39;d use 400.  Neither 403 nor 409 seem relevant.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n\n\n\n"}}