{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"oZtHFQV-ezMY1TiG7naMmrlU39i65cp3SWnmRBReaPcnEz-kDQFFKtIv44KiG8-jSbTP1Jjsa_7_JvH4xs1qu0q18WA4twjTViE5o0vDnw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs. list of orders]","postDate":"1282655462","msgId":16383,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODI0MDcxMTAyLjg1YzU4MjA3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGlrQT0tcGFQZHhHQ25vb1BBSzJ6NG10OFlGcWIyT2pjWUVERE9PR0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGluNlctcDhxX3Bmc29FR3JiT1NtRnFDWFNqVENfZnZnTDEyOW8xdUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMTMyS3RfPW1aQytrYm5NQlVLZUJtOGE5cEVma0VaOHNab0M5RkBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlua25fUTdZRGhqbS1LWlBBYTlNRj16eXNlODFMS0x0VTZYX1U1VEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGluV25OdXVXWGJLZGVUWmFmOW9aYzZLQlo9VG5wVXk1Q25YZmZZZEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9b1Qxc0t5VjNjUD0tejd6dFJlcEVPMFk1Mi01QkMzc1NVWDFvYUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9aFRyekVYRzk1VHl5Q0ZmNlVNVnY0XzMrM2FCTlBUZk9CdmszZ0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwODIzMDIxODUwLjI1ZTM4M2Q1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlucjFaVUc9WWo9dkNwUG9WLS1EaU1ibk90THpzcFM2UGtNS1QyRUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwODIzMTUzMTU1LmNjMTg1YTdjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltMm9KSkZGZmFEZj1LWDdTTXNOMnFuSnpNUVB4SFIyNlJpcUFGQUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwODI0MDQyMTA2LjNkNmJiY2IxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrQT0tcGFQZHhHQ25vb1BBSzJ6NG10OFlGcWIyT2pjWUVERE9PR0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16382,"nextInTopic":16384,"prevInTime":16382,"nextInTime":16384,"topicId":16269,"numMessagesInTopic":139,"msgSnippet":"... No, I don t know.  As far as I know, it can t possibly.  So if you disagree, please enlighten me as to how avoiding the IANA registry using HTTP over the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 70161 invoked from network); 24 Aug 2010 13:11:15 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 24 Aug 2010 13:11:15 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 24 Aug 2010 13:11:14 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 95D73509DC;\n\tTue, 24 Aug 2010 09:10:58 -0400 (EDT)\r\nDate: Tue, 24 Aug 2010 07:11:02 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: mike amundsen &lt;mamund@...&gt;, Glenn Block &lt;glenn.block@...&gt;,\n =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;, Peter Williams\n &lt;pezra@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100824071102.85c58207.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTikA=-paPdxGCnooPAK2z4mt8YFqb2OjcYEDDOOG@...&gt;\r\nReferences: &lt;AANLkTin6W-p8q_pfsoEGrbOSmFqCXSjTC_fvgL129o1u@...&gt;\n\t&lt;AANLkTik132Kt_=mZC+kbnMBUKeBm8a9pEfkEZ8sZoC9F@...&gt;\n\t&lt;AANLkTinkn_Q7YDhjm-KZPAa9MF=zyse81LKLtU6X_U5T@...&gt;\n\t&lt;AANLkTinWnNuuWXbKdeTZaf9oZc6KBZ=TnpUy5CnXffYd@...&gt;\n\t&lt;AANLkTi=oT1sKyV3cP=-z7ztRepEO0Y52-5BC3sSUX1oa@...&gt;\n\t&lt;AANLkTi=hTrzEXG95TyyCFf6UMVv4_3+3aBNPTfOBvk3g@...&gt;\n\t&lt;20100823021850.25e383d5.eric@...&gt;\n\t&lt;AANLkTinr1ZUG=Yj=vCpPoV--DiMbnOtLzspS6PkMKT2E@...&gt;\n\t&lt;20100823153155.cc185a7c.eric@...&gt;\n\t&lt;AANLkTim2oJJFFfaDf=KX7SMsN2qnJzMQPxHR26RiqAFA@...&gt;\n\t&lt;20100824042106.3d6bbcb1.eric@...&gt;\n\t&lt;AANLkTikA=-paPdxGCnooPAK2z4mt8YFqb2OjcYEDDOOG@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs.\n list of orders]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt;\n&gt; &gt; Yes, there is a lot more to the self-descriptive me=\r\nssaging\n&gt; &gt; constraint than media type identifiers.\n&gt; \n&gt; Ok, good.. Then th=\r\nere was no need for you to ask how &quot;self-descriptive\n&gt; messaging works with=\r\n opaque media type identifiers&quot;, since you already\n&gt; know.\n&gt; \n\nNo, I don&#39;t =\r\nknow.  As far as I know, it can&#39;t possibly.  So if you\ndisagree, please enl=\r\nighten me as to how avoiding the IANA registry\nusing HTTP over the Internet=\r\n could possibly be self-descriptive.\n\n&gt;\n&gt; &gt; No, I&#39;m not going to rewrite Ro=\r\ny&#39;s thesis, which explains the\n&gt; &gt; benefits and tradeoffs of the uniform in=\r\nterface in depth:\n&gt; &gt;\n&gt; &gt; &quot;REST enables intermediate processing by constrai=\r\nning messages to be\n&gt; &gt; self-descriptive: interaction is stateless between =\r\nrequests,\n&gt; &gt; standard methods and media types are used to indicate semanti=\r\ncs and\n&gt; &gt; exchange information, and responses explicitly indicate\n&gt; &gt; cach=\r\neability.&quot;\n&gt; &gt;\n&gt; &gt; Intermediate processing is _not_ enabled _except_ throug=\r\nh the use of\n&gt; &gt; stateless interactions consisting of standard methods and =\r\nmedia\n&gt; &gt; types. The entire notion of anarchic scalability depends upon\n&gt; &gt;=\r\n self-descriptive messaging, which by definition requires the use of\n&gt; &gt; st=\r\nandard media types, not just cache-control headers.\n&gt; \n&gt; Where abouts does =\r\nthat explain the costs of emergent (bottom-up)\n&gt; &#39;standardisation&#39; vs. the =\r\nstrict (top-down) way of doing it?\n&gt; \n\nREST doesn&#39;t need to care about that=\r\n, it&#39;s a protocol concern.  There \nare a whole slew of RFCs explaining medi=\r\na types and media type\nidentifiers, and the requirements for admittance int=\r\no the standards\ntree.  There is a syntactical difference between emerging t=\r\nypes which\nhave experimental or vendor status.  Once types from the non-sta=\r\nndards\ntrees have become sufficiently standardized as ordained by the IETF&#39;=\r\ns\nrules and regulations, they may be admitted into the standards tree, at\nw=\r\nhich point it becomes a standard.\n\n&gt;\n&gt; If the costs are marginal, then why =\r\nbother with the pain and\n&gt; inefficiency associated with the latter?\n&gt;\n\nDo y=\r\nou want a uniform-interface REST API or not?\n\n&gt;\n&gt; REST&#39;s position on this i=\r\nssue depends massively on what you interpret\n&gt; from the word &#39;standard&#39;:\n&gt; =\r\n\n\nNo, it doesn&#39;t.  When discussing RFC 2616, what&#39;s meant by &quot;standard&quot;\nis =\r\nquite clearly documented by a variety of other RFCs which have been\nagreed =\r\nto as the way to do things, for many years now.  By definition,\nthere is no=\r\nthing standardized about an unregistered identifier\nreferring to an unpubli=\r\nshed specification on the Internet based on the\ncommonly understood meaning=\r\n of &quot;standard&quot; documented in the pertinent\nRFCs.\n\n&gt; \n&gt; My point of view is =\r\nthat standard media types would emerge naturally\n&gt; anyway without the need =\r\nfor a registry, not that REST is achievable\n&gt; without standard media types.=\r\n I&#39;m trying to understand why you believe\n&gt; this could not happen, and/or w=\r\nhy it is not desirable.\n&gt; \n\nBut this has already been tried, and failed.  M=\r\nodern Gopher clients and\nservers understand &#39;h&#39; as an identifier for HTML. =\r\n But, all the spec\nsays about &#39;h&#39; is &quot;reserved for future use&quot;.  So where i=\r\ns it documented\nthat &#39;h&#39; correlates to HTML?  Not in the spec.\n\nThis is the=\r\n point of an extensibility mechanism like the IANA registry,\nwhich does not=\r\nhing to prevent the natural emergence of new standards,\nas proven by Atom a=\r\nnd the fact that the IANA registry provides a\nmechanism for new standards t=\r\no evolve from experimental to deployed\nstatus.\n\nSo I&#39;m not sure what proble=\r\nm you&#39;re trying to solve by doing away with\nthe notion of a registry, where=\r\n the solution doesn&#39;t just take us back\nto somewhere we&#39;ve been.  All the I=\r\nANA registry does, is set a high bar\nbetween what&#39;s registered and what&#39;s s=\r\ntandardized, but not impossibly\nhigh -- just high enough to keep the overal=\r\nl architecture from\ncollapsing in a heap of non-interoperable complexity.\n\n=\r\nThe IANA registry isn&#39;t perfect, but we are stuck with it for the\nforseeabl=\r\ne future, and it&#39;s not been subject to any serious debate for\nover a decade=\r\n, so again the pushback against it befuddles me...\n\n&gt; \n&gt; &gt;&gt;\n&gt; &gt;&gt; You can&#39;t =\r\nlook something up without a registry? =A0Pro-tip:\n&gt; &gt;&gt;\n&gt; &gt;&gt; http://www.goog=\r\nle.com/search?q=3D%22application/hal%2Bxml%22\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; First of all, pl=\r\nease refer to RFC 4288. =A0Your syntax is that of the\n&gt; &gt; standards tree, a=\r\nnd will never be approved by IANA unless there&#39;s a\n&gt; &gt; corresponding RFC. =\r\n=A0You need to choose an appropriate tree, then\n&gt; &gt; take five whole minutes=\r\n out of your day to register your\n&gt; &gt; identifier. =A0Why is this such an in=\r\nsurmountable obstacle, that\n&gt; &gt; using Google is preferable?\n&gt; &gt;\n&gt; &gt; Yes, yo=\r\nu can look anything up on Google, but Google isn&#39;t a\n&gt; &gt; registry, and a re=\r\ngistry is required to avoid collisions where\n&gt; &gt; multiple parties are using=\r\n the same identifier for wildly different\n&gt; &gt; purposes. =A0Google can&#39;t kee=\r\np anyone else from using your identifier\n&gt; &gt; for another purpose. The IANA =\r\nregistry exists for exactly that\n&gt; &gt; reason.\n&gt; \n&gt; In such a system it would=\r\n be highly unlikely for two media types with\n&gt; the same identifier to emerg=\r\ne to a level of &#39;standardisation&#39;\n&gt; simultaneously.. maybe future REST syst=\r\nems should look to use URIs to\n&gt; identify media types and dereference specs=\r\n, therefore avoiding this\n&gt; risk altogether?\n&gt; \n\nCollisions have nothing to=\r\n do with standardisation or uptake.  What\nlittle security architecture the =\r\nWeb has, is based on media type\nidentifiers.  Various image formats have kn=\r\nown security risks.  I might\nwant my intermediary to filter out any exploit=\r\ns before passing it on,\nor rejecting it, or whatever.  None of which works =\r\nif image/jpg traffic\noriginating from Google has a different codec, and the=\r\nrefore a different\nsecurity profile, than image/jpg traffic originating fro=\r\nm Amazon.\n\nI don&#39;t know what &quot;risk&quot; you&#39;re referring to, as it only applies=\r\n when\nthe IANA registry is deliberately avoided.  Register your identifier,=\r\n\nand no intermediary will ever need to consider &quot;what else it might\nmean&quot; b=\r\necause there&#39;s a registry entry guiding everyone to one and only\none associ=\r\nated spec, from then on, no collisions possible except by\nnonstandard imple=\r\nmentations based on googling for the identifier\ninstead of looking it up in=\r\n IANA...\n\n&gt;\n&gt; &gt;&gt; If crawlers were to provide a pagerank equivalent for medi=\r\na types,\n&gt; &gt;&gt; according to public usage, could we do away with the registry=\r\n\n&gt; &gt;&gt; altogether? If not, why not?\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; You&#39;re free to suggest any =\r\nnew mechanism as a successor to the IANA\n&gt; &gt; registry. =A0But, in the real =\r\nworld of today, if you&#39;re using HTTP,\n&gt; &gt; NO, you can&#39;t do away with the IA=\r\nNA registry because it&#39;s an\n&gt; &gt; integral part of the protocol. =A0Such sugg=\r\nestions are only relevant\n&gt; &gt; to discussions of successor protocols, like H=\r\nTTP 2 or Waka.\n&gt; \n&gt; Ok, thanks.. I&#39;m discussing REST, though. Funnily enoug=\r\nh.\n&gt; \n\nYou&#39;re talking about &quot;doing away with the registry&quot; for media type\ni=\r\ndentifiers, a concept that isn&#39;t mentioned anywhere in REST.  REST has\na se=\r\nlf-descriptive messaging constraint that&#39;s instantiated in HTTP by,\namong o=\r\nther things, the IANA registry for media type identifiers.  So\nyou must be =\r\ndiscussing HTTP.  But, HTTPbis is a work-in-progress, the\nscope of which pr=\r\necludes eliminating, or providing an alternative to,\nthe IANA registry.  So=\r\n my answer stands -- nothing to be done about it\nexcept in some successor p=\r\nrotocol which obsoletes HTTP 1.1.\n\n&gt;\n&gt; &gt; But, I think that&#39;s a horrible ide=\r\na, since it does nothing to avoid\n&gt; &gt; collisions -- only allows a set-in-st=\r\none identifier&#39;s meaning to\n&gt; &gt; change over time according to the whims of =\r\nthe mob. =A0Such anarchy\n&gt; &gt; is not conducive to the goals of a uniform int=\r\nerface, and is\n&gt; &gt; certainly at odds with the long-term stability that&#39;s a =\r\ngoal of\n&gt; &gt; REST.\n&gt; \n&gt; You seriously think &quot;the mob&quot; (constituents of the s=\r\nystem, and those\n&gt; baring the cost) are likely to create or allow those sor=\r\nts of\n&gt; destabilizing changes?\n&gt; \n\nOh, yes.  Exhibit A:  HTML 5...  ;-)\n\nWi=\r\nth a registry, the media type identifiers I chose for projects I\nbuilt back=\r\n in the mid-90&#39;s mean exactly the same thing today as they\ndid back then, a=\r\nnd this transparency is exactly what allowed those\nrepresentations to be ca=\r\nched in archive.org, where they still work with\nmodern browsers today.  All=\r\nowing an identifier to evolve over time to\npoint to some other media type, =\r\nsolves what problem again?\n\n&gt; \n&gt; Because in REST terms it depends on what y=\r\nou mean by &#39;standard&#39; and in\n&gt; practical HTTP terms, even though it conflic=\r\nts with spec, there are\n&gt; other less formal ways of standardising a type th=\r\nat _will_ be used\n&gt; because they work and don&#39;t present any major issues.\n&gt;=\r\n \n\nREST isn&#39;t about doing what works, i.e. unbounded creativity.  REST is\na=\r\nbout a disciplined approach involving the application of constraints.\nYou d=\r\non&#39;t have to follow REST, but if you&#39;re trying to, then you need\nto follow =\r\nthe rules for evolving an identifier from the experimental to\nthe standards=\r\n tree of the IANA registry, as its associated media type\nevolves from a pro=\r\nposal to a specification -- playing semantics with\nthe word &quot;standard&quot; is n=\r\not a loophole.\n\n-Eric\n\n"}}