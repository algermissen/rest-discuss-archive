{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"6NQzwj4A7voR7Q6pZmcCBrCckSp7qNSzGBaAJcKh1c9sE_UrXnmLy7Nxps-wRpWJMk1yKI3SSRvSklsrwanx1qWXLhRQhoxk8Ws","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: The Future of WCF is indeed RESTful","postDate":"1287876418","msgId":16768,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9WjJiT2ZRQ05UWV9URHc3U3pCcVJDdlZ5MlFVLTY1bkxHRy1tcUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTAxMDIxMTgzMDA0LjVkNjE5ZmFmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PEFBTkxrVGlrNFcxZnpaN28xTDFQMWdCdVk1d3p3ZDZxZ2FRbUY4U1lzYUI9UUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDIxMTQxNjM2Ljg2ZWUwY2E5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9NllrLV9HM09WbVVyeml3WTMxWU9DYXlybjRxcTNWZ2ZYenY4VUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDIxMTgzMDA0LjVkNjE5ZmFmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":16767,"nextInTopic":16769,"prevInTime":16767,"nextInTime":16769,"topicId":16750,"numMessagesInTopic":21,"msgSnippet":"Having the ability to support children is not forcing opinions. Also the notion of children may be out of context. The particular scenario relates to how a","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9811 invoked from network); 23 Oct 2010 23:26:59 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m15.grp.re1.yahoo.com with QMQP; 23 Oct 2010 23:26:59 -0000\r\nX-Received: from unknown (HELO mail-qw0-f45.google.com) (209.85.216.45)\n  by mta2.grp.re1.yahoo.com with SMTP; 23 Oct 2010 23:26:59 -0000\r\nX-Received: by qwf7 with SMTP id 7so648011qwf.4\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 23 Oct 2010 16:26:59 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.241.146 with SMTP id le18mr4229024qcb.86.1287876418845;\n Sat, 23 Oct 2010 16:26:58 -0700 (PDT)\r\nX-Received: by 10.229.32.142 with HTTP; Sat, 23 Oct 2010 16:26:58 -0700 (PDT)\r\nIn-Reply-To: &lt;20101021183004.5d619faf.eric@...&gt;\r\nReferences: &lt;AANLkTik4W1fzZ7o1L1P1gBuY5wzwd6qgaQmF8SYsaB=Q@...&gt;\n\t&lt;20101021141636.86ee0ca9.eric@...&gt;\n\t&lt;AANLkTi=6Yk-_G3OVmUrziwY31YOCayrn4qq3VgfXzv8U@...&gt;\n\t&lt;20101021183004.5d619faf.eric@...&gt;\r\nDate: Sat, 23 Oct 2010 16:26:58 -0700\r\nMessage-ID: &lt;AANLkTi=Z2bOfQCNTY_TDw7SzBqRCvVy2QU-65nLGG-mq@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016363b913a75bcea0493511878\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: The Future of WCF is indeed RESTful\r\nX-Yahoo-Group-Post: member; u=210009313; y=yNmUJqOe8RxwrZ_JRX8J9Sdpx2sIikGJ4B6y-H8rFpdxGbRGQks\r\nX-Yahoo-Profile: glenn_block\r\n\r\n\r\n--0016363b913a75bcea0493511878\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nHaving the ability to support &quot;children&quot; is not forcing opinions. Also the\nnotion of &quot;children&quot; may be out of context. The particular scenario relates\nto how a request is handled based on the uri. For example if I have a uri\nthat is &quot;Foo/Bar&quot; or &quot;Foo/Baz&quot; I may want to have specific handling that all\n&quot;children&quot; of Foo have attached to them based on the uri namespace. It&#39;s not\nto say that Bar is an actual child of Foo in an entity / domain model case.\n\nRegardless, the intent was to say we want to at least enable them, which is\nsomething that our current implementation doesn&#39;t amend itself to.\n\nAs far as Conneg we want to support both transparent and explicit and the\nnotion of sub-resources which are variants. Out of the box today we are\nsupporting transparent, but the design should allow whatever kind of conneg\nfloats you boat so to speak.\n\nOn Thu, Oct 21, 2010 at 5:30 PM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; Glenn Block wrote:\n&gt; &gt;\n&gt; &gt; Agreed. If you check the preso I made it clear this was about http and\n&gt; &gt; enabling REST....\n&gt; &gt;\n&gt;\n&gt; Right, that&#39;s exactly what I was calling out for praise, sorry if it\n&gt; came across as criticism.  As to the presentation, there was a Q&A\n&gt; discussion about the platform imposing design criteria on the system\n&gt; under development, which you say you want to avoid.  But, your example\n&gt; of /foo/bar making bar a child of foo, would do precisely that.  I can\n&gt; think of more situations where bar isn&#39;t a child of foo, in the\n&gt; application sense, than situations where it is -- most of the time, I\n&gt; have nothing there to inherit.  Unless you make that optional, but the\n&gt; presentation isn&#39;t clear in that regard, so this is just a note.\n&gt;\n&gt; The other feedback I have is regarding Content-Location, not only for\n&gt; conneg but for situations like &quot;author&#39;s preferred version&quot;.  The demo\n&gt; shows that you can assign multiple representations to a resource.  But\n&gt; this approach typically fails the identification of resources and self-\n&gt; descriptive messaging constraints.  We&#39;ve discussed this here before,\n&gt; and I realize that I&#39;m in the minority on this, but it&#39;s still a SHOULD\n&gt; in HTTP.\n&gt;\n&gt; What I&#39;d like from a platform, is the ability to define first an Atom\n&gt; resource, then a JSON resource, *then* be able to define a resource\n&gt; which negotiates between them.  The problem with Accept-based conneg,\n&gt; is that you don&#39;t always have control over the client -- i.e. you can&#39;t\n&gt; tell a browser to negotiate between Atom and JSON without Code on\n&gt; Demand.  So there needs to be some way to link directly to the desired\n&gt; variant, without conneg.  Among other reasons.  Some of my rationale\n&gt; rug was pulled out from under me with HTTPbis -11 about a day after the\n&gt; last thread on this topic, but C-L with conneg is still a SHOULD, not a\n&gt; MAY, for very good reasons.\n&gt;\n&gt; -Eric\n&gt;\n\r\n--0016363b913a75bcea0493511878\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHaving the ability to support &quot;children&quot; is not forcing opinions.=\r\n Also the notion of &quot;children&quot; may be out of context. The particu=\r\nlar scenario relates to how a request is handled based on the uri. For exam=\r\nple if I have a uri that is &quot;Foo/Bar&quot; or &quot;Foo/Baz&quot; I ma=\r\ny want to have specific handling that all &quot;children&quot; of Foo have =\r\nattached to them based on the uri namespace. It&#39;s not to say that Bar i=\r\ns an actual child of Foo in an entity / domain model case.&lt;br&gt;\n&lt;br&gt;Regardle=\r\nss, the intent was to say we want to at least enable them, which is somethi=\r\nng that our current implementation doesn&#39;t amend itself to.&lt;br&gt;&lt;br&gt;As f=\r\nar as Conneg we want to support both transparent and explicit and the notio=\r\nn of sub-resources which are variants. Out of the box today we are supporti=\r\nng transparent, but the design should allow whatever kind of conneg floats =\r\nyou boat so to speak.&lt;br&gt;\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Oct 21, 20=\r\n10 at 5:30 PM, Eric J. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@=\r\nbisonsystems.net&quot;&gt;eric@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquot=\r\ne class=3D&quot;gmail_quote&quot; style=3D&quot;margin: 0pt 0pt 0pt 0.8ex; border-left: 1p=\r\nx solid rgb(204, 204, 204); padding-left: 1ex;&quot;&gt;\n&lt;div class=3D&quot;im&quot;&gt;Glenn Bl=\r\nock wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Agreed. If you check the preso I made it clear=\r\n this was about http and&lt;br&gt;\n&gt; enabling REST....&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div=\r\n&gt;Right, that&#39;s exactly what I was calling out for praise, sorry if it&lt;b=\r\nr&gt;\ncame across as criticism. =A0As to the presentation, there was a Q&amp;A=\r\n&lt;br&gt;\ndiscussion about the platform imposing design criteria on the system&lt;b=\r\nr&gt;\nunder development, which you say you want to avoid. =A0But, your example=\r\n&lt;br&gt;\nof /foo/bar making bar a child of foo, would do precisely that. =A0I c=\r\nan&lt;br&gt;\nthink of more situations where bar isn&#39;t a child of foo, in the&lt;=\r\nbr&gt;\napplication sense, than situations where it is -- most of the time, I&lt;b=\r\nr&gt;\nhave nothing there to inherit. =A0Unless you make that optional, but the=\r\n&lt;br&gt;\npresentation isn&#39;t clear in that regard, so this is just a note.&lt;b=\r\nr&gt;\n&lt;br&gt;\nThe other feedback I have is regarding Content-Location, not only f=\r\nor&lt;br&gt;\nconneg but for situations like &quot;author&#39;s preferred version&=\r\nquot;. =A0The demo&lt;br&gt;\nshows that you can assign multiple representations t=\r\no a resource. =A0But&lt;br&gt;\nthis approach typically fails the identification o=\r\nf resources and self-&lt;br&gt;\ndescriptive messaging constraints. =A0We&#39;ve d=\r\niscussed this here before,&lt;br&gt;\nand I realize that I&#39;m in the minority o=\r\nn this, but it&#39;s still a SHOULD&lt;br&gt;\nin HTTP.&lt;br&gt;\n&lt;br&gt;\nWhat I&#39;d like=\r\n from a platform, is the ability to define first an Atom&lt;br&gt;\nresource, then=\r\n a JSON resource, *then* be able to define a resource&lt;br&gt;\nwhich negotiates =\r\nbetween them. =A0The problem with Accept-based conneg,&lt;br&gt;\nis that you don&=\r\n#39;t always have control over the client -- i.e. you can&#39;t&lt;br&gt;\ntell a =\r\nbrowser to negotiate between Atom and JSON without Code on&lt;br&gt;\nDemand. =A0S=\r\no there needs to be some way to link directly to the desired&lt;br&gt;\nvariant, w=\r\nithout conneg. =A0Among other reasons. =A0Some of my rationale&lt;br&gt;\nrug was =\r\npulled out from under me with HTTPbis -11 about a day after the&lt;br&gt;\nlast th=\r\nread on this topic, but C-L with conneg is still a SHOULD, not a&lt;br&gt;\nMAY, f=\r\nor very good reasons.&lt;br&gt;\n&lt;font color=3D&quot;#888888&quot;&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/b=\r\nlockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0016363b913a75bcea0493511878--\r\n\n"}}