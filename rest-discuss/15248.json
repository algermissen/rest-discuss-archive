{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"Alan Dean &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"tEbgD6vcla063CgLWUT5p4Tj5YshuzqnD17pPtsP9ahYraa5q21Vmq_XF2KMVjLxRM5lLu9WRt_FDB6OvapCG-XoaSIVWg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] The cache constraint","postDate":"1271333873","msgId":15248,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHMyaDc5OTMzMGMzMTAwNDE1MDUxN3dlOWNkYmM5YXg0YzhmNGYxMjY2ZmRjMWY0QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRCQzZGODRFLjQwNDAzMDBAbXlrYW5qby5jby51az4=","referencesHeader":"PDRCQzZGODRFLjQwNDAzMDBAbXlrYW5qby5jby51az4="},"prevInTopic":15247,"nextInTopic":15251,"prevInTime":15247,"nextInTime":15249,"topicId":15246,"numMessagesInTopic":22,"msgSnippet":"Mike, Within REST, Caching is both an optional and a highly desirable constraint. It is optional in that it is easy to imagine a RESTful implementation that ","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 69118 invoked from network); 15 Apr 2010 12:18:14 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m14.grp.re1.yahoo.com with QMQP; 15 Apr 2010 12:18:14 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.152)\n  by mta3.grp.sp2.yahoo.com with SMTP; 15 Apr 2010 12:18:13 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id 16so584786fgg.17\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 15 Apr 2010 05:18:13 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.239.131.200 with HTTP; Thu, 15 Apr 2010 05:17:53 -0700 (PDT)\r\nIn-Reply-To: &lt;4BC6F84E.4040300@...&gt;\r\nReferences: &lt;4BC6F84E.4040300@...&gt;\r\nDate: Thu, 15 Apr 2010 13:17:53 +0100\r\nX-Google-Sender-Auth: 90917169242257e9\r\nX-Received: by 10.239.185.7 with SMTP id a7mr6137hbh.111.1271333893222; Thu, 15 \n\tApr 2010 05:18:13 -0700 (PDT)\r\nMessage-ID: &lt;s2h799330c31004150517we9cdbc9ax4c8f4f1266fdc1f4@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001485f7963a18b2ee0484457d47\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alan Dean &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] The cache constraint\r\nX-Yahoo-Group-Post: member; u=189321215; y=9JWscha_mQ8ivOVgJ5UjMVf_-thSa5XRrMdXHhjbnZNSi520V9jgI_s3\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\n\r\n--001485f7963a18b2ee0484457d47\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nMike,\n\nWithin REST, Caching is both an optional and a highly desirable cons=\r\ntraint.\n\nIt is optional in that it is easy to imagine a RESTful implementat=\r\nion that\nnever actually expects caching by User-Agent or any intermediaries=\r\n (this\nwould be the same as implicitly labelling everything as non-cacheabl=\r\ne). Such\nan implementation would, however, be inefficient to some degree wh=\r\nich is why\nadding the constraint is desirable.\n\nRegards,\nAlan Dean\n\nOn Thu,=\r\n Apr 15, 2010 at 12:28, Mike Kelly &lt;mike@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Is ca=\r\nching a necessary constraint from an arch style pov?\n&gt;\n&gt; It seems like a co=\r\nnsequence/benefit of the other constraints\n&gt; (cs/layered/stateless/uniform =\r\ninterface) rather than one in its own right\n&gt;\n&gt; Cheers,\n&gt; Mike\n&gt;  \n&gt;\n\r\n--001485f7963a18b2ee0484457d47\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: arial, sans-serif; f=\r\nont-size: 13px; border-collapse: collapse; &quot;&gt;Mike,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Withi=\r\nn REST, Caching is both an optional and a highly desirable constraint.&lt;/div=\r\n&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It is optional in that it is easy to imagine a RESTf=\r\nul implementation that never actually expects caching by User-Agent or any =\r\nintermediaries (this would be the same as implicitly labelling everything a=\r\ns non-cacheable). Such an implementation would, however, be=C2=A0inefficien=\r\nt=C2=A0to some degree which is why adding the constraint is desirable.&lt;/div=\r\n&gt;\n\n&lt;div&gt;&lt;br clear=3D&quot;all&quot;&gt;Regards,&lt;br&gt;&lt;font color=3D&quot;#888888&quot;&gt;Alan Dean&lt;/fo=\r\nnt&gt;&lt;/div&gt;&lt;/span&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Apr 15, 2010 at 12:2=\r\n8, Mike Kelly &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mike@...&quot;&gt;m=\r\nike@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;blockquote class=3D&quot;gmail_quo=\r\nte&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;=\r\n&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=C2=A0&lt;/span&gt;\n\n=\r\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Is caching a necessary co=\r\nnstraint from an arch style pov?&lt;br&gt;\n&lt;br&gt;\nIt seems like a consequence/benef=\r\nit of the other constraints &lt;br&gt;\n(cs/layered/stateless/uniform interface) r=\r\nather than one in its own right&lt;br&gt;\n&lt;br&gt;\nCheers,&lt;br&gt;\nMike&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/d=\r\niv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n=\r\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--001485f7963a18b2ee0484457d47--\r\n\n"}}