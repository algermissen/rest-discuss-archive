{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":454665725,"authorName":"Juergen Brendel","from":"Juergen Brendel &lt;juergen.brendel@...&gt;","profile":"brendel.juergen","replyTo":"SENDER","senderId":"_zTw6Ap2x7hDCl9EqjxjeX840j_Vy_7YTxDRhSdo4YziiyybL8N_MwlCM-M5u2r49lYoo8fQTrToo0-SGLsMiGThUptE9dS2uoSQamFQLi2TI1AQfQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1294103995","msgId":17182,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyOTQxMDM5OTUuMzcyMy4xMTcuY2FtZWxAYmFja3BhY2s+","inReplyToHeader":"PEFBTkxrVGlra1NwSkVOWDc3WjVtRzBQYndUaXRpc3doMFhYYVRvMG14cDhzREBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPgkgPDREMTlDREQzLjQwODA1QHdlYnIzLm9yZz4gPDcyMDA1RkNFNDdDRDRFMUE4QUUxNTc3QzlERjk2QUM1QEpyblBDPgkgPDREMTlERDczLjkwMTAyMDdAd2VicjMub3JnPgkgPEFBTkxrVGluaEJ3dW90dmhiNTdHM3gyQV9xbj10RUhLZFRIamZlRThfWVk1VEBtYWlsLmdtYWlsLmNvbT4JIDw0RDFBMkZEMS43MDEwNTAyQHdlYnIzLm9yZz4gPDBCRjVGOEJBLTQ3RTAtNDcwMy04MzkwLTYxMEI0RjRDREY5MUBtYWMuY29tPgkgPDEyOTM1Njk5NzYuMTU1ODkuNTAuY2FtZWxAYmFja3BhY2s+CSA8MjAxMDEyMjkwMDQwMjkuZjE0OTM3ZWUuZXJpY0BiaXNvbnN5c3RlbXMubmV0PgkgPDEyOTM2NDMxMjQuMTU1ODkuNzIuY2FtZWxAYmFja3BhY2s+CSA8MjAxMDEyMjkxMzUxNDUuYmFhNTQzZDQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PgkgPDEyOTM2NTc3NjQuMTYyMzcuMy5jYW1lbEBiYWNrcGFjaz4JIDwyMDEwMTIyOTE5MjYxNi5jZjk1M2JjZS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CSA8MTI5NDA4NzM3MC4zNzIzLjUuY2FtZWxAYmFja3BhY2s+CSA8QUFOTGtUaW1YLVpHNjEwN0ZwRFdrdjAwWlBjQmZZRFpXa0c0Q0FUSzI4aThFQG1haWwuZ21haWwuY29tPgkgPEFBTkxrVGk9UTEwMW9QWU4ta0hjWVh6R0RxLWJFekJSUVFkbVQ4RUZPaWdCOEBtYWlsLmdtYWlsLmNvbT4JIDwxMjk0MDk2NzExLjM3MjMuOTYuY2FtZWxAYmFja3BhY2s+CSA8QUFOTGtUaWtrU3BKRU5YNzdaNW1HMFBid1RpdGlzd2gwWFhhVG8wbXhwOHNEQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":17181,"nextInTopic":17183,"prevInTime":17181,"nextInTime":17183,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"Hello! ... Really? I mean, is that realistic for a lot of cases? If you really need to support multiple protocols then sure, you don t want that sort of thing","rawEmail":"Return-Path: &lt;juergen.brendel@...&gt;\r\nX-Sender: juergen.brendel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8421 invoked from network); 4 Jan 2011 01:20:04 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m13.grp.re1.yahoo.com with QMQP; 4 Jan 2011 01:20:04 -0000\r\nX-Received: from unknown (HELO mail-pw0-f52.google.com) (209.85.160.52)\n  by mta3.grp.re1.yahoo.com with SMTP; 4 Jan 2011 01:20:04 -0000\r\nX-Received: by pwi5 with SMTP id 5so3206783pwi.25\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 03 Jan 2011 17:20:03 -0800 (PST)\r\nX-Received: by 10.142.166.15 with SMTP id o15mr17181590wfe.429.1294104002980;\n        Mon, 03 Jan 2011 17:20:02 -0800 (PST)\r\nReturn-Path: &lt;juergen.brendel@...&gt;\r\nX-Received: from [10.1.1.4] (ip-118-90-122-137.xdsl.xnet.co.nz [118.90.122.137])\n        by mx.google.com with ESMTPS id p8sm30083600wff.16.2011.01.03.17.19.59\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Mon, 03 Jan 2011 17:20:02 -0800 (PST)\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: Randy Fischer &lt;fischer@...&gt;, Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;AANLkTikkSpJENX77Z5mG0PbwTitiswh0XXaTo0mxp8sD@...&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\n\t &lt;4D19CDD3.40805@...&gt; &lt;72005FCE47CD4E1A8AE1577C9DF96AC5@JrnPC&gt;\n\t &lt;4D19DD73.9010207@...&gt;\n\t &lt;AANLkTinhBwuotvhb57G3x2A_qn=tEHKdTHjfeE8_YY5T@...&gt;\n\t &lt;4D1A2FD1.7010502@...&gt; &lt;0BF5F8BA-47E0-4703-8390-610B4F4CDF91@...&gt;\n\t &lt;1293569976.15589.50.camel@backpack&gt;\n\t &lt;20101229004029.f14937ee.eric@...&gt;\n\t &lt;1293643124.15589.72.camel@backpack&gt;\n\t &lt;20101229135145.baa543d4.eric@...&gt;\n\t &lt;1293657764.16237.3.camel@backpack&gt;\n\t &lt;20101229192616.cf953bce.eric@...&gt;\n\t &lt;1294087370.3723.5.camel@backpack&gt;\n\t &lt;AANLkTimX-ZG6107FpDWkv00ZPcBfYDZWkG4CATK28i8E@...&gt;\n\t &lt;AANLkTi=Q101oPYN-kHcYXzGDq-bEzBRQQdmT8EFOigB8@...&gt;\n\t &lt;1294096711.3723.96.camel@backpack&gt;\n\t &lt;AANLkTikkSpJENX77Z5mG0PbwTitiswh0XXaTo0mxp8sD@...&gt;\r\nContent-Type: text/plain; charset=&quot;UTF-8&quot;\r\nOrganization: MuleSoft\r\nDate: Tue, 04 Jan 2011 14:19:55 +1300\r\nMessage-ID: &lt;1294103995.3723.117.camel@backpack&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.28.1 \r\nContent-Transfer-Encoding: 7bit\r\nFrom: Juergen Brendel &lt;juergen.brendel@...&gt;\r\nReply-To: juergen.brendel@...\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=454665725; y=IWu7ag97xJehlzs0cJqXBk1DrlbtW7jx404YJyVXWR3yIoVVVFh-s4Ln\r\nX-Yahoo-Profile: brendel.juergen\r\n\r\n\nHello!\n\nOn Mon, 2011-01-03 at 19:50 -0500, mike amundsen wrote:\n&gt; &lt;snip&gt;\n&gt; &gt;        &quot;links&quot; : [ {\n&gt; &gt;                                  &quot;href&quot;       : &quot;/foo/bar&quot;,\n&gt; &gt;                                  &quot;rel&quot;        : &quot;self&quot;,\n&gt; &gt;                                  &quot;method&quot;     : &quot;GET&quot;\n&gt; &gt;                            },\n&gt; &gt;                            {\n&gt; &gt;                              &quot;href&quot;       : &quot;/foo/bar&quot;,\n&gt; &gt;                              &quot;rel&quot;        : &quot;edit&quot;,\n&gt; &gt;                              &quot;method&quot;     : &quot;PUT&quot;,\n&gt; &gt;                              &quot;media-type&quot; : &quot;application/something&quot;\n&gt; &gt;                            }\n&gt; &gt;                          ]\n&gt; &lt;/snip&gt;\n&gt; This is an example of what I avoid. I do not encode protocol details\n&gt; (method/media type) in my media types themselves or in the\n&gt; representations made w/ these types. I know that HTML does this w/\n&gt; FORM[1] elements (@method & @enc-type). There are times when I may do\n&gt; this, but it is rarely needed for the work I am doing. One reason I\n&gt; keep protocol details out of the [representation|media types] is that\n&gt; I favor media types that are &quot;protocol-agnostic.&quot; IOW, it should be\n&gt; possible to use HTTP, FTP, XMPP, etc. with the same media type and\n&gt; accomplish the same tasks.\n\nReally? I mean, is that realistic for a lot of cases? If you really need\nto support multiple protocols then sure, you don&#39;t want that sort of\nthing here and you want an agnostic type. But I&#39;m just trying to\nremember what the equivalent of PUT vs. POST would be for FTP, or the\n&#39;location&#39; HTTP response header, just as an example. Actually, it&#39;s not\nso much about &#39;PUT&#39; vs. &#39;POST&#39;, but about update-existing (or\ncreate-at-location) vs.\ncreate-in-collection-and-let-server-determine-location.\n\nIt&#39;s nice if it all works with a multitude of protocols, but aren&#39;t we\ntrying to take advantage of the built-in capabilities of a particular\nprotocol, in this case the most commonly used protocol on the Internet\n(HTTP) in our quest for scalability and ease of use? And &#39;in the real\nworld&#39; (I&#39;m actually mostly thinking about public APIs, so admittedly\nit&#39;s more &#39;my real world&#39;), I would have thought that non-HTTP is not\nmuch of a concern in this context. Not saying YOU should only concern\nyourself with HTTP, clearly you&#39;ll have your reasons why you need those\nother ones.\n\nNevertheless, if you take &#39;method&#39; out then you could just say that\n&quot;rel=self&quot; implies GET (or equivalent), while &quot;rel=edit&quot; implies PUT (or\nequivalent). If that&#39;s defined out of band in the media type definition\nthen I guess you really don&#39;t need it here.\n\n\n&gt; As for the value of including a media-type string for a link within\n&gt; the representation (this has been discussed here several times, I\n&gt; can&#39;t find any links right now), I find this practice needlessly\n&gt; &quot;locks&quot; the client into expecting the same representation format for a\n&gt; link. I note that HTML currently has @type[2] as a way to give clients\n&gt; a _hint_ on what media type might be at the other end of the link.\n\nNot sure I understand. Are you talking about a GET request having its\nmedia type apparently implied based on the indicated content type for a\nPUT request? If a client would see it that way, then they have certainly\ntaken it too far, since the type was specific only to the &#39;edit&#39; link.\nThe &#39;self&#39; link could possibly have its own media type indication.\nRealistically, it would be a list of types in each case, because of\nconneg.\n\n\n&gt; I&#39;ve never bought into the notion that app-specific media types are\n&gt; bad. That is my opinion and nothing more. I can only say that, for the\n&gt; use cases I have encountered, [specific|custom] media types work quite\n&gt; well and I have no immediate plans to stop [using|creating] them as I\n&gt; find the need.\n\nYes, and I would agree with you. It just seems that there are very\nstrong opinions on both sides of this issue.\n\n\n&gt; &lt;snip&gt;\n&gt; &gt; I also think it&#39;s useful to design a very generic type (such as XML with\n&gt; &gt; links or JSON with links) along with a decent set of generally useful\n&gt; &gt; rel values. Once that&#39;s done, this might be enough for some applications\n&gt; &gt; already, while other apps can define their custom media types merely by\n&gt; &gt; defining additional &#39;rel&#39; values for that generic type, rather than a\n&gt; &gt; brand new type from scratch? Maybe that&#39;s what this whole discussion\n&gt; &gt; about micro-types is about.\n&gt; &lt;/snip&gt;\n&gt; In my current work, I use XHTML (parsed as XML for some clients) to\n&gt; handle the protocol details (H Factors[3]  is what I call these) and\n&gt; @rel values for app-level details. I&#39;ve been experimenting w/ encoding\n&gt; the details of @rels in a secondary document (using the HTML\n&gt; @profile[3] pattern) and engineering clients to &quot;consume&quot; these\n&gt; profile documents, parse them, and &quot;apply&quot; the results to the generic\n&gt; media type. This is a mimic of &quot;CSS&quot; but for app-level semantics. I&#39;ve\n&gt; built some trivial clients that are capable of applying different\n&gt; app-level profiles to the same generic media type and accomplishing\n&gt; the desired tasks.\n\nSimilar to this one here?\n\nhttp://iansrobinson.com/2010/09/02/using-typed-links-to-forms/\n\n\nI find this approach interesting as well.\n\n\nJuergen\n\n\n\n-- \nJuergen Brendel\nMuleSoft\n\n\n"}}