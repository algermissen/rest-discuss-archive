{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":320904186,"authorName":"Unmesh Joshi","from":"Unmesh Joshi &lt;unmeshjoshi@...&gt;","profile":"unmesh_joshi","replyTo":"SENDER","senderId":"MBEMDSdk-VwkCCDVplZWfbHjwL1BNLuEPPCBGu91zJIsBQub5w9rUYmqGMszEOQyHvRFyigAB0jM-mtCDq1J96h2ogqVDfyDlyDS","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HMAC based authorization - Security for REST services","postDate":"1360365732","msgId":19264,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBT2sremZja09nUk01MlhFVmM2c3QxTkg4WEpUNU1tRzJ4TEM3NnAreEd0cks5RVYwUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBS2ozRTNZUTJrcEh5YUZHTzBIUEhfdl81UzRlVWlBQkxrU1V0ZjhpbjMtUGhCaD1Vd0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGtmMjRmNCtybTR2QGVHcm91cHMuY29tPgk8Q0FLajNFM1lRMmtwSHlhRkdPMEhQSF92XzVTNGVVaUFCTGtTVXRmOGluMy1QaEJoPVV3QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":19263,"nextInTopic":0,"prevInTime":19263,"nextInTime":19265,"topicId":19261,"numMessagesInTopic":3,"msgSnippet":"Thats useful is we are using varnish. But nothing for Apache. One reasonable way seems to be using something like noodle or j2ep and add hmac authorization","rawEmail":"Return-Path: &lt;unmeshjoshi@...&gt;\r\nX-Sender: unmeshjoshi@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 32758 invoked from network); 8 Feb 2013 23:22:14 -0000\r\nX-Received: from unknown (10.193.84.163)\n  by m6.grp.bf1.yahoo.com with QMQP; 8 Feb 2013 23:22:14 -0000\r\nX-Received: from unknown (HELO mail-lb0-f180.google.com) (209.85.217.180)\n  by mta3.grp.bf1.yahoo.com with SMTP; 8 Feb 2013 23:22:13 -0000\r\nX-Received: by mail-lb0-f180.google.com with SMTP id q12so3309932lbc.25\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 08 Feb 2013 15:22:13 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.152.108.195 with SMTP id hm3mr6402485lab.17.1360365732922;\n Fri, 08 Feb 2013 15:22:12 -0800 (PST)\r\nX-Received: by 10.114.20.202 with HTTP; Fri, 8 Feb 2013 15:22:12 -0800 (PST)\r\nIn-Reply-To: &lt;CAKj3E3YQ2kpHyaFGO0HPH_v_5S4eUiABLkSUtf8in3-PhBh=Uw@...&gt;\r\nReferences: &lt;kf24f4+rm4v@...&gt;\n\t&lt;CAKj3E3YQ2kpHyaFGO0HPH_v_5S4eUiABLkSUtf8in3-PhBh=Uw@...&gt;\r\nDate: Sat, 9 Feb 2013 04:52:12 +0530\r\nMessage-ID: &lt;CAOk+zfckOgRM52XEVc6st1NH8XJT5MmG2xLC76p+xGtrK9EV0Q@...&gt;\r\nTo: Erlend Hamnaberg &lt;ngarthl@...&gt;\r\nCc: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=bcaec54fb98a46832204d53ed41a\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Unmesh Joshi &lt;unmeshjoshi@...&gt;\r\nSubject: Re: [rest-discuss] HMAC based authorization - Security for REST services\r\nX-Yahoo-Group-Post: member; u=320904186; y=p-fVZB5u092oWAC__2cg-39BJv_VB6Yo4J4_CPfi3jDqgED5FEvB\r\nX-Yahoo-Profile: unmesh_joshi\r\n\r\n\r\n--bcaec54fb98a46832204d53ed41a\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThats useful is we are using varnish. But nothing for Apache. One\nreasonabl=\r\ne way seems to be using something like noodle or j2ep and add hmac\nauthoriz=\r\nation code there. This also seems to be a standard pattern &#39;Message\nInterce=\r\nptor Gateway&#39; in web services security world.\n\n\nOn Fri, Feb 8, 2013 at 5:06=\r\n PM, Erlend Hamnaberg &lt;ngarthl@...&gt; wrote:\n\n&gt; Check out varnish (no a=\r\nffiliation), vmod-digest.\n&gt;\n&gt; https://github.com/varnish/libvmod-digest\n&gt;\n&gt;=\r\n --\n&gt; Erlend\n&gt;\n&gt;\n&gt; On Fri, Feb 8, 2013 at 7:03 AM, unmesh_joshi &lt;unmeshjosh=\r\ni@...&gt;wrote:\n&gt;\n&gt;&gt; **\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Hi,\n&gt;&gt;\n&gt;&gt; For building secure RESTful s=\r\nervices, its common practice to have digital\n&gt;&gt; signature (HMAC hash) in th=\r\ne Authorization Header, along with the secret\n&gt;&gt; key id. The implementation=\r\n seems fairly standard where\n&gt;&gt; 1. Client adds Date: header to the request.=\r\n\n&gt;&gt; 2. Client builds digital signature with url path parameters and query\n&gt;=\r\n&gt; parameters and headers.\n&gt;&gt; 3. Client puts Authorization Header as\n&gt;&gt; Auth=\r\norization: :\n&gt;&gt;\n&gt;&gt; On Server side.\n&gt;&gt; 1. Server checks existence of require=\r\nd header.\n&gt;&gt; 2. Server retrieves the private key for the secrete key id pro=\r\nvided in\n&gt;&gt; the Authorization Header (Note: This can be typically done by c=\r\nalling a Key\n&gt;&gt; Management service over SSL, which is deployed in a secured=\r\n network)\n&gt;&gt; 3. Server computes HMAC has with the same method that client h=\r\nas used.\n&gt;&gt; 4. Server matches the hash with the one provided by the client.=\r\n\n&gt;&gt; 5. If the hash matches, server forwards the request for further\n&gt;&gt; proc=\r\nessing.\n&gt;&gt; 6. If hashes dont match, server returns 401 UnAuthorized respons=\r\ne to\n&gt;&gt; client.\n&gt;&gt;\n&gt;&gt; It is also a standard patterns in Web Services world =\r\nto use Message\n&gt;&gt; Interceptor Gateway (listed in\n&gt;&gt; http://www.coresecurity=\r\npatterns.com/patterns.htm).\n&gt;&gt; This way security gateway is a separate tier=\r\n between client and the\n&gt;&gt; actual web service endpoint.\n&gt;&gt;\n&gt;&gt; This logic is=\r\n very standard and I think this can be implemented as a\n&gt;&gt; Apache plugin, w=\r\nhich can intercept the request before forwarding it to\n&gt;&gt; Application Serve=\r\nr.\n&gt;&gt;\n&gt;&gt; Is there any such standard plugin developed for Apache or any othe=\r\nr web\n&gt;&gt; server?\n&gt;&gt;\n&gt;&gt;  \n&gt;&gt;\n&gt;\n&gt;\n\r\n--bcaec54fb98a46832204d53ed41a\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Thats useful is we are using varnish. But nothing for Apac=\r\nhe. One reasonable way seems to be using something like noodle or j2ep and =\r\nadd hmac authorization code there. This also seems to be a standard pattern=\r\n &#39;Message Interceptor Gateway&#39; in web services security world.=A0&lt;/=\r\ndiv&gt;\n&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, =\r\nFeb 8, 2013 at 5:06 PM, Erlend Hamnaberg &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;m=\r\nailto:ngarthl@...&quot; target=3D&quot;_blank&quot;&gt;ngarthl@...&lt;/a&gt;&gt;&lt;/span&gt;=\r\n wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;bo=\r\nrder-left:1px #ccc solid;padding-left:1ex&quot;&gt;&lt;div dir=3D&quot;ltr&quot;&gt;Check out varni=\r\nsh (no affiliation), vmod-digest.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;https://git=\r\nhub.com/varnish/libvmod-digest&quot; target=3D&quot;_blank&quot;&gt;https://github.com/varnis=\r\nh/libvmod-digest&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--&lt;/div&gt;&lt;div&gt;\nErlend&lt;/div&gt;&lt;/=\r\ndiv&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, F=\r\neb 8, 2013 at 7:03 AM, unmesh_joshi &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto=\r\n:unmeshjoshi@...&quot; target=3D&quot;_blank&quot;&gt;unmeshjoshi@...&lt;/a&gt;&gt;&lt;/sp=\r\nan&gt; wrote:&lt;br&gt;\n\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8e=\r\nx;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div&gt;\n&lt;=\r\nspan&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi,&lt;br&gt;\n=\r\n&lt;br&gt;\nFor building secure RESTful services, its common practice to have digi=\r\ntal signature (HMAC hash) in the Authorization Header, along with the secre=\r\nt key id. The implementation seems fairly standard where&lt;br&gt;\n1. Client adds=\r\n Date: header to the request.&lt;br&gt;\n2. Client builds digital signature with u=\r\nrl path parameters and query parameters and headers. &lt;br&gt;\n3. Client puts Au=\r\nthorization Header as &lt;br&gt;\n   Authorization: : &lt;br&gt;\n&lt;br&gt;\nOn Server side.&lt;br=\r\n&gt;\n1. Server checks existence of required header.&lt;br&gt;\n2. Server retrieves th=\r\ne private key for the secrete key id provided in the Authorization Header (=\r\nNote: This can be typically done by calling a Key Management service over S=\r\nSL, which is deployed in a secured network)&lt;br&gt;\n3. Server computes HMAC has=\r\n with the same method that client has used.&lt;br&gt;\n4. Server matches the hash =\r\nwith the one provided by the client.&lt;br&gt;\n5. If the hash matches, server for=\r\nwards the request for further processing.&lt;br&gt;\n6. If hashes dont match, serv=\r\ner returns 401 UnAuthorized response to client.&lt;br&gt;\n&lt;br&gt;\nIt is also a stand=\r\nard patterns in Web Services world to use Message Interceptor Gateway (list=\r\ned in &lt;a href=3D&quot;http://www.coresecuritypatterns.com/patterns.htm&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://www.coresecuritypatterns.com/patterns.htm&lt;/a&gt;).&lt;br&gt;\n\n\nTh=\r\nis way security gateway is a separate tier between client and the actual we=\r\nb service endpoint.&lt;br&gt;\n&lt;br&gt;\nThis logic is very standard and I think this c=\r\nan be implemented as a Apache plugin, which can intercept the request befor=\r\ne forwarding it to Application Server.&lt;br&gt;\n&lt;br&gt;\nIs there any such standard =\r\nplugin developed for Apache or any other web server?&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/d=\r\niv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n=\r\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--bcaec54fb98a46832204d53ed41a--\r\n\n"}}