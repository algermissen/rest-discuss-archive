{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"Wi4DEjIiYj8Ceco-CRNX7abvAGuM-xMfnqXEDkjB4ATcYT1wdmCERUhfdy9ZwEhsGoHQkBUk8nIsqOPDLZ71aexF6FM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reference best practices","postDate":"1232039756","msgId":12024,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5NkY2RjRDLjYwNzAxMDNAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDU1YzYwZTM3MDkwMTE1MDgyM3I2YzZlNmE0ZWczM2I2MTA3MGNhNDNjZmVjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMTE0MTIyNXE2ZDdlMjIyZXdkY2JmMDkzNTAyMzZhZDJAbWFpbC5nbWFpbC5jb20+CSA8NDk2RjQ3RTMuOTA4MDgwNEBoYWNrY3JhZnQubmV0PiA8NTVjNjBlMzcwOTAxMTUwODIzcjZjNmU2YTRlZzMzYjYxMDcwY2E0M2NmZWNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12023,"nextInTopic":12025,"prevInTime":12023,"nextInTime":12025,"topicId":12015,"numMessagesInTopic":14,"msgSnippet":"... You find the string after /food/ and parse it to an integer. This is pretty trivial in most languages, differing from that to take just the string 333","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88684 invoked from network); 15 Jan 2009 17:16:26 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m52.grp.scd.yahoo.com with QMQP; 15 Jan 2009 17:16:26 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta18.grp.scd.yahoo.com with SMTP; 15 Jan 2009 17:16:26 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Thu, 15 Jan 2009 12:15:59 -0500\r\nMessage-ID: &lt;496F6F4C.6070103@...&gt;\r\nDate: Thu, 15 Jan 2009 17:15:56 +0000\r\nUser-Agent: Thunderbird 2.0.0.19 (Windows/20081209)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;55c60e370901141225q6d7e222ewdcbf09350236ad2@...&gt;\t &lt;496F47E3.9080804@...&gt; &lt;55c60e370901150823r6c6e6a4eg33b61070ca43cfec@...&gt;\r\nIn-Reply-To: &lt;55c60e370901150823r6c6e6a4eg33b61070ca43cfec@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: -1783860391671.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 12:16:06 on 15 Jan 2009\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] Reference best practices\r\nX-Yahoo-Group-Post: member; u=164939419; y=G0Ehnadue143TqeDZW6gBewI444uF87Z9qYNxEPvjRSWgVY7\r\nX-Yahoo-Profile: hack_poet\r\n\r\nSolomon Duskis wrote:\n&gt; Jon,\n&gt; \n&gt; I do understand that id redundant, and therefore should probably be \n&gt; taken out.  However, the id=333 is useful for server processing.  It&#39;s a \n&gt; bit easier for the server-side to use the id instead of the url as part \n&gt; of a POST.\n\nYou find the string after &quot;/food/&quot; and parse it to an integer. This is \npretty trivial in most languages, differing from that to take just the \nstring &quot;333&quot; and obtain an integer (assuming your DB keys are integers \nrather than strings where that one just happens to be an integer) only \nby a substring or reg-exp operation.\n\nConversely, if you have both, which am I meant to use where as a client?\n\nIf I can use either, you have to do the same work for some requests \nanyway, so you haven&#39;t gained anything.\n\nIf I am meant to use id some places and the URI other places, then \nyou&#39;ve complicated things for me, the person who knows the least about \nyour system (the documentation of the API probably being the first I&#39;ve \never heard about it).\n\nUsing just the ID takes us away from HATEOS, but I&#39;d say this is better \nthan having both, though I&#39;d generally only ever do that in an AJAX \nsituation where the XML was being processed by javascript obtained from \nthe same server (while the javascript is client code, it&#39;s client-code \nthat comes from the server, so the dependencies not using HATEOS brings \naren&#39;t as damaging).\n\nUsing just the URI considerably increases the likelihood of working out \nwhat on earth I should be doing. A nice, though sometimes rare, thing to \nexperience when suddenly given an API doc and a deadline :)\n\nAlso, if there is more than one possible source of such information, \nthen I&#39;m going to have to introduce something to my records of your \nidentifiers to identify that it isn&#39;t just food ID 333 but YOUR food ID \n333. So I&#39;m going to have to turn it into something like the URI anyway.\n\n&gt; Are there any development frameworks that do a good job of translating \n&gt; between relational data (id = 333) and RESTful data (/food/333)?\n\nIf I can afford to make an assumption or two then:\n\nWhat doesn&#39;t substring do here?\n\nIt can be even easier in responding to GET if you used \nhttp://myserver.com/food?id=333, since most frameworks come with some \nsort of dictionary view on query-string parameters.\n\nConsidering that whichever way you do it you&#39;re either going to handle a \nbunch of text with a number (for the time being - a bonus of the URI \napproach is it&#39;s easier to change key formats if needs be) in a \nparticular place, I don&#39;t see much advantage of the custom ID format \nover the URI.\n\n\n"}}