{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Gu9h1VRy2v-yYgcgTca-QSl0I2QEXP2Z4XmeRwQa-uFFi2R6noC1CoHdQUdwgfLNAPs3ZE2NBbqLK7qNEilE__MbVgI-vz7lsD9okt05EA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Why SPARQL endpoints aren&#39;t even remotely RESTful.","postDate":"1296739492","msgId":17297,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwMjAzMDYyNDUyLjNmZmNmZjYxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRENDlCQzVDLjcwODA1MDFAd2VicjMub3JnPg==","referencesHeader":"PDIwMTEwMjAyMDc0MDI5LmZhYzgyMTlhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDRENDlCQzVDLjcwODA1MDFAd2VicjMub3JnPg=="},"prevInTopic":17296,"nextInTopic":17298,"prevInTime":17296,"nextInTime":17298,"topicId":17281,"numMessagesInTopic":22,"msgSnippet":"... Dereferencing that URI executes the query... ... You re confusing me.  ;-)  My scenario executes one stored SPARQL query (by default, unless Accept:","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6568 invoked from network); 3 Feb 2011 13:25:10 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 3 Feb 2011 13:25:10 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 3 Feb 2011 13:25:10 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id E24AF509EE;\n\tThu,  3 Feb 2011 08:25:08 -0500 (EST)\r\nDate: Thu, 3 Feb 2011 06:24:52 -0700\r\nTo: nathan@...\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20110203062452.3ffcff61.eric@...&gt;\r\nIn-Reply-To: &lt;4D49BC5C.7080501@...&gt;\r\nReferences: &lt;20110202074029.fac8219a.eric@...&gt;\n\t&lt;4D49BC5C.7080501@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Why SPARQL endpoints aren&#39;t even remotely\n RESTful.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nNathan wrote:\n&gt;\n&gt; Eric J. Bowman wrote:\n&gt; &gt; There is one way I can think of to use SPARQL queries in a REST app,\n&gt; &gt; which is to POST or PUT a representation as\n&gt; &gt; application/sparql-query to some URI.  Dereferencing that URI\n&gt; &gt; executes the query as a stored procedure, returning\n&gt; &gt; application/sparql-results+xml by default, but can also return the\n&gt; &gt; original query with Accept: application/sparql- query. \n&gt; \n&gt; Indeed :) one little question though, what happens when somebody GETs \n&gt; the URI?\n&gt;\n\n&quot;Dereferencing that URI executes the query...&quot;\n\n&gt;\n&gt; For example, given such a scenario I&#39;d quite like to send people back\n&gt; some HTML, with a form in it, that allowed them to run test SPARQL\n&gt; queries and get back the &quot;raw results&quot;, say by putting the query in a\n&gt; form element and submitting the form. Sound feasible / RESTful? if\n&gt; so, POST/PUT or GET?\n&gt; \n\nYou&#39;re confusing me.  ;-)  My scenario executes one stored SPARQL query\n(by default, unless Accept: application/sparql-query) at a fixed URI.\nPOST or PUT can create that URI (depending on whether the user-agent or\nthe origin server assigns the URI), by uploading the query as a file.\nPUT may be used to replace the query, i.e. edit the file.  Note that\nPUT will only Allow: application/sparql-query -- you can&#39;t edit the\nresult, PUT that back, and expect the server to reformulate the query.\n\nStandard REST design pattern, I&#39;ve used it with PHP, XQuery, SSJS, JSP,\nASP... not always self-descriptively, as PHP etc. lack media types, and\nalways access-restricted for methods other than GET/HEAD/OPTIONS.\n\nYou&#39;re saying you want GET to return HTML results with a form?  Fine,\nadd text/html to the conneg mix, return the results with a form in\nthat representation, pre-fill the textarea with the current raw SPARQL\nquery, and instruct the user-agent to PUT application/sparql-query\nto the URI upon submission.\n\n&gt;\n&gt; ps: a little confused after reading the above &quot;one way I can think og \n&gt; to use SPARQL queries in a REST app, which is to POST or..&quot; and the \n&gt; mail you sent immediately before it saying &quot;Please don&#39;t confuse a \n&gt; post about how POST isn&#39;t unRESTful, as saying that it&#39;s ever even \n&gt; remotely OK to use POST as a retrieval method.&quot; - I&#39;m probably\n&gt; missing something obvious here, or perhaps a subtlety in\n&gt; interpetation.\n&gt; \n\nYes, there&#39;s a nuance here that will lead some folks to believe that my\nexample is no different than Mike&#39;s and resembles the SPARQL endpoint\nI&#39;m griping about, and conclude that I&#39;ve contradicted myself when I\nhaven&#39;t.  I&#39;m not using POST to execute queries, SPARQL syntax hasn&#39;t\nleaked out into my URIs, and my API is *somewhat* self-documenting, in\nthat the query isn&#39;t entirely opaque when presented with the results it\ngenerates.\n\n-Eric\n\n"}}