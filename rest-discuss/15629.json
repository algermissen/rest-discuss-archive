{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"61lC6RSjYfdl_uZiAeaVpAjmpI7RGIwzLUq3LOo1ufb06KstE2X0Az3hT_RnrVcDZZWyog-L2az4JE0pWOVGjOSm730IbDBGaXF338IL2A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1276126239","msgId":15629,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjA5MTczMDM5LmU5MjgwZDg0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGluVjh5eE4tUjRBRldBdk5hTHFwZWItdWY3Y08wV0ZtWDdEcGFSWEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAxMTA1MTUxLmU2M2Y4MjJhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlsSFN0QzVjaVNDeTB4OWRRZkVCbHR5blZXeWRHS25WZW42WmJtSkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAxMTc1NjQxLmY2YWNhYTI4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluZHcybDdLQ3FKZHpYdjlPMi1HRjFLX2pjN3dRY2pwa25oSGZuaEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAzMDUxNTA5LmI1MTliOGViLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlra3ZmaWhhZDFsVXFTZE5pLThaM2p6aVctMGIzSFEyU0FzaldsUUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjAzMTQxMjA4LmUwMjY5ODdkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrTURTRG9ab3hXTzZVTHM2ZURxN0FycHZhZjFMa2RfLUVaVEYyV0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDc0OTU2LmM5ZTNjMWM1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltWFdjaHU5dHY0dmFFeWlGQjh6TFptME0yRjRpNlJjcU55QUZzU0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MDkzOTEzLmVmNmNlYzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGlrSHZsZmJ2dkxQUUc2UmM5WjZMcjE5aFNheS1zT3VYSGJ5cXk0Q0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA0MTQwOTE2LjNmZmQ3NTNjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluU0plTndlckZZMTl4V1VYRFNDY0N5cG5Tdmt6WTc2LUdnVGFlNkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA4MTAwMzIzLmFhNmVmOTllLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVjh5eE4tUjRBRldBdk5hTHFwZWItdWY3Y08wV0ZtWDdEcGFSWEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15612,"nextInTopic":15630,"prevInTime":15628,"nextInTime":15630,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"... This is just explaining how to deal with the author s preferred version problem.  If I have a resource, /preferred , which identifies one version of","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 82652 invoked from network); 9 Jun 2010 23:31:12 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m3.grp.sp2.yahoo.com with QMQP; 9 Jun 2010 23:31:12 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 9 Jun 2010 23:31:12 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id A3165509DE;\n\tWed,  9 Jun 2010 19:31:01 -0400 (EDT)\r\nDate: Wed, 9 Jun 2010 17:30:39 -0600\r\nTo: Tim Williams &lt;williamstw@...&gt;\r\nCc: Mike Kelly &lt;mike@...&gt;, Sebastien Lambla &lt;seb@...&gt;,\n mike amundsen &lt;mamund@...&gt;, Glenn Block &lt;glenn.block@...&gt;,\n &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100609173039.e9280d84.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTinV8yxN-R4AFWAvNaLqpeb-uf7cO0WFmX7DpaRX@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;20100601105151.e63f822a.eric@...&gt;\n\t&lt;AANLkTilHStC5ciSCy0x9dQfEBltynVWydGKnVen6ZbmJ@...&gt;\n\t&lt;20100601175641.f6acaa28.eric@...&gt;\n\t&lt;AANLkTindw2l7KCqJdzXv9O2-GF1K_jc7wQcjpknhHfnh@...&gt;\n\t&lt;20100603051509.b519b8eb.eric@...&gt;\n\t&lt;AANLkTikkvfihad1lUqSdNi-8Z3jziW-0b3HQ2SAsjWlQ@...&gt;\n\t&lt;20100603141208.e026987d.eric@...&gt;\n\t&lt;AANLkTikMDSDoZoxWO6ULs6eDq7Arpvaf1Lkd_-EZTF2W@...&gt;\n\t&lt;20100604074956.c9e3c1c5.eric@...&gt;\n\t&lt;AANLkTimXWchu9tv4vaEyiFB8zLZm0M2F4i6RcqNyAFsS@...&gt;\n\t&lt;20100604093913.ef6cec19.eric@...&gt;\n\t&lt;AANLkTikHvlfbvvLPQG6Rc9Z6Lr19hSay-sOuXHbyqy4C@...&gt;\n\t&lt;20100604140916.3ffd753c.eric@...&gt;\n\t&lt;AANLkTinSJeNwerFY19xWUXDSCcCypnSvkzY76-GgTae6@...&gt;\n\t&lt;20100608100323.aa6ef99e.eric@...&gt;\n\t&lt;AANLkTinV8yxN-R4AFWAvNaLqpeb-uf7cO0WFmX7DpaRX@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nTim Williams wrote:\n&gt; \n&gt; Right, I should have pasted in the introductory se=\r\nntence from which my\n&gt; position stemmed:\n&gt;    &quot;The Content-Location entity-=\r\nheader field MAY be used to supply\n&gt; the resource location for the entity e=\r\nnclosed in the message when\n&gt; that entity is accessible\n&gt;     from a locati=\r\non separate from the requested resource&#39;s URI.&quot;\n&gt; \n&gt; It&#39;s &quot;...when the enti=\r\nty is accessible from a location separate...&quot; -\n&gt; that&#39;s what I meant when =\r\nI said, if the situation exists.  I&#39;d think\n&gt; the situation where a represe=\r\nntation is accessible separately, isn&#39;t\n&gt; ideal.\n&gt; \n\nThis is just explainin=\r\ng how to deal with the &quot;author&#39;s preferred\nversion&quot; problem.  If I have a r=\r\nesource, /preferred , which identifies\none version of /article , then I nee=\r\nd some way to express the relation.\nI MAY use &#39;Content-Location: /article&#39; =\r\nin response to a request for\n/preferred to express this relation.  But, thi=\r\ns has nothing to do with\nconneg.\n\nIn conneg, the SHOULD supercedes the MAY,=\r\n without changing the\nsemantics of the header.  What RFC2616 says, is that =\r\nyou MAY use\nContent-Location &quot;when the entity is [also] accessible from a [=\r\nseparate]\nlocation,&quot; but you &quot;SHOULD provide a Content-Location for the var=\r\niant\ncorresponding to the response entity.&quot;  There&#39;s no conflict there.\n\n&gt;\n=\r\n&gt; &gt;&gt; I don&#39;t\n&gt; &gt;&gt; interpret it as asserting whether or not the existence of=\r\n the\n&gt; &gt;&gt; situation itself is good or not.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; We&#39;re talking about=\r\n a situation where the server is responding with\n&gt; &gt; a variant of a negotia=\r\nted resource. =A0Therefore, the SHOULD directly\n&gt; &gt; applies to the situatio=\r\nn, without passing any judgments on it.\n&gt; \n&gt; My premise is that representat=\r\nions shouldn&#39;t be addressable\n&gt; separately, so you&#39;d never arrive at that c=\r\nondition - resources should\n&gt; be addressable not representations.\n&gt; \n\nFirst=\r\n, resources are identifiable, I don&#39;t know what addressable means\nbecause i=\r\nt implies dereferencing.  Your premise is correct, where the\nvariants are b=\r\nyte-for-byte identical at parse time, as is the case with\ncompression.\n\nHow=\r\never, we&#39;re talking about negotiating for variants of some abstract\nconcept=\r\n as variant media types, which are not byte-for-byte identical at\nparse tim=\r\ne.  When taken individually, these variants describe different\nabstract con=\r\ncepts from that of the negotiated resource...\n\nIf you just need a /resource=\r\n then link to /resource .  However, if the\nabstract concept you&#39;re after is=\r\n &quot;/resource formatted as PDF&quot; rather\nthan &quot;server&#39;s optimal variant of /res=\r\nource&quot; then you have identified\nanother resource.  All that&#39;s left to meet =\r\nthe Identification of\nResources constraint, is to assign a URI to that othe=\r\nr resource you&#39;ve\nidentified.  Identify what your resources *are*, then giv=\r\ne them URIs.\n\nIf you never care about &quot;/resource formatted as PDF&quot; then you=\r\n don&#39;t\nneed to assign it a URI -- that&#39;s only a SHOULD.  If you do care abo=\r\nut\n&quot;/resource formatted as PDF&quot; for the purposes of caching or directly\nder=\r\neferencing, then obviously, it needs a URI, since &quot;/resource\nformatted as P=\r\nDF&quot; and &quot;server&#39;s optimal variant of /resource (for the\nrequesting user age=\r\nnt)&quot; are different abstractions, and therefore\ndifferent resources.\n\n&gt; &gt;&gt;\n&gt;=\r\n &gt;&gt; Put another way, if we had a weather forecast:\n&gt; &gt;&gt;\n&gt; &gt;&gt; http://weather=\r\n.example.com/zip/22180\n&gt; &gt;&gt;\n&gt; &gt;&gt; You seem to suggest it&#39;s desireable to hav=\r\ne:\n&gt; &gt;&gt;\n&gt; &gt;&gt; http://weather.example.com/zip/22180.txt\n&gt; &gt;&gt; http://weather.e=\r\nxample.com/zip/22180.html\n&gt; &gt;&gt; http://weather.example.com/zip/22180.pdf\n&gt; &gt;=\r\n&gt;\n&gt; &gt;&gt; and I think the former as desirable.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Yes, I agree, the =\r\nformer is desirable for the negotiated resource.\n&gt; &gt; =A0The latter are also=\r\n desirable as they meet the conditions of the\n&gt; &gt; SHOULD.\n&gt; \n&gt; Are you ascr=\r\nibing special meaning to the term &quot;*negotiated* resource&quot;\n&gt; vs. &quot;resource&quot;?=\r\n\n&gt;\n\nIs it so hard to follow?  That a &quot;negotiated resource&quot; is for URIs whic=\r\nh\nuse conneg, vs. &quot;resource&quot; for URIs which don&#39;t?  There are caching and\no=\r\nther considerations which apply only on resources which use conneg, so\nit b=\r\nehooves us to make such a distinction when we&#39;re discussing conneg.\n\n&gt;\n&gt; If=\r\n the former is the resource and it&#39;s representation\n&gt; negotiated through se=\r\nrver-driven negotiation, then you&#39;d never see the\n&gt; later,\n&gt;\n\nBut you alway=\r\ns &quot;see&quot; one of the latter as the returned entity-body.\nThese variants aren&#39;=\r\nt byte-for-byte the same after parsing, like with\ncompression.  So there&#39;s =\r\nobviously a need to somehow identify the\nvariants such that a cache can dis=\r\ntinguish between them, otherwise a\ncache has no way of telling that the res=\r\nponse for one Opera user is the\nsame as the response for any other Opera us=\r\ner (assuming we&#39;re sniffing\nUser-Agent and sending Vary: User-Agent).\n\nAs I=\r\n&#39;ve said, fancy caches have fancy metrics to overcome this, for\ncases where=\r\n the server isn&#39;t following the SHOULD.  But everything else\nassumes that y=\r\nou aren&#39;t violating RFC2616.  Wouldn&#39;t it be neat if we\ncould stipulate to =\r\nthe cache that anytime an Opera browser requests\n/22180 it should respond w=\r\nith /22180.html?\n\nOf course, we *can* do *exactly* that, by simply minting =\r\n/22180.html .\nWithout minting /22180.html, how can we accomplish this for /=\r\n22180\naside from relying on nonstandard caches to sniff out that the same\nH=\r\nTML code is being returned to any Opera user agent in the presence of\nVary:=\r\n User-Agent?\n\n&gt;\n&gt; more specifically, the latter would never be separately\n&gt;=\r\n addressable, and the SHOULD statement would never apply?\n&gt; \n\nIf the only r=\r\neason variants aren&#39;t separately addressable is because you\nstubbornly refu=\r\nse to mint those URIs, it hardly negates the SHOULD.\nWhen you deliberately =\r\nrefuse to follow the SHOULD, then point to your\nrefusal to follow it as the=\r\n reason the SHOULD doesn&#39;t apply, my eyeballs\nstart a-rollin&#39;.  That is _no=\r\nt_ how standards are followed.\n\n&gt; \n&gt; Well, I thought you&#39;d give me some cre=\r\ndit:)  Of course, I have, which\n&gt; is why I&#39;m having the question.  I haven&#39;=\r\nt seen in the dissertation\n&gt; either where he asserts that each representati=\r\non should have its own\n&gt; URI.\n&gt;\n\nIt&#39;s true, the dissertation doesn&#39;t come o=\r\nut and say &quot;assign URIs to\nvariants&quot; because REST isn&#39;t about the implement=\r\nation specifics of\nHTTP.  What REST does clearly define is the Identificati=\r\non of Resources\nconstraint, which we pragmatically apply to HTTP by assigni=\r\nng URIs to\nvariants.\n\nThe consequences of failing to assign URIs to variant=\r\ns are exactly the\nconsequences that REST predicts for failing to apply the =\r\nIdentification\nof Resources constraint, whereas the benefits of assigning U=\r\nRIs to\nvariants are exactly the benefits that REST predicts for successfull=\r\ny\napplying said constraint.\n\nSo an analysis of caching in an HTTP conneg sy=\r\nstem where variants aren&#39;t\nassigned URIs (excepting compression) against an=\r\n HTTP conneg system\nwhere the variants are resources in their own rights, w=\r\nill serve to\nprove that REST is correct, and has pragmatic benefits for rea=\r\nl-world\nsystems, since only one of those systems will cache properly over t=\r\nhe\nWeb.\n\nThe explanation for *why* that is, is called REST.  When a system\n=\r\ndoesn&#39;t work as REST anticipates, we go looking for mismatches.  In\nthis ca=\r\nse, the inferior cache performance of the system that doesn&#39;t\nassign URIs t=\r\no variants, is the direct result of failing to identify\nits resources, i.e.=\r\n a REST mismatch.\n\n&gt;\n&gt; I understand this to mean the opposite:\n&gt; \n&gt;    &quot;Fin=\r\nally, it allows an author to reference the concept rather than\n&gt; some singu=\r\nlar\n&gt;     representation of that concept, thus removing the need to change\n=\r\n&gt; all existing links\n&gt;     whenever the representation changes (assuming th=\r\ne author used the\n&gt; right identifier).&quot;\n&gt; \n&gt; That&#39;s where he talked about t=\r\nhe benefit of the resource abstraction.\n&gt;\n\nThat&#39;s right, you are getting co=\r\nnfused that the &quot;author&#39;s preferred\nversion&quot; has something to do with conne=\r\ng.  Perhaps that&#39;s my fault, for\npointing out that a bunch of variants with=\r\n different URIs is no\ndifferent from a single representation served at diff=\r\nerent URIs, i.e.\n&quot;author&#39;s preferred version&quot;.  I do this because folks kee=\r\np insisting\nthat for one representation to have multiple URIs identifying i=\r\nt, is\nsomehow a REST violation in and of itself.\n\nIOW, if we can&#39;t assign U=\r\nRIs to variants because then each variant has\nmultiple URIs, then why does =\r\nREST advocate doing exactly this in the\ndiscussion of &quot;author&#39;s preferred v=\r\nersion?&quot;\n\n&gt;\n&gt; By suggesting that every representation should be addressable=\r\n, it\n&gt; seems you break that and I haven&#39;t found where Roy&#39;s said otherwise.=\r\n\n&gt; \n\nPragmatically, I&#39;m saying &quot;assign URIs to variants.&quot;  Theoretically,\nI=\r\n&#39;m saying &quot;apply the Identification of Resources constraint.&quot;  Not\nassignin=\r\ng URIs to variants, then attempting to directly access those\nvariants throu=\r\ngh some @type mechanism, is a clear and unequivocal REST\nviolation, because=\r\n you&#39;ve failed to identify those variants as separate\nresources (theoretica=\r\nlly) by assigning them URIs (pragmatically).\n\n&gt;\n&gt; &gt;&gt; Unless I&#39;ve misinterpr=\r\neted Roy&#39;s thoughts,\n&gt; &gt;&gt; I gather he supports the former:\n&gt; &gt;&gt;\n&gt; &gt;&gt; =A0&quot;If=\r\n the resource is a concept independent of\n&gt; &gt;&gt; =A0 representation format, t=\r\nhen its URI must not have any aspect\n&gt; &gt;&gt; =A0 that is specific to the repre=\r\nsentation format.&quot;[3]\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Roy is saying, don&#39;t negotiate for a URI=\r\n ending in *.txt, basically.\n&gt; &gt; This doesn&#39;t really have anything to do wi=\r\nth the topic at hand.\n&gt; \n&gt; Then I&#39;m really confused, because I think it add=\r\nresses the topic\n&gt; squarely.\n&gt;\n\nNo.  Discussion about cool URIs, like advoc=\r\nating for not using filename\nextensions, is not germane to discussion of wh=\r\nat resources need to be\nidentified and assigned URIs.  To re-state Roy, if =\r\nyou have a resource\nthat&#39;s a &quot;dog&quot; then it has nothing to do with HTML, so =\r\nyou must not\nassign &quot;dog.html&quot; as its URI.\n\nDon&#39;t try to apply this to anot=\r\nher context.  If /dog happens to have a \n/dog.html variant, it&#39;s irrelevant=\r\n to what Roy said if the user only\never sees /dog in the location bar, or a=\r\ns links to /dog .  If I\nspecifically need the HTML representation of the /d=\r\nog resource, then I\nwant to link to a different abstraction/resource -- i.e=\r\n. I&#39;d want &quot;/dog\nas HTML&quot; not &quot;/dog in whatever variant conneg decides,&quot; in=\r\n which case\nthe .html doesn&#39;t go against what Roy said, because HTML is par=\r\nt of the\nabstraction, so it&#39;s OK for &quot;the resource semantics [to] include t=\r\nhe\nformat.&quot;\n\n&gt;\n&gt; I read Roy&#39;s\n&gt; mail above to be further clarification that=\r\n you should only link to a\n&gt; specific representation when &quot;the resource sem=\r\nantics include the\n&gt; format.&quot;  To be honest, I have no clue what that quote=\r\n means:)\n&gt; \n\nI hope that clarifies it for you?\n\n&gt;\n&gt; I&#39;ve said that &lt;a href=\r\n=3D&quot;/weather/22180&quot;&gt; is ideal.  And you\n&gt; say that the best practice is to =\r\ngive each variant its own URI, e.g.\n&gt; &lt;a href=3D&quot;/weather/22180.html&quot;&gt;.  Th=\r\nat seems to be the situation that\n&gt; Jan brought up and what Roy was advisin=\r\ng on there?\n&gt; \n\nNo.  Jan and Roy are talking about what URIs you link to, a=\r\nnd see in\nthe address bar.  Since /22180.html is never, ever seen by the us=\r\ner\nthen its existence simply doesn&#39;t matter when the discussion context is\n=\r\nwhat the end-user sees, i.e. /22180 .\n\nBesides, if I have a bunch of varian=\r\nts for /22180 and I call the HTML\nvariant /22180.html, I&#39;m not going agains=\r\nt your Roy quote.  The fact\nthat it&#39;s HTML is exactly what we&#39;re trying to =\r\nidentify -- /22180\nidentifies a resource whose abstract concept has nothing=\r\n to do with \nHTML, while /22180.html identifies a resource whose abstract c=\r\noncept is\nthat it *is* HTML (or rather, something presented as HTML).\n\nI ke=\r\nep coming back to this, don&#39;t I?  I don&#39;t care if /22180.html is a\nvariant =\r\nof /22180, they&#39;re still not the same resource.  They can&#39;t be,\nthey have d=\r\nifferent abstractions.  Each abstraction on your system is a\nresource on yo=\r\nur system, Identification of Resources means giving those\nresources URIs.  =\r\nYou must accept  that /22180 and /22180.html can be\ndifferent resources, re=\r\ngardless of the one being a variant of the\nother.\n\nThey must be different r=\r\nesources -- they have different URIs.  ;-)\n\n&gt;\n&gt; &gt;&gt; Personally, I see the co=\r\nupling introduced with a @type attribute as\n&gt; &gt;&gt; much less offensive than t=\r\nhe coupling (resource&lt;-&gt;representation)\n&gt; &gt;&gt; that occurs by having the vari=\r\nants in their own URIs.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; What coupling is that? =A0Allowing the=\r\n representation to be a\n&gt; &gt; resource in its own right by assigning it a URI=\r\n, is decoupling.\n&gt; &gt; =A0Only being able to access that representation direc=\r\ntly through\n&gt; &gt; @type is the coupling that assigning URIs to variants avoid=\r\ns...\n&gt; \n&gt; I&#39;m trying, just don&#39;t get it.  The dissertation goes to great le=\r\nngths\n&gt; to convince us the importance of the distinction between Resources =\r\nand\n&gt; their Representations, and says URIs address Resources.\n&gt;\n\nWell, it s=\r\nays URIs *identify* resources.  Perhaps you mean the same\nthing by &quot;address=\r\ning,&quot; but please use the terms of REST to discuss REST.\nWhat you aren&#39;t und=\r\nerstanding is that /22180.html can be, and indeed is,\na resource in its own=\r\n right, separate from /22180 .  Just like a\ndocument about a concept &quot;foo&quot; =\r\ncan have different abstractions reflected\nin different URIs for &quot;current ve=\r\nrsion of foo&quot; and &quot;author&#39;s preferred\nversion of foo&quot;.  In this case, it&#39;s =\r\n&quot;negotiated variant of foo&quot; vs.\n&quot;specific representation of foo&quot; but the co=\r\nnstraint, called\nIdentification of Resources, is the same.\n\n&gt; \n&gt; A &quot;variant=\r\n&quot; is a specific representation and what I&#39;m missing is where\n&gt; the disserta=\r\ntion says that representations themselves should be\n&gt; resources - it seems =\r\nto me that breaks the whole notion of\n&gt; &quot;manipulating resources through the=\r\nir representation&quot;?\n&gt;\n\nI think you&#39;re making a common mistake, here.  Nowhe=\r\nre does REST state\nthat manipulating /foo must occur by calling some method=\r\n of /foo .\nThis way lies IDLs, not hypertext APIs... all REST requires is t=\r\nhat\nhypertext is used to instruct a user agent how to manipulate /foo .  It=\r\n\ndoes not matter that a representation dereferenced at /foo is updated by\na=\r\n PUT to /bar of some other media type.  It only matters that a user\nagent i=\r\ns capable of following these instructions it received from /foo .\n\nSending =\r\na different media type to /bar than what was dereferenced at \n/foo in order=\r\n to update /foo is not a REST violation, it&#39;s the hypertext\nconstraint in a=\r\nction.  The user agent receives a representation which\ninstructs it how to =\r\nbuild a representation to PUT or POST in order to\narrive at the user&#39;s next=\r\n desired application state.  There is simply no\nrestriction on what media t=\r\nypes or URIs may be used to achieve this,\nonly that it be expressed using s=\r\ntandard media types, methods and link\nrelations.\n\n&gt;\n&gt; Can you point\n&gt; me to=\r\n the part that says, &quot;you must first identify those variants as\n&gt; resources=\r\n&quot;?\n&gt; \n\nNo, I can only refer you to the Identification of Resources constrai=\r\nnt,\nas explained above.  REST doesn&#39;t care about your implementation\ndetail=\r\ns, only that its constraints are met.  Heck, I&#39;m not even saying\nyou *need*=\r\n to assign URIs to variants, I&#39;m saying you need to do this to\nachieve spec=\r\nific results.  If you&#39;re just using conneg for compression,\nthen you certai=\r\nnly don&#39;t need, nor have I advocated, URIs for variants.\n\nIf you don&#39;t care=\r\n about caching or directly manipulating the variants,\nthen they don&#39;t need =\r\nURIs, so this would be a silly thing for REST to\nrequire -- just like with =\r\ncompression.  If you want a real-world\nHTTP-driven REST system with conneg,=\r\n but you also want those variants\nto be accessed directly (like by borking =\r\n@type) and cache properly,\n*then* you need to assign URIs to your variants =\r\n(not bork @type).\n\nThe entire argument against assigning URIs to variants i=\r\ns based on the\nnotion that the variants can&#39;t possibly be resources, or tha=\r\nt it&#39;s a\nmistake to assign multiple URIs to the same representation.  Neith=\r\ner is\ntrue.  You can&#39;t learn REST without first accepting that glass is a\nl=\r\niquid, then setting about figuring out why that is.\n\nI would&#39;ve been wastin=\r\ng my Chemistry professor&#39;s and the class&#39;s time\nby first trying to prove to=\r\n them that glass is a solid, instead of\nlearning from them *why* it&#39;s actua=\r\nlly a liquid.  Which is not to state\nthat I couldn&#39;t have made a pretty goo=\r\nd case for the solidity of glass,\nwhich &quot;feels&quot; right and certainly sounds =\r\ncorrect to a non-major, but\nwould be useless to a discussion of the Chemist=\r\nry or Physics of glass,\nwhere its liquidity must be accepted as fact even i=\r\nf it defies your\nquaint notions of what&#39;s a solid and what&#39;s a liquid.\n\nI&#39;m=\r\n beginning to understand that the solution to this thread, is for\nsome folk=\r\ns to get over their quaint notions of &quot;resource&quot; and use the\nsame definitio=\r\nn as everyone else.  The problem y&#39;all are seeing with\nassigning URIs to va=\r\nriants, goes away once we get past the insistence\nthat /22180 and /22180.ht=\r\nml must be the same resource, because the one\nis a variant of the other.\n\nI=\r\nf dereferencing /22180 returns /22180.html as Content-Location, the\nresourc=\r\ne in question is still /22180 and /22180.html is merely a\nlabel.  Yeah, it =\r\nidentifies some other resource, but that doesn&#39;t have\nanything to do with t=\r\nhe fact that /22180 is the identifier of the\nresource you dereferenced.  Al=\r\nl you&#39;re doing is assigning another URI\nto a representation, but as with &quot;a=\r\nuthor&#39;s preferred version&quot; you&#39;re\nnot doing anything wrong, just identifyin=\r\ng a new abstraction -- there&#39;s\nno limit to the number of URIs which point t=\r\no a given representation.\n\n-Eric\n\n"}}