{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":436347320,"authorName":"Erlend Hamnaberg","from":"Erlend Hamnaberg &lt;ngarthl@...&gt;","profile":"ngarthl","replyTo":"SENDER","senderId":"v9slSTQctkCZlX3PfWxs-jIonMkm7mxrwNsqNX9QRjWyzKMhMLxfu07hO1zNrBP4cveMH9OV3ebKfCsM1V0sNY_WWzE7yB5nbGdL","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Feedback on implementing client side HTTP caching","postDate":"1296027921","msgId":17228,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluaUJQeXFDcDcxblBSTkJRZnVVMERFc3VFZV9DdGRNZGJPdTh5V0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PERBNDBGNjMwLTI5MjgtNDZFMC04MkU2LUVCODg0NENGREExREBzdWJidS5vcmc+","referencesHeader":"PEFBTkxrVGltPVhDcFVOeXlrZnJEV2RSdlpLSmFnVTBndllkTXpLTGM5Q2tKVEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMS1yRzZLQjdxc2pWZUZEbnlwdWdUdmQzZWZTQjk9OGJLeFZtVUBtYWlsLmdtYWlsLmNvbT4JPEE2NDYzMDcwLTMzNEItNEYwRi04QTVBLTg4MDZBRkZCMkYwMUBzdWJidS5vcmc+CTxBQU5Ma1RpbnRha18reXRfdXAzWTgxb01rRjFxaUZ4YWIxRVdmSlQxc3NSdjFAbWFpbC5nbWFpbC5jb20+CTxEQTQwRjYzMC0yOTI4LTQ2RTAtODJFNi1FQjg4NDRDRkRBMURAc3ViYnUub3JnPg=="},"prevInTopic":17227,"nextInTopic":17229,"prevInTime":17227,"nextInTime":17229,"topicId":17219,"numMessagesInTopic":22,"msgSnippet":"Unsurprisingly I respectfully disagree that this is the wrong way. A client cache becomes just another intermediary along the way in the uniform interface. Why","rawEmail":"Return-Path: &lt;ngarthl@...&gt;\r\nX-Sender: ngarthl@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 56659 invoked from network); 26 Jan 2011 07:45:24 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.sp2.yahoo.com with QMQP; 26 Jan 2011 07:45:24 -0000\r\nX-Received: from unknown (HELO mail-qy0-f170.google.com) (209.85.216.170)\n  by mta3.grp.sp2.yahoo.com with SMTP; 26 Jan 2011 07:45:23 -0000\r\nX-Received: by qyk10 with SMTP id 10so4796335qyk.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 25 Jan 2011 23:45:23 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.235.4 with SMTP id ke4mr142350qcb.63.1296027921489; Tue,\n 25 Jan 2011 23:45:21 -0800 (PST)\r\nX-Received: by 10.229.12.19 with HTTP; Tue, 25 Jan 2011 23:45:21 -0800 (PST)\r\nIn-Reply-To: &lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nReferences: &lt;AANLkTim=XCpUNyykfrDWdRvZKJagU0gvYdMzKLc9CkJT@...&gt;\n\t&lt;AANLkTik1-rG6KB7qsjVeFDnypugTvd3efSB9=8bKxVmU@...&gt;\n\t&lt;A6463070-334B-4F0F-8A5A-8806AFFB2F01@...&gt;\n\t&lt;AANLkTintak_+yt_up3Y81oMkF1qiFxab1EWfJT1ssRv1@...&gt;\n\t&lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nDate: Wed, 26 Jan 2011 08:45:21 +0100\r\nMessage-ID: &lt;AANLkTiniBPyqCp71nPRNBQfuU0DEsuEe_CtdMdbOu8yW@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: David Stanek &lt;dstanek@...&gt;, Sidu Ponnappa &lt;lorddaemon@...&gt;, \n\trest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016e6465148e11ef4049abb03c0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Erlend Hamnaberg &lt;ngarthl@...&gt;\r\nSubject: Re: [rest-discuss] Feedback on implementing client side HTTP caching\r\nX-Yahoo-Group-Post: member; u=436347320; y=V18rpyv_cVzMuM-DNmXONgMrYPzSfNDhhqG8MkhA6Wmgew\r\nX-Yahoo-Profile: ngarthl\r\n\r\n\r\n--0016e6465148e11ef4049abb03c0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nUnsurprisingly I respectfully disagree that this is the wrong way.\n\nA client cache becomes just another intermediary along the way in the\nuniform interface.\nWhy should a non-trivial REST application be treated differently than a\nbrowser?\n\nIn an application that serves some hundred or more requests per minute, a\nbrowser/client cache shows significant less network traffic.\nIt assumes of course that the client cache works the same as any other\nintermediary, which httpcache4j&#39;s case does.\n\n--\nErlend\n\nOn Wed, Jan 26, 2011 at 8:01 AM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt; Sure, a browser is another example. There is nothing to forbid a client\n&gt; from doing its own caching, but in general, it is better to delegate this to\n&gt; a proxy cache..\n&gt;\n&gt; On Jan 25, 2011, at 6:03 PM, David Stanek wrote:\n&gt;\n&gt; &gt; On Tue, Jan 25, 2011 at 8:56 PM, Subbu Allamaraju &lt;subbu@...&gt;\n&gt; wrote:\n&gt; &gt;\n&gt; &gt; httpcache4j illustrates the wrong way to do HTTP caching. Clients should\n&gt; not have to say things like\n&gt; &gt;\n&gt; &gt; HTTPCache cache = new HTTPCache(\n&gt; &gt; new MemoryCacheStorage(),\n&gt; &gt; HTTPClientResponseResolver.createMultithreadedInstance()\n&gt; &gt; );\n&gt; &gt; response = cache.doCachedRequest(request);\n&gt; &gt;\n&gt; &gt; in their code. They would make regular HTTP requests (including\n&gt; appropriate headers), and a caching proxy can provide a cached response if\n&gt; available or forward the request to upstream servers if no cached response\n&gt; is found. In other words, the client would simply do\n&gt; &gt;\n&gt; &gt; response = request.doGet(); // pseudo code\n&gt; &gt;\n&gt; &gt; The point of the uniform interface is to let some intermediary along the\n&gt; network do the job.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Why not cache on the client side? In mobile applications where the\n&gt; network calls are expensive it makes sense to cache locally.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --\n&gt; &gt; David\n&gt; &gt; blog: http://www.traceback.org\n&gt; &gt; twitter: http://twitter.com/dstanek\n&gt;\n&gt;\n\r\n--0016e6465148e11ef4049abb03c0\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nUnsurprisingly=A0I respectfully disagree that this is the wrong way.&lt;div&gt;&lt;b=\r\nr&gt;A client cache becomes just another intermediary along the way in the uni=\r\nform interface.&lt;/div&gt;&lt;div&gt;Why should a non-trivial REST application be trea=\r\nted differently than a browser?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In an application=\r\n that serves some hundred or more requests per minute, a browser/client cac=\r\nhe shows significant less network traffic.&lt;/div&gt;&lt;div&gt;It assumes of course t=\r\nhat the client cache works the same as any other intermediary, which httpca=\r\nche4j&#39;s case does.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;--&lt;/div&gt;&lt;div&gt;Erlend&lt;/div&gt;&lt;=\r\ndiv&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Jan 26, 2011 at 8:01 AM, Subbu A=\r\nllamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@su=\r\nbbu.org&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;Sure, a=\r\n browser is another example. There is nothing to forbid a client from doing=\r\n its own caching, but in general, it is better to delegate this to a proxy =\r\ncache..&lt;br&gt;\n\n&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\nOn Jan 25, 2011, at 6:0=\r\n3 PM, David Stanek wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; On Tue, Jan 25, 2011 at 8:56 PM, Su=\r\nbbu Allamaraju &lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@...&lt;/a&gt;&g=\r\nt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; httpcache4j illustrates the wrong way to do HTT=\r\nP caching. Clients should not have to say things like&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; HTT=\r\nPCache cache =3D new HTTPCache(&lt;br&gt;\n&gt; new MemoryCacheStorage(),&lt;br&gt;\n&gt;=\r\n HTTPClientResponseResolver.createMultithreadedInstance()&lt;br&gt;\n&gt; );&lt;br&gt;\n&=\r\ngt; response =3D cache.doCachedRequest(request);&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; in their=\r\n code. They would make regular HTTP requests (including appropriate headers=\r\n), and a caching proxy can provide a cached response if available or forwar=\r\nd the request to upstream servers if no cached response is found. In other =\r\nwords, the client would simply do&lt;br&gt;\n\n&gt;&lt;br&gt;\n&gt; response =3D request.d=\r\noGet(); // pseudo code&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The point of the uniform interface=\r\n is to let some intermediary along the network do the job.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt=\r\n;&lt;br&gt;\n&gt; Why not cache on the client side? In mobile applications where t=\r\nhe network calls are expensive it makes sense to cache locally.&lt;br&gt;\n&gt;&lt;br=\r\n&gt;\n&gt;&lt;br&gt;\n&gt; --&lt;br&gt;\n&gt; David&lt;br&gt;\n&gt; blog: &lt;a href=3D&quot;http://www.trac=\r\neback.org&quot; target=3D&quot;_blank&quot;&gt;http://www.traceback.org&lt;/a&gt;&lt;br&gt;\n&gt; twitter:=\r\n &lt;a href=3D&quot;http://twitter.com/dstanek&quot; target=3D&quot;_blank&quot;&gt;http://twitter.co=\r\nm/dstanek&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--0016e6465148e11ef4049abb03c0--\r\n\n"}}