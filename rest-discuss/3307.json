{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"S. Alexander Jacobson","from":"&quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"_CClLSncYqPyMp3ex0r49wVEamVxaf1mA-tlG8UyR85GdVQdDAP5fANsdaQoZaVLMeU5RXbwPARqQh-crmkPX1HA7I1Xyf-A3oxXqg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)","postDate":"1043264826","msgId":3307,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDMuMDMwMTIyMTQ0MjE0MC42MzItMTAwMDAwQGZhbmF0aWM+","inReplyToHeader":"PDAwNjAwMWMyYzI0YyQ3M2VkMjZhMCRhODAwYThjMEBTZWFpcnRoQTMxPg=="},"prevInTopic":3306,"nextInTopic":3310,"prevInTime":3306,"nextInTime":3308,"topicId":3300,"numMessagesInTopic":7,"msgSnippet":"I like your version of the format quite a lot. The only thing I d like to see in it that is missing is some way of finding out what content-types are available","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 22 Jan 2003 19:40:17 -0000\r\nReceived: (qmail 95208 invoked from network); 22 Jan 2003 19:40:17 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m4.grp.scd.yahoo.com with QMQP; 22 Jan 2003 19:40:17 -0000\r\nReceived: from unknown (HELO mail.vo.com) (208.45.6.99)\n  by mta2.grp.scd.yahoo.com with SMTP; 22 Jan 2003 19:40:16 -0000\r\nX-Envelope-From: alex@...\r\nX-Envelope-To: rest-discuss@yahoogroups.com\r\nReceived: from fanatic (66-108-201-235.nyc.rr.com [66.108.201.235])\n\tby mail.vo.com (8.12.1/8.12.1) with ESMTP id h0MJe2Je024885\n\t(version=TLSv1/SSLv3 cipher=EXP1024-RC4-SHA bits=56 verify=NO);\n\tWed, 22 Jan 2003 14:40:06 -0500\r\nDate: Wed, 22 Jan 2003 14:47:06 -0500 (Eastern Standard Time)\r\nTo: Seairth Jacobs &lt;seairth@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)\r\nIn-Reply-To: &lt;006001c2c24c$73ed26a0$a800a8c0@SeairthA31&gt;\r\nMessage-ID: &lt;Pine.WNT.4.43.0301221442140.632-100000@fanatic&gt;\r\nX-X-Sender: alex@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nX-eGroups-From: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\nI like your version of the format quite a lot.\nThe only thing I&#39;d like to see in it that is\nmissing is some way of finding out what\ncontent-types are available via\ncontent-negotiation.\n\nContent-Types: &lt;same format as accept&gt;\nEncodings: &lt;same format as accept-encodings&gt;\n\nRegarding the options header on GET, I like that\nas a concept, but the practice makes me nervous.\nI&#39;d like to avoid a proliferation of file formats\nfor this sort of thing.\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\nOn Wed, 22 Jan 2003, Seairth Jacobs wrote:\n\n&gt; Another feature that would be good would be to have a new HTTP response\n&gt; header called &quot;options&quot;, which would give a comma-separated list of\n&gt; content-types a given URI can return for an OPTIONS request.  For instance,\n&gt; suppose you did a GET on a URI.  You get back a response, including the\n&gt; following line:\n&gt;\n&gt; options: text/http-request-options, application/rdf+xml,\n&gt; application/myformat+xml, text/html\n&gt;\n&gt; (note: &quot;text/http-request-options&quot; is a bogus mime type for my format\n&gt; described below.)\n&gt;\n&gt; This would tell the client that it could issue an OPTIONS request with some\n&gt; or all of the types and the server would return the appropriate one\n&gt; (presumably the first one if it was from that list).\n&gt;\n&gt; This would also allow Google to do some neat stuff.  First it would GET the\n&gt; resource.  Once received, it would see that there were options available for\n&gt; that resource.  It could then turn around and selectively query with OPTIONS\n&gt; to find out all sorts of useful information (such as the details of a web\n&gt; service interface).  Without the header, Google wouldn&#39;t even bother, even\n&gt; if there were OPTIONS to query...\n&gt;\n&gt; Thoughts?\n&gt;\n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@...\n&gt;\n&gt;\n&gt; From: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\n&gt; &gt;\n&gt; &gt; verb request-header:value\n&gt; &gt;\n&gt; &gt; where:\n&gt; &gt;\n&gt; &gt; verb: GET, PUT, POST, etc., and &quot;*&quot; which means any verb (for which the\n&gt; &gt; following request-header is allowed)\n&gt; &gt; request-header: these are headers that it recognizes (e.g. content-type,\n&gt; &gt; user-agent, etc.)\n&gt; &gt; value: indicates an allowable value (following the same rules for the\n&gt; actual\n&gt; &gt; request-header).\n&gt; &gt;\n&gt; &gt; Any combination that is not explicitly defined means that the resource\n&gt; &gt; doesn&#39;t care about those headers.\n&gt; &gt;\n&gt; &gt; So, suppose you encountered a response like:\n&gt; &gt;\n&gt; &gt; PUT content-type:text/html\n&gt; &gt; * content-type: application/xml+rss\n&gt; &gt; GET user-agent:Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; In this case, this is saying that PUT only allows a content-type of\n&gt; &gt; text/html or application/xml+rss, while all other verbs (in this case\n&gt; POST)\n&gt; &gt; allow only application/xml+rss.  Also, the resource is only GETable by IE6\n&gt; &gt; (or a client that says it&#39;s IE6).  Note that no other combination is\n&gt; defined\n&gt; &gt; for user-agent, so it implies that any client can issue a POST, PUT, etc.\n&gt; &gt;\n&gt; &gt; It might even do to extend this format slightly to allow the server to\n&gt; &gt; explicitly indicate that it understands a given header name, thereby\n&gt; &gt; allowing new clients to query a server to see if the server can handle the\n&gt; &gt; added features of the client.  I&#39;m not sure how this format would be.\n&gt; Maybe\n&gt; &gt; just leave the value out of the above string.  Are there any existing\n&gt; &gt; headers where an empty string is a valid value?  If so, we could possibly\n&gt; &gt; leave the colon off.  For instance, suppose there was a new request header\n&gt; &gt; called &quot;my-feature&quot;.  The server could return:\n&gt; &gt;\n&gt; &gt; * my-feature:  (or without the colon)\n&gt; &gt;\n&gt; &gt; to indicate that it knows about this field and handles it according to\n&gt; &gt; whatever semantics it has.\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n\n\n"}}