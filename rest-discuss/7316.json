{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":148737865,"authorName":"Hugh Winkler","from":"&quot;Hugh Winkler&quot; &lt;hughw@...&gt;","profile":"hwinkler99","replyTo":"SENDER","senderId":"9bkw8XOg0uU_S2MSOP6vho_2mnG824rayxx8NsPLRE9d5Pk3pnOrZfMKMQbb_HOPIoz-itJs6X62xBCQLY1CcDsxXrskjNg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atompub missed opportunity","postDate":"1167527309","msgId":7316,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDkyNzQ0MWIzMDYxMjMwMTcwOGkyMGE5YWMyZW9mOTdiMGE5YjgwYzk0NmRkQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDExNjc1MTg3MjQuNDYzNy4xMi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","referencesHeader":"PDkyNzQ0MWIzMDYxMjI4MTI1N2w3ZTc4MjQyYnM5NTYyMjBiZTFjNTFmZTQ2QG1haWwuZ21haWwuY29tPgkgPDExNjc1MTg3MjQuNDYzNy4xMi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+"},"prevInTopic":7315,"nextInTopic":7317,"prevInTime":7315,"nextInTime":7317,"topicId":7295,"numMessagesInTopic":25,"msgSnippet":"... Ah, but it is a standard form for all servers -- not for my particular server app. And to know what kind of form to submit, you read a spec -- you did not","rawEmail":"Return-Path: &lt;hwinkler@...&gt;\r\nX-Sender: hwinkler@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 19438 invoked from network); 31 Dec 2006 01:08:29 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m36.grp.scd.yahoo.com with QMQP; 31 Dec 2006 01:08:29 -0000\r\nReceived: from unknown (HELO nf-out-0910.google.com) (64.233.182.190)\n  by mta7.grp.scd.yahoo.com with SMTP; 31 Dec 2006 01:08:29 -0000\r\nReceived: by nf-out-0910.google.com with SMTP id l36so4122985nfa\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 30 Dec 2006 17:08:29 -0800 (PST)\r\nReceived: by 10.82.162.14 with SMTP id k14mr883662bue.1167527309143;\n        Sat, 30 Dec 2006 17:08:29 -0800 (PST)\r\nReceived: by 10.82.116.19 with HTTP; Sat, 30 Dec 2006 17:08:29 -0800 (PST)\r\nMessage-ID: &lt;927441b30612301708i20a9ac2eof97b0a9b80c946dd@...&gt;\r\nDate: Sat, 30 Dec 2006 19:08:29 -0600\r\nTo: &quot;Benjamin Carlyle&quot; &lt;benjamincarlyle@...&gt;\r\nCc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;1167518724.4637.12.camel@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;927441b30612281257l7e78242bs956220be1c51fe46@...&gt;\n\t &lt;1167518724.4637.12.camel@...&gt;\r\nX-Google-Sender-Auth: f4041b891cc4c6b4\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nX-eGroups-From: &quot;Hugh Winkler&quot; &lt;hughw@...&gt;\r\nFrom: &quot;Hugh Winkler&quot; &lt;hughw@...&gt;\r\nSubject: Re: [rest-discuss] Atompub missed opportunity\r\nX-Yahoo-Group-Post: member; u=148737865; y=5UIbNO714W9-Eq9OBJ2i-WyJwp1tjZZsyPHnq7b-YiNZiqYI7A\r\nX-Yahoo-Profile: hwinkler99\r\n\r\nOn 12/30/06, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n&gt; On Thu, 2006-12-28 at 14:57 -0600, Hugh Winkler wrote:\n&gt; &gt; I think Atompub is missing the chance to drive web services in the\n&gt; &gt; right direction. An Atompub server should drive interaction with\n&gt; &gt; clients using forms, to indicate to the client what data the server\n&gt; &gt; needs, and can accept.\n&gt; ...\n&gt; &gt; A forms pattern would also permit us to evolve the document format\n&gt; &gt; safely.\n&gt; &gt; The forms here would be Xform models. Basically they are empty XML\n&gt; &gt; templates for the client to fill out. They&#39;re not perfect, but good\n&gt; &gt; enough for this job, standardized, and XML friendly. You would GET the\n&gt; &gt; form from the link rel=&quot;edit&quot; URI.\n&gt;\n&gt; I&#39;m not sure who you think will interpret this form on the client side.\n&gt; You see, the thing is that the atom document format is already a form. A\n&gt; client has already received the form by being programmed in a particular\n&gt; way, and is now submitting the form. It knows what information should be\n&gt; placed in each of the named fields. It knows how to construct the end\n&gt; document.\n\nAh, but it is a standard form for all servers -- not for my particular\nserver app. And to know what kind of form to submit, you read a spec\n-- you did not GET the description from the server. It&#39;s all baked in\nat design time.\n\nWhat I proposed is that the form delivered by a server have just the\nelements that make sense for the server. My server might not know what\nto do with a &lt;source&gt; element. Using the standard &quot;form&quot;, my server\nhas to have handling in place if you submit a &lt;source&gt; element, and it\nhas to describe to you the problem if you do submit &lt;source&gt; and my\nserver rejects it.\n\n&gt;\n&gt; One might argue that the client and server should communicate online\n&gt; before the client submits data that the server might not accept. In one\n&gt; of the examples you mentioned earlier the server might not support the\n&gt; full atom protocol, in that multiple authors may not be supported.\n\nTo be clear -- whether a server has a model supporting multiple\nauthors is a modeling, not a message exchange protocol, issue.\n\n&gt; As\n&gt; such, the server might be able to publish a document that indicated a\n&gt; subset of the atom format that is usable.\n&gt;I suggest that while a\n&gt; document format could be produced to communicate which subset is\n&gt; important, the cost would likely outweigh the value. Certainly, allowing\n&gt; for additional elements in the form would not be meaningful to a client\n&gt; without further specificaiton as to what those elements mean. Any\n&gt; additions of this kind would likely require code changes to the client.\n\nWell I was focusing on what clients POST to servers, but it seemed\nlike you began that para talking about what servers publish?\n\nIn the case of servers describing what clients can send to them, that\nwould just be the Xform, so I&#39;m not clear how the cost outweighs the\nvalue --  it seems simple enough in this case.\n\n&gt;\n&gt; In general, the client should provide the information it has in the form\n&gt; of a subset of the atom specification. The server should read and\n&gt; understand as much as it can of any input documents, filling out missing\n&gt; elements (such as id) with default or generated values if necessary. If\n&gt; the server doesn&#39;t understand parts of the document they should be\n&gt; discarded. Where the server partially understands the input format (for\n&gt; example, supporting only one author) it should have an algorithm for\n&gt; determining which information it will keep and which it will discard.\n\nYou are describing just what APP servers have do under draft 12. I am\nsaying that is not great, and it is avoidable if the server describes\nto the client, via a form, just what it needs to know to create a new\nentry.\n\n\n&gt; Negotiation of capabilities ahead of time just complicates matters, and\n&gt; doesn&#39;t change the fact that both sides must have new code written for\n&gt; them to support a new feature deployment.\n&gt;\n\nUnclear what you mean here... there&#39;s no negotiation going on, and\nnothing happens &quot;ahead of time&quot;, or needs to. Client GETs from the\nURI, receives a form, fills it out, and POSTs it to a URI described in\nthat form. Hypertext the engine of application state.\n\nIf client supports a new feature introduced later, and server fails to\nrequest that element in its form, no problem... plus, the client can\ntell that the server does not support that feature. Good, right?\n\nIf the server supports a new feature the client doesn&#39;t know about,\nwell it&#39;s unlikely that will be a required feature for the server to\nhonor the request. But if it is, the client cannot supply that\ninformation, but it&#39;s no worse in the forms approach I propose, than\nit would be under the present scheme.\n\nHugh\n\n"}}