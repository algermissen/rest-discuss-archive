{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"Bryan Taylor","from":"Bryan Taylor &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"wUU2lOXfa8I-qmbxAq1stVBuk6qjGqiKpl8enep09mxmLC8xhmElSH-kUTR83TQtZIDbCy1XXRDmuw5-773zxkBCPeyQHr0tzarAVzFP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Restful Approaches to some Enterprise Integration Problems","postDate":"1277928233","msgId":15767,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM5NDQ0My4zOTEwMi5xbUB3ZWIxMTA3MTIubWFpbC5ncTEueWFob28uY29tPg==","inReplyToHeader":"PDBGNjQ3NEZFLUI3NTItNDg4QS05Nzk4LUQzODRBQzY2RjFGNkBtYWMuY29tPg==","referencesHeader":"PDE0NzgzNC4zNzA1LnFtQHdlYjExMDcxNC5tYWlsLmdxMS55YWhvby5jb20+IDwwRjY0NzRGRS1CNzUyLTQ4OEEtOTc5OC1EMzg0QUM2NkYxRjZAbWFjLmNvbT4="},"prevInTopic":15766,"nextInTopic":15768,"prevInTime":15766,"nextInTime":15768,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"From: Jan Algermissen  ... I don t need distributed transactions per se, but I don t know what else to call the problem they solve. ","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5502 invoked from network); 30 Jun 2010 20:03:57 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m2.grp.sp2.yahoo.com with QMQP; 30 Jun 2010 20:03:57 -0000\r\nX-Received: from unknown (HELO web110712.mail.gq1.yahoo.com) (67.195.13.219)\n  by mta1.grp.re1.yahoo.com with SMTP; 30 Jun 2010 20:03:55 -0000\r\nX-Received: (qmail 40796 invoked by uid 60001); 30 Jun 2010 20:03:54 -0000\r\nMessage-ID: &lt;394443.39102.qm@...&gt;\r\nX-YMail-OSG: NKDK5CQVM1msP3dkJuDUJqB_JBPD62HlINVNfsMTSgIZ4b6\n Zm48gsc9U\r\nX-Received: from [64.39.4.133] by web110712.mail.gq1.yahoo.com via HTTP; Wed, 30 Jun 2010 13:03:53 PDT\r\nX-Mailer: YahooMailRC/397.8 YahooMailWebService/0.8.104.274457\r\nReferences: &lt;147834.3705.qm@...&gt; &lt;0F6474FE-B752-488A-9798-D384AC66F1F6@...&gt;\r\nDate: Wed, 30 Jun 2010 13:03:53 -0700 (PDT)\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;0F6474FE-B752-488A-9798-D384AC66F1F6@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nFrom: Bryan Taylor &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: [rest-discuss] Restful Approaches to some Enterprise Integration Problems\r\nX-Yahoo-Group-Post: member; u=119533972; y=rDCQAR9ZDs_qQSe_I25RptNr3pMRzOFDVc5SDNX7GbQrvXa-p2WllB0\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\n\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\n&gt; &gt; 2) Distributed Transactions - we need a paradigm to allow state changes on multiple services to happen so that the changes succeed or fail as a unit\n\n&gt; Why do you need distributed transactions? The usual (and orthogonal to REST-or-not) answer is that you rather do those things with compensations anyway. 2PC is an illusion.\n\nI don&#39;t &quot;need&quot; distributed transactions per se, but I don&#39;t know what else to call the problem they solve. \n\nI need a way for multiple resources in different &quot;services&quot; (an\nautonomous group of servers) to change in sync. I&#39;ll give an example.\nIf we receive an order, I need to have the billing service process the\nbilling request and link back to the order, the operations service to\ncreate a product delivery resource and link it to the order, and the\norder itself be updated to reflect that these things occurred.\n\nI don&#39;t necessarily need a two phase commit approach to &quot;distributed\ntransactions&quot;, I just need a way to guarantee that we don&#39;t end up in a\nstate where billing suceeded but no product delivery document was\ncreated or vice versa. There are three changes to be made and we need\nto assure that either all three or zero of them occur.\n\nWhat do you mean by 2PC is an illusion? I think it violates principles\nof service orientation (autonomy, loose coupling, and conversational\nstate) and the CAP theorem tells me that if I try to get global\nconsistency I cannot have both availability and tolerance for\nunreliable networks, but 2PC certainly can achieve the goal I&#39;m after\nif these were not important. I don&#39;t know whether or not it violates\nRESTful principles. If it does, then there must be some way to fulfill\nthe same functional goals (eg: don&#39;t ship the product and fail to bill\nor vice versa).\n\nCompensations seems like a reasonable approach: I decompose the\ninteraction with each service into state changes that can be undone and\nI invoke them all (using a solution for guaranteed delivery) until I\nknow whether they resolved successfully or not, and if not, I use\nguaranteed delivery to request the undo.\n\n\n      \n\n"}}