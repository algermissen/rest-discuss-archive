{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"HNyJCrHZqLf0pFk1aJtExOBiRPn3fL0j9V2mkVhb4ubseGSEFR8vH1T8XrBITMpAN2dj0aEDIY5A1ir_kxX2GuU-","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Jot, RNA and ReST vs MoST","postDate":"1060625524","msgId":3887,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI0NTg3Mjg2Ni4xMDYwNjExMTI0QGxvY2FsaG9zdD4="},"prevInTopic":3883,"nextInTopic":3890,"prevInTime":3886,"nextInTime":3888,"topicId":3846,"numMessagesInTopic":32,"msgSnippet":"Ok.  I just read the HTTP spec a bit more carefully and I am going to change my position on this issue somewhat.  HTTP implies MoST even if ReST, perhaps, does","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 43481 invoked from network); 11 Aug 2003 18:21:58 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 11 Aug 2003 18:21:58 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (208.45.6.97)\n  by mta2.grp.scd.yahoo.com with SMTP; 11 Aug 2003 18:22:01 -0000\r\nReceived: from [192.168.123.103] (m288d36d0.tmodns.net [208.54.141.40])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid 7E8E988145; Mon, 11 Aug 2003 14:22:00 -0400 (EDT)\r\nDate: Mon, 11 Aug 2003 14:12:04 -0400\r\nTo: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Jot, RNA and ReST vs MoST\r\nMessage-ID: &lt;245872866.1060611124@localhost&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\nOk.  I just read the HTTP spec a bit more carefully and I am going to \nchange my position on this issue somewhat.  HTTP implies MoST even if ReST, \nperhaps, does not.  If you using HTTP and NOT using MoST architecture, you \nare violating the RFC2616, the HTTP specification!\n\n&quot;&quot;&quot;\nThe PUT method requests that the enclosed entity be stored under the \nsupplied Request-URI.\n&quot;&quot;&quot;\n[Hyptertext Transfer Protocol --- HTTP/1.1 (RFC2616)]\n\nWhat does it mean to respond OK to a request that the &quot;enclosed entity be \nstored&quot;?  RFC2616 does not say that a &quot;representation&quot; of the enclosed \nentity is stored, but that the entity itself is stored.  I interpret this \nto mean that if I can PUT an entity with a particular content-type at a \nparticular URI, I can GET back that entity with that same content-type at \nthat URI.  (The alternative is to say that a server may operate \ndestructively with respect to a PUT entity body which seems wrong)\n\n&quot;&quot;&quot;\nThe GET method means retrieve whatever information (in the form of an \nentity) is identified by the Request-URI.\n[...]\nThe Accept request-header field can be used to specify certain media types \nwhich are acceptable for the response.\n[...]\nIf no Accept header field is present, then it is assumed that the client \naccepts all media types.\n&quot;&quot;&quot;\n[RFC2616]\n\nSo when a client sends a GET, it expects the information identified by the \nresource.  If &quot;whatever information&quot; means ALL information without data \nloss, the client can reasonably interpret the response to a GET to *BE* the \nserver&#39;s representation.  (Obviously when the client sends an Accept \nheader, it accepting non-fidelity to the server&#39;s actual representation, \nbut that is really beside the point here.  GET without an Accept header \nimplies fidelity).\n\n&quot;&quot;&quot;\nThe POST method is used to request that the origin server accept the entity \nenclosed in the request as a new subordinate of the resource identified by \nthe Request-URI in the Request-Line.\n&quot;&quot;&quot;\n[RFC2616]\n\nSince the semantics of POST depend on the definition of &quot;subordinate&quot; \nresource and the definition of &quot;subordinate&quot; resource is dependent on the \ncontent-type of the server&#39;s representation of the resource, we can now say \nthat the semantics of POST depends ENTIRELY on the content-type of the \nresource as determined by GET.\n\n--On Friday, August 08, 2003 4:25 PM -0700 &quot;Roy T. Fielding&quot;\n&gt; IF the server\n&gt; allows a resource to be negotiable in terms of representations, then the\n&gt; resource (that abstract concept mapping) is independent of the bits.\n\nTo be more specific, IF the request is in response to a GET with an Accept \nheader, the bits  of the returned entity may be arbitrarily far from the \nbits of the resource itself.  HOWEVER, if the GET comes *without* an Accept \nheader, the server MUST send the resource itself.  In other words, NO \nhidden representation.\n\n&gt; The\n&gt; problem is the way you view a resource -- if you constrain the notion of\n&gt; a resource to being a stored representation, then you simply eliminate\n&gt; the freedom of the server to choose whether the resource is going to\n&gt; be negotiable in bit format.  There are good things and bad things\n&gt; about such a model, but it certainly isn&#39;t necessary.  The Web works\n&gt; fine without such a constraint.\n\nMoST does not prohibit the server from handling Accept headers.  It just \nprohibits the server from sending random bits in response to a GET request \n*without* an Accept header.  If the server wants to handle Accept headers, \nGREAT, but that is really beside the point in this discussion.\n\n&gt;&gt; I&#39;m pretty sure that Yannick is doing nothing that contravenes any\n&gt;&gt; spec.\n\nI was wrong about this.  Reading the spec more carefully Yannick&#39;s app IS \nin violation of HTTP (details in other thread)\n\n&gt; HTTP needs to be flexible to support gateways and legacy\n&gt; systems for which the semantics you are demanding simply do not apply.\n\nUnless you can give me a case where the MoST interpretation of HTTP cannot \nbe used to support an application that you think it supports under your \ninterpretation, this assertion is unfounded!\n\nMoST architectural style means that you don&#39;t need hidden information to \ninteract with an HTTP server.\n\nIf we take HTTP seriously by follow the requirements of MoST architectural \nstyle, we get more interoperability and transparency, higher productivity, \nand more happiness :- ).\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n"}}