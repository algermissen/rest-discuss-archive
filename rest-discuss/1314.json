{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"mLQD2eGrw4D7xSMelV1iv1JVyTQtNrTldXVw2KyzxskgT6LicG20ZA_rG5vHivP8fLeblvAfAUwHJbt1tXvdQmBQ6mH3DA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST Questions","postDate":"1022120887","msgId":1314,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRUM1M0I3LjY0MUJFQzIyQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDRUMyOEJBLkQ2QkQwMjVBQG1pdHJlLm9yZz4="},"prevInTopic":1313,"nextInTopic":1315,"prevInTime":1313,"nextInTime":1315,"topicId":1311,"numMessagesInTopic":9,"msgSnippet":"... Well, don t forget that the REST version returns you a URI that can be used to address that purchase order for ever after. The SOAP version would typically","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 23 May 2002 02:27:33 -0000\r\nReceived: (qmail 58108 invoked from network); 23 May 2002 02:27:32 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m8.grp.scd.yahoo.com with QMQP; 23 May 2002 02:27:32 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.scd.yahoo.com with SMTP; 23 May 2002 02:27:32 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g4N2RKb00617;\n\tWed, 22 May 2002 19:27:20 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g4N2RIe27923;\n\tWed, 22 May 2002 19:27:18 -0700\r\nMessage-ID: &lt;3CEC53B7.641BEC22@...&gt;\r\nDate: Wed, 22 May 2002 19:28:07 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;Roger L. Costello&quot; &lt;costello@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] REST Questions\r\nReferences: &lt;3CEC28BA.D6BD025A@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Perlmx-Spam: Gauge=, Probability=0%, Report=&quot;INTERNAL_HOST&quot;\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\n&quot;Roger L. Costello&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; My understanding is that an XML Schema (or DTD) would be created by\n&gt; Parts Depot, Inc which defines the format that the PO must take.  A\n&gt; client then will create a PO instance document which conforms to the XML\n&gt; Schema, and submit that XML document as the payload of an HTTP POST.\n&gt; Correct?  With a SOAP implementation of this service the only difference\n&gt; would be that the XML document would be wrapped within a SOAP envelope\n&gt; (and there may be a SOAP header).  Is this a correct assessment of the\n&gt; differences between REST and SOAP for this service?  \n\nWell, don&#39;t forget that the REST version returns you a URI that can be\nused to address that purchase order for ever after. The SOAP version\nwould typically not.\n\nAlso, Mark Baker would probably use RDF instead of generic XML. (I would\nnot...but I may change my mind as I learn more about RDF).\n\nAn important subtlety: *if* the SOAP version accepts an arbitrary\n&quot;purchase order vocabulary&quot; document, *then* the SOAP version probably\ndoes not use the SOAP encoding, which negates many of the &quot;ease of use&quot;\nadvantages of SOAP. We are in a confusing time right now where half of\nthe world thinks SOAP is much easier to use than &quot;regular&quot; XML because\nthey don&#39;t have to parse it or map it and the other half says that the\nright thing to do is parse it or map it. That means that SOAP advocates\ncan say that SOAP is really easy (no parsing required!) and really\nextensible (pure XML!). But the truth is that you can&#39;t have them both\nat the same time.\n\n&gt; ... Is the ability to\n&gt; add headers in SOAP going to be an advantage over REST in this\n&gt; scenario?\n\nDoubtful but possible. You can add headers in HTTP also. You can also\nadd arbitrary XML to the body message if the schema is well designed.\nMaybe in some circumstances you want the information to be logically a\nheader AND you need the header to have deep structure (i.e. XML). That&#39;s\nwhy I&#39;ve said that one of the few things I would like to steal from SOAP\nis headers:\n\nhttp://www.prescod.net/xml/envelopes/\n\n&gt; 2. Distinguishing characteristics of REST?\n&gt; \n&gt; I am not clear on what characterizes a REST architecture.  For example,\n&gt; consider this HTTP GET for getting information about the part whose id\n&gt; is 00345:\n&gt; \n&gt;    http://www.parts-depot.com?part=00345\n&gt; \n&gt; It is my understanding that this is not REST-ful.  The REST approach\n&gt; would be to use this URL:\n&gt; \n&gt;    http://www.parts-depot.com/part/00345\n&gt; \n&gt; Why is the later REST-ful but the former is not?  May I conclude that in\n&gt; a REST-ful system you would not use URLs with query strings?\n\nI wouldn&#39;t go that far. \n\nFirst, they are both better than the traditional web services way\nbecause they are addressable. \nSecond, the actual syntax of your URIs is a server-side issue and really\nthe details of the syntax are not the client&#39;s business. (i.e. you could\nuse indecipherable UUID strings and still be RESTful, if not stylistic\nideal, just as you could use meaningless method names in a Java program\nbut still be &quot;OO&quot;).\n\nThat said, it is my opinion that the primary mode of navigation through\na service should not be a query. Hyperlinks are more discoverable and\nrequire less client/server pre-negotiation. Queries are good as an\noption. But that doesn&#39;t really answer the question because you could\nhave hyperlinks to either one.\n\nSo a minor advantage of the latter is that it is more like a canonical\nURI for a thing whereas queries can have multiple parameters and\nsometimes parameters are optional so it is hard for a caching system or\nindexing engine to figure out whether they are canonical. Also some\nindexing engines may be leery of following question mark links for\nvarious historical reasons. \n\nAlso, the latter helps you to organize your system into more of a\nhierarchy which makes the meaning of POST more predictable to clients.\ni.e. given the bottom URI I would expect that a POST to &quot;part&quot; (actually\nI would call it &quot;parts&quot;) would add a part. But given the former URI I\nwouldn&#39;t be sure exactly where to POST. Just like on a web site I can\nguess that if I see /a/b, I might be able to take off the /b and get\nsomething useful at /a.\n\nAlso, there is some debate whether this:\n\n * http://www.parts-depot.com?part=00345\n\nis actually identifying a resource or sending a query to a resource or\nboth. The latter is 100% clearly identifying a resource.\n\nThat said, all of these are pretty abstract concerns.\n\n&gt; Can someone enumerate the distinguishing characteristics of a REST\n&gt; system?  In other words, how will I recognize a REST service when I see\n&gt; one?\n\nIMO, the bad news is that it would be a book, just like the\ndistinguishing characteristics of an OO system. Maybe there will never\nbe 100% agreement, just as there isn&#39;t 100% agreement about the right\nway to be OO. Nobody is ready to write the book (whether canonical or\ncontroversial) yet. But here are some ideas:\n\n * Use URIs and hyperlinks...\n\n * obey web architecture:\n\t* http://www.w3.org/DesignIssues/\n\t* anything else written by Tim B-L\n\n * understand the design of REST itself (versus REST services)\n\t*\nhttp://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm\n\n * as we will typically use HTTP and always use URIs, we need to\nunderstand them:\n\t* http://www.ietf.org/rfc/rfc2616.txt\n\t* http://www.ietf.org/rfc/rfc2396.txt\n\n * nobody has yet argued with these rules (nor hardly commented on them)\n\t* http://groups.yahoo.com/group/rest-discuss/message/1204\n\n * RDF technologies are probably going to be important tools for the\nREST programmer to understand in the future but I&#39;m not convinced they\nare fully baked enough (or at least palatable enough) to recommend\neveryone learn them.\n\nLet&#39;s be honest. There is too much for your average programmer to learn\nhere without a good book. Heck, there is too much for me to feel like\nI&#39;ve internalized it all. But that is as true of the standard web\nservices stack. Show me someone who understands SOAP, WSDL, UDDI, SAML,\nGSXA, WS-Routing, WS-Referral, DIME, WS-Security, XLang ...\n\nIt is a fulltime job just keeping up with the acronyms, much less\nevaluating each proposal. The industry is moving way too fast for people\nto understand what we are actually doing. ;) :( \n\nOn the one hand REST people should probably resist the urge to rush\nbecause IMO the standard stack&#39;s mistakes arise from their rush and\ntheir closed development model (what standards body worked on SOAP for\nthe first two or three years of its development?). Following them into\nmistakes could be a bad mistake. On the other hand, it is not a good\nsituation if customers have to choose REST with one checklist of\nfeatures versus the standard stack with a different checklist. &quot;They\nhave transactions. You don&#39;t. You have addressing. They don&#39;t. How do I\npick?&quot;\n\nBosworth says he wants to move from within-company services to B2B by\nthe end of the year! Obviously he means point-to-point B2B rather than\nstandards-based because we are nowhere near standards-based. But still.\n\nToo much coffee. End of rant.\n\n Paul Prescod\n\n"}}