{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"fT8Z_syKFFT9U2wcTiDN-jQuIDdgUl9N57WWF0MUJPIU4NUN1l9gbpChYKy4nFYAEntYyj1BMfl1CpmcMgveqLPZnR73ydw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website","postDate":"1267849427","msgId":15008,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMzA1MjAyM3QxNWM5YzAwYmc0ZGFkYWUxNThiNWI2NDQxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGY4YjM5YWNlMTAwMzA1MTk0NHY0YjJjZmQxYnM1OTIwY2M0OTFlM2Y3NTJkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGY4YjM5YWNlMTAwMzA1MDg0OHc1MTYzNjU2OHlkMjIxMzg5YWRkN2NkZTRkQG1haWwuZ21haWwuY29tPgkgPDk2NTYwMS40MDQxLnFtQHdlYjU1OTA4Lm1haWwucmUzLnlhaG9vLmNvbT4JIDxiNTQ4ZGY2NTEwMDMwNTE4MDRwNzE3ZGU1MGV4NjY3ZWJjOGQ2Y2JhZjA4YkBtYWlsLmdtYWlsLmNvbT4JIDxmOGIzOWFjZTEwMDMwNTE5NDR2NGIyY2ZkMWJzNTkyMGNjNDkxZTNmNzUyZEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15007,"nextInTopic":15009,"prevInTime":15007,"nextInTime":15009,"topicId":14978,"numMessagesInTopic":41,"msgSnippet":" ...  There are lots of possibilities: detailed list       ","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47106 invoked from network); 6 Mar 2010 04:23:51 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m13.grp.re1.yahoo.com with QMQP; 6 Mar 2010 04:23:51 -0000\r\nX-Received: from unknown (HELO mail-fx0-f210.google.com) (209.85.220.210)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 Mar 2010 04:23:51 -0000\r\nX-Received: by fxm2 with SMTP id 2so5542551fxm.36\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 05 Mar 2010 20:23:47 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.1.19 with SMTP id 19mr1940513fad.61.1267849427627; Fri, 05 \n\tMar 2010 20:23:47 -0800 (PST)\r\nIn-Reply-To: &lt;f8b39ace1003051944v4b2cfd1bs5920cc491e3f752d@...&gt;\r\nReferences: &lt;f8b39ace1003050848w51636568yd221389add7cde4d@...&gt;\n\t &lt;965601.4041.qm@...&gt;\n\t &lt;b548df651003051804p717de50ex667ebc8d6cbaf08b@...&gt;\n\t &lt;f8b39ace1003051944v4b2cfd1bs5920cc491e3f752d@...&gt;\r\nDate: Fri, 5 Mar 2010 23:23:47 -0500\r\nX-Google-Sender-Auth: b92e5f7e9942987d\r\nMessage-ID: &lt;b548df651003052023t15c9c00bg4dadae158b5b6441@...&gt;\r\nTo: craigmcc@...\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website\r\nX-Yahoo-Group-Post: member; u=69164307; y=8vjoBfyodrasHTE_vvHSkzYXUXGbHz3WmMy4naUmaGeL\r\nX-Yahoo-Profile: mamund\r\n\r\n&lt;snip&gt;\n&gt; This approach works if a URL template is either valid or not for a=\r\n\n&gt; particular user, but that doesn&#39;t cover Kevin&#39;s use case where\n&gt; &quot;/order=\r\ns/{id}&quot; is valid for both of us, but we should not be able to see\n&gt; each ot=\r\nher&#39;s orders.\n&lt;/snip&gt;\n\nThere are lots of possibilities:\ndetailed list\n&lt;user=\r\n id=3D&quot;kevin&quot;&gt;\n=A0=A0&lt;acl href=3D&quot;/orders/1&quot; methods=3D&quot;*&quot;/&gt;\n=A0=A0&lt;acl hre=\r\nf=3D&quot;/orders/6&quot; methods=3D&quot;*&quot;/&gt;\n=A0=A0&lt;acl href=3D&quot;/orders/7&quot; methods=3D&quot;*&quot;=\r\n/&gt;\n=A0=A0&lt;acl href=3D&quot;/orders/8&quot; methods=3D&quot;*&quot;/&gt;\n&lt;/user&gt;\n\ntemplate:\n&lt;user i=\r\nd=3D&quot;craig&quot;&gt;\n=A0=A0&lt;acl href=3D&quot;/orders/(2|3|4|5)&quot; methods=3D&quot;*&quot;/&gt;\n&lt;/user&gt;\n=\r\n\nchange URI design:\norder resource URI contains prefix (mca-001, mca-002, e=\r\ntc)\n&lt;user id=3D&quot;mamund&quot;&gt;\n  &lt;acl href=3D&quot;/orders/mca-(.*)&quot; methods=3D&quot;*&quot; /&gt;\n=\r\n&lt;/user&gt;\n\netc.\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn Fri, Mar 5, 2010 at 22:=\r\n44, Craig McClanahan &lt;craigmcc@...&gt; wrote:\n&gt;\n&gt;\n&gt; On Fri, Mar 5, 2010 =\r\nat 6:04 PM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; It sounds l=\r\nike you are asking about how to handle authorization (not\n&gt;&gt; authentication=\r\n). If so, that&#39;s not really a REST issue, but an\n&gt;&gt; implementation detail f=\r\nor HTTP apps.\n&gt;&gt;\n&gt;&gt; In my HTTP applications I refer to a list of URIs (or r=\r\negexp-based URI\n&gt;&gt; templates) plus a list of HTTP methods for each authenti=\r\ncated user; storage\n&gt;&gt; and representation can vary to taste. Consider a use=\r\nr-centered\n&gt;&gt; representation of an application&#39;s access control list for a =\r\nuser:\n&gt;&gt; &lt;user id=3D&quot;mamund&quot;&gt;\n&gt;&gt; =A0=A0&lt;acl href=3D&quot;/(.*)&quot; methods=3D&quot;GET,H=\r\nEAD,OPTIONS&quot; /&gt; &lt;!-- default access --&gt;\n&gt;&gt; =A0=A0&lt;acl href=3D&quot;/admin/(.*)&quot; =\r\nmethods=3D&quot;!&quot;/&gt; &lt;!-- deny all methods --&gt;\n&gt;&gt; =A0=A0&lt;acl href=3D&quot;/mamund/(.*=\r\n)&quot; methods=3D&quot;*&quot;/&gt; &lt;!-- allow all methods --&gt;\n&gt;&gt; &lt;/user&gt;\n&gt;&gt; All that is lef=\r\nt is to compare the incoming request&#39;s METHOD + URI against\n&gt;&gt; the above li=\r\nst. Any access=A0failures result in a &quot;403 Forbidden&quot; response.\n&gt;\n&gt; This ap=\r\nproach works if a URL template is either valid or not for a\n&gt; particular us=\r\ner, but that doesn&#39;t cover Kevin&#39;s use case where\n&gt; &quot;/orders/{id}&quot; is valid=\r\n for both of us, but we should not be able to see\n&gt; each other&#39;s orders.\n&gt;\n=\r\n&gt; As you mentioned, this is not a REST issue at all, because exactly the sa=\r\nme\n&gt; scenario applies to a traditional webapp where a crafty user might try=\r\n to\n&gt; hand modify the URL that displays an order&#39;s content, plugging in som=\r\neone\n&gt; else&#39;s orderid to see if the system will let him see it.=A0 A proper=\r\nly\n&gt; designed webapp should not; neither should a web service.\n&gt;\n&gt; There&#39;s =\r\nlots of ways to implement this in the back end.=A0 At Jive, for\n&gt; example, =\r\nwe have a low level DAO that handles the database calls with no\n&gt; authoriza=\r\ntion (could be JPA or Hibernate or whatever), and a higher level\n&gt; &quot;manager=\r\n&quot; that checks whether the authenticated user has access to the the\n&gt; reques=\r\nted data.=A0 This is what all of the other business logic in the\n&gt; applicat=\r\nion calls -- the DAO is *only* used by the corresponding manager.\n&gt;\n&gt; The r=\r\nules for determining=A0authorized access=A0are necessarily domain specific,=\r\n\n&gt; but for the use case being described it&#39;s pretty simple -- if the\n&gt; auth=\r\nenticated user owns the requested order, the data should be returned;\n&gt; oth=\r\nerwise it should not.\n&gt;\n&gt; And you=A0should use exactly the same logic behin=\r\nd a REST service and a\n&gt; corresponding webapp that supports HTML based acce=\r\nss to the same data.\n&gt;\n&gt; Craig\n&gt;\n&gt; PS:=A0 Kevin, if you&#39;re really willing t=\r\no give me your security token and your\n&gt; identity, as well as the URL for y=\r\nour order, give me a second to set up a\n&gt; little HTML form so you can give =\r\nme your banking login credentials too :-).\n&gt;\n\n"}}