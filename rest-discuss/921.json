{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"QjlZ9lw02Vw3eF_crPd4mbHtqVdSwoNtY7WAJqkt1UN4O7MOwZTkusBVM7SYER0FgX2OLEzjbpfeFK9UOpjqKT_qrasrBA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Onions in the Varnish","postDate":"1015536896","msgId":921,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODdERDAwLjczQzg1MkNBQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDODdCMzQ0LkE5NUNCRkIwQGp1bXAubmV0PiA8M0M4N0JGMUMuOUI0MERCOTFAcHJlc2NvZC5uZXQ+IDwzQzg3RDI5NC42RUQ5OTZDMEBqdW1wLm5ldD4="},"prevInTopic":920,"nextInTopic":922,"prevInTime":920,"nextInTime":922,"topicId":914,"numMessagesInTopic":16,"msgSnippet":"... Why don t we quit this line of discussion. It s unnecessarily inflammatory to presume that because someone disagrees with you they must not have thought","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 21:44:51 -0000\r\nReceived: (qmail 90466 invoked from network); 7 Mar 2002 21:37:43 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m9.grp.snv.yahoo.com with QMQP; 7 Mar 2002 21:37:43 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.snv.yahoo.com with SMTP; 7 Mar 2002 21:37:43 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g27Lbeb13691\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 7 Mar 2002 13:37:40 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g27LbdL06442\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 7 Mar 2002 13:37:39 -0800\r\nMessage-ID: &lt;3C87DD00.73C852CA@...&gt;\r\nDate: Thu, 07 Mar 2002 13:34:56 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Onions in the Varnish\r\nReferences: &lt;3C87B344.A95CBFB0@...&gt; &lt;3C87BF1C.9B40DB91@...&gt; &lt;3C87D294.6ED996C0@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt;...\n&gt; \n&gt; Sorry, Paul -- the confusion isn&#39;t in my head, it may or may not be in Tim&#39;s\n&gt; head, but it&#39;s certainly in yours.  ;-)  \n\nWhy don&#39;t we quit this line of discussion. It&#39;s unnecessarily\ninflammatory to presume that because someone disagrees with you they\nmust not have thought through the issues. In fact I had all of the same\nquestions when I first heard that URIs are opaque. Luckily, there is a\ndocument that discusses opacity, query parameters, relative URIs and so\nforth. It was written in 1996, perhaps years after Tim Berners-Lee went\ndown the same mental paths you are. I went through them around six\nmonths ago. I haven&#39;t done a comparison to various file systems but I\nhave thought through what opacity means in this context and when it\napplies and doesn&#39;t. That&#39;s why I&#39;ve been telling people, for example,\nto use query parameters when opacity is not appropriate and slashes when\nit is.\n\n&gt; ... Here&#39;s why:\n&gt; \n&gt; Every single browser and probably almost every other sort of Web client on\n&gt; the planet breaks the opacity axiom each and every day.  URI are not opaque;\n&gt; they have semantics.  Without those semantics, relative URI would be\n&gt; impossible.\n\nAs long as you restrict yourself to the semantics described in the URI\nspecifications, I have no argument. Those are shared agreements that\nsoftware reliably implements. When you start inventing naming\nconventions you are going beyond that and starting to embed *application\nsemantics* in URIs. Software that depends upon this will be fragile in\nthe face of changes in URIs. Insofar as URIs are tied to servers, they\nwill be fragile in the face of resource moves to other servers. This can\nonly be mitigated through expensive redirects.\n\n&gt; To say that URI are opaque indicates both sloppiness of language and\n&gt; terminological (or other worse) confusion.  To assert that it is incorrect to\n&gt; extract any information from URI, to do anything other than dereference one\n&gt; --- is contradictory to a very common use of URI which is spelled out in\n&gt; great detail in RFC2396 -wrt- relative URI.\n\nURIs are opaque at the application level. Client software should not\ninspect URIs to try and figure out the structure of a server&#39;s data\nmodel.\n\nRelative URIs are a syntactic shortcut like a macro. Like a macro, they\nare provided by the person who created the data. If the *client* started\ninventing relative URIs, by adding &quot;..&quot;s etc., it would be a violation\nof application-level URI opacity.\n\n&gt; So once we&#39;ve dispelled the delusion that URI are *in fact* and by intent /\n&gt; design opaque, we can get on with our lives and begin to ask what the\n&gt; structure and semantics of URI names are and how we can enrich those\n&gt; semantics formally, explicitly, usefully.\n\nYou have to make a case that there is value in enriching those\nsemantics. So far all I&#39;ve seen is: &quot;this thing that can be done with\nhypertext. We could also do it in a different way with namespaces.&quot; The\nconfusion caused by relative URIs demonstrates that the current level of\n&quot;rewriting semantics&quot; already causes a problem. It was confusing for me\nat first also. I presumed that HTTP&#39;s notion of containment and URI&#39;s\nnotion of containment were related. They are not. HTTP&#39;s is a *public*\ncontainment that client and server should share. URIs is a *private*\ncontainment that is owned by the server and used by the client only\nunder strict server control...in other words with &quot;..&quot;.\n\n&gt; &gt; Tim was talking about a *human* reading the URI. That&#39;s why he said that\n&gt; &gt; it is a &quot;clue&quot;. He&#39;s talking about the Web equivalent to variable naming\n&gt; &gt; conventions. As in, you SHOULD use m_ as a member prefix because this\n&gt; &gt; will make reading your code simpler. But I would kill you if you sent me\n&gt; &gt; a piece of software that depended upon member variables starting with\n&gt; &gt; m_. So variable names are opaque, except when they aren&#39;t, in exactly\n&gt; &gt; the same way.\n&gt; \n&gt; Invalid analogy.  URI aren&#39;t variable names in a flat namespace, they are\n&gt; semi-hierarchical names in a structured namespace.  \n\nFrom the client&#39;s point of view it *is* a flat namespace. That&#39;s just\nthe point.\n\nURIs have hierarchical parts *only* to allow relative URIs:\n\nRFC 2396:\n&gt;    It is not necessary for all URI within a given scheme to be\n&gt;    restricted to the &lt;hier_part&gt; syntax, since the hierarchical\n&gt;    properties of that syntax are only necessary when relative URI are\n&gt;    used within a particular document.\n\nAnd relative URIs *only* exist as a shortcut syntax for the maintenance\nof human-authored documents:\n\n&gt;    Relative addressing of URI allows document trees to be partially\n&gt;    independent of their location and access scheme.  For instance, it is\n&gt;    possible for a single set of hypertext documents to be simultaneously\n&gt;    accessible and traversable via each of the &quot;file&quot;, &quot;http&quot;, and &quot;ftp&quot;\n&gt;    schemes if the documents refer to each other using relative URI.\n\nIn other words&#39; it is a hack to get around the fact that rewriting URIs\nis a pain and not even feasible with primitive software like FTP\nservers.\n\n&gt; ... Consider:  every piece of\n&gt; *Web server software* on the planet builds log files.  These log files are\n&gt; often named and managed in a hierarchical log space, with log file names\n&gt; constructed generatively according to some rules or grammar.\n\nSo software ignores web architecture. What a surprise! This could easily\nbe handled with either hypertext links or query parameters.\n\n Paul Prescod\n\n"}}