{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"S. Alexander Jacobson","from":"&quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;","replyTo":"SENDER","senderId":"SmgKZZtVl4z09N0mZhYPg7irRXl8kNZAYucpyO_ql7EYMX5JPymZOgnn_hpY2hiKBHzjK6CMmC8dX3cE-qJKvV-z7ha9dI5JUtq_BQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Reliable HTTP","postDate":"1011902244","msgId":234,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTQzNDM2MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg==","inReplyToHeader":"PE9FMTJQN1ZTeGFvS3hnOTFiZDgwMDAwNmVkMkBob3RtYWlsLmNvbT4="},"prevInTopic":229,"nextInTopic":245,"prevInTime":233,"nextInTime":235,"topicId":208,"numMessagesInTopic":32,"msgSnippet":"... Developers should be very careful here.   All of these methods are time dependent and there is no guarantee that multiple idempotent requests won t ","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 19:56:44 -0000\r\nReceived: (qmail 58197 invoked from network); 24 Jan 2002 19:56:44 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m5.grp.snv.yahoo.com with QMQP; 24 Jan 2002 19:56:44 -0000\r\nReceived: from unknown (HELO mail.vo.com) (208.36.81.99)\n  by mta2.grp.snv.yahoo.com with SMTP; 24 Jan 2002 19:56:43 -0000\r\nReceived: from gandolph.ASGARD.jms (alexhome2 [66.108.152.69])\n\tby mail.vo.com (8.12.1/8.12.1) with ESMTP id g0OJtxFv017570\n\t(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);\n\tThu, 24 Jan 2002 14:56:03 -0500\r\nDate: Thu, 24 Jan 2002 14:57:24 -0500 (Eastern Standard Time)\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: rest-discuss@yahoogroups.com, &quot;&#39;Paul Prescod&#39;&quot; &lt;paul@...&gt;\r\nSubject: Re: [rest-discuss] Reliable HTTP\r\nIn-Reply-To: &lt;OE12P7VSxaoKxg91bd800006ed2@...&gt;\r\nMessage-ID: &lt;Pine.WNT.4.43.0201241434360.1892-100000@...&gt;\r\nX-X-Sender: alex@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOn Wed, 23 Jan 2002, S. Mike Dierken wrote:\n&gt; Just this part, is worth its weight in gold - all web app developers should\n&gt; burn this into their brains:\n&gt;\n&gt; &quot;One way to make sure that your data gets through is to try and try again\n&gt; until you get a proper acknowledgement. If the action you were completing is\n&gt; &quot;idempotent&quot; then by definition it is safe to try again and again until it\n&gt; succeeds. The HTTP GET, PUT and DELETE methods are idempotent. If you think\n&gt; about them as if they were file system commands it should be clear why. It\n&gt; never hurts to read a file over and over again. It also does not hurt to\n&gt; write a file over and over again as long as you are writing the same data.\n&gt; And deleting a file repeatedly will at most give you an error message.\n\nDevelopers should be very careful here.   All of\nthese methods are time dependent and there is no\nguarantee that multiple idempotent requests won&#39;t\ninterfere with one another.  Order matters.\n\nSuppose you decide to increment a value by 1 and\nthen by 100.  Now suppose you GET the value 25.\nYou then PUT the value 26, but it fails so you\nkeep trying.  While this is happening you GET the\nvalue 25 again, and PUT the value 125.  At the end\nof this process the resource value will be either\n26 or 125, but the correct value would have been\n126.\n\nOrder matters.  Idempotency doesn&#39;t help you much.\n\nPaul&#39;s RPOST proposal has a similar problem.\nThere is no way for the client to guarantee that\nRPOSTS will actually get posted in the correct\norder.\n\nEven if the server is issuing message-ids and only\nprocesses RPOSTS in order of message-ids:\na. Nothing in the spec says that clients have to\nuse message-id&#39;s in the order in which they were\nissued.\nb. It is impossible to guarantee that the client\nuses all message-Ids so the server has no way to\nguarantee in-orderness.\n\nIt is really hard to get all this right without\nimplementing a lot of layers of transactions.\n\nI tried to document this for mime-rpc (see\nhttp://www.mime-rpc.com/serviceSpec.html).\n\nThe general points are:\n1. clients should issue their own message-ids.  If\nthey don&#39;t want to get stepped on, they should\nmake them sufficiently unique (and secret).\n\n2. reliable messaging looks like repeat requests\n\n3. you may want to support a seriality protocol in\nwhich clients send a cardinality header (I haven&#39;t\ndecided if this should really be an ordinality\nheader, leaving the cardinality header for the\ntransaction protocols).\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n"}}