{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"hlHmy_wEP6cMnNZaLQVn2Ojz5S_erevbkqxdxmYEhb6y75l-g9zv8Dh8SgFJJH_Lx0aIGN_PCNOAbZ7JmgyYjljbkQzypuDk0W5fIDCfSA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] content type negotiation: multiple entries with same quality value","postDate":"1261224402","msgId":14233,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjE5MDUwNjQyLjA0M2IwMjNlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDU4MWJmNjE2MDkxMjE4MDUxMHc2YzM3ZDNjNm8zYWE2ZWQyMTY1MzRkOGM1QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU4MWJmNjE2MDkxMjE4MDUxMHc2YzM3ZDNjNm8zYWE2ZWQyMTY1MzRkOGM1QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14210,"nextInTopic":14234,"prevInTime":14232,"nextInTime":14234,"topicId":14205,"numMessagesInTopic":12,"msgSnippet":"... The following passage from that link is in error: The latest versions of WebKit, and thus Safari and Chrome, prefer XML over HTML in the Accept header. If","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34642 invoked from network); 19 Dec 2009 12:06:46 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m13.grp.re1.yahoo.com with QMQP; 19 Dec 2009 12:06:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.re1.yahoo.com with SMTP; 19 Dec 2009 12:06:46 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 5C883509B4;\n\tSat, 19 Dec 2009 07:06:45 -0500 (EST)\r\nDate: Sat, 19 Dec 2009 05:06:42 -0700\r\nTo: Guilherme Silveira &lt;guilherme.silveira@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20091219050642.043b023e.eric@...&gt;\r\nIn-Reply-To: &lt;581bf6160912180510w6c37d3c6o3aa6ed216534d8c5@...&gt;\r\nReferences: &lt;581bf6160912180510w6c37d3c6o3aa6ed216534d8c5@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] content type negotiation: multiple entries with\n same quality value\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nGuilherme Silveira wrote:\n&gt;\n&gt; Hello guys,\n&gt; \n&gt; Safari sends the following accept header, due to webkit&#39;s code [1]:\n&gt; application/xml,application/xhtml\n&gt; +xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\n&gt; \n&gt; I could not find in section 12 or the Accept header definition in http\n&gt; 1.1 what to do if there is more than one content-type with the same\n&gt; q-value. In the above example, it seems like the server is free to\n&gt; decide whether to send application/xml, application/xhtml+xml or\n&gt; text/html.\n&gt; \n&gt; Any opinions on that? Should it be followed left to right\n&gt; (application/xml first)? Should the server decide?\n&gt; \n&gt; Regards\n&gt; \n&gt; [1]\n&gt; http://www.newmediacampaigns.com/page/webkit-team-admits-accept-header-error\n&gt; \n\nThe following passage from that link is in error:\n\n&quot;The latest versions of WebKit, and thus Safari and Chrome, prefer XML\nover HTML in the Accept header. If a server is following the HTTP spec\nand serving a resource that can be represented as XML or HTML, *it will\nrespond with HTML to Firefox and XML to Safari*.&quot;\n\nActually, it *might* respond that way, but it&#39;s up to the server.  The\nproper legacy RFC for HTTP describes q-values quite nicely, and\nexplains the formula for calculating the client&#39;s q-value against that\nof the server.  What most people seem to forget in all this brouhaha\nover Accept (request) headers, is that representations on the server\nmay be assigned q-values as well.\n\nOn my server, application/xhtml+xml is assigned a sufficiently higher q-\nvalue than text/html, such that any browser accepting application/\nxhtml+xml, even if it prefers text/html, gets application/xhtml+xml.\nThe same goes for systems with more than one feed -- the server q-value\nfor Atom just needs to be .9 while all others are .1 and the\ncalculations will work out in favor of Atom even on feed readers that\nprefer RSS, while still supporting RSS-only clients. It&#39;s only if your\nserver-side q-value calculation results in a tie, that order of\nappearance in the client&#39;s Accept header becomes a factor.\n\nThe goal of the server is to return the highest-quality representation\nit has to offer, that&#39;s compatible with the client.  The server is not\nsubservient to the client&#39;s Accept header.  I don&#39;t really care that\nWebKit prefers HTML over XHTML, the fact that it supports XHTML and\nworks with my client-side XSLT methods (which reduce bandwidth by\ncaching XHTML template-generating code on the client, to transform raw\nAtom from the server) means that WebKit is compatible with my highest-\nquality representation (lower bandwidth = cheaper to host is the\nactual thinking, thanks to REST&#39;s scaling), so that&#39;s what it gets.\n\nHTH,\nEric\n\n"}}