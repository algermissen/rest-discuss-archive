{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69125415,"authorName":"Mathews, Walden","from":"&quot;Mathews, Walden&quot; &lt;waldenm@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"MEXiexDKxxfApLAqoNXIVWinqQ8MeHE1FdLERL7RRoJx043iLcQ9eXe7vOM6WTPJER86fJ8mSRO6D853DIthdJbb44ynC6hzFfo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: PUT, POST, authorization and purchase orde\t rs","postDate":"1030377937","msgId":2226,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QjlAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2225,"nextInTopic":2227,"prevInTime":2225,"nextInTime":2227,"topicId":2205,"numMessagesInTopic":64,"msgSnippet":"... Sorry, I m confused.  By HTTP implementations do you mean things like libwww, or applications that use HTTP?  Then, I ll infer the meaning of support","rawEmail":"Return-Path: &lt;waldenm@...&gt;\r\nX-Sender: waldenm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 16:05:43 -0000\r\nReceived: (qmail 81044 invoked from network); 26 Aug 2002 16:05:42 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m6.grp.scd.yahoo.com with QMQP; 26 Aug 2002 16:05:42 -0000\r\nReceived: from unknown (HELO mail.ilx.com) (199.119.33.174)\n  by mta2.grp.scd.yahoo.com with SMTP; 26 Aug 2002 16:05:42 -0000\r\nReceived: from clifford.devo.ilx.com (clifford.devo.ilx.com [172.27.56.72])\n\tby mail.ilx.com (8.9.3/8.9.3) with ESMTP id MAA76241;\n\tMon, 26 Aug 2002 12:05:40 -0400 (EDT)\n\t(envelope-from waldenm@...)\r\nReceived: by clifford.devo.ilx.com with Internet Mail Service (5.5.2653.19)\n\tid &lt;RVXAHYLA&gt;; Mon, 26 Aug 2002 12:05:40 -0400\r\nMessage-ID: &lt;1373D6342FA1D4119A5100E029437F640155F8B9@...&gt;\r\nTo: &quot;&#39;Mark Baker&#39;&quot; &lt;distobj@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: RE: [rest-discuss] Re: PUT, POST, authorization and purchase orde\n\t rs\r\nDate: Mon, 26 Aug 2002 12:05:37 -0400\r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2653.19)\r\nContent-Type: text/plain\r\nFrom: &quot;Mathews, Walden&quot; &lt;waldenm@...&gt;\r\nX-Yahoo-Group-Post: member; u=69125415\r\nX-Yahoo-Profile: waldenmathews\r\n\r\n\n\n&gt; -----Original Message-----\n&gt; From: Mark Baker [mailto:distobj@...]\n&gt; Sent: Monday, August 26, 2002 11:37 AM\n&gt; To: Mathews, Walden\n&gt; Cc: rest-discuss@yahoogroups.com\n&gt; Subject: Re: [rest-discuss] Re: PUT, POST, authorization and purchase\n&gt; orde rs\n&gt; \n&gt; \n&gt; On Mon, Aug 26, 2002 at 11:21:26AM -0400, Mathews, Walden wrote:\n&gt; &gt; &gt; Extending the methods means being able to reuse the \n&gt; semantics of the\n&gt; &gt; &gt; existing contract between client and server; aka firewall \n&gt; safe.  If I\n&gt; &gt; &gt; POST some data to /foo with an intent of /bar, I&#39;m still \n&gt; doing a POST,\n&gt; &gt; &gt; and it&#39;s still the server that has the ultimate say (because \n&gt; &gt; &gt; it&#39;s still\n&gt; &gt; &gt; a POST).  This is in contrast to invoking the BAR method, \n&gt; which could\n&gt; &gt; &gt; mean anything.\n&gt; &gt; &gt; \n&gt; &gt; \n&gt; &gt; I&#39;d like to understand this point better.  Nothing I can do \n&gt; as a client\n&gt; &gt; in the HTTP method space can change the fact that &quot;it&#39;s \n&gt; still the server\n&gt; &gt; that has the ultimate say&quot;.  BAR *could* mean anything, \n&gt; while POST already\n&gt; &gt; *does* mean anything (virtually).\n&gt; \n&gt; Whatever BAR might mean, if the community (i.e. IETF) has \n&gt; specified that\n&gt; HTTP implementations MUST support BAR, then the server \n&gt; doesn&#39;t have the\n&gt; final say, the spec does.\n\nSorry, I&#39;m confused.  By &quot;HTTP implementations&quot; do you mean things\nlike libwww, or applications that use HTTP?  Then, I&#39;ll infer the meaning\nof &quot;support BAR&quot; from that, hopefully.  But in the meantime, for\ntechnologies like libwww, HttpClient and Servlet to &quot;support BAR&quot;\nmeans little more than forwarding messages with them.  On the other\nhand, applications seem to be free to choose which methods they will\nand will not support (or else there are some superfluous response\ncodes).  Like I said, I&#39;m confused...\n\n&gt; \n&gt; &gt; A little clarification: the fact that a server doesn&#39;t have \n&gt; to do what I\n&gt; &gt; say in a POST is not a property of POST; it&#39;s a property of \n&gt; HTTP, and more\n&gt; &gt; broadly, of server side applications that are autonomous in their\n&gt; &gt; respective domains, regardless of which level 7 protocol they use.\n&gt; \n&gt; In the broader space of &quot;server side applications&quot;, I&#39;d say that the\n&gt; party(s) that define the contract get the final say.  With most RPC\n&gt; systems, this could be the very people who implement the \n&gt; system, and so\n&gt; they do/can have the final say.  But when the world sits down \n&gt; to design\n&gt; an application protocol, it is done with the expectation that\n&gt; implementors - many/most of whom won&#39;t be at the \n&gt; standardization table -\n&gt; will follow the rules in the specification.  And this is, in \n&gt; fact, what\n&gt; happens most of the time.\n\nAnd that&#39;s fine for methods GET, PUT and DELETE, all of whose meanings\nare bounded to a single conceptual resource.  POST is in a different\nclass, as you know.  One might say that it&#39;s *underspecified* as an\napplication\nsemantic, or from the other point of view, that it&#39;s overloaded to catch\neverything that&#39;s not meant by the other methods.\n\nWhat I&#39;m trying to understand is why it is more of a security concern\nto use a very underspecified HTTP method (e.g., &quot;BAR&quot;, which is not\nspecified\nat all as an HTTP method) as opposed to a somewhat underspecified method,\n&quot;POST&quot;.  POST seems like a ready-made tunnel for resource mutation, and\nhence even in RESTful design it is used this way.  Why should a firewall\ntreat POST any differently than BAR, given the real limitations to\nvisibility?\n\nThanks,\nWalden\n\n"}}