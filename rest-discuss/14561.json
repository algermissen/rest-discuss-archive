{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"0-Y9XxJyUslSAuVEFckpFukbvYvTX_bjGehNZD2Usf-f-lQ1v26BU5LQ07eAOcINpZAAM6LUmdWFKIZ7MLX4U3inPUf6djE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"How can a framework/library encourage REST-ful development?","postDate":"1263587240","msgId":14561,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":14562,"prevInTime":14560,"nextInTime":14562,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"Recently, I ve been thinking about how a coding framework or library can influence the way developers implement applications. What would a coding environment","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98461 invoked from network); 15 Jan 2010 20:27:21 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m3.grp.sp2.yahoo.com with QMQP; 15 Jan 2010 20:27:21 -0000\r\nX-Received: from unknown (HELO mail-fx0-f213.google.com) (209.85.220.213)\n  by mta2.grp.sp2.yahoo.com with SMTP; 15 Jan 2010 20:27:21 -0000\r\nX-Received: by fxm5 with SMTP id 5so559523fxm.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 15 Jan 2010 12:27:20 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.14.141 with SMTP id g13mr3104535faa.54.1263587240259; Fri, \n\t15 Jan 2010 12:27:20 -0800 (PST)\r\nDate: Fri, 15 Jan 2010 15:27:20 -0500\r\nX-Google-Sender-Auth: 30b70190c8c09172\r\nMessage-ID: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: How can a framework/library encourage REST-ful development?\r\nX-Yahoo-Group-Post: member; u=69164307; y=XLyQITSX-IMsY_ujqOT7XIXgqC9AVdExWvOSq7VXwY6h\r\nX-Yahoo-Profile: mamund\r\n\r\nRecently, I&#39;ve been thinking about how a coding framework or library\ncan influence the way developers implement applications. What would a\ncoding environment look like if it was meant to encourage results that\nfollowed a particular _architectural_ style (not programming style).\n\nIOW, is there a way to craft a framework that constrains developers in\nways that results in a REST-ful implementation of the application?\n\nI did some digging, but have yet to find any writing on this topic.\n\nHere are some &quot;off-the-top-of-my-head&quot; items:\n\nFor example, a framework might exhibit these REST-like traits:\n- there is a clear separation of concerns between resource\nidentifiers, resources, and representations\n- developers must define a resource as the public application interface\n- the Uniform Interface is enforced (e.g. those methods are the only\npublic members exposed for a resource)\n- developers must always associate one or more representation formats\nwith a resource and/or resource method before the implementation is\nvalid\n- there is no way to define and use server-side session state objects\n\nSome HTTP-specific traits might be:\n- support for content negotiation is &quot;baked-in&quot;\n- support for conditional requests is &quot;baked-in&quot; and automatic\n- RPC-like implementation patterns (e.g. gateway URIs) are somehow\ndifficult to implement or are flagged as invalid\n\nAny comments? Is this line of thinking pure folly? old hat? already\nresolved sufficiently?\n\nmca\nhttp://amundsen.com/blog/\n\n"}}