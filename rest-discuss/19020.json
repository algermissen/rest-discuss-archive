{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"_Q8iGc2huidwrPOh4NVUImuKxRqXDj2hnBoq_Qejd4Divq4sByAfqkd0lgfwFnzG8kHra_VD2wuUWUAYT7Z3Kx7KyXxbFJyLEQbHV-HrSg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] ATOM representation of search result facets","postDate":"1346482332","msgId":19020,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTIwOTAxMDA1MjEyLjdhN2UyZDk2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDFDRDU1RjA0NTM4REVBNEY4NUYzQURGNzc0NTQ2NEFGMUFFNDg3ODBAUy1CU0MtTUJYMS5ucm4ubnJjYW4uZ2MuY2E+","referencesHeader":"PENBQkpGS29mOTRxNFdablBfRlBBeER2NWV4RDR5S0ZGLTh3QzJaYmtMNXdicy1lUGlDQUBtYWlsLmdtYWlsLmNvbT4JPDFDRDU1RjA0NTM4REVBNEY4NUYzQURGNzc0NTQ2NEFGMUFFNDYzODhAUy1CU0MtTUJYMS5ucm4ubnJjYW4uZ2MuY2E+CTwyMDEyMDgyOTIzMTAyMy4yYjU3YTNmNS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwxQ0Q1NUYwNDUzOERFQTRGODVGM0FERjc3NDU0NjRBRjFBRTQ4NzgwQFMtQlNDLU1CWDEubnJuLm5yY2FuLmdjLmNhPg=="},"prevInTopic":19019,"nextInTopic":19025,"prevInTime":19019,"nextInTime":19021,"topicId":19002,"numMessagesInTopic":33,"msgSnippet":"... Nor does such requirement exist. ... I see nothing in the self-descriptive messaging constraint which requires markup-language versioning to be expressed","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38331 invoked from network); 1 Sep 2012 06:52:40 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m10.grp.sp2.yahoo.com with QMQP; 1 Sep 2012 06:52:40 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta5.grp.sp2.yahoo.com with SMTP; 1 Sep 2012 06:52:40 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 6F704509B4;\n\tSat,  1 Sep 2012 02:52:39 -0400 (EDT)\r\nDate: Sat, 1 Sep 2012 00:52:12 -0600\r\nTo: &quot;Rushforth, Peter&quot; &lt;Peter.Rushforth@...&gt;\r\nCc: Rich Cariens &lt;richcariens@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20120901005212.7a7e2d96.eric@...&gt;\r\nIn-Reply-To: &lt;1CD55F04538DEA4F85F3ADF7745464AF1AE48780@...&gt;\r\nReferences: &lt;CABJFKof94q4WZnP_FPAxDv5exD4yKFF-8wC2ZbkL5wbs-ePiCA@...&gt;\n\t&lt;1CD55F04538DEA4F85F3ADF7745464AF1AE46388@...&gt;\n\t&lt;20120829231023.2b57a3f5.eric@...&gt;\n\t&lt;1CD55F04538DEA4F85F3ADF7745464AF1AE48780@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] ATOM representation of search result facets\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Rushforth, Peter&quot; wrote:\n&gt; \n&gt; All that said, there is nothing about application/atom+xml which\n&gt; implies this extension.\n&gt;\n\nNor does such requirement exist.\n\n&gt;\n&gt; To be self-descriptive, to pick up on the theme from another thread,\n&gt; the client has to request these semantics somehow, and the server has\n&gt; to communicate the fact that they are being provided.  The RESTful\n&gt; way to do this is not through sniffing, but media types.\n&gt; \n\nI see nothing in the self-descriptive messaging constraint which\nrequires markup-language versioning to be expressed via media type.  To\nme, REST is contained entirely within Dr. Fielding&#39;s dissertation,\nincluding the definitions of terms used to distinguish one\narchitectural style from another.  There are other ways of doing\nthings, but if they require any redefinition of Roy&#39;s terms in order to\nbe considered RESTful, the disservice isn&#39;t being done to REST(tm), but\nto REST&#39;s usefulness as an evaluation tool.\n\nNobody has to implement REST, but if your idiom is that of networked\nhypertext systems, an understanding of where you are deviating from\nREST and the consequences of same, is required.  We can&#39;t begin to\ndiscuss the real-world consequences of overloading media type to\nprecisely capture the meaning of a hypertext interface, versus using\nmedia type to identify a codec, unless we can agree that these are two\ndifferent approaches with different outcomes -- and thus worthy of\nseparate definitions so we can have that discussion using precise terms.\n\nWhich we can&#39;t do, if the starting point of the debate is that one of\nthese approaches just isn&#39;t RESTful enough, despite meeting Roy&#39;s\ndefinition of self-descriptiveness, causing the discussion to degrade\ninto accusations of pedantry and un-usefulness.  Do what&#39;s best for your\nsystem, whether the result is precisely RESTful or not isn&#39;t a value\njudgment, it&#39;s an evaluation tool.  Instead of attempting to redefine\nFielding in an effort to attach the REST(tm) label, embrace REST the\ntool by using Fielding&#39;s definitions to explain what tradeoffs you\nmade, and why you made them for the system in question.\n\nREST is an idealized model, if fewer people would set it as a goal with\nthe naive expectation that real-world systems are even likely to fully\ncomply, we&#39;d see less effort made to pass anything and everything off as\nRESTful.\n\n&gt;\n&gt; If the client does request application/atom+xml and receives the\n&gt; extension, no harm is done because of atom&#39;s must ignore model.\n&gt; \n\nGraceful degradation doesn&#39;t harm any clients, right.\n\n&gt;\n&gt; If the client does request the extension via a custom media type, it\n&gt; expects to be able to process the response based on the Content-Type\n&gt; value returned.\n&gt; \n\nNow you&#39;re talking about no degradation, as if the only clients that\ncare about your payload are privy to your application.  Having an\ninfinite number of finely-grained media types defeats the whole point\nof self-descriptive messaging by actually reducing visibility, again\nsticking with Roy&#39;s definition of terms.  One key to the successful\nscaling of the Web has been the small number of ubiquitous, coarse-\ngrained media types.  This is a feature, not a bug; yes, there are\ndisadvantages, but it&#39;s a tradeoff we&#39;re willing to make in REST:\n\n&quot;The trade-off, though, is that a uniform interface degrades\nefficiency, since information is transferred in a standardized form\nrather than one which is specific to an application&#39;s needs.&quot;\n\nWhether you are willing to make the same tradeoff in your system is for\nyou to decide, but it&#39;s incorrect to claim that using more application-\nspecific media types makes the result more RESTful (or self-descriptive,\nor visible).  What this tradeoff allows, is for your system to scale by\ntargeting the deployed architecture of intermediaries which do all\nsorts of wonderful things with your content based on the ubiquitous\nmarkup you&#39;re using, and simply don&#39;t care about understanding any of\nyour domain-specific vocabulary.\n\nThe reason fine-grained media types exclude intermediary participation,\nis because you&#39;ve tightly coupled client to server.  As designed (by\nwhich I mean coarse-grained), the concept of media types promotes loose\ncoupling.  This has led to a proliferation of intermediaries performing\nevery task under the sun nowadays, for billions of *different* systems\nusing essentially *the same* small number of ubiquitous media types.\nRestricting intermediaries to only those which fully understand every\nlast bit of domain-specific vocabulary your system uses, completely\nmisses the point of REST as an architectural style, by lacking the\nkey ingredient for meeting REST&#39;s scalability goal (ubiquitous media\ntypes).\n\nProfile attributes, otoh, offer a reasonable compromise by more fully\ndescribing the document semantics (not to be confused with self-\ndescriptive messaging, currently the most prevalent misconception of\nREST out there imo) while still identifying the coarse-grained codec\nwire-speed clients (by which I mean intermediaries) need to determine\nif there&#39;s *anything* they can do with the payload, which likely has\nnothing to do with the specifics of your application.\n\n-Eric\n\n"}}