{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":180614093,"authorName":"Stuart Charlton","from":"Stuart Charlton &lt;stuartcharlton@...&gt;","profile":"stuartcharlton","replyTo":"SENDER","senderId":"LlVXcTN_d-GmkjzCqwMlw1eDEwhtpuDViGUTDNwQSNRutNHVtoAFp2aNr_gpfYZJNH-6SfWD0Rw5INcPo_AHVEI7rP3RvZ9Y8RssrZd9s5Wx","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST and ESB","postDate":"1200845450","msgId":10292,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQzODMzNy43MTQwMC5xbUB3ZWI4ODAxNS5tYWlsLnJlMi55YWhvby5jb20+"},"prevInTopic":10291,"nextInTopic":10313,"prevInTime":10291,"nextInTime":10293,"topicId":10205,"numMessagesInTopic":16,"msgSnippet":"For what its worth, here is one version of history: BEA s ESB arose from field experience with WebLogic Integration 8.1. Â  WLI was traditionally intended to","rawEmail":"Return-Path: &lt;stuartcharlton@...&gt;\r\nX-Sender: stuartcharlton@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88216 invoked from network); 20 Jan 2008 16:10:51 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m36.grp.scd.yahoo.com with QMQP; 20 Jan 2008 16:10:51 -0000\r\nX-Received: from unknown (HELO web88015.mail.re2.yahoo.com) (206.190.39.220)\n  by mta16.grp.scd.yahoo.com with SMTP; 20 Jan 2008 16:10:51 -0000\r\nX-Received: (qmail 72657 invoked by uid 60001); 20 Jan 2008 16:10:50 -0000\r\nX-YMail-OSG: FNI1bV0VM1mDqOulpQdkXQVc9zyCOStFLDYnLlMXU0ZDiDyIYIvuonALlmPTV9p6G9m2cwbkuUAuuJikcjT.L0yoS.yG7zBIuL_cUlZvvaIBcmOwE54-\r\nX-Received: from [68.142.241.238] by web88015.mail.re2.yahoo.com via HTTP; Sun, 20 Jan 2008 08:10:50 PST\r\nX-Mailer: YahooMailWebService/0.7.158.1\r\nDate: Sun, 20 Jan 2008 08:10:50 -0800 (PST)\r\nTo: Chuck Hinson &lt;chuck.hinson@...&gt;\r\nCc: =?iso-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;,\n  &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-1981389312-1200845450=:71400&quot;\r\nMessage-ID: &lt;438337.71400.qm@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Stuart Charlton &lt;stuartcharlton@...&gt;\r\nSubject: Re: [rest-discuss] REST and ESB\r\nX-Yahoo-Group-Post: member; u=180614093; y=KDyyrVaxBqsKgG3tbfPPLy35CIuk-YnmJldur9LmRb5TmQWdB8Zukr4\r\nX-Yahoo-Profile: stuartcharlton\r\n\r\n\r\n--0-1981389312-1200845450=:71400\r\nContent-Type: text/html; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;body bgcolor=3D&quot;#FFFFFF&quot;&gt;&lt;div&gt;For what its worth, here is one versio=\r\nn of history:&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;B=\r\nEA&#39;s ESB arose from field experience with WebLogic Integration 8.1. =A0 WLI=\r\n was traditionally intended to be a &quot;practical&quot; process programming and wor=\r\nkflow engine.=A0 In WLI 7, it was more of a workflow engine, in WLI 8.1 it =\r\nbecame more of a dynamic process programming language and data transformati=\r\non engine.=A0 You could draw a process, throw some transformations in, and =\r\nif stateless, it would compile down to a stateless session bean and execute=\r\n very quickly (milliseconds).=A0 or you could do classic stateful &quot;business=\r\n processes&quot; if you wanted.=A0=A0&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeh=\r\nolder&quot;&gt;&lt;/div&gt;&lt;div&gt;In 2003, this was arguably unheard of: most BPM environme=\r\nnts were toys or very human task focused.=A0 Here was something that could =\r\nimprove the productivity and monitoring of system to system\n interactions..=\r\n&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;The most popul=\r\nar application seemed to be building processes to route mostly&lt;/div&gt;&lt;div&gt;st=\r\nateless messages in a variety of message exchange patterns , transform data=\r\n ( we made even COBOL copy books XQuery-able), track all activities, and ha=\r\nndle exceptions or compensations.=A0 You barely had to write any code:=A0 i=\r\nt was all Xquery, graphical processes, and config.&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;w=\r\nebkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;The Aqualogic product started with the =\r\nidea of improving WLI&#39;s message broker feature.=A0 &quot;what if we could split =\r\nthis out and make a product that specializes in this use?=A0 eliminating al=\r\nl need for java coding?=A0 making it more like a browser based appliance&quot;&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;Anyway, that&#39;s &quot;=\r\na folklore version&quot; of what happened from a non-insider (I joined BEA as it=\r\n was being built), but it fits how i saw WLI being used and how\n I&#39;ve seem =\r\nALSB used these past 3 years.=A0 it is primarily a config management enviro=\r\nnment for a couple of dynamic languages , a message queuing and transaction=\r\n engine (weblogic) and a monitoring framework.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So,=\r\n to the OP, i would say that :&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placehol=\r\nder&quot;&gt;&lt;/div&gt;&lt;div&gt;1. any good ESB should be as productive as a dynamic langua=\r\nge (and surrounding tools &amp; frameworks) at making your legacy RESTful.=\r\n=A0 Otherwise it probably will just be an impediment.=A0 I consider Xquery =\r\nquite productive, but Ruby or Python also rock.=A0 I know ESBs that underst=\r\nand EBCDIC and zones decimal fields, but not many Ruby libraries.=A0 etc.&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;2. Beware depend=\r\nency management and config management.=A0 ie. howbmucj is roll your own, ho=\r\nw much is ootb? The dynamic approach may involve a lot of &quot;roll your own&quot;, =\r\nwhich is ok if you have the skills.=A0 an ESB may have more ootb but\n that =\r\nrequires training, may be incomplete feature-wise, etc&lt;/div&gt;&lt;div&gt;&lt;br class=\r\n=3D&quot;webkit-block-placeholder&quot;&gt;&lt;/div&gt;&lt;div&gt;3. Also, beware that some ESBs may=\r\n not support HTTP fully.... (ALSB is overdue for some improvements here, th=\r\nankfully they&#39;re going to do something about it, just not sure what point r=\r\nelease. likely this year.)&lt;/div&gt;&lt;div&gt;&lt;br class=3D&quot;webkit-block-placeholder&quot;=\r\n&gt;&lt;/div&gt;&lt;div&gt;Cheers&lt;/div&gt;&lt;div&gt;Stu&lt;/div&gt;&lt;div&gt;&lt;br&gt;Sent from my iPhone&lt;/div&gt;&lt;di=\r\nv&gt;&lt;br&gt;On Jan 20, 2008, at 9:26 AM, &quot;Chuck Hinson&quot; &lt;&lt;a href=3D&quot;mailto:chu=\r\nck.hinson@...&quot;&gt;chuck.hinson@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;di=\r\nv&gt;&lt;/div&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;\n\n\n\n\n\n    &lt;div id=3D&quot;ygrp-text&quot;&gt;\n   =\r\n         &lt;p&gt;I&#39;m not sure what definition you&#39;re using for an ESB, but the o=\r\nnly two&lt;br&gt;\nthings in your list where an ESB might be a match are multiple&lt;=\r\nbr&gt;\nadapters and monitoring.  Choreography is another aspect that might&lt;br&gt;=\r\n\nsuggest an ESB.&lt;br&gt;\n&lt;br&gt;\nAbout a year ago, we did some research into ESBs =\r\n- BEA&#39;s Aqualogic&lt;br&gt;\nESB, and Progress Software&#39;s Sonic - and I have to sa=\r\ny that while I&lt;br&gt;\nfound some of the capabilities interesting or novel, I r=\r\neally couldn&#39;t&lt;br&gt;\nthink of any problems I&#39;d had (or might have) that an ES=\r\nB would help&lt;br&gt;\nme solve.  Interestingly, when we tried to apply them to s=\r\nome problems&lt;br&gt;\nwe thought they might help with, they came up short and we=\r\n ended up&lt;br&gt;\nhaving to do stuff the old-fashioned way.&lt;br&gt;\n&lt;br&gt;\nOf course,=\r\n it may be that we just lacked sufficient imagination.&lt;br&gt;\n&lt;br&gt;\n--Chuck&lt;br&gt;=\r\n\n&lt;br&gt;\nOn Jan 17, 2008 6:27 AM, Ant=F3nio Mota &lt;&lt;a href=3D&quot;mailto:amsmota=\r\n%40gmail.com&quot;&gt;amsmota@gmail.&lt;wbr&gt;com&lt;/wbr&gt;&lt;/a&gt;&lt;wbr&gt;&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;=\r\n\n&gt;  Can I have some help on this? Basically I have two competing models&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&gt; REST + isolated services build on Dynamic Languages&lt;br&gt;\n&=\r\ngt;&lt;br&gt;\n&gt; REST + ESB&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; and I have to justify when one or=\r\n the other are better suited. As I said, I&lt;br&gt;\n&gt; have prepared a questio=\r\nnnaire to be answered for each of our conceived&lt;br&gt;\n&gt; services, in which=\r\n the more &quot;yes&quot; answers the more a REST + ESB approach&lt;br&gt;\n&gt; should be t=\r\naken.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;  - Are the processes long running=\r\n processes ?&lt;br&gt;\n&gt;  - Do we need to interact with WS-* protocols ?&lt;br&gt;\n&=\r\ngt;  - Is a Application Description necessary ?&lt;br&gt;\n&gt;  - Do we need mult=\r\niple adapters ?&lt;br&gt;\n&gt;  - Do we need Modeling ?&lt;br&gt;\n&gt;  - Do we need Mo=\r\nnitoring ?&lt;br&gt;\n&gt;  - Are there Performance issues, either measured or per=\r\nceived ?&lt;br&gt;\n&gt;  - What the level of Compensation is required ?&lt;br&gt;\n&gt; =\r\n - Is there any legacy data integration needed ?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt; Cheers all.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt; On 16/01/2008, amsmota &lt;&lt;a href=3D&quot;mailto:amsmota%40gmail.com&quot;=\r\n&gt;amsmota@gmail.&lt;/a&gt;&lt;/wbr&gt;&lt;a href=3D&quot;mailto:amsmota%40gmail.com&quot;&gt;&lt;wbr&gt;com&lt;/w=\r\nbr&gt;&lt;/a&gt;&lt;wbr&gt;&gt; wrote:&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; =\r\n&gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; I have to put up a architect=\r\nure design to implement some services and&lt;br&gt;\n&gt; &gt; we (at my departmen=\r\nt) already have agreed that it will be based on a&lt;br&gt;\n&gt; &gt; REST, meani=\r\nng we will give access to the services by some public&lt;br&gt;\n&gt; &gt; availab=\r\nle resources addressed by some URI&#39;s.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Now the d=\r\niscussion is to use a ESB or do it the &quot;REST + dynamic&lt;br&gt;\n&gt; &gt; langua=\r\nges&quot; way. What I come up with was a kind of &quot;questionnaire&quot; to&lt;br&gt;\n&gt; &gt=\r\n; be answered for each service (after we had agreed what are the&lt;br&gt;\n&gt; &=\r\ngt; services exposed) in a manner that most of the answers is yes that is&lt;b=\r\nr&gt;\n&gt; &gt; a indication that using a ESB is more suitable for that partic=\r\nular&lt;br&gt;\n&gt; &gt; service.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Also to note that t=\r\nhis is a Java shop, so people are more confortable&lt;br&gt;\n&gt; &gt; with it th=\r\nan &quot;dynamic languages&quot; and we are already using Mule but&lt;br&gt;\n&gt; &gt; just=\r\n to receive mails now.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; The questions I put up a=\r\nre:&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; - Are the processes long running processes =\r\n?&lt;br&gt;\n&gt; &gt; - Do we need to interact with WS-* protocols ?&lt;br&gt;\n&gt; &gt=\r\n; - Is a Application Description necessary ?&lt;br&gt;\n&gt; &gt; - Do we need mul=\r\ntiple adapters ?&lt;br&gt;\n&gt; &gt; - Do we need Modeling ?&lt;br&gt;\n&gt; &gt; - Do w=\r\ne need Monitoring ?&lt;br&gt;\n&gt; &gt; - Are there Performance issues, either me=\r\nasured or perceived ?&lt;br&gt;\n&gt; &gt; - What the level of Compensation is req=\r\nuired ?&lt;br&gt;\n&gt; &gt; - Is there any legacy data integration needed ?&lt;br&gt;\n&=\r\ngt; &gt;&lt;br&gt;\n&gt; &gt; Are this ok? Is there other ways to access this ques=\r\ntion?&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Many thanks.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; --&lt;br&gt;\n&gt; Melhores cumprimentos / Bei=\r\nr beannacht / Best regards&lt;br&gt;\n&gt; Ant=F3nio Santos Mota &lt;br&gt;\n&lt;/wbr&gt;&lt;/p&gt;&lt;w=\r\nbr&gt;\n    &lt;/wbr&gt;&lt;/div&gt;&lt;wbr&gt;  \n\n    \n\n\n&lt;!--End group email --&gt;\n\n&lt;/wbr&gt;&lt;/div&gt;&lt;/=\r\nblockquote&gt;&lt;/body&gt;&lt;/html&gt;\r\n--0-1981389312-1200845450=:71400\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nFor what its worth, here is one version of history:\n\nBEA&#39;s ESB arose from f=\r\nield experience with WebLogic Integration 8.1.   WLI was traditionally inte=\r\nnded to be a &quot;practical&quot; process programming and workflow engine.  In WLI 7=\r\n, it was more of a workflow engine, in WLI 8.1 it became more of a dynamic =\r\nprocess programming language and data transformation engine.  You could dra=\r\nw a process, throw some transformations in, and if stateless, it would comp=\r\nile down to a stateless session bean and execute very quickly (milliseconds=\r\n).  or you could do classic stateful &quot;business processes&quot; if you wanted.  \n=\r\n\nIn 2003, this was arguably unheard of: most BPM environments were toys or =\r\nvery human task focused.  Here was something that could improve the product=\r\nivity and monitoring of system to system interactions..\n\nThe most popular a=\r\npplication seemed to be building processes to route mostly\nstateless messag=\r\nes in a variety of message exchange patterns , transform data ( we made eve=\r\nn COBOL copy books XQuery-able), track all activities, and handle exception=\r\ns or compensations.  You barely had to write any code:  it was all Xquery, =\r\ngraphical processes, and config.\n\nThe Aqualogic product started with the id=\r\nea of improving WLI&#39;s message broker feature.  &quot;what if we could split this=\r\n out and make a product that specializes in this use?  eliminating all need=\r\n for java coding?  making it more like a browser based appliance&quot;\n\nAnyway, =\r\nthat&#39;s &quot;a folklore version&quot; of what happened from a non-insider (I joined B=\r\nEA as it was being built), but it fits how i saw WLI being used and how I&#39;v=\r\ne seem ALSB used these past 3 years.  it is primarily a config management e=\r\nnvironment for a couple of dynamic languages , a message queuing and transa=\r\nction engine (weblogic) and a monitoring framework.\n\nSo, to the OP, i would=\r\n say that :\n\n1. any good ESB should be as productive as a dynamic language =\r\n(and surrounding tools & frameworks) at making your legacy RESTful.  Otherw=\r\nise it probably will just be an impediment.  I consider Xquery quite produc=\r\ntive, but Ruby or Python also rock.  I know ESBs that understand EBCDIC and=\r\n zones decimal fields, but not many Ruby libraries.  etc.\n\n2. Beware depend=\r\nency management and config management.  ie. howbmucj is roll your own, how =\r\nmuch is ootb? The dynamic approach may involve a lot of &quot;roll your own&quot;, wh=\r\nich is ok if you have the skills.  an ESB may have more ootb but that requi=\r\nres training, may be incomplete feature-wise, etc\n\n3. Also, beware that som=\r\ne ESBs may not support HTTP fully.... (ALSB is overdue for some improvement=\r\ns here, thankfully they&#39;re going to do something about it, just not sure wh=\r\nat point release. likely this year.)\n\nCheers\nStu\n\nSent from my iPhone\n\nOn J=\r\nan 20, 2008, at 9:26 AM, &quot;Chuck Hinson&quot; &lt;chuck.hinson@...&gt; wrote:\n\nI&#39;=\r\nm not sure what definition you&#39;re using for an ESB, but the only two\nthings=\r\n in your list where an ESB might be a match are multiple\nadapters and monit=\r\noring. Choreography is another aspect that might\nsuggest an ESB.\n\nAbout a y=\r\near ago, we did some research into ESBs - BEA&#39;s Aqualogic\nESB, and Progress=\r\n Software&#39;s Sonic - and I have to say that while I\nfound some of the capabi=\r\nlities interesting or novel, I really couldn&#39;t\nthink of any problems I&#39;d ha=\r\nd (or might have) that an ESB would help\nme solve. Interestingly, when we t=\r\nried to apply them to some problems\nwe thought they might help with, they c=\r\name up short and we ended up\nhaving to do stuff the old-fashioned way.\n\nOf =\r\ncourse, it may be that we just lacked sufficient imagination.\n\n--Chuck\n\nOn =\r\nJan 17, 2008 6:27 AM, Ant=F3nio Mota &lt;amsmota@...&gt; wrote:\n&gt;\n&gt; Can I h=\r\nave some help on this? Basically I have two competing models\n&gt;\n&gt; REST + iso=\r\nlated services build on Dynamic Languages\n&gt;\n&gt; REST + ESB\n&gt;\n&gt; and I have to =\r\njustify when one or the other are better suited. As I said, I\n&gt; have prepar=\r\ned a questionnaire to be answered for each of our conceived\n&gt; services, in =\r\nwhich the more &quot;yes&quot; answers the more a REST + ESB approach\n&gt; should be tak=\r\nen.\n&gt;\n&gt;\n&gt;\n&gt; - Are the processes long running processes ?\n&gt; - Do we need to =\r\ninteract with WS-* protocols ?\n&gt; - Is a Application Description necessary ?=\r\n\n&gt; - Do we need multiple adapters ?\n&gt; - Do we need Modeling ?\n&gt; - Do we nee=\r\nd Monitoring ?\n&gt; - Are there Performance issues, either measured or perceiv=\r\ned ?\n&gt; - What the level of Compensation is required ?\n&gt; - Is there any lega=\r\ncy data integration needed ?\n&gt;\n&gt;\n&gt;\n&gt; Cheers all.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On 16/01/200=\r\n8, amsmota &lt;amsmota@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I have to=\r\n put up a architecture design to implement some services and\n&gt; &gt; we (at my =\r\ndepartment) already have agreed that it will be based on a\n&gt; &gt; REST, meanin=\r\ng we will give access to the services by some public\n&gt; &gt; available resource=\r\ns addressed by some URI&#39;s.\n&gt; &gt;\n&gt; &gt; Now the discussion is to use a ESB or do=\r\n it the &quot;REST + dynamic\n&gt; &gt; languages&quot; way. What I come up with was a kind =\r\nof &quot;questionnaire&quot; to\n&gt; &gt; be answered for each service (after we had agreed=\r\n what are the\n&gt; &gt; services exposed) in a manner that most of the answers is=\r\n yes that is\n&gt; &gt; a indication that using a ESB is more suitable for that pa=\r\nrticular\n&gt; &gt; service.\n&gt; &gt;\n&gt; &gt; Also to note that this is a Java shop, so peo=\r\nple are more confortable\n&gt; &gt; with it than &quot;dynamic languages&quot; and we are al=\r\nready using Mule but\n&gt; &gt; just to receive mails now.\n&gt; &gt;\n&gt; &gt; The questions I=\r\n put up are:\n&gt; &gt;\n&gt; &gt; - Are the processes long running processes ?\n&gt; &gt; - Do =\r\nwe need to interact with WS-* protocols ?\n&gt; &gt; - Is a Application Descriptio=\r\nn necessary ?\n&gt; &gt; - Do we need multiple adapters ?\n&gt; &gt; - Do we need Modelin=\r\ng ?\n&gt; &gt; - Do we need Monitoring ?\n&gt; &gt; - Are there Performance issues, eithe=\r\nr measured or perceived ?\n&gt; &gt; - What the level of Compensation is required =\r\n?\n&gt; &gt; - Is there any legacy data integration needed ?\n&gt; &gt;\n&gt; &gt; Are this ok? =\r\nIs there other ways to access this question?\n&gt; &gt;\n&gt; &gt; Many thanks.\n&gt; &gt;\n&gt; &gt;\n&gt;=\r\n\n&gt;\n&gt;\n&gt; --\n&gt; Melhores cumprimentos / Beir beannacht / Best regards\n&gt; Ant=F3n=\r\nio Santos Mota \n\n\n\r\n--0-1981389312-1200845450=:71400--\r\n\n"}}