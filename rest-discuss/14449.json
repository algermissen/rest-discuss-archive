{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"N3vZKy3NW48W9Lep09CeWmWtvj9zYxDrtIv7Vxn-V4piu4dE_kGuenwW_YJQrN0WaX-aMxV88D_-xPsMK73Zr8bxeL1bIKc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] A different approach to supporting transactions \tover HTTP","postDate":"1262787290","msgId":14449,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMTA2MDYxNHc2ZTkwY2Y1MHBiNDJkZjgxZWZmZjdjMGViQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDM0M2VjYjNlMTAwMTA2MDQ0NXE3Yzk3YjU0NWtjNTFiMmYwMjY2OTgwYzIzQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTA1MTkyMXMzMzBiZjE1Y3I5YjE0YmVhYTJmYjgwNmRhQG1haWwuZ21haWwuY29tPgkgPDM0M2VjYjNlMTAwMTA2MDQ0NXE3Yzk3YjU0NWtjNTFiMmYwMjY2OTgwYzIzQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14448,"nextInTopic":14450,"prevInTime":14448,"nextInTime":14450,"topicId":14439,"numMessagesInTopic":17,"msgSnippet":"Bob: Thanks for the feedback. I agree that my example does not cover all possibilities. In fact, I referenced (as  final commit ) the interaction type you","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 66255 invoked from network); 6 Jan 2010 14:14:51 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 6 Jan 2010 14:14:51 -0000\r\nX-Received: from unknown (HELO mail-fx0-f212.google.com) (209.85.220.212)\n  by mta2.grp.sp2.yahoo.com with SMTP; 6 Jan 2010 14:14:51 -0000\r\nX-Received: by mail-fx0-f212.google.com with SMTP id 4so14345328fxm.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 06 Jan 2010 06:14:50 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.15.86 with SMTP id j22mr9091114faa.47.1262787290547; Wed, \n\t06 Jan 2010 06:14:50 -0800 (PST)\r\nIn-Reply-To: &lt;343ecb3e1001060445q7c97b545kc51b2f0266980c23@...&gt;\r\nReferences: &lt;b548df651001051921s330bf15cr9b14beaa2fb806da@...&gt;\n\t &lt;343ecb3e1001060445q7c97b545kc51b2f0266980c23@...&gt;\r\nDate: Wed, 6 Jan 2010 09:14:50 -0500\r\nX-Google-Sender-Auth: d46007d8ed43ddb3\r\nMessage-ID: &lt;b548df651001060614w6e90cf50pb42df81efff7c0eb@...&gt;\r\nTo: Bob Haugen &lt;bob.haugen@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] A different approach to supporting transactions \n\tover HTTP\r\nX-Yahoo-Group-Post: member; u=69164307; y=OEYY9J_mGEVxoriqXRc5V3LE-7w2pI7lzzFRm1kCavvO\r\nX-Yahoo-Profile: mamund\r\n\r\nBob:\n\nThanks for the feedback. I agree that my example does not cover all\np=\r\nossibilities. In fact, I referenced (as  &quot;final commit&quot;) the\ninteraction ty=\r\npe you mention here as one that I was not focusing upon\nin this first post.=\r\n\n\nSo far, I&#39;ve treated provisional-final work as application-level\nactivity=\r\n. The approach I outlined here attempts to describe a pattern\nfor handling =\r\ntransaction details when they are _not_ the primary\napplication activity, b=\r\nut orthogonal to it (if I&#39;m using that word\ncorrectly).\n\nHaving said that, =\r\nI think it is possible to use a &quot;uniform transaction\nservice interface&quot; app=\r\nroach to handle provisional-final interactions.\nIn this case, a Content-Tra=\r\nns:provisional-final header could be\nadvertised by servers and negotiated f=\r\nor by clients. The returned\nLINK[rel=3D&quot;trans&quot;] element (in a header or in =\r\nthe representation) could\npoint to a URI that allows not only a GET (to vie=\r\nw the status of the\ntransaction) and a DELETE (to cancel the open work), bu=\r\nt also a POST\nto execute the &quot;final.&quot; Alternately, the representation retur=\r\nned in\nthe GET to the transaction URI could contain one or more link elemen=\r\nts\nneeded to progress the unit of work to it&#39;s ultimate completion.\n\n\nmca\nh=\r\nttp://amundsen.com/blog/\n\n\n\n\nOn Wed, Jan 6, 2010 at 07:45, Bob Haugen &lt;bob.=\r\nhaugen@...&gt; wrote:\n&gt; On Tue, Jan 5, 2010 at 9:21 PM, mike amundsen &lt;m=\r\namund@...&gt; wrote:\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; A better approach is to expose an HTTP=\r\n-compliant transaction service\n&gt;&gt; interface (TSI) that takes advantage of t=\r\nhe protocol&#39;s inherent\n&gt;&gt; architectural style. Transactions over HTTP shoul=\r\nd be optional,\n&gt;&gt; discoverable, negotiable, based on optimistic commits, an=\r\nd (in the\n&gt;&gt; case of failures) use compenstating requests as a way to rever=\r\nse\n&gt;&gt; previous work.\n&gt;&gt; &lt;/snip&gt;\n&gt;\n&gt; Compensation often does not work. =A0Th=\r\nink of an offer to buy. =A0If it&#39;s\n&gt; optimistically committed, both buyer a=\r\nnd seller may take followup\n&gt; actions that could be difficult or impossible=\r\n to undo (e.g. starting\n&gt; production) if the offer is cancelled. =A0Alterna=\r\ntively, both parties\n&gt; may need to wait for some undeterminate timespan to =\r\nmake sure a\n&gt; compensating request does not arrive.\n&gt;\n&gt; A better alternativ=\r\ne in many situations, which I&#39;ve described on this\n&gt; list before, is to use=\r\n a provisional-final pattern, where the initial\n&gt; request is provisional, a=\r\nnd then both parties agree that it should be\n&gt; made final or cancelled. =A0=\r\nAll these interactions can be done\n&gt; RESTfully.\n&gt;\n&gt; An example in regular b=\r\nusiness practice is a request for quotation\n&gt; (provisional) followed by an =\r\norder (final).\n&gt;\n&gt; You may think that is not a transaction, but it follows =\r\na 2-phase\n&gt; commit pattern, altho it does not obey all the ACID rules (whic=\r\nh are\n&gt; impossible to follow RESTfully).\n&gt;\n\n"}}