{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"&quot;Sebastien Lambla&quot; &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"9Qn06gpnec6NVSNmR-5gfhdFVqsvDUj_zGT-GqKzjZXoVR1lq8CXxdPNBztWbIPD2VsEYjgKUdhybG-SDAQxLheehYiU63n4vygCICU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Media Type Version Negotiation","postDate":"1252662691","msgId":13224,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJMVTEwMi1EUzFGRTU4MjQ5M0MyRjFGNUE1M0ExREI1RTcwQHBoeC5nYmw+","inReplyToHeader":"PDdFMjM0RTQ2LTU3QjQtNDEzMy1CRTQ4LTE2REQ0NTBFOTdEMkBtYWMuY29tPg==","referencesHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPiA8N0UyMzRFNDYtNTdCNC00MTMzLUJFNDgtMTZERDQ1MEU5N0QyQG1hYy5jb20+"},"prevInTopic":13223,"nextInTopic":13225,"prevInTime":13223,"nextInTime":13225,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"My custom solution is and has always been to provide for backward and foward compat by using extensible serialization, not rely on a version to consider a","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 69656 invoked from network); 11 Sep 2009 09:51:34 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.re1.yahoo.com with QMQP; 11 Sep 2009 09:51:34 -0000\r\nX-Received: from unknown (HELO blu0-omc4-s22.blu0.hotmail.com) (65.55.111.161)\n  by mta1.grp.sp2.yahoo.com with SMTP; 11 Sep 2009 09:51:33 -0000\r\nX-Received: from BLU102-DS1 ([65.55.111.135]) by blu0-omc4-s22.blu0.hotmail.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Fri, 11 Sep 2009 02:51:33 -0700\r\nX-Originating-Email: [seb@...]\r\nMessage-ID: &lt;BLU102-DS1FE582493C2F1F5A53A1DB5E70@...&gt;\r\nReturn-Path: seb@...\r\nTo: &quot;&#39;Jan Algermissen&#39;&quot; &lt;algermissen1971@...&gt;,\n\t&quot;&#39;Tim Williams&#39;&quot; &lt;williamstw@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt; &lt;7E234E46-57B4-4133-BE48-16DD450E97D2@...&gt;\r\nIn-Reply-To: &lt;7E234E46-57B4-4133-BE48-16DD450E97D2@...&gt;\r\nDate: Fri, 11 Sep 2009 10:51:31 +0100\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 12.0\r\nThread-Index: Acoyo9ZO2hiSkg+zSHCJ5WmiwJ8IkgAIRgQQ\r\nContent-Language: en-gb\r\nX-OriginalArrivalTime: 11 Sep 2009 09:51:33.0101 (UTC) FILETIME=[71B369D0:01CA32C5]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nSubject: RE: [rest-discuss] Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=331949899; y=FD_kYewG4P23EO12VnrFDBqUmIaDRt3eTtfVY6plYYMyoFLK\r\nX-Yahoo-Profile: serialseb\r\n\r\nMy custom solution is and has always been to provide for backward and foward\ncompat by using extensible serialization, not rely on a version to consider\na document valid, and decide on the server side what resulting information\nis enough to process the request or not.\n\nI wonder, why is it that it seems so out of fashion for people to support\nextensible formats that have been well crafted for this, and why versioning\ncreeps back in every couple of hundred messages.\n\nI&#39;ll attempt what I think may be the root of the problem: object\nserialization in xml.\n\nAs long as we design architectures to accommodate restrictive tools, we&#39;re\ngoing to have a rough time.\n\nOh, and type/subtype;param=value is *not* the same as type/subtype, under\nany circumstance. If rails does things differently, then rails can&#39;t process\nmediatypes by the spec, which is a bug you should go and fill with them.\n\nSeb \n\n-----Original Message-----\nFrom: rest-discuss@yahoogroups.com [mailto:rest-discuss@yahoogroups.com] On\nBehalf Of Jan Algermissen\nSent: 11 September 2009 06:47\nTo: Tim Williams\nCc: rest-discuss@yahoogroups.com\nSubject: Re: [rest-discuss] Media Type Version Negotiation\n\nTim,\n\nOn Sep 11, 2009, at 5:04 AM, Tim Williams wrote:\n\n&gt; I&#39;m looking for pointers to best practices to versioning\n&gt; representations and support for client negotiation of specific\n&gt; versions.  To provide different representations of the same resource,\n&gt; the media type alone is sufficient to drive the content type\n&gt; negotiation.  For example, I might provide\n&gt;\n&gt; &lt;link type=&quot;application/atom+xml&quot;...\n&gt; &lt;link type=&quot;application/rss+xml&quot;...\n&gt;\n&gt; as alternate representations of the same resource.  The client could\n&gt; then be expected to pick a representation that it knows how to process\n&gt; and GET it.\n&gt;\n&gt; But suppose we have a different version of the *same* media type\n&gt; &quot;myformat&quot; - v1.0 and v2.0?  To complicate matters, let&#39;s suppose that\n&gt; [due to arrogant, insensitive developers:)] v2.0 is not backwards\n&gt; compatible with v1.0.  Assuming that the service is capable of serving\n&gt; representations in both v1.0 and v2.0, the question becomes how might\n&gt; the client negotiate one version over the other for the *same* media\n&gt; type?\n&gt;\n&gt; I&#39;ve attempted to think through the following:\n&gt;\n&gt; 1) (I can assume XML) XML versioning alone won&#39;t do because there&#39;s no\n&gt; way to indicate in the link itself that it&#39;s one version of the schema\n&gt; over the other.  So even if the client retrieved a v2.0 representation\n&gt; and stopped processing it after seeing an unfamiliar namespace (for\n&gt; example), it has no way to subsequently request the older version.\n&gt;\n&gt; 2) My initial response was to simply add the versioning information to\n&gt; the content-type itself (e.g. application/myformat.v20 and\n&gt; application/myformat.v10).  This makes negotiation and extensibility\n&gt; clean and elegant, but causes me two concerns:  the\n&gt; &quot;explosion-of-media-type&quot; concern and the\n&gt; &quot;nobody-else-seems-to-be-doing-it-that-way&quot;(based on current IANA)\n&gt; concern.\n\nThis is my preferred solution - with two caveats:\n\n1. Only put the major version number (indicating forward incompatible\nchange) in the media type name. IOW, do not change the media type\nname unless the change breaks older clients.\n\n2. Make forward incompatible changes a very rare thing (you should  \nanyhow)\nto avoid media type explosion\n\n&gt;\n&gt; 3)  The next thing that comes to mind is something like the &quot;level&quot;\n&gt; accept-extension exampled in rfc2616 (e.g. text/html;level=1).  In my\n&gt; scenario, would be something like: application/myformat;version=2.0 I\n&gt; suppose.\n\nI use this for indicating the minor version number so clients can pick\na certain minor version if they wish.\n\n&gt;\n&gt; I&#39;m aware, btw, of the value of re-using existing media types, this\n&gt; may be an edge case\n\nI think that it is an edge case on the open Web, but not inside an  \nenterprise\nwhere evolution is faster (e.g. due to new product requirements).\n\n\n&gt; for some but I&#39;d like to address an unfortunate\n&gt; reality inside some fast moving enterprises though.\n\nOh - yes, that&#39;s what I mean :-)\n\nJan\n\n&gt;\n&gt; Thoughts/pointers appreciated...\n&gt; --tim\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n\n------------------------------------\n\nYahoo! Groups Links\n\n\n\n\n\n"}}