{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"jqmys_BFUJeqYB87F9w0mFkBk8SoxXfkN-ZaOHMcT76bR2Kir_CxNGXO-8-k9JWLo7MbyGEw96Wbr8C7t_b3vBePooRdaRA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] PUT a resource + metadata simultaneously?","postDate":"1261581420","msgId":14366,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkxMjIzMDcxN3Q2NGRjZTgwMHc1MmUwYjc4MzA2NGZhOGYxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGhnamJ1Zys5NG1kQGVHcm91cHMuY29tPg==","referencesHeader":"PGhnamJ1Zys5NG1kQGVHcm91cHMuY29tPg=="},"prevInTopic":14363,"nextInTopic":14369,"prevInTime":14365,"nextInTime":14367,"topicId":14363,"numMessagesInTopic":3,"msgSnippet":"I recommend checking out the Atom Publishing Protocol s solution for handling media and related data [1]. I think the use of the Slug header [2] is also a","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9792 invoked from network); 23 Dec 2009 15:17:15 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m11.grp.re1.yahoo.com with QMQP; 23 Dec 2009 15:17:15 -0000\r\nX-Received: from unknown (HELO mail-fx0-f220.google.com) (209.85.220.220)\n  by mta3.grp.re1.yahoo.com with SMTP; 23 Dec 2009 15:17:15 -0000\r\nX-Received: by fxm20 with SMTP id 20so7458500fxm.15\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 23 Dec 2009 07:17:01 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.14.145 with SMTP id g17mr3074670faa.51.1261581421025; Wed, \n\t23 Dec 2009 07:17:01 -0800 (PST)\r\nIn-Reply-To: &lt;hgjbug+94md@...&gt;\r\nReferences: &lt;hgjbug+94md@...&gt;\r\nDate: Wed, 23 Dec 2009 10:17:00 -0500\r\nX-Google-Sender-Auth: 37af4022f1bc6bd6\r\nMessage-ID: &lt;b548df650912230717t64dce800w52e0b783064fa8f1@...&gt;\r\nTo: spamspambakedbeansandspam &lt;roger.gonzalez@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] PUT a resource + metadata simultaneously?\r\nX-Yahoo-Group-Post: member; u=69164307; y=xVW1omqwH4N25rhJxlj6ucSEDf3IbxMWw3Esy2ztr3Ir\r\nX-Yahoo-Profile: mamund\r\n\r\nI recommend checking out the Atom Publishing Protocol&#39;s solution for\nhandli=\r\nng media and related data [1]. I think the use of the Slug\nheader [2] is al=\r\nso a great way to deal with the friction between using\nPOST and PUT to uplo=\r\nad resources to the server.\n\nYou should also check out the Link Header draf=\r\nt [3] as a way to return\nlinks related resources. This is a handy solution =\r\nfor adding\nhyperlinks to binary responses such as images.\n\nmca\nhttp://amund=\r\nsen.com/blog/\n\n[1] http://tools.ietf.org/html/rfc5023#section-9.6\n[2] http:=\r\n//tools.ietf.org/html/rfc5023#section-9.7\n[3] http://tools.ietf.org/html/dr=\r\naft-nottingham-http-link-header-06\n\n\n\n\nOn Sat, Dec 19, 2009 at 15:09, spams=\r\npambakedbeansandspam\n&lt;roger.gonzalez@...&gt; wrote:\n&gt; I&#39;m building a HTT=\r\nP document store for a public API, and\n&gt; I&#39;m trying to determine the most R=\r\nESTful scheme for a uploading a (possibly new) document and associated meta=\r\ndata in one atomic transaction.\n&gt;\n&gt; It feels to me like I should be doing a=\r\n PUT, but due to the strict definition in rfc2616 section 9.6, it feels awk=\r\nward.\n&gt;\n&gt; My current implementation uses POST. =A0Let&#39;s say I want to write=\r\n &quot;vacation.jpg&quot;, a few properties, and also store an associated blob of EXI=\r\nF metadata. =A0My current hacky implementation works like this (URIs trunca=\r\nted for brevity):\n&gt;\n&gt; POST vacation.jpg?title=3DMy%20Vacation\n&gt; Content-typ=\r\ne: multipart/form-data\n&gt;\n&gt; ---\n&gt; Content-Disposition: form-data; name=3D&quot;do=\r\ncument&quot;\n&gt; Content-type: image/jpg\n&gt; ....\n&gt; ---\n&gt; Content-Disposition: form-=\r\ndata; name=3D&quot;exif&quot;\n&gt; Content-type: application/x-exif\n&gt;\n&gt; ....\n&gt;\n&gt; ---\n&gt; .=\r\n...\n&gt; 201 Created\n&gt; Content-location: vacation.jpg\n&gt; Content-type: applicat=\r\nion/json\n&gt; {\n&gt; =A0&quot;document&quot; : &quot;vacation.jpg&quot;,\n&gt; =A0&quot;*&quot; : &quot;vacation.jpg?con=\r\ntent=3D*&quot;, =A0// results in a multipart as posted\n&gt; =A0&quot;basic&quot; : &quot;vacation.=\r\njpg?content=3Dbasic&quot;, =A0// the urlencoded query\n&gt; =A0&quot;exif&quot; : &quot;vacation.jp=\r\ng?content=3Dexif&quot; =A0// returns just the exif\n&gt; }\n&gt;\n&gt; Each of these metadat=\r\na URIs supports standard PUT/GET/DELETE. =A0(Side note; I don&#39;t love my ret=\r\nurned entity, as the &quot;content=3D&quot; implementation actually supports arbitrar=\r\ny requesting combinations of multiple metadata entities.)\n&gt;\n&gt; In any case, =\r\nit all works fine, but my inclination is that I should really provide this =\r\nvia PUT. =A0As it stands, though &quot;GET vacation.jpg&quot; just returns the main i=\r\nmage/jpg document (without metadata). =A0This would appear to violate rfc26=\r\n16 section 9.6, which suggests that GET should return the same entity that =\r\nwas PUT, i.e. the multipart document.\n&gt;\n&gt; Solving is possible, but ugly. =\r\n=A0I can change the PUT uri to:\n&gt;\n&gt; PUT vacation.jpg?content=3D*\n&gt;\n&gt; which =\r\nwould have the property that the exact same URL can be used for a GET and i=\r\nt would indeed result in the original multipart entity, and I&#39;d rely on the=\r\n clause that says &quot;a PUT request on a general URI might result in several o=\r\nther URIs being defined by the origin server&quot;, one of which would be the ma=\r\nin resource, &quot;vacation.jpg&quot;.\n&gt;\n&gt; Unfortunately, discovering the &quot;vacation.j=\r\npg&quot; URI would be out of band with the protocol headers (I wish there were a=\r\n way to return content headers for each of the multipart entities sent!) an=\r\nd would have to be in the entity returned, as above. =A0So now GET looks us=\r\ner-friendly, but PUT is ugly.\n&gt;\n&gt; It looks weird and I can see this working=\r\n, but although I&#39;m\n&gt; fundamentally doing a PUT, I feel that I may be stretc=\r\nhing things a bit with the multipart entities, and maybe I should stick wit=\r\nh POST after all given the current spec(s).\n&gt;\n&gt; Thoughts?\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; -------=\r\n-----------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}