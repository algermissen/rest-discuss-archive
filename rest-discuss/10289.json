{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"tGPDFxcNcbmsrJe8625D5ZqbY-Ka-szZmXENvF7-AaPt8jAIVej6wOZHgR1Vmk_u273SZfwQK3MVuFV2uWD4bPkNfxT_6x9Xcg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] bootstrapping","postDate":"1200819396","msgId":10289,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDgwMTIwMDA1NnczZmVjMDJiNXBmZmVjN2M5NDlmYmNiYzM2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDE1NTAwMWM4NWIxZCRkNzcyOThkMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPgkgPDE0MzIwMWM4NWEzZSQ4ODM1ODQ2MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+CSA8NTAzN2I2ZTQwODAxMTgxOTA5cDZmYTk2MzYyamM3ODhhZTAyNmVhMzFmYzJAbWFpbC5nbWFpbC5jb20+CSA8MTQ1YzAxYzg1YTVhJDc0MmU3ZmEwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4JIDw1MDM3YjZlNDA4MDExODIyMDZxNTZhOWJlNzNtZTBmYzRhMWJlNjI2ZjE2MkBtYWlsLmdtYWlsLmNvbT4JIDwxNDg3MDFjODVhN2UkODU1ZTA2NTAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPgkgPDUwMzdiNmU0MDgwMTE5MDI1NGozNGMzMThmcjI1MjA5ZDA3ZThjZDRmY2ZAbWFpbC5nbWFpbC5jb20+CSA8MTUyYzAxYzg1YWU1JDExZTRmZjUwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4JIDw1MDM3YjZlNDA4MDExOTE4MDRpNDc5ZjdiZDVnMmZmZDFlNWE1YjZkYzU4QG1haWwuZ21haWwuY29tPgkgPDE1NTAwMWM4NWIxZCRkNzcyOThkMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+"},"prevInTopic":10288,"nextInTopic":10290,"prevInTime":10288,"nextInTime":10290,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... If I also decided to deliver a feed of recently completed tasks using Atom, would that be text/xml/atom, or text/xml/atom/xml/tasks? ... What s the problem","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 32464 invoked from network); 20 Jan 2008 08:56:38 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m50.grp.scd.yahoo.com with QMQP; 20 Jan 2008 08:56:38 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.158)\n  by mta16.grp.scd.yahoo.com with SMTP; 20 Jan 2008 08:56:38 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id 22so1464633fge.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 20 Jan 2008 00:56:37 -0800 (PST)\r\nX-Received: by 10.86.58.3 with SMTP id g3mr5131894fga.38.1200819396861;\n        Sun, 20 Jan 2008 00:56:36 -0800 (PST)\r\nX-Received: by 10.86.71.6 with HTTP; Sun, 20 Jan 2008 00:56:36 -0800 (PST)\r\nMessage-ID: &lt;5037b6e40801200056w3fec02b5pffec7c949fbcbc36@...&gt;\r\nDate: Sun, 20 Jan 2008 00:56:36 -0800\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;155001c85b1d$d77298d0$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;fmks78+k15k@...&gt;\n\t &lt;143201c85a3e$88358460$0702a8c0@...&gt;\n\t &lt;5037b6e40801181909p6fa96362jc788ae026ea31fc2@...&gt;\n\t &lt;145c01c85a5a$742e7fa0$0702a8c0@...&gt;\n\t &lt;5037b6e40801182206q56a9be73me0fc4a1be626f162@...&gt;\n\t &lt;148701c85a7e$855e0650$0702a8c0@...&gt;\n\t &lt;5037b6e40801190254j34c318fr25209d07e8cd4fcf@...&gt;\n\t &lt;152c01c85ae5$11e4ff50$0702a8c0@...&gt;\n\t &lt;5037b6e40801191804i479f7bd5g2ffd1e5a5b6dc58@...&gt;\n\t &lt;155001c85b1d$d77298d0$0702a8c0@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=319607554; y=R-l7qlpb2WjheuR2EOyuZ5jPpODbjJ4RdAFR29Itn92hPkfBdw\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn Jan 19, 2008 8:35 PM, Mike Schinkel &lt;mikeschinkel@...&gt; wrote:\n&gt; &gt; &gt; agree with Joe Gregorio [2] that you really need to find an\n&gt; &gt; &gt; existing mime-type that already supports tasks and use it,\n&gt; &gt; &gt; or define and register a new mime-type for your task list\n&gt; &gt; &gt; that fits your needs with a preference towards reusing a\n&gt; &gt; &gt; specific task-specific mime-type.  A description just does\n&gt; &gt; &gt; not cover it.\n&gt; &gt;\n&gt; &gt; Some people suggested you can also return HTML with\n&gt; &gt; microformats, or some other semantic HTML.  That&#39;s a\n&gt; &gt; possibility and turns out that handling semantic HTML with\n&gt; &gt; CSS selector is not much more complicated than XPath on XML.\n&gt; &gt; So let&#39;s say that&#39;s an alternative content type for some clients.\n&gt; &gt;\n&gt; &gt; Would we go and define the application/html+task MIME type?\n&gt; &gt; Is there a MIME type for blog posts (hAtom)?  What about eBay\n&gt; &gt; auctions, and you can bet people are scraping them left and right?\n&gt;\n&gt; You ask good rhetorical questions. In reality I think that we should in fact\n&gt; have an &quot;application/html+task&quot; MIME type, but ideally it would be\n&gt; &quot;text/html/task&quot; where all software that could process &quot;text/html&quot; would\n&gt; still process it as such, but sofware that understands &quot;text/html/task&quot;\n&gt; could know to handle it specially. But we know that handling of MIME types\n&gt; doesn&#39;t work that way, so unfortunately that wouldn&#39;t work, now will it?\n&gt; Another approach would be to add a &quot;Content-subtype&quot; header to that could be\n&gt; used to identify subtypes, but then we&#39;ve split type into two values instead\n&gt; of just one and that&#39;s not so good (although it could be a stop-gap approach\n&gt; assuming we ammend the relevent mime-type specs to say that Content-type can\n&gt; have any level of subtypes and use that when both client and server\n&gt; understand and use a Content-subtype when they don&#39;t.\n&gt;\n&gt; So what I&#39;m seeing is a need to be able to have a content type seen as both\n&gt; a general type &quot;text/html&quot; and as a more specific type &quot;text/html/task&quot; just\n&gt; as an object-oriented language that supports inheritance can interact with\n&gt; an object as it is was an instance of the base class and as an instance of\n&gt; the inherited class. I think with Atom this would be especially useful\n&gt; because Atom really is a great example of a generic abstract mime-type from\n&gt; which specialized mime-types could be created but for which it would be\n&gt; great of software that understand Atom could still process as Atom.\n\nIf I also decided to deliver a feed of recently completed tasks using\nAtom, would that be text/xml/atom, or text/xml/atom/xml/tasks?\n\n&gt; But I general I don&#39;t have a perfect solution yet.  Suggestions?\n\nWhat&#39;s the problem it&#39;&#39;s trying to solve?\n\nJoe points to OpenSearch, which is a generic horizontal content type,\nand like Atom and iCal deserves to have a MIME type.  I&#39;m putting this\nout as an example, hopefully a good use case, for a variety of\nservices you&#39;re going to have, each with their own specific semantics\nand multiple content types.  I just don&#39;t see thousands of MIME types\nas being a good approach for that, I don&#39;t see what it adds.\n\n&gt; I&#39;m concerned that if it isn&#39;t spelled out people look at the goal of &quot;least\n&gt; coupling&quot; to mean &quot;minimize coupling at ALL costs.&quot;  Enough said.\n\nI agree, but don&#39;t have a better name for it.  I&#39;m really looking for\nsomething to capture optimal minimum, and cover all the coupling\npossibilities.\n\n\n&gt; &gt; &gt; &gt; These are thoughts, not conclusions:\n&gt; &gt; &gt; &gt; - I don&#39;t have (yet) a use case for accessing attachments\n&gt; &gt; directly,\n&gt; &gt; &gt; &gt; but certainly for accessing them from the task, so maybe\n&gt; &gt; link from\n&gt; &gt; &gt; &gt; the task?\n&gt; &gt; &gt;\n&gt; &gt; &gt; I want a list of all attachments, regardless of task, in\n&gt; &gt; order to be\n&gt; &gt; &gt; able to archive attachments for space management; there&#39;s a\n&gt; &gt; use-case.\n&gt; &gt;\n&gt; &gt; How would you find all the IDs to fit in the template?\n&gt;\n&gt; I call the &quot;{base}/attachments&quot; and get them. So as I say that, yes it is\n&gt; link traversal but coming from another location.  But (IMO) I shouldn&#39;t have\n&gt; to first GET the &quot;{base}&quot; URL to find the &quot;{base}/attachments&quot; URL in its\n&gt; representation; I should just be able to know the URI Template from the docs\n&gt; and GET the attachments URL directly.\n\n/attachments/updated is an entry point, so there&#39;s a URL template for\nit.  In fact, I don&#39;t have a use case for navigating to\n/attachments/updated, only for using it in things like batch\nprocessing, so there&#39;s no way to navigate to it, you must start from a\nURL template.\n\nBut still no use case for exposing a URL template for accessing a\nspecific attachment directly.\n\n&gt;\n&gt; &gt; Wouldn&#39;t it just be easier to look up something like\n&gt; &gt; /attachments/updated, sorted by update time, and operate on\n&gt; &gt; the returned list?\n&gt;\n&gt; Point taken. We are coming to the same conclusions.  That&#39;s what good debate\n&gt; results in. :)\n&gt;\n&gt; &gt; &gt; 301 or proxy\n&gt; &gt;\n&gt; &gt; Proxy is absolutely out of the question\n&gt;\n&gt; In all cases?  Why?\n\nProxies are complicated to get right and setup, so I&#39;m not going to\nmix a proxy server inside the application when a simpler solution\nwould do.  And I like that I can just deploy the app without setting\nup an existing proxy server, less moving part.\n\nI think the key factor is, if I were to write all the clients myself,\nand the service, I would still not use a proxy server in there.  It&#39;s\nnot an overall simplification.  If it solves a problem for someone\nelse, they can always request to add this feature.\n\n&gt; You may find it easier on you the service publisher, but I&#39;m more concerned\n&gt; with it being easier for the service client author.  There&#39;s one service\n&gt; publisher but an infinite number of potential service client authors. The\n&gt; economics are better to put the burden on the service publisher instead of\n&gt; on all the service clients, IMO.\n\n\n\n&gt;\n&gt; &gt;\n&gt; &gt; &gt; &gt; - It&#39;s actually slightly easier to write functional code for\n&gt; &gt; &gt; &gt; traversing links than composing URLs, which may be a sign\n&gt; &gt; that it&#39;s\n&gt; &gt; &gt; &gt; the better model?\n&gt; &gt; &gt;\n&gt; &gt; &gt; Yes, but it is easier for humans to compose URLs than\n&gt; &gt; traverse links\n&gt; &gt; &gt; when the links don&#39;t return HTML as a content type.\n&gt; &gt;\n&gt; &gt; 1.  curl URL that returns JSON\n&gt; &gt; 2.  find the item you want to follow, double click the URL,\n&gt; &gt; Ctrl-C 3.  curl + Ctrl-V\n&gt;\n&gt; That works for a professional developer but not for an &quot;accidental&quot;\n&gt; programmer.  Frankly, I don&#39;t even have CURL on my system (does it even\n&gt; exist for Windows?) and until I found Fiddler for IE dealing with that kind\n&gt; of stuff was even hard for me and around here I am consider *the* technical\n&gt; guru, at least among some of my peers [1].\n\nI&#39;m still not seeing accidental programmers using JSON in IE, but\nlet&#39;s say they do, and you get the request, double-click the URL, copy\nand paste it into the address bar.  Still easier that copy and pasting\na template, and then copy and pasting an ID into it.\n\nDoing things in the address bar like changing an individual ID or\ntraversing the path is, IMO, useful and simple and a good idea for\nmaintaining hierarchy in a lot cases, but not all cases fall into\nthat.  Again, going from task to owner&#39;s profile is easier with a link\nthan ID.\n\n&gt; And maybe those peers are the ones I should tell you about. They are &quot;web\n&gt; entrepreneurs&quot; where probably 60-70% want to offer something on the web but\n&gt; are not technical and don&#39;t have funding to hire others to do it so they\n&gt; need to learn how to do it themselves. It&#39;s that type of person I want to\n&gt; empower (and not as a vested interest; I genuinely want to empower them to\n&gt; create great new web properties for purely altruistic reasons.)  And it&#39;s\n&gt; most of those people (the 60-70%) who simply won&#39;t ever be able to\n&gt; accomplish anything with REST if it is not as brain-dead simple as possible.\n\nI&#39;m looking at two factors here.  Use cases, where definitely\nbrain-dead trumps any conceptual integrity, which is why I think\ncommitting to mallable URL templates is better than forcing\nnavigation from a single URL on everything.\n\nBut also cost or production.  If it&#39;s too complex it won&#39;t happen, and\nsimplifying something that doesn&#39;t exist is pointless.  Making states\naccessible from multiple mallable URLs is some times a burden, and\ndoing it as a matter of practice is premature optimization.  YAGNI.\n\nIf a feature has a cost, it&#39;s easier to justify adding it once you\nhave enough clients as evidence for its need, then adding it up front\npossibly not completing the projects and having zero clients not using\nthe non-existent feature.  The moment we have to bring up things like\nrewrites and proxies, there&#39;s a cost involved.\n\nNow, it&#39;s quite possible that a compelling use case does exist, it may\nbe the one you suggest, or even one neither of us imagined, and then\nit will be added and the implementation will have to deal with it.  My\npoint was to illustrate a place where templates are a cost and the\nbenefit is not apparent.  If that&#39;s the case as a developer I would\nprefer to delay this feature until the benefit becomes apparent.\n\nAssaf\n\n&gt;\n&gt; --\n&gt; -Mike Schinkel\n&gt; http://www.mikeschinkel.com/blogs/\n&gt; http://www.welldesignedurls.org\n&gt; http://atlanta-web.org\n&gt;\n&gt; [1] http://web.meetup.com/32/\n\n"}}