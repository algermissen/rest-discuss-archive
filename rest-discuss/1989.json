{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"vOp8gjy_R6uLgC7Qmp3iEeqHCzt2bkuK8ZRgTV7SuJgpuh25397HtMV9oDjmy0uL5Be0MSMfA_YdDi0lrCg_0OFt_AdSwAF_ZFRt_Co53w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Implementing a Purchase Order the REST way","postDate":"1027710862","msgId":1989,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMzlFU0U0cDdGNU9WelJ6WkMwMDAwMjE0NUBob3RtYWlsLmNvbT4=","referencesHeader":"PFBpbmUuTE5YLjQuNDQuMDIwNzI1MTcxNjIyMC4zMjE0LTEwMDAwMEBsb2NhbGhvc3QubG9jYWxkb21haW4+IDwzRDQxNURGMC42OEE2RTQ5REBtaXRyZS5vcmc+"},"prevInTopic":1988,"nextInTopic":1990,"prevInTime":1988,"nextInTime":1990,"topicId":1986,"numMessagesInTopic":6,"msgSnippet":"... From: Roger L. Costello  ... After building things in a nearly-REST way at a previous company for a few years, I ve come to the","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 26 Jul 2002 19:12:26 -0000\r\nReceived: (qmail 64761 invoked from network); 26 Jul 2002 19:12:25 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m10.grp.scd.yahoo.com with QMQP; 26 Jul 2002 19:12:25 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.96)\n  by mta2.grp.scd.yahoo.com with SMTP; 26 Jul 2002 19:12:25 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 26 Jul 2002 12:12:25 -0700\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;Pine.LNX.4.44.0207251716220.3214-100000@...&gt; &lt;3D415DF0.68A6E49D@...&gt;\r\nSubject: Re: [rest-discuss] Implementing a Purchase Order the REST way\r\nDate: Fri, 26 Jul 2002 12:14:22 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nMessage-ID: &lt;OE39ESE4p7F5OVzRzZC00002145@...&gt;\r\nX-OriginalArrivalTime: 26 Jul 2002 19:12:25.0678 (UTC) FILETIME=[608626E0:01C234D8]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Roger L. Costello&quot; &lt;costello@...&gt;\n\n&gt;\n&gt; A relevant side note: One fundamental doctrine of my tutorial is that\n&gt; you should design for maximum usability of your web services.  That is,\n&gt; web services should be usable both by browser-based clients, and by\n&gt; machine-based clients (i.e., machine-to-machine processing).\n\nAfter building things in a nearly-REST way at a previous company for a few\nyears, I&#39;ve come to the conclusion that the &#39;application resource model&#39;\nwill be different for the two situations.\nI would honestly build the machine-to-machine system without regard to user\ninterface, browser idiosyncrosies, etc. This is similar to muli-tier\napplication development. If you build one system to satisfy two goals -\nautomation and user interaction - then when the implementations conflict,\nthe user interaction will win out, mainly because it is visible and\ntouchable by &#39;decision makers&#39;. Just as J2EE has entity-beans (data layer)\nand session-beans (logic) separate from user interface, I think Web\napplications also should be built with this separation.\n\nThere are many ways of building user interface based apps across the Web -\nnot the most architecturally pure things, but they work - but the new\nterritory for me is building automation based apps across the Web.\n\n&gt; Furthermore, the document that is served up by a Web service should be\n&gt; usable by both types of clients.\nThe representations of resources can certainly be used by both clients - but\nI believe that the set of resources that the two types of clients interact\nwith will be different. However, there will be many cases where the user\ninterface needs &#39;blended&#39; information that is not available in one\nrepresentation of one resource - which gives rise to a different resource,\nwhich is why I believe the &#39;visual web&#39; results in interaction with a\ndifferent set of resources than an &#39;automatable web&#39;.\n\n\n&gt; Okay, back to the Purchase Order.  What resource does a client access\n&gt; prior to submitting a PO?  My tutorial says &quot;Step 1. Identify the\n&gt; resources you wish to make available&quot;.\nWhen I talk about resources, I often get confused between &#39;resource\ninstance&#39; and &#39;resource type&#39; - with REST, there are no resource types, so\nwe have to be careful to say what we mean.\n\nThe automation-oriented client does not need to access any resource prior to\nsubmitting a PO.\nThe only fore-knowledge it needs to have is\n - does it use POST or PUT?\n - if it uses PUT, who decided what the URI was?\n - if it uses POST, how does it acquire the URI to POST to?\n - what content-type values are acceptable by the server?\n\nI like the idea of using PUT, and the client asking the server for the URI\nof an empty business document. This allows the client to commit that URI to\npersistent data for its own tracking. If the PUT fails, its okay to keep\ntrying against the same URI. If a POST failed, retrying might cause the\nserver to think there were /two/ documents submitted.\n\n\n&gt;\n&gt; 3. I want to serve up an XML representation of the resource, so that I\n&gt; can be consistent to all clients.  What XML should I serve up?\nTry xCBL. It&#39;s pretty full-featured and covers most business document types\n(po, po-ack, invoice, etc.).\n[BobH hopefully will correct me if I&#39;m wrong here...]\n\n\n\n"}}