{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"A. Pagaltzis","from":"&quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"Bh8z-UuTUaT4G47tf9WRcd3xdqqgSd6cT-9tvyu9hXL1IRtaOxizkSq_4yCR1U8EdYGhkME86axR892JFMiz3lnDZhZHItsW","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REST API specification templates","postDate":"1180215818","msgId":8612,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcwNTI2MjE0MzM4LkdJNjAzOEBrbGFuZ3JhdW0+","inReplyToHeader":"PGYzNjJkNCsxZW1hQGVHcm91cHMuY29tPg==","referencesHeader":"PGYzNjJkNCsxZW1hQGVHcm91cHMuY29tPg=="},"prevInTopic":8607,"nextInTopic":8615,"prevInTime":8611,"nextInTime":8613,"topicId":8578,"numMessagesInTopic":91,"msgSnippet":"... This is a contradiction in terms. REST is defined by two properties: 1. Server state is exposed as a set of resources that have a uniform interface and are","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 9189 invoked from network); 26 May 2007 21:44:50 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m49.grp.scd.yahoo.com with QMQP; 26 May 2007 21:44:50 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta13.grp.scd.yahoo.com with SMTP; 26 May 2007 21:44:49 -0000\r\nReceived: (qmail invoked by alias); 26 May 2007 21:43:38 -0000\r\nReceived: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp052) with SMTP; 26 May 2007 23:43:38 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX191X7tU8bh1h7pcYMQLnJmFG59DX+Zrbv+5snuRiL\n\tpBF7BiRSbuWJir\r\nDate: Sat, 26 May 2007 23:43:38 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20070526214338.GI6038@klangraum&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;f362d4+1ema@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;f362d4+1ema@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;\r\nSubject: Re: REST API specification templates\r\nX-Yahoo-Group-Post: member; u=147780944; y=48U7VQ1d8LsR4Ow72tHUxvpIKZMsMKDBxeTGGxjkSuzX\r\nX-Yahoo-Profile: a22pag\r\n\r\n* rogervdkimmenade &lt;rvdkimmenade@...&gt; [2007-05-25 09:20]:\n&gt; I was wondering if there is some kind of standard way to\n&gt; describe a RESTful API?\n\nThis is a contradiction in terms. REST is defined by two\nproperties:\n\n1. Server state is exposed as a set of resources that have a\n   uniform interface and are named by URIs.\n\n2. The client doesn’t make any assumptions about the server URI\n   space; all it does is follow links.\n\n#1 means there isn’t much to describe; there aren’t any functions\nor function signatures to document. And #2 means that what *is*\nthere (the set of which resources exist and which verbs they\nrespond to) *SHOULDN’T* be baked into the client.\n\nThere is a sort of equivalent to a description of an RPC API for\nREST, but it looks very different from what you’d expect:\n\nIt’s the media type specification.\n\nThe key for REST lies in the fact that the client understands the\nrepresentations the server returns, and can interpret them to\nfind out which other resources the server offers and what they\ncan be used for. F.ex., a browser understands HTML enough so that\nit knows that it can GET the URI given by `&lt;a href&gt;`; it is\nexpected to (but may choose not to) GET the URI described by\n`&lt;img src&gt;`; and it can either GET or POST to the URI given by\n`&lt;form action&gt;`, with the HTML spec describing how to use the\nrest of the elements inside the `&lt;form&gt;` to either augment the\nURI or construct a POST body.\n\nThe same thing is what you see when you look at the Atom\nProtocol: there is a description of a media type that explains\nwhere the client will find URIs in the representation returned by\nthe server and what kind of things can be done with a URI\ndepending on which place in the service document it was found.\n\nSo this is how you describe a REST API: you explain the type of\nresponse body your server will send, where to find links in it,\nand what sort of verbs a particular link implies about the\nresource it points to, along with the semantics represented by\nthe link in question. F.ex. `&lt;cart href&gt;` and `&lt;item href&gt;` may\npoint to resources that respond to the same verbs, but the\nresources mean different things and if you can PUT or POST to\nthem the request body might have to be constructed differently.\nThe client needs to understand these difference to successfully\noperate the service.\n\nNotice how that doesn’t tell the client anything about how the\nURIs will look like – and that’s perfectly intentional.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}