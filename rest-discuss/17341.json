{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214300837,"authorName":"Jakob Strauch","from":"&quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;","profile":"jakobstrauch","replyTo":"SENDER","senderId":"eH41EHn_OLhJXfSFGFc7yKLibbCYLPTtdTJK7np0wFcGcYM4VUoSwIylpUCkcXlO3LaeR8CrWFK70VgfzdOw1mf_Tp0-HNnU8BLmUjo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Loose coupling - a RESTful myth?","postDate":"1297278560","msgId":17341,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGlpdW9wMCtmMHQ4QGVHcm91cHMuY29tPg==","inReplyToHeader":"PEI5QjYwMUFCLTdEMkQtNEVCRS05NDUyLUJBNDk5RkZCNTk2MEBtYWMuY29tPg=="},"prevInTopic":17336,"nextInTopic":17342,"prevInTime":17340,"nextInTime":17342,"topicId":17322,"numMessagesInTopic":13,"msgSnippet":"... I define entities (and link relations) and let code generators do the dirty work. in early development iterations i use a common media type, later specific","rawEmail":"Return-Path: &lt;jakob.strauch@...&gt;\r\nX-Sender: jakob.strauch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76985 invoked from network); 9 Feb 2011 19:09:29 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m14.grp.re1.yahoo.com with QMQP; 9 Feb 2011 19:09:29 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta1.grp.re1.yahoo.com with SMTP; 9 Feb 2011 19:09:28 -0000\r\nX-Received: from [69.147.65.147] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 09 Feb 2011 19:09:21 -0000\r\nX-Received: from [98.137.34.72] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 09 Feb 2011 19:09:20 -0000\r\nDate: Wed, 09 Feb 2011 19:09:20 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;iiuop0+f0t8@...&gt;\r\nIn-Reply-To: &lt;B9B601AB-7D2D-4EBE-9452-BA499FFB5960@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;\r\nSubject: Re: Loose coupling - a RESTful myth?\r\nX-Yahoo-Group-Post: member; u=214300837; y=9ri-EzXGw-25NzUFg4AfhahEscRpMEQwHZ5B5zzVu3I3pxOj-VLt\r\nX-Yahoo-Profile: jakobstrauch\r\n\r\n&gt; Hmm - which investment are you talking about?\n&gt; Are you saying that you t=\r\nhink it is &#39;cheaper&#39; to define a bunch of XMLs (one per service) and a bunc=\r\nh of service descriptions (maybe one WADL per service) that defining one (o=\r\nr very few) domain-related (and *not* service specific) media types?\n\nI def=\r\nine entities (and link relations) and let code generators do the dirty work=\r\n. in early development iterations i use a common media type, later specific=\r\n media types (if not applicable in the beginning)\n\ni don=B4t use WADL. but =\r\ndon=B4t you need some kind of service descriptions anyway? (though all &quot;sel=\r\nf-descriptnives&quot;)\n\n\nJakob\n\n\n\n\n\n\n\n&gt; \n&gt; \n&gt; &gt; But thats for my own (business) =\r\nscenario, where i control the clients, too.\n&gt; &gt; \n&gt; &gt; By the way, i want to =\r\nthank all participants in this disscussion group for their valuable posting=\r\ns. I=B4m following this group for some months.\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Cheers,\n&gt; &gt; ja=\r\nkob\n&gt; &gt; \n&gt; &gt; --- In rest-discuss@yahoogroups.com, Bob Ferris &lt;zazi@&gt; wrote:=\r\n\n&gt; &gt;&gt; \n&gt; &gt;&gt; Am 05.02.2011 17:26, schrieb Jakob Strauch:\n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; [1] ht=\r\ntp://nordsc.com/ext/classification_of_http_based_apis.html\n&gt; &gt;&gt; \n&gt; &gt;&gt; While=\r\n rereading the referenced classification from above, I stumbled \n&gt; &gt;&gt; about=\r\n a few issues:\n&gt; &gt;&gt; \n&gt; &gt;&gt; 1. When describing a domain it&#39;s often not a main=\r\n issue of missing media \n&gt; &gt;&gt; types. I think, one would rather quickly find=\r\n an appropriated generic \n&gt; &gt;&gt; media type. However, the issue of describing=\r\n a domain lies not only at \n&gt; &gt;&gt; the representation and process model level=\r\n (which is generally also \n&gt; &gt;&gt; independent from the representation level, =\r\nor?), the description of the \n&gt; &gt;&gt; domain itself is thereby very important =\r\n- modelling the concepts of for \n&gt; &gt;&gt; instance &#39;user&#39;, &#39;order&#39;, &#39;offer&#39; etc=\r\n.\n&gt; &gt;&gt; This is for me exactly the point where Semantic Web knowledge \n&gt; &gt;&gt; =\r\nrepresentation languages on top of RDF Model can come into play. So I \n&gt; &gt;&gt;=\r\n can still use a generic media type, i.e. RDF Model, for realizing a \n&gt; &gt;&gt; =\r\ncommon description. However, serialize these descriptions into specific \n&gt; =\r\n&gt;&gt; representation media types, i.e. XHTML+RDFa, and thereby maybe also \n&gt; &gt;=\r\n&gt; extending the process model (based on a general description). Layering \n&gt;=\r\n &gt;&gt; of media types was already propagated by Roy T. Fielding, or?\n&gt; &gt;&gt; All =\r\nin all, I think, it depends more on the degree of existing \n&gt; &gt;&gt; appropriat=\r\ned Semantic Web ontologies to model (parts of) a domain, \n&gt; &gt;&gt; rather then =\r\non existing media types. While there can (theoretically) \n&gt; &gt;&gt; exist a huge=\r\n variety of both and such a huge amount would decrease the \n&gt; &gt;&gt; simplicity=\r\n property in both cases; I nevertheless think, that it is \n&gt; &gt;&gt; maybe bette=\r\nr to have less media types and more (especially reusable) \n&gt; &gt;&gt; Semantic We=\r\nb ontologies, rather then an equal high amount of media types.\n&gt; &gt;&gt; To summ=\r\narize, I think the application, reutilization and (if needed) \n&gt; &gt;&gt; creatio=\r\nn of Semantic Web ontologies fit quite well for emphasizing the \n&gt; &gt;&gt; desir=\r\ned properties that should be reached when implementing the REST \n&gt; &gt;&gt; archi=\r\ntectural style. The costs that have to be invested into good \n&gt; &gt;&gt; ontology=\r\n design maybe align with the costs of proper media type design.\n&gt; &gt;&gt; You ma=\r\nybe still addressed this issue somehow, when saying &quot;media type \n&gt; &gt;&gt; (and =\r\nlink relation etc.) specifications&quot;. Anyway, I think, it might be \n&gt; &gt;&gt; goo=\r\nd to make this concern a bit more explicit. You might not explicitly \n&gt; &gt;&gt; =\r\npropagate the utilization of Semantic Web ontologies, but please make \n&gt; &gt;&gt;=\r\n aware of the general existing &#39;description level&#39; (cf. [1]), which (from \n=\r\n&gt; &gt;&gt; my point of view) exists already, but is then often more implicit than=\r\n \n&gt; &gt;&gt; explicit available.\n&gt; &gt;&gt; \n&gt; &gt;&gt; 2. I think, fulfilling the hypermedia=\r\n as the engine of application state \n&gt; &gt;&gt; constraint is maybe still the har=\r\ndest part. I cannot really imagine that \n&gt; &gt;&gt; &quot;a transition from HTTP-based=\r\n Type || to REST at a later point in time, \n&gt; &gt;&gt; however, is rather easy&quot;. =\r\nFurthermore, &quot;turning a HTTP-based Type || API \n&gt; &gt;&gt; into a REST API might =\r\nbe as easy as deleting the API documentation&quot; is a \n&gt; &gt;&gt; bit paradox from m=\r\ny point of view. When I would remove the API \n&gt; &gt;&gt; documentation than this =\r\napplication cannot really be an API any more, \n&gt; &gt;&gt; or? When I would like t=\r\no program against (?) something ( ;) ), I have to \n&gt; &gt;&gt; know how I could do=\r\n that. For instance a web browser do not really \n&gt; &gt;&gt; program against (?) s=\r\nomething.\n&gt; &gt;&gt; I think the term &#39;REST API&#39; might be a bit inappropriate her=\r\ne (I still \n&gt; &gt;&gt; doubt that a implementation of service, which is fully RES=\r\nT compatible, \n&gt; &gt;&gt; is possible). The given examples for REST are not reall=\r\ny APIs, or? - \n&gt; &gt;&gt; AtomPub is a protocol, OpenSearch a specification (coll=\r\nection of media \n&gt; &gt;&gt; type specifications), &quot;RESTifying Procurement&quot; an app=\r\nroach of a \n&gt; &gt;&gt; proof-of-concept REST &quot;service&quot;(?) (I couldn&#39;t really figu=\r\nre out the \n&gt; &gt;&gt; current state of that project, however it looks quite inte=\r\nresting). \n&gt; &gt;&gt; Although, the chosen descriptor is still &#39;REST&#39; and not &quot;RE=\r\nST API&quot;. So \n&gt; &gt;&gt; one might conclude that this could be a bit inappropriate=\r\nd \n&gt; &gt;&gt; classification, but the descriptions are explicitly suggesting the =\r\n\n&gt; &gt;&gt; application of REST principles on the implementation of (Web) service=\r\ns ;)\n&gt; &gt;&gt; \n&gt; &gt;&gt; 3. Just a small issue: better &quot;REST might be the best solut=\r\nion&quot;, rather \n&gt; &gt;&gt; than &quot;REST is the best solution&quot;. I guess, &#39;is&#39; requires=\r\n a kind of \n&gt; &gt;&gt; proof, or? Could we really provide a complete proof about =\r\nthis? - I \n&gt; &gt;&gt; currently don&#39;t think so.\n&gt; &gt;&gt; \n&gt; &gt;&gt; \n&gt; &gt;&gt; That&#39;s all for t=\r\nhe moment.\n&gt; &gt;&gt; \n&gt; &gt;&gt; Cheers,\n&gt; &gt;&gt; \n&gt; &gt;&gt; \n&gt; &gt;&gt; Bob\n&gt; &gt;&gt; \n&gt; &gt;&gt; [1] \n&gt; &gt;&gt; htt=\r\np://infoserviceonto.smiy.org/2010/11/25/on-resources-information-resources-=\r\nand-documents/\n&gt; &gt;&gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; ------------------------------=\r\n------\n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}