{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"XVZUEiTTLBZl6KMYADA1G9EtHGmsHYDWJSIDgPX3RlJnuz40gtMTOsW1ssp1T8ZdpewSw-b54BW1pU1j7x0QB1W3ifCvxuYmaoNTlCbfdfE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?","postDate":"1253467850","msgId":13415,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxM0RGM0I0LTlDODctNEE0Qi1BQUQzLUFDOUE5Qzk2QzVGM0BtYWMuY29tPg==","inReplyToHeader":"PDU0NDhjZmQ5MDkwOTIwMDcxNm8xOGQ2ZWViOW0xMmEzZDg2MjY5NmJhM2NiQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDc3RTlCQTVBLTBCRkItNDJGQi04NjQzLTRCMzhERUU3OTYwREBpbm5vcS5jb20+IDw2NDU2RUM3MC05RjNDLTRFNkEtOTIxMy04NENBODRERDI2RjhAbWFjLmNvbT4gPDU0NDhjZmQ5MDkwODI4MTkyNXkyMzNlOGI3dTVjZGMyMWY0MWI1NjJkNjhAbWFpbC5nbWFpbC5jb20+IDwxQzA4OEQyMS02MUIzLTRENDUtQkFCOS1DQjRENDcxMjFBMzNAbWFjLmNvbT4gPDU0NDhjZmQ5MDkwOTIwMDcxNm8xOGQ2ZWViOW0xMmEzZDg2MjY5NmJhM2NiQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":13409,"nextInTopic":13423,"prevInTime":13414,"nextInTime":13416,"topicId":11221,"numMessagesInTopic":44,"msgSnippet":"... Can you explain what you mean by uniform contract level and service interface description level and how governance is applied to them? ... Sorry, I","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20428 invoked from network); 20 Sep 2009 17:30:53 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.re1.yahoo.com with QMQP; 20 Sep 2009 17:30:53 -0000\r\nX-Received: from unknown (HELO asmtpout011.mac.com) (17.148.16.86)\n  by mta2.grp.sp2.yahoo.com with SMTP; 20 Sep 2009 17:30:53 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.101] (p54907B22.dip.t-dialin.net [84.144.123.34])\n by asmtp011.mac.com\n (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec 16 2008; 32bit))\n with ESMTPSA id &lt;0KQA00MU35YX0W30@...&gt; for\n rest-discuss@yahoogroups.com; Sun, 20 Sep 2009 10:30:52 -0700 (PDT)\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;413DF3B4-9C87-4A4B-AAD3-AC9A9C96C5F3@...&gt;\r\nTo: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nIn-reply-to: &lt;5448cfd90909200716o18d6eeb9m12a3d862696ba3cb@...&gt;\r\nDate: Sun, 20 Sep 2009 19:30:50 +0200\r\nReferences: &lt;77E9BA5A-0BFB-42FB-8643-4B38DEE7960D@...&gt;\n &lt;6456EC70-9F3C-4E6A-9213-84CA84DD26F8@...&gt;\n &lt;5448cfd90908281925y233e8b7u5cdc21f41b562d68@...&gt;\n &lt;1C088D21-61B3-4D45-BAB9-CB4D47121A33@...&gt;\n &lt;5448cfd90909200716o18d6eeb9m12a3d862696ba3cb@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?\r\nX-Yahoo-Group-Post: member; u=289191104; y=HFW5kXkbV_na3Rg52gkIJZ5Afm7JIBcrL7V3264C_sE8LpfFLJ_nlTho\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Sep 20, 2009, at 4:16 PM, Benjamin Carlyle wrote:\n\n&gt; 2009/8/31 Jan Algermissen &lt;algermissen1971@...&gt;:\n&gt;&gt; What I am currently trying to get my head around is this:\n&gt;&gt;\n&gt;&gt; When viewing a REST API as essentially a set of link semantics how\n&gt;&gt; can we version such APIs? And do we need to version them at all?\n&gt;&gt;\n&gt;&gt; I looked at the Atom Publishing Protocol and it does not say that it\n&gt;&gt; is a particular version. Suppose we&#39;d add another top level document\n&gt;&gt; type that brings in new capabilities - would that lead to APP 2.0?  \n&gt;&gt; And\n&gt;&gt; how would one communicate this to clients?\n&gt;\n&gt; Governance of a REST architecture is applied at a uniform contract\n&gt; level and at a service interface description level.\n\n\nCan you explain what you mean by &quot;uniform contract level&quot; and &quot;service  \ninterface description level&quot; and how governance is applied to them?\n\n\n&gt; Version control of\n&gt; a uniform contract is broken up into several facets:\n&gt; 1. A syntax for resource identifiers that can\n&gt; 1.1 Be resolved to the point where requests can be issued based on the\n&gt; identifier\n&gt; 1.2 Includes enough characters to allow a service to defer state back\n&gt; to its consumers within these identifiers. Resource identifiers act as\n&gt; messages from the service to itself when state has been returned to\n&gt; the consumer between requests.\n&gt; 2. A set of methods that are abstractions capable of expressing a\n&gt; range of different service capabilities. This may be one specification\n&gt; (eg rfc2616 defining the methods - including response codes - of\n&gt; HTTP/1.1) or split into multiple specifications to cover all of the\n&gt; methods and the fundamental communication patterns they permit\n\nSorry, I seem unable to see what you mean, can you put these thoughts  \nin different words?\n\n\n\n&gt; 3. A set of media types, which will almost certainly have\n&gt; corresponding individually versioned specifications\n&gt; Each service itself has a description of its interface in terms of a\n&gt; set of resources and methods on those resources that correspond to the\n&gt; capabilities of the service.\n\nBut in REST you do not describe that but let the client discover it.  \nOr am I misunderstanding you?\n\n\n&gt; This is versioned\n\n&#39;This&#39; being what exactly?\n\n\n&gt; independently of the\n&gt; uniform contract but contains references to the uniform contract for\n&gt; method and media type definitions.\n&gt;\n&gt; At any particular time there will (should) be a small number of ways\n&gt; of moving information around the architecture (the methods) that while\n&gt; they may appear low-level (eg get, put, delete) are each high-level\n&gt; abstractions of a significant number of service capabilities. For each\n&gt; kind of information that can be exchanged in the architecture there\n&gt; are a small number of ways of encoding that information. In general,\n&gt; each resource is expected to understand all of the elements of the\n&gt; uniform contract that are relevant to it and which correspond to\n&gt; service capabilities the service wishes to express.\n&gt;\n&gt; The outcome is a high level of integration maturity. One URL can be\n&gt; substituted for another in the architecture at runtime. Regardless of\n&gt; the specific URL or service the consumer knows what kind of message to\n&gt; construct. The service knows how to interpret the request and how to\n&gt; return an appropriate response in a form the consumer understands. The\n&gt; uniform interface of each resource enables communication and then gets\n&gt; out of the way, permitting dynamic reconfiguration to occur as\n&gt; required.\n\n\nHmmm - and how does all that adsress the problem of versioning the set  \nof semantics that make up a certain RESTful API?\n\nIn the enterprise, it is simply not enough to implement a service that  \nuses a bunch of media types and some extension elements and some link  \nrelations without providing a means to *manage* the bundle of these  \nsemantics. The communication between clients and servers may well  \nwork, but inside an enterprise there is undisputably a need to manage  \nand plan software evolution, e.g. because you need to assess resources  \nand budget.\n\nHence my question regarding versioning of the set of semantics that  \nconstitute a REST API.\n\nJan\n\n\n\n\n\n\n\n--------------------------------------\nJan Algermissen\n\nMail: algermissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalgermissen.com\n--------------------------------------\n\n\n\n\n"}}