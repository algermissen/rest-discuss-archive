{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"gQ25xk3YHgVwRcqCXosiEhMzuTgwTY0UYJ2pdzvG2B4W2_ZO-J-ZB_WhDm5OzMBDjoOaKcDEYTQzlx5phLP2HJm4fHazgEl9wdGuLtTryQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281040520","msgId":16156,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODA1MTQzNTIwLjQwYjdkODE4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16155,"nextInTopic":16158,"prevInTime":16155,"nextInTime":16157,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"... Good so far. ... Define /foo/most-recent or somesuch. ... Make the resource you define (i.e. /foo/most-recent) the target of your operation. ... So assign","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4360 invoked from network); 5 Aug 2010 20:35:34 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m3.grp.sp2.yahoo.com with QMQP; 5 Aug 2010 20:35:34 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 5 Aug 2010 20:35:34 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id E0680509DF;\n\tThu,  5 Aug 2010 16:35:33 -0400 (EDT)\r\nDate: Thu, 5 Aug 2010 14:35:20 -0600\r\nTo: juergen.brendel@...\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100805143520.40b7d818.eric@...&gt;\r\nIn-Reply-To: &lt;1281034748.2917.303.camel@backpack&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJuergen Brendel wrote:\n&gt; \n&gt; Let&#39;s say I have a queue resource: /foo\n&gt; \n&gt; I can POST new entries into the queue. I can even refer to individual\n&gt; entries within the queue: /foo/&lt;id&gt;\n&gt; \n\nGood so far.\n\n&gt;\n&gt; But how do I pop the next entry? How do I construct a single request\n&gt; that gets me the next/first entry but also removes the entry at the\n&gt; same time?\n&gt; \n\nDefine /foo/most-recent or somesuch.\n\n&gt;\n&gt; Maybe I can implement a special resource /foo/next, which always\n&gt; refers to the next entry in the queue.\n&gt;\n\nMake the resource you define (i.e. /foo/most-recent) the target of your\noperation.\n\n&gt;\n&gt; But clearly, I can&#39;t use GET to pop the entry, since that would not\n&gt; be idempotent.\n&gt; \n\nSo assign your &#39;pop&#39; semantics to a non-idempotent method like POST.\nGET /foo/most-recent returns a representation of the top of your\nstack.  Or use HEAD, either method harvests the Etag you&#39;re after.\nRound-trip the Etag on POST using If-Match, the 200 OK response can\ncontain the message body you&#39;re consuming.\n\n&gt;\n&gt; The queue has multiple consumers, so the &#39;pop&#39; operation should be\n&gt; atomic. This seems to rule out the possibility of doing a GET to\n&gt; retrieve the latest element, followed by a DELETE to remove it.\n&gt; Someone else could have gotten the &#39;latest&#39; element in the meantime,\n&gt; thus causing the same element to be consumed twice.\n&gt; \n\nWhy rules out?  That&#39;s exactly how REST works -- say multiple users\nHEAD /foo/most-recent and get the Etag.  The If-Match on POST prevents\nany but the first-received POST request from popping.  The POST removes\nthe corresponding /foo/{id} from your stack resource.\n\nSubsequent GET or HEAD requests yield the Etag for the next pop.\n\n&gt;\n&gt; Maybe I can cause a &#39;move&#39;, where a single request causes the next\n&gt; element to be renamed to a unique ID, which is then returned to the\n&gt; client, who then is the only one who has a handle on that object. The\n&gt; client can then work with the resource. But the question now is:\n&gt; \n\nI think you&#39;re making this too hard on yourself, please consider using\nconditional requests...\n\n&gt;\n&gt; a) What happens when the client fails before it can delete the\n&gt; resource? b) What is the best way to &#39;move&#39; an item in that way?\n&gt; \n\nThen don&#39;t leave it up to the client to make a DELETE request, make the\ndeletion a side-effect of some other action like a conditional POST.\n\n-Eric\n\n"}}