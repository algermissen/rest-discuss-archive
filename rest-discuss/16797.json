{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"ghJfBbRC-uixgULJNxmf_ibUBz7K_QW5d0hQU0ek-WKP2bGafN9iDR_CujnW2k7wR3iMIVOyn0SgArXxdkGw--Lzf26vQrBk39Y2Sz53CA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Fledgling REST blogger looking for suggestions and feedback","postDate":"1288846059","msgId":16797,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMTAzMjI0NzM5LjI5ZjIyNjJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGlhczJ1bCthdW11QGVHcm91cHMuY29tPg==","referencesHeader":"PDc5NDdFNzk2LUZFRTQtNDFCQS1BRUM2LTcxQkRDQUVDNEQ1Q0BtYWMuY29tPgk8aWFzMnVsK2F1bXVAZUdyb3Vwcy5jb20+"},"prevInTopic":16791,"nextInTopic":16800,"prevInTime":16796,"nextInTime":16798,"topicId":16781,"numMessagesInTopic":11,"msgSnippet":"... Which Duncan called a hypermedia landscape.  I suppose application state can be interpreted as the current page (so to speak, usually more than one","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 92476 invoked from network); 4 Nov 2010 04:47:30 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m17.grp.re1.yahoo.com with QMQP; 4 Nov 2010 04:47:30 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 4 Nov 2010 04:47:30 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 15F16509B3;\n\tThu,  4 Nov 2010 00:47:29 -0400 (EDT)\r\nDate: Wed, 3 Nov 2010 22:47:39 -0600\r\nTo: &quot;Ray&quot; &lt;ray.polk@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20101103224739.29f2262f.eric@...&gt;\r\nIn-Reply-To: &lt;ias2ul+aumu@...&gt;\r\nReferences: &lt;7947E796-FEE4-41BA-AEC6-71BDCAEC4D5C@...&gt;\n\t&lt;ias2ul+aumu@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Fledgling REST blogger looking for\n suggestions and feedback\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Ray&quot; wrote:\n&gt; \n&gt; I was attempting to make an analogy between the client&#39;s incarnation\n&gt; of the application and a state machine.  In the linked email, Roy\n&gt; refers to the client&#39;s incarnation of the application as &quot;hypermedia\n&gt; workspace&quot;.\n&gt; \n\nWhich Duncan called a &quot;hypermedia landscape.&quot;  I suppose &quot;application\nstate&quot; can be interpreted as &quot;the current page&quot; (so to speak, usually\nmore than one representation makes up the current steady-state), whereas\nboth Roy and Duncan are trying to make a point about other tabs the\nuser has open on the same site, plus the history contained within each.\nOK, I get it now, so I suppose I take back my objection...\n\n&gt;\n&gt; Between requests, the client&#39;s (or user agent if you prefer)\n&gt;\n\nActually, this isn&#39;t a preference -- there&#39;s a reason for REST having\ndefined a more-explicit term.  The default meaning of &quot;client&quot; in REST\nis &quot;client connector&quot; which could be on a cache -- caches know nothing\nof application states or hypermedia landscapes/workspaces, only which\nrepresentations map to what resources.\n\nWhen we&#39;re talking about client-side issues which are relevant to both\nintermediaries and user-agents, we say &quot;client&quot;; another term is\nrequired for the component assembling multiple representations into\napplication states and acting on user input.  Hence, &quot;user-agent&quot; --\nvery descriptively precise of exactly what&#39;s being discussed, while\ndeliberately allowing &quot;client&quot; to have the same meaning it does in\n&quot;client-server,&quot; for multiple components.  An origin-server component\ncan have a client connector.\n\n&gt;\n&gt; hypermedia workspace is like a state machine&#39;s &quot;current state&quot;.  Then\n&gt; actions taken by the client/UserAgent via links are the state\n&gt; transitions.  \n&gt; \n\nWell, links or forms.  Submitting a hypertext form is a user request\nfor a state transition, the semantics of which are described by the\nmethod (your introductory post mistakenly lists methods as part of the\nrepresentation constraint, they&#39;re really part of the self-descriptive\nmessaging constraint; also, self-descriptiveness isn&#39;t simply headers,\nas headers are part of the representation).  The payload of  PUT, PATCH\nor POST requests are (not necessarily full) representations of user-\nagent application state being transferred to the origin server, for the\npurpose of manipulating one or more resources.\n\nIf you&#39;re looking for a state machine, it&#39;s found on the server -- each\nresource is a state machine.  REST applications aren&#39;t -- think of\nmanipulating a form.  Each field, as it&#39;s altered, changes the state of\nthe application without changing any underlying resource states.\nBackground saves or user-initiated actions serve as input to one or\nmore state machine resources, each of which has an output which begins\nwith a status code.  Altering forms isn&#39;t a state-machine interaction;\nsubmitting forms and clicking links are, where resources are concerned.\n\nThe current state of the resource doesn&#39;t change when it&#39;s dereferenced.\nThe state of the resource may be changed by transferring a\nrepresentation of the resource&#39;s desired state.  What goes on in user-\nagents isn&#39;t a state machine, because the output isn&#39;t a function of\nthe input -- the result of clicking on a link is to transition from one\napplication state to another; however, what the user sees depends on\ntype and configuration of user-agent (or authentication, or a host of\nother factors), where the same user generating the same input doesn&#39;t\nget the same result from one client, or even one session, to the next.\n\nOnce you&#39;ve coded a REST resource, the same input always yields the\nsame output (idempotent method or not), with certain exceptions like\n503 errors.  I&#39;ve always considered resources to be Mealy Machines, or\nat least such simplicity is my goal when designing resources.\n\n=================\n\n&quot;Beware deviating from the path of The Architectural Constraints!&quot;\n\nDisagree.  You&#39;re suggesting there&#39;s some ideal (&quot;The&quot;) set of\nconstraints (style).  This POV flirts with purism, suggesting REST as\nMaslow&#39;s hammer.  The only thing to beware of, is Roy&#39;s wrath if you\napply the term REST to some other set of constraints...  There&#39;s a\nlimited REST mismatch in my system where I&#39;ve ignored a constraint and\ndon&#39;t intend to fix it.  It&#39;s an optimization, so I don&#39;t consider it\nsome other style -- just REST with a small, identified mismatch.  All\nHTTP systems have REST mismatches, anyway.\n\nREST may also be extended; see ARRESTED and CREST.  Roy&#39;s thesis should\nreally be taken as a methodology for developing distributed software\narchitectures, with a tutorial (chapter 5).  REST isn&#39;t a religion,\njust a named set of constraints describing idealized behavior.  Design\nby constraint *is* a religion, one I&#39;m happy to preach.  There is no\nbest set of constraints, only the set of constraints best applied to the\nsystem being designed -- this is the path from which one must not\ndeviate.\n\nConstraints are derived from the observable characteristics (pointed\narches, Internet scale) of existing systems.  The natural scientist in\nme loves it that constraints are like theories -- explanations of nature\n(I consider the Internet a living, albeit non-sentient, phenomenon of\nnature) derived through observation and experimentation (market research\nof consumer preference qualifies, and results in the bell-bottom pantleg\nconstraint coming in and going out of style).  The creative artist in me\nloves it that constraints may be applied in myriad fashions evocative\nof the same style.\n\nSome gothic cathedrals merely *looked* like gothic cathedrals, but have\nfailed to stand the test of time; while others still stand, with only\nintermittent (and mainly non-structural) restoration.  Incorrect\ncurvature of the points of the arches, or flying buttresses insufficient\nto the height of the walls, or foundations not dug deeply enough -- all\nsuch deviation from these constraints of masonry led to the long-term\nfailure of some very pretty buildings, whereas other very pretty\nbuildings meeting these constraints remain in productive service.\n\nSome romanesque cathedrals also still stand.  That architectural style\nimposed limits on the scalability of cathedral structures, so it was\n*extended* by the gothic style.  If the design goals of a cathedral\ncannot be distinguished from those of the romanesque style, then the\nchoice of romanesque vs. gothic architecture is one of taste.  If those\ndesign goals exceed the scalability of romanesque architecture, the\nchoices include extending or innovating within some existing named set\nof constraints, or devising a new set of constraints and bestowing a\nname upon the resulting style.\n\n-Eric\n\n"}}