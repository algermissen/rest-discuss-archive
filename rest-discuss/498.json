{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","replyTo":"SENDER","senderId":"quotl_NhOKVug-Jc3MtxYGMOtR9aOk2fqPEW1hjgDstozSUxRkWp8edKedcbvA6U-e-zIXDA_S1W5Fwp6JghwzVoTg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP special?","postDate":"1012517487","msgId":498,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwMTMxMjI1MS5SQUEyMzc4MkBtYXJrYmFrZXIuY2E+","inReplyToHeader":"PDNDNThGQjkyLjg4Nzg4QTA0QHByZXNjb2QubmV0PiBmcm9tICJQYXVsIFByZXNjb2QiIGF0IEphbiAzMSwgMjAwMiAxMjowODo1MCBBTQ=="},"prevInTopic":473,"nextInTopic":500,"prevInTime":497,"nextInTime":499,"topicId":473,"numMessagesInTopic":11,"msgSnippet":"Paul, good stuff.  Some comments; ... This is like saying that Ethernet is general purpose.  It s true, but not too useful.  RPC is a lower layer than HTTP","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 31 Jan 2002 22:49:21 -0000\r\nReceived: (qmail 24095 invoked from network); 31 Jan 2002 22:49:21 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m8.grp.snv.yahoo.com with QMQP; 31 Jan 2002 22:49:21 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta3.grp.snv.yahoo.com with SMTP; 31 Jan 2002 22:49:21 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id RAA23782;\n\tThu, 31 Jan 2002 17:51:27 -0500\r\nMessage-Id: &lt;200201312251.RAA23782@...&gt;\r\nSubject: Re: [rest-discuss] Why is HTTP special?\r\nTo: paul@... (Paul Prescod)\r\nDate: Thu, 31 Jan 2002 17:51:27 -0500 (EST)\r\nCc: rest-discuss@yahoogroups.com (rest-discuss@yahoogroups.com)\r\nIn-Reply-To: &lt;3C58FB92.88788A04@...&gt; from &quot;Paul Prescod&quot; at Jan 31, 2002 12:08:50 AM\r\nX-Mailer: ELM [version 2.5 PL3]\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nPaul, good stuff.  Some comments;\n\n&gt; The various RPC protocols are also very\n&gt; general purpose.\n\nThis is like saying that Ethernet is general purpose.  It&#39;s true, but\nnot too useful.  RPC is a lower layer than HTTP because it defines no\napplication semantics, leaving them for the &quot;API&quot; to define.\n\nLinda, like HTTP and FTP and NNTP, defines the methods.  So you&#39;ve\ngot an application layer contract - a coordination language -\nbetween endpoints a priori.\n\n&gt; Linda bills itself a &quot;coordination language&quot; -- used\n&gt; for coordinating multiple software processes. Until I have a precise\n&gt; definition of that term I can&#39;t say for sure whether RPC protocols and\n&gt; HTTP are also coordination languages but the term seems to apply to\n&gt; them.\n\n&quot;RPC&quot; in general isn&#39;t.  But any coordination language can be built\non top with RPC methods.  HTTP is a coordination language.\n\n&gt; Definitions aside, the point remains: in terms of generality, HTTP has\n&gt; more in common with SOAP than with SMTP. It is not just about moving\n&gt; HTML pages from servers to clients. \n\nI&#39;d say it&#39;s the other way around.  SMTP &quot;DATA&quot; has a precise\nmeaning, not unlike POST.  SOAP defines no meanings; you can either\nbuild them on top (RPC), or you can inherit them from the underlying\nprotocol.\n\n&gt; HTTP is similar. HTTP allows you to read from the storage with GET,\n&gt; write to it with PUT and the addresses are URIs. Because disk space in\n&gt; the real world is limited, HTTP also has DELETE. And because multiple\n&gt; people will be using the system at once, there is a need for a method\n&gt; that will create guaranteed-new &quot;storage locations&quot;.\n\nI&#39;d say that POST was the movement of the tape.  PUT creates new\nlocations.\n\n&gt; FTP is the closest protocol to HTTP conceptually. But really the gap\n\nI think NNTP is probably closest.  It has POST (that&#39;s where HTTP&#39;s\nPOST came from), a basic get (ARTICLE), and a very specific type of\nput (for setting read messages).\n\n&gt; important, though, FTP&#39;s semantics do not allow the server to be an\n&gt; active participant in the computation. HTTP very precisely defines how\n&gt; the server can do complicated computations by itself. It is not just a\n&gt; holder of bits -- it can embody a complex service!\n\nYou mean the app here I guess.  You should distinguish between the\nweb server and the web app.\n\n&gt; efficiency and modeling simplicity. For instance WebDAV has a LOCK\n&gt; method which could be modeled as a POST of a LOCk object. In theory the\n\nPUT actually, since it is defined absolutely.\n\n&gt; You can see how this modeling process works. You think about the things\n&gt; you want to work with as resources and you apply HTTP methods to them.\n&gt; One day I hope and expect that Web resource modeling will be as widely\n&gt; understood as object oriented modeling. \n\nIndeed, they are already closely related.  Component based modelling is\neven closer because you work from a generic containment based API.\n\n&gt; I say &quot;quasi-universal&quot; because there are limits. Just as XML isn&#39;t\n&gt; really great for binary media, HTTP isn&#39;t really great for streaming\n&gt; real-time media. So for those applications you should use something\n&gt; else.\n\n(though perhaps with HTTP&#39;s application semantics)\n\n&gt; There is no doubt that HTTP has its limitations. For one thing there is\n&gt; not much software out there that knows how to deal with HTTP in a\n&gt; peer-to-peer or asychronous fashion.\n\nI don&#39;t know what that means.\n\n&gt; There is a lot of software out\n&gt; there that claims to use HTTP but is well behind the HTTP specification.\n&gt; Also, HTTP is not going to take over the universe from established\n&gt; protocols with large software bases\n\n... anytime soon.\n\nMB\n-- \nMark Baker, Chief Science Officer, Planetfred, Inc.\nOttawa, Ontario, CANADA.      mbaker@...\nhttp://www.markbaker.ca   http://www.planetfred.com\n\n"}}