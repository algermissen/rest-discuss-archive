{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"UId3-yPdV0tDIfqgpLkaZU0ctuV9cXqlFbp3ziY-1Bs0bEtch3uF0cbfZ9bLIE7i-ZwGy_hkCH5XY3OdwNAmXWwr_gjbUg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] sending orders to order-takers","postDate":"1024463228","msgId":1583,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMTAxMTdDLjEwQ0YyRTcyQHByZXNjb2QubmV0Pg==","referencesHeader":"PDEwMjIzNjcxODJCOEQ1MTFBNzcxMDA1MDhCREYzNDg2MDQ5QTUyRkNAZXhjaGFuZ2UtMS5rZXlub3RlLmNvbT4="},"prevInTopic":1580,"nextInTopic":1584,"prevInTime":1582,"nextInTime":1584,"topicId":1570,"numMessagesInTopic":16,"msgSnippet":"... Maybe, but it is seldom a restriction. When the semantic for something is here, take this and give it a URI , PUT or POST seems appropriate. And if we re","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 19 Jun 2002 05:06:53 -0000\r\nReceived: (qmail 93863 invoked from network); 19 Jun 2002 05:06:53 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m11.grp.scd.yahoo.com with QMQP; 19 Jun 2002 05:06:53 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 19 Jun 2002 05:06:53 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5J56pd09186;\n\tTue, 18 Jun 2002 22:06:51 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5J56o214554;\n\tTue, 18 Jun 2002 22:06:50 -0700\r\nMessage-ID: &lt;3D10117C.10CF2E72@...&gt;\r\nDate: Tue, 18 Jun 2002 22:07:08 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Joe Hsy &lt;joe.hsy@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] sending orders to order-takers\r\nReferences: &lt;1022367182B8D511A77100508BDF3486049A52FC@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nJoe Hsy wrote:\n&gt; \n&gt;...\n&gt; \n&gt; This is where I think we need a little flexibility.  I agree with the\n&gt; benefit of actions always resulting in resources or state changes, but I\n&gt; don&#39;t think we necessarily then have to force people to think of all actions\n&gt; as posting a request document.  The benefits of a representational layer can\n&gt; be there without this restriction.\n\nMaybe, but it is seldom a restriction. When the semantic for something\nis &quot;here, take this and give it a URI&quot;, PUT or POST seems appropriate.\nAnd if we&#39;re sending a representation and getting a URI back, then it\nseems natural to think of it in this way.\n\n&gt;...\n&gt; I have no doubt that we can build video games this way, but the question is\n&gt; whether we would want to and do we really have to.  If our goals is to\n&gt; encourage creating URIs for important objects and resources, we should make\n&gt; that the explicit goal.  Forcing programmers to make everything into\n&gt; document/data just to accomplish this goal as a side-effect seems to be\n&gt; overkill.\n\nLet&#39;s be clear that a video game is a very non-typical example. It is,\nafter all, all about verbs, because you are trying to communicate\nbehaviour to an on-screen avatar.\n\nBut think about more typical network services. Google is clearly a GET.\nWhen you send an email you are POSTing the mail to a mailbox (or mail\nqueue). When you send an IM, you are POSTing a message. Newsreading\nconsists of GETting posts and POSTing new ones. Stock buying, selling\nconsists of GETting prices and POSTing orders. \n\n&gt;...\n&gt; This is a very good point, but think a more extensible way to create this\n&gt; type of benefit is to create explicit action properties for ACLs to filter.\n\nThat&#39;s fine if you want application-level filtering. But if you\n&quot;subclass&quot; the standard methods then you get application-agnostic\nfiltering &quot;for free&quot; from standard HTTP filtering software. Then you can\nimplement another level yourself if you want also.\n\n&gt;...\n&gt; Furthermore, if we make actions explicit URIs, it is very simple to filter\n&gt; access to those actions that the administrator wants to keep out.  This\n&gt; would seem provide more fine-grained control.  In this way, the action is\n&gt; not being moved to the application level, but rather it creates simple\n&gt; implicit representation for that action in the from of an identifiable URI.\n\nMy sense is that you more often want to filter on the object-type/method\npair. If they are both in the URI then you need to split the URI to do\nthat. That isn&#39;t hard but again its going to be specific to your\nparticular application and your particular way of encoding methods in\nURIs.\n\n&gt; &gt; Who said we should use verbs in the order? Yes, the order has a\n&gt; &gt; vocabulary that must be negotiated, as verbs must be negotiated in an\n&gt; &gt; RPC system. But that doesn&#39;t mean there are verbs in the actual order.\n&gt; \n&gt; It wasn&#39;t me. 8-)  But, Seth certainly had no qualms putting verbs into the\n\n&gt; order for attacking an ogre.  \n\nOkay, I thought we were talking ordering as in ordering pizza over the\nInternet.\n\n&gt; .. I don&#39;t think there is anything wrong with\n&gt; that.  BTW, how would you represent an order to attack an ogre without using\n&gt; any verbs?\n\nI would use a verb, but use the verb as a noun. I would &quot;POST&quot; an\naction-request and the action-request might have an &quot;action&quot; attribute\nwhich was a verb. In that particular case yes, I&#39;ve pushed a verb into\nthe representation. But it stays there. I expect a new URI to be created\nthat *has that verb in it*. If it is a multiplayer game, I will get\neverybody else in sync by pointing them at the resource I created. They\nwill fetch the verb-containing representation and do the right thing on\ntheir screens. \n\n&gt;...\n&gt; I like the fact that SOAP is moving away from SOAP-RPC (with explicit\n&gt; binding) and I think it would be very good to have SOAP be part of REST in a\n&gt; standard endorsed way.  As for standardization of verbs, again I don&#39;t know\n&gt; if we&#39;re talking about application level verbs.  Protocol verbs are\n&gt; standardized already with GET, PUT, POST, DELETE.  What you&#39;re suggesting\n&gt; for REST is not standardizing application verbs, but recasting application\n&gt; verbs into representational documents which can be acted upon by the\n&gt; protocol verbs.\n\nUsually there is no need for application verbs. The protocol verbs are\nsufficient. Most applications are about data, not actions.\n\n&gt; If the recommendation is to always recast applications verbs into documents,\n&gt; I would suggest that instead of overloading the semantics of the POST verb,\n&gt; we explicitly define a new protocol verb called EXECUTE with its own\n&gt; semantics.  Then it is clear that what we&#39;re doing is sending\n&gt; representations of actions to be executed.\n\nBut you don&#39;t have to overload. When you post an order you are really\nPOSTing an order. When you POST a player action, the player action is\nreally a bit of state that will be given a URI and persist.\n\n&gt; Again, I appreciate the efforts of you and many others on explaining the\n&gt; benefits.  I do hope this discussion is helpful as opposed to just\n&gt; distracting.\n\nI think it is helpful to clarify the ideas for everyone.\n\n Paul Prescod\n\n"}}