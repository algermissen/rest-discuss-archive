{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214300837,"authorName":"Jakob Strauch","from":"&quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;","profile":"jakobstrauch","replyTo":"SENDER","senderId":"mV6_VYcOsOfTpjbypgaZF6Eky4ZtoEHgxr6TIJ2iHRcE6N24yJZf1uvW_kB3qPIPVWmVT_PNVOzZZyPsn8i5nn9neMvi4CtXqA8veQE","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Rails 3.2 and PATCH","postDate":"1323978886","msgId":18019,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpjZGphNitvczYyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEI2M0JCMzA3LTk3MDYtNENDRS04RDFDLTc3MjM4QTdBMjUxOUBub3Jkc2MuY29tPg=="},"prevInTopic":18018,"nextInTopic":18020,"prevInTime":18018,"nextInTime":18020,"topicId":18011,"numMessagesInTopic":86,"msgSnippet":"The problem is, that using PUT for partials is a widely used anti pattern. this may sound weird, but maybe it is time to redefine (ease) the HTTP specs to","rawEmail":"Return-Path: &lt;jakob.strauch@...&gt;\r\nX-Sender: jakob.strauch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 36473 invoked from network); 15 Dec 2011 19:54:51 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 15 Dec 2011 19:54:51 -0000\r\nX-Received: from unknown (HELO ng16-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.138)\n  by mta3.grp.sp2.yahoo.com with SMTP; 15 Dec 2011 19:54:51 -0000\r\nX-Received: from [98.139.164.125] by ng16.bullet.mail.bf1.yahoo.com with NNFMP; 15 Dec 2011 19:54:50 -0000\r\nX-Received: from [69.147.65.149] by tg6.bullet.mail.bf1.yahoo.com with NNFMP; 15 Dec 2011 19:54:49 -0000\r\nX-Received: from [98.137.34.36] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 15 Dec 2011 19:54:49 -0000\r\nDate: Thu, 15 Dec 2011 19:54:46 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;jcdja6+os62@...&gt;\r\nIn-Reply-To: &lt;B63BB307-9706-4CCE-8D1C-77238A7A2519@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;\r\nSubject: Re: Rails 3.2 and PATCH\r\nX-Yahoo-Group-Post: member; u=214300837; y=KMIigc0-FGePcW2j41usIve1LvI1LzyHfMeB_1HJ52GUg9p7Y7KN\r\nX-Yahoo-Profile: jakobstrauch\r\n\r\nThe problem is, that using PUT for partials is a widely used anti pattern. =\r\nthis may sound weird, but maybe it is time to redefine (ease) the HTTP spec=\r\ns to match to the reality...? \n\nIf major frameworks like e.g. rails use thi=\r\ns anti pattern, how can any intermediary rely on the intended semantics of =\r\nPUT nowadays?\n\nJakob\n\n\n--- In rest-discuss@yahoogroups.com, Jan Algermissen=\r\n &lt;jan.algermissen@...&gt; wrote:\n&gt;\n&gt; \n&gt; On Dec 15, 2011, at 11:54 AM, Mike Kel=\r\nly wrote:\n&gt; \n&gt; &gt; What is it specifically, in practice, that non-compliant\n&gt;=\r\n &gt; implementations like Rails lose by &#39;doing it wrong&#39; and allowing\n&gt; &gt; par=\r\ntial PUTs?\n&gt; \n&gt; When a client (or intermediary, for that matter) re-does a =\r\nPUT N-times (e.g. because it did not receive any response the first N-1 tim=\r\nes due to network problems) the result on the server might not be what the =\r\nclient assumes it is, given the idempotent nature of PUT.\n&gt; \n&gt; A client tha=\r\nt is aware of the server&#39;s tunneling-partial-update-through-PUT semantics m=\r\night not redo the PUT but any intermediary in between might (because they w=\r\nould not be aware of the out-of-band knowledge / just like Google accelerat=\r\nor in the case of GET-to-delete-account).\n&gt; \n&gt; What is the problem of just =\r\nusing POST for the partial update in the first place? This is what POST is =\r\nfor.\n&gt; \n&gt; Jan\n&gt; \n&gt; \n&gt; \n&gt; &gt; \n&gt; &gt; On Thu, Dec 15, 2011 at 10:36 AM, Jan Alger=\r\nmissen\n&gt; &gt; &lt;jan.algermissen@...&gt; wrote:\n&gt; &gt;&gt; \n&gt; &gt;&gt; On Dec 15, 2011, at 11:0=\r\n2 AM, Mike Kelly wrote:\n&gt; &gt;&gt; \n&gt; &gt;&gt;&gt; On Thu, Dec 15, 2011 at 9:14 AM, Jan Al=\r\ngermissen\n&gt; &gt;&gt;&gt; &lt;jan.algermissen@...&gt; wrote:\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; On Dec 15, 2011=\r\n, at 1:42 AM, Mike Kelly wrote:\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt;&gt; I created a question on Sta=\r\nck Overflow about this a while ago:\n&gt; &gt;&gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt;&gt; http://stackoverflow.c=\r\nom/questions/2364110/whats-the-justification-behind-disallowing-partial-put=\r\n\n&gt; &gt;&gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt;&gt; I still don&#39;t really understand the benefit of not allowi=\r\nng PUT to be\n&gt; &gt;&gt;&gt;&gt;&gt; partial,\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; So you are asking, why PUT was=\r\n defined as idempotent in the first place, yes?\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; I think the =\r\nreason is sort of &quot;because we can define it that way&quot;. There is POST, which=\r\n has no visibility (=3D=3DPOST is meaningless to an intermediary) and every=\r\nthing could just be done with POST. But then, adding methods that *have* vi=\r\nsibility adds some serious capabilities to HTTP. E.g. GET&#39;s semantics allow=\r\n for caching and it is also very helpful that we know that GET is safe - we=\r\n can call it any number of times.\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; .. and PUTs &#39;complet=\r\ne replace&#39; semantics allow for.. ?\n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; You could do updates with =\r\nPOST, but then, full updates have the inherent property of being idempotent=\r\n so it makes sense to define a method for that, leveraging the idempotency =\r\nto the protocol level. Same for DELETE. For example, no a cache can mark co=\r\npies it has of a response as stale upon a corresponding response to a PUT. =\r\nPUT&#39;s idempotency is also a win over just using POST.\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; If the=\r\n interactions you design match the semantics of PUT, use it (for its added =\r\nvisibility), if they do not match, just use POST.\n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; Again.. the =\r\npoint of the question is to try and fathom what the\n&gt; &gt;&gt;&gt; &#39;guaranteed compl=\r\neteness&#39; of PUT requests actually contributes in\n&gt; &gt;&gt;&gt; terms of visibility =\r\non the web. i.e. what intermediary mechanisms rely\n&gt; &gt;&gt;&gt; on the completenes=\r\ns of a PUT?\n&gt; &gt;&gt; \n&gt; &gt;&gt; Huh? No, it is the other way round: *partial* update=\r\ns cannot be guaranteed to be idempotent. It is the idempotency we want for =\r\nthe sake of greater visibility (compared to POST). And we can only specify =\r\nidempotent update semantics if the updates are replaces.\n&gt; &gt;&gt; \n&gt; &gt;&gt; (As to =\r\nwhy partial updates cannot be guaranteed to be idempotent, see my answer in=\r\n the mentioned SO question).\n&gt; &gt;&gt; \n&gt; &gt;&gt; \n&gt; &gt;&gt; \n&gt; &gt;&gt; \n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; Redefini=\r\nng PUT to mean &#39;partial update without idempotency&#39; is no win because  &#39;par=\r\ntial update without idempotency&#39; does not give an intermediary any visibili=\r\nty. You could just use POST in the first place.\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt;&gt; Does that he=\r\nlp?\n&gt; &gt;&gt;&gt;&gt; \n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; No it doesn&#39;t. POST is a non-idempotent action; us=\r\ning it for an\n&gt; &gt;&gt;&gt; _intentionally idempotent partial update_\n&gt; &gt;&gt; \n&gt; &gt;&gt; Se=\r\ne - this is a contradiction. How would you prevent people to define media t=\r\nypes that lead to non-idempotency in partial updates? Remember that the met=\r\nhod semantics must be orthogonal to the media type semantics.\n&gt; &gt;&gt; \n&gt; &gt;&gt; It=\r\nempotent partial updates depend on the specific media type used and hence y=\r\nou cannot specify a method that alone has these idempotent partial update s=\r\nemantics.\n&gt; &gt;&gt; \n&gt; &gt;&gt; (This is also the reason why PATH cannot be idempotent=\r\n, never).\n&gt; &gt;&gt; \n&gt; &gt;&gt; Jan\n&gt; &gt;&gt; \n&gt; &gt;&gt;&gt; complicates the interaction\n&gt; &gt;&gt;&gt; from=\r\n the client&#39;s perspective - what if the request fails?\n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; =\r\nMaybe a better way of approaching this might be for someone to\n&gt; &gt;&gt;&gt; demons=\r\ntrate what supposed &quot;non-compliant&quot; implementations that allow\n&gt; &gt;&gt;&gt; partia=\r\nl PUT (e.g. Rails) lose as a result of not following the suposed\n&gt; &gt;&gt;&gt; &quot;wor=\r\nthwhile&quot; no-partials-allowed semantics of PUT?\n&gt; &gt;&gt;&gt; \n&gt; &gt;&gt;&gt; Cheers,\n&gt; &gt;&gt;&gt; M=\r\nike\n&gt; &gt;&gt;\n&gt;\n\n\n\n"}}