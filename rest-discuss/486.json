{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"zGy6jN0QrOGiNvMMIWH0eC6MsJn0SvPkLfOd5Ji3R7WdU9rdd93Mgp7oAEWaeLuRLAOjgJSwoANs9omCZ7__TjYhoADetQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] idempotent notifications","postDate":"1012508101","msgId":486,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTlBNUM1Ljc2Qzc4RTkyQHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTMxMTQwNTIyMC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":485,"nextInTopic":487,"prevInTime":485,"nextInTime":487,"topicId":453,"numMessagesInTopic":36,"msgSnippet":"... I m trying to preserve the ability for the notification URL to be mailto:paul@prescod.net . ... Does it? Or does it just need to send *a* URI? As long as","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 31 Jan 2002 20:16:09 -0000\r\nReceived: (qmail 12434 invoked from network); 31 Jan 2002 20:16:09 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m12.grp.snv.yahoo.com with QMQP; 31 Jan 2002 20:16:09 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 31 Jan 2002 20:16:08 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0VKG5N07420\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 31 Jan 2002 12:16:06 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0VKG4e20996\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 31 Jan 2002 12:16:04 -0800\r\nMessage-ID: &lt;3C59A5C5.76C78E92@...&gt;\r\nDate: Thu, 31 Jan 2002 12:15:01 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Rest-Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] idempotent notifications\r\nReferences: &lt;Pine.WNT.4.43.0201311405220.1400-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; The client has to do some form of state management\n&gt; anyway.  If the client needs the URI, it can\n&gt; encode that in the notification URL.\n\nI&#39;m trying to preserve the ability for the notification URL to be\nmailto:paul@... .\n\n&gt; The problem for the server is that multiple URIs\n&gt; may map to the same resource.  Those different\n&gt; URIs may be used by different clients for various\n&gt; purposes.  If the server has to send a URI, it\n&gt; also has to know which URI the client used to\n&gt; request notification about the Resource.\n&gt; That is really ugly.\n\nDoes it? Or does it just need to send *a* URI? As long as the client can\nretrieve the changed state from the URI, maybe it doesn&#39;t care if it is\n&quot;the same&quot; URI. I have to think that through more when I have time.\n\n&gt;...\n&gt; The subscription URL should be delivered in the\n&gt; response to notification.  It is a huge waste to\n&gt; deliver it with each notification.\n\nSame reasoning as above. Let&#39;s say you notice you&#39;re getting random,\nannoying notifications from some service. Maybe all else has failed and\nit is up to a human being to cancel the notifications. The header is\nequivalent to this:\n\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n\n&gt; Again, if the client really want it, the client\n&gt; could encode it in the notification URL.\n\nThat&#39; going to be one really ugly URL! Anyhow, my three concerns are as\nabove:\n\n 1. The software may not ask for it but after it gets accidentally\nuninstalled, whoever needs to turn off the notifications needs it.\n\n 2. The subscriber may be just be an email address in which case it\nisn&#39;t possible to arbitrarily munge the subscriber URI.\n\n&gt;...\n&gt; The client should be able to do subscription\n&gt; modifications in reply to a notification request.\n&gt; \n&gt; In particular, some set of 40x responses to a\n&gt; notification should be the equivalent of\n&gt; unsubscription. e.g. if the response to a\n&gt; notification is 403 FORBIDDEN, that is a strong\n&gt; hint that you don&#39;t want the subscription anymore.\n\nActually, right now it works the opposite way. If the subscriber doesn&#39;t\nrespond: &quot;Yes, please keep sending me crap&quot; then the sender must quit.\nMaybe that obviates point &quot;1&quot; above. \n\n&gt;...\n&gt; So the notion is that the notification message may\n&gt; optionally include a last update.  If the content\n&gt; is optional, I don&#39;t think you should really be\n&gt; using PUT.  \n\nMy point is that the semantic content of the message is merely:\n&quot;something changed&quot;. It is a PUT of a boolean. Everything else is up to\nthe application and should be JUST optimization.\n\n&gt; ... Because a series of empty PUT bodies\n&gt; doesn&#39;t mean that nothing has changed, only that\n&gt; the server decided not to send it.\n\nI think any particular application would either ALWAYS send a diff (or a\nmessage indicating why it didn&#39;t send a diff) or NEVER send a diff. The\nbody is optional at the notification spec level. Some apps may bother\nwith diffs and some may not.\n\n&gt;...\n&gt; I think there is a difference between having an\n&gt; empty body and having a NULL body.\n\nI want to leave the structure of the body entirely up to the\napplication, as HTTP does. I would just put constraints on its semantics\n(as HTTP does). 1. A notification should not send information that\ncannot be retrieved otherwise (everything other than the boolean is\nconsidered &quot;optimization&quot;). 2. It must not be possible for a client to\nget confused if it misses a message or gets one twice.\n\n&gt;...\n&gt; Suppose that you are modeling the set of seats in\n&gt; a theater.  Suppose you want to watch the seat\n&gt; next to yours:\n&gt; \n&gt; CREATED: someone sat down in the seat (you can&#39;t\n&gt;          invite a friend to sit next to you)\n&gt; CHANGED: the person took off her coat\n&gt; CHANGED: the person she took off her shoes\n&gt; DELETED: she got up and left and the seat is\n&gt;          now available again\n\nMy model is that you get a notification that something happened in the\nseat next to you. You look. If there is someone there and there wasn&#39;t\nbefore, then it was CREATEd. If there was someone there before and there\nisn&#39;t now, it was DELETEd. If the value changed it was CHANGED.\n\nIf it is vital to know that someone sat down and THEN they took off\ntheir coat and THEN they took off their shoes and THEN they left then\nyou reify that on the server.\n\nhttp://www.myseat.com/seat/11213/event_1 = CREATED\nhttp://www.myseat.com/seat/11213/event_2 = CHANGED\nhttp://www.myseat.com/seat/11213/event_3 = CHANGED\nhttp://www.myseat.com/seat/11213/event_4 = DELETED\n\nThe list of all such events is available at:\n\nhttp://www.myseat.com/seat/11213/events\n\nIf a customer want the detailed events, they can watch this. If you\ndon&#39;t care about the order of events, you just watch the seat. If there\nare twenty people who care about this seat and some of them are off the\nnetwork for a time then they can all get back in sync by looking at that\nURI.\n\nBecause it is necessary to handle this circumstance where clients go\noffine and come back on, it is necessary that messages be essentially\nirrelevant except for their timing. That&#39;s why I don&#39;t want to\nstandardize any indication of HOW something changed. A particular\napplication can do this *as an optimization* for clients who happen to\nhave always-on connections.\n\n Paul Prescod\n\n"}}