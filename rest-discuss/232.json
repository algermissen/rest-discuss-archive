{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","replyTo":"SENDER","senderId":"Y_M3o6cmYn43P15bLg_V9mK_wZk8eUfun7NVhB3JdqsyX1vPnAje11qyEh2BUykf48TsN2phn-eBw6jSWmGtQ5Vv_A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011899597","msgId":232,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwMTI0MTkxMy5PQUEyMzY1MEBtYXJrYmFrZXIuY2E+","inReplyToHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTMyNjA0MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPiBmcm9tICJTLiBBbGV4YW5kZXIgSmFjb2Jzb24iIGF0IEphbiAyNCwgMjAwMiAwMTo0OTo1NSBQTQ=="},"prevInTopic":231,"nextInTopic":233,"prevInTime":231,"nextInTime":233,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... No, Alex, that s not true.  HTTP was designed to support *all* the things you mentioned below.  Why?  Because it defines a very general application model","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 19:11:48 -0000\r\nReceived: (qmail 46330 invoked from network); 24 Jan 2002 19:11:47 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m10.grp.snv.yahoo.com with QMQP; 24 Jan 2002 19:11:47 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta2.grp.snv.yahoo.com with SMTP; 24 Jan 2002 19:11:47 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id OAA23650;\n\tThu, 24 Jan 2002 14:13:17 -0500\r\nMessage-Id: &lt;200201241913.OAA23650@...&gt;\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nTo: alex@... (S. Alexander Jacobson)\r\nDate: Thu, 24 Jan 2002 14:13:17 -0500 (EST)\r\nCc: mdierken@... (S. Mike Dierken), rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;Pine.WNT.4.43.0201241326040.1892-100000@...&gt; from &quot;S. Alexander Jacobson&quot; at Jan 24, 2002 01:49:55 PM\r\nX-Mailer: ELM [version 2.5 PL3]\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\n&gt; Thats because we are talking about using HTTP to\n&gt; implement something that isn&#39;t the domain of HTTP.\n\nNo, Alex, that&#39;s not true.  HTTP was designed to support *all* the\nthings you mentioned below.  Why?  Because it defines a very general\napplication model that all of them can be mapped onto.  You just have to\nmodel the application properly to make it fit the REST application model.\nGranted, some applications will fit better than others, and some will\nhave too much trouble fitting at all, but my rule of thumb on this is\nstraightforward; if you&#39;re doing it now with TCP, you can do it with\nHTTP.  It has served me well.\n\n&gt; HTTP was designed to be a synchronous,\n&gt; client/server, connectionless protocol.\n\nCorrection.  It was designed to be a stateless, request/response\nprotocol.  It is not necessarily synchronous, nor is it &quot;client/server&quot;\nin the traditional sense of the term where each actor plays a fix\nrole as either client or server, but not both.  HTTP permits actors\nplaying both roles.\n\n&gt;  It was\n&gt; designed to let clients request/update resources\n&gt; from a server simply and easily.\n\nMore or less, yes.  Now name an app that can&#39;t be modelled as a set\nof resources which are manipulated with the HTTP method set.\n\n&gt; It was not designed for asynch, p2p, chat, or\n&gt; distributed computation.\n\nAll of those can be modelled the way I described.  I use it for chat\n(and sometimes p2p) on a daily basis.  See http://www.snapchannels.net\n\n&gt; &gt; Something that would help me in the future is to model a large\n&gt; &gt; information-centric applications (including security and events) and create\n&gt; &gt; a direct mapping into URIs and HTTP. If anybody has any thoughts or\n&gt; &gt; experience with this, give me a shout. (The kind of thing I&#39;m thinking about\n&gt; &gt; is like an &#39;object oriented web&#39; but &#39;OO&#39; isn&#39;t appropriate. Components and\n&gt; &gt; interfaces are closer. Entity-relationship from rdbms and OMT/UML notation\n&gt; &gt; is closer still.)\n&gt; \n&gt; I tried to open this discussion earlier, but got\n&gt; no response.   I asked for a REST consisten way of\n&gt; implementing terrorist_or_not.com (a made up\n&gt; application).\n&gt; \n&gt; The idea is that security checkpoints send front\n&gt; and side views of individuals to some server and\n&gt; the server sends back information about whether\n&gt; the person looks like a known terrorist in the\n&gt; database.\n&gt; \n&gt; We can add the complexity that processing the\n&gt; request may take long enough for the response to\n&gt; arrive back asynchronously (but sometimes the\n&gt; server can decide quickly).\n&gt; \n&gt; I think the implementation is straightforward\n&gt; using MIME-RPC (because it can get much closer to\n&gt; application level semantics).  The REST\n&gt; implementation is much less obvious (at least to\n&gt; me).\n\nThis would be pretty easy.  POST the picture to /terrorists,\nwhich would add the picture to a database, and the response to the\nPOST could include a text/plain message saying &quot;Terrorist!!&quot; or\n&quot;Not a terrorist&quot;.  The response could also be a 201 response\n(indicating that a resource was created), which returned a URI\nthat identified that particular picture in the database.  So an\nHTML response could say;\n\n...\n&lt;a href=&quot;that-uri&quot;&gt;This person&lt;/a&gt; is not a terrorist.\n...\n\nMB\n-- \nMark Baker, Chief Science Officer, Planetfred, Inc.\nOttawa, Ontario, CANADA.      mbaker@...\nhttp://www.markbaker.ca   http://www.planetfred.com\n\n"}}