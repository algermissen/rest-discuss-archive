{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"zaC97wW4HufVkGl84TQSPj7UsnqqgDXBxJutXDOABFqdPXT0EAzG0PJ_AFav7MOmDFk9IyAqSe6emY_X6yk8dS3XeRw5PZOugRYhnHg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] An attempt at a RESTful implementation","postDate":"1026180286","msgId":1757,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMmYwMWMyMjZlYyRmZmU3NmY5MCRhMDAwYThjMEBzZWFpcnRobGFwdG9wPg==","referencesHeader":"PEI5NEY5MzY3LjNDNjIlamJvbmVAZGVlcGZpbGUuY29tPg=="},"prevInTopic":1754,"nextInTopic":1768,"prevInTime":1756,"nextInTime":1758,"topicId":1728,"numMessagesInTopic":9,"msgSnippet":"From: Jeff Bone  ... do ... do ... the ... (or ... p2p. ... sufficient ... supported ... HTTP, ... just ... that ... new ... Okay, it","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 9 Jul 2002 02:04:05 -0000\r\nReceived: (qmail 61901 invoked from network); 9 Jul 2002 02:04:05 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 9 Jul 2002 02:04:05 -0000\r\nReceived: from unknown (HELO mail.bbglobex.com) (208.251.163.4)\n  by mta2.grp.scd.yahoo.com with SMTP; 9 Jul 2002 02:04:05 -0000\r\nReceived: from seairthlaptop [68.10.252.33] by mail.bbglobex.com with ESMTP\n  (SMTPD32-6.06) id A38A43A70150; Mon, 08 Jul 2002 21:59:38 -0400\r\nMessage-ID: &lt;002f01c226ec$ffe76f90$a000a8c0@seairthlaptop&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;B94F9367.3C62%jbone@...&gt;\r\nSubject: Re: [rest-discuss] An attempt at a RESTful implementation\r\nDate: Mon, 8 Jul 2002 22:04:46 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nFrom: &quot;Jeff Bone&quot; &lt;jbone@...&gt;\n&gt;\n&gt; The distinction between client-server and peer-to-peer has everything to\ndo\n&gt; with overall system architecture - with the roles the various components\n&gt; play in the context of a single interaction - and, really, very little to\ndo\n&gt; with the underlying protocol.  Having built, I think, the first\n&gt; Internet-scale commercial p2p app (Ding!), I think I can safely make some\n&gt; assertions, here. ;-)\n&gt;\n&gt; I&#39;ve generally found C-S to be an inadequate distinction --- really, you\n&gt; want to think about whether components initiate or service a request in a\n&gt; given interaction;  a component that plays the role of a server in one\n&gt; interaction might be a client in the next;  indeed, proxy components play\n&gt; both roles in the context of a single conceptual interaction (server to\nthe\n&gt; initiating client, client to the origin server.)\n&gt;\n&gt; Another distinction is whether responses are synchronous or asynchronous\n(or\n&gt; both) with requests --- this issue is orthogonal but related to C-S v.\np2p.\n&gt; As discussed ad nauseam early in this list&#39;s lifecycle, either is\nsufficient\n&gt; to model the other.\n&gt;\n&gt; The short version is that you don&#39;t need new protocols beyond HTTP to do\n&gt; things like &quot;p2p&quot; or async --- assuming that the semantics of the\nsupported\n&gt; methods are equivalent.  The protocol should describe the interactions\n&gt; between components at a semantic level.\n&gt;\n&gt; Again, given the similarity between the semantics, I see no need for a new\n&gt; application protocol.\n&gt;\n&gt; &gt; It may be possible to force implementation all of the above on top of\nHTTP,\n&gt; &gt; but that feels to me like the proverbial &quot;square peg in a round hole&quot;.\n&gt;\n&gt; :-/\n&gt;\n&gt; I see nothing in your list that can&#39;t be modeled IMHO even more simply\njust\n&gt; by assuming you have resources chatting with each other over HTTP.  But\nthat\n&gt; may be because resource modeling in terms of HTTP has become second nature\n&gt; by now...  It&#39;s a hard thing to grok, but seriously:  whenever in the past\n&gt; I&#39;ve thought HTTP provided a more complex or unnatural or grotty model for\n&gt; something, I&#39;ve been wrong.  Having helped propagate at least one non-HTTP\n&gt; app protocol (whodp) and lived to regret it, I&#39;m seriously leery of any\nnew\n&gt; protocols.\n&gt;\n&gt; HTTP is incredibly general, and it doesn&#39;t have the constraints and\n&gt; implications that most programmers intuitively think it has.\n\nOkay, it sounds like you have worked with HTTP in ways that I have not.  If\nthis is the case, then you would obviously know how flexible HTTP is when\nit&#39;s actually applied to a situation.  Maybe I need to sit down and look at\nand work with HTTP in some of those same ways to see for myself...\n\n&gt; &gt; Yes, ONX is similar to XML.  However, the devil is in the details.  ONX\nis\n&gt; &gt; specifically designed to accomodate data in ways that XML is unsuited\nfor.\n&gt;\n&gt; You know, everytime I run into this argument, nobody can ever come up with\n&gt; datatypes that XML is *actually* unsuitable for.  (Graph structures are\n&gt; incredibly general...)\n&gt;\n&gt; &gt; It is also designed to be more efficiently parsable.\n&gt;\n&gt; Some research by some guys at IBM Almaden a year or so ago proved that the\n&gt; efficiency issue -wrt- parsing XML is wildly overstated.  For the average\n&gt; bit of XML, it&#39;s statistical noise in the overall performance picture.\n\nHmm... interesting.  Well, that is certainly something to think about (re\nXML vs. ONX).  However, as I pointed out, GTP can just as easily sit on top\nof XML, so it&#39;s not an issue as far as GTP discussions go.\n\n&gt; Methinks you misunderstand the purpose of this list...  It exists, in\nlarge\n&gt; part, specifically to help propagate better understanding of HTTP&#39;s\n&gt; generality and utility.  Resistance is futile. :-)  Reinventing the wheel\nis\n&gt; one thing;  reinventing *wood* something else entirely. ;-)\n\nYes, this is definitely true.  The list description is &quot;Introductory-level\ndiscussion about REpresentational State Transfer, the name given to the\narchitecture of the World Wide Web by Roy Fielding&quot;. Hmm...\n\nThanks for the feedback.  I am not convinced that GTP isn&#39;t a better\nsolution, but I do realize I need to take a better look at the workings of\nHTTP.  :)\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}