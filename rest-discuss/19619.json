{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"TVSuFZqALtuGpOdpJkAQqu-0clAUTVilylT-WULIA9bQlnNfZqgEqXnZkfoZLHgWsb-4oUWZWjgqHlj4f3mMLJ3ix3_hSL8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] User Hypermedia format","postDate":"1393616481","msgId":19619,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBUFdfOG02K3ZUb3ItdnRUUlZUaDNZZ2tYTk9mYWlXcFlmcDVWUV9WZj1ucDRPa050Z0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDAxN0ExRTFFLTk4RkMtNEIwMC04NDBELThFQUZGMjAyMUM5RUBnbWFpbC5jb20+","referencesHeader":"PENBUFdfOG03ZjBFNjhrTmtKTkxCR0hSdGllOFpRSkZtVWJwR185RmpoNG9lY2t6OXgzQUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxFMDRYVVJoRHJhLVQ3djNhZ0t2VUVCM1NTTFlOV1B3T2tIU2tkYkVyeCtnQUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG03cGVLR19iK0xTVU1YMnZtdTNMWHc1ZitnS1VTLUxkX0VkMC1jdW5TWC1ZUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01cG41WDlramFhb2lzSj1MQU9Pa1JYbUpSVUM9akxYOXYzY0FEUktlYUpKUUBtYWlsLmdtYWlsLmNvbT4gPENBSkVMbkxHUytuNFBaMkdNZW55Zj1aOXQxbmVQc1pNK0tpd1ByZjhBU0ZkZnhXUjJOZ0BtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG01OVkwOHA3NTFZaHJYQVUxK0oyX1NxUD03VVdtPXhVZmJobVF6dTBzUjFkUUBtYWlsLmdtYWlsLmNvbT4gPENBUFdfOG02VEhoVk01MlhIS3dMWVpBTG5yeDh4Rk94RXMraUxQcU1YR0ZZdTZvcWhFd0BtYWlsLmdtYWlsLmNvbT4gPDAxN0ExRTFFLTk4RkMtNEIwMC04NDBELThFQUZGMjAyMUM5RUBnbWFpbC5jb20+"},"prevInTopic":19618,"nextInTopic":19623,"prevInTime":19618,"nextInTime":19620,"topicId":19617,"numMessagesInTopic":4,"msgSnippet":"understood: so in the XML flavor you certainly can do a CDATA pattern and embed a custom object in the message. this reduces it s usefulness to anyone except ","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50681 invoked by uid 102); 28 Feb 2014 19:41:43 -0000\r\nX-Received: from unknown (HELO mtaq5.grp.bf1.yahoo.com) (10.193.84.36)\n  by m11.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 19:41:43 -0000\r\nX-Received: (qmail 30734 invoked from network); 28 Feb 2014 19:41:43 -0000\r\nX-Received: from unknown (HELO mail-wi0-f170.google.com) (209.85.212.170)\n  by mtaq5.grp.bf1.yahoo.com with SMTP; 28 Feb 2014 19:41:43 -0000\r\nX-Received: by mail-wi0-f170.google.com with SMTP id hi5so2275152wib.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 28 Feb 2014 11:41:43 -0800 (PST)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=1e100.net; s=20130820;\n        h=x-gm-message-state:mime-version:sender:in-reply-to:references:from\n         :date:message-id:subject:to:cc:content-type;\n        bh=xZE/2pwkWMPn0saJIiWhyDNhKe6xuXc83CzFKTurbuA=;\n        b=J6Z1fVDdLfVBe2L0YF+e0zUtA/gXv/4qmC0QOvzmgZk0ovgPsl2qEsUL5y8pHBQpzm\n         bhOsNYeIEha++3EBA09Nh8xp7xiidNLaXRJWmooxwpdhTjoAiHIS7tZnyNY3NF8v9Bgv\n         pRAIaxosxYacltPQzxj5wJiKifCK6k++rOlf3sR0cPMFnBh/qdmxF2bcdlIKBgZQz45o\n         VKhxphstj9CgXF0TUWd4YJ6FkH2L5Eoiyg9+//qWpBCgC8ZE9VrD78bqqkgkOKBNNN3k\n         djvIRLXcGq0jDLwCznxDnRBAelR4BLf1D7x2YUWgrlTGVsd/H8DU064Fzwv1hxusAJOr\n         uk+A==\r\nX-Gm-Message-State: ALoCoQmGccVXQ3zspK2JgZXbxq2cMlvTnhDSw8SZ3oW+zAjM+qq8lI5a0aGNcDkMKw9mAcizurid\r\nX-Received: by 10.180.103.227 with SMTP id fz3mr4852167wib.29.1393616503071;\n Fri, 28 Feb 2014 11:41:43 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.194.158.2 with HTTP; Fri, 28 Feb 2014 11:41:21 -0800 (PST)\r\nIn-Reply-To: &lt;017A1E1E-98FC-4B00-840D-8EAFF2021C9E@...&gt;\r\nReferences: &lt;CAPW_8m7f0E68kNkJNLBGHRtie8ZQJFmUbpG_9Fjh4oeckz9x3A@...&gt;\n &lt;CAJELnLE04XURhDra-T7v3agKvUEB3SSLYNWPwOkHSkdbErx+gA@...&gt;\n &lt;CAPW_8m7peKG_b+LSUMX2vmu3LXw5f+gKUS-Ld_Ed0-cunSX-YQ@...&gt;\n &lt;CAPW_8m5pn5X9kjaaoisJ=LAOOkRXmJRUC=jLX9v3cADRKeaJJQ@...&gt;\n &lt;CAJELnLGS+n4PZ2GMenyf=Z9t1nePsZM+KiwPrf8ASFdfxWR2Ng@...&gt;\n &lt;CAPW_8m59Y08p751YhrXAU1+J2_SqP=7UWm=xUfbhmQzu0sR1dQ@...&gt;\n &lt;CAPW_8m6THhVM52XHKwLYZALnrx8xFOxEs+iLPqMXGFYu6oqhEw@...&gt; &lt;017A1E1E-98FC-4B00-840D-8EAFF2021C9E@...&gt;\r\nDate: Fri, 28 Feb 2014 14:41:21 -0500\r\nX-Google-Sender-Auth: dBJUt0rGdb6BOh_R18kiVwwmzfI\r\nMessage-ID: &lt;CAPW_8m6+vTor-vtTRVTh3YgkXNOfaiWpYfp5VQ_Vf=np4OkNtg@...&gt;\r\nTo: Matt McClure &lt;matthewlmcclure@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=f46d04428e709e7dac04f37ca0b4\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] User Hypermedia format\r\nX-Yahoo-Group-Post: member; u=69164307; y=EYa_rIb_5q5uYI425WcwSq87FlHCMbTDUYPqUvsbDuGw\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--f46d04428e709e7dac04f37ca0b4\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nunderstood:\n\nso in the XML flavor you certainly can do a CDATA pattern and embed a\ncustom object in the message. this reduces it&#39;s usefulness to anyone except\nthose who write custom apps (or use your custom libs/plugins) that\nunderstand this embedded object.\n\ni suspect we can set up some similar thing in the JSON variant (the ability\nto embed arbitrary objects/trees in an Uber msg) and the same would apply -\nonly those pre-built to understand what&#39;s already coming would be able to\nuse that representation.\n\nof course, this assumes that the idea of existing Uber clients being able\nto read/process/display your data w/o additional custom coding is even a\nvalue for you. it may not be.\n\n\nNow, to back up a bit.\n\n1) is this really about programmer optimization? id yes, a few bits of code\nthat translates the internal data into Uber is not a big deal and could\nsolve that problem.\n\n2) is this about payload size? i don&#39;t think uber adds much weight at all\nhere (the JSON flavor is certainly more compact than the XML one). and when\nyou&#39;re talking about 180,000 data points. that&#39;s a pretty big chunk of data\nanyway. you&#39;re free to use compression on the outbound with will greatly\nreduce the added weight since repeated chars compress very nicely.\n\n3) finally, what format are you using now? have you looked at HAL? it is\ndesigned to host arbitrary objects in a wrapper.  I&#39;d be interested to see\nsome comparisions (custom format, HAL, Uber) not just of size of the\nrepresentation but also the size of the compressed response and the cost to\nprocess (surely the Uber will be the most costly to process, right?)\n\nanyway, this is all good stuff and i&#39;d love to follow up on what you&#39;re\ndoing now and how a change to something like Uber will make things diff for\nyou.\n\n\n\n\n\n\nmamund\n+1.859.757.1449\nskype: mca.amundsen\nhttp://amundsen.com/blog/\nhttp://twitter.com/mamund\nhttps://github.com/mamund\nhttp://linkedin.com/in/mamund\n\n\nOn Fri, Feb 28, 2014 at 2:13 PM, Matt McClure &lt;matthewlmcclure@...&gt;wrote:\n\n&gt;\n&gt;\n&gt; I&#39;m concerned about verbosity of the messages as well as programmer time\n&gt; and experience.\n&gt;\n&gt; For example, I&#39;ve been working with high resolution time series fitness\n&gt; data. Conceptually it&#39;s array like. There might be tens of samples per\n&gt; second of 1-10 different metrics, and 30 minutes is a typical duration. I&#39;d\n&gt; like a format that just let me represent that part of a message as a\n&gt; compact first class array.\n&gt;\n&gt; --\n&gt; http://matthewlmcclure.com\n&gt;\n&gt; On Feb 28, 2014, at 11:58 AM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt; (copying back to the list)\n&gt;\n&gt; all good Qs...\n&gt;\n&gt; &quot;How does the XML format represent true, false, and null?&quot;\n&gt; ****\n&gt; so far, the approach i have is to treat this all as text data:\n&gt; &lt;data transclude=&quot;false&quot; /&gt;\n&gt;\n&gt; it&#39;s possible to go further into this space using XML Schema, but I am not\n&gt; really interested in backing that into the format design. You could\n&gt; *definitely* use it by adding a &lt;data url=&quot;...&quot; rel=&quot;schema&quot; /&gt; element at\n&gt; the top of a representation. if that&#39;s what you want do to.\n&gt; ****\n&gt;\n&gt; &quot;How does the XML format represent objects and arrays? (Some sadist will\n&gt; put JSON in there unless we have a better answer.)&quot;\n&gt; ****\n&gt; in XML there is no intrinsic Array pattern, just an implied one\n&gt; &lt;data rel=&quot;collection&quot; ...&gt;\n&gt;   &lt;data rel=&quot;item&quot; ... /&gt;\n&gt;   &lt;data rel=&quot;item&quot; ... /&gt;\n&gt; &lt;/data&gt;\n&gt;\n&gt; is usually converted into an array in code.\n&gt;\n&gt; JSON does this differently, of course by *requiring* explicit use of Array\n&gt; in the representation.\n&gt; ****\n&gt;\n&gt; &quot;More generally, I imagine your intent is to constrain clients to adopt\n&gt; more of a tolerant reader approach and use less automatic serialization and\n&gt; deserialization.&quot;\n&gt; ****\n&gt; bingo! ;)\n&gt;\n&gt; my designs almost always attempt to downplay direct serialization\n&gt; into/from code. The trouble is programming languages can change over time\n&gt; and I&#39;d like to make sure my designs don&#39;t favor (or become dependent) upon\n&gt; a sub-set of programming languages.\n&gt; ****\n&gt;\n&gt; &quot;At the same time, I think there&#39;s potential value in making compound,\n&gt; complex data more of a first class citizen. Allowing bare object and array\n&gt; data representations (not serialized into a quoted string) would let\n&gt; clients and servers reach inside the data without additional explicit\n&gt; deserialization steps.&quot;\n&gt; ****\n&gt; Keeping in mind what you describe here is a &quot;programmer optimization&quot;\n&gt; there are lots of ways to do this. We all got used to converting XML into\n&gt; code by way of &quot;black box&quot; functions in a language. We also got used to\n&gt; converting JSON into code in languages that didn&#39;t have the same internal\n&gt; structure as javascript. we did this w/ black box code.\n&gt;\n&gt; We can do the same with Uber (or any format, really). We need a DOM for\n&gt; that ,but it&#39;s not too hard; esp. with something like Uber that allows for\n&gt; recursion in the model.\n&gt; ****\n&gt;\n&gt; &quot;I guess one risk of allowing objects and arrays is the antipattern of\n&gt; using a single data element whose value is a very complex object.&quot;\n&gt; ****\n&gt; right, the killer is that messages become &quot;envelopes&quot; for code. this is\n&gt; what i am trying to avoid. I am trying to design format where messages are\n&gt; messages &quot;all the way down&quot; ;)\n&gt;\n&gt; this means there is &quot;heavy lifting&quot; in creating the message\n&gt; (serialization) and parsing it for use (&quot;de-serialization&quot;) and I want to\n&gt; keep that heavy lifting in code on each end - not in the message design\n&gt; itself.   For example the appeal of JSON is that there is &quot;zero&quot; lifting if\n&gt; you are writing javascript. However, that value dwindles as you get into\n&gt; other languages (erlang, python, etc.).\n&gt;\n&gt; &quot;What are the tradeoffs you&#39;re trying to balance?&quot;\n&gt; ****\n&gt; i&#39;m experimenting here with ways to make it easier to express a wide range\n&gt; of use cases in a minimal format. and ways to make it easier to\n&gt; parse/validate the message regardless of platform or language.\n&gt;\n&gt; in my Cj design i actually created a design that gave a bit &quot;middle\n&gt; finger&quot; to serializers everywhere&lt;g&gt;. i also tried to make to really hard\n&gt; to pass recursive messages by forcing a very flat structure in the message\n&gt; model.\n&gt;\n&gt; with Uber, i am working on the other end of that set of values. i want to\n&gt; create a model that leads devs into creating recursive messages. but I am\n&gt; still working to thwart attempts to create code envelopes. Uber is a kind\n&gt; of &quot;proxy&quot; for objects on either end of the convo, not a &quot;high-fidelity\n&gt; object tree tunnel&quot; (if that makes any sense).\n&gt;\n&gt; hope this helps and love to hear more from you on this.\n&gt;\n&gt;\n&gt;\n&gt; mamund\n&gt; +1.859.757.1449\n&gt; skype: mca.amundsen\n&gt; http://amundsen.com/blog/\n&gt; http://twitter.com/mamund\n&gt; https://github.com/mamund\n&gt; http://linkedin.com/in/mamund\n&gt;\n&gt;\n&gt; On Thu, Feb 27, 2014 at 1:40 PM, Matt McClure &lt;matthewlmcclure@...&gt;wrote:\n&gt;\n&gt;&gt; Mike,\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Monday, February 24, 2014, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;&gt; I&#39;ve also added some text to the &quot;value&quot; definition to say JSON format\n&gt;&gt;&gt; MUST only be set to string, number, or literals (true, false, null) and\n&gt;&gt;&gt; MUST NOT be set to object or array. What is then implied (not yet stated in\n&gt;&gt;&gt; the prose) is that, to pass arrays or objects in the &quot;value&quot; attribute, you\n&gt;&gt;&gt; need to *escape* the object/array and pass as a string.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; How does the XML format represent true, false, and null?\n&gt;&gt;\n&gt;&gt; How does the XML format represent objects and arrays? (Some sadist will\n&gt;&gt; put JSON in there unless we have a better answer.)\n&gt;&gt;\n&gt;&gt; More generally, I imagine your intent is to constrain clients to adopt\n&gt;&gt; more of a tolerant reader approach and use less automatic serialization and\n&gt;&gt; deserialization.\n&gt;&gt;\n&gt;&gt; At the same time, I think there&#39;s potential value in making compound,\n&gt;&gt; complex data more of a first class citizen. Allowing bare object and array\n&gt;&gt; data representations (not serialized into a quoted string) would let\n&gt;&gt; clients and servers reach inside the data without additional explicit\n&gt;&gt; deserialization steps.\n&gt;&gt;\n&gt;&gt; I guess one risk of allowing objects and arrays is the antipattern of\n&gt;&gt; using a single data element whose value is a very complex object.\n&gt;&gt;\n&gt;&gt; What are the tradeoffs you&#39;re trying to balance?\n&gt;&gt;\n&gt;&gt; Matt\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; Matt McClure\n&gt;&gt; http://matthewlmcclure.com\n&gt;&gt; http://www.mapmyfitness.com/profile/matthewlmcclure\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n\r\n--f46d04428e709e7dac04f37ca0b4\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;understood:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;so in the XML flavor you ce=\r\nrtainly can do a CDATA pattern and embed a custom object in the message. th=\r\nis reduces it&#39;s usefulness to anyone except those who write custom apps=\r\n (or use your custom libs/plugins) that understand this embedded object.&lt;/d=\r\niv&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;i suspect we can set up some similar thing in the =\r\nJSON variant (the ability to embed arbitrary objects/trees in an Uber msg) =\r\nand the same would apply - only those pre-built to understand what&#39;s al=\r\nready coming would be able to use that representation.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;&lt;div style&gt;of course, this assumes that the idea of existing Uber clients=\r\n being able to read/process/display your data w/o additional custom coding =\r\nis even a value for you. it may not be.&lt;/div&gt;&lt;div style&gt;&lt;br&gt;\n\n&lt;/div&gt;&lt;div st=\r\nyle&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Now, to back up a bit.&nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1)=\r\n is this really about programmer optimization? id yes, a few bits of code t=\r\nhat translates the internal data into Uber is not a big deal and could solv=\r\ne that problem.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2) is this about payload size? i=\r\n don&#39;t think uber adds much weight at all here (the JSON flavor is cert=\r\nainly more compact than the XML one). and when you&#39;re talking about 180=\r\n,000 data points. that&#39;s a pretty big chunk of data anyway. you&#39;re =\r\nfree to use compression on the outbound with will greatly reduce the added =\r\nweight since repeated chars compress very nicely.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;di=\r\nv style&gt;3) finally, what format are you using now? have you looked at HAL? =\r\nit is designed to host arbitrary objects in a wrapper. &nbsp;I&#39;d be int=\r\nerested to see some comparisions (custom format, HAL, Uber) not just of siz=\r\ne of the representation but also the size of the compressed response and th=\r\ne cost to process (surely the Uber will be the most costly to process, righ=\r\nt?)&lt;/div&gt;\n\n&lt;div style&gt;&lt;br&gt;&lt;/div&gt;&lt;div style&gt;anyway, this is all good stuff a=\r\nnd i&#39;d love to follow up on what you&#39;re doing now and how a change =\r\nto something like Uber will make things diff for you.&lt;/div&gt;&lt;div style&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div style&gt;\n\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;=\r\n&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;&lt;br=\r\n&gt;&lt;/div&gt;mamund&lt;div&gt;&lt;span&gt;&lt;span title=3D&quot;Call with Google Voice&quot;&gt;&lt;span title=\r\n=3D&quot;Call with Google Voice&quot;&gt;+1.859.757.1449&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;\n\nskype=\r\n: mca.amundsen&lt;br&gt;&lt;a href=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;h=\r\nttp://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://twitter.com/mamund&quot; targe=\r\nt=3D&quot;_blank&quot;&gt;http://twitter.com/mamund&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;https://github.com=\r\n/mamund&quot; target=3D&quot;_blank&quot;&gt;https://github.com/mamund&lt;/a&gt;&lt;br&gt;\n\n&lt;a href=3D&quot;ht=\r\ntp://linkedin.com/in/mamund&quot; target=3D&quot;_blank&quot;&gt;http://linkedin.com/in/mamun=\r\nd&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Feb 28, =\r\n2014 at 2:13 PM, Matt McClure &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:matth=\r\newlmcclure@...&quot; target=3D&quot;_blank&quot;&gt;matthewlmcclure@...&lt;/a&gt;&gt;&lt;/=\r\nspan&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8e=\r\nx;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n\n\n\n\n\n        \n&lt;div dir=\r\n=3D&quot;auto&quot;&gt;&lt;div class=3D&quot;&quot;&gt;\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\n&lt;div&gt;&lt;div&gt;&lt;span style=3D&quot;backgr=\r\nound-color:rgba(255,255,255,0)&quot;&gt;I&#39;m concerned about verbosity of the me=\r\nssages as well as programmer time and experience.&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;s=\r\npan style=3D&quot;background-color:rgba(255,255,255,0)&quot;&gt;&lt;br&gt;\n\n&lt;/span&gt;&lt;/div&gt;&lt;div&gt;=\r\n&lt;span style=3D&quot;background-color:rgba(255,255,255,0)&quot;&gt;For example, I&#39;ve =\r\nbeen working with high resolution time series fitness data. Conceptually it=\r\n&#39;s array like. There might be tens of samples per second of 1-10 differ=\r\nent metrics, and 30 minutes is a typical duration. I&#39;d like a format th=\r\nat just let me represent that part of a message as a compact first class ar=\r\nray.&lt;/span&gt;&lt;/div&gt;\n\n&lt;br&gt;&lt;span&gt;--&nbsp;&lt;/span&gt;&lt;div&gt;&lt;a href=3D&quot;http://matthewl=\r\nmcclure.com&quot; target=3D&quot;_blank&quot;&gt;http://matthewlmcclure.com&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;div&gt;&lt;br&gt;On Feb 28, 2014, at 11:58 AM, mike amun=\r\ndsen &lt;&lt;a href=3D&quot;mailto:mamund@...&quot; target=3D&quot;_blank&quot;&gt;mamund@yahoo=\r\n.com&lt;/a&gt;&gt; wrote:&lt;br&gt;\n\n&lt;br&gt;&lt;/div&gt;&lt;blockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;\n\n\n\n\n\n\n\n\n=\r\n\n\n\n\n \n\n&lt;span&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div dir=\r\n=3D&quot;ltr&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;(copying back to the list)&lt;br&gt;&lt;br&gt;&lt;div =\r\ndir=3D&quot;ltr&quot;&gt;all good Qs...&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&quot;&lt;span style=3D&quot;fon=\r\nt-family:arial,sans-serif;font-size:13px&quot;&gt;How does the XML format represent=\r\n true, false, and null?&quot;&lt;/span&gt;&lt;/div&gt;\n\n\n\n&lt;/div&gt;&lt;div&gt;&lt;font face=3D&quot;aria=\r\nl, sans-serif&quot;&gt;****&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;so f=\r\nar, the approach i have is to treat this all as text data:&lt;/font&gt;&lt;/div&gt;&lt;div=\r\n&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;data transclude=3D&quot;false&quot; /=\r\n&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\n\n\n\n\nit&#39;s possible to go further i=\r\nnto this space using XML Schema, but I am not really interested in backing =\r\nthat into the format design. You could *definitely* use it by adding a &lt;=\r\ndata url=3D&quot;...&quot; rel=3D&quot;schema&quot; /&gt; element at the to=\r\np of a representation. if that&#39;s what you want do to.&lt;/div&gt;\n\n\n\n\n&lt;div&gt;**=\r\n**&lt;/div&gt;&lt;div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&quot;How=\r\n does the XML format represent objects and arrays? (Some sadist will put JS=\r\nON in there unless we have a better answer.)&quot;&lt;/div&gt;\n\n\n\n\n&lt;/div&gt;&lt;div sty=\r\nle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div style=3D&quot;=\r\nfont-family:arial,sans-serif;font-size:13px&quot;&gt;in XML there is no intrinsic A=\r\nrray pattern, just an implied one&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans=\r\n-serif;font-size:13px&quot;&gt;\n\n\n\n\n&lt;data rel=3D&quot;collection&quot; ...&gt;&lt;/=\r\ndiv&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&nbsp; &lt;d=\r\nata rel=3D&quot;item&quot; ... /&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,s=\r\nans-serif;font-size:13px&quot;&gt;&nbsp; &lt;data rel=3D&quot;item&quot; ... /&gt;&lt;=\r\n/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;/d=\r\nata&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br=\r\n&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;is usuall=\r\ny converted into an array in code.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:aria=\r\nl,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans=\r\n-serif;font-size:13px&quot;&gt;JSON does this differently, of course by *requiring*=\r\n explicit use of Array in the representation.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-=\r\nfamily:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div&gt;&lt;div style=3D&quot;font-f=\r\namily:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:=\r\narial,sans-serif;font-size:13px&quot;&gt;&quot;More generally, I imagine your inten=\r\nt is to constrain clients to adopt more of a tolerant reader approach and u=\r\nse less automatic serialization and deserialization.&quot;&lt;/div&gt;\n\n\n\n\n&lt;/div&gt;=\r\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div s=\r\ntyle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;bingo! ;)&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D=\r\n&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;\n\n\n\n\nmy designs almost always=\r\n attempt to downplay direct serialization into/from code. The trouble is pr=\r\nogramming languages can change over time and I&#39;d like to make sure my d=\r\nesigns don&#39;t favor (or become dependent) upon a sub-set of programming =\r\nlanguages.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:1=\r\n3px&quot;&gt;****&lt;/div&gt;&lt;div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13=\r\npx&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&q=\r\nuot;At the same time, I think there&#39;s potential value in making compoun=\r\nd, complex data more of a first class citizen. Allowing bare object and arr=\r\nay data representations (not serialized into a quoted string) would let cli=\r\nents and servers reach inside the data without additional explicit deserial=\r\nization steps.&quot;&lt;/div&gt;\n\n\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px&quot;&gt;****&lt;br&gt;Keeping in mind what you describe here is a &q=\r\nuot;programmer optimization&quot; there are lots of ways to do this. We all=\r\n got used to converting XML into code by way of &quot;black box&quot; funct=\r\nions in a language. We also got used to converting JSON into code in langua=\r\nges that didn&#39;t have the same internal structure as javascript. we did =\r\nthis w/ black box code.&nbsp;&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,san=\r\ns-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-seri=\r\nf;font-size:13px&quot;&gt;We can do the same with Uber (or any format, really). We =\r\nneed a DOM for that ,but it&#39;s not too hard; esp. with something like Ub=\r\ner that allows for recursion in the model.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div&gt;&lt;div style=3D&quot;font-fami=\r\nly:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:ari=\r\nal,sans-serif;font-size:13px&quot;&gt;&quot;I guess one risk of allowing objects an=\r\nd arrays is the antipattern of using a single data element whose value is a=\r\n very complex object.&quot;&lt;/div&gt;\n\n\n\n\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial=\r\n,sans-serif;font-size:13px&quot;&gt;****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-=\r\nserif;font-size:13px&quot;&gt;right, the killer is that messages become &quot;envel=\r\nopes&quot; for code. this is what i am trying to avoid. I am trying to desi=\r\ngn format where messages are messages &quot;all the way down&quot; ;)&lt;/div&gt;=\r\n\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;=\r\ndiv style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;this means there =\r\nis &quot;heavy lifting&quot; in creating the message (serialization) and pa=\r\nrsing it for use (&quot;de-serialization&quot;) and I want to keep that hea=\r\nvy lifting in code on each end - not in the message design itself. &nbsp; F=\r\nor example the appeal of JSON is that there is &quot;zero&quot; lifting if =\r\nyou are writing javascript. However, that value dwindles as you get into ot=\r\nher languages (erlang, python, etc.).&nbsp;&lt;/div&gt;\n\n\n\n&lt;div&gt;\n&lt;div style=3D&quot;fo=\r\nnt-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-fam=\r\nily:arial,sans-serif;font-size:13px&quot;&gt;&quot;What are the tradeoffs you&#39;r=\r\ne trying to balance?&quot;&lt;/div&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-=\r\nserif;font-size:13px&quot;&gt;\n\n\n\n\n****&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-s=\r\nerif;font-size:13px&quot;&gt;i&#39;m experimenting here with ways to make it easier=\r\n to express a wide range of use cases in a minimal format. and ways to make=\r\n it easier to parse/validate the message regardless of platform or language=\r\n.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;=\r\n&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;in my Cj d=\r\nesign i actually created a design that gave a bit &quot;middle finger&quot;=\r\n to serializers everywhere&lt;g&gt;. i also tried to make to really hard to=\r\n pass recursive messages by forcing a very flat structure in the message mo=\r\ndel.&lt;/div&gt;\n\n\n\n\n&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;with Ub=\r\ner, i am working on the other end of that set of values. i want to create a=\r\n model that leads devs into creating recursive messages. but I am still wor=\r\nking to thwart attempts to create code envelopes. Uber is a kind of &quot;p=\r\nroxy&quot; for objects on either end of the convo, not a &quot;high-fidelit=\r\ny object tree tunnel&quot; (if that makes any sense).&lt;/div&gt;\n\n\n\n\n&lt;div style=\r\n=3D&quot;font-family:arial,sans-serif;font-size:13px&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;fo=\r\nnt-family:arial,sans-serif;font-size:13px&quot;&gt;hope this helps and love to hear=\r\n more from you on this.&lt;/div&gt;&lt;div style=3D&quot;font-family:arial,sans-serif;fon=\r\nt-size:13px&quot;&gt;\n\n\n\n\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;div&gt;&lt;br clear=\r\n=3D&quot;all&quot;&gt;&lt;div&gt;&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;mamund&lt;div&gt;&lt;span&gt;&lt;span title=\r\n=3D&quot;Call with Google Voice&quot;&gt;&lt;span title=3D&quot;Call with Google Voice&quot;&gt;&lt;a href=\r\n=3D&quot;tel:%2B1.859.757.1449&quot; value=3D&quot;+18597571449&quot; target=3D&quot;_blank&quot;&gt;+1.859.=\r\n757.1449&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;\n\n\n\n\nskype: mca.amundsen&lt;br&gt;&lt;a href=3D=\r\n&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;=\r\n&lt;br&gt;&lt;a href=3D&quot;http://twitter.com/mamund&quot; target=3D&quot;_blank&quot;&gt;http://twitter.=\r\ncom/mamund&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;https://github.com/mamund&quot; target=3D&quot;_blank&quot;&gt;h=\r\nttps://github.com/mamund&lt;/a&gt;&lt;br&gt;\n\n\n\n\n&lt;a href=3D&quot;http://linkedin.com/in/mamu=\r\nnd&quot; target=3D&quot;_blank&quot;&gt;http://linkedin.com/in/mamund&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;=\r\nbr&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Feb 27, 2014 at 1=\r\n:40 PM, Matt McClure &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:matthewlmcclur=\r\ne@...&quot; target=3D&quot;_blank&quot;&gt;matthewlmcclure@...&lt;/a&gt;&gt;&lt;/span&gt; wro=\r\nte:&lt;br&gt;\n\n\n\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:1px #ccc =\r\nsolid&quot;&gt;\nMike,&lt;div&gt;&lt;br&gt;&lt;br&gt;On Monday, February 24, 2014, mike amundsen &lt;&lt;=\r\na href=3D&quot;mailto:mamund@...&quot; target=3D&quot;_blank&quot;&gt;mamund@...&lt;/a&gt;&g=\r\nt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:1px #cc=\r\nc solid&quot;&gt;\n\n\n\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;I&#39;ve also added some text to the &qu=\r\not;value&quot; definition to say JSON format MUST only be set to string, nu=\r\nmber, or literals (true, false, null) and MUST NOT be set to object or arra=\r\ny. What is then implied (not yet stated in the prose) is that, to pass arra=\r\nys or objects in the &quot;value&quot; attribute, you need to *escape* the =\r\nobject/array and pass as a string.&nbsp;&lt;/div&gt;\n\n\n\n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;How does the XML format represent true, false, and nu=\r\nll?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;How does the XML format represent objects and =\r\narrays? (Some sadist will put JSON in there unless we have a better answer.=\r\n)&lt;/div&gt;\n\n\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;More generally, I imagine your intent is t=\r\no constrain clients to adopt more of a tolerant reader approach and use les=\r\ns automatic serialization and deserialization.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;At =\r\nthe same time, I think there&#39;s potential value in making compound, comp=\r\nlex data more of a first class citizen. Allowing bare object and array data=\r\n representations (not serialized into a quoted string) would let clients an=\r\nd servers reach inside the data without additional explicit deserialization=\r\n steps.&lt;/div&gt;\n\n\n\n\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I guess one risk of allowing objects=\r\n and arrays is the antipattern of using a single data element whose value i=\r\ns a very complex object.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What are the tradeoffs yo=\r\nu&#39;re trying to balance?&lt;/div&gt;\n\n\n\n\n&lt;span&gt;&lt;font color=3D&quot;#888888&quot;&gt;\n&lt;div&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div&gt;Matt&lt;/div&gt;&lt;/font&gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;-- &lt;br&gt;Matt McClure=\r\n&lt;br&gt;&lt;a href=3D&quot;http://matthewlmcclure.com&quot; target=3D&quot;_blank&quot;&gt;http://matthew=\r\nlmcclure.com&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.mapmyfitness.com/profile/matthewl=\r\nmcclure&quot; target=3D&quot;_blank&quot;&gt;http://www.mapmyfitness.com/profile/matthewlmccl=\r\nure&lt;/a&gt;&lt;br&gt;\n\n\n\n\n\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;=\r\n\n&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n\n\n\n\n\n\n\n&lt;/div&gt;&lt;/blockquote=\r\n&gt;\n\n\n\n\n\n&lt;br&gt;\n\n\n&lt;br&gt;\n\n\n\n\n&lt;/div&gt;&lt;/div&gt;&lt;div class=3D&quot;&quot;&gt;&lt;div width=3D&quot;1&quot; style=\r\n=3D&quot;color:white;clear:both&quot;&gt;&lt;/div&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--f46d04428e709e7dac04f37ca0b4--\r\n\n"}}