{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"-8EAdY_Hl1lPkbmn3-K5Q09VPPEWWevhJq4ev2S-0RJgfbWi8o-jtHMXv3lsOfXI9QPfsTKw6Ff0rDIXwRZ-89h0u93Kj-QUrpnoZr8ncQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST-OO?","postDate":"1022277375","msgId":1334,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNTNzZHJlRElPWldla3RxdVIwMDAwNWZhNUBob3RtYWlsLmNvbT4=","referencesHeader":"PDEwMjIzNjcxODJCOEQ1MTFBNzcxMDA1MDhCREYzNDg2MDQ5QTUxQ0JAZXhjaGFuZ2UtMS5rZXlub3RlLmNvbT4="},"prevInTopic":1332,"nextInTopic":1341,"prevInTime":1333,"nextInTime":1335,"topicId":1332,"numMessagesInTopic":5,"msgSnippet":"If you transition from object oriented programming to interface oriented programming and transition from method based access to property based access, I","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 24 May 2002 21:55:02 -0000\r\nReceived: (qmail 55296 invoked from network); 24 May 2002 21:55:02 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m14.grp.scd.yahoo.com with QMQP; 24 May 2002 21:55:02 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.46)\n  by mta1.grp.scd.yahoo.com with SMTP; 24 May 2002 21:55:02 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 24 May 2002 14:55:02 -0700\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;1022367182B8D511A77100508BDF3486049A51CB@...&gt;\r\nSubject: Re: [rest-discuss] REST-OO?\r\nDate: Fri, 24 May 2002 14:56:15 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nMessage-ID: &lt;OE53sdreDIOZWektquR00005fa5@...&gt;\r\nX-OriginalArrivalTime: 24 May 2002 21:55:02.0765 (UTC) FILETIME=[A82D39D0:01C2036D]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\nIf you transition from &#39;object&#39; oriented programming to &#39;interface&#39; oriented\nprogramming and transition from method based access to property based\naccess, I think you will find many similarities to REST in the micro-cosm of\nprocedural languages.\n\nBy moving to interfaces rather than objects, you tend towards reducing the\ntotal number of interfaces in the system. When you move towards using\nproperties (getFoo(), setFoo()) you also tend to have these properties\ndefined in terms of interfaces - often reusing the same interface. In the\nend - especially with languages with property-oriented syntax - a lot of\nsyntactical dirt starts falling away from your code and things become\nsimpler and cleaner. Without soap. ;)\n\n\n\n\n----- Original Message -----\nFrom: &quot;Joe Hsy&quot; &lt;joe.hsy@...&gt;\nTo: &lt;rest-discuss@yahoogroups.com&gt;\nSent: Friday, May 24, 2002 1:56 AM\nSubject: [rest-discuss] REST-OO?\n\n\n&gt;\n&gt; Hi,\n&gt;\n&gt; I recently began reading the discussion on REST vs. SOAP on this dl and on\n&gt; the RESTwiki and found it to be quite eye-opening.  I especially\nappreciate\n&gt; Paul Prescod&#39;s excellent articles and posts, and of course Roy Fielding&#39;s\n&gt; seminal thesis.\n&gt;\n&gt; Of the numerous benefits of the REST model, two things jumped out at me:\n&gt;\n&gt; 1. The benefit of a naming system (URI&#39;s) that encourages the explicit\n&gt; naming of resources so that those resources can become active participants\n&gt; in the system - thus, become leverageable by other applications and used\nin\n&gt; ways that the original resource provide may not have thought of.\n&gt;\n&gt; 2. The importance of using a few universal verbs (GET, PUT, POST, DELETE)\n&gt; for applications that want to scale to the web level, where it is\ndifficult\n&gt; to coordinate and enforce changes to every participant.\n&gt;\n&gt; These two concepts got me to thinking about REST and Object-Oriented\n&gt; programming.  At first, it would seem clear that they are opposing\n&gt; architectural approaches, especially when OO is view in the terms of CORBA\n&gt; or SOAP-RPC.  But, I actually think there is more in common than meets the\n&gt; eye.  Maybe this has already been discussed, but I would like to explore a\n&gt; way of looking at REST from an object-oriented viewpoint.\n&gt;\n&gt; One of the fundamental concepts behind OO is that everything is an object\n&gt; and every object has basic methods that it must support.  By using these\n&gt; basic methods, a whole bunch of interesting  applications can be written\n&gt; which manipulate objects without knowing anything else about these objects\n&gt; (for example, containers, sorters, formatters, storage, etc).\n&gt;\n&gt; Every object is addressable in the namespace of the OO system, in a\nsimilar\n&gt; way that URI&#39;s are addressable in the current web system.  And the generic\n&gt; object manipulators are not unlike how people create new applications from\n&gt; URI&#39;s that may be totally outside of the original intent of the URI\n&gt; providers.\n&gt;\n&gt; I think where CORBA and SOAP-RPC deviate from this is in their focus:\n&gt;\n&gt; 1. They don&#39;t encourage making all objects addressable, but rather\nencourage\n&gt; hiding objects behind a few addressable objects.\n&gt;\n&gt; 2. That they don&#39;t focus on just a few universal methods for all objects,\n&gt; but focus on defining new methods, many of them simply to access the data\n&gt; hidden per above.\n&gt;\n&gt; These two factors together vastly diminish the capability to benefit from\n&gt; the web&#39;s network effects and reduce the ability to create interesting\n&gt; applications from existing &quot;objects&quot;.\n&gt;\n&gt; To take this a little further, it seems that there may be some room for\n&gt; expanding from the current 4 basic methods (GET, PUT, POST, and DELETE)\n&gt; which are very much document-centric to include some basic methods for\n&gt; transaction-centric objects.\n&gt;\n&gt; As Bob Haugen mentioned in recent email, we would like to model\ntransactions\n&gt; in REST.  If we think of URI&#39;s are objects, a transaction may be like a\n&gt; thread object.  We may want to add START, STOP, CANCEL, and GETSTATE\n(maybe\n&gt; can be overloaded by GET).  With some basic set of extensions, we can\nwrite\n&gt; applications that can control and monitor arbitrary transaction systems.\n&gt;\n&gt; Anyway, just some late night ramblings.\n&gt;\n&gt; //Joe\n&gt;\n&gt; This email message, and any attachments to it, are for the sole use of the\n&gt; intended recipients, and may contain confidential and privileged\n&gt; information.  Any unauthorized review, use, disclosure or distribution of\n&gt; this email message or its attachments is prohibited.  If you are not the\n&gt; intended recipient, please contact the sender by reply email and destroy\nall\n&gt; copies of the original message.\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n&gt;\n\n"}}