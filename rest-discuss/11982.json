{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"amsmota@gmail.com","from":"amsmota@...","profile":"amsmota","replyTo":"SENDER","senderId":"7hubBcrEl8N6VtX5xZbKCM2gM0dbf61uPQVfX5-PHoU9Ff8yMen6lIF7DxxSA1Lx1WhTOv_-U18","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful web service with some custom operations","postDate":"1231766186","msgId":11982,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMTUxNzRjM2QxMGY5ODE0YTA0NjA0OGU5OTJAZ29vZ2xlLmNvbT4="},"prevInTopic":11980,"nextInTopic":11983,"prevInTime":11981,"nextInTime":11983,"topicId":11980,"numMessagesInTopic":19,"msgSnippet":"I, with my limited understand of restfulness , don t see why passing the migrate to node as a parameter will breaks many principles and benefits of REST .","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6356 invoked from network); 12 Jan 2009 13:16:27 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m36.grp.scd.yahoo.com with QMQP; 12 Jan 2009 13:16:27 -0000\r\nX-Received: from unknown (HELO ey-out-1516.google.com) (74.125.78.161)\n  by mta17.grp.scd.yahoo.com with SMTP; 12 Jan 2009 13:16:27 -0000\r\nX-Received: by ey-out-1516.google.com with SMTP id 28so319155eya.15\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 12 Jan 2009 05:16:26 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.210.70.14 with SMTP id s14mr82503eba.17.1231766186195; Mon, 12 \n\tJan 2009 05:16:26 -0800 (PST)\r\nMessage-ID: &lt;0015174c3d10f9814a046048e992@...&gt;\r\nDate: Mon, 12 Jan 2009 13:16:26 +0000\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0015174c3d10f9812e046048e933\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: amsmota@...\r\nSubject: Re: [rest-discuss] RESTful web service with some custom operations\r\nX-Yahoo-Group-Post: member; u=279478415; y=yJkS-V-COCv7m-6FZu1FsB37l6d7Efmdr2yMYZkJQd11xw\r\nX-Yahoo-Profile: amsmota\r\n\r\n\r\n--0015174c3d10f9812e046048e933\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\n\r\nI, with my limited understand of &quot;restfulness&quot;, don&#39;t see why passing  \nthe &quot;migrate to&quot; node as a parameter will &quot;breaks many principles and  \nbenefits of REST&quot;. It seems to me the &quot;correct&quot; way to do it.\n\nWhy do you think that? And what principles and benefits are you refering?\n\n\n\nOn Jan 12, 2009 11:01am, Gabor Szokoli &lt;szocske@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Hi there!\n&gt;\n&gt;\n&gt;\n&gt; I like the idea of RESTful web services a lot in theory, especially\n&gt;\n&gt; compared to the alternative...\n&gt;\n&gt;\n&gt;\n&gt; So we started building a pudding proofing web service for our\n&gt;\n&gt; application. (Please note that the web service is only an auxiliary\n&gt;\n&gt; function of the application, web services are not our core business.)\n&gt;\n&gt;\n&gt;\n&gt; Our prototype service model is intentionally simplistic: we have\n&gt;\n&gt; &quot;nodes&quot; and &quot;users&quot; in a one-to-many containment relationship.\n&gt;\n&gt; All is fine creating, requesting and updating them, deleting &quot;users&quot;\n&gt;\n&gt; is also fine.\n&gt;\n&gt; Before deleting a &quot;node&quot; however, the normal usage pattern would be\n&gt;\n&gt; migrating all its &quot;users&quot; to another &quot;node&quot;.\n&gt;\n&gt; I am having trouble adding this single &quot;RPC-ish&quot; operation to our\n&gt;\n&gt; otherwise RESTful service efficiently.\n&gt;\n&gt; The clean solution would be the client listing, and migrating all\n&gt;\n&gt; &quot;users&quot; of the &quot;node&quot;.\n&gt;\n&gt; This is however neither efficient, nor atomic.\n&gt;\n&gt; The quick and dirty solution would be passing the fallback &quot;node&quot; as\n&gt;\n&gt; an argument of the DELETE operation, but that breaks many principles\n&gt;\n&gt; and benefits of REST.\n&gt;\n&gt;\n&gt;\n&gt; I am pretty sure similar architecturally unstylish situations will\n&gt;\n&gt; arise in all our services, just like databases have stored procedures,\n&gt;\n&gt; not just SQL.\n&gt;\n&gt;\n&gt;\n&gt; Surely I am not the first with such an issue. Could the kind members\n&gt;\n&gt; of this fine discussion group share their opinions on this, and/or\n&gt;\n&gt; point me towards relevant literature?\n&gt;\n&gt;\n&gt;\n&gt; Thank you in advance:\n&gt;\n&gt;\n&gt;\n&gt; Gabor Szokoli\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;\n&gt;\n\r\n--0015174c3d10f9812e046048e933\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI, with my limited understand of &quot;restfulness&quot;, don&#39;t see why=\r\n passing the &quot;migrate to&quot; node as a parameter will &quot;breaks m=\r\nany principles and benefits of REST&quot;. It seems to me the &quot;correct=\r\n&quot; way to do it.&lt;br /&gt;&lt;br /&gt;Why do you think that? And what principles =\r\nand benefits are you refering?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;On Jan 12, 2009 11:01=\r\nam, Gabor Szokoli &lt;szocske@...&gt; wrote:&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br=\r\n /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt;     &lt;br /&gt;&g=\r\nt;             &lt;br /&gt;&gt; Hi there!&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&=\r\ngt; I like the idea of RESTful web services a lot in theory, especially&lt;br =\r\n/&gt;&gt; &lt;br /&gt;&gt; compared to the alternative...&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /=\r\n&gt;&gt; &lt;br /&gt;&gt; So we started building a pudding proofing web service for =\r\nour&lt;br /&gt;&gt; &lt;br /&gt;&gt; application. (Please note that the web service is =\r\nonly an auxiliary&lt;br /&gt;&gt; &lt;br /&gt;&gt; function of the application, web ser=\r\nvices are not our core business.)&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt=\r\n; Our prototype service model is intentionally simplistic: we have&lt;br /&gt;&gt=\r\n; &lt;br /&gt;&gt; &quot;nodes&quot; and &quot;users&quot; in a one-to-many conta=\r\ninment relationship.&lt;br /&gt;&gt; &lt;br /&gt;&gt; All is fine creating, requesting =\r\nand updating them, deleting &quot;users&quot;&lt;br /&gt;&gt; &lt;br /&gt;&gt; is also =\r\nfine.&lt;br /&gt;&gt; &lt;br /&gt;&gt; Before deleting a &quot;node&quot; however, the =\r\nnormal usage pattern would be&lt;br /&gt;&gt; &lt;br /&gt;&gt; migrating all its &quot;=\r\nusers&quot; to another &quot;node&quot;.&lt;br /&gt;&gt; &lt;br /&gt;&gt; I am having t=\r\nrouble adding this single &quot;RPC-ish&quot; operation to our&lt;br /&gt;&gt; &lt;b=\r\nr /&gt;&gt; otherwise RESTful service efficiently.&lt;br /&gt;&gt; &lt;br /&gt;&gt; The cl=\r\nean solution would be the client listing, and migrating all&lt;br /&gt;&gt; &lt;br /=\r\n&gt;&gt; &quot;users&quot; of the &quot;node&quot;.&lt;br /&gt;&gt; &lt;br /&gt;&gt; This =\r\nis however neither efficient, nor atomic.&lt;br /&gt;&gt; &lt;br /&gt;&gt; The quick an=\r\nd dirty solution would be passing the fallback &quot;node&quot; as&lt;br /&gt;&gt=\r\n; &lt;br /&gt;&gt; an argument of the DELETE operation, but that breaks many prin=\r\nciples&lt;br /&gt;&gt; &lt;br /&gt;&gt; and benefits of REST.&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br =\r\n/&gt;&gt; &lt;br /&gt;&gt; I am pretty sure similar architecturally unstylish situat=\r\nions will&lt;br /&gt;&gt; &lt;br /&gt;&gt; arise in all our services, just like databas=\r\nes have stored procedures,&lt;br /&gt;&gt; &lt;br /&gt;&gt; not just SQL.&lt;br /&gt;&gt; &lt;br=\r\n /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; Surely I am not the first with such an issue.=\r\n Could the kind members&lt;br /&gt;&gt; &lt;br /&gt;&gt; of this fine discussion group =\r\nshare their opinions on this, and/or&lt;br /&gt;&gt; &lt;br /&gt;&gt; point me towards =\r\nrelevant literature?&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; Thank you i=\r\nn advance:&lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; &lt;br /&gt;&gt; Gabor Szokoli&lt;br /&gt;&g=\r\nt; &lt;br /&gt;&gt; &lt;br /&gt;&gt;     &lt;br /&gt;&gt;   &lt;br /&gt;&gt; &lt;br /&gt;&gt;     &lt;br /&gt;&=\r\ngt;     &lt;br /&gt;&gt; \t&lt;br /&gt;&gt; \t&lt;br /&gt;&gt;\r\n--0015174c3d10f9812e046048e933--\r\n\n"}}