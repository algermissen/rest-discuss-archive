{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"B3K_R1R8uNAXd3R6QOyp50wX_DpOGFyAv1JqajrRH0wu3NGujatK_d9FRvc8tpqdosMsTkIYT7WFlhLf0UiKBx4lrJ_x3mMAGEcIPxUyXg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Design questions for applying REST","postDate":"1087188549","msgId":4460,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTE2LURBVjMzb203REJEaXIwMDAzOTNmMUBob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTE2LURBVjYwc0w2N1FsTkQwMDAzNjZmNkBob3RtYWlsLmNvbT4gPDQwQzlCMjI5LjYwMDAxQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVYzME9SRlFHd1o0MDAwMzc4M2JAaG90bWFpbC5jb20+IDw0MENBRjkyMC42MDUwMDAyQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVY0OGhmQUVuUjlyMDAwMzg3ZWVAaG90bWFpbC5jb20+IDwwMGRiMDFjNDUxNDgkODgzMTY0NTAkMDkwMmE4YzBAV0FMREVOREVTS1RPUD4="},"prevInTopic":4459,"nextInTopic":4461,"prevInTime":4459,"nextInTime":4461,"topicId":4447,"numMessagesInTopic":13,"msgSnippet":"... Thanks Walden, I think this is a great REST pattern (described by others as well - I wonder if we should start a design patterns page for REST on the ","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 52882 invoked from network); 14 Jun 2004 04:49:03 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m12.grp.scd.yahoo.com with QMQP; 14 Jun 2004 04:49:03 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.186.213)\n  by mta6.grp.scd.yahoo.com with SMTP; 14 Jun 2004 04:49:03 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Sun, 13 Jun 2004 21:48:39 -0700\r\nReceived: from 207.202.171.254 by bay16-dav33.bay16.hotmail.com with DAV;\n\tMon, 14 Jun 2004 04:48:39 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &quot;Walden Mathews&quot; &lt;walden@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;BAY16-DAV60sL67QlND000366f6@...&gt; &lt;40C9B229.60001@...&gt; &lt;BAY16-DAV30ORFQGwZ40003783b@...&gt; &lt;40CAF920.6050002@...&gt; &lt;BAY16-DAV48hfAEnR9r000387ee@...&gt; &lt;00db01c45148$88316450$0902a8c0@WALDENDESKTOP&gt;\r\nDate: Sun, 13 Jun 2004 21:49:09 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nMessage-ID: &lt;BAY16-DAV33om7DBDir000393f1@...&gt;\r\nX-OriginalArrivalTime: 14 Jun 2004 04:48:39.0717 (UTC) FILETIME=[DC75D550:01C451CA]\r\nX-eGroups-Remote-IP: 65.54.186.213\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: Re: [rest-discuss] Design questions for applying REST\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n&gt; 1) POST input documents to a generic resource on the server\n&gt; that is responsible for associating these documents with their final\n&gt; merged counterpart, creating the latter when appropriate.  You\n&gt; can let this return the Location of the newly created input document\n&gt; on the server, or not.  In response to this POST, always return\n&gt; the URI of the merged document, minimally.\nThanks Walden, I think this is a great REST pattern (described by others as\nwell - I wonder if we should start a &#39;design patterns&#39; page for REST on the\nWiki).\n I&#39;m curious about the comparison of this approach to using PUT directly to\ncreate/update input documents. From my understanding, the biggest difference\nis whether the client constructs a URI to the input document, or the server\nprovides an opaque identifer and the client maintains a mapping between\nsubmitted content and a server hosted resource.\n\n\n&gt;\n&gt; 2) design the merged document such that it contains, directly\n&gt; or indirectly, an index to the input documents from which it has\n&gt; been composed.  In other words, there may be yet another resource\n&gt; subordinate to each merged document whose only function is to\n&gt; be an index of inputs.  This is a list of URI at which the original\n&gt; input documents are available verbatim for GET, PUT and DELETE.\nDefinitely possible, but I don&#39;t see the utility for the use cases I intend\nto support. (I&#39;m putting a REST layer on top of an existing, critical\nbusiness function - this capability doesn&#39;t map to the existing uses of the\nsystem).\n\n&gt;\n&gt; 3) Subsequent PUT or DELETE on the input doc URIs for a\n&gt; given merge document have the expected verbatim effects on\n&gt; those resources, plus some interesting side effects on the merge\n&gt; document, but with the constraint that even those effects are\n&gt; idempotent.  That is, if the client decides to change the content of\n&gt; /input1 via a PUT, the server incorporates that change into the\n&gt; merged document in a consistent and idempotent manner.\nYes, perfect. That&#39;s what I&#39;m shooting for. The question is, can the client\ndo a PUT directly, without passing through the generic resource described in\nstep 1? What are the specific tradeoffs?\n\n&gt; In the original, you said:\n&gt;\n&gt; &quot;The submitted documents have their own identifiers (owned by the client)&quot;\n&gt;\n&gt; Does this mean that they are already hosted elsewhere?  If so are\n&gt; you considering approaches in which they are not dually hosted\n&gt; on your server?\nThe client-owned identifiers are not URIs nor do the indicate retrievable\nresources. If I squint, the current system looks more like a message-queue\nsystem than a resource-based system, so there is almost no incoming data\nthat is &#39;globally&#39; addressable/retrievable.\n\nThese client-owned identifiers are something I am thinking are important to\nexpose in URIs. These identifiers are going to be scattered across multiple\nsystems (internal and external) and the simplest integration seems to be for\nthe service to support requests that are composed mainly of this\nclient-owned identifier. Which is why I&#39;m so interested in using PUT\ndirectly rather than the generic resource that accept submissions (that\napproach seems too &#39;message&#39; oriented and not &#39;resource&#39; oriented).\n\nThanks for all the discussion folks!\n\n"}}