{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"D7RTWXtVsrQIkNIpNV8xLKDWPK7gNmVFjHAm4o1d_fJmwQJ8UgJ1GIzb0YxuI4YkueWjdLtAmz4EafQgJoYcgqf5t6QpBYo8vEYKdeaaHg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Re: Dealing with partially bad request?","postDate":"1296073950","msgId":17241,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwMTI2MTMzMjMwLmQwOTAyZWQxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGlocGs3bituN2IyQGVHcm91cHMuY29tPg==","referencesHeader":"PDIwMTEwMTIxMTQwOTUzLmQxZmIwNGMxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPGlocGs3bituN2IyQGVHcm91cHMuY29tPg=="},"prevInTopic":17239,"nextInTopic":17325,"prevInTime":17240,"nextInTime":17242,"topicId":17217,"numMessagesInTopic":5,"msgSnippet":"... You re welcome. ... I ve run into this myself, but it s a bit ticklish to solve.  Assuming a system which accepts  but not  receives a request","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 84676 invoked from network); 26 Jan 2011 20:32:36 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.sp2.yahoo.com with QMQP; 26 Jan 2011 20:32:36 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 26 Jan 2011 20:32:36 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 03A91509ED;\n\tWed, 26 Jan 2011 15:32:35 -0500 (EST)\r\nDate: Wed, 26 Jan 2011 13:32:30 -0700\r\nTo: &quot;Philippe Mougin&quot; &lt;pmougin@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20110126133230.d0902ed1.eric@...&gt;\r\nIn-Reply-To: &lt;ihpk7n+n7b2@...&gt;\r\nReferences: &lt;20110121140953.d1fb04c1.eric@...&gt;\n\t&lt;ihpk7n+n7b2@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Dealing with partially bad request?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Philippe Mougin&quot; wrote:\n&gt; \n&gt; &quot;Eric J. Bowman&quot; wrote:\n&gt; &gt;\n&gt; &gt; &quot;Philippe Mougin&quot; wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; Now, how would you do that in the context of HTTP? Returning a 400\n&gt; &gt; &gt; was my first thought.\n&gt; &gt; &gt;\n&gt; &gt; \n&gt; &gt; If the server accepted the request, then no error occurred, so\n&gt; &gt; respond 2xx.  Only respond 4xx if the server can&#39;t process the\n&gt; &gt; request at all.\n&gt; &gt; \n&gt; &gt; Your question is appropriate to REST -- accepting and processing the\n&gt; &gt; request, but responding 4xx, wouldn&#39;t be self-descriptive messaging\n&gt; &gt; any more than it is to send &quot;page not found&quot; using 200 OK.\n&gt; \n&gt; Hi Eric, thanks for helping (as usual!)\n&gt;\n\nYou&#39;re welcome.\n\n&gt;\n&gt; This is a sensible approach, that I&#39;m applying now. \n&gt; As an added benefit it somewhat leads to conceptualize and document\n&gt; the application in a slightly different but more correct way,\n&gt; redefining what is considered as a bad or acceptable request for this\n&gt; interaction.\n&gt;\n\nI&#39;ve run into this myself, but it&#39;s a bit ticklish to solve.  Assuming\na system which accepts &lt;em&gt; but not &lt;b&gt; receives a request containing\na &lt;b&gt;, it&#39;s straightforward to respond 409 with an entity which\nreflects the changes the server requires (&lt;b&gt; replaced with &lt;em&gt;) such\nthat the user-agent can re-submit the request correctly (even\nautomatically).\n\nUsing an error response alerts the user-agent to the fact that a problem\noccurred; it&#39;s up to the user-agent how to handle user notification --\nto approve the re-submit, or just alert that it happened, or do nothing,\nconfigurable or not.  But, what to do if we want to accept the request,\nchanging &lt;b&gt; to &lt;em&gt; without user approval?\n\nThe 202 response seems appropriate at first, but it would be mis-used\nin this case, since it indicates that the process which changed &lt;b&gt; to\n&lt;em&gt; is pending.  Although 202 with instructions to approve the pending\nchanges, before actually changing the resource state, would be OK.  So\nthere are a couple of ways to keep the user-agent in the loop (so to\nspeak) depending on whether you want that logic on the client side or\nthe server side.\n\nBut, if the system changes &lt;b&gt; to &lt;em&gt; and the user-agent is kept out\nof the loop, then it&#39;s just a 200/201 response.  If interested, the\nuser can compare the result with the request and see what changes were\nmade, but HTTP makes no special provisions for this case as it isn&#39;t a\nmessaging-between-connectors concern -- it&#39;s what servers do, all the\ntime (consider a blog where you can&#39;t say ****).  IOW, there is no HTTP\n2xx code for &quot;acceptable error&quot;.\n\n&gt;\n&gt; In the response, it seems also sensible to include information about\n&gt; what was processed and what was not, and why, i.e., what made the\n&gt; server unable to accept some of the data in the request.  \n&gt; \n\nYes, that&#39;s the purpose of 202 and 409, but this is only sensible when\nthere&#39;s some sort of process requiring the user-agent&#39;s involvement in\nconfirming the change.  If you&#39;re trying to save that round-trip, then\nany information of that sort in a 200 response doesn&#39;t make any sense,\nbecause the transaction has already completed.  HTH.\n\n-Eric\n\n"}}