{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211647110,"authorName":"Alexander Johannesen","from":"&quot;Alexander Johannesen&quot; &lt;alexander.johannesen@...&gt;","profile":"shelterit","replyTo":"SENDER","senderId":"TmPw80C93FH17s-62HM_f9JXYhVu2xk5pd3tyQ9rBH_rakWAdijolJnXCGfShfnP3MfJ63FYdoKmP37yyPyuiW1fLSCEiEjOHHU9v8NxOWab2v-PAzJztfRE4d7JGg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: forms for web APIs","postDate":"1218178732","msgId":11159,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY5NTA5NTRlMDgwODA3MjM1OHE2M2YzNzIydWRiNzllZDU2Zjg1Mjc0MDJAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGc3Z2l1dStjcGcyQGVHcm91cHMuY29tPg==","referencesHeader":"PGY5NTA5NTRlMDgwODA1MDczMXk3ZTRjMDc4Nm44OTYyOTQ2MmJiZjIxZTFhQG1haWwuZ21haWwuY29tPgkgPGc3Z2l1dStjcGcyQGVHcm91cHMuY29tPg=="},"prevInTopic":11158,"nextInTopic":0,"prevInTime":11158,"nextInTime":11160,"topicId":11104,"numMessagesInTopic":31,"msgSnippet":"... Quite. :) ... Kinda, but there s a few important points about this, as there can be many forms to do many different things per request. You can choose ","rawEmail":"Return-Path: &lt;alexander.johannesen@...&gt;\r\nX-Sender: alexander.johannesen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6563 invoked from network); 8 Aug 2008 06:58:52 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m57.grp.scd.yahoo.com with QMQP; 8 Aug 2008 06:58:52 -0000\r\nX-Received: from unknown (HELO rv-out-0708.google.com) (209.85.198.244)\n  by mta15.grp.scd.yahoo.com with SMTP; 8 Aug 2008 06:58:52 -0000\r\nX-Received: by rv-out-0708.google.com with SMTP id c5so715977rvf.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 07 Aug 2008 23:58:52 -0700 (PDT)\r\nX-Received: by 10.140.162.21 with SMTP id k21mr1215384rve.261.1218178732612;\n        Thu, 07 Aug 2008 23:58:52 -0700 (PDT)\r\nX-Received: by 10.141.68.7 with HTTP; Thu, 7 Aug 2008 23:58:52 -0700 (PDT)\r\nMessage-ID: &lt;f950954e0808072358q63f3722udb79ed56f8527402@...&gt;\r\nDate: Fri, 8 Aug 2008 08:58:52 +0200\r\nTo: wahbedahbe &lt;andrew.wahbe@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;g7giuu+cpg2@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;f950954e0808050731y7e4c0786n89629462bbf21e1a@...&gt;\n\t &lt;g7giuu+cpg2@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Alexander Johannesen&quot; &lt;alexander.johannesen@...&gt;\r\nSubject: Re: [rest-discuss] Re: forms for web APIs\r\nX-Yahoo-Group-Post: member; u=211647110; y=oqItqe_ZDyGKanZ8JmjFuj3LPonuQTQpcCopl7vizonIznHx\r\nX-Yahoo-Profile: shelterit\r\n\r\nOn Fri, Aug 8, 2008 at 06:44, wahbedahbe &lt;andrew.wahbe@...&gt; wrote:\n&gt; But this approach always has me asking: is this really so different\n&gt; from RPC?\n\nQuite. :)\n\n&gt; A form microformat or a set of standard query parameters aren&#39;t that\n&gt; different than a standard function call. Your form is just saying &quot;you\n&gt; can make that standard function call here&quot;.\n\nKinda, but there&#39;s a few important points about this, as there can be\nmany forms to do many different things per request. You can choose\nwhich one to follow (just like on a normal web page with lots of\nlinks), as forms are in reality nothing more than a hyperlink with\nparameters. In REST one is to maintain client state on the client, and\nserver state on the server, now accomplished through this mechanism.\nIt has a further two advantages;\n\n1. Interfaces are discoverable, which means that if you change the\nserver interface (order, direction, process, work flow), clients won&#39;t\nbreak as long as the semantics is sustained. 2. The semantics of\napplication interfaces are shifted from the API itself (often through\nstatic binding of sorts) to an ontology layer that&#39;s easier to model\nand change over time.\n\n&gt; So it offers a little more than straight RPC as you can discover when\n&gt; and where you can make that call as you move through the hypermedia\n&gt; state machine. But this model isn&#39;t quite right in my mind as it\n&gt; constrains the server&#39;s interface too much.\n\nWhat are the constraints? The generic uniform interface, and\ncoarse-grained semantics of MIME types?\n\n&gt; Let me explain with an example: [...]\n&gt;\n&gt; For some reason, most &quot;RESTful&quot; machine to machine techniques don&#39;t\n&gt; really give us this. I think most hypermedia formats being used are\n&gt; missing mechanisms to translate from the client&#39;s model of the problem\n&gt; to the HTTP requests of the service. In UI-oriented hypermedia, this\n&gt; translation is left to the user. Don&#39;t you need to do something more\n&gt; in the machine to machine case?\n\nNo, what it is is that REST (or in our case, HTTP) is too abstract to\nbe specific for that sort of functionality (in general), so the idea\nis to create protocols that are domain specific (or, more specific) to\ncater for that. For example, the AtomPub defines simple content\nmanagement through their own MIME type.\n\nIn your example, a booking protocol should probably be defined, and\nhave its own MIME type as well. Interestingly, I&#39;m working on a travel\nsystem these days and have something like that in place, although I\nuse Topic Maps to denote shareable models and semantics instead of an\nagreed-upon document of prose.\n\n\nAlexander\n-- \n---------------------------------------------------------------------------\n Project Wrangler, SOA, Information Alchemist, UX, RESTafarian, Topic Maps\n------------------------------------------ http://shelter.nu/blog/ --------\n\n"}}