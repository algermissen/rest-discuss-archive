{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137909573,"authorName":"sem_antico &lt;rest-discuss@listgate.semant","from":"&quot;sem_antico &lt;rest-discuss@...&gt;&quot; &lt;rest-discuss@...&gt;","profile":"sem_antico","replyTo":"SENDER","senderId":"duSDHIGDazB4gR-x6CSutZOR4ZwVhxWUrP87VM8w5Dp7_jv55Eg0DxbdAh2O2QlrmUQQpx2UvcK-Rl8Ov9xSMLnMIxgd0Dut_oIXBURN89dqvp_6mlZLRkMbxAg-WAk4NcojqGK1ELoXASIG9kKaR1Cv6CNPQkiokme5cpj7NA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Containers and nested representations","postDate":"1046453040","msgId":3450,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGIzbzV2Zys4ZDF1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PEZBNjA5Nzc4LTRCMjAtMTFENy05NjIwLTAwMDM5M0E1MzQ4MkB2ZG0uY2M+"},"prevInTopic":3443,"nextInTopic":0,"prevInTime":3449,"nextInTime":3451,"topicId":3414,"numMessagesInTopic":7,"msgSnippet":"... just ... PUT. I ... resource (in ... it ... string ... returning an ... is. ... fits ... that in ... looks ... I m glad you mentioned that, I ll try to","rawEmail":"Return-Path: &lt;rest-discuss@...&gt;\r\nX-Sender: rest-discuss@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 28 Feb 2003 17:24:02 -0000\r\nReceived: (qmail 31569 invoked from network); 28 Feb 2003 17:24:01 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m13.grp.scd.yahoo.com with QMQP; 28 Feb 2003 17:24:01 -0000\r\nReceived: from unknown (HELO n10.grp.scd.yahoo.com) (66.218.66.65)\n  by mta3.grp.scd.yahoo.com with SMTP; 28 Feb 2003 17:24:01 -0000\r\nReceived: from [66.218.67.249] by n10.grp.scd.yahoo.com with NNFMP; 28 Feb 2003 17:24:00 -0000\r\nDate: Fri, 28 Feb 2003 17:24:00 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: Containers and nested representations\r\nMessage-ID: &lt;b3o5vg+8d1u@...&gt;\r\nIn-Reply-To: &lt;FA609778-4B20-11D7-9620-000393A53482@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 7370\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;sem_antico &lt;rest-discuss@...&gt;&quot; &lt;rest-discuss@...&gt;\r\nX-Yahoo-Group-Post: member; u=137909573\r\nX-Yahoo-Profile: sem_antico\r\n\r\n--- In rest-discuss@yahoogroups.com, Vincent D Murphy &lt;vdm@v...&gt;\nwrote:\n&gt; On Friday, February 28, 2003, at 12:12 PM, Richard Padley wrote:\n&gt; &gt;&gt;&gt; The response is\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; HTTP/1.1 204 No Content\n&gt; &gt;&gt;\n&gt; &gt;&gt; Maybe this could be a 200 with the updated box/100?  The 204\njust \n&gt; &gt;&gt; seems\n&gt; &gt;&gt; kind of &#39;useless&#39; to me.\n&gt; &gt;\n&gt; &gt; I&#39;ve never been sure what to return in the message-body after a\nPUT. I\n&gt; &gt; figured that if the client needs to check the state of the\nresource (in\n&gt; &gt; case the server adds some information to the PUT representation),\nit\n&gt; &gt; could perform a GET request.\n&gt; \n&gt; yeah, but why make the client perform an extra request?\n&gt; \n&gt; if the client isn&#39;t interested it can check for 200 or whatever and \n&gt; throw away the body.\n&gt; \n&gt; i am thinking of a scenario where an abbreviation or shortcut\nstring \n&gt; (like &quot;/.&quot;) is PUT and its expansion (&quot;slashdot&quot;) is used as the \n&gt; representation.  maybe this isn&#39;t useful enough to warrant\nreturning an \n&gt; entity body, but perhaps there are application use cases where it\nis.\n&gt; \n&gt; &gt;&gt; Rather than a big fat PUT to the container, you could split your \n&gt; &gt;&gt; request up in to a number of constituent requests to constituent \n&gt; &gt;&gt; resources.  for example:\n&gt; &gt;\n&gt; &gt; My application semantics require that the update is atomic. This\nfits\n&gt; &gt; nicely with the idea of supplying a &#39;complete&#39; representation of a\n&gt; &gt; container resource (with all its contained resources).\n&gt; \n&gt; agreed.\n&gt; \n&gt; &gt;&gt; 2. POST widget/35&#39;s URI to box/100 (possible after POSTing 35 to \n&gt; &gt;&gt; widgets).\n&gt; &gt;\n&gt; &gt; Again there are choices here. I can either POST the URI for the\n&gt; &gt; contained resource (widget 35) into the container :\n&gt; &gt;\n&gt; &gt; POST /box/100 HTTP/1.1\n&gt; &gt; Content-Type: text/xml\n&gt; &gt;\n&gt; &gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt; &gt;     &lt;widget x:href=&quot;/widget/35&quot;&gt;\n&gt; &gt; &lt;/box&gt;\n&gt; \n&gt; why the outer &lt;box&gt; element in the body?  haven&#39;t you addressed\nthat in \n&gt; the request URI?  i don&#39;t want to appear to be pedantic but this\nlooks \n&gt; like an instance of the DRY (Don&#39;t Repeat Yourself) anti-pattern.\n\nI&#39;m glad you mentioned that, I&#39;ll try to explain. The box resource is\nboth a container (for widgets) and a resource as well (it has &lt;colour&gt;\nin my original example). If I POST to a box I have to have a way of\nupdating its colour, as well as updating the widgets it contains.\nTherefore I need a container element. But I think I may just have\nplaced the wrong container around it in my example. So the example\nshould probably be (namespace attrs removed for brevity)\n\nPOST /box/100 HTTP/1.1\nContent-Type: text/xml\n\n&lt;app:resource&gt;\n  &lt;colour&gt;Moonlight beige&lt;/colour&gt;\n  &lt;widget x:href=&quot;/widget/35&quot;&gt;\n&lt;/app:resource&gt;\n\nI&#39;ve used the app:resource as generic resource representation to hold\nthe updated colour information and updated information saying that\nwidget 35 is now contained by this box.\n\n&gt; \n&gt; what are the semantics if the request URI and the (xpath)\n/box/x:href \n&gt; attribute is another (different) URI?\n\nQuite, it does seem somehow wrong to duplicate this information which\nshold be completely clear from the request URI.\n\n&gt; \n&gt; &gt; Provided widget 35 already exists I&#39;d assume the server response\nwould \n&gt; &gt; be\n&gt; &gt;\n&gt; &gt; HTTP/1.1 204 No Content\n&gt; &gt;\n&gt; &gt; Or I could post the respresentation of the contained resource to\nthe\n&gt; &gt; container:\n&gt; &gt;\n&gt; &gt; POST /box/100 HTTP/1.1\n&gt; &gt; Content-Type: text/xml\n&gt; &gt;\n&gt; &gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt; &gt;     &lt;widget&gt;\n&gt; &gt;       &lt;widget_id&gt;35&lt;widget_id&gt;\n&gt; &gt;       &lt;colour&gt;Black&lt;/colour&gt;\n&gt; &gt;       &lt;size&gt;9&lt;/size&gt;\n&gt; &gt;     &lt;/widget&gt;\n&gt; &gt; &lt;/box&gt;\n&gt; \n&gt; i think whether you use the URI or the inline representation\ndepends on \n&gt; whether the widget is being implicitly created.  if it already\nexists i \n&gt; would definitely say that the URI should be used.  if there is no\nURI, \n&gt; then the server application can go ahead and implicitly create it. \ni \n&gt; think all combinations of uri/representation are acceptable so long\nas \n&gt; their semantics are clearly defined, e.g.:\n&gt; \n&gt; uri | representation | action\n&gt; ----+----------------+--------------------------------------\n&gt;    1 |              0 | use uri\n&gt;    1 |              1 | use uri (ignore representation)\n&gt;    0 |              1 | create (using supplied represenation)\n&gt;    0 |              0 | invalid\n&gt; \n&gt; &gt; Now I&#39;m not sure what the response is - 201 Created seems\nabsolutlely\n&gt; &gt; the right thing here, but it simply breaks if I POST the\nrespresntation\n&gt; &gt; of two new resources at the same time\n&gt; &gt;\n&gt; &gt; POST /box/100 HTTP/1.1\n&gt; &gt; Content-Type: text/xml\n&gt; &gt;\n&gt; &gt; &lt;box x:href=&quot;/box/100&quot;&gt;\n&gt; &gt;     &lt;widget&gt;\n&gt; &gt;       &lt;widget_id&gt;35&lt;widget_id&gt;\n&gt; &gt;       &lt;colour&gt;Black&lt;/colour&gt;\n&gt; &gt;       &lt;size&gt;9&lt;/size&gt;\n&gt; &gt;     &lt;/widget&gt;\n&gt; &gt;     &lt;widget&gt;\n&gt; &gt;       &lt;widget_id&gt;40&lt;widget_id&gt;\n&gt; &gt;       &lt;colour&gt;White&lt;/colour&gt;\n&gt; &gt;       &lt;size&gt;9&lt;/size&gt;\n&gt; &gt;     &lt;/widget&gt;\n&gt; &gt; &lt;/box&gt;\n&gt; &gt;\n&gt; &gt; Now the only response possible seems to be 204 (or 200) - I can&#39;t\n&gt; &gt; respond with two lots of 201 Created. And this can only get more \n&gt; &gt; complex\n&gt; &gt; if we consider the case then a POST to that box could create one\nwidget\n&gt; &gt; and modify another.\n&gt; \n&gt; agreed.  however i question how important this use case is.  can&#39;t\nyou \n&gt; always just POST one widget at a time?  then you can reject input\nwith \n&gt; more than one URIless widget element.\n\nI dont think so. It seems wrong to prevent me updating more than one\nproperty of the box resource at one time. If the box has width and\nheight, as well as containing widgets, I should be able to POST to\nupdate the width and height at the same time surely? Why should this\nmethodology not apply also to the widgets that are in the box?\n\n&gt; \n&gt; also i think this scenario breaks down if you accept my previous\npoint \n&gt; about the redundancy of the outer &lt;box&gt; element.  you couldn&#39;t have\na \n&gt; second &lt;widget&gt; element in this case because you can only have one\nroot \n&gt; element in an XML document.\n\nI think this is covered by the modification involving the\n&lt;app:resource&gt; as an outer container. It is needed because the box\nitsself has properties that must be modifiable via POST.\n\n&gt; \n&gt; another possibility to throw in the soup is that box resources\ncould \n&gt; have subordinate &#39;widgets&#39; container resources to which you POST\ne.g. \n&gt; /boxes/100/widgets but i won&#39;t go in to that here.\n\nYes thats true. Logically the URI for a widget could be a subcomponent\nof the URI for a box. This might have some advantages, in that there\nwould be no need to specify the box that a widget was contained in as\npart of the representation of a widget. But I guess thats something\nthat you&#39;d actually _want_ to specify, because doing a GET on\n/widget/40 should return a representation that contains the URI to its\ncontainer, so that I can follow this URI for more information.\n\n&gt; \n&gt; &gt;&gt; 3. DELETE 34.\n&gt; &gt;&gt;    or\n&gt; &gt;&gt;    PUT box/100 minus the mention of widget/34.\n&gt; &gt;&gt;\n&gt; &gt;&gt; the trouble with the delete of 34 is that the semantics are \n&gt; &gt;&gt; overloaded.\n&gt; &gt;&gt;  the PUT to the box that excludes the 34 really only removes it\nfrom \n&gt; &gt;&gt; the\n&gt; &gt;&gt; container, rather than deleting it outright.  these are two\nseperate\n&gt; &gt;&gt; semantic actions.\n&gt; &gt;\n&gt; &gt; I think the semantics I need require that deleteing a container\nwill\n&gt; &gt; also delete all of the resouces it contains - atomic requirement\nagain.\n&gt; &gt; I could see that case that this would not be a requirement in all\n&gt; &gt; applications.\n&gt; \n&gt; absolutely not; this mirrors the functionality of cascading \n&gt; updates/deletes in a relational database, and is therefore specific\nto \n&gt; applications.\n\n\n"}}