{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"jpXPMC_kU9ms-qY3ZHe8sOJyOQBcyMeGbypYZEq5KsXFU1qsoPiMYbNBWza8OrDMETiCHJZNitoXB2q4AILCMBT0mSTPCpgAlGGP9_V1qw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281043909","msgId":16173,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODA1MTUzMTQ5LmE5ZWI0MTUyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDEyODEwNDIyODEuMjkxNy4zMTIuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+CTwyMDEwMDgwNTE0MzUyMC40MGI3ZDgxOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwyMDEwMDgwNTE0NTQxMS45OGFjZjg0Mi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwxMjgxMDQyMjgxLjI5MTcuMzEyLmNhbWVsQGJhY2twYWNrPg=="},"prevInTopic":16172,"nextInTopic":16174,"prevInTime":16172,"nextInTime":16174,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"... By specifying the HEAD method of a target URI, and using some Javascript (a blackbox incurring a visibility penalty) to write that Etag into a ","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26446 invoked from network); 5 Aug 2010 21:32:10 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m16.grp.re1.yahoo.com with QMQP; 5 Aug 2010 21:32:10 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 5 Aug 2010 21:32:09 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id CC8CB509DA;\n\tThu,  5 Aug 2010 17:32:02 -0400 (EDT)\r\nDate: Thu, 5 Aug 2010 15:31:49 -0600\r\nTo: juergen.brendel@...\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100805153149.a9eb4152.eric@...&gt;\r\nIn-Reply-To: &lt;1281042281.2917.312.camel@backpack&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\n\t&lt;20100805143520.40b7d818.eric@...&gt;\n\t&lt;20100805145411.98acf842.eric@...&gt;\n\t&lt;1281042281.2917.312.camel@backpack&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJuergen Brendel wrote:\n&gt; \n&gt; &gt; What&#39;s important to remember here, is the importance of the initial\n&gt; &gt; GET or HEAD request.  &quot;REST&quot; APIs which &quot;just know&quot; how to pop a\n&gt; &gt; stack are not hypertext driven.  Whereas, say, Xforms allows you to\n&gt; &gt; define a button, let&#39;s label it &#39;pop&#39;.  When the user selects &#39;pop&#39;\n&gt; &gt; as the state transition, hypertext informs the user agent to fetch\n&gt; &gt; an Etag with HEAD, then uses that Etag to make a conditional\n&gt; &gt; request.\n&gt; \n&gt; Out of curiosity (and since I&#39;m not familiar with Xforms): How does\n&gt; the hypertext inform the user agent to fetch an Etag with HEAD?\n&gt; \n\nBy specifying the HEAD method of a target URI, and using some Javascript\n(a blackbox incurring a visibility penalty) to write that Etag into a\n&lt;header&gt; element of the next submission, then calling that submission.\nIOW, by applying the optional Code on Demand constraint.\n\n&gt; \n&gt; Well, but hold on. How can you say that GET is idempotent if it has\n&gt; the effect of removing something from the queue?\n&gt;\n\nSide effects have nothing to do with the idempotency of the request\nmethod.\n\n&gt;\n&gt; I understand that issuing it twice won&#39;t have an effect. However, one\n&gt; nice way of describing the need for GET to be idempotent was to say:\n&gt; &quot;If a search spider hits your API, nothing bad will happen&quot;. I always\n&gt; like that way of describing it. Aren&#39;t you opening yourself up for the\n&gt; consequences of an accidental GET?\n&gt; \n\nNot if you&#39;re prepared for it, no.  A search spider may be able to make\na conditional GET to some resource where I&#39;ve deliberately defined side\neffects, sure.  Which is why I&#39;d respond 403 Forbidden to any client\nthat hasn&#39;t authenticated.  Forcing users to log in to complete such\noperations tends to inform them that consequences exist, regardless of\nmethod used, which the user never sees anyway.\n\n-Eric\n\n"}}