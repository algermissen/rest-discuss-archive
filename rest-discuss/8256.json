{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":297915703,"authorName":"siefert.david","from":"&quot;siefert.david&quot; &lt;siefert.david@...&gt;","profile":"siefert.david","replyTo":"SENDER","senderId":"YyBvCQlKca274H7aS9CqIZQY48mjo46Lb0bXXuQzRQkqFQm1dvWrOJV_NW7ywnzMaWGMSMojpwapBYXqJLc5BJwuilxfOc4NmgJkD0v6ZVs","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: client-stateless-server","postDate":"1177526252","msgId":8256,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwbzc1YytibmNmQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDg3cHM1c2JlMjMuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPg=="},"prevInTopic":8255,"nextInTopic":8257,"prevInTime":8255,"nextInTime":8257,"topicId":8254,"numMessagesInTopic":7,"msgSnippet":"... Amazon.com ... a ... Sorry, I was not talking about the interface in this case.  I was talking abstractly in that Amazon.com stores your shopping cart","rawEmail":"Return-Path: &lt;siefert.david@...&gt;\r\nX-Sender: siefert.david@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 17185 invoked from network); 25 Apr 2007 18:41:24 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m46.grp.scd.yahoo.com with QMQP; 25 Apr 2007 18:41:24 -0000\r\nReceived: from unknown (HELO n14c.bullet.sp1.yahoo.com) (69.147.64.117)\n  by mta9.grp.scd.yahoo.com with SMTP; 25 Apr 2007 18:41:23 -0000\r\nReceived: from [216.252.122.218] by n14.bullet.sp1.yahoo.com with NNFMP; 25 Apr 2007 18:37:33 -0000\r\nReceived: from [66.218.69.6] by t3.bullet.sp1.yahoo.com with NNFMP; 25 Apr 2007 18:37:33 -0000\r\nReceived: from [66.218.66.73] by t6.bullet.scd.yahoo.com with NNFMP; 25 Apr 2007 18:37:33 -0000\r\nDate: Wed, 25 Apr 2007 18:37:32 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;f0o75c+bncf@...&gt;\r\nIn-Reply-To: &lt;87ps5sbe23.fsf@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;siefert.david&quot; &lt;siefert.david@...&gt;\r\nSubject: Re: client-stateless-server\r\nX-Yahoo-Group-Post: member; u=297915703; y=hDra_TWhTWxxeJScT-vz149RXOkOwWh2kN1FJjgwrZncwPaFdh5GLw\r\nX-Yahoo-Profile: siefert.david\r\n\r\n--- In rest-discuss@yahoogroups.com, Nic James Ferrier &lt;nferrier@...&gt; \nwrot=\r\ne:\n&gt;\n&gt; &quot;siefert.david&quot; &lt;siefert.david@...&gt; writes:\n&gt; \n&gt; &gt; As an example, it=\r\n could be a shopping cart on Amazon.com.  \nAmazon.com \n&gt; &gt; stores the state=\r\n of the shopping cart on the server so that when \na \n&gt; &gt; customer logs in, =\r\nthey can see the items they have saved.  How is \n&gt; &gt; this RESTful?  \n&gt; \n&gt; A=\r\nmazon&#39;s shopping cart is NOT RESTfull. The state is stored in a\n&gt; session o=\r\nbject that is associated with you by a cookie.\n\nSorry, I was not talking ab=\r\nout the interface in this case.  I was \ntalking abstractly in that Amazon.c=\r\nom stores your shopping cart items \nin a database.  It is the restoration o=\r\nf the database records that is \nnot RESTful.\n\n&gt; \n&gt; It *can* be done RESTful=\r\nly. If the shopping cart is a resource then\n&gt; you can POST (or PUT) items i=\r\nnto it. The shopping cart can then be\n&gt; scaled in the same way other resour=\r\nces are scaled.\n&gt; \n\nBut the state (namely, your shopping cart) IS stored on=\r\n the server.\n\n&gt; \n&gt; &gt; request to the server had already depended on the fact=\r\n that the \nprior \n&gt; &gt; requests setup the shopping cart to add items, etc.  =\r\nTo be \nRESTful, I \n&gt; &gt; would think that each request would carry the list o=\r\nf items in \nthe \n&gt; &gt; shopping cart.\n&gt; \n&gt; That would be another way of doing=\r\n it. Much less efficient than just\n&gt; keeping a resource.\n&gt; \n&gt; There are res=\r\nource based shopping carts out there. Check the list\n&gt; archives and you&#39;ll =\r\nfind them.\n&gt; \n\nI searched the list and found an example.  It used cookies, =\r\nbut more \ninterestingly was the response by Roy T. Fielding.  It makes some=\r\n \nmention of how customization on the web (personalization) is not \nRESTful=\r\n.\n\n&gt; \n&gt; &gt; So, if you look at a Session in a web application.  I see this as=\r\n \na \n&gt; &gt; database.  It stores information on the server, although the \nsess=\r\nion \n&gt; &gt; is meant to be only temporary--it may very well be persisted to a =\r\n\n&gt; &gt; file store for clustering.  This of course has been argued before \nas =\r\n\n&gt; &gt; not being RESTful.  How would this be different from having a \n&gt; &gt; dat=\r\nabase storing all the information its clients have changed?  \nThat \n&gt; &gt; dat=\r\nabase has to be shared among all servers which is not scalable.\n&gt; \n&gt; Well..=\r\n. pushing sessions back into the database does make a\n&gt; non-RESTfull app mo=\r\nre scalable because databases tend to be more\n&gt; scalable than app server se=\r\nssion load balancers.\n&gt; \n&gt; But such apps do tend to have higher latency. An=\r\nd you have to be\n&gt; amazon to scale up to amazon request levels.\n&gt; \n&gt; \n&gt; If =\r\nyou do things by resource then you scale at the webserver which \nis\n&gt; cheap=\r\n and simple. You then need to aggregate that data (when you \nneed\n&gt; to aggr=\r\negate) but the collectivization tends to be less frequent \nthan\n&gt; atomic wr=\r\nites. Right?\n&gt; \n&gt; -- \n&gt; Nic Ferrier\n&gt; http://www.tapsellferrier.co.uk\n&gt;\n\nTh=\r\nank you for the resource pointers.  It has helped me gain a better \nunderst=\r\nanding.\n\nAs in the shopping cart example, to be truly RESTful, wouldn&#39;t the=\r\n \nsequence go like so:\n\n1. User browses to store site\n2. User adds an item =\r\n(GET http://store.com/cart/item/?id=3D5)\n3. The server responds with anothe=\r\nr page which has each link \nreference the fact the user has item 5 in their=\r\n shopping cart.\n4. The user browses to another page (again, carrying with i=\r\nt the \nstate that it has item 5 in the cart).\n5. The user adds another item=\r\n (http://store.com/cart/item/?id=3D5&id=3D9\n6. The server responds with ano=\r\nther page which has each link \nreference the face the user now has item 5 a=\r\nnd item 9 in their \nshopping cart.\n\nOnce the user closes their browser, the=\r\n only way to see the items in \nthe shopping cart would be through digging i=\r\nt out from the cache, or \nbookmarking the shopping cart page with the items=\r\n.\n\nWouldn&#39;t this be a RESTful shopping cart?  There are many pitfalls of \nc=\r\nourse in this example (user goes to another computer, or browser \ndoes not =\r\nmaintain cache, bandwidth when user has many items in \nshopping cart, etc).=\r\n  However, it is scalable because it would not \nmatter what server the requ=\r\nest goes to, the request contains the \nstate of the users shopping cart and=\r\n is therefore RESTful.\n\nAm I wrong?\n\nI appreciate whatever guidance you can=\r\n give me.\n\nThanks,\n\nDavid\n\n\n"}}