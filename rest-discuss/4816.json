{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"-DrxcvjsAYO9x-ZZfCz3CFYWdAFkMrE3rH824NjNrPZ72iHX7Fb4ZD9NziaQAhCmjOo8nejWs6q9RxwPNduUof4YJR4LkEitbA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful Shopping Cart -- Client Side Implementation","postDate":"1107456704","msgId":4816,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDUwMjAzMTg1MTQzLkdBNjYzMUBwaG9lbml4LnNwb2tlc29mdHdhcmUuY29tPg==","inReplyToHeader":"PDIwMDUwMjAzMTYxMjIwLkdDMjUyOUBkaXRlYy51bS5lcz4=","referencesHeader":"PDExMDc0NDYxMDQuNDkwNy4yMTQyNTExMDlAd2VibWFpbC5tZXNzYWdpbmdlbmdpbmUuY29tPiA8MjAwNTAyMDMxNjEyMjAuR0MyNTI5QGRpdGVjLnVtLmVzPg=="},"prevInTopic":4815,"nextInTopic":4817,"prevInTime":4815,"nextInTime":4817,"topicId":4811,"numMessagesInTopic":10,"msgSnippet":"... REST has a whole lot to do with appropriate state management.  Specifically, see Secs 5.1.3 and 5.1.4 of Dr. Fielding s Dissertation [1]. Certainly,","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 40347 invoked from network); 3 Feb 2005 18:49:16 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m21.grp.scd.yahoo.com with QMQP; 3 Feb 2005 18:49:16 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.142.253)\n  by mta5.grp.scd.yahoo.com with SMTP; 3 Feb 2005 18:49:16 -0000\r\nReceived: (qmail 6898 invoked by uid 1000); 3 Feb 2005 13:51:44 -0500\r\nDate: Thu, 3 Feb 2005 13:51:44 -0500\r\nTo: Diego Sevilla Ruiz &lt;dsevilla@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20050203185143.GA6631@...&gt;\r\nReferences: &lt;1107446104.4907.214251109@...&gt; &lt;20050203161220.GC2529@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nIn-Reply-To: &lt;20050203161220.GC2529@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Unexpected-Header: Nobody expects the Unexpected Header!\r\nOrganization: asynchronous.org\r\nX-eGroups-Remote-IP: 216.114.142.253\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nSubject: Re: [rest-discuss] RESTful Shopping Cart -- Client Side Implementation\r\nX-Yahoo-Group-Post: member; u=93099516\r\nX-Yahoo-Profile: joshsled\r\n\r\nOn Thu, Feb 03, 2005 at 05:12:20PM +0100, Diego Sevilla Ruiz wrote:\n\n| Excuse my misunderstandings, I&#39;m new to REST, but what does REST \n| principles have to do with state being maintained in the server \n| or the client? RESTful servers (take for instance a simple Web\n| Server) have an internal state. You even can modify it via POSTs and\n| GETs.\n\nREST has a whole lot to do with appropriate state management.  Specifically,\nsee Secs 5.1.3 and 5.1.4 of Dr. Fielding&#39;s Dissertation [1].\n\nCertainly, servers have state -- REST is REprestational _State_ Transfer,\nafter all -- but the state mentioned here is ususally of the connection.\nI.e., I have to do a GET, then POST that I want an item, which sets up\na cookie, which then modifies future interactions GETs, POSTs, &c. with\nthe site ... not because of a resource change on the server or anything\nmentioned in subsequent requests [GETs], but because of some magic cookie\nwhich is going alongside the connection.\n\nThe key statelessness desired in a RESTful [or most large-scale distributed\n] architecture is one of connection: each request should be able to be\nprocessed by looking _only_ at the contents of the request.\n\nOne doesn&#39;t _require_ client-side state-management to do a shopping cart.\nAnother option, as you say, is to add things to the cart via a POST,\nwhich creates a resource identifier for the shopping cart on the server.\nThe user can then interact with it; I&#39;d argue that most sites do this,\nthese days.  When cookies and un-identified application-side session\nstate are used, a set of undesirable properites creep in.\n\nIt&#39;s pretty cool that one doesn&#39;t need either server-side\nstate-mangement or cookies in order to do something that&#39;s fundamentally a\nclient-side operation [remembering a simple list of items].  Since browsers\nand servers never came to a good agreement on how to do that, this is an\nexcellent example of the Code-On-Demand constraint [2] coming into play.\n\nMarkB&#39;s State FAQ [3] has more information about state.\n\n\n[1] http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_3\n[2] http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_1_7\n[3] http://rest.blueoxen.net/cgi-bin/wiki.pl?StateFaq\n\n...jsled\n\n-- \nhttp://asynchronous.org/jsled/ ; a=jsled; b=asynchronous.org; echo ${a}@${b}\n\n"}}