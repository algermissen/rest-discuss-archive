{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":121832671,"authorName":"inthedarkplace","from":"&quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;","profile":"inthedarkplace","replyTo":"SENDER","senderId":"pfmUQ2OUb45d8mX_cL0xjJexr77HC3xe71kKQrXrNEjHkwe6787XPz-nzDl7UKnyKQnEmksI4eU10i4BdYgkIxGlhbEehQN2MW5mlKu0qsD2rw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: PUT, POST, authorization and purchase orders","postDate":"1030057233","msgId":2194,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFrM3FlaCtmYmJsQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDIwMDIwODIyMTgwNDQwLkUxOTAyQHd3dy5tYXJrYmFrZXIuY2E+"},"prevInTopic":2193,"nextInTopic":2196,"prevInTime":2193,"nextInTime":2195,"topicId":2178,"numMessagesInTopic":15,"msgSnippet":"... (1) ... return a ... but ... Personally, I would strongly suggest avoiding the use of RDF to describe the structure of a restful webservice. RDF is not","rawEmail":"Return-Path: &lt;inthedarkplace@...&gt;\r\nX-Sender: inthedarkplace@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 22 Aug 2002 23:00:35 -0000\r\nReceived: (qmail 25976 invoked from network); 22 Aug 2002 23:00:34 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m15.grp.scd.yahoo.com with QMQP; 22 Aug 2002 23:00:34 -0000\r\nReceived: from unknown (HELO n1.grp.scd.yahoo.com) (66.218.66.64)\n  by mta3.grp.scd.yahoo.com with SMTP; 22 Aug 2002 23:00:34 -0000\r\nReceived: from [66.218.67.185] by n1.grp.scd.yahoo.com with NNFMP; 22 Aug 2002 23:00:33 -0000\r\nDate: Thu, 22 Aug 2002 23:00:33 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: PUT, POST, authorization and purchase orders\r\nMessage-ID: &lt;ak3qeh+fbbl@...&gt;\r\nIn-Reply-To: &lt;20020822180440.E1902@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1490\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;\r\nX-Yahoo-Group-Post: member; u=121832671\r\nX-Yahoo-Profile: inthedarkplace\r\n\r\nMy thoughts:\n\n&gt; In my abstract model, and in RestRDF, I presented the following\n&gt; hierarchy;\n&gt; \n&gt; Resource\n&gt;   -&gt; Container\n&gt;      -&gt; StatePreservingContainer (ne IdentityPreservingContainer) \n(1)\n&gt;      -&gt; Processor (2)\n&gt;      -&gt; \n&gt;   -&gt; Replaceable\n&gt;   etc..\n&gt; \n&gt; (1) is meant to describe containers who create a resource and \nreturn a\n&gt; 201\n&gt; \n&gt; (2) is meant to describe containers who do not create a resource, \nbut\n&gt; instead just use the data to somehow do something, but do not hold\n&gt; any state themselves.\n\nPersonally, I would strongly suggest avoiding the use of RDF to \ndescribe the structure of a restful webservice. RDF is not expressive \nenough as real XML, nor is it meant to hold &#39;concrete&#39; data that \nshould be used in a real XML document.\n\nFurther, there are really only two types of objects in REST. There \nare resources which expose the methods GET, PUT, DELETE, POST, \n(TRACE, and OPTIONS). Then there are &#39;collection&#39; resources (a \nsubclass of resource) which expose the aditional method &#39;FindById\n(String id)&#39;. \n\nThis object model can be derived from examining the nature of URLs. \nURLs are hiearchical and it&#39;s understood that when one &#39;part&#39; (let&#39;s \ncall it &#39;resource-id&#39;) of a url appears behind another part of a URL \nthen the former is said to be contained by the latter. This is the \nthinking behind /purchase-orders/3242342342 &lt;-- this URL should be \nunderstood to mean there is a resource &#39;3242343342&#39; within the \nresource &#39;purchase-orders&#39;. \n\n- inthedarkplace\n\n\n"}}