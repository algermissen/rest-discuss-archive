{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":454665725,"authorName":"Juergen Brendel","from":"Juergen Brendel &lt;juergen.brendel@...&gt;","profile":"brendel.juergen","replyTo":"SENDER","senderId":"HRCB2ogIBPqRuuym3lUU-KZBi8k3qXeDJtm8FpE-euGch8HLPORxgOgYGXJmqdRkBURWTZXhtd4Yd24rb3C1t6ObXKH8aVS5ec03FLTCEFWXEzBuSw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281036474","msgId":16150,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyODEwMzY0NzQuMjkxNy4zMDQuY2FtZWxAYmFja3BhY2s+","inReplyToHeader":"PDRDNUIwQ0UxLjIwNDA5MDlAdGliY28uY29tPg==","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+CSA8NEM1QjBDRTEuMjA0MDkwOUB0aWJjby5jb20+"},"prevInTopic":16149,"nextInTopic":16151,"prevInTime":16149,"nextInTime":16151,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"There is no concept of ownership of the items. Assume a bunch of clients that pop the next item to be processed. It doesn t matter who of them gets which","rawEmail":"Return-Path: &lt;juergen.brendel@...&gt;\r\nX-Sender: juergen.brendel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 2676 invoked from network); 5 Aug 2010 19:27:59 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m7.grp.sp2.yahoo.com with QMQP; 5 Aug 2010 19:27:59 -0000\r\nX-Received: from unknown (HELO mail-pz0-f50.google.com) (209.85.210.50)\n  by mta3.grp.sp2.yahoo.com with SMTP; 5 Aug 2010 19:27:59 -0000\r\nX-Received: by pzk28 with SMTP id 28so2931544pzk.9\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 05 Aug 2010 12:27:59 -0700 (PDT)\r\nX-Received: by 10.114.120.9 with SMTP id s9mr12917941wac.100.1281036479410;\n        Thu, 05 Aug 2010 12:27:59 -0700 (PDT)\r\nReturn-Path: &lt;juergen.brendel@...&gt;\r\nX-Received: from [10.1.1.4] (ip-118-90-22-123.xdsl.xnet.co.nz [118.90.22.123])\n        by mx.google.com with ESMTPS id s5sm975295wak.12.2010.08.05.12.27.57\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Thu, 05 Aug 2010 12:27:58 -0700 (PDT)\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;4C5B0CE1.2040909@...&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\n\t &lt;4C5B0CE1.2040909@...&gt;\r\nContent-Type: text/plain; charset=&quot;UTF-8&quot;\r\nOrganization: MuleSoft\r\nDate: Fri, 06 Aug 2010 07:27:54 +1200\r\nMessage-ID: &lt;1281036474.2917.304.camel@backpack&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.28.1 \r\nContent-Transfer-Encoding: 8bit\r\nFrom: Juergen Brendel &lt;juergen.brendel@...&gt;\r\nReply-To: juergen.brendel@...\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=454665725; y=kwOKm_WPOfEi4nKRDVVUMuljohPyXeiUUHHQn9cSllwpKaTh9Lhk_KO4\r\nX-Yahoo-Profile: brendel.juergen\r\n\r\n\n\nThere is no concept of ownership of the items. Assume a bunch of\n&#39;clients&#39; that pop the next item to be processed. It doesn&#39;t matter who\nof them gets which item, it&#39;s just that one item must be seen by exactly\none client only.\n\nItems are also added to the queue on the other end, so when an item is\ngiven to a client, it should actually be removed from the queue at that\nmoment.\n\nAuthentication is not an issue for this.\n\n\n\nOn Thu, 2010-08-05 at 12:11 -0700, Eric Johnson wrote:\n&gt; Your scenario posits multiple consumers.  How does the server-side\n&gt; distinguish those consumers?\n&gt; \n&gt; Are you doing bi-directional SSL authentication, HTTP-Basic, or just\n&gt; giving each consumer their own URL?\n&gt; \n&gt; In any case, &quot;GET&quot; can be idempotent on a particular URL if you define\n&gt; the URL as:\n&gt; \n&gt; &quot;get resource already assigned to me, or if none, the next queued\n&gt; resource available.&quot;  Until the particular client then deletes (or\n&gt; updates state to reflect that it has been consumed), the server will\n&gt; simply give the same response each time the consumer asks.\n&gt; \n&gt; -Eric.\n&gt; \n&gt; On 08/05/2010 11:59 AM, Juergen Brendel wrote: \n&gt; &gt;   \n&gt; &gt; \n&gt; &gt; Hello!\n&gt; &gt; \n&gt; &gt; Let&#39;s say I have a queue resource: /foo\n&gt; &gt; \n&gt; &gt; I can POST new entries into the queue. I can even refer to\n&gt; &gt; individual\n&gt; &gt; entries within the queue: /foo/&lt;id&gt;\n&gt; &gt; \n&gt; &gt; But how do I pop the next entry? How do I construct a single request\n&gt; &gt; that gets me the next/first entry but also removes the entry at the\n&gt; &gt; same\n&gt; &gt; time?\n&gt; &gt; \n&gt; &gt; Maybe I can implement a special resource /foo/next, which always\n&gt; &gt; refers\n&gt; &gt; to the next entry in the queue. But clearly, I can&#39;t use GET to pop\n&gt; &gt; the\n&gt; &gt; entry, since that would not be idempotent.\n&gt; &gt; \n&gt; &gt; The queue has multiple consumers, so the &#39;pop&#39; operation should be\n&gt; &gt; atomic. This seems to rule out the possibility of doing a GET to\n&gt; &gt; retrieve the latest element, followed by a DELETE to remove it.\n&gt; &gt; Someone\n&gt; &gt; else could have gotten the &#39;latest&#39; element in the meantime, thus\n&gt; &gt; causing the same element to be consumed twice.\n&gt; &gt; \n&gt; &gt; Maybe I can cause a &#39;move&#39;, where a single request causes the next\n&gt; &gt; element to be renamed to a unique ID, which is then returned to the\n&gt; &gt; client, who then is the only one who has a handle on that object.\n&gt; &gt; The\n&gt; &gt; client can then work with the resource. But the question now is:\n&gt; &gt; \n&gt; &gt; a) What happens when the client fails before it can delete the\n&gt; &gt; resource?\n&gt; &gt; b) What is the best way to &#39;move&#39; an item in that way?\n&gt; &gt; \n&gt; &gt; Juergen\n&gt; &gt; \n&gt; &gt; -- \n&gt; &gt; Juergen Brendel\n&gt; &gt; http://restx.mulesoft.org \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n\n\n-- \nJuergen Brendel\nArchitect, MuleSoft Inc.\nhttp://mulesoft.com \n\n\n\n"}}