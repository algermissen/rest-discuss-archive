{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":232056567,"authorName":"Jim Webber","from":"Jim Webber &lt;jim@...&gt;","profile":"jwebberatthoughtworks","replyTo":"SENDER","senderId":"_6uJTwv7ghvkj7VtwFqvlCzHNqI_g9X8UktyOh3JR9mD_SLjoYbLwuEEcVtfmDGYvCYnqPWXUmYS2iqnwhbXhZIbzw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP reliability - in order msg delivery?","postDate":"1279012370","msgId":15829,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk2QThCNTMzLURCQjgtNEY1RS04MTgwLTY2QUM3MTc5NUMyOEB3ZWJiZXIubmFtZT4=","inReplyToHeader":"PDkzODQ2NC4zMjUxNC5xbUB3ZWIyODMxNC5tYWlsLnVrbC55YWhvby5jb20+","referencesHeader":"PDkzODQ2NC4zMjUxNC5xbUB3ZWIyODMxNC5tYWlsLnVrbC55YWhvby5jb20+"},"prevInTopic":15828,"nextInTopic":15830,"prevInTime":15828,"nextInTime":15830,"topicId":15828,"numMessagesInTopic":32,"msgSnippet":"Hi Sean, ... I think you could model it readily with HTTP status codes and hypermedia. For example, if you interact with a resource which is in an inconsistent","rawEmail":"Return-Path: &lt;jim@...&gt;\r\nX-Sender: jim@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 78338 invoked from network); 13 Jul 2010 09:12:59 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 13 Jul 2010 09:12:59 -0000\r\nX-Received: from unknown (HELO asmtp1.iomartmail.com) (62.128.201.248)\n  by mta3.grp.sp2.yahoo.com with SMTP; 13 Jul 2010 09:12:58 -0000\r\nX-Received: from asmtp1.iomartmail.com (localhost.localdomain [127.0.0.1])\n\tby asmtp1.iomartmail.com (8.13.8/8.13.8) with ESMTP id o6D9CvnZ007818\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 13 Jul 2010 10:12:57 +0100\r\nX-Received: from [115.128.47.249] ([115.128.47.249])\n\t(authenticated bits=0)\n\tby asmtp1.iomartmail.com (8.13.8/8.13.8) with ESMTP id o6D9CrEj007767\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 13 Jul 2010 10:12:55 +0100\r\nContent-Type: text/plain; charset=us-ascii\r\nMime-Version: 1.0 (Apple Message framework v1081)\r\nIn-Reply-To: &lt;938464.32514.qm@...&gt;\r\nDate: Tue, 13 Jul 2010 19:12:50 +1000\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;96A8B533-DBB8-4F5E-8180-66AC71795C28@...&gt;\r\nReferences: &lt;938464.32514.qm@...&gt;\r\nTo: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Jim Webber &lt;jim@...&gt;\r\nSubject: Re: [rest-discuss] HTTP reliability - in order msg delivery?\r\nX-Yahoo-Group-Post: member; u=232056567; y=LBKBhkNHf1aHORfMv_qqSs8dfzStp-aCU0iIORy3Ox-mA-MJtjetFr4rE48PjuL7\r\nX-Yahoo-Profile: jwebberatthoughtworks\r\n\r\nHi Sean,\n\n&gt; What if you needed in-order message delivery? I imagine for a b=\r\nanking application, the order of transactions on an account would be import=\r\nant...\n\nI think you could model it readily with HTTP status codes and hyper=\r\nmedia. For example, if you interact with a resource which is in an inconsis=\r\ntent state (from your point of view) because it didn&#39;t process a prior repr=\r\nesentation, you could expect a 409 response which invites you as a client t=\r\no reestablish your view of the server side state before continuing. \n\nHyper=\r\nmedia controls might be embedded in the response representation if there&#39;s =\r\nan opportunity for forward/backward error recovery that the server can dete=\r\nrmine.\n\nStill, another perhaps easier approach is simply to reverse respons=\r\nibilities: the sender becomes a server and pushes out an feed of events to =\r\nconsumers who poll it. No chance of out-of-order messages here, providing t=\r\nhe client understands timestamps. It&#39;s also easy to implement crash recover=\r\ny of both sides with this approach, and to deal with intermitted failures g=\r\nracefully through caching.\n\nJim\n\n\n"}}