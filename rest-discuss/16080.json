{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"rpz8rTtYZLxdO3utRgAz8FFY-DeviAN6CEzRZTMTBYS4EUrQZ4M2HrzF3W-83vqjKIG4f9Uls9oe6CrRVBayGLxtmpPbVxR1OW_a4eDiwg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Google proposes RPC style APIs over REST","postDate":"1280743656","msgId":16080,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODAyMDQwNzM2LjBkODE3NzAyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwODAyMDI1MzQ2LmIyZWIyOTA1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGkzMnMzNCtmc21sQGVHcm91cHMuY29tPgk8MTI4MDY4NTEwNS4xNDkxNS40NC5jYW1lbEBkZWhvcmEtbGFwdG9wPgk8QUFOTGtUaT10eVhCU2o0RVdmUkxYV1NtUTIzK2k4Ymd6aDJLYmdYdmM3N1ExQG1haWwuZ21haWwuY29tPgk8MjAxMDA4MDIwMjUzNDYuYjJlYjI5MDUuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":16079,"nextInTopic":16213,"prevInTime":16079,"nextInTime":16081,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... Maybe a visible example will help.  Where I have different resource types of the same media type, I ve used special characters to differentiate them","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34866 invoked from network); 2 Aug 2010 10:07:43 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 2 Aug 2010 10:07:43 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 2 Aug 2010 10:07:43 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 0FA5A509DA;\n\tMon,  2 Aug 2010 06:07:41 -0400 (EDT)\r\nDate: Mon, 2 Aug 2010 04:07:36 -0600\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Mike Kelly &lt;mike@...&gt;, bill@..., wahbedahbe\n &lt;andrew.wahbe@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100802040736.0d817702.eric@...&gt;\r\nIn-Reply-To: &lt;20100802025346.b2eb2905.eric@...&gt;\r\nReferences: &lt;i32s34+fsml@...&gt;\n\t&lt;1280685105.14915.44.camel@dehora-laptop&gt;\n\t&lt;AANLkTi=tyXBSj4EWfRLXWSmQ23+i8bgzh2KbgXvc77Q1@...&gt;\n\t&lt;20100802025346.b2eb2905.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt; \n&gt; Accept: and Accept-*: headers, in combination with the Allow: header,\n&gt; detail the interface for any media type on my demo system, for\n&gt; example.\n&gt;\n\nMaybe a visible example will help.  Where I have different resource\n&quot;types&quot; of the same media type, I&#39;ve used special characters to\ndifferentiate them internally to the httpd.  The server replaces the\nspecial characters as a last step, after the headers are otherwise set.\n\nWithout the hypertext interface, including HTTP headers, what isn&#39;t\nclear is which resources are which.  But the gist of the system is\nright there in this fragment of my httpd config file:\n\nFilter = text/html  addheader Allow: TRACE, HEAD, GET\nFilter = text/html  addheader Cache-Control: must-revalidate, max-age=31536000\nFilter = application/xhtml+xml addheader  Allow: TRACE, HEAD, GET\nFilter = application/xhtml+xml  addheader Cache-Control: must-revalidate, max-age=31536000\nFilter = application/xhtml*xml  addheader Allow: TRACE, HEAD, GET\nFilter = application/xhtml*xml  addheader Cache-Control: public, max-age=31536000\nFilter = application/xhtml$xml  addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = application/xhtml$xml  addheader Accept: application/xhtml+xml\nFilter = application/xhtml$xml  addheader Cache-Control: must-revalidate, public, max-age=31536000\nFilter = application/atom+xml addheader  Allow: TRACE, HEAD, GET, PUT, PATCH, DELETE\nFilter = application/atom+xml  addheader Accept: application/atom+xml\nFilter = application/atom+xml  addheader Accept-Patch: application/atomcat+xml\nFilter = application/atom+xml  addheader Cache-Control: public, max-age=31536000\nFilter = application/atomcat+xml  addheader Allow: TRACE, HEAD, GET, PUT\nFilter = application/atomcat+xml  addheader Accept: application/atomcat+xml\nFilter = application/atomcat+xml  addheader Cache-Control: public, max-age=31536000\nFilter = application/xml  addheader Allow: TRACE, HEAD, GET\nFilter = application/xml  addheader Cache-Control: public, max-age=31536000\nFilter = text/xml  addheader Allow: TRACE, HEAD, GET\nFilter = text/xml  addheader Cache-Control: public, max-age=31536000\nFilter = text/plain  addheader Allow: TRACE, HEAD, GET\nFilter = text/plain  addheader Cache-Control: public, max-age=31536000\nFilter = text/plain%  addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = text/plain%  addheader Accept: text/plain; charset=utf-8\nFilter = text/plain%  addheader Cache-Control: public, max-age=31536000\nFilter = application/atom+xml@type=feed  addheader Allow: TRACE, HEAD, GET, POST\nFilter = application/atom+xml@type=feed  addheader Accept: application/atom+xml, application/x-www-form-urlencoded\nFilter = application/atom+xml@type=feed  addheader Cache-Control: public, max-age=31536000\nFilter = application/xbel+xml  addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = application/xbel+xml  addheader Accept: application/xbel+xml\nFilter = application/xbel+xml  addheader Cache-Control: public, max-age=31536000\nFilter = text/css addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = text/css addheader Accept: text/css; charset=utf-8\nFilter = text/css  addheader Cache-Control: public, max-age=31536000\nFilter = text/xsl addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = text/xsl addheader Accept: text/xsl; charset=utf-8\nFilter = text/xsl  addheader Cache-Control: public, max-age=31536000\nFilter = application/json  addheader Allow: TRACE, HEAD, GET\nFilter = application/json  addheader Cache-Control: public, max-age=31536000\nFilter = application/javascript addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = application/javascript addheader Accept: application/javascript\nFilter = application/javascript  addheader Cache-Control: public, max-age=31536000\nFilter = image/gif addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = image/gif addheader Accept: image/gif\nFilter = image/gif  addheader Cache-Control: public, max-age=31536000\nFilter = image/jpeg addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = image/jpeg addheader Accept: image/jpeg\nFilter = image/jpeg  addheader Cache-Control: public, max-age=31536000\nFilter = image/png addheader Allow: TRACE, HEAD, GET, PUT, DELETE\nFilter = image/png addheader Accept: image/png\nFilter = image/png  addheader Cache-Control: public, max-age=31536000\n\nIf the hypertext is instructing the user agent to POST application/x-www-\nform-urlencoded data to an Atom Feed, the user agent can always make a \nHEAD request to the Atom Feed, and determine that it will also accept\napplication/atom+xml, and formulate its request that way.  By following\nits nose.  I&#39;m sure you can mimic all this with WADL, I just question,\nwhy not use headers?\n\nDoes Google&#39;s new stack allow different resource types of the same media \ntype, to have different headers?  Or has this simplicity been abstracted \naway for the sake of ease-of-use, to the point where all resources \nsharing a media type also share the same headers and methods, which goes \nbeyond the REST constraint that they share the same method semantics?\n\n-Eric\n\n"}}