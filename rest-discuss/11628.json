{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"MSTjZ8qEaM8m1NTovoikeYx1ocOtRFWL2hoSjP8dG6dpUkzQf_GdGX0iQesSOdVf9cfneT1txN-d7dBlHRgeMg0RSA8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers","postDate":"1227803928","msgId":11628,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MkVDRDE4LjIwMTAwQGhhY2tjcmFmdC5uZXQ+","inReplyToHeader":"PDQ5MkVDNzNELjQwNDA4MDVAbXlrYW5qby5jby51az4=","referencesHeader":"PFAtSVJDLUVYQkUwMmRqYVMzNkkwMDAwMjk3ZUBFWC5VQ09QLkVEVT4gPDQ5MkU3NEFFLjYwMzA2MDFAbXlrYW5qby5jby51az4gPDQ5MkU3RUU1LjMwMDAyMDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkU4NDVDLjMwMzAwMDBAbXlrYW5qby5jby51az4gPDQ5MkU5NzZELjQwMzA0QGhhY2tjcmFmdC5uZXQ+IDw0OTJFQTJBQy4zMDUwOTA2QG15a2Fuam8uY28udWs+IDxCTFUxMDItRFMyMEUwNzM3NTUxMTU0MjM3Qzk5REVCNTA1MEBwaHguZ2JsPiA8NDkyRUI0MkQuNTA5MDgwNEBteWthbmpvLmNvLnVrPiA8NDkyRUI2RjEuMTAzMDkwMUBoYWNrY3JhZnQubmV0PiA8NDkyRUI4MEMuMzAyMDYwMkBteWthbmpvLmNvLnVrPiA8NDkyRUJCRjMuMzA5MDVAaGFja2NyYWZ0Lm5ldD4gPDQ5MkVCRkQyLjkwMjA2MDlAbXlrYW5qby5jby51az4gPDQ5MkVDMjA0LjIwMDAyMDhAaGFja2NyYWZ0Lm5ldD4gPDQ5MkVDNzNELjQwNDA4MDVAbXlrYW5qby5jby51az4="},"prevInTopic":11627,"nextInTopic":11629,"prevInTime":11627,"nextInTime":11629,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... Which are still intermediaries. Even a proxy that is a single point of contact with the web either has to deal with non-web based changes (even if they","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 27011 invoked from network); 27 Nov 2008 16:39:13 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m2.grp.re1.yahoo.com with QMQP; 27 Nov 2008 16:39:13 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta17.grp.scd.yahoo.com with SMTP; 27 Nov 2008 16:39:13 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Thu, 27 Nov 2008 11:38:50 -0500\r\nMessage-ID: &lt;492ECD18.20100@...&gt;\r\nDate: Thu, 27 Nov 2008 16:38:48 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (Windows/20081105)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;P-IRC-EXBE02djaS36I0000297e@...&gt; &lt;492E74AE.6030601@...&gt; &lt;492E7EE5.3000201@...&gt; &lt;492E845C.3030000@...&gt; &lt;492E976D.40304@...&gt; &lt;492EA2AC.3050906@...&gt; &lt;BLU102-DS20E0737551154237C99DEB5050@...&gt; &lt;492EB42D.5090804@...&gt; &lt;492EB6F1.1030901@...&gt; &lt;492EB80C.3020602@...&gt; &lt;492EBBF3.30905@...&gt; &lt;492EBFD2.9020609@...&gt; &lt;492EC204.2000208@...&gt; &lt;492EC73D.4040805@...&gt;\r\nIn-Reply-To: &lt;492EC73D.4040805@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: -1783861920588.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 11:38:56 on 27 Nov 2008\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and unRESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=164939419; y=scUqM23PR3SfWE4E3ZbYzXxVcRhA47VGO1Nt6rUsriSKyJHR\r\nX-Yahoo-Profile: hack_poet\r\n\r\nMike wrote:\n&gt; I&#39;m talking about intermediaries (e.g. reverse proxys) on the server side.\n\nWhich are still intermediaries. Even a proxy that is a single point of \ncontact with the web either has to deal with non-web based changes (even \nif they theoretically should never happen, in reality they almost \ncertainly will) and other side-effects beyond the resource referenced, \nor else they are highly application-aware, and hence no longer just web \nproxies.\n\nNot an issue.\n\n&gt; In my system, I have:\n&gt; \n&gt; /document\n&gt; \n&gt; serving representations:\n&gt; \n&gt; text/plain\n&gt; text/html\n&gt; application/xml\n&gt; \n&gt; Each of which can be cached separately. A client can then:\n&gt; \n&gt; PUT /document\n&gt; \n&gt; It is completely clear to the reverse proxy in front of my application \n&gt; that all the representations need to be re-cached. This can be assumed \n&gt; and work automatically out of the box.\n&gt; \n&gt; In your system, you have:\n&gt; \n&gt; /document.txt\n&gt; /document.html\n&gt; /document.xml\n&gt; \n&gt; If a client:\n&gt; \n&gt; PUT /document.xml\n&gt; \n&gt; How is a reverse proxy in front of your application supposed to know \n&gt; whether the other URI&#39;s need to be re-cached? Won&#39;t you have to spend \n&gt; time explaining to the proxy how the URIs are related?\n\nIn my system I have\n\n/document\n\nserving representations:\n\ntext/plain\ntext/html\napplication/xml\n\nThe case of someone asking for just text/plain, just text/html or just \napplication/xml is clear.\n\nThe case of someone asking for preferences which include just one of \nthose along with content types I do not serve and/or with */* is clear.\n\nThe case of someone asking for preference lists of two or more of those \n(perhaps along with */*, perhaps not) is handled according to a \ncombination of the client&#39;s weighting of the preferences along with the \nserver&#39;s weighting of their relative quality.\n\nThe case of someone asking for only content-types that do not exist may \nbe dealt with either a 200 and one of the types anyway (suitable for \nsome applications) or with a 406 with an entity linking to the:\n\n/document.txt\n/document.html\n/document.xml\n\nNow. If someone decides to PUT to /document.txt I am likely to do one of \nthe four following things:\n\n1. Not let them (not everyone can PUT everywhere after all).\n\n2. a. Accept /document.txt, with the understanding that this represents \nsolely the one representation of the resource /document. (E.g. if my \nsystem is actually intended to let people edit different representations \nseparately this may be precisely what is wanted).\nb. Update /document.txt and metadata for /document.txt.\nc. Update any related documents, and update the metadata for them. This \nmeans that any freshness checks for those related documents will reflect \na change.\n\n3 a. Accept /document.txt, with the understanding that this change \nrepresents not just a change to the resource /document.txt but also the \nresource /document.\nb. Update /document and all the related resources.\nc. Update any related documents, and update the metadata for them. This \nmeans that any freshness checks for those related documents will reflect \na change.\n\n4 a. 307 to /document\nb. Accept text/plain entity at /document\nc. Update /document and all the related resources.\nd. Update any related documents, and update the metadata for them. This \nmeans that any freshness checks for those related documents will reflect \na change.\n\nNow. In each and every one of those cases intermediaries will function \nfine. If they try to GET any of the resources affected they will do so \non the basis of freshness information set by the server and \nfreshness-required information sent by the client. If either the client \ninsist that the information must be checked for freshness or the server \nhas indicated that future requests much be checked for freshness (or \nboth) then a conditional GET will find that the updated resources have \nbeen updated and the un-updated resources haven&#39;t.\n\nPerfect.\n\n\n"}}