{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"Aristotle Pagaltzis","from":"Aristotle Pagaltzis &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"OW66Z9WI6PLOvo_w8_iGYW7qWi07tDZjyARo7b1TWZmIN8iNVqVlicyWmZXtF-JkDmX0Qo0oyKXrc-jn6FYwMuBYRoGacDY8XO2oCQA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Reliable HTTP","postDate":"1236341213","msgId":12203,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzA2MTIwNjUzLkdBMTE5NTVAa2xhbmdyYXVtLnBsYXNtYXN0dXJtLm9yZz4=","inReplyToHeader":"PDQxMDQ3Ny4xOTQ1OC5xbUB3ZWIyODMwNC5tYWlsLnVrbC55YWhvby5jb20+","referencesHeader":"PDQxMDQ3Ny4xOTQ1OC5xbUB3ZWIyODMwNC5tYWlsLnVrbC55YWhvby5jb20+"},"prevInTopic":12202,"nextInTopic":12204,"prevInTime":12202,"nextInTime":12204,"topicId":208,"numMessagesInTopic":32,"msgSnippet":"... You’re getting your layers mixed up. TCP is a reliable transport protocol; HTTP is an unreliable application protoocol. A reliable transport will do","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 7390 invoked from network); 6 Mar 2009 12:07:35 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m4.grp.sp2.yahoo.com with QMQP; 6 Mar 2009 12:07:35 -0000\r\nX-Received: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta3.grp.re1.yahoo.com with SMTP; 6 Mar 2009 12:07:35 -0000\r\nX-Received: (qmail invoked by alias); 06 Mar 2009 12:07:34 -0000\r\nX-Received: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp045) with SMTP; 06 Mar 2009 13:07:34 +0100\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX19gg2goHU5gl+aUfCCYCmNjfm+EhepENlVTyQi3N0\n\t1Eh1Q/kBQc8Btf\r\nDate: Fri, 6 Mar 2009 13:06:53 +0100\r\nTo: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-ID: &lt;20090306120653.GA11955@...&gt;\r\nMail-Followup-To: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;410477.19458.qm@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;410477.19458.qm@...&gt;\r\nUser-Agent: Mutt/1.5.18 (2008-05-17)\r\nX-Y-GMX-Trusted: 0\r\nX-FuHaFi: 0.67\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Aristotle Pagaltzis &lt;pagaltzis@...&gt;\r\nSubject: Re: Reliable HTTP\r\nX-Yahoo-Group-Post: member; u=147780944; y=YXLVniZ9hLDtwDYaot_jPnkmqn5fBaK4YKcfJJ_o1wBY\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Sean Kennedy &lt;seandkennedy@...&gt; [2009-03-05 16:25]:\n&gt; I have a simple q: if TCP is a reliable protocol and HTTP uses\n&gt; TCP, how come HTTP is viewed as unreliable?\n\nYou’re getting your layers mixed up.\n\nTCP is a reliable transport protocol; HTTP is an unreliable\napplication protoocol. A reliable transport will do what’s\nnecessary to ensure that all the bytes sent by either side will\nreach the other side, and in the right order. But how that stream\nof bytes is interpreted is a question of the application\nprotocol, which is the level at which HTTP resides, and HTTP\nmakes no guarantees about how HTTP requests will be processed.\n\nF.ex. if you send a POST request, the server might close the\nconnection before sending you a result – no timeout or anything,\nthe server just shuts down the connection as soon as it receives\nyour request. As far as the TCP layer is concerned, everything is\nin perfect shape: all bytes sent by both sides are received and\nand the connection is closed properly. However, you still have no\nidea whether the POST request was processed and what the result\nwas, because in terms of HTTP semantics, no response was sent.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}