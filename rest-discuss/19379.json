{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":498432483,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jan.algermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"EK4DvYAOtJC8yBwrU1iIlaMfCmOKhbLtUTzN8o4e1AC46ubp_3Ddb3QNx-NI3_pQgTrYdTxj8k28Rgp0XPsIWPndzcRtn9oY7RY5R97e1Cs2LE4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How much REST should your Web API get?","postDate":"1367519696","msgId":19379,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMUM2MDFDLUNEN0YtNDFCOC1BNTk3LUFCRkVBRTExMTQ0REBub3Jkc2MuY29tPg==","inReplyToHeader":"PENBT3NZOG1TclRtZUVjUHd2ZVdpR3hDVUFhc0x0Qjg2UkJqdD10b0E3eU5RNmV2R1c4QUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGtsdGlkditrMGtmQGVHcm91cHMuY29tPiA8MzhDMzMzQjUtMzk4OS00NzgyLUFDRjMtQjIzQTY5OUY2ODREQG5vcmRzYy5jb20+IDxDQU9zWThtU3JUbWVFY1B3dmVXaUd4Q1VBYXNMdEI4NlJCanQ9dG9BN3lOUTZldkdXOEFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":19378,"nextInTopic":19380,"prevInTime":19378,"nextInTime":19380,"topicId":19371,"numMessagesInTopic":46,"msgSnippet":"... No, certainly not. What I am arguing against is what I experience so often: That people claim some paradigm is a bad fit for a problem instead of thinking","rawEmail":"Return-Path: &lt;jan.algermissen@...&gt;\r\nX-Sender: jan.algermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76377 invoked from network); 2 May 2013 18:35:11 -0000\r\nX-Received: from unknown (10.193.84.151)\n  by m1.grp.bf1.yahoo.com with QMQP; 2 May 2013 18:35:11 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.171)\n  by mta5.grp.bf1.yahoo.com with SMTP; 2 May 2013 18:35:10 -0000\r\nX-Received: from [192.168.2.102] (p548FB00B.dip0.t-ipconnect.de [84.143.176.11])\n\tby mrelayeu.kundenserver.de (node=mreu4) with ESMTP (Nemesis)\n\tid 0MKgZn-1UYnp83ehL-001xJN; Thu, 02 May 2013 20:34:58 +0200\r\nContent-Type: text/plain; charset=windows-1252\r\nMime-Version: 1.0 (Mac OS X Mail 6.2 &#92;(1499&#92;))\r\nIn-Reply-To: &lt;CAOsY8mSrTmeEcPwveWiGxCUAasLtB86RBjt=toA7yNQ6evGW8A@...&gt;\r\nDate: Thu, 2 May 2013 20:34:56 +0200\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;501C601C-CD7F-41B8-A597-ABFEAE11144D@...&gt;\r\nReferences: &lt;kltidv+k0kf@...&gt; &lt;38C333B5-3989-4782-ACF3-B23A699F684D@...&gt; &lt;CAOsY8mSrTmeEcPwveWiGxCUAasLtB86RBjt=toA7yNQ6evGW8A@...&gt;\r\nTo: =?windows-1252?Q?J=E9r=F4me_Louvel?= &lt;jlouvel@...&gt;\r\nX-Mailer: Apple Mail (2.1499)\r\nX-Provags-ID: V02:K0:3M5MXd4wdCc16c7HUsQuZkHuSjQem8QSG5XGOuxIT4L\n LRIF7Pqb1iGX78+BHmmptQRaSIZfjBjiIIPKETGbSI3yeFe2la\n X9EsDdl+nGB1i+10j0WjkT6s1CpgtgP+uSHpYdqbC0P270dq36\n yt+cW/GBkW+PCG3fD2YAy3OoHPcj/alD9Zc3vHWfkIsA22gONJ\n 6Ia6f5Y4eFvxG/38G5dlw7IRMMxawxny3mHToBlUROBZdtl+40\n 6g9Xw26uwwfkQNepj82GnQH8F2I2ENG1IzTYSgDE/xSi7m1WcK\n 0yRHiGqu0QdZzil0XZbaUrJa8bsfyxaKne19UPJFfeGSc1SuTN\n JyL+80gat0qk7H8m8p3hoMusRfXlMjqELkU7K0OX4VJS0X04jk\n hJXJN74uqewQQ==\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nSubject: Re: [rest-discuss] How much REST should your Web API get?\r\nX-Yahoo-Group-Post: member; u=498432483; y=7arlFDH9c2Ai1dLfLLVP0MCRJjruwY5XqpFZHE-xIDoIAah7VLzlDCka\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn 02.05.2013, at 19:48, J=E9r=F4me Louvel &lt;jlouvel@...&gt; wrote:\n\n&gt;=\r\n \n&gt; Jan,\n&gt; \n&gt; I remain a strong proponent of the idea that it is more fruit=\r\nful to aim at rethinking the problem to fit a sound paradigm rather than to=\r\n blame the paradigm for not fitting the problem (one&#39;s perceived view of it=\r\n, that is).\n&gt; \n&gt; But when the paradigm isn&#39;t intended to solve a given prob=\r\nlem, do you think we should force the problem to fit into the paradigm?\n\nNo=\r\n, certainly not. What I am arguing against is what I experience so often: T=\r\nhat people claim some paradigm is a bad fit for a problem instead of thinki=\r\nng thoroughly through the problem until they can make an educated choice.\n\n=\r\n&gt; \n&gt; REST was never designed to solve all software architecture problems. T=\r\nhat&#39;s quite the opposite and what makes it so powerful to scale the web of =\r\nhypermedia documents.\n\nWhat does that mean: &quot;and what makes it so powerful =\r\nto scale the web of hypermedia documents&quot;?\n\n&gt; \n&gt; Two concrete points:\n&gt; \n&gt; =\r\nI don&#39;t buy the efficiency argument regarding discovery and granularity of =\r\nmessages - unless you ignore caching and the possibility to tailor represen=\r\ntations for specific devices.\n&gt; \n&gt; You could also add HTTP compression to t=\r\nhe mix. I&#39;m a fan of HTTP caching and content negotiation as well. The &quot;Web=\r\n API&quot; style proposed fully leverages those features.\n\nIt just not as simple=\r\n as taking half of REST and getting half the benefits. REST works as a whol=\r\ne, not in &#39;layers&#39; or &#39;levels&#39;.\n\n&gt;  \n&gt; You write about the &#39;Web API style&#39; =\r\n&quot;requires coordination between clients and servers when changes are deploye=\r\nd&quot; - doh... this eliminates *the* (**the**) primary benefit to apply REST.\n=\r\n&gt; \n&gt; Exactly, but if you ship a native mobile app or a connected hardware d=\r\nevice with no hypermedia capability at all (think about a dumb sensor),\n\nNo=\r\nw, there is quite a difference between a sensor and a mobile app. Who says =\r\na mobile app cannot have hypermedia capabilities? And who would make a sens=\r\nor a REST client? I&#39;d rather have the sensor send measurement data via, e.g=\r\n. UDP.\n\n&gt; you definitely need to coordinate the clients and servers even th=\r\nough you are fully and properly using HTTP.\n\nHmm, can you be more specific =\r\nabout what you mean here?\n\n&gt; This is why the vast majority of so-called web=\r\n APIs are versionned and based on stable URIs and representations structure=\r\ns. They can&#39;t always afford to dynamically discover the user interface.\n\nI&#39;=\r\nd say, the vast majority of Web APIs fails to be RESTful because people sim=\r\nply did not follow the style. Show me a single example that has been delibe=\r\nrately designed  unRESTful on the basis of design principles. To me this is=\r\n just the same old discussion over and over again: People make a (rather un=\r\nedcuated) claim, mistake that for truth and come up with suboptimal design.=\r\n\n\nAnd that is not only true for wanna be REST services, unfortunately it is=\r\n an all too common way to approach all sorts of IT problems.\n  \nIn my exper=\r\nience, people learn best if we do not settle for &#39;premature agreement&#39; but =\r\nuse, for example, a style to foster more flexible thinking. Usually, whoeve=\r\nr endures that process is thankful in the end.\n\n&gt; \n&gt; You could say that nat=\r\nive apps aren&#39;t needed and could be re-developped as HTML 5 apps, but this =\r\nisn&#39;t always possible or desirable.\n\nEither way, a native app makes a perfe=\r\nctly RESTful client if you design it that way. Personally, I&#39;d go a very lo=\r\nng way to maintain the benefit of not having to coordinate client deploymen=\r\nt with API changes....\n\n\n&gt;  \n&gt; Aside from systems that focus on sending fin=\r\ne grained control messages around in (near) realtime, I have yet to see a c=\r\nase where REST does not shine due to performance, scalability and the abili=\r\nty to decentralize management of the deployment and release cycles.\n&gt; \n&gt; Ag=\r\nain, my point is to take the best of what REST brings but not try to apply =\r\nit in cases where a rich hypermedia client is available,\n\nWhat is a &quot;rich h=\r\nypermedia client&quot;? Can you be more specific about the situation that seems =\r\nto be the root cause for the perceived need that you have to change the sty=\r\nle?\n\n&gt; but isn&#39;t so uncommon. I&#39;m just trying to do REST justice otherwise =\r\nwe&#39;ll get a backslash when people finally realize that the vast majority of=\r\n REST endpoints/APIs/etc. can&#39;t be used in a dynamic way like HTML is used =\r\nby web browsers.\n\nCan you explain what you mean by &quot;a dynamic way like HTML=\r\n is used by web browsers&quot;?\n\n\nTo me it remains unclear what the problem is y=\r\nou are trying to solve. Please explain, I&#39;m all ears.\n\n\nJan\n\n\n\n\n&gt;  \n&gt; Best =\r\nregards,\n&gt; Jerome\n&gt; \n&gt; \n&gt; \n\n\n"}}