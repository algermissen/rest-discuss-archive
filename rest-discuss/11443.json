{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"B4NFdGlnuN8Q0-wkU7xdAwrrB1-qY2PlpoG6BjYlxnEksGYmAalHU3nmmwVmAPfI_TbGy5DUgjxpV2Os_InlZKFHqdy9LFxp","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST Server API test harness?","postDate":"1226071513","msgId":11443,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDc5OTMzMGMzMDgxMTA3MDcyNXU2ZjI4ZmE1M2tjNzM1YWRlYTkxMzNlZDMxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDI3RUZFQThFLTBDMTktNDFCMS04RUFBLTAzMTUyNUE0OTI1REBtaW5kdG91Y2guY29tPg==","referencesHeader":"PEJMVTEwMi1EUzQ3RDdCQTRCOEYyNTRDMzc2OEQ1NEI1MTkwQHBoeC5nYmw+CSA8MjdFRkVBOEUtMEMxOS00MUIxLThFQUEtMDMxNTI1QTQ5MjVEQG1pbmR0b3VjaC5jb20+"},"prevInTopic":11442,"nextInTopic":11444,"prevInTime":11442,"nextInTime":11444,"topicId":11439,"numMessagesInTopic":20,"msgSnippet":"I agree with Steve. A test harness for REST-over-HTTP could be valuable though; however it can t be ignorant of media-types. How can such a test harness assess","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 97297 invoked from network); 7 Nov 2008 15:25:15 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m46.grp.scd.yahoo.com with QMQP; 7 Nov 2008 15:25:15 -0000\r\nX-Received: from unknown (HELO nf-out-0910.google.com) (64.233.182.187)\n  by mta17.grp.scd.yahoo.com with SMTP; 7 Nov 2008 15:25:14 -0000\r\nX-Received: by nf-out-0910.google.com with SMTP id c10so722277nfd.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 07 Nov 2008 07:25:13 -0800 (PST)\r\nX-Received: by 10.210.22.8 with SMTP id 8mr4078843ebv.37.1226071513219;\n        Fri, 07 Nov 2008 07:25:13 -0800 (PST)\r\nX-Received: by 10.210.134.2 with HTTP; Fri, 7 Nov 2008 07:25:13 -0800 (PST)\r\nMessage-ID: &lt;799330c30811070725u6f28fa53kc735adea9133ed31@...&gt;\r\nDate: Fri, 7 Nov 2008 15:25:13 +0000\r\nTo: &quot;Steve Bjorg&quot; &lt;steveb@...&gt;\r\nCc: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;, rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;27EFEA8E-0C19-41B1-8EAA-031525A4925D@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;BLU102-DS47D7BA4B8F254C3768D54B5190@...&gt;\n\t &lt;27EFEA8E-0C19-41B1-8EAA-031525A4925D@...&gt;\r\nX-Google-Sender-Auth: 26e87c271cbe67fc\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] REST Server API test harness?\r\nX-Yahoo-Group-Post: member; u=189321215; y=RgFKL0398o4GwUINQM_g_1Dr-tTJCh4Q4T7SXK01KwD-0j3nJ1NeR30_\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\nI agree with Steve.\n\nA test harness for REST-over-HTTP could be valuable though; however it\ncan&#39;t be ignorant of media-types. How can such a test harness assess\nHATEOAS without knowledge of the media-type exchanged? Without\nknowledge of HATEOAS, the test harness is unable to traverse the links\nbetween steady states.\n\nSome problems come to mind. In order to assess REST-over-HTTP,\nresource state changes must be made. In many, perhaps most, test\nsubjects this will be either impossible (due to access control\nrestrictions) or undesirable (filling a site with dummy data). The\nCode-on-Demand constraint further complicates the testability of\nsubjects, as it reduces visibility.\n\nGiven the necessity to have knowledge of many media-types, I suspect\nthis would not be a trivial development. Good idea though (my\nhttp-headers-status diagram grew out of just such a test suite,\nalthough that was very application-specific).\n\nAlan\n\nOn Fri, Nov 7, 2008 at 2:34 PM, Steve Bjorg &lt;steveb@...&gt; wrote:\n&gt; I&#39;m not aware of any, but from your description, it sounds a HTTP test\n&gt; harness, not REST.\n&gt; - Steve\n&gt; --------------\n&gt; Steve G. Bjorg\n&gt; http://wiki.mindtouch.com\n&gt; http://twitter.com/bjorg\n&gt; On Nov 7, 2008, at 4:42 AM, Sebastien Lambla wrote:\n&gt;\n&gt; Hi,\n&gt;\n&gt; I had an idea a while ago. As I&#39;m writing a REST enabler toolkit, and as i\n&gt; know others do exist too, it would be of great help to have a test harness\n&gt; to ensure valid (http / webarch) behavior.\n&gt;\n&gt; What I&#39;m thinking of is a bunch of specifications for various areas to be\n&gt; implemented using an http or rest toolit, with an automated client checking\n&gt; for accurate responses.\n&gt;\n&gt; For example, the following would be a specification:\n&gt;\n&gt; Generic resources\n&gt; =============\n&gt; A generic resource /customer({id}) is exposed as an xml represetnation, a\n&gt; json representation and an html representation. Content-type negotiation is\n&gt; supported on such resource. Format-specific URIs exist at\n&gt; /customer({id}).html, /customer({id}).json and /customer({id}).html\n&gt;\n&gt;\n&gt; Acceptance criterias\n&gt; - A request to /customer(22) with Accept:\n&gt; application/xml;q=0.9,application/json triggers a 200 with Content-Type:\n&gt; application/json and Content-Location: /customer(22).json\n&gt; - A request to /customer(22) with Accept: */* triggers a 300 Multiple\n&gt; representations\n&gt; - A request to /customer(22).html with Accept: text/html triggers a 200\n&gt; - A request to /customer(22).html with Accept: application/json triggers xxx\n&gt;\n&gt;\n&gt; I&#39;m building integration tests around my API that follow such a pattern, but\n&gt; having a common test suite for any API that has an implementation of such\n&gt; test harness would be invaluable.\n&gt;\n&gt; Is there such a harness and I missed it? Would anyone be interested in\n&gt; working on such harness?\n&gt;\n&gt; Seb\n&gt;\n&gt; \n\n"}}