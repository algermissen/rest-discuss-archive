{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":28198498,"authorName":"Nina Jeliazkova","from":"Nina Jeliazkova &lt;nina@...&gt;","profile":"nina_n","replyTo":"SENDER","senderId":"F0GIHCYCe-sOcpgtSSWNOb6sF3r-7p_DZuAzR8eYAKE0Gbsg9oai6NsuwMlfofdF6EtyvDy5iI38vwkTR0ugFo3ZnTHs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful Cookies?","postDate":"1255015639","msgId":13754,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQ0UwNEQ3LjYwNjAzMDdAYWNhZC5iZz4=","inReplyToHeader":"PEVEOTdGODk0NjQ0OTlFNEQ4MEE2OENEQ0UxRTNEMUZGMDI0OEUxRkNAUEFDT1JQRVhDTUIwMy5jYWJsZS5jb21jYXN0LmNvbT4=","referencesHeader":"PDRBQ0Q3RERELjkwMDAyMDBAYWNhZC5iZz4gPDRBQ0RBOTAzLjIwMjA5MDNAaGFja2NyYWZ0Lm5ldD4JIDw0QUNERUE5NC43MDQwNTAxQHJlZGhhdC5jb20+CSA8Zjk4NWY3OWMwOTEwMDgwNjU3dDZlNjhjNzFhaTkyY2RiYThhNzkwMTc5MDVAbWFpbC5nbWFpbC5jb20+CSA8NEFDREY2MjEuMTA3MDYwOEBhY2FkLmJnPiA8Zjk4NWY3OWMwOTEwMDgwNzQ0aDZhNzJhZDkwdTc0YmI1ZTNhZTg4OTU2YjdAbWFpbC5nbWFpbC5jb20+IDw0QUNERkNERS45MDIwOTA1QGFjYWQuYmc+IDxFRDk3Rjg5NDY0NDk5RTREODBBNjhDRENFMUUzRDFGRjAyNDhFMUZDQFBBQ09SUEVYQ01CMDMuY2FibGUuY29tY2FzdC5jb20+"},"prevInTopic":13753,"nextInTopic":13755,"prevInTime":13753,"nextInTime":13755,"topicId":13750,"numMessagesInTopic":9,"msgSnippet":"... Well, this is what REST gurus [1] are telling us: /* The Trouble with Cookies* A web service that sends HTTP cookies violates the principle of ","rawEmail":"Return-Path: &lt;nina@...&gt;\r\nX-Sender: nina@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 3034 invoked from network); 8 Oct 2009 15:27:26 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.re1.yahoo.com with QMQP; 8 Oct 2009 15:27:26 -0000\r\nX-Received: from unknown (HELO amigo.acad.bg) (194.141.0.3)\n  by mta3.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 15:27:25 -0000\r\nX-Received: from [194.141.0.136] (nina-vpn.acad.bg [194.141.0.136])\n\tby amigo.acad.bg (8.14.2/8.14.2) with ESMTP id n98FRKRw008334;\n\tThu, 8 Oct 2009 18:27:20 +0300\r\nMessage-ID: &lt;4ACE04D7.6060307@...&gt;\r\nDate: Thu, 08 Oct 2009 18:27:19 +0300\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: &quot;Moore, Jonathan (CIM)&quot; &lt;jonathan_moore@...&gt;\r\nCc: jeliazkova.nina@..., Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;4ACD7DDD.9000200@...&gt; &lt;4ACDA903.2020903@...&gt;\t &lt;4ACDEA94.7040501@...&gt;\t &lt;f985f79c0910080657t6e68c71ai92cdba8a79017905@...&gt;\t &lt;4ACDF621.1070608@...&gt; &lt;f985f79c0910080744h6a72ad90u74bb5e3ae88956b7@...&gt; &lt;4ACDFCDE.9020905@...&gt; &lt;ED97F89464499E4D80A68CDCE1E3D1FF0248E1FC@...&gt;\r\nIn-Reply-To: &lt;ED97F89464499E4D80A68CDCE1E3D1FF0248E1FC@...&gt;\r\nX-Enigmail-Version: 0.96.0\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------000100010206020106000908&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nina Jeliazkova &lt;nina@...&gt;\r\nReply-To: jeliazkova.nina@...\r\nSubject: Re: [rest-discuss] RESTful Cookies?\r\nX-Yahoo-Group-Post: member; u=28198498; y=rU_HouSDt3xsqA4n0Qy4HKLeOYYz8JUGf8xE2Krlp9XQ\r\nX-Yahoo-Profile: nina_n\r\n\r\n\r\n--------------000100010206020106000908\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n\nMoore, Jonathan (CIM) wrote:\n&gt; Nina Jeliazkova wrote:\n&gt;   \n&gt;&gt; Besides, REST does not encourages cookies and sessions, meaning\n&gt;&gt; credentials or something derived from credentials should be sent\n&gt;&gt; on_every_ request.\n&gt;&gt;     \n&gt;\n&gt; I&#39;m curious about this assertion, at least as it applies to cookies. Cookies represent pieces of application state that are stored with the client, and they get sent on every request (where domains apply). Why isn&#39;t that RESTful?\n&gt;   \nWell, this is what REST gurus [1] are telling us:\n\n    /*&quot;The Trouble with Cookies*\n    A web service that sends HTTP cookies violates the principle of\n    statelessness. In fact, it usually violates statelessness twice. It\n    moves application state onto the server even though it belongs on\n    the client, and it stops clients from being in charge of their own\n    application state.&quot;\n    ...\n    OK, so cookies shouldn’t contain session IDs: that’s just an excuse\n    to keep application state on the server. What about cookies that\n    really do contain application state? What if you serialize the\n    actual session hash and send it as a cookie, instead of just sending\n    a reference to a hash on the server?\n    This can be RESTful, but it’s usually not. The cookie standard says\n    that the client can get rid of a cookie when it expires, or when the\n    client terminates. This is a pretty big restriction on the client’s\n    control over application state. If you make 10 web requests and\n    suddenly the server sends you a cookie, you have to start sending\n    this cookie with your future requests. You can’t make those 10\n    precookie requests unless you quit and start over. To use a web\n    browser analogy, your “Back” button is broken. You can’t put the\n    application in any of the states it was in before you got the cookie.\n    ...\n    The only RESTful use of cookies is one where the client is in charge\n    of the cookie value. The server can suggest values for a cookie\n    using the Set-Cookie header, just like it can suggest links the\n    client might want to follow, but the client chooses what cookie to\n    send just as it chooses what links to follow. In some browser-based\n    applications, cookies are created by the client and never sent to\n    the server. The cookie is just a convenient container for\n    application state, which makes its way to the server in\n    representations and URIs. That’s a very RESTful use of cookies.&quot;\n\n    /\n\nI hope the authors don&#39;t mind the long citation .\n\nBest regards,\nNina\n\n[1] Leonard Richardson and Sam Ruby, RESTful Web Services, O&#39;Reilly\n2007, p.252\n\n&gt; (Noting that some cookies may contain more interesting information than JSESSIONID, for example. I agree with an understand the general assessment that server-side session storage is not RESTful).\n&gt;\n&gt; Jon\n&gt; ........\n&gt; Jon Moore\n&gt; Comcast Interactive Media\n&gt;\n&gt;\n&gt;\n&gt; -----Original Message-----\n&gt; From: rest-discuss@yahoogroups.com on behalf of Nina Jeliazkova\n&gt; Sent: Thu 10/8/2009 10:53 AM\n&gt; To: Subbu Allamaraju\n&gt; Cc: jeliazkova.nina@...; Rest List\n&gt; Subject: Re: [rest-discuss] composition of REST services\n&gt;  \n&gt; Subbu Allamaraju wrote:\n&gt;   \n&gt;&gt; Learning how to authenticate is no different from leaning about the\n&gt;&gt; media types and formats.\n&gt;&gt;\n&gt;&gt; I don&#39;t mean to undermine the difficulty here, but the problem does\n&gt;&gt; not change just because a URI belongs to a server different from the\n&gt;&gt; one that served the representation.\n&gt;&gt;\n&gt;&gt; Subbu\n&gt;&gt;     \n&gt; The difficulty is not in the authentication itself, but with the\n&gt; federated authentication/authorization, encompassing multiple servers.\n&gt; Otherwise, it is pretty easy to protect each resource with arbitrary\n&gt; kind of available authentication scheme and ask the client to provide\n&gt; credentials on each POST.  It is quite sure users will not be happy with\n&gt; such approach. \n&gt;\n&gt; Besides, REST does not encourages cookies and sessions, meaning\n&gt; credentials or something derived from credentials should be sent\n&gt; on_every_ request.\n&gt;\n&gt; Best regards,\n&gt; Nina\n&gt;   \n&gt;&gt; On Thu, Oct 8, 2009 at 4:24 PM, Nina Jeliazkova &lt;nina@...\n&gt;&gt; &lt;mailto:nina@...&gt;&gt; wrote:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;     \n&gt;&gt;&gt;     The integration problem is real, but the server boundary does not\n&gt;&gt;&gt;     change the problem very much. Does the client care if the\n&gt;&gt;&gt;     resource it is accessing is on hateoas.com &lt;http://hateoas.com&gt;\n&gt;&gt;&gt;     or ulser.com &lt;http://ulser.com&gt; as long it knows the semantics of\n&gt;&gt;&gt;     the link, the methods to use, security requirements, media types\n&gt;&gt;&gt;     and so on?\n&gt;&gt;&gt;       \n&gt;&gt;     At least transparently accessing resources outside of server\n&gt;&gt;     boundary under different domains requires /slightly/ more\n&gt;&gt;     complicated authentication/authorization scheme, that just a\n&gt;&gt;     single server, unless all resources are considered unprotected. \n&gt;&gt;\n&gt;&gt;     Best regards,\n&gt;&gt;     Nina\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;      \n&gt;&gt;\n&gt;&gt;\n&gt;&gt;     \n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\r\n--------------000100010206020106000908\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=UTF-8&quot; http-equiv=&quot;Content-Type&quot;&gt;\n  &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\n&lt;br&gt;\nMoore, Jonathan (CIM) wrote:\n&lt;blockquote\n cite=&quot;mid:ED97F89464499E4D80A68CDCE1E3D1FF0248E1FC@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;Nina Jeliazkova wrote:\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;Besides, REST does not encourages cookies and sessions, meaning\ncredentials or something derived from credentials should be sent\non_every_ request.\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\nI&#39;m curious about this assertion, at least as it applies to cookies. Cookies represent pieces of application state that are stored with the client, and they get sent on every request (where domains apply). Why isn&#39;t that RESTful?\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\nWell, this is what REST gurus [1] are telling us:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote&gt;&lt;i&gt;&lt;b&gt;&quot;The Trouble with Cookies&lt;/b&gt;&lt;br&gt;\nA web service that sends HTTP cookies violates the principle of\nstatelessness. In fact, it usually violates statelessness twice. It\nmoves application state onto the server even though it belongs on the\nclient, and it stops clients from being in charge of their own\napplication state.&quot;&lt;br&gt;\n...&lt;br&gt;\nOK, so cookies shouldn’t contain session IDs: that’s just an excuse to\nkeep application state on the server. What about cookies that really do\ncontain application state? What if you serialize the actual session\nhash and send it as a cookie, instead of just sending a reference to a\nhash on the server?&lt;br&gt;\nThis can be RESTful, but it’s usually not. The cookie standard says\nthat the client can get rid of a cookie when it expires, or when the\nclient terminates. This is a pretty big restriction on the client’s\ncontrol over application state. If you make 10 web requests and\nsuddenly the server sends you a cookie, you have to start sending this\ncookie with your future requests. You can’t make those 10 precookie\nrequests unless you quit and start over. To use a web browser analogy,\nyour “Back” button is broken. You can’t put the application in any of\nthe states it was in before you got the cookie.&lt;br&gt;\n...&lt;br&gt;\nThe only RESTful use of cookies is one where the client is in charge of\nthe cookie value. The server can suggest values for a cookie using the\nSet-Cookie header, just like it can suggest links the client might want\nto follow, but the client chooses what cookie to send just as it\nchooses what links to follow. In some browser-based applications,\ncookies are created by the client and never sent to the server. The\ncookie is just a convenient container for application state, which\nmakes its way to the server in representations and URIs. That’s a very\nRESTful use of cookies.&quot;&lt;br&gt;\n  &lt;br&gt;\n  &lt;/i&gt;&lt;/blockquote&gt;\nI hope the authors don&#39;t mind the long citation .&lt;br&gt;\n&lt;br&gt;\nBest regards,&lt;br&gt;\nNina&lt;br&gt;\n&lt;br&gt;\n[1] Leonard Richardson and Sam Ruby, RESTful Web Services, O&#39;Reilly\n2007, p.252&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote\n cite=&quot;mid:ED97F89464499E4D80A68CDCE1E3D1FF0248E1FC@...&quot;\n type=&quot;cite&quot;&gt;\n  &lt;pre wrap=&quot;&quot;&gt;\n(Noting that some cookies may contain more interesting information than JSESSIONID, for example. I agree with an understand the general assessment that server-side session storage is not RESTful).\n\nJon\n........\nJon Moore\nComcast Interactive Media\n\n\n\n-----Original Message-----\nFrom: &lt;a class=&quot;moz-txt-link-abbreviated&quot; href=&quot;mailto:rest-discuss@yahoogroups.com&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt; on behalf of Nina Jeliazkova\nSent: Thu 10/8/2009 10:53 AM\nTo: Subbu Allamaraju\nCc: &lt;a class=&quot;moz-txt-link-abbreviated&quot; href=&quot;mailto:jeliazkova.nina@...&quot;&gt;jeliazkova.nina@...&lt;/a&gt;; Rest List\nSubject: Re: [rest-discuss] composition of REST services\n \nSubbu Allamaraju wrote:\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;Learning how to authenticate is no different from leaning about the\nmedia types and formats.\n\nI don&#39;t mean to undermine the difficulty here, but the problem does\nnot change just because a URI belongs to a server different from the\none that served the representation.\n\nSubbu\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;The difficulty is not in the authentication itself, but with the\nfederated authentication/authorization, encompassing multiple servers.\nOtherwise, it is pretty easy to protect each resource with arbitrary\nkind of available authentication scheme and ask the client to provide\ncredentials on each POST.  It is quite sure users will not be happy with\nsuch approach. \n\nBesides, REST does not encourages cookies and sessions, meaning\ncredentials or something derived from credentials should be sent\non_every_ request.\n\nBest regards,\nNina\n  &lt;/pre&gt;\n  &lt;blockquote type=&quot;cite&quot;&gt;\n    &lt;pre wrap=&quot;&quot;&gt;On Thu, Oct 8, 2009 at 4:24 PM, Nina Jeliazkova &lt;&lt;a class=&quot;moz-txt-link-abbreviated&quot; href=&quot;mailto:nina@...&quot;&gt;nina@...&lt;/a&gt;\n&lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;mailto:nina@...&quot;&gt;&lt;mailto:nina@...&gt;&lt;/a&gt;&gt; wrote:\n\n\n\n\n    &lt;/pre&gt;\n    &lt;blockquote type=&quot;cite&quot;&gt;\n      &lt;pre wrap=&quot;&quot;&gt;\n    The integration problem is real, but the server boundary does not\n    change the problem very much. Does the client care if the\n    resource it is accessing is on hateoas.com &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;http://hateoas.com&quot;&gt;&lt;http://hateoas.com&gt;&lt;/a&gt;\n    or ulser.com &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;http://ulser.com&quot;&gt;&lt;http://ulser.com&gt;&lt;/a&gt; as long it knows the semantics of\n    the link, the methods to use, security requirements, media types\n    and so on?\n      &lt;/pre&gt;\n    &lt;/blockquote&gt;\n    &lt;pre wrap=&quot;&quot;&gt;    At least transparently accessing resources outside of server\n    boundary under different domains requires /slightly/ more\n    complicated authentication/authorization scheme, that just a\n    single server, unless all resources are considered unprotected. \n\n    Best regards,\n    Nina\n\n\n     \n\n\n    &lt;/pre&gt;\n  &lt;/blockquote&gt;\n  &lt;pre wrap=&quot;&quot;&gt;&lt;!----&gt;\n\n\n\n\n\n\n------------------------------------\n\nYahoo! Groups Links\n\n&lt;*&gt; To visit your group on the web, go to:\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://groups.yahoo.com/group/rest-discuss/&quot;&gt;http://groups.yahoo.com/group/rest-discuss/&lt;/a&gt;\n\n&lt;*&gt; Your email settings:\n    Individual Email | Traditional\n\n&lt;*&gt; To change settings online go to:\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://groups.yahoo.com/group/rest-discuss/join&quot;&gt;http://groups.yahoo.com/group/rest-discuss/join&lt;/a&gt;\n    (Yahoo! ID required)\n\n&lt;*&gt; To change settings via email:\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;mailto:rest-discuss-digest@yahoogroups.com&quot;&gt;mailto:rest-discuss-digest@yahoogroups.com&lt;/a&gt; \n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;mailto:rest-discuss-fullfeatured@yahoogroups.com&quot;&gt;mailto:rest-discuss-fullfeatured@yahoogroups.com&lt;/a&gt;\n\n&lt;*&gt; To unsubscribe from this group, send an email to:\n    &lt;a class=&quot;moz-txt-link-abbreviated&quot; href=&quot;mailto:rest-discuss-unsubscribe@yahoogroups.com&quot;&gt;rest-discuss-unsubscribe@yahoogroups.com&lt;/a&gt;\n\n&lt;*&gt; Your use of Yahoo! Groups is subject to:\n    &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://docs.yahoo.com/info/terms/&quot;&gt;http://docs.yahoo.com/info/terms/&lt;/a&gt;\n  &lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------000100010206020106000908--\r\n\n"}}