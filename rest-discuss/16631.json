{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"4Qr-7qM7gCdG7NOI7fgRuhdq4-bnqWdoTnBQjF7GXt_1Mwl3JTxpcfMVp9NVoIvSW8sAkd7bQ57I8FolPZWXtjFuZvAma9BTlR7-n84CA93036ifrXA_-k4s","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: how REST is explained","postDate":"1284940378","msgId":16631,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGk3NjdvcSttbHIyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDIwMTAwOTE5MTU0OTAwLmI3NTA4NjNkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":16630,"nextInTopic":16632,"prevInTime":16630,"nextInTime":16632,"topicId":16621,"numMessagesInTopic":10,"msgSnippet":"Totally agree, Erick. It depends on what do you want to teach, and the level. Actually, we go through all the constrains to see why it is there, what is the","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48847 invoked from network); 19 Sep 2010 23:53:00 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m12.grp.re1.yahoo.com with QMQP; 19 Sep 2010 23:53:00 -0000\r\nX-Received: from unknown (HELO n4-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.100)\n  by mta2.grp.re1.yahoo.com with SMTP; 19 Sep 2010 23:52:59 -0000\r\nX-Received: from [67.195.134.239] by n4.bullet.mail.sp2.yahoo.com with NNFMP; 19 Sep 2010 23:52:59 -0000\r\nX-Received: from [69.147.65.172] by t4.bullet.mail.sp2.yahoo.com with NNFMP; 19 Sep 2010 23:52:59 -0000\r\nX-Received: from [98.137.34.35] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 19 Sep 2010 23:52:59 -0000\r\nDate: Sun, 19 Sep 2010 23:52:58 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;i767oq+mlr2@...&gt;\r\nIn-Reply-To: &lt;20100919154900.b750863d.eric@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: how REST is explained\r\nX-Yahoo-Group-Post: member; u=124198377; y=bBF2nE5dra8nGje-SdsunpVSzDq3E-kWQmxMnxT6HVtKdMSS\r\nX-Yahoo-Profile: willmarpo\r\n\r\nTotally agree, Erick.\nIt depends on what do you want to teach, and the leve=\r\nl.\nActually, we go through all the constrains to see why it is there, what =\r\nis the benefit, and what is the trade-off.\n\nWilliam Martinez.\n\n--- In rest-=\r\ndiscuss@yahoogroups.com, &quot;Eric J. Bowman&quot; &lt;eric@...&gt; wrote:\n&gt;\n&gt; &quot;William Ma=\r\nrtinez Pomares&quot; wrote:\n&gt; &gt;\n&gt; &gt; I work on academia too. But I teach Software=\r\n Architecture\n&gt; &gt; fundamentals.\n&gt; &gt; \n&gt; &gt; In other words, I use REST as an a=\r\nnalytical example. I try not to\n&gt; &gt; teach it as a set of rules and constrai=\r\nnts.\n&gt; &gt; \n&gt; \n&gt; This is a reasonable decision for your context, no arguments=\r\n from me,\n&gt; in fact it&#39;s the same approach taken by the &quot;Software Architect=\r\nure:\n&gt; Foundations, Theory and Practice&quot; textbook.\n&gt; \n&gt; But, I don&#39;t see ho=\r\nw it&#39;s possible to enlighten anyone as to how to\n&gt; implement a REST system =\r\nfor the Web, except by teaching the constraints\n&gt; -- which is pragmatism, n=\r\not dogma.\n&gt; \n&gt; I use REST as a guideline to inform design decisions -- one =\r\nof the\n&gt; unwritten benefits of the style is simply having such a guideline,=\r\n and\n&gt; I think that&#39;s worth teaching.  The rest of this post is by way of\n&gt;=\r\n example, to illustrate my point...\n&gt; \n&gt; ----------------------------------=\r\n\n&gt; \n&gt; I&#39;ve posted a demo of my efforts to design an integrated wiki/weblog/=\r\n\n&gt; forum system.  The design choice that leads me to REST, is the choice\n&gt; =\r\nto go with a document-oriented distributed hypermedia solution.\n&gt; \n&gt; REST&#39;s=\r\n uniform interface constrains me to choose processing models\n&gt; which best f=\r\nit my needs from those which are well-known (or define a\n&gt; new one, and sta=\r\nrt down the road to standardizing it).  I decided that a\n&gt; hierarchical col=\r\nlection of Atom Feed and Entry documents fits best.\n&gt; \n&gt; This means my smal=\r\nlest unit of data is the Atom Entry.  But, a mainstay\n&gt; of my user interfac=\r\ne will be the expansion of a displayed summary into\n&gt; the display of the en=\r\ntire post.  This is a user goal, it doesn&#39;t matter\n&gt; if the request is sync=\r\nhronous or asynchronous, the request is for an\n&gt; Atom Entry document.\n&gt; \n&gt; =\r\nIs that the most-efficient solution?  No.  It would be more efficient\n&gt; to =\r\ndefine a subresource, like so:\n&gt; \n&gt; /11.atom?xptr=3D(//content)\n&gt; \n&gt; But, w=\r\nhat media type do I use for that response?  It&#39;s just a snippet\n&gt; of HTML, =\r\nnot an HTML document, so text/html and application/xhtml+xml\n&gt; are out, and=\r\n it obviously isn&#39;t Atom any more.  Leaving me with\n&gt; application/xml... wh=\r\nich doesn&#39;t define any of the desired semantics of\n&gt; the payload.\n&gt; \n&gt; When=\r\n that content is contained within an Atom Entry, it has well-known\n&gt; semant=\r\nics like, this is the content of an entry with(out) a summary,\n&gt; which link=\r\ns in to the rest of the system using standard link relations,\n&gt; has various=\r\n metadata like author, and &lt;div&gt; content defers to the XHTML\n&gt; processing m=\r\nodel.\n&gt; \n&gt; This context is lost when the standalone content is assigned a U=\r\nRI,\n&gt; making that message fail the self-descriptive messaging and hypertext=\r\n\n&gt; constraints (in the case of my example).  More efficient, sure, but also=\r\n\n&gt; less visible -- &quot;The trade-off, though, is that a uniform interface\n&gt; de=\r\ngrades efficiency, since information is transferred in a standardized\n&gt; for=\r\nm rather than one which is specific to an application&#39;s needs.&quot;\n&gt; \n&gt; This c=\r\nhoice doesn&#39;t have any impact on user-perceived performance.  When\n&gt; the us=\r\ner goal is to expand a summary to reveal the full content, what\n&gt; matters t=\r\no user-perceived performance is the latency until the request\n&gt; begins to r=\r\nender, not the latency until the request finishes rendering.\n&gt; Shaving a fe=\r\nw bytes off that transfer size should make no more\n&gt; difference to user-per=\r\nceived performance than the natural variation in\n&gt; content size from one en=\r\ntry to the next (i.e. none).\n&gt; \n&gt; Letting the uniform interface constraints=\r\n inform my design decisions,\n&gt; means I have to weigh the benefits of servin=\r\ng standalone content against\n&gt; the cost of standardizing such a solution.  =\r\nIn practice, though, it\n&gt; doesn&#39;t save enough bandwidth to outweigh the cos=\r\nt of the added\n&gt; complexity, let alone the effort involved in standardizati=\r\non.\n&gt; \n&gt; So whatever tiny benefits may be derived from going outside the bo=\r\nunds\n&gt; of the uniform interface, aren&#39;t worth the tradeoff, and don&#39;t justi=\r\nfy\n&gt; pursuing standardization of some sort of &#39;subatomic&#39; media type.  Thus=\r\n,\n&gt; I&#39;ve chosen to remain within the uniform interface.\n&gt; \n&gt; This is exactl=\r\ny the sort of real-world design decision REST is meant to\n&gt; pragmatically i=\r\nnform, by allowing it to be analyzed against an idealized\n&gt; model.  It&#39;s up=\r\n to the developer to determine the benefits and\n&gt; consequences of developin=\r\ng within the uniform interface constraint.\n&gt; \n&gt; I&#39;ve also defined the follo=\r\nwing service for my system:\n&gt; \n&gt; /11.atom?xptr=3D(//@thr:count)\n&gt; \n&gt; The re=\r\nsponse is an integer, so application/json is a best-fit choice.\n&gt; But, ther=\r\ne is no context and no link relations, so even though it may be\n&gt; self-desc=\r\nriptive, it fails the hypertext constraint.\n&gt; \n&gt; However, my purpose for do=\r\ning this is to allow greater cache retention\n&gt; where the representation inc=\r\nludes post count, without impacting the user\n&gt; experience -- no such benefi=\r\nts exist for the standalone content example.\n&gt; \n&gt; So the failure to apply t=\r\nhe uniform interface constraint here, yields a\n&gt; benefit to my system, but =\r\nthe whole thing is too insignificant to\n&gt; warrant a standardization effort =\r\n-- leading to my decision not to care\n&gt; that this aspect of my system lies =\r\noutside the uniform interface.\n&gt; \n&gt; Yet I still find it beneficial to under=\r\nstand that I have this REST\n&gt; mismatch in my system, even if I don&#39;t care. =\r\n Just like it&#39;s beneficial\n&gt; to understand how all HTTP messaging fails to =\r\nbe self-descriptive, even\n&gt; though we don&#39;t care (because there&#39;s nothing f=\r\nor it, as yet).\n&gt; \n&gt; My point is, there is pragmatic value in teaching REST=\r\n by explaining\n&gt; how to apply its constraints in practice.  Not if, like yo=\r\nu say, the\n&gt; goal is to use REST as an example of an architectural style fo=\r\nr the\n&gt; purpose of teaching software architecture -- although it would help=\r\n to\n&gt; point out that REST is useful as a development guideline rather than\n=\r\n&gt; just as a label (unlike, say, &#39;client-server&#39;) -- but definitely, if the\n=\r\n&gt; goal is the implementation of a REST system on the Web.\n&gt; \n&gt; -Eric\n&gt;\n\n\n\n"}}