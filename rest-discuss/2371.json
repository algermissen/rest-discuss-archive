{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"yH3SxD-x87AOM2MtY9iiPri5Oo2YyePmgRm_JTOcOkFwpE24PoDtzs6JtVUleeHYYXL_0ymwArcPhsgXlA4lhCXkAqa5YrJYtEbsQbs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Resources vs. Representations (was Re: Other view of DELETE?)","postDate":"1031247612","msgId":2371,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjUwMWMyNTUwMyQ0YTFhNWRlMCQ2NTAwYThjMEBzZWFpcnRobGFwdG9wPg==","referencesHeader":"PGFsMGdzYitvdjAwQGVHcm91cHMuY29tPiA8MDA3YjAxYzI1MzU3JDFlYTdmOGEwJDJhMDExNGFjQE5JVEVPLkNPTT4gPDIwMDIwOTAzMTcyMC4yNzY3OS5taWxlc0BtaWxlc3NhYmluLmNvbT4gPDAwNDUwMWMyNTQyYSQzNDZmM2M2MCQ2NTAwYThjMEBzZWFpcnRobGFwdG9wPiA8T0U1MzZTc3VvdDBPVUlITmtqZzAwMDEwYTk0QGhvdG1haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":2379,"prevInTime":2370,"nextInTime":2372,"topicId":2371,"numMessagesInTopic":9,"msgSnippet":"... From: S. Mike Dierken  ... complex ... But this doesn t jive with my understanding of REST.  You can never retrieve a resource.","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 5 Sep 2002 17:39:43 -0000\r\nReceived: (qmail 34294 invoked from network); 5 Sep 2002 17:39:43 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m6.grp.scd.yahoo.com with QMQP; 5 Sep 2002 17:39:43 -0000\r\nReceived: from unknown (HELO mail.bbglobex.com) (208.251.163.4)\n  by mta2.grp.scd.yahoo.com with SMTP; 5 Sep 2002 17:39:42 -0000\r\nReceived: from seairthlaptop [68.10.252.24] by mail.bbglobex.com with ESMTP\n  (SMTPD32-7.12) id A5C5DC4F00D8; Thu, 05 Sep 2002 13:35:01 -0400\r\nMessage-ID: &lt;006501c25503$4a1a5de0$6500a8c0@seairthlaptop&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nReferences: &lt;al0gsb+ov00@...&gt; &lt;007b01c25357$1ea7f8a0$2a0114ac@...&gt; &lt;200209031720.27679.miles@...&gt; &lt;004501c2542a$346f3c60$6500a8c0@seairthlaptop&gt; &lt;OE536Ssuot0OUIHNkjg00010a94@...&gt;\r\nSubject: Resources vs. Representations (was Re: Other view of DELETE?)\r\nDate: Thu, 5 Sep 2002 13:40:12 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n\n----- Original Message -----\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\n&gt;\n&gt; I&#39;m pretty sure the URI identifies the resource, not a representation.\n&gt; Representations are transient things - unless you explicitly make the\n&gt; representation a resource in its own right - but that gets fractally\ncomplex\n&gt; (representations of a representation of a resource, etc.).\n\nBut this doesn&#39;t jive with my understanding of REST.  You can never retrieve\na resource.  You can only ever retrieve a representation of a resource.  If\nyou want, you could call the representation a &quot;virtual&quot; resource, meaning\nthat it can logically be treated as a resource, but does not necessarily\nhave a direct correlation with an actual resource on the server.\n\nI don&#39;t see where anything gets complex here.  All that one can ever\nretrieve is a representation of a resource.  If you have two (or two\nhundred) URIs, each returns a representation of a resource.  If you take my\nPurchaseOrder URI1 and URI2 examples, URI2 is not a representation of a\nrepresentation of the resource pointed to by URI1.  URI2 returns a\nrepresentation of a resource.  URI1 returns a representation of a resource.\nSure, they may both be pointing to the same resource, but that doesn&#39;t mean\nthat URI2 is subordinate to URI1.  If that *were* the case, it would mean to\nme that URI1 is now synonymous for the resource itself.  This would mean\nthat a request to get the resource must return the resource itself, which we\nknow is not possible.  Therefore, URI1 can only even be synonymous with a\nrepresentation of a resource, which also means that URI2 cannot be\nsubordinate to URI1.\n\n&gt; This gets into what I call &#39;overlapping resources&#39; (a possibly poor term,\n&gt; but it works for me..) I think of URI2 as a &#39;synthetic resource&#39; or a\n&gt; &#39;derived resource&#39;. Operations like DELETE might not actually do\nanything -\n&gt; either indicated by &#39;not implemented&#39; or some other response - or they\n&gt; might, its up to the application to decide.\n\nSo, based on what you are saying, if I were to add a querystring to the URI\nsuch that the returned data was potentially different, each valid variation\nof the querystring points to separate resource?  Using the\nURI-&gt;Representation POV, the querystring would returns different\nrepresentations of the same resource.\n\nI wonder if &quot;view&quot; would be a better word than &quot;representation&quot;?  Using the\n&quot;view&quot; imagery (warning: some may consider this very unRESTful):\n\n1)  A &quot;view&quot; is the data returned by a server.  Each view has its own URI.\nMore than one URI may return identical views, but they are not the same\nview.  In other words, there is a one-to-one relationship between views and\nURIs.\n\n2) A view is not the same as a resource.  A view may be identical to a\nresource, but it is not the resource itself.\n\n3) PUT only creates association between a URI and a view with the added\nrestriction that a subsequent GET of the URI returns the same view.  The PUT\nmay cause the server to create a new resource or update an existing\nresource.  The actual resource may be different than the view created by the\nPUT as long as the view does not change.\n\n4) GET only returns views of a resource.  Idempotency of a GET means that\nthe &quot;intent&quot; of the GET is to return a view only.  A GET may be considered\nidempotent even though resources are altered on the server as long as the\nGET wasn&#39;t being used to cause the alteration.\n\n5) POST sends data to a URI.  It is not sending the data to a view (views\nare what&#39;s returned).  In this case, URIs are &quot;black boxes&quot;, into which\nanything may be sent (though not necessarily accepted).  The function of a\nPOST is not strictly defined, except that it does imply an intent to alter a\nresource (and is therefore not idempotent).  A view of the target resource\nmay be returned by the server.  The contents of the view are entirely\nsubject to the purpose of the POST.\n\n6) DELETE only destroys or invalidates a view (and therefore the URI that\nidentified the view).  DELETE does not necessarily cause the deletion of the\nunderlying resource.  For instance, a single resource may have multiple\nviews (accessible by multiple URIs).  The server may only delete the\nresource after all of the views have been DELETEd.  DELETEing just one view\nwould not, in this case, cause the underlying resource to be deleted (or\neven necessarily altered).\n\n\nWhat this means is a clear picture of where the coupling is: between the\nview and the resource.  This means that the server has full control over how\ntightly or loosely coupled the resource is to the view that the clients\nreceive.  What I mean by coupling here is the internal relationship of the\nexpressed view to the actual resource.  Loose coupling means that while the\nview is related to the resource, it is not a direct corollary for the\nresource.  Tight coupling, on the other hand, means that the view is more of\n(or a direct) corollary for it&#39;s related resource.  To illustrate, the two\nservers in the following example both provide identical views and therefore\nidentical functionality from the client&#39;s POV, while internally handling the\nresources differently.\n\nServer 1 (tight coupling):\n\nPUT &lt;data&gt; /path/file.html : creates a file and puts &lt;data&gt; inside that\nfile.\nGET /path/file.html : opens the file and returns &lt;data&gt; inside that file.\nDELETE /path/file.html : deletes the file.\nPOST &lt;data&gt; /path/file.html : invalid request.\n\nServer 2 (loose coupling):\n\nPUT &lt;data&gt; /path/file.html : takes data, chops it up in several fragments\n(for internal reasons) and places those fragments into a table on an SQL\nserver.  At the same time, it also processes and adds keywords to an index\ntable.  Further, it creates additional internal resources to provide links\nbetween &lt;data&gt; and the user that uploaded.\nGET /path/file.html : queries the SQL server and reconstructs &lt;data&gt; from\nits individual fragments.\nDELETE /path/file.html : only deletes access to the resource via this URI.\nHowever, since no other URIs are pointing to the same resource in this\nparticular case, the server proceeds to delete the records in the SQL server\nand all related resources.\nPOST &lt;data&gt; /path/file.html : invalid request.\n\n\n\nI&#39;m going to stop here for now.  I have had to step away from this message\nabout 15 times so now I have somewhat lost my train of thought.  What I have\nabove appears to be coherent to me, so I will start with this.  Now for the\nfun part... in what way(s) is this view wrong?  :)\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}