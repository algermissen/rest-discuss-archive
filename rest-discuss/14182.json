{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"kElV_Sq9Owc5DkqJBsu3XvK2GMChr0k_lIpt54Met-BLWbhyJh8_cB7-3aR4pxzw1BdbRmn7wvnm3x64UrWSaw0J2kXwYnwTqg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful M2M Systems and Resource Typing","postDate":"1261015934","msgId":14182,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM5MTVjNjlkMDkxMjE2MTgxMnU2MDlmZmEyOWczMWYzYmFjYzg4YjY0YjNmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PEYyOEE5N0JBLTlGMjYtNDkzNC05QTZELUQ3QTY2RTg1QjkyREBtYWMuY29tPg==","referencesHeader":"PENCNEU1MkVDLTQ2RTktNDhFNC05QkY2LTVFNUVFMjg1NDM4OEBtYWMuY29tPgkgPGI1NDhkZjY1MDkxMjE2MDc1OHE0NjQzMDgwOHY4ODk4MzY5NDI4ZjVkOTE1QG1haWwuZ21haWwuY29tPgkgPDM0MkYwNEE0LUFCNzYtNEY5Qy04Mjg1LTU2QUFBMDE2Q0I0MEBtYWMuY29tPgkgPGI1NDhkZjY1MDkxMjE2MDkxMWoxYWEwN2Q2ZHFhOGQxMjU5ZmE3Mjc0ODcwQG1haWwuZ21haWwuY29tPgkgPDM5MTVjNjlkMDkxMjE2MTAzOXA3NWRkMzcxZGtmY2QyYmViODBjY2E4ZTk4QG1haWwuZ21haWwuY29tPgkgPDkxNkFENTIxLTVGRjEtNEU5Mi1BMUJELTVDNTJCREE5RDIzMUBtYWMuY29tPgkgPGRlNzBiMzlkMDkxMjE2MTQ0OHQ0NmMxODJhY2piMTU3MjI3NjU2NDg2OWM2QG1haWwuZ21haWwuY29tPgkgPDc1ODRGNzdDLUVFNjYtNDdBQS1CRUZFLUZGRkIzQjQwOEQyOUBtYWMuY29tPgkgPDM5MTVjNjlkMDkxMjE2MTYyOHA2NzliMWJmYm05NTU3NzdjMzRkY2U1NzdlQG1haWwuZ21haWwuY29tPgkgPEYyOEE5N0JBLTlGMjYtNDkzNC05QTZELUQ3QTY2RTg1QjkyREBtYWMuY29tPg=="},"prevInTopic":14180,"nextInTopic":14187,"prevInTime":14181,"nextInTime":14183,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"On Wed, Dec 16, 2009 at 4:54 PM, Jan Algermissen ... No, the server CAN evolve. It can say atom feeds are the suck, don t use them, now we have Neutrino","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76032 invoked from network); 17 Dec 2009 02:12:15 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m12.grp.re1.yahoo.com with QMQP; 17 Dec 2009 02:12:15 -0000\r\nX-Received: from unknown (HELO mail-vw0-f198.google.com) (209.85.212.198)\n  by mta2.grp.sp2.yahoo.com with SMTP; 17 Dec 2009 02:12:15 -0000\r\nX-Received: by vws36 with SMTP id 36so460203vws.28\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 16 Dec 2009 18:12:14 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.126.165 with SMTP id c37mr381321vcs.16.1261015934372; Wed, \n\t16 Dec 2009 18:12:14 -0800 (PST)\r\nIn-Reply-To: &lt;F28A97BA-9F26-4934-9A6D-D7A66E85B92D@...&gt;\r\nReferences: &lt;CB4E52EC-46E9-48E4-9BF6-5E5EE2854388@...&gt;\n\t &lt;b548df650912160758q46430808v8898369428f5d915@...&gt;\n\t &lt;342F04A4-AB76-4F9C-8285-56AAA016CB40@...&gt;\n\t &lt;b548df650912160911j1aa07d6dqa8d1259fa7274870@...&gt;\n\t &lt;3915c69d0912161039p75dd371dkfcd2beb80cca8e98@...&gt;\n\t &lt;916AD521-5FF1-4E92-A1BD-5C52BDA9D231@...&gt;\n\t &lt;de70b39d0912161448t46c182acjb1572276564869c6@...&gt;\n\t &lt;7584F77C-EE66-47AA-BEFE-FFFB3B408D29@...&gt;\n\t &lt;3915c69d0912161628p679b1bfbm955777c34dce577e@...&gt;\n\t &lt;F28A97BA-9F26-4934-9A6D-D7A66E85B92D@...&gt;\r\nDate: Wed, 16 Dec 2009 18:12:14 -0800\r\nMessage-ID: &lt;3915c69d0912161812u609ffa29g31f3bacc88b64b3f@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Noah Campbell &lt;noahcampbell@...&gt;, mike amundsen &lt;mamund@...&gt;, \n\tREST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=401876259; y=LfzJaaSUPSnyZmFDWZLKigIc0l4TV3Jofj_CILdjNxF-fEFtRrgqBQ\r\nX-Yahoo-Profile: gaminginparis\r\n\r\nOn Wed, Dec 16, 2009 at 4:54 PM, Jan Algermissen\n&lt;algermissen1971@...&gt; wrote:\n&gt; When I do a GET on a collection (a resource that *is a*! collection) I\n&gt; expect an Atom feed back (there might be other representations available,\n&gt; but I&#39;ll at least be able to get an Atom feed). This expectation enables me\n&gt; to code the client and by coding that into the client, the server is coupled\n&gt; in a way that REST actually is aiming to avoid.\n&gt;\n&gt; In that sense it is a &#39;fantasy&#39; that the server is free to evolve\n&gt; independently and it is also a &#39;fantasy&#39; that the client does not\n&gt; differentiate between kind of resources.\n\nNo, the server CAN evolve. It can say &quot;atom feeds are the suck, don&#39;t\nuse them, now we have Neutrino feeds!&quot;.\n\nIf it&#39;s a kind server it will retain Atom compatibility if the client\nrequests it. If you have atom+xml in your Accept, you get Atom. If you\nhave */* or something else, you might get neutrino+xml instead.\n\nIf it&#39;s a mean, nasty server, then it shuts you out cold with a 406\nand a list of &quot;support these or there&#39;s the door&quot; media types.\n\nPart of the process is empowering things like Con neg so that the\nservers and clients can agree on content. Yea, the client can not\n&quot;evolve&quot; to supporting the new content until it&#39;s been coded. But that\ndoesn&#39;t mean that servers can not be good citizens and be backward,\neven if deprecated, compatible.\n\nIt puts a burden on server developers, but that&#39;s just the truth of\nit. At least con neg is an OPTION that CAN be supported.\n\nAnd why can&#39;t the client discern resources? if the client sees the\nAtom feed, it goes one way. If it sees the Neutrino feed, another way.\nProperly developed, the client can jump back and forth across both\ntypes. Heck, say you had load balanced servers, and one supported atom\nand the other neutrino -- you hadn&#39;t updated the second on yet. The\nclient can transparently jump back and forth between the formats as it\nbounces across the servers, because the client IS leveraging the media\ntypes, and because the server is providing the links to move forward,\nrather than the client trying to shove Atom links down the throat of a\nNeutrino server.\n\nSo, in that sense, I think evolution can be handled pretty elegantly.\n\n&gt; In the human Web the same problem exists but the capabilities of the human\n&gt; brain to react to change (and follow previously unexpected links) does put\n&gt; the server in the position to evolve much more independently. I am sure that\n&gt; Amazon could mess around with the whole shop and the way ordering works and\n&gt; the user would still be able to buy a book. This is the huge benefit of REST\n&gt; - it just does not apply that easily to the M2M case.\n\nBut think about that.\n\nThat &quot;mess around&quot;, from the users pov, be cosmetic. They rearranged\nthe screen, the &quot;add to cart&quot; button in on the left now, and &quot;checkout\nbutton&quot; below it, or whatever.\n\nThe links those buttons go to are immaterial. Nobody cares.\n\nNow the content sent to those links, those matter. If amazon renamed\n&quot;itemNo&quot; to &quot;productUUID&quot; then, you know, shame on them. Your M2M\nclient is toast. But the semantics conveyed by the link rels\n&quot;add-to-cart&quot;, &quot;checkout&quot;, those haven&#39;t changed (unless they renamed\nthose as well -- more sillyness). They could add &quot;add-to-wish-list&quot;,\nand your client may not know what that is, but it probably doesn&#39;t are\neither.\n\n&gt; And I think this needs to be said clearly and honestly and it needs to be\n&gt; theoretically captured.\n\nIn an M2M scenario, ALL APIs are &quot;tightly coupled&quot;. That&#39;s just the\nfact of it. APIs are contacts. Change the contract, bad things happen.\nDesign APIs with growth and flexibility in mind, and you can have a\nmore forgiving client/server experience.\n\nBy using media types and HATEOAS, the clients retain a bit of\ndiscoverability. It&#39;s not so much discoverability, as it is state\nawareness. It can &quot;know&quot; where it is at any point of the process, and\nit &quot;knows&quot; where to go from there. If it follows the links given with\nthe types specified, the client will be told where to go next.\n\nThis is key. The client isn&#39;t &quot;waiting to do the next thing&quot;. It&#39;s not\ngot a &quot;list of things to do&quot;, and going through them one by one.\nRather it has a list of guideposts that it&#39;s told to follow, and the\nactual PATH it takes isn&#39;t known to the client until it reaches a goal\npost.\n\nNow you can code all of that in to the client, it &quot;knows&quot; where to go,\nit build URLs, and when things change, the client breaks. Because the\nclient is a stupid client and while it functioned, it did it all the\nwrong way.\n\nSo, that&#39;s, to me, where some of the robustness of the whole thing\ncomes from, even in a M2M world.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\n"}}