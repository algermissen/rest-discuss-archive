{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"z67cJvvn1nQzm_wtPhKi8gDMMfPUHtvLUwANQOCzIueeZmUltQmSvfOnYoMLwsNSzL0qSsCcwe1M5DciAWSvaVcffCMl4zFRAITY5zJD7g","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Link relations [was: A media type for case files, dossiers and documents]","postDate":"1291263948","msgId":17005,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMjAxMjEyNTQ4LjNlMGRiOTU3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDEyOTEyNTA0NDUuMjgyNy4xMi5jYW1lbEBiYWNrcGFjaz4=","referencesHeader":"PDIwMTAxMTMwMjM0NDM2LmZhZmE4OGFjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDU5MzU5MC41NzAxLnFtQHdlYjU1OTA3Lm1haWwucmUzLnlhaG9vLmNvbT4JPDIwMTAxMjAxMTcyNzA4LjZjN2M5MjA1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyOTEyNTA0NDUuMjgyNy4xMi5jYW1lbEBiYWNrcGFjaz4="},"prevInTopic":17004,"nextInTopic":17006,"prevInTime":17004,"nextInTime":17006,"topicId":16947,"numMessagesInTopic":88,"msgSnippet":"... It s a valid example, and a good question. ... Plus, the good ones are all in the IANA standards tree.  Which means there s a peer-reviewed trust","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 27084 invoked from network); 2 Dec 2010 04:25:44 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 2 Dec 2010 04:25:44 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 2 Dec 2010 04:25:44 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id B01EE509D9;\n\tWed,  1 Dec 2010 23:25:43 -0500 (EST)\r\nDate: Wed, 1 Dec 2010 21:25:48 -0700\r\nTo: juergen.brendel@...\r\nCc: Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20101201212548.3e0db957.eric@...&gt;\r\nIn-Reply-To: &lt;1291250445.2827.12.camel@backpack&gt;\r\nReferences: &lt;20101130234436.fafa88ac.eric@...&gt;\n\t&lt;593590.5701.qm@...&gt;\n\t&lt;20101201172708.6c7c9205.eric@...&gt;\n\t&lt;1291250445.2827.12.camel@backpack&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Link relations [was: A media type for case\n files, dossiers and documents]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJuergen Brendel wrote:\n&gt; \n&gt; I&#39;m not bashing on Atom here, that&#39;s just an example.\n&gt; \n\nIt&#39;s a valid example, and a good question.\n\n&gt; \n&gt; So, I think I understand the point you are making about the Internet\n&gt; scale. And it&#39;s true, there are lots of types out there, which can do\n&gt; a lot of things for you. Some of them may use XML as underlying\n&gt; encoding, others something else, and all of them will probably have\n&gt; some sort of library available for the language of your choice to\n&gt; help you parse and deal with that sort of content type.\n&gt; \n\nPlus, the good ones are all in the IANA standards tree.  Which means\nthere&#39;s a peer-reviewed trust relationship, at the IP layer, as to the\nsecurity considerations of the media type (RFC 4288, 4.6).  Which is\none reason why these types are ubiquitous.  For media types in the IANA\nvendor tree, whomever it was that minted the media type must be trusted\nto have done a thorough analysis, without the peer review provided by\nthe standardization process.  I&#39;d prefer if that whomever wasn&#39;t hiding\nanything to protect a corporate image, or outright ignorant about the\ntopic -- which I can&#39;t be sure of outside of the standards tree.\n\nIt&#39;s this trust relationship around security considerations (plus the\nshared understanding of a processing model), at the IP layer, which\nenables intermediaries to participate in the communication.  It is my\nbelief that the anarchic scalability of the Web would not have\noccurred, and is unlikely to continue, without this essential network-\nbased shared understanding between participants, where participant can\nliterally mean anything unless you&#39;re tunneling.\n\nIt&#39;s also my belief that only if everybody starts tunneling, will\neverybody understand the benefits of caching -- so go, Web Sockets and\nSPDY!  Prove me wrong.  The only thing I can promise, is that if I turn\nout to be right, I *will* tell you I told you so...\n\n&gt;\n&gt; But that&#39;s exactly where I can also see an issue: When I choose a\n&gt; number of (different) media types, I now also need to equip my\n&gt; clients with all the necessary libraries to read and parse this data,\n&gt; and my server with the right libs to create this sort of content.\n&gt; \n\nImplementation details aren&#39;t relevant to REST, because the performance\nbottleneck in REST systems is the network.  The solution is caching.\nThe tradeoff may be heavier applications on the client, intermediary\nand server components.  If you&#39;re caching dynamically-generated content\nwith a cache connector on the origin server component, then the latency\nof generating that content only applies to the first hit after that\ncontent is created or updated.  Same with the CPU cycles and RAM.\n\nIf you&#39;re creating a hypertext system, the idea is that you don&#39;t need\nto worry about equipping clients with libraries, because you&#39;re\ntargeting browsers as clients by using media types browsers already\nsupport.  So stripping down the required libraries is a false economy;\nthe results may not begin to scale as well, in which case what have you\ngained by optimizing your server code?  Maintainability, perhaps, but\nat the expense of scaling?  Doesn&#39;t compute.\n\n&gt;\n&gt; Doesn&#39;t that add undue weight and dependencies to your software? Sure,\n&gt; it depends on your use case, but generally, I like to keep the number\n&gt; of dependencies for my software small. For example, I once dealt with\n&gt; an Atom library, which was just heavy and slow. We finally went to\n&gt; plain JSON, the software was much smaller and things started to fly.\n&gt; If I just need a simple collection of stuff, is it really wise to go\n&gt; all out and use Atom if something (admittedly self-made) smaller\n&gt; would suffice as well?\n&gt;\n\nIt depends on the goals of your system.  If those goals are congruous\nwith the benefits REST provides, then the tradeoff is worth it.  I&#39;m not\ntrying to reduce the bytes sent over the wire, I&#39;m trying to reduce how\noften the bytes are sent over the wire -- while exposing my API in a way\nintermediaries can accelerate.  JSON lacks semantics to express how a\nURI is used, whereas HTML and Atom have explicit semantics for that,\nwhich are standardized -- intermediaries know which links to prefetch,\nor get a head-start on the DNS lookups, vs. identifiers that don&#39;t need\nto be looked up or fetched.  None of these benefits accrue to media\ntypes that aren&#39;t in the standards tree (with very few exceptions).\n\n-Eric\n\n"}}