{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"pbklZQJjfpvTjkhRQmtz9JveVw5iFZf1Jj7IRCSFnIACRbtyVcuKJN5Ntx8aa4oCerX32qbi83F3mP6OufJLAP1FAWqIJ2OgKlGyREdv","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Re: HATEOAS: JSON-based examples?","postDate":"1239851341","msgId":12433,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMDkwNDE1MjAwOXk3MjIxODZkMHc4ZmViODkyMzg2ZTc2ZmI2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGY4YjM5YWNlMDkwNDE1MTczOHExODE2NzdlN3hlYTA2OGFjYWExNzkzZjUyQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIwMDkwNDEyMDIzNi4wNzU1NS5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ5RTRBN0M1LjMwNDA0MDVAcmVkaGF0LmNvbT4gPDIwMDkwNDE0MTgwMy40MDgxNC5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ1QzU0QzE0LTgzQjgtNERBMC1BRENCLUEwQUVFNzYyNjYwOEBzdWJidS5vcmc+CSA8NTVjNjBlMzcwOTA0MTQxMDMwdDE1OTdhYjFmdWIyMzllNzVhMjc0MjE4ZDJAbWFpbC5nbWFpbC5jb20+CSA8NDlFNENDMUIuNDA2MDAwM0ByZWRoYXQuY29tPiA8NDlFNEUwNTAuODAwMDMwMEBteWthbmpvLmNvLnVrPgkgPDQ5RTY3MTg2LjQwNzA3MDFAcmVkaGF0LmNvbT4JIDxmOGIzOWFjZTA5MDQxNTE3MzhxMTgxNjc3ZTd4ZWEwNjhhY2FhMTc5M2Y1MkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":12432,"nextInTopic":12434,"prevInTime":12432,"nextInTime":12434,"topicId":12399,"numMessagesInTopic":66,"msgSnippet":"... The above describes a great approach to versioning an API.  Clients must ignore parts of representations they don t understand.  New application semantics","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6587 invoked from network); 16 Apr 2009 03:09:06 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.re1.yahoo.com with QMQP; 16 Apr 2009 03:09:06 -0000\r\nX-Received: from unknown (HELO qw-out-2122.google.com) (74.125.92.26)\n  by mta3.grp.sp2.yahoo.com with SMTP; 16 Apr 2009 03:09:06 -0000\r\nX-Received: by qw-out-2122.google.com with SMTP id 8so170326qwh.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 15 Apr 2009 20:09:01 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.85.17 with SMTP id m17mr163453qcl.43.1239851341587; Wed, \n\t15 Apr 2009 20:09:01 -0700 (PDT)\r\nIn-Reply-To: &lt;f8b39ace0904151738q181677e7xea068acaa1793f52@...&gt;\r\nReferences: &lt;200904120236.07555.michael@...&gt;\n\t &lt;49E4A7C5.3040405@...&gt; &lt;200904141803.40814.michael@...&gt;\n\t &lt;45C54C14-83B8-4DA0-ADCB-A0AEE7626608@...&gt;\n\t &lt;55c60e370904141030t1597ab1fub239e75a274218d2@...&gt;\n\t &lt;49E4CC1B.4060003@...&gt; &lt;49E4E050.8000300@...&gt;\n\t &lt;49E67186.4070701@...&gt;\n\t &lt;f8b39ace0904151738q181677e7xea068acaa1793f52@...&gt;\r\nDate: Wed, 15 Apr 2009 21:09:01 -0600\r\nMessage-ID: &lt;28e257110904152009y722186d0w8feb892386e76fb6@...&gt;\r\nTo: craigmcc@...\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] Re: HATEOAS: JSON-based examples?\r\nX-Yahoo-Group-Post: member; u=304236879; y=vb1x1gpA4LuKWeUDCeC9ykmp16--5fql7PvtHBgTSlS2NqtuuhDQGuvBxQ\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Wed, Apr 15, 2009 at 6:38 PM, Craig McClanahan &lt;craigmcc@...&gt; wrote:\n&gt;\n&gt; I&#39;ve had a little bit of experience in this area (we have not made\n&gt; dramatic changes, but we have modified some things), and so far the\n&gt; following set of rules has avoided the need to do any kind of\n&gt; versioning in my representations so far, but also avoided breaking old\n&gt; clients:\n&gt;\n&gt; * Clients MUST ignore fields in the representation that they don&#39;t\n&gt; understand\n&gt; (i.e. that are not defined in whatever version of the spec the client is\n&gt; programmed to expect).\n&gt;\n&gt; * Clients SHOULD indicate the version of the API specification they are\n&gt; programmed to expect. Because this has to happen on GET requests\n&gt; too, there&#39;s no representation to include it in, so we use a custom HTTP\n&gt; header -- sort of analogous to a User-Agent header that webapps\n&gt; can use to customize their responses. An alternative might be to use\n&gt; a request parameter, or bake the version number into the service URI\n&gt; or something like that.\n&gt;\n&gt; * Servers MUST respect the client&#39;s indication of version preference\n&gt; if it matters. Given the rules above, it&#39;s OK to include additional fields\n&gt; added in some later version -- the client should just ignore them --\n&gt; but it&#39;s not OK to remove a field that was required to be present\n&gt; in the version of the spec that the client specifies.\n&gt;\n&gt; * Servers MAY assume that a client not describing their version preference\n&gt; should get the latest and greatest version.\n&gt;\n&gt; * If the representation sent by a server includes links (per our HATEOAS\n&gt; threads), the server MAY send different URIs depending on the version,\n&gt; or MAY handle multiple versions at the same URI ... whatever it wants.\n\nThe above describes a great approach to versioning an API.  Clients\nmust ignore parts of representations they don&#39;t understand.  New\napplication semantics are added to existing representations in\nbackwards compatible ways.  Clients have a way to tell the server they\nrequire it support a particular set of semantics.\n\nHowever, using a non-standard mechanism, like a custom HTTP head, to\nspecify the version is deeply suboptimal.  The same behavior can be\nmore easily and transparently provided by using media types .  The\nrequired set of semantics (backwards compatible version) can specified\nas a media type parameter (e.g.\n`application/vnd.myapp+json;level=42`).  And should you ever run into\nthe a situation where a non-compatible change is absolutely required\nyou can switch to a different media type.\n\n\n--\nPeter\nhttp://barelyenough.org\n\n"}}