{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"JvvUOEauWiC5E-Rq7sHcz-PNlHenhsMwicz_mt6ftUeUNLzElT6zkcnd4GCecp4BBSBLnXsHW-8q-wGcndlItV6WHy7L3PYse4Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Thinking about REST and HTTP","postDate":"1277117926","msgId":15736,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluOXNqU01HQzh4aThRMWlnc1BfeS1fMzBZWFUyaS1nSlFUZnJRTEBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGh2MGlxMitxNjFsQGVHcm91cHMuY29tPg==","referencesHeader":"PEFBTkxrVGlseVZ3NGQ3dTlmY2oyWXB4bmR6Ql9SVmY0WnRsNlZxYjN5X3VHSEBtYWlsLmdtYWlsLmNvbT4JPGh2MGlxMitxNjFsQGVHcm91cHMuY29tPg=="},"prevInTopic":15658,"nextInTopic":15738,"prevInTime":15735,"nextInTime":15737,"topicId":15365,"numMessagesInTopic":52,"msgSnippet":"OK, I digested it now :-) (back from vacation) I agree pretty much with everything you said. So far my focus since launching this thread has bend on","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26851 invoked from network); 21 Jun 2010 10:58:47 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m13.grp.re1.yahoo.com with QMQP; 21 Jun 2010 10:58:47 -0000\r\nX-Received: from unknown (HELO mail-qy0-f176.google.com) (209.85.216.176)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Jun 2010 10:58:46 -0000\r\nX-Received: by qyk9 with SMTP id 9so1247578qyk.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 21 Jun 2010 03:58:46 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.109.8 with SMTP id h8mr2933569qap.60.1277117926297; Mon, \n\t21 Jun 2010 03:58:46 -0700 (PDT)\r\nX-Received: by 10.229.236.74 with HTTP; Mon, 21 Jun 2010 03:58:46 -0700 (PDT)\r\nIn-Reply-To: &lt;hv0iq2+q61l@...&gt;\r\nReferences: &lt;AANLkTilyVw4d7u9fcj2YpxndzB_RVf4Ztl6Vqb3y_uGH@...&gt;\n\t&lt;hv0iq2+q61l@...&gt;\r\nDate: Mon, 21 Jun 2010 03:58:46 -0700\r\nMessage-ID: &lt;AANLkTin9sjSMGC8xi8Q1igsP_y-_30YXU2i-gJQTfrQL@...&gt;\r\nTo: William Martinez Pomares &lt;wmartinez@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: Thinking about REST and HTTP\r\nX-Yahoo-Group-Post: member; u=210009313; y=m5W2emrWxGr30DUNDCR9_4kfbK_O7Etgzq6FnGLxuL57dPqmX1U\r\nX-Yahoo-Profile: glenn_block\r\n\r\nOK, I digested it now :-) (back from vacation)\n\nI agree pretty much with ev=\r\nerything you said. So far my focus since\nlaunching this thread has bend on =\r\nunderstanding what the\ncharacteristics of a RESTful system are. In doing th=\r\nat, I have also\nbeen looking at existing implementations, Ie OpenRasta, Res=\r\ntSharp,\nRestfulie and Jersey amongst them.\n\nRather than looking at it from =\r\nthe &#39;how does this fit in WCF&#39;s\nexisting frame?&#39; angle, I have been taking =\r\nthe approach of what would\nthe right API look like? what does the developer=\r\n need?, etc.\n\nMy question is in that context and asking those who have far =\r\nmore\nexperience than & do, what works and what doesn&#39;t from an api /\nauthor=\r\ning experience perspective.\n\nRegards\nOn Saturday, June 12, 2010, William Ma=\r\nrtinez Pomares\n&lt;wmartinez@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n=\r\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;       Hello Glen.\n&gt; As I just posted a comment with=\r\n some hint about how to evaluate a toolchest/framework, I may want to open =\r\nanother lead here.\n&gt;\n&gt; One way is to actually look at how other frameworks =\r\n(mostly java I hear) deal with the idea. The other way is to actually work =\r\non understanding the REST style, why the interaction is how it is, and what=\r\n happens in the network.\n&gt;\n&gt; Why do I say so? Because the successful API de=\r\nfinition depends on that understanding and in the goal you are trying achie=\r\nve. Bear with me please:\n&gt;\n&gt; 1. REST explains the constrains you impose to =\r\nyour architecture to allow better performance, reliability, visibility, sca=\r\nlability for large grain hypermedia transfer applications in a networked so=\r\nlutions.\n&gt;\n&gt; 2. A RESTFul service is an idea of using the guidelines of RES=\r\nT to expose services on web. Some ways work better and attach to more const=\r\nrains that others, but in general the idea is to have one initial URI, star=\r\nting point to a set of states, which transitions are governed by hyperlinks=\r\n, and whose actions are focused in manipulating resources using a standard =\r\ninterface (HTTP methods).\n&gt;\n&gt; 3. The constrains include self-description of=\r\n messages, cache support, client/server separation of concerns and possible=\r\n code on demand support. And, of course, use of Hypermedia to define and co=\r\nntrol application state\n&gt;\n&gt; 4. In WCF, one important thing is the generic i=\r\nnterface. That is, the service Endpoint (Address, binding and contract), do=\r\nwn to the binding elements. Behind all that, is a description of interactio=\r\nn, and API definition. How to match that to the REST service? Interesting q=\r\nuestion.\n&gt;\n&gt; 5. Let&#39;s start on the server side.\n&gt;  a. One first thing is th=\r\ne possibility to define a serviceEndpoint as unique, meaning just one URI t=\r\no start it all.\n&gt;  b. The other need is of course the ability to produce di=\r\nfferent kinds of media types to serve representations. If the idea is to av=\r\noid a bare-bones implementation for developers, we may want to abstract the=\r\n content negotiation so it is somehow automatic. The client will request wh=\r\nat can be served, or request some particular representation. On server side=\r\n we only need to define the representation source and transformation. (say,=\r\n Mr. WCF, this record in database you can publish it as JSON, XML or URLEnc=\r\noded, here is the mapping, take care of it when requested, thanks).\n&gt;  c. W=\r\nhat about defining the resources and possible state engine? Even setting an=\r\n URI generation template. All that to add the generated URIs into the repre=\r\nsentations. Of course, for each resource type, define the HTTP operations. =\r\nSee next point.\n&gt;  d. We only support HTTP Methods. So, no [OperationContra=\r\nct] String sayHello(String name); things. sayHellow is an internal method y=\r\nou can use internally, but that RPC stuff may be heresy in REST world (nor =\r\nfor some, I know). But it may be [OperationContract(HTTPMethod=3DPOST)] Str=\r\ning sayHello(String body); where the String argument is the body sent in th=\r\ne post and the returned String the response. All the other POST metadata an=\r\nd control may be defined with other artifacts. If you want to excel, you ca=\r\nn design that to use any protocol, not just HTTP.\n&gt;  e. All that means, all=\r\n the HTTP plumbing is hidden, plus an easier way to provide automatic repre=\r\nsentations control, metadata control and response.\n&gt;\n&gt; 6. What about the cl=\r\nient? Almost same thing. In the ideal world clients are given just one URI,=\r\n and build dynamically their path from there on. In real world, they usuall=\r\ny know what are the steps and the dynamic URIs (hypermedia usage) is to ide=\r\nntify specific instances of already known expected types. Any Ideas to impr=\r\nove that? A nice client that runs by itself and starts following links and =\r\nthings, just stopping for asking me about data or decide on options/path he=\r\nre and there, would be nice. Not surprisingly that describes a browser.\n&gt;\n&gt;=\r\n 7. But all I have said is too nailed to the grown. On the high side, the i=\r\ndea is to allow client and server independent evolution since no coupling i=\r\ns done at interface level. That calls for an automatic interaction thing th=\r\nat allows me to focus on resource and representation definition, plus the s=\r\ntate map, and on client side to worry about a goal definition. Caching, gat=\r\neways, all that is invisible.\n&gt;\n&gt; 8. There is something else, last thing. T=\r\nhe layered constrain in REST. The idea is that you can have interim nodes, =\r\nthat may even parse and process partially the payload of the message. In th=\r\nis case, client only sees the next layer, and that one may see the next one=\r\n.\n&gt;\n&gt; Again, I suggest you to start taking a look at the real implementatio=\r\nns that are done bare-bones, understanding the idea of the style, and see i=\r\nf that fits into WCF generic definition or not.\n&gt;\n&gt; Cheers.\n&gt;\n&gt; William Mar=\r\ntinez Pomares\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, Glenn Block &lt;glenn.b=\r\nlock@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Hi guys\n&gt;&gt;\n&gt;&gt; I&#39;ve been trolling for a few weeks :-)=\r\n I work on the WCF team at Microsoft.\n&gt;&gt; We&#39;re currently in the very early =\r\nstages of planning for new apis for\n&gt;&gt; supporting pure REST and HTTP style =\r\ndevelopment. Our goal is to create\n&gt;&gt; something simple, lightweight and tru=\r\ne to form. We are looking provide a\n&gt;&gt; natural API both for the service aut=\r\nhor and for the consumer. This not an\n&gt;&gt; attempt to simply retrofit onto a =\r\nSOAP based model.\n&gt;&gt;\n&gt;&gt; It would be great to hear thou\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;     \n&gt;\n&gt;=\r\n\n&gt;\n&gt;\n&gt;\n\n"}}