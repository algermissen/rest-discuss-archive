{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"v2_EFmKKjHS9sX1eVJt02JaFcgeAe3mvqqs1rZJ25FSvK7inlVDfCb6do74yeSF32OgIVJA7yQSMk5m502u4anBxeu0n-oPzK4rSo5r2Ow","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Good examples of REST implementations","postDate":"1261267771","msgId":14246,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjE5MTcwOTMxLjE0NWZmZTgxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDBDOTAwQzc3LTIzQTAtNDZGQS04NEZGLTc0QjAwNUE1RDgxMkBzdWJidS5vcmc+","referencesHeader":"PGhlbXBjaCszbGRuQGVHcm91cHMuY29tPgk8OUI4OTYwM0QtQTI4Mi00ODUwLUFDRkUtRjEyRjNBOTEwMzhEQGJibGZpc2gubmV0Pgk8ZWM4NjEzYTgwOTEyMTEwMjA5cjcwNGMwNjNhazM4MGNmYjQxYzVjZTY3MjNAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIxNTAxNTcwMS4xOWJjM2IxMy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxCMDNBRkFDMS1ENUFFLTQ0REEtODc1Qy0yQjk5RDA1NkQwRDBAc3ViYnUub3JnPgk8MjAwOTEyMTkxMzA4NDEuZTcxZGQ3NzkuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MEM5MDBDNzctMjNBMC00NkZBLTg0RkYtNzRCMDA1QTVEODEyQHN1YmJ1Lm9yZz4="},"prevInTopic":14244,"nextInTopic":14247,"prevInTime":14245,"nextInTime":14247,"topicId":14060,"numMessagesInTopic":20,"msgSnippet":"... Well, there s a difference between a relaxed constraint, and one that s missing entirely.  I agree that the application decides its desired properties.","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8503 invoked from network); 20 Dec 2009 00:09:35 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m12.grp.re1.yahoo.com with QMQP; 20 Dec 2009 00:09:35 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 20 Dec 2009 00:09:35 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 55B32509DA;\n\tSat, 19 Dec 2009 19:09:34 -0500 (EST)\r\nDate: Sat, 19 Dec 2009 17:09:31 -0700\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Ian Davis &lt;lists@...&gt;, swschilke &lt;steffen.schilke@...&gt;,\n rest-discuss@yahoogroups.com, Story Henry &lt;henry.story@...&gt;\r\nMessage-Id: &lt;20091219170931.145ffe81.eric@...&gt;\r\nIn-Reply-To: &lt;0C900C77-23A0-46FA-84FF-74B005A5D812@...&gt;\r\nReferences: &lt;hempch+3ldn@...&gt;\n\t&lt;9B89603D-A282-4850-ACFE-F12F3A91038D@...&gt;\n\t&lt;ec8613a80912110209r704c063ak380cfb41c5ce6723@...&gt;\n\t&lt;20091215015701.19bc3b13.eric@...&gt;\n\t&lt;B03AFAC1-D5AE-44DA-875C-2B99D056D0D0@...&gt;\n\t&lt;20091219130841.e71dd779.eric@...&gt;\n\t&lt;0C900C77-23A0-46FA-84FF-74B005A5D812@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Good examples of REST implementations\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nSubbu Allamaraju wrote:\n&gt;\n&gt; An application, and not the architectural style, decides what\n&gt; properties it needs. This is a matter of tradeoffs. I have not\n&gt; understood REST as an all-or-nothing style. It is a set of\n&gt; constraints, and conscious relaxation is okay.\n&gt; \n\nWell, there&#39;s a difference between a relaxed constraint, and one that&#39;s\nmissing entirely.  I agree that the application decides its desired\nproperties.  But, I&#39;ve been bitten by the software architecture bug, so\nI believe that application development ought to be guided by a formal\narchitectural definition which encompasses those properties.\n\nAs Roy describes in his thesis, start with an empty tree diagram, add\nand remove constraints as needed until the constraints elicit the\ndesired properties for the system, then name the derived architectural\nstyle (if you&#39;ve applied all of Roy&#39;s constraints, feel free to call it\nREST).  Beginning with the null style...\n\n&quot;\n[A] designer starts with the system needs as a whole, without\nconstraints, and then incrementally identifies and applies constraints\nto elements of the system in order to differentiate the design space\nand allow the forces that influence system behavior to flow naturally,\nin harmony with the system.\n&quot;\n\nI don&#39;t care if a system isn&#39;t REST, so much as I care that it underwent\na well-disciplined development phase.  Undisciplined development starts\nby declaring the REST style, and then not following it, resulting in an\nunknown quantity rather than a system that may be benchmarked against\nits stated goals.  I&#39;m rather enchanted by that new textbook, &quot;Software\nArchitecture:  Foundations, Theory and Practice&quot; and its progression\nthrough Modeling, Visualization, Analysis, Implementation, Deployment\nand Mobility.\n\nNone of the fantastic, practical ideas in the book apply to a project\nwhich has no notion of being guided by software architecture, leaping\nright into code development without considering that Lunar Lander may\nbe designed using either the Pipe-and-Filter or the C2 architectural\nstyles.  Building against a defined style allows better quality control\nover the entire lifecycle of a project.  If that style is REST, you\nwon&#39;t have worries when it comes to scaling, but that can&#39;t be\nguaranteed without the hypertext constraint.  The resulting style must\nbe analyzed and shown not to be deficient in that regard, or that the\nbenefits of ignoring the hypertext constraint outweigh the deficiency.\n\nMy usual $2.02...\n\n-Eric\n\n"}}