{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223905696,"authorName":"Ian","from":"&quot;Ian&quot; &lt;iansrobinson@...&gt;","profile":"is_robinson","replyTo":"SENDER","senderId":"Cr9J3_uFau8SmoaPbbtWPTzvRDTaZo9u2jvPH2p81scg_xCZAGa8OjCLznStKQVY6SzCUrnvN9eiXH7vRxUbsD6umENB","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Application state","postDate":"1254752069","msgId":13675,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhY3YwNSs1cmEwQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhhYTliaCtobzFqQGVHcm91cHMuY29tPg=="},"prevInTopic":13672,"nextInTopic":13677,"prevInTime":13674,"nextInTime":13676,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Hi William ... Good point - thanks. A distributed application is as distributed as it needs be; it s not restricted to the interactions between a client and a","rawEmail":"Return-Path: &lt;iansrobinson@...&gt;\r\nX-Sender: iansrobinson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20028 invoked from network); 5 Oct 2009 14:14:57 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 5 Oct 2009 14:14:57 -0000\r\nX-Received: from unknown (HELO n41b.bullet.mail.sp1.yahoo.com) (66.163.168.155)\n  by mta1.grp.sp2.yahoo.com with SMTP; 5 Oct 2009 14:14:57 -0000\r\nX-Received: from [69.147.65.150] by n41.bullet.mail.sp1.yahoo.com with NNFMP; 05 Oct 2009 14:14:30 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 05 Oct 2009 14:14:30 -0000\r\nDate: Mon, 05 Oct 2009 14:14:29 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hacv05+5ra0@...&gt;\r\nIn-Reply-To: &lt;haa9bh+ho1j@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ian&quot; &lt;iansrobinson@...&gt;\r\nSubject: Re: Application state\r\nX-Yahoo-Group-Post: member; u=223905696; y=s12pVmkqYORXbrTtfGS6c5y-YjycVL06_kqDP2v1QJzOe0aIiCA\r\nX-Yahoo-Profile: is_robinson\r\n\r\nHi William\n\n&gt; \n&gt; One important thing we need not to forget is that, being i=\r\nn a distributed context, the &quot;server&quot; as the performer of some services aga=\r\ninst resources, may change between each client interaction.\n&gt; THAT is why t=\r\nhe app state is held in the client, and no server has to keep any. \n&gt; \n\nGoo=\r\nd point - thanks. A distributed application is as distributed as it needs b=\r\ne; it&#39;s not restricted to the interactions between a client and a single se=\r\nrver.\n\n&gt; \n&gt; Even more: the resources state graph may indicate restrictions =\r\nbetween states, actions and trigger events. The idea of the client inferrin=\r\ng the next step given the actual state of the resource, can be also ported =\r\nto the server! That is, if a client requests an illegal action for the curr=\r\nent state (adding a line to a closed order), the server may check first the=\r\n resource state and send an error back to client. But it is clear that the =\r\nserver is not keeping the client state internally, it is just responding to=\r\n the request in that particular moment, thus allowing us to scale nicely.\n&gt;=\r\n \n\nThis reminds me of a great piece in Duncan Cragg&#39;s REST Dialogues (http:=\r\n//duncan-cragg.org/blog/post/ws-are-you-sure-rest-dialogues/), where he say=\r\ns: &quot;You [the client] start by declaring your intention that some state be t=\r\nrue, which puts the system in tension - a tension that can only be resolved=\r\n by the application of business logic constraints over each player in paral=\r\nlel, until the whole system settles or resolves into a new, consistent stat=\r\ne.&quot; That is, the server, on receipt of a request, checks the resource state=\r\n and any constraints that only it may be aware of, before bringing the syst=\r\nem in line with the request&#39;s declaration of future state.\n\nian\n\n\n\n"}}