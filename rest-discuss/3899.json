{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"L_t01YOBMQ8GVglxiri0coBlLwtk2lo8wJ3g0Wd6_1yfIsFEiPCQsKAwHLtKc0xw_3bmh2GA3eTAC1N186x7V4T4Rg7hWz-SNRg-p24","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] ReST vs MoST Messaging","postDate":"1060750480","msgId":3899,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMDAwMWMzNjE5NyRhNDNiNDZkMCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDM1NDIxMTUyOS4xMDYwNzE5NDYyQGxvY2FsaG9zdD4="},"prevInTopic":3898,"nextInTopic":3900,"prevInTime":3898,"nextInTime":3900,"topicId":3880,"numMessagesInTopic":23,"msgSnippet":"From: Alex Jacobson  ... a ... But if a client only knows a given resource is a container , it won t know that a given method is not allowed","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 82395 invoked from network); 13 Aug 2003 12:37:38 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m17.grp.scd.yahoo.com with QMQP; 13 Aug 2003 12:37:38 -0000\r\nReceived: from unknown (HELO lakemtao03.cox.net) (68.1.17.242)\n  by mta2.grp.scd.yahoo.com with SMTP; 13 Aug 2003 12:37:36 -0000\r\nReceived: from SeairthA31 ([68.96.198.4]) by lakemtao03.cox.net\n          (InterMail vM.5.01.04.05 201-253-122-122-105-20011231) with SMTP\n          id &lt;20030813123736.MGCP23518.lakemtao03.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Wed, 13 Aug 2003 08:37:36 -0400\r\nMessage-ID: &lt;000001c36197$a43b46d0$a000a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;354211529.1060719462@localhost&gt;\r\nSubject: Re: [rest-discuss] ReST vs MoST Messaging\r\nDate: Wed, 13 Aug 2003 00:54:40 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nFrom: &quot;Alex Jacobson&quot; &lt;alex@...&gt;\n\n&gt; MoST is just about taking HTTP seriously.  If the resource does not allow\na\n&gt; particular method, give an error.\n\nBut if a client only knows a given resource is a &quot;container&quot;, it won&#39;t know\nthat a given method is not allowed until the method is actually tried.  I\ncertainly wouldn&#39;t want to design a client with expectations that are not\nnecessarily true.\n\n&gt; Re RNA (&lt;http://www.seairth.com/web/rna/&gt;):\n&gt;\n&gt; &gt; The interface is split into two URI types:  Identity and Inbox.\n&gt;\n&gt; Bad premise.  HTTP URIs designate RESOURCES that have *content-types*.\n&gt; URIs themselves do not have types.  This bad URL-type premise means you\n&gt; start by defining a special content-type for POST rather than a\n&gt; content-type for an inbox.  Having no inbox type means having no standard\n&gt; way to check your mail.  To me, this seems like a major failure in a\n&gt; &quot;notification&quot; protocol.  Your spec then becomes documentation of various\n&gt; interaction protocols that I find lengthy, arbitrary, and hard to follow\n&gt; (sorry).\n\nFair enough.  I know the spec needs some work.  From the comments you make\nbelow, I feel you do not understand what RNA is (which I am willing to admit\nmay entirely have to do with the documentation).  A few thing I would like\nto point out before continuing is that RNA is *not* a mail protocol and\n&quot;Inbox&quot; does *not* mean a mail inbox.  Viewing RNA in this manner would\ndefinitely cause the misunderstanding you seem to have.\n\nHaving said that, let&#39;s try another approach.  It may even be that this is\nthe sort of modeling you are talking about.  I&#39;m making this up as I go, so\nbear with me...\n\n1. resources: Identity, Inbox\n2. content-types: application/x.rna.agreement+xml,\napplication/x.rna.notification+xml\n3. map(Identity): POST application/x.rna.agreement+xml =&gt;\n200(application/x.rna.agreement+xml), GET =&gt; (200(*/*), 302())\n4. map(Inbox): POST application/x.rna.notification+xml =&gt; 202()\n\n\nHere is how the above rules are read:\n\n1. Two resources are involved: an Identity resource and an Inbox resource.\nIn order to write a client, the programmer will have to understand what\nthese resources are.  This understanding comes from documentation that\ndescribes them.\n\n2. Two content-types are involved: application/x.rna.agreement+xml and\napplication/x.rna.notification+xml [1].  As with the resources, the\nprogrammer must understand the content-types to write the client.  Here,\nhowever, it would at least be possible to plug in existing code (written by\nanother programmer).\n\n3. An Identity resource allows two methods: POST and GET.  For POST, the\nrequest entity&#39;s content-type must be application/x.rna.agreement+xml.  The\npossible response [2] to a POST is 200, where the only returnable\ncontent-type is also application/x.rna.agreement+xml.  For GET, the possible\nresponses can be 200, where the returnable content-type can be anything, and\n302, where no response entity is given.\n\n4. An Inbox resource allows one method: POST.  For POST, the request\nentity&#39;s content-type must be application/x.rna.notification+xml.  The\npossible response to a POST is 202, where no response entity is given.\n\nNotes:\n[1] Currently, the RNA spec only has one content-type:\napplication/x.rna+xml.  However, the above process has made me realize that\nI really had two different content types that need to be defined.  On the\nother hand, I suppose I could also just use application/xml with XML\nNamespaces to differentiate the two document types internally.  That doesn&#39;t\nreally seem like a good approach, but I have to admit I am a bit gun shy\nwhen it comes to XMLNS.\n[2] 4xx and 5xx responses are alway implicitly supported, but can be\nexplicitly named above if special criteria need to be given (such as a\nspecific returnable content-type).\n\n\nNow, as I said above, it is still up to the programmer to understand what\nthe resources and the content-types mean.  The above rules don&#39;t come\nanywhere close to explaining what RNA actually is.  But I have to admit that\nthey do make it much easier to see how the pieces fit together, even if you\ndon&#39;t understand what the pieces are.  I think I will try to draft a rework\nof the RNA documentation in this manner and see if it makes things easier to\nunderstand and implement.  However, for the moment, I will give a quick\nsynopsis of each of those bits:\n\nIdentity Resource\nThis resource represents a user&#39;s (person, program, machine, etc.) identity.\nCurrently, it has only two functions:  negotiate RNA Agreement documents\n(content-type of application/x.rna.agreement+xml), and to return something\n(such as an html document) what queried. Upon successful negotiation of an\nRNA Agreement document, the client has either been given access to an Inbox\nResource, or has been given validation of the current RNA Agreement.\n\nInbox Resource\nThis resource represents an endpoint that collects notifications.\nCurrently, it has only one function: accept RNA Notification documents\n(content-type of application/x.rna.notification+xml).\n\napplication/x.rna.agreement+xml content-type\nThis content-type is an xml-based document used for negotiating access to\nInbox Resources.  This content-type has a set of rules governing what is\nvalid based on whether the document is being sent (as request entity) or\nreturned (as response entity).\n\napplication/x.rna.notification+xml content-type\nThis content-type is an xml-based document used to notify someone (or\nsomething) about another resource.  This content-type has a limited set of\nrules and format that must be conformed to.\n\n\nAdditional Note(s):  The RNA specification does not define any method for a\nuser to retrieve notifications sent to him.  It also does not define any\nother configuration, validation, etc criteria.  RNA only defines the\n&quot;public&quot; server interface.  It is expected that servers will act as clients\nwhen using RNA between each other (as opposed to having a dedicated client\nprogram).  I am currently working on a set of &quot;private&quot; server interfaces\nthat allows a user to view received notifications, define agreement\nnegotiation criteria, send notifications, etc.  This specification is being\nkept separate from RNA on purpose.  This allows other to define their own\nspecifications for dealing with the back-end stuff as is appropriate for\ntheir own uses of RNA.  For instance, one such set of interfaces may be used\nto implement a mail-like usage of RNA.  Another such set of interfaces may\nbe used to implement a peer file-sharing network.  Yet another may be used\nto implement an &quot;instant messaging&quot; function.\n\n\nSo, there we are... does this clear anything up about RNA?  Also, does any\nof the above stuff look like what you want to do with MoST?  Well, until\ntomorrow...\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}