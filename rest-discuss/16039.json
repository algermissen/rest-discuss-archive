{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"lR-T3eqfDsoxrdIk3gWrFaWwAWusXtdnQY2dgEUqm0VukQawfwXH3Lq-_jDCli2HG0l_uzJ6hm29AxVn16n2Djxlh0PkdDCEKREDIez79TJb1HkVTGcq-GL9","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Google proposes RPC style APIs over REST","postDate":"1280504623","msgId":16039,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9MGtaZGpaNStEY2Q9c1p4dFRBQTBxQTY4NHE5RzByZDE1Q1VHZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGluWk9xXy1VYjluRjhlaUQwcnZVblJuMnhtWkItVmYzWXdndzNudUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGkydGhyditzZjd0QGVHcm91cHMuY29tPiA8MjAxMDA3MzAwMzA5NDIuZmQyZTE0MjAuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiAJPDIwMTAwNzMwMDQyNjMyLjhjOTkwZThhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDIwMTAwNzMwMDU0MjExLmZmMGY3ZTlhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gCTwyMDEwMDczMDA3NDUwNC5iMmQxZjljMy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+IDxBQU5Ma1RpblpPcV8tVWI5bkY4ZWlEMHJ2VW5SbjJ4bVpCLVZmM1l3Z3czbnVAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":16038,"nextInTopic":16040,"prevInTime":16038,"nextInTime":16040,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"Let me argue a little here. First, let me say I m not defending Google (as if they needed...) nor their solution, just having some loud thoughts about it. ","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21260 invoked from network); 30 Jul 2010 15:45:04 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m11.grp.re1.yahoo.com with QMQP; 30 Jul 2010 15:45:04 -0000\r\nX-Received: from unknown (HELO mail-pw0-f42.google.com) (209.85.160.42)\n  by mta1.grp.sp2.yahoo.com with SMTP; 30 Jul 2010 15:45:04 -0000\r\nX-Received: by pwi1 with SMTP id 1so654168pwi.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 30 Jul 2010 08:44:04 -0700 (PDT)\r\nX-Received: by 10.142.204.21 with SMTP id b21mr1811207wfg.330.1280504643315; \n\tFri, 30 Jul 2010 08:44:03 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.71.7 with HTTP; Fri, 30 Jul 2010 08:43:43 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTinZOq_-Ub9nF8eiD0rvUnRn2xmZB-Vf3Ywgw3nu@...&gt;\r\nReferences: &lt;i2thrv+sf7t@...&gt; &lt;20100730030942.fd2e1420.eric@...&gt; \n\t&lt;20100730042632.8c990e8a.eric@...&gt; &lt;20100730054211.ff0f7e9a.eric@...&gt; \n\t&lt;20100730074504.b2d1f9c3.eric@...&gt; &lt;AANLkTinZOq_-Ub9nF8eiD0rvUnRn2xmZB-Vf3Ywgw3nu@...&gt;\r\nDate: Fri, 30 Jul 2010 16:43:43 +0100\r\nMessage-ID: &lt;AANLkTi=0kZdjZ5+Dcd=sZxtTAA0qA684q9G0rd15CUGg@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;, Suresh &lt;sureshkk@...&gt;, \n\trest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=279478415; y=LdynlC0vnl11WD2TxO09JLELxIIviQp6_qT91Kkuv3eDYg\r\nX-Yahoo-Profile: amsmota\r\n\r\nLet me argue a little here. First, let me say I&#39;m not &quot;defending&quot;\nGoogle (a=\r\ns if they needed...) nor their solution, just having some\nloud thoughts abo=\r\nut it.\n\nSo, I&#39;ll argue that having what they call &quot;Augment REST with Custom=\r\n Verbs&quot; like\n\nPOST /tasks/@me/{taskId}?method=3DmarkDone\n\nis not necessaril=\r\ny not-REST. Can or not be RESTfull. It depends.\n\nNow I&#39;m not going to quote=\r\n Roy here, there are people more qualified\nthan me to do it and I don&#39;t wan=\r\nt to take the risk of misquoting\nand/or quote out of context as it is often=\r\n the case. But it is my\nimpression that REST doesn&#39;t advocate a limited num=\r\nber of verbs, or\neven less, that REST is limited to GET, POST, PUT, DELETE,=\r\n or even\nless, that should be limited to CRUD verbs.\n\nAnd what I saw writte=\r\nn by Roy is that a REST based architecture should\nnot be dependent, or tied=\r\n to, any particular protocol. And what I also\nsee is most of the people dis=\r\ncussing REST in terms of HTTP.\n\nNow as I said some times, our pro-REST, or =\r\nthe wish-to-become-REST\ninfrastructure, was build since the beginning with =\r\nthe goal of\nsupporting multi-protocols. Thankfully, we started on that befo=\r\nre I\nwas in this list from a long time, otherwise I&#39;ll probably have\nconclu=\r\nded from this list that that was impossible, or not REST. But of\ncourse, th=\r\ne first problem was how to have a Uniform Interface spanning\nmultiple proto=\r\ncols. So after some consideration we decided to have\nGET, POST, PUT, DELETE=\r\n - not because we wanted to work only to HTTP\nbut because we knew that our =\r\nHTTP connector was going to be the most\nused (it&#39;s the one our fat clients =\r\nuse). And out of necessity we also\nadd another method, LISTEN. And so those=\r\n 5 verbs were our uniform\ninterface. We were not tunnelling HTTP over the o=\r\nther protocols as it\nmay appear, we were kind of tunnelling our &quot;personal&quot; =\r\nprotocol over\nall the protocols.\n\nSo, at this point, the use of\n\nPOST  /tas=\r\nks//123?verb=3DLISTEN\n\nat least as far as I can&#39;t see doesn&#39;t seems to me t=\r\no break REST.\n\nSo the same for that Google API, if they constraint the meth=\r\nods in\n\nPOST /tasks/@me/{taskId}?method=3DXXXXXX\n\nin a way they are limited=\r\n in number, they always mean the same, and\nthey are described in a way that=\r\n both the server and the client\nunderstand their meaning, I don&#39;t see that =\r\nas unRESTfull...\n\nAnd to try to reach the maximum number of audience as pos=\r\nsible is a\nlegit objective, there&#39;s no point in having a &quot;perfect&quot; solution=\r\n if no\none knows about it...\n\n\n\n\nMelhores cumprimentos / Beir beannacht / B=\r\nest regards\n_____________________________________________________________\nA=\r\nnt=F3nio Manuel dos Santos Mota\nContacts: http://card.ly/amsmota\n__________=\r\n___________________________________________________\nIf you&#39;re on a mobile p=\r\nhone you can add my contact\nby scanning the code on the card below\n\n\nPlease=\r\n click on the image to enlarge it\n_________________________________________=\r\n____________________\nDisclaimer: The opinions expressed herein are just my =\r\nopinions and\nthey are not necessary right.\n________________________________=\r\n_____________________________\n\n\nOn 30 July 2010 15:47, mike amundsen &lt;mamun=\r\nd@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt; veering the thread slightly off to another angl=\r\ne...\n&gt;\n&gt; there are lots of engineering disciplines present @ Google. one\n&gt; =\r\nengineering discipline that i suspect paid a role in the new\n&gt; &quot;Discovery-B=\r\nased API&quot; model is _social_ engineering.\n&gt;\n&gt; i think this is an example of =\r\na team @ Google offering their audience\n&gt; (developers in this case) what Go=\r\nogle thinks developers want; what\n&gt; Google needs to do to get developers to=\r\n adopt their platform.\n&gt;\n&gt; i, personally, have seen the same thing happen a=\r\nt Microsoft.\n&gt;\n&gt; these are smart people. they &quot;get&quot; REST. however, they sus=\r\npect their\n&gt; target audience does not.\n&gt;\n&gt; Also, it&#39;s been said on this lis=\r\nt (more than once) that one of the\n&gt; prime barriers to adopting the REST st=\r\nyle (or any new pattern, tech,\n&gt; etc.) is psycho-social. people don&#39;t like =\r\nchange, don&#39;t find the new\n&gt; thing appealing, don&#39;t want to lose something =\r\nin the change, etc. and\n&gt; to prevent these perceived &quot;negative consequences=\r\n&quot; from occurring,\n&gt; people will attempt to argue against the new thing usin=\r\ng\n&gt; pseudo-technical reasoning (basically unsupported assertions like &quot;it\n&gt;=\r\n won&#39;t scale&quot; or &quot;no one will like it&quot;, and so forth). often, this kind\n&gt; o=\r\nf arguing is effective in the social setting of the office since some\n&gt; in =\r\nthe conversation hold power over others (&quot;i can&#39;t convince my\n&gt; boss&quot;, etc.=\r\n).\n&gt;\n&gt; Finally, the REST style is not complicated (it&#39;s one of the few\n&gt; ne=\r\ntwork arch styles based in clear constraint-based terms), but it is\n&gt; hard =\r\nwork. hard work is not very appealing. in my experience the REST\n&gt; style is=\r\n most demanding on those building _clients_ not servers.\n&gt; Google is trying=\r\n to get people to build &quot;consuming&quot; applications; the\n&gt; hardest part, IMO. =\r\ni think Google has decided to not try to convince\n&gt; their audience they nee=\r\nd to adopt a state-machine style in order to\n&gt; consume the data Google is o=\r\nffering. instead, they decided to make\n&gt; consuming Google data &quot;easy&quot; and &quot;=\r\nfamiliar.&quot; hence the adoption of an\n&gt; RPC over HTTP pattern.\n&gt;\n&gt; I think Go=\r\nogle thought about this carefully and knows exactly what\n&gt; they are doing. =\r\nand they&#39;ll get lots of adoption, too.\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n=\r\n&gt; http://mamund.com/foaf.rdf#me\n&gt;\n&gt; On Fri, Jul 30, 2010 at 09:45, Eric J. =\r\nBowman &lt;eric@...&gt; wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt; I made this too hard. =A0Fo=\r\nrget the first GET. =A0The conditional PUT uses\n&gt; &gt;&gt; if-none-match the Etag=\r\n of /image.jpg?rot=3D90. =A0Makes the hypertext API\n&gt; &gt;&gt; even easier to wri=\r\nte.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; What if we don&#39;t want to transfer a representation of imag=\r\ne.jpg to the\n&gt; &gt; client, or back to the server? =A0No problem. =A0HEAD /ima=\r\nge.jpg?rot=3D90 to\n&gt; &gt; get the Etag (or GET), followed by a conditional POS=\r\nT to /image.jpg of a\n&gt; &gt; representation of the desired application state as=\r\n application/x-www-\n&gt; &gt; form-urlencoded, i.e. POST /image.jpg?rot=3D90 if-n=\r\none-match Etag.\n&gt; &gt;\n&gt; &gt; While this may technically solve the lost-update pr=\r\noblem, without\n&gt; &gt; actually transferring the image, how does the user (huma=\r\nn or machine)\n&gt; &gt; know the image hasn&#39;t already been rotated by 90 degrees?=\r\n =A0If what\n&gt; &gt; Google meant to call awkward wasn&#39;t the notion of the clien=\r\nt doing the\n&gt; &gt; rotation, but the notion that the image needs to be transfe=\r\nrred to the\n&gt; &gt; client at all, then I don&#39;t see any way around it -- withou=\r\nt viewing\n&gt; &gt; the image, how would a human or machine user know that it nee=\r\nds\n&gt; &gt; rotation, or by how many degrees?\n&gt; &gt;\n&gt; &gt; So my HEAD-conditional POS=\r\nT solution is only RESTful in situations\n&gt; &gt; where the user goal is to rota=\r\nte an image regardless of current\n&gt; &gt; orientation. =A0Whereas this is the o=\r\nnly use-case Google&#39;s RPC supports,\n&gt; &gt; without solving for lost-update, ma=\r\nking it brittle even where lost-\n&gt; &gt; update isn&#39;t a problem: =A0Google&#39;s wa=\r\ny, if the confirmation of the POST\n&gt; &gt; is lost and the operation repeated a=\r\ns a result, the rotation is 180\n&gt; &gt; degrees not 90. =A0My way, prevents thi=\r\ns by properly identifying\n&gt; &gt; resources (for starters) and using conditiona=\r\nl requests. =A0Not brittle.\n&gt; &gt;\n&gt; &gt; There is nothing unRESTful about POST /=\r\nimage.jpg?rot=3D90 being\n&gt; &gt; interpreted by the server to mean &quot;rotate imag=\r\ne.jpg 90 degrees&quot; unless\n&gt; &gt; such an operation isn&#39;t hypertext-driven, and =\r\nprovided the media type is\n&gt; &gt; application/x-www-form-urlencoded. =A0In whi=\r\nch case &quot;rot&quot; is not a &quot;verb&quot;,\n&gt; &gt; it is a noun identifying a stored proced=\r\nure (regardless of HTTP method).\n&gt; &gt;\n&gt; &gt; Google&#39;s POST, by way of compariso=\r\nn, is not a transfer of a\n&gt; &gt; representation of the desired resource state.=\r\n =A0It&#39;s RPC. =A0I couldn&#39;t\n&gt; &gt; make this argument if Google allowed GET on=\r\n the same URI -- this is the\n&gt; &gt; difference between identification of resou=\r\nrces (regardless of how sloppy\n&gt; &gt; the URIs) and custom verbs tunneled over=\r\n POST.\n&gt; &gt;\n&gt; &gt; -Eric\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ------------------------------------\n&gt; &gt;\n&gt;=\r\n &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; \n\n"}}