{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229827793,"authorName":"Steve Loughran","from":"&quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;","profile":"steve_loughran","replyTo":"SENDER","senderId":"rhbsOqQvLHzmbBZX7DDvIwJHAzfTPvoTqW18VuxcetQgHzNvIvqH2a4WQtq1z47v-aQkhpMbFht3hBcEGM8h0Xd2MPPnaS0Ez2jRCGfQXhGRSEp23P7NlRYJrCNdBaw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] enterprise adoption of REST and amazon services","postDate":"1198121869","msgId":10028,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlkYzc4ZDdiMDcxMjE5MTkzN3g1ZjkwMWJmZG0zMDE0YjgyNTgxZDAxMTdAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDUwMzdiNmU0MDcxMjE5MTcyNW4zODE5NWQ4MHA2ZWY1YTNkNmFiN2M0YzA5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDlkYzc4ZDdiMDcxMjE5MTMyN3QxZDEyYTIxOG44ODQ1MjBkNGJmMGJmN2E4QG1haWwuZ21haWwuY29tPgkgPDUwMzdiNmU0MDcxMjE5MTcyNW4zODE5NWQ4MHA2ZWY1YTNkNmFiN2M0YzA5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10026,"nextInTopic":10035,"prevInTime":10027,"nextInTime":10029,"topicId":10021,"numMessagesInTopic":7,"msgSnippet":"... I think that s a pretty bleak assessment. I have a different theory, which is that every language is used as the prototype for its successors. CORBA and","rawEmail":"Return-Path: &lt;steve.loughran.soapbuilders@...&gt;\r\nX-Sender: steve.loughran.soapbuilders@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 22861 invoked from network); 20 Dec 2007 03:37:50 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m48.grp.scd.yahoo.com with QMQP; 20 Dec 2007 03:37:50 -0000\r\nX-Received: from unknown (HELO an-out-0708.google.com) (209.85.132.246)\n  by mta17.grp.scd.yahoo.com with SMTP; 20 Dec 2007 03:37:50 -0000\r\nX-Received: by an-out-0708.google.com with SMTP id c35so820311anc.16\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 19 Dec 2007 19:37:50 -0800 (PST)\r\nX-Received: by 10.100.207.5 with SMTP id e5mr22023036ang.69.1198121870045;\n        Wed, 19 Dec 2007 19:37:50 -0800 (PST)\r\nX-Received: by 10.35.85.14 with HTTP; Wed, 19 Dec 2007 19:37:49 -0800 (PST)\r\nMessage-ID: &lt;9dc78d7b0712191937x5f901bfdm3014b82581d0117@...&gt;\r\nDate: Wed, 19 Dec 2007 19:37:49 -0800\r\nTo: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;5037b6e40712191725n38195d80p6ef5a3d6ab7c4c09@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;9dc78d7b0712191327t1d12a218n884520d4bf0bf7a8@...&gt;\n\t &lt;5037b6e40712191725n38195d80p6ef5a3d6ab7c4c09@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Steve Loughran&quot; &lt;steve.loughran.soapbuilders@...&gt;\r\nSubject: Re: [rest-discuss] enterprise adoption of REST and amazon services\r\nX-Yahoo-Group-Post: member; u=229827793; y=cAxNDgMnkRfQqNQMkgqq-O39ZgU8v-P9E6eCbIEk3D__FxC9oO-fjDU\r\nX-Yahoo-Profile: steve_loughran\r\n\r\nOn Dec 19, 2007 5:25 PM, Assaf Arkin &lt;assaf@...&gt; wrote:\n&gt;\n&gt; On 12/19/07, Steve Loughran &lt;steve.loughran.soapbuilders@...&gt; wrote:\n\n&gt; &gt;\n&gt; &gt; 2. WS-* is pretty deep  in the enterprise, especially as the glue\n&gt; &gt; between &quot;both&quot; platforms, Windows and Java. Hence Sun&#39;s investment in\n&gt; &gt; better WS-* interop. In in-house, single vendor systems, WS-* can be\n&gt; &gt; made to work over space -but not necessarily time. Again, with a\n&gt; &gt; decent deployment infrastructure when you can roll out code everywhere\n&gt; &gt; simultaneously, then you can stay in control.\n&gt; &gt;\n&gt; &gt; The WS-* tooling has set up enterprise developers with certain expectations\n&gt; &gt;  -you dont need to know WSDL or XSD\n&gt; &gt;  -you dont need to work with raw XML\n&gt; &gt;  -you can take the WSDL and have the client code generated for you\n&gt; &gt; There&#39;s probably also the implicit expectation that remote services\n&gt; &gt; look like synchronous remote method calls.\n&gt; &gt;\n&gt; &gt; As we on this list know, it is these assumptions that lead to so many\n&gt; &gt; problems -machine generated classes that can&#39;t handle changes in the\n&gt; &gt; XML, blocking rpc operations that cant handle failures, etc. But out\n&gt; &gt; there in the field, the stuff does work on a single version of an app,\n&gt; &gt; using the same toolkit at both ends, so people can easily roll out\n&gt; &gt; something big -because the computing world (esp. MS and IBM) say Ws-*\n&gt; &gt; is good. Its only later that they discover problems with\n&gt; &gt;  -attempts to connect new clients\n&gt; &gt;  -attempts to change the interface\n&gt; &gt; Failures at these point may be blamed on the new clients or their\n&gt; &gt; tooling, rather than fundamental flaws in the whole development\n&gt; &gt; methology of WS-* applications.\n&gt;\n&gt; I remember being told eight years ago that developers, already grown\n&gt; accustomed to the tooling and code generation, would see little value\n&gt; migrating from the comforts of CORBA to the theoretically more\n&gt; interesting, but practically immature, SOAP.  Back when SOAP was\n&gt; rolling your own code to handle the ever so unfriendly DOM.\n&gt;\n&gt; So taking those eight years and projecting them into the future, my guess is:\n&gt;\n&gt; 1.  Tools around REST will evolve to a similar level of comfort\n&gt; developers are accustomed to (as they always did).\n&gt; 2.  And will generate inflexible code that will require rolling out\n&gt; changes everywhere simultaneously (as they always did).\n&gt; 3.  Which will be blamed on the tooling, not the methodology (as we always did).\n&gt;\n&gt; Why the endless cycle?  Because at each generation you are reducing\n&gt; the complexity involved in solving existing problems, liberating you\n&gt; to take on more challenging problems, bringing you back to the same\n&gt; level of complexity.  Equilibrium, it seems, is the state when you&#39;re\n&gt; no longer able to deliver more features at standard industry costs.\n&gt;\n&gt; CEO frustration reigns, CTOs go reading InfoWorld for new answers,\n&gt; hype happens and a new cycle emerges.  As it always does.\n&gt;\n&gt; What really changes in each generation is the size of the solution.\n&gt; If you remember back in CORBA days, two machines was considered a\n&gt; challenging distributed networking problem.  Then we moved to server\n&gt; farms (more like cabinets) and grids, and now we&#39;re looking towards\n&gt; the clouds.\n\nI think that&#39;s a pretty bleak assessment. I have a different theory,\nwhich is that every language is used as the prototype for its\nsuccessors.\n\nCORBA and COM were written in the C era; they evolved to become\nactually usable in C++ code. Their model of IDL-&gt;.h/.cpp stubs worked\nvery well with the superbly static world view of C/C++. Java and C#\nadopted a more agile form of communications with RMI and .NET\nremoting, both of which exploit the introspection features of the\nlanguages to eliminate some of the workflow stages of COM/Corba. SOAP\ntook some of the ideas of this RPC/distributed object world view, and\ntried to make it cross platform by using XML as the transport. SOAP0.9\nsection 5 encoding was clearly designed to marshall object graphs over\nthe wire; SOAP1.0 and 1.1 adopted XSD to move to documents instead.\nBut the inherent inflexibilties of the language prevent the tools\nbeing agile. If you want to move way from a DOM/XOM tree, you need to\nknow what XML to expect -at compile time. .NET 3.0 and java7 are\ntrying to handle XML with more agility, but they still dont like you\nadding new attributes/methods to existing classes. Whereas if I were\nto work with datastructures in a more dynamic language (scheme,\nprolog, javascript, etc). you can turn an arbitrary incoming text\nencoded datastructure straight into the type system of the platform\n(scheme lists, prolog clauses, javascript prototypes, ....).\n\nIf we are going to have clients and servers that are less brittle than\ntheir previous generations, and yet which are still easy for people to\ncode for, I think we need to move beyond java/C#. I&#39;m not going to\nadvocate any specific language, just think its time to move on, at\nleast from the aspect of the bits of code that deal with communication\nwith other machines. Which, as it turns out, is a large slice of\nmodern applications.\n\n-steve\n\n"}}