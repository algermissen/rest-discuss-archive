{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"1PIkJ1WcbUHQGp1BWQXdTnoSS9QAHQ4ypju6hjyHd839RupKLk2LbT3fwmrhYMs1jllFiR60TNcuGiIk-2wUOGaYTzDBWlNvauXzh1obNQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Fun with DELETE","postDate":"1183777611","msgId":9376,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc3MzI3MDIzNzg2MzEwMjYxMTgzNzc3NjExQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9375,"nextInTopic":9377,"prevInTime":9375,"nextInTime":9377,"topicId":8604,"numMessagesInTopic":107,"msgSnippet":"... Well, we really intend for stuff that s removed to be gone for good, may as well free up some resources.  It s really easy to do a case switch based on","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 47894 invoked from network); 7 Jul 2007 03:06:53 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m52.grp.scd.yahoo.com with QMQP; 7 Jul 2007 03:06:53 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta11.grp.scd.yahoo.com with SMTP; 7 Jul 2007 03:06:53 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nReceived: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 7FB56790FC\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat,  7 Jul 2007 03:06:51 +0000 (UTC)\r\nTo: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W7327023786310261183777611@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Sat, 07 Jul 2007 03:06:51 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re: Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;Yeah, I don&#39;t like that suggestion just because a zero-byte file feels\n&gt;more like a mistake. Even if that&#39;s what the server ends up with.\n&gt;\n\nWell, we really intend for stuff that&#39;s removed to be gone for good, \nmay as well free up some resources.  It&#39;s really easy to do a case \nswitch based on whether filesize is zero, i.e. false.  That particular \nwas suggested by one of my coders to reduce the amount of code, and \nI&#39;m always in favor of using less code to get the job done.\n\n&gt;\n&gt;I don&#39;t, on the other hand, have an objection to a PUT resulting in a\n&gt;resource moving (as gets mentioned elsewhere in the thread). Sometimes\n&gt;that means that the &quot;location&quot; shouldn&#39;t have been part of the URL,\n&gt;but sometimes you just can&#39;t get around it. For instance, if you PUT a\n&gt;new username to a user&#39;s profile, Wirebird moves the profile. I&#39;m\n&gt;certainly not going to let a client, even one with moderator access,\n&gt;effectively take the user off the system... what if something happens\n&gt;between then and the POST to the new username?\n&gt;\n\nI don&#39;t have enough information about Wirebird to make any firm \njudgments, but the interaction you describe sounds un-RESTful to me.  \nIf you&#39;re the server administrator, then disallow any PUT that would \nbreak the system by returning a 400 Bad Request or a 403 Forbidden \n(both indicate &quot;do not repeat&quot; without somehow altering the request, \ni.e. an auth header) instead of assigning non-generic semantics to PUT.  \nOr, redirect the user to the appropriate URL so they can repeat the \nrequest.\n\nTo answer your &quot;what if something happens&quot; question, my response is \n&quot;That&#39;s why you don&#39;t use PUT if the interaction semantics are move.&quot;  \nIf a &quot;move&quot; has occurred, then the use case for PUT was not met and \nit&#39;s time for another design iteration (yes, I know, these are indeed \nfrustrating but a broken constraint is a broken constraint).\n\nTake one resource, &quot;thing of the day&quot;.  It is a 307 redirect to &quot;a \nthing&quot; one day, and &quot;another thing&quot; the next day.  If I want to \nPUT a new version of &quot;a thing&quot; and I make that PUT to &quot;thing of the \nday&quot; I should be redirected to &quot;a thing&quot; and required to repeat the \nrequest there.  To change &quot;thing of the day&quot; I&#39;d POST the URL for \n&quot;another thing&quot; to &quot;thing of the day&quot; and the server would change \nits Location header for that resource accordingly, as it always \nreflects the last URL pushed onto that stack (appended to the \nresource).\n\nURL A = &quot;a thing&quot;\nURL B = &quot;thing of the day&quot;\n\nSo it&#39;s perfectly allowable for a PUT to one URL to affect the contents \nof another URL through an alias.  Because URL B is always a redirect, \nit is always in sync with changes to URL A.  But, it is not RESTful to \nallow the PUT to &quot;thing of the day&quot; to update &quot;a thing&quot; because the \nsemantics of such an interaction would be &quot;move&quot;:  PUT the \nrepresentation to URL B, move the representation to URL A, and replace \nthe representation of URL B the user *just requested be PUT there* \nwith the 307 redirect that the user *just tried to replace* with a new \nrepresentation of URL B.  This isn&#39;t just breaking a REST constraint, \nthis goes against the spec for PUT:\n\n&quot;In contrast, the URI in a PUT request identifies the entity enclosed \nwith the request -- the user agent knows what URI is intended and the \nserver MUST NOT attempt to apply the request to some other resource.&quot;\n\nThe user asked for the file to be replaced, not moved -- i.e. to apply \nthe change to URL A and automatically switch URL B back to a redirect \nis directly against the HTTP protocol (which doesn&#39;t stop anyone from \nimplementing it wrong), not to mention the user intent.\n\nSo the correct response would be a 307 redirect to URL A, with the \nclient retaining the option (possibly with user intervention) of \nwhether to re-try the request.  Otherwise, the semantics of the mapping \nof URL B have varied -- first, they meant &quot;for now, see URL A&quot; then they \nmeant &quot;200 OK, so this has nothing to do with URL A&quot; then they changed \nback to &quot;for now, see URL A&quot; and you&#39;re exactly right, this causes all \nsorts of problems, but I say that&#39;s because PUT has been given the \nsemantics of &quot;move&quot;.\n\nRemember, &quot;The only thing that is required to be static for a resource \nis the semantics of the mapping, since the semantics is what distinguishes \none resource from another.&quot;  So if you have a resource whose semantics \nare &quot;thing of the day&quot; implemented with a 307 redirect, that 307 redirect \nhad better not vary its target throughout the day, or become a 200 OK \nwhile the &quot;move&quot; is pending (as this will allow caches to mark the 307 \nresponse as stale before its stated expiration time of 24h) depending on \nhow many times &quot;a thing&quot; gets updated by using PUT to &quot;move&quot;.\n\nIf the PUT was successful, then the 20x response lied, as the move \nhappened so fast that to the client, the 307 response was never updated \nbeyond getting marked &quot;stale&quot; in every intermediary including the client \ncache.  Kinda like anti-scaling.  ;-)\n\n-Eric\n\n\n\n\n"}}