{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"Assaf Arkin &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"ZuySqvZg9L1txq6czbsI4kOYz3dlKAfBm7WMiZXBlCoos_i-YjBDTuIzScf51XzyTV_GbXzJhzXU3WKxN-UyXI7OzjkrKcs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237567916","msgId":12294,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDkwMzIwMDk1MW9kY2U1NTRhbzE1NjE5MTBlZDFmNjM1YTFAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDIwMDkwMzE5MDMxNTM4LjU4OWVmN2E2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE4MTUxOTM2LjQ5MzM5ZmU0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDUwMzdiNmU0MDkwMzE4MTQyNXA2NmNhNTc4ZXVmNjViMzQwMjdjZGNiOGFlQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE4MTYzNjAxLjQwNDdkMDZiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDUwMzdiNmU0MDkwMzE4MTYzOG41NWFhYzdlMG4zN2QyMmRjM2JjMTRiMTcwQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE4MjEwNTI3LmZlNDJkYWZlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDUwMzdiNmU0MDkwMzE5MDA0MXI1MzYwZTA4ZGlmNzE4ZTI3MDQ5MDQwYTljQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE5MDIwNjAzLjI5OTQwYWU2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPDUwMzdiNmU0MDkwMzE5MDExOGgzOGI4ZjA0ZHk0M2ViMTcxOGEyMGIxMjhjQG1haWwuZ21haWwuY29tPiAJPDIwMDkwMzE5MDMxNTM4LjU4OWVmN2E2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":12293,"nextInTopic":12295,"prevInTime":12293,"nextInTime":12295,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"... Think of Web email where you get a view of your inbox, a checkbox next to each email and a button that says delete. Let s not call it delete, let s call it","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11557 invoked from network); 20 Mar 2009 16:52:15 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by 98.137.34.37 with QMQP; 20 Mar 2009 16:52:15 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.228)\n  by mta2.grp.re1.yahoo.com with SMTP; 20 Mar 2009 16:52:12 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id g9so1228171rvb.5\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 20 Mar 2009 09:52:11 -0700 (PDT)\r\nMIME-Version: 1.0\r\nIn-Reply-To: &lt;20090319031538.589ef7a6.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt; \n\t&lt;20090318151936.49339fe4.eric@...&gt; &lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt; \n\t&lt;20090318163601.4047d06b.eric@...&gt; &lt;5037b6e40903181638n55aac7e0n37d22dc3bc14b170@...&gt; \n\t&lt;20090318210527.fe42dafe.eric@...&gt; &lt;5037b6e40903190041r5360e08dif718e27049040a9c@...&gt; \n\t&lt;20090319020603.29940ae6.eric@...&gt; &lt;5037b6e40903190118h38b8f04dy43eb1718a20b128c@...&gt; \n\t&lt;20090319031538.589ef7a6.eric@...&gt;\r\nDate: Fri, 20 Mar 2009 09:51:56 -0700\r\nX-Received: by 10.141.153.16 with SMTP id f16mr1458006rvo.217.1237567931342; \n\tFri, 20 Mar 2009 09:52:11 -0700 (PDT)\r\nMessage-ID: &lt;5037b6e40903200951odce554ao1561910ed1f635a1@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Dong Liu &lt;edongliu@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd1481aeedef604658fbcc8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Assaf Arkin &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=319607554; y=3h_5jeLSn-K1Itn5pdcDCjK3gRjJUCIYSoDNi4OQ8kf-CettQg\r\nX-Yahoo-Profile: assafarkin\r\n\r\n\r\n--000e0cd1481aeedef604658fbcc8\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Thu, Mar 19, 2009 at 2:15 AM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; Assaf Arkin wrote:\n&gt;\n\n&gt; The submitted POST in your example resembles what application state?\n&gt; Can that application state be retrieved by a GET request?\n\n\nThink of Web email where you get a view of your inbox, a checkbox next to\neach email and a button that says delete. Let&#39;s not call it delete, let&#39;s\ncall it archive instead. The server is now telling you what the application\nstate is: the contents of the inbox. Along with it, how to transition to a\ndifferent application state by changing the contents of the inbox. It lets\nyou checkbox specific emails and with one request archive them.\n\nThe main point of the architecture is to reduce coupling between client and\nserver. The client and server here only agreed on a common understanding of\nmedia type and protocol, client is merely following the happy hypermedia\ntrial. There are no new semantics on, in this case HTML or HTTP.\n\nAssaf\n\n\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; I don&#39;t see a client forcing its will on the server, server doing\n&gt; &gt; actions not requested by the client, or anything beyond plain HTTP.\n&gt; &gt;\n&gt;\n&gt; Sure, it&#39;s HTTP, but HTTP != REST.  In a uniform interface, if the\n&gt; client wants to delete multiple resources, then the client makes a\n&gt; DELETE request against each URI to be deleted.  Each request generates\n&gt; a success/fail response which is visible to intermediaries, allowing\n&gt; any caches between the user who requested the delete and the origin\n&gt; server to expire all cached representations of a deleted resource.\n&gt; This is fundamental.\n&gt;\n&gt; This cannot happen when special instructions to the server are POSTed\n&gt; via an HTML forms interface.  No intermediary can possibly surmise that\n&gt; any deletion has occurred.  POST is borked into meaning deletion\n&gt; instead of its generic-interface meaning of addition.  DELETE has the\n&gt; generic-interface meaning of deletion, but it isn&#39;t involved in the\n&gt; delete requests at all.\n&gt;\n&gt; Your comment that the &quot;server isn&#39;t doing any actions not requested by\n&gt; the client&quot; isn&#39;t quite right.  It may look to the user like an HTML\n&gt; form allowing deletion, but that isn&#39;t what the client is requesting,\n&gt; because the request method isn&#39;t DELETE.  So the server is, indeed,\n&gt; taking action (deletion) that has nothing to do with the request method\n&gt; (whatever POST means, it doesn&#39;t mean DELETE since that&#39;s its own\n&gt; method).\n&gt;\n&gt; So, yes, deleting resources with some method other than DELETE results\n&gt; in an API that does not resemble a uniform interface.  Deleting\n&gt; resources using the DELETE method has absolutely no downside, with the\n&gt; benefit of being visible to intermediaries, as envisioned by REST.\n&gt;\n&gt; -Eric\n&gt;\n\r\n--000e0cd1481aeedef604658fbcc8\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Mar 19, 2009 at 2:15 AM, Eric J. Bowman =\r\n&lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...&quot;&gt;eric@bisonsy=\r\nstems.net&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\n&lt;div =\r\nclass=3D&quot;im&quot;&gt;Assaf Arkin wrote:&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote class=3D&quot;=\r\ngmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-=\r\nleft:1ex;&quot;&gt;&lt;br&gt;\nThe submitted POST in your example resembles what applicati=\r\non state?&lt;br&gt;\nCan that application state be retrieved by a GET request?&lt;/bl=\r\nockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Think of Web email where you get a view of you=\r\nr inbox, a checkbox next to each email and a button that says delete. Let&#=\r\n39;s not call it delete, let&#39;s call it archive instead. The server is n=\r\now telling you what the application state is: the contents of the inbox. Al=\r\nong with it, how to transition to a different application state by changing=\r\n the contents of the inbox. It lets you checkbox specific emails and with o=\r\nne request archive them.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The main point of the a=\r\nrchitecture is to reduce coupling between client and server. The client and=\r\n server here only agreed on a common understanding of media type and protoc=\r\nol, client is merely following the happy hypermedia trial. There are no new=\r\n semantics on, in this case HTML or HTTP.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Assaf&lt;=\r\n/div&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 =\r\n.8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&gt; I don&#39;t see a client forcing its will on the server, =\r\nserver doing&lt;br&gt;\n&gt; actions not requested by the client, or anything beyo=\r\nnd plain HTTP.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Sure, it&#39;s HTTP, but HTTP !=3D R=\r\nEST. =A0In a uniform interface, if the&lt;br&gt;\nclient wants to delete multiple =\r\nresources, then the client makes a&lt;br&gt;\nDELETE request against each URI to b=\r\ne deleted. =A0Each request generates&lt;br&gt;\na success/fail response which is v=\r\nisible to intermediaries, allowing&lt;br&gt;\nany caches between the user who requ=\r\nested the delete and the origin&lt;br&gt;\nserver to expire all cached representat=\r\nions of a deleted resource.&lt;br&gt;\nThis is fundamental.&lt;br&gt;\n&lt;br&gt;\nThis cannot h=\r\nappen when special instructions to the server are POSTed&lt;br&gt;\nvia an HTML fo=\r\nrms interface. =A0No intermediary can possibly surmise that&lt;br&gt;\nany deletio=\r\nn has occurred. =A0POST is borked into meaning deletion&lt;br&gt;\ninstead of its =\r\ngeneric-interface meaning of addition. =A0DELETE has the&lt;br&gt;\ngeneric-interf=\r\nace meaning of deletion, but it isn&#39;t involved in the&lt;br&gt;\ndelete reques=\r\nts at all.&lt;br&gt;\n&lt;br&gt;\nYour comment that the &quot;server isn&#39;t doing any =\r\nactions not requested by&lt;br&gt;\nthe client&quot; isn&#39;t quite right. =A0It =\r\nmay look to the user like an HTML&lt;br&gt;\nform allowing deletion, but that isn&=\r\n#39;t what the client is requesting,&lt;br&gt;\nbecause the request method isn&#39=\r\n;t DELETE. =A0So the server is, indeed,&lt;br&gt;\ntaking action (deletion) that h=\r\nas nothing to do with the request method&lt;br&gt;\n(whatever POST means, it doesn=\r\n&#39;t mean DELETE since that&#39;s its own&lt;br&gt;\nmethod).&lt;br&gt;\n&lt;br&gt;\nSo, yes, =\r\ndeleting resources with some method other than DELETE results&lt;br&gt;\nin an API=\r\n that does not resemble a uniform interface. =A0Deleting&lt;br&gt;\nresources usin=\r\ng the DELETE method has absolutely no downside, with the&lt;br&gt;\nbenefit of bei=\r\nng visible to intermediaries, as envisioned by REST.&lt;br&gt;\n&lt;font color=3D&quot;#88=\r\n8888&quot;&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd1481aeedef604658fbcc8--\r\n\n"}}