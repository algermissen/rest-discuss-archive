{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"SLybdLEN_eAdyfkWr35EKL3ljSuCINgyR6BQDtNxziPehBbr6E9Sr_n6UOPhf5PYPcj3a9NAkZmoUQg6NkSIgg0WSTgPNDc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281194245","msgId":16216,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEJFM0Q4NjU5LUI3NjItNDc1OS1CQzhDLTEzQjREQTk4NUM1RkBtYWMuY29tPg==","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPgk8RjE5NjI2NDZEM0I2NDY0MkI3QzlBMDYwNjhFRTFFNjQwRTE0Mzg1N0BleDEwLmhvc3RlZGV4Y2hhbmdlLmxvY2FsPgk8RUE2MDczMkMtM0IwMC00NUQ0LThGRDgtMDJFQjFCMjE0NEY1QG1hYy5jb20+CTxGMTk2MjY0NkQzQjY0NjQyQjdDOUEwNjA2OEVFMUU2NDBFMTQzQjExQGV4MTAuaG9zdGVkZXhjaGFuZ2UubG9jYWw+CTxCRTNEODY1OS1CNzYyLTQ3NTktQkM4Qy0xM0I0REE5ODVDNUZAbWFjLmNvbT4="},"prevInTopic":16215,"nextInTopic":16217,"prevInTime":16215,"nextInTime":16217,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":" While a usual feed reader (e.g. Apple Mail) would be able to perform it s implemented goal based on that feed our compile-list-of-newly-ordered-items","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76290 invoked from network); 7 Aug 2010 15:17:26 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 7 Aug 2010 15:17:26 -0000\r\nX-Received: from unknown (HELO mail-fx0-f48.google.com) (209.85.161.48)\n  by mta2.grp.sp2.yahoo.com with SMTP; 7 Aug 2010 15:17:26 -0000\r\nX-Received: by fxm11 with SMTP id 11so4511288fxm.21\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 07 Aug 2010 08:17:25 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.103.197.5 with SMTP id z5mr797266mup.107.1281194245123; Sat, \n\t07 Aug 2010 08:17:25 -0700 (PDT)\r\nX-Received: by 10.102.87.23 with HTTP; Sat, 7 Aug 2010 08:17:25 -0700 (PDT)\r\nIn-Reply-To: &lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143857@...&gt;\n\t&lt;EA60732C-3B00-45D4-8FD8-02EB1B2144F5@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143B11@...&gt;\n\t&lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\r\nDate: Sat, 7 Aug 2010 11:17:25 -0400\r\nX-Google-Sender-Auth: uIFN5AvZOdxDlIvGhrHC0a9BTLw\r\nMessage-ID: &lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Robert Brewer &lt;fumanchu@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=69164307; y=YU3HmsuznP1pFojOfD4uN7a83VOfqk0jJA57zt9TttV8\r\nX-Yahoo-Profile: mamund\r\n\r\n&lt;snip&gt;\nWhile a usual feed reader (e.g. Apple Mail) would be able to perform=\r\n\nit&#39;s implemented goal based on that feed our\ncompile-list-of-newly-ordered=\r\n-items user agent would definitely not be\nable to do what it is implemented=\r\n to do.\n&lt;/snip&gt;\n\nQUESTION:\nhow do you &quot;know&quot; this to be true? IOW, what is =\r\nit about the\nrepresentation example you provided that leads you to believe =\r\nyour\n&quot;compile-list-of-newly-ordered-items user agent&quot; cannot &quot;do what it is=\r\n\nimplemented to do&quot;?\n\nASSUMPTION:\nI think I hear you talking about the need=\r\n for clients to know ahead of\ntime whether the representation returned is s=\r\nomething they can\nprocess. If that&#39;s the case, that means there must be som=\r\ne information\nbaked into the client that is used to &quot;check&quot; the representat=\r\nion\nreturned. The Accept header is one of these methods (&quot;I am a client\ntha=\r\nt will only be able to understand the following representation\nformats&quot;).\n\n=\r\nI that what this is about?\n\nmca\nhttp://amundsen.com/blog/\nhttp://mamund.com=\r\n/foaf.rdf#me\n\n\n\n\nOn Sat, Aug 7, 2010 at 06:47, Jan Algermissen &lt;algermissen=\r\n1971@...&gt; wrote:\n&gt;\n&gt; On Aug 7, 2010, at 12:25 AM, Robert Brewer wrote:\n=\r\n&gt;\n&gt;&gt;&gt; Jan Algermissen wrote:\n&gt;\n&gt;&gt;&gt; The question is whether Accept: text/htm=\r\nl is indeed sufficient. Is it\n&gt;&gt;&gt; true that the user agent can persue its i=\r\nmplemented goal of compiling\n&gt;&gt; a\n&gt;&gt;&gt; list of all newly ordered items from =\r\nany HTML document?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Suppose the server provides both, application/or=\r\nder and text/html as\n&gt;&gt;&gt; representations of the list of new orders. When a =\r\nuser agent comes\n&gt;&gt;&gt; along that says Accept: text/html the server can freel=\r\ny assume\n&gt;&gt; browser-\n&gt;&gt;&gt; like capabilities of the user agent (any HTML will=\r\n do; even an &lt;ul&gt;\n&gt;&gt;&gt; with items referring to scanned PNGs of the orders). =\r\nIOW, the owner of\n&gt;&gt;&gt; the server is free to change the implementation for t=\r\next/html as long\n&gt;&gt;&gt; as a) the resource semantics remain stable (list of ne=\r\nw orders) and\n&gt;&gt;&gt; valid HTML is returned.\n&gt;&gt;&gt;\n&gt;&gt;&gt; How would the user agent =\r\nimplementation deal with HTML? Special\n&gt;&gt;&gt; syntactic assumptions are not al=\r\nlowed (because of Accept: text/html)\n&gt;&gt; or\n&gt;&gt;&gt; would mean a hidden coupling=\r\n. How would a user agent distinguish\n&gt;&gt;&gt; between an HTML it does not unders=\r\ntand but that contains orders (e.g.\n&gt;&gt;&gt; the list of scanned order images) a=\r\nnd an empty list of orders that is\n&gt;&gt;&gt; augmented with some HTML it does not=\r\n (and need not) understand?\n&gt;&gt;&gt;\n&gt;&gt;&gt; IMO that is impossible and hence Accept=\r\n: text/html does not cut it.\n&gt;&gt;\n&gt;&gt; I think all that demonstrates is that HT=\r\nML is too generic to be useful\n&gt;&gt; for your particular task, not that all me=\r\ndia types require &quot;special\n&gt;&gt; syntactic assumptions&quot; (whether implicit or e=\r\nxplicit). The fact that you\n&gt;&gt; can make a &quot;list&quot; in HTML using any of a hun=\r\ndred types of tags doesn&#39;t\n&gt;&gt; mean Atom, for example, also suffers from the=\r\n same inappropriateness to\n&gt;&gt; your task.\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt; I knew you were going to=\r\n say that :-)\n&gt;\n&gt; Let&#39;s see:\n&gt;\n&gt; The implementor of the server side chooses=\r\n to expose the order list as HTML and Atom. In the Atom case, she would wri=\r\nte sth like this (in JAX-RS):\n&gt;\n&gt; @Path(&quot;/new-orders&quot;)\n&gt; class NewOrders {\n=\r\n&gt;\n&gt; =A0@GET\n&gt; =A0@Produces(&quot;text/html&quot;)\n&gt; =A0public Response newOrdersAsHTM=\r\nL() {\n&gt; =A0 =A0 // ...\n&gt; =A0}\n&gt;\n&gt; =A0@GET\n&gt; =A0@Produces(&quot;application/atom+=\r\nxml&quot;)\n&gt; =A0public Response newOrdersAsAtomFeed() {\n&gt;\n&gt; =A0}\n&gt; }\n&gt;\n&gt;\n&gt; When =\r\nit comes to implementing (or changing) the Atom-producing method, the serve=\r\nr developer need not (must not) be concerned with any client expectations. =\r\nAll that matters is to produce any valid Atom feed[1].\n&gt;\n&gt; Given that, it w=\r\nould be a perfectly fine implementation to produce an Atom feed such as thi=\r\ns:\n&gt;\n&gt; &lt;feed&gt;\n&gt; =A0&lt;entry&gt;\n&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt; =A0 =A0 =A0&lt;=\r\nxhtml:div xmlns:xhtml=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt; =A0 =A0 =A0 =A0&lt;x=\r\nhtml:h1&gt;Order 551-A-1272&lt;/xhtml:h1&gt;\n&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt; =A0 =A0 =\r\n=A0 =A0 =A0&lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt; =A0 =A0 =A0 =\r\n=A0 =A0&lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt; =A0 =A0 =A0 =A0&lt;/=\r\nxhtml:ul&gt;\n&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt; =A0 =A0 =A0&lt;=\r\n/xhtml:div&gt;\n&gt; =A0 =A0&lt;/summary&gt;\n&gt; =A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D=\r\n&quot;/scan-archive/orders/551-A-1272.png&quot;/&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; =A0&lt;entry&gt;\n&gt; =A0 =\r\n=A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt; =A0 =A0 =A0&lt;xhtml:div xmlns:xhtml=3D&quot;http://w=\r\nww.w3.org/1999/xhtml&quot;&gt;\n&gt; =A0 =A0 =A0 =A0&lt;xhtml:h1&gt;Order 551-A-1273&lt;/xhtml:h=\r\n1&gt;\n&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Device Foo, I=\r\ntem Price: ... &lt;/xhtml:li&gt;\n&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Screw Bar, Item P=\r\nrice: ... &lt;/xhtml:li&gt;\n&gt; =A0 =A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt; =A0 =A0 =A0 =A0&lt;xhtml:=\r\nb&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt; =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt; =A0 =A0&lt;/summary&gt;\n&gt; =\r\n=A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D&quot;/scan-archive/orders/551-A-1273.p=\r\nng&quot;/&gt;\n&gt; =A0&lt;/entry&gt;\n&gt; &lt;/feed&gt;\n&gt;\n&gt;\n&gt; If you develop a user agent that says A=\r\nccept: application/atom+xml;type=3Dfeed you must be prepared to receive the=\r\n above feed.\n&gt;\n&gt; While a usual feed reader (e.g. Apple Mail) would be able =\r\nto perform it&#39;s implemented goal based on that feed our compile-list-of-new=\r\nly-ordered-items user agent would definitely not be able to do what it is i=\r\nmplemented to do.\n&gt;\n&gt; Two questions arise:\n&gt;\n&gt; 1. How does the user agent d=\r\netect that it cannot perform its task but (despite having a perfectly valid=\r\n answer)\n&gt; 2. What to do about that\n&gt;\n&gt;\n&gt; 1.:\n&gt; Given the feed above, how d=\r\no we need to implement the client to report to the user (e.g. someone that =\r\nat some point looks in a log file or someone that uses the business intelli=\r\ngence application that uses the compiled reports about newly ordered items)=\r\n that a correct answer was received, that it did indeed contain orders but =\r\nthat the list could not be processed as intended?\n&gt;\n&gt; First of all, the cli=\r\nent trusts the higher level assumption that the resource indeed provides th=\r\ne list of new orders. This is the same kind of trust that any browser has w=\r\nhen it follows an &lt;img src=3D&quot;&quot;/&gt; hypermedia control. The server told the u=\r\nser agent something about the referenced resource and the client can reason=\r\nably expect that to be true (otherwise we would deal with a broken server a=\r\nnd that is not the issue here).\n&gt;\n&gt; Since the client expects the feed to re=\r\npresent the list of new orders, it is IMHO reasonable to assume that any en=\r\ntry in that feed points to a new order. No entries would mean &#39;no new order=\r\ns&#39;. This is IMHO not semantic tunneling through the Atom feed because the a=\r\nssumption is backed by the semantics of the resource as advertised by the s=\r\nerver.\n&gt;\n&gt; The feed appearently contains two entries, hence the user agent =\r\ncan be programmed to understand that there are two new orders to process. W=\r\nhen it comes to processing the orders the user agent will have to realize t=\r\nhat neither the summary nor the referenced content is available in a format=\r\n that is sufficient to extract the ordered items automatically. Hence the u=\r\nser agent has to report an error eventually leading to some human action to=\r\n fix the situation:\n&gt;\n&gt; 2.:\n&gt; We reach question #2 once the fact that a pro=\r\nblem exists for the user agent has reached a human. What is he supposed to =\r\ndo? There are three options:\n&gt;\n&gt; a) call the server developer and negotiate=\r\n a certain format for the Atom feed\n&gt; b) adjust the user agent implementati=\r\non to handle the format received (e.g. parse out the HTML from the summary =\r\nor OCR the scanned orders)\n&gt; c) do nothing except mark the compiled report =\r\nas &#39;wrong&#39; or &#39;unusable&#39;. IWO, accept the fact that the user goal cannot be=\r\n satisfied\n&gt;\n&gt; a) Leads to coupling (if it is at all possible/desireable to=\r\n call the server implementor)\n&gt; b) Does not improve the situation because t=\r\nhe format can just change again tomorrow\n&gt; c) is the honest option but prov=\r\nides no business value\n&gt;\n&gt; In my opinion, the only thing to really improve =\r\nthe situation is to standardize a format that allows the server developer t=\r\no actually determine the user agent expectations (capabilities) from the Ac=\r\ncept header. If we had application/orderlist (or at least application/atom+=\r\nxml;profile=3Dorderlist) the server developer would need to either add a ne=\r\nw response-producing method or send a 406.\n&gt;\n&gt; Does that sufficiently illus=\r\ntrate the point?\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt; [1] and of course be true to be true to the =\r\nserver&#39;s own statement that the resource represents\n&gt; =A0 =A0the new orders=\r\n. It would be bad to serve a list of shipped orders, for example.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;=\r\n\n&gt;\n&gt;&gt; Robert Brewer\n&gt;&gt; fumanchu@...\n&gt;&gt;\n&gt;\n&gt; -------------------------=\r\n----------\n&gt; =A0Jan Algermissen, Consultant\n&gt; =A0NORD Software Consulting\n&gt;=\r\n\n&gt; =A0Mail: algermissen@...\n&gt; =A0Blog: http://www.nordsc.com/blog/\n&gt; =\r\n=A0Work: http://www.nordsc.com/\n&gt; -----------------------------------\n&gt;\n&gt;\n&gt;=\r\n\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;=\r\n\n&gt;\n\n"}}