{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"_eVhzmiuT-f4BVuU2u5zVDqPN0oI3Wyo1uKNuN4YEYQadjtgqT_Z-OJUhnfHQymZzIqOrmrUHNvEBa_mE7aAy01TF7k1Uag","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Meaning of stateless (was: Avoiding re-POSTS)","postDate":"1145044230","msgId":5957,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEIzQjc5RkFFLTI4RDEtNDc2OS05QkVELTAzQzNGMzVFQzE2QUBhcnRpbWEuY29tPg==","inReplyToHeader":"PDQ0M0ZGMzFDLjgwMDAxMDlAdmVpY29uLmNvbT4=","referencesHeader":"PDQ0M0ZGMzFDLjgwMDAxMDlAdmVpY29uLmNvbT4="},"prevInTopic":5956,"nextInTopic":5972,"prevInTime":5956,"nextInTime":5958,"topicId":5949,"numMessagesInTopic":44,"msgSnippet":"Hi Lyle, ... I can try and illustrate my understanding of REST, and I would appreciate getting validation from this list, or correction if I m wrong about","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 65309 invoked from network); 14 Apr 2006 19:49:55 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m30.grp.scd.yahoo.com with QMQP; 14 Apr 2006 19:49:55 -0000\r\nReceived: from unknown (HELO artima2.inetu.net) (209.235.240.43)\n  by mta10.grp.scd.yahoo.com with SMTP; 14 Apr 2006 19:49:55 -0000\r\nReceived: (qmail 6543 invoked by uid 89); 14 Apr 2006 19:50:08 -0000\r\nReceived: from unknown (HELO ?192.168.1.3?) (71.131.203.244)\n  by artima2.inetu.net with SMTP; 14 Apr 2006 19:50:08 -0000\r\nIn-Reply-To: &lt;443FF31C.8000109@...&gt;\r\nReferences: &lt;443FF31C.8000109@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;B3B79FAE-28D1-4769-9BED-03C3F35EC16A@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Fri, 14 Apr 2006 12:50:30 -0700\r\nTo: Lyle Kopnicky &lt;lyle@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Re: Meaning of stateless (was: Avoiding re-POSTS)\r\nX-Yahoo-Group-Post: member; u=198693287; y=oTOUIGzmbsnBjd_vmlRPK86cza5CT2DS5tOFppBE7gI5Rx8HHr0\r\nX-Yahoo-Profile: billvenners\r\n\r\nHi Lyle,\n\nOn Apr 14, 2006, at 12:08 PM, Lyle Kopnicky wrote:\n\n&gt; So, is the &quot;diamond&quot; Bill suggested a piece of session state?\n&gt;\n&gt; Clearly, the server is holding onto state, as each resource has a\n&gt; state.  Requests from the client can change that state.  What exactly\n&gt; makes something &quot;session&quot; state as opposed to some other kind of  \n&gt; state?\n&gt;\n&gt; Can you give me an example of an application in which requests from  \n&gt; the\n&gt; client to the server do not contain all of the information  \n&gt; necessary to\n&gt; understand the request?\n\nI can try and illustrate my understanding of REST, and I would  \nappreciate getting validation from this list, or correction if I&#39;m  \nwrong about REST. I did find Roy Fielding&#39;s dissertation a bit hard  \nto understand, but one of the big ideas I took away from it is that  \nin the REST style, URIs map to chunks of state on the server. So I  \nguess that&#39;s what resources are: conceptual pieces of state. A client  \nGET of a particular URI will retrieve a representations of the state  \nidentified by the URI. A POST the a URI could update or modify the  \nstate. A PUT is a way to add a new piece of state at a new URI (or at  \nleast make a polite request that it be done), and a DELETE is a way  \nto get rid of that piece of state altogether, or at least request it  \nbe deleted.\n\nI believe the way we currently handle form POSTs on Artima is  \nunRESTful. We do it that way because we bought some software in 2001  \nthat did it that way, and we just continued in the tradition. I think  \na lot of people do it this way. The way it works is:\n\nGET http://www.artima.com/account/new\n\nGets you a blank form for creating a new account. You fill this out,  \nbut accidentally, your passwords don&#39;t match (we make you type your  \npassword twice). You POST back to the same URL:\n\nPOST http://www.artima.com/account/new\n\nWe realize your passwords don&#39;t match. Now we want to clear both  \npasswords and put an error message indicating you need to type your  \npasswords again because they didn&#39;t match. Because we want to avoid  \nthe ugly dialog box on back up, we want to do a redirect after POST  \nto GET. But when the GET comes in, we need to know what data you  \nfilled in the form with, and we need to know that the error was with  \nthe password mismatch. So we stick that state into the user session,  \nand redirect you back once again to the same URL. Your browser will  \ndo yet another GET:\n\nGET http://www.artima.com/account/new\n\nThis time around, however, we aren&#39;t going to send you a blank form.  \nWe&#39;re going to send you a representation of the current state of our  \nconversation with you, the form with all the fields you filled in,  \nminus your passwords, plus an error message. We know to do this  \nbecause we look up and find the state in the session when this GET  \nrequest comes in. When the first GET request came in, there was no  \nsuch session state, so we sent a blank form.\n\nThe unRESTful thing about this, as I understand REST, is that I&#39;m  \nusing the same URI to represent two different pieces of application  \nstate. One is the blank form, which is the application state at the  \nstart of our conversation. The other is the partly filled in form  \nplus the error message, which represents the state of the  \nconversation after your first attempt at registering.\n\nDiamonds are really an implementation idea that I&#39;m considering, but  \nwhat I think is RESTful about how I plan to use diamonds is that the  \ndiamond identifier will show up in the URI. So in the diamond case, I  \nstore the state not in the user&#39;s session. In fact I don&#39;t have a  \nuser session. I just store it in my diamond cache (and database for  \nreplication) and get back an opaque identifier, which I include in  \nthe redirect URL. So in this case, the second GET would be:\n\nGET http://www.artima.com/account/new?z=392jfuwqk1hd9\n\nWhere 392jfuwqk1hd9 is the opaque diamond identifier. So now the  \nsecond step in our conversation has its own URI. The first URI:\n\nGET http://www.artima.com/account/new\n\nWill always return a blank form. The second URI:\n\nGET http://www.artima.com/account/new?z=392jfuwqk1hd9\n\nWill always return exactly what you posted the first time, minus the  \npasswords, plus the error message. If you make a second attempt at  \ntyping in your passwords and they still don&#39;t match, you&#39;ll be  \nredirected to a third URI, say:\n\nGET http://www.artima.com/account/new?z=dk28fWSJ13\n\nSo you can back up and hit reload to your heart&#39;s content. You&#39;ll  \nalways be reloading a URI that refers to the exact state of the  \napplication at that point in the conversation.\n\nIn summary, I think this is RESTful. Regardless of its RESTfulness, I  \nthink it is more user-friendly, and it also means that the URI for  \nthe blank form can be cached effectively. Please let me know if any  \nof you think my understanding of REST as described here is wrong.\n\nThanks.\n\nBill\n----\nBill Venners\nEditor-in-Chief\nArtima Developer\nhttp://www.artima.com\n\n\n"}}