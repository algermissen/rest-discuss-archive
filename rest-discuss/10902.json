{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"bYeOk31bm52J0e-xEvEIPDPHIzfU9WUOWMlleQ9lfI4YaY6R0_KvTEq7VAvsRO7MqXZrk2wxL5fJMdEbBmf2bwYvrfx2hdR5TJHU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Pretty URLs, sessions, and no cookies","postDate":"1213147282","msgId":10902,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwNjExMDEyMTIyLkdBMzE4NDBAaGFycG8ubGFpdHMudXRleGFzLmVkdT4=","inReplyToHeader":"PDIwMDgwNjExMDI1OC4xNDMzMy5taWNoYWVsQHNjaHVlcmlnLmRlPg==","referencesHeader":"PDIwMDgwNjEwMTYyNTMzLmFhOWEzZmIzNTViZDc2NzM1MjY4OGM2MjE1MDRkZjI0LjkwYzBjNmRkODkud2JlQGVtYWlsLnNlY3VyZXNlcnZlci5uZXQ+IDwyMDA4MDYxMTAyNTguMTQzMzMubWljaGFlbEBzY2h1ZXJpZy5kZT4="},"prevInTopic":10901,"nextInTopic":10903,"prevInTime":10901,"nextInTime":10903,"topicId":10886,"numMessagesInTopic":28,"msgSnippet":"Michael- I ve had good luck with a two-step page load: the html page is rendered regardless of identity/authorization and is identical for all users (and is","rawEmail":"Return-Path: &lt;pkeane@...&gt;\r\nX-Sender: pkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 930 invoked from network); 11 Jun 2008 01:21:26 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m49.grp.scd.yahoo.com with QMQP; 11 Jun 2008 01:21:26 -0000\r\nX-Received: from unknown (HELO harpo.laits.utexas.edu) (128.83.27.7)\n  by mta18.grp.scd.yahoo.com with SMTP; 11 Jun 2008 01:21:25 -0000\r\nX-Received: from harpo.laits.utexas.edu (harpo.laits.utexas.edu [127.0.0.1])\n\tby harpo.laits.utexas.edu (8.14.2/8.14.2) with ESMTP id m5B1LNkK032047;\n\tTue, 10 Jun 2008 20:21:23 -0500\r\nX-Received: (from pkeane@localhost)\n\tby harpo.laits.utexas.edu (8.14.2/8.14.2/Submit) id m5B1LMhZ032046;\n\tTue, 10 Jun 2008 20:21:22 -0500\r\nDate: Tue, 10 Jun 2008 20:21:22 -0500\r\nTo: Michael Schuerig &lt;michael@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20080611012122.GA31840@...&gt;\r\nReferences: &lt;20080610162533.aa9a3fb355bd767352688c621504df24.90c0c6dd89.wbe@...&gt; &lt;200806110258.14333.michael@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nIn-Reply-To: &lt;200806110258.14333.michael@...&gt;\r\nUser-Agent: Mutt/1.5.17 (2007-11-01)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Re: Pretty URLs, sessions, and no cookies\r\nX-Yahoo-Group-Post: member; u=11652427; y=16BQ__xAzbA3Y1HMLRq3kls6QzuB_R760tYvxMO0oO0nTcTAoNHTqFDz2A\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\nMichael-\n\nI&#39;ve had good luck with a two-step page load: the html page is rendered\nregardless of identity/authorization and is identical for all users (and\nis thus cache-able). There *is* an identity cookie on the client (how\nit got there is a longer explanation, not entirely REST-copacetic, but\nas close as I could get). Once the page loads, javascript make a second\nXHR request which &quot;customizes&quot; the page (dom insertions that include\nhypertext links to other resources only this user can get at). The url\nfor that second request *does* include the username, meaning it is a\nresource unique to this user. I do authenticate that second request w/\nthe secure identity token in the cookie (again, not so REST). There\nis no application state on the server. The code ends up being nicely\norganized as a set of resources easily manageable w/ a simple framework.\nThere&#39;s more to it (AtomPub & JSONRest interfaces) but you get the idea.\nObviously, not a universally acceptable solution (requires javascript,\nuses cookies, etc.) but works well in my case.\n\n--peter keane\nhttp://dase.googlecode.com\n\nOn Wed, Jun 11, 2008 at 02:58:14AM +0200, Michael Schuerig wrote:\n&gt;    On Wednesday 11 June 2008, Etan Wexler wrote:\n&gt;    &gt; Michael Schuerig wrote (in\n&gt;    &gt;\n&gt;    &gt; &lt;[1]http://tech.groups.yahoo.com/group/rest-discuss/message/10894&gt;):\n&gt;    &gt; &gt; When I have a *user* interface where some resources need\n&gt;    &gt; &gt; authenticated access, then I need some kind of session, don&#39;t I?\n&gt;    &gt;\n&gt;    &gt; When you have a user interface in which access to some resources\n&gt;    &gt; requires authentication (and, presumably, authorization), there is no\n&gt;    &gt; need for maintaining a session at the origin server.\n&gt;    Most respondents have apparently understood &quot;session&quot; as meaning\n&gt;    server-side conversational state. That&#39;s not what I had in mind, I&#39;m\n&gt;    quite content with authentication information or possibly a set of\n&gt;    capabilities.\n&gt;    &gt; As the\n&gt;    &gt; administrator of the origin server, all that you need is that each\n&gt;    &gt; request bear acceptable credentials. Even that is not quite correct,\n&gt;    &gt; because a request that fails to bear acceptable credentials should\n&gt;    &gt; prompt a response that bears a challenge for credentials. Did I miss\n&gt;    &gt; something?\n&gt;    Possibly. Let&#39;s say I have a resource where the representation depends\n&gt;    on the credentials of the requester. I could associate each\n&gt;    representation with its own URL, but that&#39;s not what I want.\n&gt;    Essentially, I only ever want to have one canonical URL and a requester\n&gt;    gets to see what their credentials allow. In particular, someone with\n&gt;    no credentials at all may still get to see a rudimentary\n&gt;    representation. In such a scenario there is no point in challenging the\n&gt;    requester -- human user. They may decide to log in or log in with\n&gt;    different credentials, but that&#39;s up to the them.\n&gt;    Also, as far as I can tell, an http auth challenge involves popping up\n&gt;    a\n&gt;    browser-level dialog. I take it, most users aren&#39;t accustomed to this.\n&gt;    And, at any rate, it modally drags them out of the application context\n&gt;    without a chance for inline help messages or &quot;I forgot my password&quot;\n&gt;    links.\n&gt;    I&#39;d really like to make this work, but I&#39;m not convinced there is a\n&gt;    way.\n&gt;    Michael\n&gt;    --\n&gt;    Michael Schuerig\n&gt;    mailto:[2]michael@...\n&gt;    [3]http://www.schuerig.de/michael/\n&gt;    \n\n"}}