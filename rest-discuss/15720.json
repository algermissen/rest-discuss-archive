{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"IhQZikULLEer_nDnmecQFgsIM8T7YmVh5K7tToyCU6UGO4CBWXt8XYnrnetUeJsKyKu8dB9bb0uWyrmlqmqDyBpufQuFzjdvU95YfiOLXQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1276805793","msgId":15720,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjE3MTQxNjMzLjU1NTdjY2NhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGluU0ktYW9NbWRVZFRjcVZNZnRDYy15U0tqVUU3UDFDaTFoUDN4UUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA4MTAwMzIzLmFhNmVmOTllLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVjh5eE4tUjRBRldBdk5hTHFwZWItdWY3Y08wV0ZtWDdEcGFSWEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjA5MTgwMDA1LjhhOGRhNzBiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluVDRJdjUzRWhyaFBMR0dZYUxlMVFmaHBHVjFQTTE1NmNYQ0toWkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjExMDgxNDE4LjZkZGE0N2E5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltRHFhWHVIUE52eS1RVUZaa0ZNYUhwU2NnSkNHLXNQcUtxRndzdUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjExMjMzMjU4LmUxYjdlNWY3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltelViTmdyQnVuTXhHTGlLMGZvZDFSVlhxOGtXZTFkOC1LSEs2YkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjEyMTAzMjU1LjgwYzE1YThiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluWUtUbk5oZmVTMl9UX1BJRklqV0p5SEtuUmJDWnFFTnM1MUhWV0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjE0MTAwNjU5LmVjNmU0OGU1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltajVkRXdDdTVIekV3ZWRtZWtJYkFuQjNTbUh4elU0N2xCN01JeUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrWVhOd3FDZktUZTRXVUdxc3BwMGwzQUhvakp6ZzUzZjVKem5PRkBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwNjE0MTgyMjM0LjYxMmEwYTU3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMTAwNjE0MTgzNjI5LmUwZDNlZjAwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluU0ktYW9NbWRVZFRjcVZNZnRDYy15U0tqVUU3UDFDaTFoUDN4UUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15704,"nextInTopic":0,"prevInTime":15719,"nextInTime":15721,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"... My position is that assigning URIs to variants is both a REST constraint and HTTP best-practice.  I haven t said conneg is useless without ","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 68019 invoked from network); 17 Jun 2010 20:17:24 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 17 Jun 2010 20:17:24 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 17 Jun 2010 20:17:24 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 9E8BD509DE;\n\tThu, 17 Jun 2010 16:17:10 -0400 (EDT)\r\nDate: Thu, 17 Jun 2010 14:16:33 -0600\r\nTo: Peter Williams &lt;pezra@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100617141633.5557ccca.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTinSI-aoMmdUdTcqVMftCc-ySKjUE7P1Ci1hP3xQ@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;20100608100323.aa6ef99e.eric@...&gt;\n\t&lt;AANLkTinV8yxN-R4AFWAvNaLqpeb-uf7cO0WFmX7DpaRX@...&gt;\n\t&lt;20100609180005.8a8da70b.eric@...&gt;\n\t&lt;AANLkTinT4Iv53EhrhPLGGYaLe1QfhpGV1PM156cXCKhZ@...&gt;\n\t&lt;20100611081418.6dda47a9.eric@...&gt;\n\t&lt;AANLkTimDqaXuHPNvy-QUFZkFMaHpScgJCG-sPqKqFwsu@...&gt;\n\t&lt;20100611233258.e1b7e5f7.eric@...&gt;\n\t&lt;AANLkTimzUbNgrBunMxGLiK0fod1RVXq8kWe1d8-KHK6b@...&gt;\n\t&lt;20100612103255.80c15a8b.eric@...&gt;\n\t&lt;AANLkTinYKTnNhfeS2_T_PIFIjWJyHKnRbCZqENs51HVW@...&gt;\n\t&lt;20100614100659.ec6e48e5.eric@...&gt;\n\t&lt;AANLkTimj5dEwCu5HzEwedmekIbAnB3SmHxzU47lB7MIy@...&gt;\n\t&lt;AANLkTikYXNwqCfKTe4WUGqspp0l3AHojJzg53f5JznOF@...&gt;\n\t&lt;20100614182234.612a0a57.eric@...&gt;\n\t&lt;20100614183629.e0d3ef00.eric@...&gt;\n\t&lt;AANLkTinSI-aoMmdUdTcqVMftCc-ySKjUE7P1Ci1hP3xQ@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nPeter Williams wrote:\n&gt;\n&gt; &gt; Using Content-Location, we can associate one ap=\r\nplication/xhtml+xml\n&gt; &gt; variant with multiple combinations of selection hea=\r\nders, i.e. a\n&gt; &gt; one-to-many mapping. =A0This can&#39;t be done without some me=\r\nans of\n&gt; &gt; distinguishing one variant from another, without sniffing conten=\r\nt.\n&gt; \n&gt; Providing a `content-location` allows more efficient caching by\n&gt; a=\r\nllowing mapping a variety of selection headers to a single entity in\n&gt; cach=\r\nes.  Agreed.  On the other hand, vigorous use of `etag` would\n&gt; provide sim=\r\nilar improvements to the cache hit rate.  It is a big step\n&gt; from &quot;Content-=\r\nLocation can improve cache hit rates&quot; to, &quot;conneg is\n&gt; useless without Cont=\r\nent-Location&quot;.\n&gt; \n\nMy position is that assigning URIs to variants is both a=\r\n REST constraint\nand HTTP best-practice.  I haven&#39;t said &quot;conneg is useless=\r\n without\nContent-Location,&quot; particularly as I&#39;ve kept saying &quot;except for\nca=\r\nching&quot;... I get your meaning, though, but &quot;Content-Location can\nimprove cac=\r\nhe hit rates&quot; is your strawman, not my position.\n\nOver the course of the th=\r\nread, I may have staked out too rigid a\nposition, that the only way to dist=\r\ninguish variants from one another is\nby assigning Content-Location URIs to =\r\nthem.  You are correct, Etag may\nbe used to distinguish variants, and this =\r\ncan increase cache hit rates\neven when Content-Location is absent.\n\nBut, th=\r\nis does not follow REST, so it does not change my advice...\n\n&gt;\n&gt; A conformi=\r\nng cache will not respond with an inappropriate\n&gt; representation if the ser=\r\nver sends an appropriate `vary` header.\n&gt;\n\nOK.  I was giving one example of=\r\n aberrant cache behavior, which doesn&#39;t\napply to the specifics of using Eta=\r\ng in combination with Vary.  My way\nof doing things is to make my system co=\r\nmpliant with HTTP 1.0 caches to\nthe fullest extent possible, because last I=\r\n heard there were still\nplenty of HTTP 1.0 caches deployed out there on the=\r\n real-world Web.\n\nSo to my way of thinking, conneg should work independentl=\r\ny of caching\nscheme, i.e. Etag or Expires both work when Vary is combined w=\r\nith\nContent-Location... which is probably another reason for that SHOULD.\n\n=\r\n&gt;\n&gt; (Though it might miss a valid chance to serve a cached entity.)\n&gt;\n\nThe =\r\nother drawback to relying on Etag to cover for a missing Content-\nLocation,=\r\n is that on the real-world, anarchically-scalable Web, myriad\ncases exist w=\r\nhere a cache may legitimately decide to serve a stale\nrepresentation.  This=\r\n loss of control is the tradeoff to caching.  By\nomitting Content-Location,=\r\n you&#39;re preventing the cache from identifying\nthe proper variant to send, f=\r\norcing it to contact the origin server,\nwhich presumably it had good reason=\r\n to avoid doing (like if that server\nis unavailable from the cache&#39;s locati=\r\non).  When Content-Location is\nomitted, much uncertainty is introduced whic=\r\nh is otherwise avoided by\nfollowing the SHOULD.\n\n&gt;\n&gt; Private caches at the =\r\nuser agent are less susceptible to selection\n&gt; criteria explosion.  Repeate=\r\nd requests from a single user agent are\n&gt; likely to all be quite similar.  =\r\nIn my experience private caches are\n&gt; far more important than caching inter=\r\nmediates, anyway.\n&gt; \n\nMy experience disagrees with your experience.  When I=\r\n first started\ndoing Web development in late 1993, it was by downloading Mo=\r\nsaic via my\nCompuserve account, and creating pages on my local filesystem. =\r\n My\nfirst experience with HTTP was in 1994, after I&#39;d opened my own ISP.  I=\r\n\nwas an early member of the Colorado Internet Cooperative Association,\nwhos=\r\ne board consisted of most of the authors of &quot;UNIX System\nAdministration Han=\r\ndbook&quot;.\n\nOne of whom was Evi (who had a second home in Steamboat Springs, b=\r\nut\nwent with my non-coop competition because I only offered PPP and she\ndem=\r\nanded CSLIP), who, in her position as a professor at CU-Boulder, was\ninstru=\r\nmental in the student-led development of squid.  The first anyone\nreally ev=\r\ner heard of squid was at a coop meeting, to an ISP-dominated\naudience.  So =\r\nin my (heavily-ISP-weighted) experience, shared caches\nare far more importa=\r\nnt than private.\n\nBut, this is just one preference vs. another.  I do not t=\r\nake the view\nthat REST constraints which don&#39;t apply to a particular system=\r\n, are\nirrelevant.  Thus, constraints intended to increase visibility to\nint=\r\nermediary components are still part of the style, even when we only\ncare ab=\r\nout private caches which don&#39;t require us to follow such\nconstraints.\n\nYou =\r\nare presenting an edge case of not caring about shared caches,\nshowing that=\r\n Content-Location isn&#39;t required.  I cannot be persuaded\nthat any edge case=\r\n nullifies the best-practice advice I&#39;m giving.  I\nonly agree that your edg=\r\ne case exists, not that you&#39;re better off by\nnot meeting the identification=\r\n of resources constraint.\n\nREST is the Platonic Ideal for the long-term dev=\r\nelopment of a system --\njust because you&#39;re setting Cache-Control: private =\r\ntoday, doesn&#39;t mean\nyou shouldn&#39;t be able to change it tomorrow, by just ch=\r\nanging the Cache-\nControl header.  If your system wasn&#39;t designed with a lo=\r\nng-term view\nof REST, then you can&#39;t just change Cache-Control, you must al=\r\nso add\nContent-Location.\n\nSo what I&#39;m saying is, start with Content-Locatio=\r\nn even if you don&#39;t\nsee an immediate need for it.  By making it your habit =\r\nto follow this\nbest practice, you&#39;ll never regret having avoided it.  Inste=\r\nad of\ntailoring my solutions to the specific needs of the system I&#39;m\ndevelo=\r\nping, I follow REST and develop a Uniform Interface, because I\nknow that wo=\r\nrks in the present and will continue to work in the future,\nso I won&#39;t have=\r\n to re-architect any system in response to its evolving\nneeds.  Tweaking an=\r\n existing system&#39;s headers is easier than adding new\nheaders.\n\n&gt;\n&gt; `content=\r\n-location` is a terribly useful header.  Using it does\n&gt; increase the cache=\r\n hit rates for negotiated resources.  However,\n&gt; skipping `content-location=\r\n` in a negotiated response does not violate\n&gt; any of the REST constraints t=\r\nhat i can see.\n&gt; \n\nVariants are resources.  As such, REST requires them to =\r\nbe identified,\nin order for one variant to be distinguishable from another.=\r\n  Etag does\nnot meet this constraint, because Etags are transient, in that =\r\nthey\nchange over time for any given representation.  The purpose of\nassigni=\r\nng a URI is to declare a static mapping.  This is why assigning\nURIs to var=\r\niants is a best practice -- provide one URI for a set of\nEtagged entities t=\r\no map to.\n\nIn HTTP, REST&#39;s requirement of assigning URIs to variants is ref=\r\nlected\nin the SHOULD about Content-Location.  So to apply REST in HTTP, the=\r\n\nSHOULD is followed.  You are pointing to an edge case, where avoiding\nCont=\r\nent-Location can still be made to work.  But you haven&#39;t explained\nwhy mint=\r\ning those URIs is undesirable, i.e. &quot;works without it&quot; does not\njustify avo=\r\niding Content-Location.  &quot;Compression&quot; justifies avoiding\nContent-Location,=\r\n i.e. ignoring the SHOULD, but I still haven&#39;t seen\nany other case where th=\r\nat SHOULD shouldn&#39;t be taken as a MUST (if, that\nis, you&#39;re following REST =\r\nand applying the identification of resources\nconstraint).\n\nI still wouldn&#39;t=\r\n want to touch a non-compression conneg system that\navoids Content-Location=\r\n with a ten-foot pole.  There is no simpler way\nto develop and maintain a c=\r\nonneg system, than to assign URIs to\nvariants (except for compression), eve=\r\nn if those URIs aren&#39;t exposed\nbeyond the firewall.  I&#39;ve developed enough =\r\nconneg systems to know that\nat some point, most likely more than one point,=\r\n I will need to examine\nvariants directly, bypassing the negotiation mechan=\r\nism entirely (as\nopposed to testing the mechanism by altering selection hea=\r\nders).\n\nTo me, this is a stronger argument than any edge case where Content=\r\n-\nLocation isn&#39;t technically needed by a caching scheme -- I don&#39;t care,\nas=\r\nsign URIs to your variants anyway, because REST requires it, and\nbecause it=\r\n would be insane to develop and maintain a conneg system\nwithout doing so (=\r\nexcept for compression).  Spoken from experience.\n\nThere is still no downsi=\r\nde to assigning URIs to variants, so I still\ndon&#39;t see the point in examini=\r\nng edge cases.  Why *not* assign URIs to\nvariants?  What is it we&#39;re so des=\r\nperately trying to avoid here, that we\nwould disregard best practice by ign=\r\noring RFC 2616&#39;s SHOULD?  Not\ncaring about shared caching isn&#39;t a reason, p=\r\narticularly given that\nthis is rest-discuss, where our concern is targeting=\r\n the sweet-spot in\nthe deployed Web which allows anarchic scalability (shar=\r\ned caching).\n\nThe identification of resources constraint, applied in HTTP b=\r\ny using\nContent-Location to assign URIs to variants, allows for anarchic\nsc=\r\nalability.  Edge cases where that level of scalability aren&#39;t\nrequired, are=\r\n not sufficient reason not to apply the constraint anyway,\nand don&#39;t change=\r\n best practice.  Best practice in REST is to apply REST\nconstraints and fol=\r\nlow HTTP.  Assigning URIs to variants is required by\nREST and strongly reco=\r\nmmended as best practice by HTTP.  Even if\navoiding this has no downside to=\r\nday, REST development means not assuming\nthat tomorrow&#39;s needs are the same=\r\n as today&#39;s; design for the future.\n\nSo the only advice I can give about as=\r\nsigning URIs to variants, is to\ndo just exactly that.  There is no REST arg=\r\nument *against* doing so,\nand a key REST constraint will be met by followin=\r\ng this best practice.\nThis really is as simple as the black-and-white clari=\r\nty of the advice I\nkeep giving.  Even if one doesn&#39;t uderstand it, I promis=\r\ne you that it&#39;s\nfar easier to learn REST by implementing best practices and=\r\n learning\nfrom them, than trying to learn REST by avoiding best practices i=\r\nn one&#39;s\nimplementations, then trying to rectify the results with REST ex-po=\r\nst-\nfacto.\n\nREST should be any Web system&#39;s long-term goal.  I don&#39;t fault =\r\na system\nfor not implementing a constraint, if applying the constraint carr=\r\nies\nan immediate cost which outweighs the constraint&#39;s long-term benefits.\n=\r\nThis is not such a case.  Identification of resources is fundamental,\nand h=\r\nas no costs to implement.  I would even say that to avoid\nassigning URIs to=\r\n variants, carries greater immediate costs (in terms\nof development hours a=\r\nlone) than are incurred by assigning them.  So I\nstill don&#39;t see any theore=\r\ntical or cost-benefit reasons to avoid\nassigning URIs to variants.\n\n-Eric\n\n"}}