{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"fvQkULYPNJtBFdyvDLPFHVL43ur_qwHMn1DMNHTxbzgMUwIxY9gQkuyIpi3rkbqxM9ffFYl6y8OUbR5fcsoBxUqLQuTWaseh","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Acceptable Responses","postDate":"1173096341","msgId":8074,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVzaDEybCs3Z3R0QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":8075,"prevInTime":8073,"nextInTime":8075,"topicId":8074,"numMessagesInTopic":13,"msgSnippet":"I apologise up front for what will be a rather lengthy post to the group. I would like some feedback on something that I ve been thinking hard about recently:","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 34049 invoked from network); 5 Mar 2007 12:06:30 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m43.grp.scd.yahoo.com with QMQP; 5 Mar 2007 12:06:30 -0000\r\nReceived: from unknown (HELO n19d.bullet.scd.yahoo.com) (66.218.67.244)\n  by mta10.grp.scd.yahoo.com with SMTP; 5 Mar 2007 12:06:30 -0000\r\nReceived: from [66.218.69.4] by n19.bullet.scd.yahoo.com with NNFMP; 05 Mar 2007 12:05:41 -0000\r\nReceived: from [66.218.66.78] by t4.bullet.scd.yahoo.com with NNFMP; 05 Mar 2007 12:05:41 -0000\r\nDate: Mon, 05 Mar 2007 12:05:41 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;esh12l+7gtt@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nSubject: Acceptable Responses\r\nX-Yahoo-Group-Post: member; u=189321215; y=SMjgSxvJlyza-r72Oj-QBTZC_U9cla9Xbas1FIXkjSJy6kF6-FRpay04\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\nI apologise up front for what will be a rather lengthy post to the \ngroup.\n=\r\n\nI would like some feedback on something that I&#39;ve been thinking hard \nabou=\r\nt recently: &quot;acceptable responses&quot;.\n\nWhat do I mean by this? Well, we all k=\r\nnow that one of the strengths \nof REST is that the interface is &#39;well-known=\r\n&#39; so we don&#39;t need to use \nWSDL (or equivalent) to bind to a RESTful endpoi=\r\nnt - we just need a \nURL.\n\nAs an example, we can quite happily have the fol=\r\nlowing \nRequest/Response to do a directory listing:\n\n--&gt;\nGET /foo/\n\n&lt;--\n200=\r\n OK\nContent-Type: text/html\n\n&lt;html&gt;\n&lt;body&gt;\n&lt;a href=3D&quot;dir1/&quot;&gt;dir1&lt;/a&gt;\n&lt;a hr=\r\nef=3D&quot;dir2/&quot;&gt;dir2&lt;/a&gt;\n&lt;a href=3D&quot;file.txt/&quot;&gt;Text File&lt;/a&gt;\n&lt;a href=3D&quot;file.h=\r\ntml/&quot;&gt;HTML File&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\nNow, that&#39;s all fine and uncontrovers=\r\nial. A cient can parse the \nresponse representation, discover the text/html=\r\n content type, load \nthe body into a DOM and select each href - perhaps wit=\r\nh the \nXPath //@href\n\nThis also allows the response representation to be lo=\r\naded in a \nbrowser and viewed by a human.\n\nHowever...\n\nWhat if the client i=\r\ns a robot?\n\nThe above example text/html representation will probably be fin=\r\ne for \nmost robots, such as search crawlers. But I wonder if this is really=\r\n \nnothing more clever than screen-scraping. (Note that this approach \nwould=\r\n treat all href URLs the same)\n\nThe obvious answer to this is to support mu=\r\nltiple representations. In \nthe example above, the request implicitly carri=\r\nes an Accept: */* \nheader value. However, a robot might make the following =\r\nrequest \ninstead:\n\n--&gt;\nGET /foo/\nAccept: application/rdf+xml\n\n&lt;--\n200 OK\nCo=\r\nntent-Type: application/rdf+xml\n\n&lt;?xml version=3D&quot;1.0&quot;?&gt;\n&lt;rdf:RDF&gt;\n...\n&lt;rdf=\r\n:RDF&gt;\n\nNow the robot has obtained an RDF/XML representation of the director=\r\ny \ncontents. This is no longer simple screen-scraping, but semantically \nme=\r\naningful data.\n\nAgain, this isn&#39;t terribly controversial. But note that we =\r\nnow have \ntwo alternate representations of the some resource and we have \nd=\r\necided which is the default. Furthermore, there could be many other \naltern=\r\nate representation formats - each as equally &#39;standard&#39; as \ntext/html or ap=\r\nplication/rdf+xml - such as text/plain or text/csv and \nso on.\n\nThis means =\r\nthat any of the following requests might be acceptable:\n\n--&gt;\nGET /foo/\nAcce=\r\npt: text/plain\n\n--&gt;\nGET /foo/\nAccept: text/csv\n\n--&gt;\nGET /foo/\nAccept: text/=\r\nhtml\n\n--&gt;\nGET /foo/\nAccept: application/rdf+xml\n\nThis now draws me towards =\r\nthe crux of my question.\n\nHow does a client discover the supported represen=\r\ntations?\n\nThe client might ping the resource with each known (to the client=\r\n) \nContent-Type, in the following manner:\n\n--&gt;\nHEAD /foo/\nAccept: applicati=\r\non/xml\n\n&lt;--\n406 Not Acceptable\n\n--&gt;\nHEAD /foo/\nAccept: text/html\n\n&lt;--\n200 O=\r\nK\nContent-Type: application/rdf+xml\n\n\nThis has several drawbacks to it (lat=\r\nency and inefficiency both jump \nto mind).\n\nSome of you may be thinking tha=\r\nt 300 Multiple Choices is the answer. \nBut I suspect that, for this issue, =\r\nthe problem becomes circular at \nthis point (what format should the 300 res=\r\nponse representation itself \nuse?).\n\nFurthermore, this issue is implicit in=\r\n many requests. Consider what \nthe representation format should be for any =\r\nof the following:\n\n1. An OPTIONS request (what are the supported representa=\r\ntion formats?)\n2. A 406 Not Acceptable response (what are acceptable repres=\r\nentation \nformats?)\n3. A 300 Multiple Choices response\n\nAt first blush, we =\r\nmight decide that what we need is a standard \nrepresentation. I thought abo=\r\nut that and decided that it makes little \nsense - mostly for pragmatic and =\r\npractical reasons, but also because \nit seems to fall foul of the same anti=\r\n-pattern as WSDL.\n\nThen ... I thought about how allowed methods are communi=\r\ncated:\n\n--&gt;\nOPTIONS /foo/\n\n&lt;--\n200 OK\nAllow: GET, HEAD, POST, PUT, DELETE\n\n=\r\nI wonder if the answer to the dilemna outlined above is that we need \nan eq=\r\nuivalent HTTP header for Content-Types? Consider the following:\n\n--&gt;\nOPTION=\r\nS /foo/\n\n&lt;--\n200 OK\nAllow: GET, HEAD, POST, PUT, DELETE\nAcceptable: text/pl=\r\nain, text/html, application/rdf+xml\n\n--&gt;\nGET /foo/\nAccept: model/*\n\n&lt;--\n406=\r\n Not Acceptable\nAcceptable: text/plain, text/html, application/rdf+xml\n\n\n\nT=\r\nhis seems clean and elegant to me. What do you all think?\n\nRegards,\nAlan De=\r\nan\nhttp://thoughtpad.net/who/alan-dean/\n\n\n"}}