{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"fgRrTZUL-XUXsOD87fS4Yo8cZ4dArDzXVyjpdI0728lavZEhF9zPve0LIfs5LMpb9zLmp27lfNsJNGGATsHH-c2pdvkUZ6fpxgHD7wZ8Eg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: REST, HTTP, Web, Internet [was Atom feed vs. list of orders]","postDate":"1283982865","msgId":16504,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTA4MTU1NDI1LmMyZTE3NTg2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGk9aHdlOEVGTnhTV0hYZTRMR05hPVBhSjV5ZGRBVUIxc0FBSnR5cUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDIwMTAwOTA3MDcyODE0LmUyZTgyMjJiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGluWlhQWEJVMGlTLVdtbXVZZk9VWXRLR2V5WW9zZGRIdWQ3aD01a0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9dzNpSk16Y3l3QW9lWkRrMXo3aWh3b2EzRlk9b0picjYzQzd1a0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwOTA4MTQyODE0LjcyNjhkZmE1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9cHRYcFZEVGNzU01BMnM1dWp0YkV1aW4tZTJiPWhZOVdtMFoxX0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9MW11UDRxUk5jcTNuMTNPQ2owanpESmtNVkt5RS1xKy1COSs1ZkBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGludWlhcU84a0Y4TTV3a3lMMityengrU3dZK0RlMHpfbzJQaTBHeEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGltMjNFc3pHNUNHUTAtOVZEbTNxYVQ1eTBhOVYrTXZURTJIMXlYV0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9MHZYZDBvMHdxZDQraWY5dnBmamllUjVkY2hfc2NRQ0pubWh5a0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrbmZObTU0TmJNQTJVK2RaRmVrWlRTOXNfRDNaamtnR2lvOHpKX0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMWFSMHNpPXJ0TkFDbkZqTzNfbUhnZm5laD09WVczRXdOQUROeUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9dHRRdlVvdkpnWVdoQ3FXQi1BR19NNGFoMFU2V2pQV2FOdW1jdkBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrNVowQzV4K01VbW9nYVhBUWVHS2ltOTNkVnhZVjNkZGExN3hVS0BtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGltdkpCUjh6X2swNDdxUUNyV05aek52clUwSkpudjdoV24ySl9nZEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9aHdlOEVGTnhTV0hYZTRMR05hPVBhSjV5ZGRBVUIxc0FBSnR5cUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16502,"nextInTopic":16506,"prevInTime":16503,"nextInTime":16505,"topicId":16269,"numMessagesInTopic":139,"msgSnippet":"... No, what it means is that unregistered identifiers from the experimental tree aren t self-descriptive.  The *only* exception to this that I can think of,","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34105 invoked from network); 8 Sep 2010 21:54:24 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 8 Sep 2010 21:54:24 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 8 Sep 2010 21:54:24 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id B4263509DD;\n\tWed,  8 Sep 2010 17:54:22 -0400 (EDT)\r\nDate: Wed, 8 Sep 2010 15:54:25 -0600\r\nTo: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;\r\nCc: Bob Haugen &lt;bob.haugen@...&gt;, REST-Discuss Group Discussion\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100908155425.c2e17586.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=hwe8EFNxSWHXe4LGNa=PaJ5yddAUB1sAAJtyq@...&gt;\r\nReferences: &lt;20100907072814.e2e8222b.eric@...&gt;\n\t&lt;AANLkTinZXPXBU0iS-WmmuYfOUYtKGeyYosddHud7h=5k@...&gt;\n\t&lt;AANLkTi=w3iJMzcywAoeZDk1z7ihwoa3FY=oJbr63C7uk@...&gt;\n\t&lt;20100908142814.7268dfa5.eric@...&gt;\n\t&lt;AANLkTi=ptXpVDTcsSMA2s5ujtbEuin-e2b=hY9Wm0Z1_@...&gt;\n\t&lt;AANLkTi=1muP4qRNcq3n13OCj0jzDJkMVKyE-q+-B9+5f@...&gt;\n\t&lt;AANLkTinuiaqO8kF8M5wkyL2+rzx+SwY+De0z_o2Pi0Gx@...&gt;\n\t&lt;AANLkTim23EszG5CGQ0-9VDm3qaT5y0a9V+MvTE2H1yXW@...&gt;\n\t&lt;AANLkTi=0vXd0o0wqd4+if9vpfjieR5dch_scQCJnmhyk@...&gt;\n\t&lt;AANLkTiknfNm54NbMA2U+dZFekZTS9s_D3ZjkgGio8zJ_@...&gt;\n\t&lt;AANLkTik1aR0si=rtNACnFjO3_mHgfneh==YW3EwNADNy@...&gt;\n\t&lt;AANLkTi=ttQvUovJgYWhCqWB-AG_M4ah0U6WjPWaNumcv@...&gt;\n\t&lt;AANLkTik5Z0C5x+MUmogaXAQeGKim93dVxYV3dda17xUK@...&gt;\n\t&lt;AANLkTimvJBR8z_k047qQCrWNZzNvrU0JJnv7hWn2J_gd@...&gt;\n\t&lt;AANLkTi=hwe8EFNxSWHXe4LGNa=PaJ5yddAUB1sAAJtyq@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: REST, HTTP, Web, Internet [was Atom feed vs.\n list of orders]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAnt=F3nio Mota wrote:\n&gt; \n&gt; So, if they are good citizens, they should be aw=\r\nare that is allowed\n&gt; by those RFCs to wich they should comply with, the ex=\r\nistence of\n&gt; media-types not-registered with IANA that start with a &#39;x&#39;. An=\r\nd if\n&gt; they know of their existence they should know what to do with them.\n=\r\n&gt;\n\nNo, what it means is that unregistered identifiers from the experimental=\r\n\ntree aren&#39;t self-descriptive.  The *only* exception to this that I can\nthi=\r\nnk of, is that artifiact of a bygone age, application/x-www-form-\nurlencode=\r\nd.\n\n&gt;\n&gt; For instance, treat\n&gt; \n&gt; application/x.mytopic+xml\n&gt; \n&gt; as if it wa=\r\ns\n&gt; \n&gt; application/xml\n&gt; \n\nYes, according to RFC 3023, you MAY do that, but=\r\n it&#39;s still an opaque\nidentifier, and you can&#39;t bank on that behavior.  For=\r\n example, serving\nXBEL as application/xml, or treating application/xbel+xml=\r\n as\napplication/xml, is not self-descriptive because XBEL defines the\n&lt;book=\r\nmark&gt; element as a link.  How can any intermediary infer this by\ntreating t=\r\nhe payload as application/xml?\n\nYour argument infers that application/xml i=\r\ns a valid identifier in REST\nsystems, which everyone including Roy has said=\r\n it isn&#39;t.  The\nidentifier must specify the proper processing model, if int=\r\nermediaries\nhave to fall back to application/xml then they&#39;ve obviously not=\r\n\nunderstood that the processing model is different for your type.\nIntermedi=\r\naries MAY treat application/atom+xml as application/xml if\nthey don&#39;t grok =\r\nAtom, but what good does that do?\n\n&gt;\n&gt; Now, how those messages could comply=\r\n with the self-descriptive\n&gt; constraint of REST, that implies that the type=\r\n is registered and the\n&gt; registry points to a specification and etc... ? Be=\r\ncause the\n&gt; &quot;consenting systems&quot; that reached a &quot;mutual agreement&quot;, the &quot;pa=\r\nrties\n&gt; exchanging them&quot; that reached a  &quot;active agreement&quot; took care of\n&gt; =\r\nthat. For such agreement a specification must exist and a place, or\n&gt; regis=\r\ntry, where to store it and find it when necessary, rigth?\n&gt; \n\nNo intermedia=\r\nry can reach a &quot;mutual agreement&quot; about an unregistered\ntype.  Which is why=\r\n, on the Web, self-descriptive messaging requires\nexactly what Roy says it =\r\nrequires:\n\n&quot;Self-descriptive means that the type is registered and the regi=\r\nstry\npoints to a specification and the specification explains how to proces=\r\ns\nthe data according to its intent.&quot;\n\nSince X identifiers are by definition=\r\n not registerable, then they are\nnot, by definition, self-descriptive becau=\r\nse they do not, by definition,\npoint to a specification.  If only the sende=\r\nr and recipient agree to the\nmeaning, then it&#39;s just as Roy describes in Ch=\r\napter 6:  a library-based\nAPI, not a network-based API, therefore not a uni=\r\nform interface.\n\n&gt;\n&gt; So, a non IANA registered type like &quot;application/x.myt=\r\nopic+xml&quot; is\n&gt; self descriptive to intermediaries that comply with RFC2046 =\r\n- because\n&gt; they are defined there -, and is self descriptive to the &quot;conse=\r\nnting\n&gt; systems&quot; and the &quot;parties exchanging them&quot; because they so agreed.\n=\r\n&gt; \n\nReducing any intermediary to behaving as a dumb router, exactly the\nsit=\r\nuation REST tries to avoid by requiring self-descriptive messaging.\nSee Cha=\r\npter 6.  You can&#39;t say that &quot;application/x.mytopic+xml&quot; is\nregistered by po=\r\ninting to RFC 2046&#39;s statement that it&#39;s unregisterable.\nThat doesn&#39;t make =\r\nany sense.\n\n&gt; \n&gt; And also this my point of view is not to encourage such be=\r\nhavour. It\n&gt; should be discouraged but it is possible to do it when necessa=\r\nry.\n&gt; While maintaning the constraints of REST.\n&gt; \n\nSending opaque identifi=\r\ners that aren&#39;t in any registry, meets self-\ndescriptiveness, how?  Where d=\r\no I go to look up the meaning?  The\nexistence of unregistered experimental =\r\nidentifiers isn&#39;t proof that\nunregistered identifiers are self-descriptive.=\r\n  Not for the Web, where\nthe deployed infrastructure is entirely geared tow=\r\nards the common\nunderstanding of a limited number of ubiquitous, registered=\r\n identifiers.\n\n-Eric\n\n"}}