{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":214300837,"authorName":"Jakob Strauch","from":"&quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;","profile":"jakobstrauch","replyTo":"SENDER","senderId":"k5_j8z5psQAV05LX-sl3BjcfkE_o8XTzMSXzLjFUbCeHfgDir4pI6v6TIAJd7K50OUsckdnJOp85kUFZWU4kRDdrc01dV_B0HJjNZa0","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Best approach for a complex API?","postDate":"1324409592","msgId":18114,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpjcW50bys3bm80QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2QzAzRTI0NzhAUFJJU00uY2FmZmVpbmUtaXQubmV0Pg=="},"prevInTopic":18113,"nextInTopic":18115,"prevInTime":18113,"nextInTime":18115,"topicId":18105,"numMessagesInTopic":11,"msgSnippet":"AFAIK, openrasta is more stable (remember wcf web api is still developer preview). While i didnt spend much time with openrasta, i can say, that the usage of","rawEmail":"Return-Path: &lt;jakob.strauch@...&gt;\r\nX-Sender: jakob.strauch@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 54138 invoked from network); 20 Dec 2011 19:33:13 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 20 Dec 2011 19:33:13 -0000\r\nX-Received: from unknown (HELO ng11-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.88)\n  by mta1.grp.sp2.yahoo.com with SMTP; 20 Dec 2011 19:33:13 -0000\r\nX-Received: from [98.139.164.123] by ng11.bullet.mail.bf1.yahoo.com with NNFMP; 20 Dec 2011 19:33:12 -0000\r\nX-Received: from [69.147.65.147] by tg4.bullet.mail.bf1.yahoo.com with NNFMP; 20 Dec 2011 19:33:12 -0000\r\nX-Received: from [98.137.34.73] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 20 Dec 2011 19:33:12 -0000\r\nDate: Tue, 20 Dec 2011 19:33:12 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;jcqnto+7no4@...&gt;\r\nIn-Reply-To: &lt;3DDD0BE655869D4EA506652B3803AEF6C03E2478@...-it.net&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jakob Strauch&quot; &lt;jakob.strauch@...&gt;\r\nSubject: Re: Best approach for a complex API?\r\nX-Yahoo-Group-Post: member; u=214300837; y=_u7lzAJZ3POgiXbUqZ1oi_4nOAigIlwXnz7WKqr9b33E1w3o-Ynz\r\nX-Yahoo-Profile: jakobstrauch\r\n\r\nAFAIK, openrasta is more stable (remember wcf web api is still developer pr=\r\neview). While i didnt spend much time with openrasta, i can say, that the u=\r\nsage of the web api framework fits nice in to previous &quot;frameworks&quot;, i=B4ve=\r\n worked with. It covers basic http scenarios and also RESTful design. More =\r\nimportant: it is community-driven, like openrasta. \n\nMaybe i could tell you=\r\n more, if i would have play a little more with openrasta. I=B4ve seen some =\r\npretty nice stuff in your talk on infoQ. But i=B4m not the right guy to com=\r\npare both frameworks...\n\nJakob\n\n--- In rest-discuss@yahoogroups.com, Sebast=\r\nien Lambla &lt;seb@...&gt; wrote:\n&gt;\n&gt; Jakob,\n&gt; \n&gt; is there something in OpenRasta=\r\n you believe would be better solved using WebAPI?\n&gt; \n&gt; Sebastien\n&gt; ________=\r\n________________________________\n&gt; From: rest-discuss@yahoogroups.com [rest=\r\n-discuss@yahoogroups.com] on behalf of Jakob Strauch [jakob.strauch@...]\n&gt; =\r\nSent: 20 December 2011 07:19\n&gt; To: rest-discuss@yahoogroups.com\n&gt; Subject: =\r\n[rest-discuss] Re: Best approach for a complex API?\n&gt; \n&gt; Did you try the WC=\r\nF Web API [1]? It is still a preview release, but work already very nicely.=\r\n\n&gt; \n&gt; Btw. i=B4m using also hal+xml, but i worked on an own serializer (and=\r\n formatter for the web api) with a much more convient way to work with hal.=\r\n I will release a first version soon...\n&gt; \n&gt; Cheers,\n&gt; Jakob\n&gt; \n&gt; \n&gt; [1] ht=\r\ntp://wcf.codeplex.com/wikipage?title=3DWCF%20HTTP\n&gt; \n&gt; \n&gt; --- In rest-discu=\r\nss@yahoogroups.com, Darrel Miller &lt;darrel.miller@&gt; wrote:\n&gt; &gt;\n&gt; &gt; One optio=\r\nn would be to use XML variant of Hal.  There is a .net based\n&gt; &gt; parser ava=\r\nilable here http://hal.codeplex.com.   Hal is a generic media\n&gt; &gt; type but =\r\nyou can convey specific semantics using extended link relations.\n&gt; &gt;  It is=\r\n easy to specify hierarchies of resources and has a standard way of\n&gt; &gt; rep=\r\nresenting links.  I also built a path syntax for querying into the\n&gt; &gt; pars=\r\ner but that is not yet part of the spec.\n&gt; &gt;\n&gt; &gt; Darrel\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Mon,=\r\n Dec 19, 2011 at 3:08 PM, J=F8rn Wildt &lt;jw@&gt; wrote:\n&gt; &gt;\n&gt; &gt; &gt; **\n&gt; &gt; &gt;\n&gt; &gt; =\r\n&gt;\n&gt; &gt; &gt; I am at the beginning of a project where we need a web/http-based A=\r\nPI for\n&gt; &gt; &gt; reading and creating complex objects (more on that later). Rig=\r\nht now I\n&gt; &gt; &gt; need\n&gt; &gt; &gt; to decide wether to do this with a SOAP service o=\r\nr a REST API.\n&gt; &gt; &gt;\n&gt; &gt; &gt; SOAP has the benefits of being well understood an=\r\nd having lots of tooling\n&gt; &gt; &gt; thereby making it easy to get up and running=\r\n. REST has some more long term\n&gt; &gt; &gt; benefits but requires a bit more work =\r\nup front.\n&gt; &gt; &gt;\n&gt; &gt; &gt; I would rather do it with REST but doing REST right p=\r\nuts some burden on\n&gt; &gt; &gt; the\n&gt; &gt; &gt; client that I struggle with. It is extre=\r\nmely easy to create a SOAP service\n&gt; &gt; &gt; in .NET using WCF and create a pro=\r\nxy client that works with it. Creating a\n&gt; &gt; &gt; REST client requires a bit m=\r\nore work if it must know how to follow links\n&gt; &gt; &gt; via\n&gt; &gt; &gt; link-relations=\r\n, read (x)forms definitions on the fly and so on.\n&gt; &gt; &gt;\n&gt; &gt; &gt; The API works=\r\n with case files in a case management system (*). A case file\n&gt; &gt; &gt; contain=\r\ns dossiers, dossiers contain documents, and dossiers can be\n&gt; &gt; &gt; associate=\r\nd with various persons and/or organizations (parties) - like for\n&gt; &gt; &gt; inst=\r\nance a responsible party.\n&gt; &gt; &gt;\n&gt; &gt; &gt; So I need to read case files, dossier=\r\ns, binary documents and parties. I\n&gt; &gt; &gt; also\n&gt; &gt; &gt; need to be able to crea=\r\nte those entities and create the hierarchical\n&gt; &gt; &gt; relationship between th=\r\nem. I expect to have web ressources for the\n&gt; &gt; &gt; entities:\n&gt; &gt; &gt; case file=\r\n, dossier, document, party ... and, no, I am not going to expose\n&gt; &gt; &gt; my\n&gt;=\r\n &gt; &gt; internal entity types as web objects, there will be some kind of\n&gt; &gt; &gt;=\r\n transformation to a public facing representation.\n&gt; &gt; &gt;\n&gt; &gt; &gt; My first des=\r\nign question is; what content type should I use for\n&gt; &gt; &gt; representing\n&gt; &gt; =\r\n&gt; these entities? By using HTML I can use &lt;form&gt; and &lt;a&gt; as hypermedia\n&gt; &gt; =\r\n&gt; controls - but then there is no well known machine readable representatio=\r\nn\n&gt; &gt; &gt; of the entities except RDFa which I have found rather difficult to =\r\nuse due\n&gt; &gt; &gt; to lack of tooling in .NET.\n&gt; &gt; &gt;\n&gt; &gt; &gt; I could also use some=\r\n proprietary XML variation. That would solve the\n&gt; &gt; &gt; entity\n&gt; &gt; &gt; represe=\r\nntation but leave me without well known hypermedia controls. That\n&gt; &gt; &gt; cou=\r\nld although be fixed by allowing elements like ATOM links and such in\n&gt; &gt; &gt;=\r\n the\n&gt; &gt; &gt; XML.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Initial scenario: the API must support creation=\r\n of a case file, adding a\n&gt; &gt; &gt; dossier, and associate various parties to i=\r\nt. That can be a two step\n&gt; &gt; &gt; operation - 1) post case file data, 2) post=\r\n dossier data with reference to\n&gt; &gt; &gt; (1) and included party references. Th=\r\ne result would probably be a &quot;403\n&gt; &gt; &gt; created&quot; with a link to the new cas=\r\ne file resource.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Second scenario: add additional binary documen=\r\nts to the dossier. That\n&gt; &gt; &gt; should\n&gt; &gt; &gt; be easy with the dossier represe=\r\nntation having a link to its document\n&gt; &gt; &gt; collection such that the client=\r\n can post new documents to the collection.\n&gt; &gt; &gt; It\n&gt; &gt; &gt; should be possibl=\r\ne to represent a document upload using only standard HTTP\n&gt; &gt; &gt; headers, po=\r\nsted content type, and binary data in the body.\n&gt; &gt; &gt;\n&gt; &gt; &gt; My biggest conc=\r\nern is what content types to use in order to make it as\n&gt; &gt; &gt; easy\n&gt; &gt; &gt; to=\r\n use from .NET as possible while still being a &quot;real&quot; REST API?\n&gt; &gt; &gt;\n&gt; &gt; &gt;=\r\n What I would like to be able to do, is to write code like this when\n&gt; &gt; &gt; =\r\ncreating\n&gt; &gt; &gt; for instance a new case file:\n&gt; &gt; &gt;\n&gt; &gt; &gt; // Assume &quot;CaseFil=\r\ne&quot; corresponds to the public facing content type\n&gt; &gt; &gt; CaseFile f =3D new C=\r\naseFile();\n&gt; &gt; &gt; f.Title =3D &quot;A new case file&quot;;\n&gt; &gt; &gt; f.OtherProperties =3D=\r\n ...;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Uri createCaseFileUri =3D ... a way to fetch the URI - ho=\r\nw? ...\n&gt; &gt; &gt; Uri newCaseFileUri =3D createCaseFileUri.SerializeAndPostSomeD=\r\nata(f);\n&gt; &gt; &gt;\n&gt; &gt; &gt; Where would you guys start with such a project? What to=\r\nols would you use\n&gt; &gt; &gt; for\n&gt; &gt; &gt; a C# .NET client (the server is built on =\r\nOpen Rasta)?\n&gt; &gt; &gt;\n&gt; &gt; &gt; Thanks, J=F8rn\n&gt; &gt; &gt;\n&gt; &gt; &gt; (*) I have mentioned th=\r\nis some time ago on this mailing list, but the\n&gt; &gt; &gt; project has been sleep=\r\ning for some time, so now time has come to re-think\n&gt; &gt; &gt; bits of it.\n&gt; &gt; &gt;=\r\n\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Ya=\r\nhoo! Groups Links\n&gt;\n\n\n\n"}}