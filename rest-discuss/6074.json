{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":247945012,"authorName":"Lyle Kopnicky","from":"Lyle Kopnicky &lt;lyle@...&gt;","profile":"qtseep","replyTo":"SENDER","senderId":"BJwGzYLZRdTKSUFZoGSHfI5nNT9pHHg1oudTjdAFd45vqceMJy3Bikns77utpeFuu6ytjuYxJiYEbbteC2mRI7EafySmew","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Cacheability example","postDate":"1145581477","msgId":6074,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ0NDgyRkE1LjMwNDA2MDBAdmVpY29uLmNvbT4=","inReplyToHeader":"PDg3ZnlrN3d5cWYuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+","referencesHeader":"PDQ0NDgwMTA2LjIwOTAxMDNAdmVpY29uLmNvbT4JPDg3MXd2cnlpYmkuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+CTw0NDQ4MjJEQi4xMDcwMjA1QHZlaWNvbi5jb20+IDw4N2Z5azd3eXFmLmZzZkBuaWNmZXJyaWVyLnRhcHNlbGxmZXJyaWVyLmNvLnVrPg=="},"prevInTopic":6073,"nextInTopic":6075,"prevInTime":6073,"nextInTime":6075,"topicId":6046,"numMessagesInTopic":33,"msgSnippet":"... One could argue that a cart /is/ a session.  In fact, for a shopping application, that s pretty much what I consider the session to consist of.  Therefore,","rawEmail":"Return-Path: &lt;lyle@...&gt;\r\nX-Sender: lyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 18262 invoked from network); 21 Apr 2006 01:05:04 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m32.grp.scd.yahoo.com with QMQP; 21 Apr 2006 01:05:04 -0000\r\nReceived: from unknown (HELO ptl.veicon.com) (198.107.49.195)\n  by mta9.grp.scd.yahoo.com with SMTP; 21 Apr 2006 01:05:04 -0000\r\nReceived: from [192.168.237.196] (gnat.veicon.com [198.107.49.206])\n\tby ptl.veicon.com (8.9.1a/8.9.1) with ESMTP id SAA14110;\n\tThu, 20 Apr 2006 18:06:58 -0700 (PDT)\r\nMessage-ID: &lt;44482FA5.3040600@...&gt;\r\nDate: Thu, 20 Apr 2006 18:04:37 -0700\r\nUser-Agent: Thunderbird 1.5 (Windows/20051201)\r\nMIME-Version: 1.0\r\nTo: Nic &lt;nferrier@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;44480106.2090103@...&gt;\t&lt;871wvryibi.fsf@...&gt;\t&lt;444822DB.1070205@...&gt; &lt;87fyk7wyqf.fsf@...&gt;\r\nIn-Reply-To: &lt;87fyk7wyqf.fsf@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 2:12:4:0\r\nFrom: Lyle Kopnicky &lt;lyle@...&gt;\r\nSubject: Re: [rest-discuss] Cacheability example\r\nX-Yahoo-Group-Post: member; u=247945012; y=ummACw5s5zeoJcXDLYgJRHs80NMV8xIk2nqrT8IY4u9g\r\nX-Yahoo-Profile: qtseep\r\n\r\nNic wrote:\n&gt; Lyle Kopnicky &lt;lyle@...&gt; writes:\n&gt;   \n&gt;&gt; But here&#39;s the catch:  How does the client side AJAX know to access the \n&gt;&gt; URL http://store/nicferrier/cart?  Where does it get the\n&gt;&gt; &#39;nicferrier&#39; bit?\n&gt;&gt;     \n&gt;\n&gt; Because you had to authenticate and authorize yourself just as you\n&gt; would with any app (they want to know who to send that Ministry of\n&gt; Sound album to after all).\n&gt;\n&gt;\n&gt; So in our example implementation the HTML shell would allow you to\n&gt; login and store a cookie to identify you.\n&gt;\n&gt; Or alternately a random basket would be assigned to you (and probably\n&gt; stored in a cookie so that you could always be associated with it).\n&gt;\n&gt; Note that the cookie would NOT store any reference to a session. It\n&gt; simply stores a way to reference the back end cart which can be\n&gt; accessed with the HTTP verbs.\n&gt;   \nOne could argue that a cart /is/ a session.  In fact, for a shopping \napplication, that&#39;s pretty much what I consider the session to consist \nof.  Therefore, the reference to the back end cart is a session key.\n&gt; But that wouldn&#39;t change the cacheability of any of the resources\n&gt; either (even though the cookie would be different for every person\n&gt; requesting all the resources) because only the client side would read\n&gt; the cookie. In effect the cookie wouldn&#39;t need to be communicated to\n&gt; the server at all because the server wouldn&#39;t be using it.\n&gt;   \nInteresting.  Use a cookie completely on the client side.  Don&#39;t send it \nto the server.  I like that.  But I do wonder how to gracefully degrade \non clients without JavaScript.\n\n-- \nLyle Kopnicky\nSoftware Project Engineer\nVeicon Technology, Inc.\n\n\n"}}