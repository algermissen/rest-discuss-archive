{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":126057605,"authorName":"Mathews, Walden","from":"&quot;Mathews, Walden&quot; &lt;walden.mathews@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"e6qjQmfRISkrxggOlNGTngDplalPiDkoFboWFyWfI1O65Kda1OvGENXMZqCfqrnWEFgNPsO-lSViuQiwAMD1MBbar0YC8d67XOYr4PKxOjq7","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] client-side state (was Re: Security and REST)","postDate":"1036770302","msgId":2820,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVFNUZAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2819,"nextInTopic":2821,"prevInTime":2819,"nextInTime":2821,"topicId":2812,"numMessagesInTopic":6,"msgSnippet":"... There are scope ambiguities inherent in application state when the application is distributed between a client and a server.  My view is that the","rawEmail":"Return-Path: &lt;walden.mathews@...&gt;\r\nX-Sender: walden.mathews@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 8 Nov 2002 15:45:37 -0000\r\nReceived: (qmail 88868 invoked from network); 8 Nov 2002 15:45:33 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 8 Nov 2002 15:45:33 -0000\r\nReceived: from unknown (HELO ilx.com) (199.119.33.232)\n  by mta2.grp.scd.yahoo.com with SMTP; 8 Nov 2002 15:45:36 -0000\r\nReceived: from clifford.devo.ilx.com (clifford.devadm.ilx.com [172.27.56.72])\n\tby ilx.com (8.11.0/8.9.3) with ESMTP id gA8Fj5O81610;\n\tFri, 8 Nov 2002 10:45:05 -0500 (EST)\n\t(envelope-from walden.mathews@...)\r\nReceived: by clifford.devo.ilx.com with Internet Mail Service (5.5.2653.19)\n\tid &lt;VNC0LH3S&gt;; Fri, 8 Nov 2002 10:45:04 -0500\r\nMessage-ID: &lt;1373D6342FA1D4119A5100E029437F64045EEE5F@...&gt;\r\nTo: &quot;&#39;Mark Baker&#39;&quot; &lt;distobj@...&gt;,\n   &quot;Mathews, Walden&quot;\n\t &lt;walden.mathews@...&gt;\r\nCc: &quot;&#39;Seairth Jacobs&#39;&quot; &lt;seairth@...&gt;,\n   rest-discuss\n\t &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] client-side state (was Re: Security and REST)\r\nDate: Fri, 8 Nov 2002 10:45:02 -0500 \r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2653.19)\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nFrom: &quot;Mathews, Walden&quot; &lt;walden.mathews@...&gt;\r\nX-Yahoo-Group-Post: member; u=126057605\r\nX-Yahoo-Profile: waldenmathews\r\n\r\n\n&gt; -----Original Message-----\n&gt; From: Mark Baker [mailto:distobj@...]\n&gt; Sent: Friday, November 08, 2002 9:45 AM\n&gt; To: Mathews, Walden\n&gt; Cc: &#39;Seairth Jacobs&#39;; rest-discuss\n&gt; Subject: Re: [rest-discuss] client-side state (was Re: Security and\n&gt; REST)\n&gt; \n&gt; \n&gt; On Fri, Nov 08, 2002 at 09:16:48AM -0500, Mathews, Walden wrote:\n&gt; &gt; I think we need to be careful to say &quot;conversational state&quot;\n&gt; &gt; in instances like this.\n&gt; \n&gt; Definitely.  Either that or &quot;application state&quot; or maybe &quot;session\n&gt; state&quot;.  I used to prefer &quot;session state&quot;, but &quot;application state&quot;\n&gt; has grown on me despite many people thinking it means data.\n&gt; &quot;conversational state&quot; is arguably better, especially when talking\n&gt; to Web services folks, since, of course, &quot;conversations&quot; are a big\n&gt; deal.\n&gt; \n&gt; &gt;  When you propose to capture conversational\n&gt; &gt; state as a globally addressable resource, you&#39;re promoting it\n&gt; &gt; to something &quot;higher&quot; than conversational state.  Indeed, you&#39;re\n&gt; &gt; likely factoring out the conversation in doing that, maintaining\n&gt; &gt; only the points of agreement.\n&gt; &gt;\n&gt; &gt; Think: If clients were responsible for *all* application state, then\n&gt; &gt; there would be no need for servers.\n&gt; \n&gt; I like to call that &quot;application data&quot;.  &quot;application state&quot; should\n&gt; refer to the state of the application (duh!), such as &quot;waiting for\n&gt; input from user&quot;, etc..\n\nThere are scope ambiguities inherent in &quot;application state&quot; when\nthe application is distributed between a client and a server.  My\nview is that &quot;the application&quot; spans client and server, and spans\nephemeral states (conversational) and durable states (persistent\ndata).  In other words, Application State is the whole enchelada.\nIn Alloy, you&#39;d typically model it under a signature called &quot;System {}&quot;\nor something suitably global sounding.\n\n&quot;Waiting for input from user&quot; is a server state scoped by the\nmessage-passing domain, so it&#39;s not even part of conversational state\nproper, unless you promote it to &quot;Waiting for confirmation to the\npending proposal&quot; or some such.  We&#39;d best be careful here, lest we\nconflate transport and application layers, after all that work\neducating the public as to the difference(!).\n\n&quot;Application data&quot; carries no special meaning to me, but I agree\nthat we need a term that distinguishes the state of the application&#39;s\nproblem domain from the state of conversations about it.  For\ninstance, the conference room scheduler&#39;s problem domain consists\nof rooms, people, reservations and the resulting schedules.  The\nstate of that domain at any given time controls what room you can\noccupy and what room you can reserve for the future.\n\nAlthough you can get some benefit from a separation of concerns like\nthe above, it&#39;s interesting to note that mutable applications exist\nto shape conversations into durable facts about the domain.  For\nexample, when you converse with the conference room scheduler, you\npass back and forth half-baked specifications of a reservation until\nit achieves permanent (problem domain) status by agreement.\n\nForgive me, for I take the anal-retentive modeler&#39;s view of\nwhat &quot;state&quot; is, namely: everything that isn&#39;t change.  Forgive\nme again, for I didn&#39;t mean to rant or preach on the subject;\njust to gather my own thoughts (and share them).\n\nWaldoon\n\n"}}