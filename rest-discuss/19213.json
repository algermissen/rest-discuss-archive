{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":498432483,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jan.algermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"72lvnAsnfcrzavAyrK84NZPiOeMEeUdRDWskLshDfcm1zf5-YKk2KlxG9L5Sz4hxg3yZjz0mCQl54S7Kr83qgVn9QuuxVHForArB5HkivO3sD9I","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] URI design, part 2","postDate":"1354661138","msgId":19213,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDY2Mzc3REQwLTk5NEMtNDI5NC1CQjMzLTVBNUQyNDYwNUZENkBub3Jkc2MuY29tPg==","inReplyToHeader":"PENBTk1QazI1ZWFOOEFtUVk3MVlaTCt2blFEOWcxcFkzcmtqcFpFVlZkc2dKUDU4Q1JuZ0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBTk1QazI3MmlTb0UzNFlLUzlBX3BNK2N0ejJvYjg5TS12M2txUGkxRHF1d2dpNkpqZ0BtYWlsLmdtYWlsLmNvbT4gPENGNTUyMDExLUI0MTgtNEFFNC04MEM2LTQzRjk5MTJFQTcyNUBuaWNrc2hhbmtzLmNvbT4gPDIwMTIxMTMwMTQxMjU0LmYzZDU5ZmE4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPENBTk1QazI0aHJRN3JYN2FLY3Y4TEh4S1AzQloraU9pVVZYd1lWdDZ2eUFDQTJNc3NfZ0BtYWlsLmdtYWlsLmNvbT4gPDIwMTIxMjAxMDAwODQyLmIyNGY5NGQwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPENBTk1QazI0d01ReGlFMDNyR3JjUnM1PVMxSmNhYkRnYitOZFU0RVR5WkZzTCt4cnFXUUBtYWlsLmdtYWlsLmNvbT4gPDIwMTIxMjAzMDkxNzQ3LmQxMjNiYWY5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPENBTk1QazI1ZWFOOEFtUVk3MVlaTCt2blFEOWcxcFkzcmtqcFpFVlZkc2dKUDU4Q1JuZ0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":19212,"nextInTopic":19214,"prevInTime":19212,"nextInTime":19214,"topicId":19187,"numMessagesInTopic":28,"msgSnippet":"... Maybe of interest: http://tech.groups.yahoo.com/group/rest-discuss/message/18998 jan","rawEmail":"Return-Path: &lt;jan.algermissen@...&gt;\r\nX-Sender: jan.algermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9335 invoked from network); 4 Dec 2012 22:45:41 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m14.grp.sp2.yahoo.com with QMQP; 4 Dec 2012 22:45:41 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.17.8)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Dec 2012 22:45:41 -0000\r\nX-Received: from [192.168.2.111] (p548FB165.dip.t-dialin.net [84.143.177.101])\n\tby mrelayeu.kundenserver.de (node=mreu3) with ESMTP (Nemesis)\n\tid 0MLEbl-1TgIE90VEX-000Xf1; Tue, 04 Dec 2012 23:45:40 +0100\r\nContent-Type: text/plain; charset=windows-1252\r\nMime-Version: 1.0 (Mac OS X Mail 6.2 &#92;(1499&#92;))\r\nIn-Reply-To: &lt;CANMPk25eaN8AmQY71YZL+vnQD9g1pY3rkjpZEVVdsgJP58CRng@...&gt;\r\nDate: Tue, 4 Dec 2012 23:45:38 +0100\r\nCc: &quot;rest-discuss@yahoogroups.com Group&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;66377DD0-994C-4294-BB33-5A5D24605FD6@...&gt;\r\nReferences: &lt;CANMPk272iSoE34YKS9A_pM+ctz2ob89M-v3kqPi1Dquwgi6Jjg@...&gt; &lt;CF552011-B418-4AE4-80C6-43F9912EA725@...&gt; &lt;20121130141254.f3d59fa8.eric@...&gt; &lt;CANMPk24hrQ7rX7aKcv8LHxKP3BZ+iOiUVXwYVt6vyACA2Mss_g@...&gt; &lt;20121201000842.b24f94d0.eric@...&gt; &lt;CANMPk24wMQxiE03rGrcRs5=S1JcabDgb+NdU4ETyZFsL+xrqWQ@...&gt; &lt;20121203091747.d123baf9.eric@...&gt; &lt;CANMPk25eaN8AmQY71YZL+vnQD9g1pY3rkjpZEVVdsgJP58CRng@...&gt;\r\nTo: Max Toro &lt;maxtoroq@...&gt;\r\nX-Mailer: Apple Mail (2.1499)\r\nX-Provags-ID: V02:K0:rAu44kSGToqLZrrEfpOd37hjttWXTkraFZhQ/GGkliq\n e+qMpBkewR3zt7woHJJJ7JxpA7+8bQGu6i5YmO1vx2GxMNLtir\n kAXO+oGkbEyfU4V0vX7IU2obvbJg+tX+sjKRwEwFcQ+HwMQ7uz\n E9h29jBDvSxmqPYVZNn04c9Cgv7mwhwXYiHn98UNe5vtqEYq19\n 924Q8ntc9SmlWK54jDQO/WA6hGrksggJiEyz4UCGzt+6uFo/LC\n FDvjOB6J5fHGMhLAb+DJxGgRxgjS8Mgd0DBV9EeXAbqemJnPp3\n AVS1dBsiEQTS7Dzz/D1Apris3NwdA9mgfg3/eNgMJdNORVbkry\n brBrt2uLrgM44jt1PFVyOVqX1lf5zRs4AkKmL4HAuNEItqrGF8\n R+uuLHfqtaBsA==\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nSubject: Re: [rest-discuss] URI design, part 2\r\nX-Yahoo-Group-Post: member; u=498432483; y=6rS1o-bgcGhVwVbqUyOnUPf4Vt054oetSlUbq3V1DJGQRDQNQU_xs-6T\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Dec 4, 2012, at 11:40 PM, Max Toro &lt;maxtoroq@...&gt; wrote:\n\n&gt; Thank=\r\n you very much for your responses Eric.\n&gt; \n&gt; The short answer is (if I unde=\r\nrstood correctly): POST /cancel is not\n&gt; REST because it lacks visibility, =\r\nsince it&#39;s not possible to\n&gt; understand the client&#39;s intent by examining th=\r\ne request.\n\nMaybe of interest: http://tech.groups.yahoo.com/group/rest-disc=\r\nuss/message/18998\n\njan\n\n\n&gt; \n&gt; Never thought about HTTP/URI resource vs. RES=\r\nT resource, you say that\n&gt; a URI that doesn&#39;t implement GET is probably (or=\r\n always) not REST.\n&gt; --\n&gt; Max Toro\n&gt; \n&gt; On Mon, Dec 3, 2012 at 1:17 PM, Eri=\r\nc J. Bowman &lt;eric@...&gt; wrote:\n&gt; &gt; Max Toro wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt; &gt; =\r\nWell, what are you expecting to GET from /cancel, or are you just\n&gt; &gt;&gt; &gt; us=\r\ning that URL to invoke a procedure? If so, then there are a few\n&gt; &gt;&gt; &gt; plac=\r\nes Roy&#39;s thesis admonishes against it in Chapter 6 -- the rest\n&gt; &gt;&gt; &gt; of RE=\r\nST is about positive, rather than negative, reinforcement of\n&gt; &gt;&gt; &gt; the ide=\r\nntification of resources constraint. Suggested reading:\n&gt; &gt;&gt; &gt; 6.5.2; 6.2.1=\r\n, in particular: &quot;REST [defines] a resource to be the\n&gt; &gt;&gt; &gt; semantics of w=\r\nhat the author intends to identify.&quot;\n&gt; &gt;&gt;\n&gt; &gt;&gt; To clarify, /orders/1/cancel=\r\n is used to modify a resource, using POST.\n&gt; &gt;&gt; A GET request would result =\r\nin a Method Not Allowed response.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Yes, such examples are out t=\r\nhere, but in them, /cancel is NOT a resource\n&gt; &gt; in the REST sense so they =\r\nmust be some style of RPC... REST, not so\n&gt; &gt; much. Representational State =\r\nTransfer means just that -- resources are\n&gt; &gt; manipulated by transferring r=\r\nepresentations of their current, intended,\n&gt; &gt; desired etc. state. Chapter =\r\n5.4:\n&gt; &gt;\n&gt; &gt; &quot;Requests and responses have the appearance of a remote invoca=\r\ntion\n&gt; &gt; style, but REST messages are targeted at a conceptual resource rat=\r\nher\n&gt; &gt; than an implementation identifier.&quot;\n&gt; &gt;\n&gt; &gt; This example is a REST =\r\nanti-pattern, as I cannot deduce the current\n&gt; &gt; (sub)state of the order (a=\r\nctive or canceled) by dereferencing the URL\n&gt; &gt; I&#39;m given for manipulating =\r\nthat (sub)state. Just making a toggle POST\n&gt; &gt; also fails to transfer any r=\r\nepresentation of anything, let alone\n&gt; &gt; application state, and isn&#39;t prope=\r\nr HTTP (which can never be proper\n&gt; &gt; REST).\n&gt; &gt;\n&gt; &gt; REST isn&#39;t about optim=\r\nizing upstream traffic, it&#39;s about optimizing GET.\n&gt; &gt; What advantage does =\r\na subresource give when it contains no content from\n&gt; &gt; the parent resource=\r\n? My goal with subresources is to increase the cache\n&gt; &gt; stickiness of thei=\r\nr parent resources. Replace the subresource content\n&gt; &gt; in the parent resou=\r\nrce, with a link or a hypertext control linked to the\n&gt; &gt; subresource. The =\r\nlink or hypertext control remains static, and cached,\n&gt; &gt; as the content of=\r\n the subresource varies.\n&gt; &gt;\n&gt; &gt; That&#39;s a RESTful pattern, as the subresour=\r\nce now has a representation\n&gt; &gt; (other than that of the 406 error) we can t=\r\nransfer and manipulate to\n&gt; &gt; effect change of the parent resource.\n&gt; &gt;\n&gt; &gt;=\r\n&gt;\n&gt; &gt;&gt; &gt; Not the semantics of a method invocation. What does /cancel\n&gt; &gt;&gt; &gt;=\r\n identify? Sounds to me like a method of tunneling DELETE through\n&gt; &gt;&gt; &gt; PO=\r\nST which identifies nothing, iow a procedure endpoint, which is\n&gt; &gt;&gt; &gt; char=\r\nacteristic of various styles but not of the REST style. The\n&gt; &gt;&gt; &gt; hypertex=\r\nt constraint only makes sense if your resources make sense,\n&gt; &gt;&gt; &gt; in that =\r\ntheir URLs are identifiers rather than endpoints.\n&gt; &gt;&gt;\n&gt; &gt;&gt; If I understand=\r\n correctly, you are saying that if I need to affect a\n&gt; &gt;&gt; resource then I =\r\nshould use the uniform interface on that resource URI,\n&gt; &gt;&gt; and not another=\r\n URI.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Absolutely not! My example changed /order/1 by manipulat=\r\ning /order/1\n&gt; &gt; /status. The /order/1 resource includes its status, but it=\r\ns 200 OK\n&gt; &gt; representations only include links to the /status subresource,=\r\n derived\n&gt; &gt; from the /order/1 resource such that manipulating a representa=\r\ntion\n&gt; &gt; of /order/1/status updates /order/1 (on the server, you can do any=\r\nthing\n&gt; &gt; you want; on the client, the cached link/control in /order/1 now =\r\nreturns\n&gt; &gt; a different value).\n&gt; &gt;\n&gt; &gt; There&#39;s no cost to adding a URI lik=\r\ne this, nor does it preclude changing\n&gt; &gt; order status via PUT/PATCH to /or=\r\nder/1. The difference is that /status\n&gt; &gt; uses REST&#39;s uniform interface, un=\r\nlike /cancel. The /order/1/status URL\n&gt; &gt; is only presented within a hypert=\r\next control which explains how to\n&gt; &gt; manipulate it -- picture a drop-down =\r\nlist with the current status\n&gt; &gt; highlighted, meeting the hypertext constra=\r\nint. You can always GET the\n&gt; &gt; status of an order even if you don&#39;t have a=\r\n copy of that order, a\n&gt; &gt; useful separation of concerns beyond just optimi=\r\nzing GET, promoting\n&gt; &gt; serendipitous re-use.\n&gt; &gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; &gt; Which brings =\r\nus to Chapter 5, and the short answer to your question:\n&gt; &gt;&gt; &gt; &quot;POSTing to =\r\n/cancel violates the Identification of Resources\n&gt; &gt;&gt; &gt; constraint, and is =\r\ntherefore unRESTful.&quot; But I&#39;ve found that just\n&gt; &gt;&gt; &gt; giving that answer te=\r\nnds to upset folks who&#39;ve only read Chapter 5,\n&gt; &gt;&gt; &gt; then they get defensi=\r\nve about why can&#39;t they call their API\n&gt; &gt;&gt; &gt; RESTful, accusations of pedan=\r\ntry follow, and threads devolve into\n&gt; &gt;&gt; &gt; general ugliness, heheh...\n&gt; &gt;&gt;=\r\n\n&gt; &gt;&gt; After reading that chapter again I&#39;m not sure my example violates\n&gt; &gt;=\r\n&gt; anything, but I&#39;d love to get more clarification from you. Is it the\n&gt; &gt;&gt;=\r\n use of a verb in the URI? or not using the URI of the resource I&#39;m\n&gt; &gt;&gt; tr=\r\nying to modify directly?\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; The biggest problem, is that an RPC e=\r\nndpoint which has no GET function\n&gt; &gt; while improperly listening for a meth=\r\nod itself as a trigger rather than\n&gt; &gt; taking action based on the content o=\r\nf the entity required by that method\n&gt; &gt; and in obeyance of the semantics o=\r\nf that method, is so far away from\n&gt; &gt; REST that I don&#39;t know where to star=\r\nt except by urging that Roy&#39;s\n&gt; &gt; thesis be read in its entirety. Because i=\r\nt&#39;s obvious to me that this\n&gt; &gt; violates the first three uniform interface =\r\nconstraints, making adherence\n&gt; &gt; to the fourth irrelevant:\n&gt; &gt;\n&gt; &gt; &quot;REST i=\r\ns defined by four interface constraints: identification of\n&gt; &gt; resources; m=\r\nanipulation of resources through representations; self-\n&gt; &gt; descriptive mes=\r\nsages; and, hypermedia as the engine of application\n&gt; &gt; state.&quot;\n&gt; &gt;\n&gt; &gt; Not=\r\ne that &quot;noun/verb&quot; terminology is not present in the dissertation.\n&gt; &gt; But,=\r\n yeah, if your URI is a &quot;verb&quot; you&#39;re probably getting REST wrong.\n&gt; &gt; Ther=\r\ne is no &quot;cancel&quot; method in the uniform interface. There are two\n&gt; &gt; basic m=\r\neans of solving this -- one, is refactor your cancel operation\n&gt; &gt; to use D=\r\nELETE; two, tunnel your proprietary cancel method through POST.\n&gt; &gt;\n&gt; &gt; htt=\r\np://tech.groups.yahoo.com/group/rest-discuss/message/19210\n&gt; &gt;\n&gt; &gt; Making t=\r\nhis operation its own URI doesn&#39;t make it more RESTful, as the\n&gt; &gt; resultin=\r\ng URI is only a resource in the HTTP/URI sense, but not the\n&gt; &gt; REST sense,=\r\n of the term. Utilizing subresources to break out more\n&gt; &gt; dynamic aspects =\r\nof content and cache them separately is RESTful; if the\n&gt; &gt; contents of the=\r\n GET are also allowable content of a PUT then we&#39;re\n&gt; &gt; letting hypertext d=\r\nrive application state instead of listening for POST\n&gt; &gt; events to trigger =\r\nserver-object methods we&#39;ve failed to refactor to the\n&gt; &gt; uniform REST inte=\r\nrface.\n&gt; &gt;\n&gt; &gt; -Eric\n&gt; \n\n\n"}}