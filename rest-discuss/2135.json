{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"17OP1GQl54vpINtl7oeMMVc23Mrkyq6fb0Kkjt3p4D1lGB82meZBeJ565mKnTP8pd41Asqmdys5K3H5EVPZtMNo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Security in a REST world?","postDate":"1029938767","msgId":2135,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNENjM5RTRGLjMwMDA4QGJyaXZvLm5ldD4="},"prevInTopic":0,"nextInTopic":2136,"prevInTime":2134,"nextInTime":2136,"topicId":2135,"numMessagesInTopic":17,"msgSnippet":"Hello, We are developing a REST system using straight HTTP and RDF.  We have n clients (both machine and humans) GETting and PUTting RDF into the system via","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 21 Aug 2002 14:03:51 -0000\r\nReceived: (qmail 70344 invoked from network); 21 Aug 2002 14:03:51 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m11.grp.scd.yahoo.com with QMQP; 21 Aug 2002 14:03:51 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.226)\n  by mta3.grp.scd.yahoo.com with SMTP; 21 Aug 2002 14:03:51 -0000\r\nReceived: (qmail 26201 invoked from network); 21 Aug 2002 14:03:50 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.110]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 21 Aug 2002 14:03:50 -0000\r\nMessage-ID: &lt;3D639E4F.30008@...&gt;\r\nDate: Wed, 21 Aug 2002 10:06:07 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Security in a REST world?\r\nContent-Type: multipart/signed; protocol=&quot;application/x-pkcs7-signature&quot;; micalg=sha1; boundary=&quot;------------ms080903010605050606050808&quot;\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\r\n--------------ms080903010605050606050808\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nHello,\n\nWe are developing a REST system using straight HTTP and RDF.  We have n \nclients (both machine and humans) GETting and PUTting RDF into the \nsystem via HTTP.\n\nThe question is, are there any security frameworks for a HTTP world \nwhere the URI is opaque?  By that I mean, if the URI is virtual and \ndoesn&#39;t have enough information in it to answer authorization questions, \nhow would I go about securing my application?\n\nSince that is, obviously, a huge question, I&#39;ll try to add some \nrequirements.  Hopefully they are REST generic, as we are trying to stay \nwithin HTTP and REST.\n\nThe interface into the system is HTTP, so our methods are PUT, GET, and \nDELETE.  We then have users, and the objects they are PUT, GET, and \nDELETE.  Using Apache as an example, I can control who can access what \nURIs via GET.  That&#39;s fine if GET was the only method /and/ if the URIs \nare physical.  In our case, we can PUT and DELETE, plus the URIs point \nto virtual resources (constructed from data in a database).\n\nWe need to construct policies that have:\n\n- Actor\n- Method\n- URI\n- Content Filter\n\nWhere:\n\n- Actor is the person (or machine) performing the HTTP call\n- Method is GET, PUT, or DELETE\n- URI is the (regexp?) pattern of the URI\n- Content Filter is a collection of filters that can validate the \ncontent (body) of the HTTP call.  For instance, we need to allow Frank \nto PUT to /service/stuff/* ONLY documents that pass validations (like \nvalidate on an XML Schema or DAML+OIL schema)\n\nWhat we&#39;ve found is that simple Actor+Method+URI policies aren&#39;t enough. \n  We need to validate the incoming body of the HTTP request as well.\n\nSo, are there frameworks out there that do this sort of thing?  I looked \nat Apache and it doesn&#39;t seem to offer this type of control.  Our \napplication is written in Java and Servlets, and the servlet environment \ndoesn&#39;t seem to have those types of controls, either.\n\nAny experience with this type of security system would be greatly \nappreciated!  I&#39;ll post a summary of useful information.\n\nThanks again,\nSeth\n\r\n--------------ms080903010605050606050808\r\nContent-Type: application/x-pkcs7-signature; name=&quot;smime.p7s&quot;\r\nContent-Disposition: attachment; filename=&quot;smime.p7s&quot;\r\nContent-Description: S/MIME Cryptographic Signature\r\n\r\n[ Attachment content not displayed ]\r\n--------------ms080903010605050606050808--\r\n\n"}}