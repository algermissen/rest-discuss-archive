{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":237604743,"authorName":"Bill de hOra","from":"Bill de hOra &lt;bill@...&gt;","profile":"bdehora","replyTo":"SENDER","senderId":"L2njiJseorBdgVn6lj4xKtSSd4vs_6ZOiuqLO1qML6zqppgBi6u8TY0QsLPuPZ5bxMcwx0TONKIYmixG0gaaoiJUMwJG","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Partial Resource Views","postDate":"1232802980","msgId":12044,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5N0IxNEE0LjcwOTAxMDBAZGVob3JhLm5ldD4=","inReplyToHeader":"PGdsYXZkOStxOTVjQGVHcm91cHMuY29tPg==","referencesHeader":"PGdsYXZkOStxOTVjQGVHcm91cHMuY29tPg=="},"prevInTopic":12042,"nextInTopic":12045,"prevInTime":12043,"nextInTime":12045,"topicId":12040,"numMessagesInTopic":6,"msgSnippet":"... Query parameters are one option. There is a downside to allowing clients to negotiate subsets of representations. It can put a lot of pressure on the ","rawEmail":"Return-Path: &lt;bill@...&gt;\r\nX-Sender: bill@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57360 invoked from network); 24 Jan 2009 13:16:24 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m52.grp.scd.yahoo.com with QMQP; 24 Jan 2009 13:16:24 -0000\r\nX-Received: from unknown (HELO chilco.textdrive.com) (207.7.108.242)\n  by mta17.grp.scd.yahoo.com with SMTP; 24 Jan 2009 13:16:24 -0000\r\nX-Received: from [192.168.3.166] (83-70-233-193-dynamic.b-ras1.prp.dublin.eircom.net [83.70.233.193])\n\tby chilco.textdrive.com (Postfix) with ESMTP id 2CB6CDD29C\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 24 Jan 2009 13:16:22 +0000 (UTC)\r\nMessage-ID: &lt;497B14A4.7090100@...&gt;\r\nDate: Sat, 24 Jan 2009 13:16:20 +0000\r\nUser-Agent: Thunderbird 2.0.0.19 (X11/20090105)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nReferences: &lt;glavd9+q95c@...&gt;\r\nIn-Reply-To: &lt;glavd9+q95c@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bill de hOra &lt;bill@...&gt;\r\nSubject: Re: [rest-discuss] Partial Resource Views\r\nX-Yahoo-Group-Post: member; u=237604743; y=glC0MdR4iQYoTGzSOpIv19zzUmjs_KHgndaS4xFePjYphQ\r\nX-Yahoo-Profile: bdehora\r\n\r\nscameron02 wrote:\n\n&gt; But what about modifications?  If I&#39;m just changing the customer name I \n&gt; don&#39;t want to have to GET the entire customer representation, nor do I \n&gt; want to have to PUT the entire thing back with only the name changed.  \n&gt; Doing these things seems hugely inefficient especially when extrapolated \n&gt; to a large scale.\n&gt; \n&gt; I&#39;ve seen PATCH recommended for use, but this only helps you with the \n&gt; partial update problem.  There are really two important sides to this \n&gt; coin that both need to be considered:\n&gt; \n&gt;      1)  Limiting the resource view to just the part you care about when \n&gt; GETting.\n\n\nQuery parameters are one option.\n\nThere is a downside to allowing clients to negotiate subsets of \nrepresentations. It can put a lot of pressure on the \ndatabase/fs/whatever backend. This has nothing to do with the network \ninterface, but it&#39;s good to have an interface that will scale.\n\n\n&gt;      2)  PUTting only what you actually change (with some sensible \n&gt; boundary constraints in the design)\n\nForms POST is an option; I&#39;d argue it&#39;s the de-facto standard for \npartial updates.\n\nOne of the reasons why formats like Atom lean to a patch-like update is \nbecause their schema can requires you send data whether or not it&#39;s \nbeing changed. The logic can be a bit goofy to implement for deletion - \neg, does the absence of a atom:category or a geo:* tag mean removal? \nPUT semantics suggest yes it does, but it&#39;s not intuitive to many \ndevelopers (client or server side) who were brought up on forms.  I&#39;d go \nas far as saying that supporting PUT on a LAMP stack isn&#39;t much fun.\n\n\n&gt; PATCH seems to only address #2.  I guess you could use the URI scheme I \n&gt; lay out above and make anything below &quot;123&quot; GET-only resources.  Then \n&gt; any PATCH would be sent to the customer-level resource itself \n&gt; (.../customer/123).  Seems a bit inconsistent.  Not to mention the fact \n&gt; that PATCH doesn&#39;t seem to actually exist in practice yet.\n\nI&#39;m not sold on sub-resource thing at all. I think if you want that, \nthen use RDF, which has the sufficient conceptual weight to decompose \ndata, and isn&#39;t muddied by syntax specifics.\n\n\n&gt; It seems like allowing both PUT and GET all the way down to the property \n&gt; level is better, but it&#39;s not without its own complications.  For \n&gt; example, can I even use PUT correctly here?  Modifying a property (say, \n&gt; the name property) is actually modifying the customer resource itself.  \n&gt; Maybe it updates a timestamp property or version property on the \n&gt; customer resource automatically.  Does this mean that we now have to \n&gt; fall back to POST instead of PUT?  I&#39;m not sure.\n&gt; \n&gt; The bottom line is that I think this concept of (for lack of a better \n&gt; term) &quot;partial resource views&quot; is closely related to the contentious \n&gt; issue of partial resource updates.  It also seems closely related to the \n&gt; equally contentious issue of batching operations in general.  In systems \n&gt; where a large number of resources are being operated on and resource \n&gt; changes are happening frequently, there&#39;s no choice but to address these \n&gt; issues.  Pushing the batching into the resource addressing seems RESTful \n&gt; to me, but I&#39;m not sure.\n\nBatch update I think is different from partial update. Give that \nHTTP+URIs result in a kind of distributed hashmap, it&#39;s safe to say it&#39;s \njust not supported in the architecture. It took years to figure out how \nto do iterators and aggregation in HTTP (batch reads, if you like).\n\nBill\n\n"}}