{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":410189866,"authorName":"Vitaly Stakhov","from":"Vitaly Stakhov &lt;vitaly.st@...&gt;","profile":"vitaly.stakhov","replyTo":"SENDER","senderId":"H3TEKXbYiTiz_fQRIqB4gXuzijdpvXwRZEAHlFX12XxykGH0uE6nc1REKZXDvSAnfTkT5dW5pOXBHWy4LPcfFGbZ0adec1Uh6Z_4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Building a web app/api","postDate":"1333393664","msgId":18694,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBUFNDcXQ1U1U9VXY3ZjlnT3ZoVzJVeDRzNmFKT2E9ZHl2bnluVnhDVlREUnFWVGpId0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":18695,"prevInTime":18693,"nextInTime":18695,"topicId":18694,"numMessagesInTopic":3,"msgSnippet":"I m about to build a web app that should expose its functionality via API and I m trying to find the most effective way to do that and would like to hear your","rawEmail":"Return-Path: &lt;vitaly.st@...&gt;\r\nX-Sender: vitaly.st@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 27478 invoked from network); 2 Apr 2012 19:07:45 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m14.grp.sp2.yahoo.com with QMQP; 2 Apr 2012 19:07:45 -0000\r\nX-Received: from unknown (HELO mail-wg0-f41.google.com) (74.125.82.41)\n  by mta5.grp.sp2.yahoo.com with SMTP; 2 Apr 2012 19:07:45 -0000\r\nX-Received: by wgbds1 with SMTP id ds1so2807753wgb.4\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 02 Apr 2012 12:07:44 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.180.95.34 with SMTP id dh2mr27991591wib.15.1333393664171; Mon,\n 02 Apr 2012 12:07:44 -0700 (PDT)\r\nX-Received: by 10.223.74.141 with HTTP; Mon, 2 Apr 2012 12:07:44 -0700 (PDT)\r\nDate: Mon, 2 Apr 2012 22:07:44 +0300\r\nMessage-ID: &lt;CAPSCqt5SU=Uv7f9gOvhW2Ux4s6aJOa=dyvnynVxCVTDRqVTjHw@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=f46d04448035b2dfa604bcb6e7fc\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Vitaly Stakhov &lt;vitaly.st@...&gt;\r\nSubject: Building a web app/api\r\nX-Yahoo-Group-Post: member; u=410189866; y=ZoBvcGxiLh4mOoIFoa0AQF_M5ErG9vmBAgJGMQBrP7_EbKBhJpJxOok\r\nX-Yahoo-Profile: vitaly.stakhov\r\n\r\n\r\n--f46d04448035b2dfa604bcb6e7fc\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nI&#39;m about to build a web app that should expose its functionality via API\nand I&#39;m trying to find the most effective way to do that and would like to\nhear your thoughts on the topic.\nThe functionality of the &#39;website&#39; and the API intersect, with API having\nadditional features that should not be available from the website (from\nbrowser). A traditional approach to building such systems seems to be\nbuilding a website and an API as two separate projects, probably even using\ndifferent technologies. That seems ineffective as there are 2 places\n(website and api) which have to invoke the same business logic with all the\njoys as a result. For example, adding a feature that should be exposed in\nboth requires adding it to 2 places. Basically you should always think\nabout keeping your website and API in sync. Not fun.\n\nAnd I don&#39;t want to have browsers and machine clients to work with the same\nhtml as it can easily become too verbose.\n\nAnother way is to have the same set of resources that a browser and\nprogrammatic clients communicate with and use content negotiation to either\nreturn text/html (for browser) or application/vnd.whatever+json (for\nprogrammatic clients). With this approach only the code that converts\nresource objects to representations have to differ. I have a couple of\nconcerns with this approach as well:\n\n   1. There are features that should be available via api only, meaning\n   html representations may not have the same links available in json for the\n   specific resource. I&#39;m not sure this is correct as depending on which media\n   type the client asks it may get completely different features. Feels kinda\n   wrong, but is it?\n   2. Earlier or later the two media types will start to diverge,\n   specifically when we have to take care about evolvability of the &#39;machine&#39;\n   media type, while that is not a concern for &#39;humans&#39; html. And here we go\n   again  having to have different links between html and json representations.\n   3. Browsers do only GET and POST. But that can be pretty easily\n   overridden by X-HTTP-Method-Override to do PUT and DELETE.\n\nWhat are your overall thoughts and experience on the topic?\n\nThanks,\nVitaly\n\r\n--f46d04448035b2dfa604bcb6e7fc\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div style=3D&quot;text-align:left&quot;&gt;I&#39;m about to build a web app that should=\r\n expose its functionality via API and I&#39;m trying to find the most effec=\r\ntive way to do that and would like to hear your thoughts on the topic.&lt;/div=\r\n&gt;\n&lt;div style=3D&quot;text-align:left&quot;&gt;The functionality of the &#39;website&#39;=\r\n and the API intersect, with API having additional features that should not=\r\n be available from the website (from browser). A traditional approach to bu=\r\nilding such systems seems to be building a website and an API as two separa=\r\nte projects, probably even using different technologies. That seems ineffec=\r\ntive as there are 2 places (website and api) which have to invoke the same =\r\nbusiness logic with all the joys as a result. For example, adding a feature=\r\n that should be exposed in both requires adding it to 2 places. Basically y=\r\nou should always think about keeping your website and API in sync. Not fun.=\r\n&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;And I don&#39;t want to have browsers and m=\r\nachine clients to work with the same html as it can easily become too verbo=\r\nse.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Another way is to have the same set of r=\r\nesources that a browser and programmatic clients communicate with and use c=\r\nontent negotiation to either return text/html (for browser) or application/=\r\nvnd.whatever+json (for programmatic clients). With this approach only the c=\r\node that converts resource objects to representations have to differ. I hav=\r\ne a couple of concerns with this approach as well:&lt;/div&gt;\n&lt;div&gt;&lt;ol&gt;&lt;li&gt;There=\r\n are features that should be available via api only, meaning html represent=\r\nations may not have the same links available in json for the specific resou=\r\nrce. I&#39;m not sure this is correct as depending on which media type the =\r\nclient asks it may get completely different features. Feels kinda wrong, bu=\r\nt is it?&lt;/li&gt;\n&lt;li&gt;Earlier or later the two media types will start to diverg=\r\ne, specifically when we have to take care about evolvability of the &#39;ma=\r\nchine&#39; media type, while that is not a concern for &#39;humans&#39; htm=\r\nl. And here we go again =A0having to have different links between html and =\r\njson representations.&lt;/li&gt;\n&lt;li&gt;Browsers do only GET and POST. But that can =\r\nbe pretty easily overridden by X-HTTP-Method-Override to do PUT and DELETE.=\r\n&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;What are your overall thoughts and experience on the topic?&lt;=\r\n/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;Thanks,&lt;/div&gt;&lt;div&gt;Vitaly&lt;/div&gt;\n\r\n--f46d04448035b2dfa604bcb6e7fc--\r\n\n"}}