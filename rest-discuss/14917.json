{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"ZQ7CSf6mxxhhY7KKYVffWOiXo6ixYDoyj_l3VEN8vvzK3i_HiebX4-VLf-EM28N0lM4L-mzsnlXtuGXkuwQIJRKavS12qme2TQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267151630","msgId":14917,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU1MTk1Ljc2MDYwLnFtQHdlYjU1OTA4Lm1haWwucmUzLnlhaG9vLmNvbT4=","inReplyToHeader":"PGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14916,"nextInTopic":14918,"prevInTime":14916,"nextInTime":14918,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"Maybe I am doing this wrong, but what I do is usually I put my JAXB generated XSD model objects in a separate project. I then build this jar and copy it to my","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 81848 invoked from network); 26 Feb 2010 02:33:58 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m13.grp.re1.yahoo.com with QMQP; 26 Feb 2010 02:33:58 -0000\r\nX-Received: from unknown (HELO n13a.bullet.mail.mud.yahoo.com) (68.142.207.51)\n  by mta2.grp.re1.yahoo.com with SMTP; 26 Feb 2010 02:33:58 -0000\r\nX-Received: from [209.191.108.96] by n13.bullet.mail.mud.yahoo.com with NNFMP; 26 Feb 2010 02:33:51 -0000\r\nX-Received: from [216.252.111.169] by t3.bullet.mud.yahoo.com with NNFMP; 26 Feb 2010 02:33:51 -0000\r\nX-Received: from [127.0.0.1] by omp104.mail.re3.yahoo.com with NNFMP; 26 Feb 2010 02:33:51 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 209461.1660.bm@...\r\nX-Received: (qmail 76126 invoked by uid 60001); 26 Feb 2010 02:33:51 -0000\r\nMessage-ID: &lt;55195.76060.qm@...&gt;\r\nX-YMail-OSG: L88p.6sVM1nSj3gm.Z01WMsW8otzp1XMbIoQnP4IDylihC5\n JERxPIMg4K6ZqO9OxaF4qOAZCeCwwg0ZqVEMNnYHu23ifbxVZCziLOolps.F\n coGcIWF04N5eyi8lpK9xvhOWSr6nzrz3Lz.5G8Oig.9KOPqnK8riJjWtP7wR\n tlI6WUgfjyLGLqVP8CWs6Yb2Zc_hyTX.Gq5ALl8jMzFERGZrjXMsweaWANa3\n AFOhzOHsBUGjNG2GtcOeoqVVGnRQwEjp3MbRsSWJ36dA-\r\nX-Received: from [99.22.138.61] by web55908.mail.re3.yahoo.com via HTTP; Thu, 25 Feb 2010 18:33:50 PST\r\nX-Mailer: YahooMailClassic/9.2.12 YahooMailWebService/0.8.100.260964\r\nDate: Thu, 25 Feb 2010 18:33:50 -0800 (PST)\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-1039566986-1267151630=:76060&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=272793929; y=MuZ1I5OJdXXo0SBs4a43eAMbJrldiyzoijVxIrN2bp3VRHpM\r\nX-Yahoo-Profile: andjarnic\r\n\r\n\r\n--0-1039566986-1267151630=:76060\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\nMaybe I am doing this wrong, but what I do is usually I put my JAXB genera=\r\nted XSD model objects in a separate project. I then build this jar and copy=\r\n it to my web-inf/lib of my REST/ejb based application. I use the JAXB mode=\r\nl objects in my Jersey resources, as well as in my session beans to convert=\r\n from the JAXB bean to the entity bean. There is probably an easier way to =\r\ndo this, but presently I simply do a eb.setXxx(jb.getXxx()) method for each=\r\n item I wish to copy to the entity, or from it when going back the other wa=\r\ny. JEE6 makes this a breeze to work with.\n\nI&#39;ve not yet looked into the ram=\r\nifications of scaling, caching, etc.. I am hoping that the EE6 containers d=\r\no a lot of this for me for free these days. Being stateless in the session =\r\nbean and REST service, and only the entity persists when required, I would =\r\nhope that I should be able to scale quite rapidly and easily, the back end =\r\nDB being the most difficult probably to deal with.\n\n--- On Thu, 2/25/10, Cr=\r\naig McClanahan &lt;craigmcc@...&gt; wrote:\n\nFrom: Craig McClanahan &lt;craigmc=\r\nc@...&gt;\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\nTo=\r\n: &quot;Jan Algermissen&quot; &lt;algermissen1971@...&gt;\nCc: &quot;Felipe Gaucho&quot; &lt;fgaucho@=\r\ngmail.com&gt;, &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\nDate: Thursday, F=\r\nebruary 25, 2010, 11:37 AM\n\n\n\n\n\n\n\n=C2=A0\n\n\n\n  \n\n\n    \n      \n      \n      O=\r\nn Thu, Feb 25, 2010 at 9:12 AM, Jan Algermissen\n\n&lt;algermissen1971@ mac.com&gt;=\r\n wrote:\n\n&gt;\n\n&gt; On Feb 25, 2010, at 5:50 PM, Felipe Gaucho wrote:\n\n&gt;\n\n&gt;&gt; You =\r\ncan use jaxb and use xml and get a restful service...\n\n&gt;&gt; There is no manda=\r\ntory link between these technologies and &quot;non-rest&quot; style...\n\n&gt;\n\n&gt; Right, s=\r\norry to imply that. OTH, there will often be no 1:1 mapping between domain =\r\nobject (that&#39;s how I understood POJO) so if you use JAXB on your POJO you&#39;l=\r\nl rather have a serialized domain object than &#39;resource representation&#39;\n\n&gt;\n=\r\n\n\n\nWhen using JAX-RS, I&#39;m finding myself more and more often building a\n\nse=\r\nt of JAXB annotated classes that directly represent my resources,\n\nseparate=\r\n from the classes that might represent my domain tier (with,\n\nperhaps, JPA =\r\nor Hibernate annotations on them).  Besides the fact that\n\nthis means I don=\r\n&#39;t have to write all of the boring serialization code,\n\nit has some other b=\r\nenefits:\n\n\n\n- Both XML and JSON serialization, nearly for free.\n\n\n\n- Abilit=\r\ny to include properties for however I&#39;m going to represent\n\n  links (which =\r\ndon&#39;t belong in the domain model at all).\n\n\n\n- Ability to include propertie=\r\ns for related resources (either individual\n\n  child beans or collections of=\r\n them), for which JAXB does a\n\n  slick job of including as nested sub-eleme=\r\nnts, versus\n\n  entity beans that are typically associated with only one tab=\r\nle.\n\n\n\n- Ability to write business logic that is natural to Java\n\n  develop=\r\ners used to beans oriented development,\n\n  independent of the fact that thi=\r\ns resource was received\n\n  (or will be sent) across some HTTP or other tran=\r\nsport.\n\n\n\n- Ablity to write much better unit and functional tests that can\n=\r\n\n  reason about the resource model (independent of how the\n\n  resources got=\r\n received from a client or synthesized from my\n\n  database domain objects),=\r\n with all the usual\n\n  benefits of a strongly typed language (versus using\n=\r\n\n  XPath or poking through some JSON data structure\n\n  with string based ke=\r\nys and hoping I spelled the keys right).\n\n\n\nIt&#39;s good stuff for Java develo=\r\npers.\n\n\n\nCraig\n\n\n\n    \n     \n\n    \n    \n\n\n \n\n\n\n  \n\n\n\n\n\n\n      \r\n--0-1039566986-1267151630=:76060\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;table cellspacing=3D&quot;0&quot; cellpadding=3D&quot;0&quot; border=3D&quot;0&quot; &gt;&lt;tr&gt;&lt;td valign=3D&quot;=\r\ntop&quot; style=3D&quot;font: inherit;&quot;&gt;&lt;br&gt;Maybe I am doing this wrong, but what I d=\r\no is usually I put my JAXB generated XSD model objects in a separate projec=\r\nt. I then build this jar and copy it to my web-inf/lib of my REST/ejb based=\r\n application. I use the JAXB model objects in my Jersey resources, as well =\r\nas in my session beans to convert from the JAXB bean to the entity bean. Th=\r\nere is probably an easier way to do this, but presently I simply do a eb.se=\r\ntXxx(jb.getXxx()) method for each item I wish to copy to the entity, or fro=\r\nm it when going back the other way. JEE6 makes this a breeze to work with.&lt;=\r\nbr&gt;&lt;br&gt;I&#39;ve not yet looked into the ramifications of scaling, caching, etc.=\r\n. I am hoping that the EE6 containers do a lot of this for me for free thes=\r\ne days. Being stateless in the session bean and REST service, and only the =\r\nentity persists when required, I would hope that I should be able to scale\n=\r\n quite rapidly and easily, the back end DB being the most difficult probabl=\r\ny to deal with.&lt;br&gt;&lt;br&gt;--- On &lt;b&gt;Thu, 2/25/10, Craig McClanahan &lt;i&gt;&lt;crai=\r\ngmcc@...&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;&lt;blockquote style=3D&quot;border-left: 2px =\r\nsolid rgb(16, 16, 255); margin-left: 5px; padding-left: 5px;&quot;&gt;&lt;br&gt;From: Cra=\r\nig McClanahan &lt;craigmcc@...&gt;&lt;br&gt;Subject: Re: [rest-discuss] Dif=\r\nferentiating HTTP-based APIs&lt;br&gt;To: &quot;Jan Algermissen&quot; &lt;algermissen1971@m=\r\nac.com&gt;&lt;br&gt;Cc: &quot;Felipe Gaucho&quot; &lt;fgaucho@...&gt;, &quot;REST Discuss&quot;=\r\n &lt;rest-discuss@yahoogroups.com&gt;&lt;br&gt;Date: Thursday, February 25, 2010,=\r\n 11:37 AM&lt;br&gt;&lt;br&gt;&lt;div id=3D&quot;yiv1563183160&quot;&gt;\n\n\n\n\n\n&lt;span style=3D&quot;display: no=\r\nne;&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;ygrp-text&quot;&gt;\n      \n      \n      &lt;p&gt;On =\r\nThu, Feb 25, 2010 at 9:12 AM, Jan Algermissen&lt;br&gt;\n&lt;&lt;a rel=3D&quot;nofollow&quot; y=\r\nmailto=3D&quot;mailto:algermissen1971%40mac.com&quot; target=3D&quot;_blank&quot; href=3D&quot;/mc/c=\r\nompose?to=3Dalgermissen1971%40mac.com&quot;&gt;algermissen1971@ mac.com&lt;/a&gt;&gt; wro=\r\nte:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; On Feb 25, 2010, at 5:50 PM, Felipe Gaucho wrote:&lt;br&gt;=\r\n\n&gt;&lt;br&gt;\n&gt;&gt; You can use jaxb and use xml and get a restful service..=\r\n.&lt;br&gt;\n&gt;&gt; There is no mandatory link between these technologies and &quot;n=\r\non-rest&quot; style...&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Right, sorry to imply that. OTH, there =\r\nwill often be no 1:1 mapping between domain object (that&#39;s how I understood=\r\n POJO) so if you use JAXB on your POJO you&#39;ll rather have a serialized doma=\r\nin object than &#39;resource representation&#39;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\nWhen using JAX-R=\r\nS, I&#39;m finding myself more and more often building a&lt;br&gt;\nset of JAXB annota=\r\nted classes that directly represent my resources,&lt;br&gt;\nseparate from the cla=\r\nsses that might represent my domain tier (with,&lt;br&gt;\nperhaps, JPA or Hiberna=\r\nte annotations on them).  Besides the fact that&lt;br&gt;\nthis means I don&#39;t have=\r\n to write all of the boring serialization code,&lt;br&gt;\nit has some other benef=\r\nits:&lt;br&gt;\n&lt;br&gt;\n- Both XML and JSON serialization, nearly for free.&lt;br&gt;\n&lt;br&gt;\n=\r\n- Ability to include properties for however I&#39;m going to represent&lt;br&gt;\n  li=\r\nnks (which don&#39;t belong in the domain model at all).&lt;br&gt;\n&lt;br&gt;\n- Ability to =\r\ninclude properties for related resources (either individual&lt;br&gt;\n  child bea=\r\nns or collections of them), for which JAXB does a&lt;br&gt;\n  slick job of includ=\r\ning as nested sub-elements, versus&lt;br&gt;\n  entity beans that are typically as=\r\nsociated with only one table.&lt;br&gt;\n&lt;br&gt;\n- Ability to write business logic th=\r\nat is natural to Java&lt;br&gt;\n  developers used to beans oriented development,&lt;=\r\nbr&gt;\n  independent of the fact that this resource was received&lt;br&gt;\n  (or wil=\r\nl be sent) across some HTTP or other transport.&lt;br&gt;\n&lt;br&gt;\n- Ablity to write =\r\nmuch better unit and functional tests that can&lt;br&gt;\n  reason about the resou=\r\nrce model (independent of how the&lt;br&gt;\n  resources got received from a clien=\r\nt or synthesized from my&lt;br&gt;\n  database domain objects), with all the usual=\r\n&lt;br&gt;\n  benefits of a strongly typed language (versus using&lt;br&gt;\n  XPath or p=\r\noking through some JSON data structure&lt;br&gt;\n  with string based keys and hop=\r\ning I spelled the keys right).&lt;br&gt;\n&lt;br&gt;\nIt&#39;s good stuff for Java developers=\r\n.&lt;br&gt;\n&lt;br&gt;\nCraig&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n\n\n \n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/td&gt;=\r\n&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;\n\n\n\n      \r\n--0-1039566986-1267151630=:76060--\r\n\n"}}