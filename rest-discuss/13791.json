{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":267214845,"authorName":"Noah Campbell","from":"Noah Campbell &lt;noahcampbell@...&gt;","profile":"noahsingleton","replyTo":"SENDER","senderId":"lpET15OKPfjbCqB6wLHqpLu1NGchkkG7fX_WMlW3waBNYlZJR7b0T-WDWIzy-sLd7O8BqBNltJ0lO245minClD-Y84OHB4k56w682iA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Generic REST client","postDate":"1255232765","msgId":13791,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRlNzBiMzlkMDkxMDEwMjA0Nmo0ZTI3M2UzY24yMWQ0OTA1MDZjMmQ4OTU5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDg3aXFlb3l2eDQuZnNmQHBob2VuaXguYXN5bmNocm9ub3VzLm9yZz4=","referencesHeader":"PDk2RDQwQkQyLUJFNjQtNDcwQi04NTFDLUU4MDgwMDc1MjNBMEBnbWFpbC5jb20+CSA8ODdpcWVveXZ4NC5mc2ZAcGhvZW5peC5hc3luY2hyb25vdXMub3JnPg=="},"prevInTopic":13790,"nextInTopic":13792,"prevInTime":13790,"nextInTime":13792,"topicId":13776,"numMessagesInTopic":48,"msgSnippet":"Josh, You articulated what an improved client could do very well.  In Java land, the best is HTTPClient and HTTPUrlConnection and they don t come anywhere ","rawEmail":"Return-Path: &lt;noahcampbell@...&gt;\r\nX-Sender: noahcampbell@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 53588 invoked from network); 11 Oct 2009 03:46:06 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 11 Oct 2009 03:46:06 -0000\r\nX-Received: from unknown (HELO mail-px0-f201.google.com) (209.85.216.201)\n  by mta2.grp.sp2.yahoo.com with SMTP; 11 Oct 2009 03:46:06 -0000\r\nX-Received: by pxi39 with SMTP id 39so8088614pxi.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 10 Oct 2009 20:46:06 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.61.23 with SMTP id j23mr319771wfa.299.1255232765984; Sat, \n\t10 Oct 2009 20:46:05 -0700 (PDT)\r\nIn-Reply-To: &lt;87iqeoyvx4.fsf@...&gt;\r\nReferences: &lt;96D40BD2-BE64-470B-851C-E808007523A0@...&gt;\n\t &lt;87iqeoyvx4.fsf@...&gt;\r\nDate: Sat, 10 Oct 2009 20:46:05 -0700\r\nMessage-ID: &lt;de70b39d0910102046j4e273e3cn21d490506c2d8959@...&gt;\r\nTo: Josh Sled &lt;jsled@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Jan Vincent &lt;jvliwanag@...&gt;\r\nContent-Type: multipart/alternative; boundary=001636e1f73d207e680475a0a79e\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Noah Campbell &lt;noahcampbell@...&gt;\r\nSubject: Re: [rest-discuss] Generic REST client\r\nX-Yahoo-Group-Post: member; u=267214845; y=MWCSyI6XWTaoBoJ9dswCFfwSe0KnNcFhJ2PuWXVe3AZ9yENOaBh0BA\r\nX-Yahoo-Profile: noahsingleton\r\n\r\n\r\n--001636e1f73d207e680475a0a79e\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nJosh,\nYou articulated what an improved client could do very well.  In Java =\r\nland,\nthe best is HTTPClient and HTTPUrlConnection and they don&#39;t come anyw=\r\nhere\nclose (I&#39;ve also heard Restlet&#39;s client is pretty snazzy too, but have=\r\nn&#39;t\nused it).  However, these are pretty low level, handling keep-alive, pr=\r\noxies\nand redirections, all that is specific to the HTTP protocol (this sho=\r\nuldn&#39;t\nbe a surprise since these are HTTP libraries after all).\n\nThere is a=\r\n need for a client that lifts up what can be handled by the\nruntime, but ul=\r\ntimately how the machine interacts with the resource is the\ndefinition of t=\r\nhe application that consume the resource.  I&#39;m not sure it\ncan ever be comp=\r\nletely automated.\n\n-Noah\n\nOn Fri, Oct 9, 2009 at 4:44 PM, Josh Sled &lt;jsled@=\r\nasynchronous.org&gt; wrote:\n\n&gt; Jan Vincent &lt;jvliwanag@...&gt; writes:\n&gt; &gt; I=\r\n know one may simply use some HTTP client and work\n&gt; &gt; from there. However,=\r\n I tend to see this practice as being quite\n&gt; &gt; tedious.\n&gt;\n&gt; I&#39;ve not seen =\r\na good higher-level HTTP framework that would:\n&gt;\n&gt; - interpret an out-of-ba=\r\nnd description of a RESTful web service to\n&gt;  produce high-level forms/stat=\r\ne-machine stubs that can be coded to in\n&gt;  the implementation language.\n&gt;\n&gt;=\r\n  - integrating that with run-time in-band conditional-GET of previous\n&gt;   =\r\n responses, response codes, &c.\n&gt;\n&gt; - supports the more interesting HTTP re=\r\nsponse codes like\n&gt;\n&gt;  - 202 + maybe polling some &lt;handwave&gt;url in the reps=\r\nonse to check\n&gt;    final creation state&lt;/&gt;\n&gt;\n&gt;  - 204, 205, 206\n&gt;\n&gt;  - 3xx =\r\nredirection codes with stateful recoding of temp/perm\n&gt;    redirects.\n&gt;\n&gt;  =\r\n- 503 + retry-after info.\n&gt;\n&gt; - Supports cache control, in combination with=\r\n the above.\n&gt;\n&gt;\n&gt; I&#39;d imagine such a framework to:\n&gt;\n&gt; a/ again, use some d=\r\nescription language that identifies the *potential*\n&gt; resource-/media-types=\r\n, state-space, and forms a-priori without having to\n&gt; actively traverse eve=\r\nry class of link on the site, but=E2=80=A6\n&gt;\n&gt; b/ would require the active =\r\ntraversal of links to function, ensuring\n&gt; that the runtime binding of the =\r\nresources is the same as the build-time\n&gt; binding (withing epsilon of versi=\r\noning);\n&gt;\n&gt; c/ as such, would always start at a safe entry point (e.g., &#39;/&#39;=\r\n) for a\n&gt; resource-space, with conditional requests to validate any previou=\r\ns\n&gt; (cached) assumptions about the site are still valid.\n&gt;\n&gt;\n&gt; I&#39;ve built a=\r\n couple of ad-hoc things that use something like Apache\n&gt; HTTPClient, but t=\r\nhey&#39;re usually just my application code using\n&gt; HTTPClient to do some speci=\r\nfic thing, not a generic solution one level\n&gt; removed from that.\n&gt;\n&gt; --\n&gt; .=\r\n..jsled\n&gt; http://asynchronous.org/ - a=3Djsled; b=3Dasynchronous.org; echo =\r\n${a}@${b}\n&gt;\n\r\n--001636e1f73d207e680475a0a79e\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nJosh,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You articulated what an improved client could do v=\r\nery well. =C2=A0In Java land, the best is HTTPClient and HTTPUrlConnection =\r\nand they don&#39;t come anywhere close (I&#39;ve also heard Restlet&#39;s c=\r\nlient is pretty snazzy too, but haven&#39;t used it). =C2=A0However, these =\r\nare pretty low level, handling keep-alive, proxies and redirections, all th=\r\nat is specific to the HTTP protocol (this shouldn&#39;t be a surprise since=\r\n these are HTTP libraries after all).&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;There is a =\r\nneed for a client that lifts up what can be handled by the runtime, but ult=\r\nimately how the machine interacts with the resource is the definition of th=\r\ne application that consume the resource. =C2=A0I&#39;m not sure it can ever=\r\n be completely automated.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Noah&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;di=\r\nv class=3D&quot;gmail_quote&quot;&gt;On Fri, Oct 9, 2009 at 4:44 PM, Josh Sled &lt;span dir=\r\n=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jsled@...&quot;&gt;jsled@asynchronous.o=\r\nrg&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;marg=\r\nin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n&lt;div class=3D&quot;=\r\nim&quot;&gt;Jan Vincent &lt;&lt;a href=3D&quot;mailto:jvliwanag@...&quot;&gt;jvliwanag@gmail.=\r\ncom&lt;/a&gt;&gt; writes:&lt;br&gt;\n&gt; I know one may simply use some HTTP client and=\r\n work&lt;br&gt;\n&gt; from there. However, I tend to see this practice as being qu=\r\nite&lt;br&gt;\n&gt; tedious.&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;I&#39;ve not seen a good higher-level =\r\nHTTP framework that would:&lt;br&gt;\n&lt;br&gt;\n- interpret an out-of-band description =\r\nof a RESTful web service to&lt;br&gt;\n =C2=A0produce high-level forms/state-machi=\r\nne stubs that can be coded to in&lt;br&gt;\n =C2=A0the implementation language.&lt;br=\r\n&gt;\n&lt;br&gt;\n =C2=A0- integrating that with run-time in-band conditional-GET of p=\r\nrevious&lt;br&gt;\n =C2=A0 =C2=A0responses, response codes, &amp;c.&lt;br&gt;\n&lt;br&gt;\n- sup=\r\nports the more interesting HTTP response codes like&lt;br&gt;\n&lt;br&gt;\n =C2=A0- 202 +=\r\n maybe polling some &lt;handwave&gt;url in the repsonse to check&lt;br&gt;\n =C2=\r\n=A0 =C2=A0final creation state&lt;/&gt;&lt;br&gt;\n&lt;br&gt;\n =C2=A0- 204, 205, 206&lt;br&gt;=\r\n\n&lt;br&gt;\n =C2=A0- 3xx redirection codes with stateful recoding of temp/perm&lt;br=\r\n&gt;\n =C2=A0 =C2=A0redirects.&lt;br&gt;\n&lt;br&gt;\n =C2=A0- 503 + retry-after info.&lt;br&gt;\n&lt;b=\r\nr&gt;\n- Supports cache control, in combination with the above.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nI=\r\n&#39;d imagine such a framework to:&lt;br&gt;\n&lt;br&gt;\na/ again, use some description=\r\n language that identifies the *potential*&lt;br&gt;\nresource-/media-types, state-=\r\nspace, and forms a-priori without having to&lt;br&gt;\nactively traverse every cla=\r\nss of link on the site, but=E2=80=A6&lt;br&gt;\n&lt;br&gt;\nb/ would require the active t=\r\nraversal of links to function, ensuring&lt;br&gt;\nthat the runtime binding of the=\r\n resources is the same as the build-time&lt;br&gt;\nbinding (withing epsilon of ve=\r\nrsioning);&lt;br&gt;\n&lt;br&gt;\nc/ as such, would always start at a safe entry point (e=\r\n.g., &#39;/&#39;) for a&lt;br&gt;\nresource-space, with conditional requests to va=\r\nlidate any previous&lt;br&gt;\n(cached) assumptions about the site are still valid=\r\n.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nI&#39;ve built a couple of ad-hoc things that use something=\r\n like Apache&lt;br&gt;\nHTTPClient, but they&#39;re usually just my application co=\r\nde using&lt;br&gt;\nHTTPClient to do some specific thing, not a generic solution o=\r\nne level&lt;br&gt;\nremoved from that.&lt;br&gt;\n&lt;font color=3D&quot;#888888&quot;&gt;&lt;br&gt;\n--&lt;br&gt;\n...=\r\njsled&lt;br&gt;\n&lt;a href=3D&quot;http://asynchronous.org/&quot; target=3D&quot;_blank&quot;&gt;http://asy=\r\nnchronous.org/&lt;/a&gt; - a=3Djsled; b=3D&lt;a href=3D&quot;http://asynchronous.org&quot; tar=\r\nget=3D&quot;_blank&quot;&gt;asynchronous.org&lt;/a&gt;; echo ${a}@${b}&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote=\r\n&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--001636e1f73d207e680475a0a79e--\r\n\n"}}