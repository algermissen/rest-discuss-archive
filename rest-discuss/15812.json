{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"Sebastien Lambla &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"SLiGeP1STPP9_771qmjsXb_R5XZUIEklKTsgopy2Nl3ZmLxEMFmQJOtdYsLd6GNRKTIzi-qOD91EoZTHP9M5AbSK_Il3tD9-n6Ma","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [rest-discuss] Re: Restful Approaches to some Enterprise \tIntegration Problems","postDate":"1278577705","msgId":15812,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2M0EyNTVGOTJAUFJJU00uY2FmZmVpbmUtaXQubmV0Pg==","inReplyToHeader":"PEFBTkxrVGlua1NtbW9yUm9zMWsyYlpGN1pZZlAwU0d2Rkw3NXcwTHJTYXN1c0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGkwdWxraCtsdnI5QGVHcm91cHMuY29tPgk8MDYxQzYzMkEtRERCNy00REUzLUIyMEQtRTgxRjY3NzIxQzA4QGdiaXYuY29tPiA8QUFOTGtUaW5rU21tb3JSb3MxazJiWkY3WllmUDBTR3ZGTDc1dzBMclNhc3VzQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15811,"nextInTopic":15814,"prevInTime":15811,"nextInTime":15813,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"As ReST is request-response, any eventing / pubsub you try and slap on it is something else that is not ReST. There are however other thesis that build on top","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88122 invoked from network); 8 Jul 2010 08:28:30 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m13.grp.re1.yahoo.com with QMQP; 8 Jul 2010 08:28:30 -0000\r\nX-Received: from unknown (HELO prism.caffeine-it.net) (78.129.227.171)\n  by mta3.grp.sp2.yahoo.com with SMTP; 8 Jul 2010 08:28:29 -0000\r\nX-Received: from PRISM.caffeine-it.net ([fe80::14b:3222:bb06:fb0]) by\n PRISM.caffeine-it.net ([fe80::14b:3222:bb06:fb0%11]) with mapi; Thu, 8 Jul\n 2010 09:28:28 +0100\r\nTo: Glenn Block &lt;glenn.block@...&gt;, Roy T.Fielding &lt;fielding@...&gt;\r\nCc: bryan_w_taylor &lt;bryan_w_taylor@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nThread-Topic: [rest-discuss] Re: Restful Approaches to some Enterprise\n \tIntegration Problems\r\nThread-Index: AQHLHmHN+qxh25sgLECN6bAwajoQJpKmsfNw\r\nDate: Thu, 8 Jul 2010 08:28:25 +0000\r\nMessage-ID: &lt;3DDD0BE655869D4EA506652B3803AEF63A255F92@...-it.net&gt;\r\nReferences: &lt;i0ulkh+lvr9@...&gt;\n\t&lt;061C632A-DDB7-4DE3-B20D-E81F67721C08@...&gt;\n &lt;AANLkTinkSmmorRos1k2bZF7ZYfP0SGvFL75w0LrSasus@...&gt;\r\nIn-Reply-To: &lt;AANLkTinkSmmorRos1k2bZF7ZYfP0SGvFL75w0LrSasus@...&gt;\r\nAccept-Language: en-GB, en-US\r\nContent-Language: en-US\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;_000_3DDD0BE655869D4EA506652B3803AEF63A255F92PRISMcaffeineit_&quot;\r\nMIME-Version: 1.0\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Sebastien Lambla &lt;seb@...&gt;\r\nSubject: RE: [rest-discuss] Re: Restful Approaches to some Enterprise\n \tIntegration Problems\r\nX-Yahoo-Group-Post: member; u=331949899; y=amXdA8ZboVbF7snlbhgXUvztiOs2bYhhIjkPRmFAAeWH3kU_\r\nX-Yahoo-Profile: serialseb\r\n\r\n\r\n--_000_3DDD0BE655869D4EA506652B3803AEF63A255F92PRISMcaffeineit_\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAs ReST is request-response, any eventing / pubsub you try and slap on it i=\r\ns something else that is not ReST. There are however other thesis that buil=\r\nd on top of ReST to provide architectural constraints for such systems, but=\r\n I don&#39;t have the link anymore. Have a search on the mailing list, it shoul=\r\nd be in the archives somewhere.\n\nFrom: rest-discuss@yahoogroups.com [mailto=\r\n:rest-discuss@yahoogroups.com] On Behalf Of Glenn Block\nSent: 08 July 2010 =\r\n06:53\nTo: Roy T.Fielding\nCc: bryan_w_taylor; rest-discuss@yahoogroups.com\nS=\r\nubject: Re: [rest-discuss] Re: Restful Approaches to some Enterprise Integr=\r\nation Problems\n\n\n\n\nHi Roy\n\nAny thoughs on HTML5 Web Sockets wrt REST? Would=\r\n it be viable to have a REST resources that can communicate changes (events=\r\n) through web sockets? Or would you say that it is orthagonal?\n\nThanks\nGlen=\r\nn\nOn Wed, Jul 7, 2010 at 8:25 PM, Roy T.Fielding &lt;fielding@...&lt;mailto:=\r\nfielding@...&gt;&gt; wrote:\n\nOn Jul 6, 2010, at 12:22 AM, bryan_w_taylor wro=\r\nte:\n&gt; --- In rest-discuss@yahoogroups.com&lt;mailto:rest-discuss%40yahoogroups=\r\n.com&gt;, &quot;Roy T. Fielding&quot; &lt;fielding@...&gt; wrote:\n&gt;\n&gt; &gt; &gt; Specifically, we are=\r\n trying to find RESTful solutions to:\n&gt; &gt; &gt;\n&gt; &gt; &gt; 1) Guaranteed Delivery - =\r\nwe need a paradigm to follow so that one service can transfer a sequence of=\r\n resource representations to another reliably even though both services and=\r\n the network suffer temporary unreliability\n&gt; &gt;\n&gt; &gt; That doesn&#39;t sound like=\r\n a problem encountered by RESTful\n&gt; &gt; architectures. Reliable upload of mul=\r\ntiple files can be\n&gt; &gt; performed using a single zip file, but the assumptio=\r\nn being made\n&gt; &gt; here is that the client has a shared understanding of what=\r\n the\n&gt; &gt; server is intending to do with those files. That&#39;s coupling.\n&gt;\n&gt; I=\r\n don&#39;t follow. Several people have given good simple answers saying to use =\r\nthe idempotent nature of PUT (or fake it with POST) until a GET of the reso=\r\nurce succeeds or add an HTTP header of If-None-Match: * and repeat the PUT =\r\nuntil you get a 412 Precondition Failed response, so I thought this was a s=\r\nlam dunk.\nI guess it depends on how you define guaranteed delivery. You can=\r\n\ncertainly do such things with HTTP, but doing CRUD ops via HTTP does\nnot a=\r\nutomatically make it a RESTful paradigm.\n\n\n&gt; But that answers &quot;how&quot; and I t=\r\nhink you are getting at &quot;why&quot;. I&#39;m imagining that we have two servers A and=\r\n B, where A plays the role of the client in the interaction. Events happen =\r\non server A and server B must receive some representation related to each e=\r\nvent or unacceptable business consequences occur.\nAh, typical event-based i=\r\nntegration. That&#39;s a good architectural\nstyle for some applications. Why us=\r\ne REST to do that?\n\n\n&gt; Why can&#39;t we merge the functionality of server A and=\r\n B? Lots of reasons: Security, regulatory compliance, use of 3rd party syst=\r\nems, organizational boundaries and/or politics are a few. The way a company=\r\n manages it&#39;s systems engineering work is to partition business functionali=\r\nty into pieces, give ownership of each piece to a team, and align physical =\r\nresources like servers to those teams. If this imposes constraints not foun=\r\nd in RESTful systems, then I have no choice but to deal with those.\nYes, bu=\r\nt the RESTful solution is not to pretend that REST is an\nevent-based integr=\r\nation style. What you want to do with REST is\nre-architect the system into =\r\nmore isolated parts that are event-based\n(usually a very small communicatio=\r\nn subsystem) and the remainder\nas a layered information system. The reason =\r\nto do this, presumably,\nis to expose the RESTful interface to consumers ins=\r\ntead of exposing\nthe much more complex (and brittle) event interface.\n\nFor =\r\nexample, CQ5 has a content repository based on the JCR\ninterface, which inc=\r\nludes both observation (change event notifiers)\nand RESTful interaction. Th=\r\ne observation is behind the resource\ninterface, so the fact that it isn&#39;t R=\r\nESTful itself does not\ninterfere with the multi-organizational, long-lived =\r\napplications\nthat might only use the Web interface.\n\n\n&gt; &gt; Applications like=\r\n that are usually accomplished via code-on-demand.\n&gt; &gt; The problem you will=\r\n run into here is implementation issues\n&gt; &gt; regarding current browsers, not=\r\n architectural issues and\n&gt; &gt; certainly not a style issue. Most such tools =\r\nare developed\n&gt; &gt; as browser extensions or app-specific clients, mostly bec=\r\nause\n&gt; &gt; they need unfettered access to the filesystem and because\n&gt; &gt; brow=\r\nsers (for some unknown reason) don&#39;t include integrity checks\n&gt; &gt; in normal=\r\n file uploads.\n&gt;\n&gt; I expect the clients of most of our services would count=\r\n as &quot;app specific clients&quot;. These might be our other services, our app serv=\r\ners that host user interfaces, or sometimes we will allow external business=\r\n entities (customers, partners, suppliers, etc...) to write such apps direc=\r\ntly. I don&#39;t mind going beyond browser limitations.\n&gt;\n&gt; &gt; &gt; 2) Distributed =\r\nTransactions - we need a paradigm to allow state changes on multiple servic=\r\nes to happen so that the changes succeed or fail as a unit\n&gt; &gt;\n&gt; &gt; Again, n=\r\not a characteristic of RESTful architectures. If the\n&gt; &gt; client knows the t=\r\nransaction is distributed, you have failed.\n&gt; &gt; There are lots of ways to s=\r\nolve this kind of problem on the\n&gt; &gt; back-end of services interfaces, behin=\r\nd the resource abstraction,\n&gt; &gt; but none of those are relevant to the REST =\r\narchitectural style\n&gt; &gt; that might apply on the front-end of the service in=\r\nterface.\n&gt;\n&gt; This one I accept doesn&#39;t fit in a RESTful solution, and in ot=\r\nher posts in this thread, we are exploring several of other ways you mentio=\r\nn.\n&gt;\n&gt; &gt; &gt; 3) Long running operations - we need asynchronous invocations be=\r\ntween services and a mechanism for the invoking service to find out when th=\r\ne invoked service is done given that this work may take indefinitely long\n&gt;=\r\n &gt;\n&gt; &gt; Any resource can behave as a long-running service. Just program it t=\r\nhat way.\n&gt;\n&gt; Right, the question is how, exactly. Good solutions have been =\r\nposted in this thread for this. Subbu&#39;s RESTful Web Services Cookbook solve=\r\ns this in examples 1.10 and 1.11. I think this was another slam dunk.\n&gt;\n&gt; I=\r\n&#39;m curious what you think about using so called &quot;web hooks&quot; for this kind o=\r\nf thing. Would you consider this a violation of the client-server constrain=\r\nt?\nNo, web hooks is just someone&#39;s marketing term for registering\nnotificat=\r\nions. The components that act on them are still either\nclients or servers d=\r\nuring the communication (i.e., they are not\ntrying to do both at the same t=\r\nime and functionality is still\nsplit across components). This is not a new =\r\nconcept. E.g.,\n\nhttp://www.xent.com/FoRK-archive/apr98/0445.html\n\nhttp://ww=\r\nw.xent.com/FoRK-archive/august98/0307.html\n\n\n&gt; &gt; &gt; 4) Workflow Orchestratio=\r\nn - we would like to have orchestration services that define business proce=\r\nsses via standardized representations (eg BPMN), then execute instances of =\r\nthose processes and build up an process instance execution data resource by=\r\n interacting with other RESTful resources using message exchange patterns t=\r\nhat could specify the above behaviors.\n&gt; &gt;\n&gt; &gt; That is a system, not an int=\r\negration problem. If you want to\n&gt; &gt; solve it, buy a full-featured WCM syst=\r\nem like Day&#39;s CQ5.\n&gt; &gt;\n&gt; &gt; http://www.day.com/day/en/products/web_content_m=\r\nanagement.html\n&gt; &gt;\n&gt; &gt; (sorry, I don&#39;t have a way to answer that one withou=\r\nt sounding\n&gt; &gt; like a sales plug -- it is, after all, why I work for a WCM =\r\nvendor).\n&gt;\n&gt; No need to apologize for pointing me to a product that might b=\r\ne useful for us. I&#39;ve been in several sales presentations in the last coupl=\r\ne weeks with different vendors who have big fancy workflow engines. They al=\r\nl want to talk about WS-BPEL and orchestrating our SOAP endpoints. I enjoy =\r\nthe look of confusion when I mention that we are considering not allowing a=\r\nny new services to be created using SOAP. That seems to get their attention=\r\n. They say &quot;what will you do instead?&quot; and I say use HTTP and they say &quot;huh=\r\n?&quot;.\nAs much as I like doing things in HTTP, there are many closed systems\nt=\r\nhat are better implemented in an efficient RPC syntax or a wire\nprotocol sp=\r\necifically designed for message queues. Use whatever\nworks best for the spe=\r\ncific architecture behind the resource interface\nand then apply REST as the=\r\n external facade to support large-scale\nintegration and reusability of the =\r\ninformation produced/consumed.\n\nNote, however, that SOAP is fairly unique f=\r\nor being the least efficient\nway of doing anything. That&#39;s what happens whe=\r\nn core protocol design\nis driven by marketing.\n\n....Roy\n\n\n\n\n\n\r\n--_000_3DDD0BE655869D4EA506652B3803AEF63A255F92PRISMcaffeineit_\r\nContent-Type: text/html; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html xmlns:v=3D&quot;urn:schemas-microsoft-com:vml&quot; xmlns:o=3D&quot;urn:schemas-micr=\r\nosoft-com:office:office&quot; xmlns:w=3D&quot;urn:schemas-microsoft-com:office:word&quot; =\r\nxmlns:m=3D&quot;http://schemas.microsoft.com/office/2004/12/omml&quot; xmlns=3D&quot;http:=\r\n//www.w3.org/TR/REC-html40&quot;&gt;&lt;head&gt;&lt;META HTTP-EQUIV=3D&quot;Content-Type&quot; CONTENT=\r\n=3D&quot;text/html; charset=3Dus-ascii&quot;&gt;&lt;meta name=3DGenerator content=3D&quot;Micros=\r\noft Word 14 (filtered medium)&quot;&gt;&lt;!--[if !mso]&gt;&lt;style&gt;v&#92;:* {behavior:url(#def=\r\nault#VML);}\no&#92;:* {behavior:url(#default#VML);}\nw&#92;:* {behavior:url(#default#=\r\nVML);}\n.shape {behavior:url(#default#VML);}\n&lt;/style&gt;&lt;![endif]--&gt;&lt;style&gt;&lt;!--=\r\n\n/* Font Definitions */\n@font-face\n\t{font-family:Calibri;\n\tpanose-1:2 15 5 =\r\n2 2 2 4 3 2 4;}\n@font-face\n\t{font-family:Tahoma;\n\tpanose-1:2 11 6 4 3 5 4 4=\r\n 2 4;}\n@font-face\n\t{font-family:Verdana;\n\tpanose-1:2 11 6 4 3 5 4 4 2 4;}\n/=\r\n* Style Definitions */\np.MsoNormal, li.MsoNormal, div.MsoNormal\n\t{margin:0c=\r\nm;\n\tmargin-bottom:.0001pt;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman=\r\n&quot;,&quot;serif&quot;;}\na:link, span.MsoHyperlink\n\t{mso-style-priority:99;\n\tcolor:blue;=\r\n\n\ttext-decoration:underline;}\na:visited, span.MsoHyperlinkFollowed\n\t{mso-st=\r\nyle-priority:99;\n\tcolor:purple;\n\ttext-decoration:underline;}\np\n\t{mso-style-=\r\npriority:99;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-botto=\r\nm-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Ro=\r\nman&quot;,&quot;serif&quot;;}\np.ygrp-photo-title, li.ygrp-photo-title, div.ygrp-photo-titl=\r\ne\n\t{mso-style-name:ygrp-photo-title;\n\tmso-margin-top-alt:auto;\n\tmargin-righ=\r\nt:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmargin-left:0cm;\n\ttext-align:center;\n\t=\r\nfont-size:10.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}\np.ad, li.ad, div=\r\n.ad\n\t{mso-style-name:ad;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-=\r\nmargin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;=\r\nTimes New Roman&quot;,&quot;serif&quot;;}\np.ad1, li.ad1, div.ad1\n\t{mso-style-name:ad1;\n\tms=\r\no-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmar=\r\ngin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}\ns=\r\npan.EmailStyle21\n\t{mso-style-type:personal-reply;\n\tfont-family:&quot;Calibri&quot;,&quot;s=\r\nans-serif&quot;;\n\tcolor:#1F497D;}\n.MsoChpDefault\n\t{mso-style-type:export-only;\n\t=\r\nfont-size:10.0pt;}\n@page WordSection1\n\t{size:612.0pt 792.0pt;\n\tmargin:72.0p=\r\nt 72.0pt 72.0pt 72.0pt;}\ndiv.WordSection1\n\t{page:WordSection1;}\n--&gt;&lt;/style&gt;=\r\n&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\n&lt;o:shapedefaults v:ext=3D&quot;edit&quot; spidmax=3D&quot;1026&quot; /=\r\n&gt;\n&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\n&lt;o:shapelayout v:ext=3D&quot;edit&quot;&gt;=\r\n\n&lt;o:idmap v:ext=3D&quot;edit&quot; data=3D&quot;1&quot; /&gt;\n&lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;&lt;/=\r\nhead&gt;&lt;body lang=3DEN-GB link=3Dblue vlink=3Dpurple&gt;&lt;div class=3DWordSection=\r\n1&gt;&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-family:&quot;Calibri=\r\n&quot;,&quot;sans-serif&quot;;color:#1F497D&#39;&gt;As ReST is request-response, any eventing / p=\r\nubsub you try and slap on it is something else that is not ReST. There are =\r\nhowever other thesis that build on top of ReST to provide architectural con=\r\nstraints for such systems, but I don&#8217;t have the link anymore. Have a =\r\nsearch on the mailing list, it should be in the archives somewhere.&lt;o:p&gt;&lt;/o=\r\n:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-fam=\r\nily:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1F497D&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;=\r\n&lt;div style=3D&#39;border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0cm =\r\n0cm 0cm&#39;&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;&lt;b&gt;&lt;span lang=3D=\r\nEN-US style=3D&#39;font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;&#39;&gt;From:&lt;/s=\r\npan&gt;&lt;/b&gt;&lt;span lang=3DEN-US style=3D&#39;font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;=\r\nsans-serif&quot;&#39;&gt; rest-discuss@yahoogroups.com [mailto:rest-discuss@yahoogroups=\r\n.com] &lt;b&gt;On Behalf Of &lt;/b&gt;Glenn Block&lt;br&gt;&lt;b&gt;Sent:&lt;/b&gt; 08 July 2010 06:53&lt;br=\r\n&gt;&lt;b&gt;To:&lt;/b&gt; Roy T.Fielding&lt;br&gt;&lt;b&gt;Cc:&lt;/b&gt; bryan_w_taylor; rest-discuss@yahoo=\r\ngroups.com&lt;br&gt;&lt;b&gt;Subject:&lt;/b&gt; Re: [rest-discuss] Re: Restful Approaches to =\r\nsome Enterprise Integration Problems&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;p cl=\r\nass=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=\r\n=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;=\r\np class=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;Hi Roy&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div=\r\n&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/=\r\np&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36.0pt&#39;&gt;Any thoughs =\r\non HTML5 Web Sockets wrt REST? Would it be viable to have a REST resources =\r\nthat can communicate changes (events) through web sockets? Or would you say=\r\n that it is orthagonal?&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=\r\n=3D&#39;margin-left:36.0pt&#39;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3DMsoNorma=\r\nl style=3D&#39;mso-margin-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;mar=\r\ngin-left:36.0pt&#39;&gt;Thanks&lt;br&gt;Glenn&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3DMsoNor=\r\nmal style=3D&#39;margin-left:36.0pt&#39;&gt;On Wed, Jul 7, 2010 at 8:25 PM, Roy T.Fiel=\r\nding &lt;&lt;a href=3D&quot;mailto:fielding@...&quot;&gt;fielding@...&lt;/a&gt;&gt; wro=\r\nte:&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36.0pt;bac=\r\nkground:white&#39;&gt;&nbsp; &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;p class=3DMsoNorm=\r\nal style=3D&#39;mso-margin-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;ma=\r\nrgin-left:36.0pt;background:white&#39;&gt;On Jul 6, 2010, at 12:22 AM, bryan_w_tay=\r\nlor wrote:&lt;br&gt;&gt; --- In &lt;a href=3D&quot;mailto:rest-discuss%40yahoogroups.com&quot;=\r\n target=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;, &quot;Roy T. Fielding&=\r\nquot; &lt;fielding@...&gt; wrote:&lt;br&gt;&gt; &lt;br&gt;&gt; &gt; &gt; Specifically, =\r\nwe are trying to find RESTful solutions to:&lt;br&gt;&gt; &gt; &gt; &lt;br&gt;&gt; &gt;=\r\n &gt; 1) Guaranteed Delivery - we need a paradigm to follow so that one ser=\r\nvice can transfer a sequence of resource representations to another reliabl=\r\ny even though both services and the network suffer temporary unreliability&lt;=\r\nbr&gt;&gt; &gt; &lt;br&gt;&gt; &gt; That doesn&#39;t sound like a problem encountered by=\r\n RESTful&lt;br&gt;&gt; &gt; architectures. Reliable upload of multiple files can =\r\nbe&lt;br&gt;&gt; &gt; performed using a single zip file, but the assumption being=\r\n made&lt;br&gt;&gt; &gt; here is that the client has a shared understanding of wh=\r\nat the&lt;br&gt;&gt; &gt; server is intending to do with those files. That&#39;s coup=\r\nling.&lt;br&gt;&gt; &lt;br&gt;&gt; I don&#39;t follow. Several people have given good simpl=\r\ne answers saying to use the idempotent nature of PUT (or fake it with POST)=\r\n until a GET of the resource succeeds or add an HTTP header of If-None-Matc=\r\nh: * and repeat the PUT until you get a 412 Precondition Failed response, s=\r\no I thought this was a slam dunk.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3DMsoNormal =\r\nstyle=3D&#39;margin-left:36.0pt;background:white&#39;&gt;I guess it depends on how you=\r\n define guaranteed delivery. You can&lt;br&gt;certainly do such things with HTTP,=\r\n but doing CRUD ops via HTTP does&lt;br&gt;not automatically make it a RESTful pa=\r\nradigm. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;mso-margin-top-al=\r\nt:0cm;margin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt;background:w=\r\nhite&#39;&gt;&lt;br&gt;&lt;br&gt;&gt; But that answers &quot;how&quot; and I think you are get=\r\nting at &quot;why&quot;. I&#39;m imagining that we have two servers A and B, wh=\r\nere A plays the role of the client in the interaction. Events happen on ser=\r\nver A and server B must receive some representation related to each event o=\r\nr unacceptable business consequences occur.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3D=\r\nMsoNormal style=3D&#39;margin-left:36.0pt;background:white&#39;&gt;Ah, typical event-b=\r\nased integration. That&#39;s a good architectural&lt;br&gt;style for some application=\r\ns. Why use REST to do that? &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=\r\n=3D&#39;mso-margin-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;margin-lef=\r\nt:36.0pt;background:white&#39;&gt;&lt;br&gt;&lt;br&gt;&gt; Why can&#39;t we merge the functionalit=\r\ny of server A and B? Lots of reasons: Security, regulatory compliance, use =\r\nof 3rd party systems, organizational boundaries and/or politics are a few. =\r\nThe way a company manages it&#39;s systems engineering work is to partition bus=\r\niness functionality into pieces, give ownership of each piece to a team, an=\r\nd align physical resources like servers to those teams. If this imposes con=\r\nstraints not found in RESTful systems, then I have no choice but to deal wi=\r\nth those. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36=\r\n.0pt;background:white&#39;&gt;Yes, but the RESTful solution is not to pretend that=\r\n REST is an&lt;br&gt;event-based integration style. What you want to do with REST=\r\n is&lt;br&gt;re-architect the system into more isolated parts that are event-base=\r\nd&lt;br&gt;(usually a very small communication subsystem) and the remainder&lt;br&gt;as=\r\n a layered information system. The reason to do this, presumably,&lt;br&gt;is to =\r\nexpose the RESTful interface to consumers instead of exposing&lt;br&gt;the much m=\r\nore complex (and brittle) event interface.&lt;br&gt;&lt;br&gt;For example, CQ5 has a co=\r\nntent repository based on the JCR&lt;br&gt;interface, which includes both observa=\r\ntion (change event notifiers)&lt;br&gt;and RESTful interaction. The observation i=\r\ns behind the resource&lt;br&gt;interface, so the fact that it isn&#39;t RESTful itsel=\r\nf does not&lt;br&gt;interfere with the multi-organizational, long-lived applicati=\r\nons&lt;br&gt;that might only use the Web interface. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=\r\n=3DMsoNormal style=3D&#39;mso-margin-top-alt:0cm;margin-right:0cm;margin-bottom=\r\n:12.0pt;margin-left:36.0pt;background:white&#39;&gt;&lt;br&gt;&lt;br&gt;&gt; &gt; Applications=\r\n like that are usually accomplished via code-on-demand.&lt;br&gt;&gt; &gt; The pr=\r\noblem you will run into here is implementation issues&lt;br&gt;&gt; &gt; regardin=\r\ng current browsers, not architectural issues and&lt;br&gt;&gt; &gt; certainly not=\r\n a style issue. Most such tools are developed&lt;br&gt;&gt; &gt; as browser exten=\r\nsions or app-specific clients, mostly because&lt;br&gt;&gt; &gt; they need unfett=\r\nered access to the filesystem and because&lt;br&gt;&gt; &gt; browsers (for some u=\r\nnknown reason) don&#39;t include integrity checks&lt;br&gt;&gt; &gt; in normal file u=\r\nploads.&lt;br&gt;&gt; &lt;br&gt;&gt; I expect the clients of most of our services would=\r\n count as &quot;app specific clients&quot;. These might be our other servic=\r\nes, our app servers that host user interfaces, or sometimes we will allow e=\r\nxternal business entities (customers, partners, suppliers, etc...) to write=\r\n such apps directly. I don&#39;t mind going beyond browser limitations. &lt;br&gt;&gt=\r\n; &lt;br&gt;&gt; &gt; &gt; 2) Distributed Transactions - we need a paradigm to al=\r\nlow state changes on multiple services to happen so that the changes succee=\r\nd or fail as a unit&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; Again, not a characteristic =\r\nof RESTful architectures. If the&lt;br&gt;&gt; &gt; client knows the transaction =\r\nis distributed, you have failed.&lt;br&gt;&gt; &gt; There are lots of ways to sol=\r\nve this kind of problem on the&lt;br&gt;&gt; &gt; back-end of services interfaces=\r\n, behind the resource abstraction,&lt;br&gt;&gt; &gt; but none of those are relev=\r\nant to the REST architectural style&lt;br&gt;&gt; &gt; that might apply on the fr=\r\nont-end of the service interface.&lt;br&gt;&gt; &lt;br&gt;&gt; This one I accept doesn&#39;=\r\nt fit in a RESTful solution, and in other posts in this thread, we are expl=\r\noring several of other ways you mention.&lt;br&gt;&gt; &lt;br&gt;&gt; &gt; &gt; 3) Long=\r\n running operations - we need asynchronous invocations between services and=\r\n a mechanism for the invoking service to find out when the invoked service =\r\nis done given that this work may take indefinitely long&lt;br&gt;&gt; &gt; &lt;br&gt;&g=\r\nt; &gt; Any resource can behave as a long-running service. Just program it =\r\nthat way.&lt;br&gt;&gt; &lt;br&gt;&gt; Right, the question is how, exactly. Good soluti=\r\nons have been posted in this thread for this. Subbu&#39;s RESTful Web Services =\r\nCookbook solves this in examples 1.10 and 1.11. I think this was another sl=\r\nam dunk.&lt;br&gt;&gt; &lt;br&gt;&gt; I&#39;m curious what you think about using so called =\r\n&quot;web hooks&quot; for this kind of thing. Would you consider this a vio=\r\nlation of the client-server constraint? &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3DMso=\r\nNormal style=3D&#39;margin-left:36.0pt;background:white&#39;&gt;No, web hooks is just =\r\nsomeone&#39;s marketing term for registering&lt;br&gt;notifications. The components t=\r\nhat act on them are still either&lt;br&gt;clients or servers during the communica=\r\ntion (i.e., they are not&lt;br&gt;trying to do both at the same time and function=\r\nality is still&lt;br&gt;split across components). This is not a new concept. E.g.=\r\n,&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.xent.com/FoRK-archive/apr98/0445.html&quot; targe=\r\nt=3D&quot;_blank&quot;&gt;http://www.xent.com/FoRK-archive/apr98/0445.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a=\r\n href=3D&quot;http://www.xent.com/FoRK-archive/august98/0307.html&quot; target=3D&quot;_bl=\r\nank&quot;&gt;http://www.xent.com/FoRK-archive/august98/0307.html&lt;/a&gt; &lt;o:p&gt;&lt;/o:p&gt;&lt;/p=\r\n&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;mso-margin-top-alt:0cm;margin-right:0cm=\r\n;margin-bottom:12.0pt;margin-left:36.0pt;background:white&#39;&gt;&lt;br&gt;&lt;br&gt;&gt; &gt=\r\n; &gt; 4) Workflow Orchestration - we would like to have orchestration serv=\r\nices that define business processes via standardized representations (eg BP=\r\nMN), then execute instances of those processes and build up an process inst=\r\nance execution data resource by interacting with other RESTful resources us=\r\ning message exchange patterns that could specify the above behaviors.&lt;br&gt;&g=\r\nt; &gt; &lt;br&gt;&gt; &gt; That is a system, not an integration problem. If you =\r\nwant to&lt;br&gt;&gt; &gt; solve it, buy a full-featured WCM system like Day&#39;s CQ=\r\n5.&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; &lt;a href=3D&quot;http://www.day.com/day/en/products=\r\n/web_content_management.html&quot; target=3D&quot;_blank&quot;&gt;http://www.day.com/day/en/p=\r\nroducts/web_content_management.html&lt;/a&gt;&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; (sorry, =\r\nI don&#39;t have a way to answer that one without sounding&lt;br&gt;&gt; &gt; like a =\r\nsales plug -- it is, after all, why I work for a WCM vendor).&lt;br&gt;&gt; &lt;br&gt;&=\r\ngt; No need to apologize for pointing me to a product that might be useful =\r\nfor us. I&#39;ve been in several sales presentations in the last couple weeks w=\r\nith different vendors who have big fancy workflow engines. They all want to=\r\n talk about WS-BPEL and orchestrating our SOAP endpoints. I enjoy the look =\r\nof confusion when I mention that we are considering not allowing any new se=\r\nrvices to be created using SOAP. That seems to get their attention. They sa=\r\ny &quot;what will you do instead?&quot; and I say use HTTP and they say &qu=\r\not;huh?&quot;. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3DMsoNormal style=3D&#39;mso-margi=\r\nn-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt;back=\r\nground:white&#39;&gt;As much as I like doing things in HTTP, there are many closed=\r\n systems&lt;br&gt;that are better implemented in an efficient RPC syntax or a wir=\r\ne&lt;br&gt;protocol specifically designed for message queues. Use whatever&lt;br&gt;wor=\r\nks best for the specific architecture behind the resource interface&lt;br&gt;and =\r\nthen apply REST as the external facade to support large-scale&lt;br&gt;integratio=\r\nn and reusability of the information produced/consumed.&lt;br&gt;&lt;br&gt;Note, howeve=\r\nr, that SOAP is fairly unique for being the least efficient&lt;br&gt;way of doing=\r\n anything. That&#39;s what happens when core protocol design&lt;br&gt;is driven by ma=\r\nrketing.&lt;br&gt;&lt;br&gt;....Roy&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=3DMs=\r\noNormal style=3D&#39;margin-left:36.0pt;background:white&#39;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;o:p&gt;=\r\n&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3DMsoNormal style=3D&#39;margin-left:36.0pt;background:=\r\nwhite&#39;&gt;&lt;span style=3D&#39;color:white&#39;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;=\r\n&lt;/body&gt;&lt;/html&gt;\r\n--_000_3DDD0BE655869D4EA506652B3803AEF63A255F92PRISMcaffeineit_--\r\n\n"}}