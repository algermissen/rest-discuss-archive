{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":42263874,"authorName":"Lucas Gonze","from":"Lucas Gonze &lt;lgonze@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"Mt2__G9PPnMrpa305R3mf9wroD8xvm6oG_stVD6FeYaaP1AnWNbKxvEroDv3AiF83nUledeBlDqbCSYzvYBhzxScOXVO","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Update races","postDate":"1111468331","msgId":4959,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuTkVCLjQuNjIuMDUwMzIxMTg0OTU3MC4xOTk2QHBhbml4Mi5wYW5peC5jb20+","inReplyToHeader":"PGQxbWY3ZCttM2EyQGVHcm91cHMuY29tPg==","referencesHeader":"PGQxbWY3ZCttM2EyQGVHcm91cHMuY29tPg=="},"prevInTopic":4958,"nextInTopic":4967,"prevInTime":4958,"nextInTime":4960,"topicId":4957,"numMessagesInTopic":4,"msgSnippet":"... Cross-request transactions are frowned on because they make a system much less scalable.  That s the wisdom behind the stateless leg of RESTful ","rawEmail":"Return-Path: &lt;lgonze@...&gt;\r\nX-Sender: lgonze@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 38554 invoked from network); 22 Mar 2005 05:12:12 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m28.grp.scd.yahoo.com with QMQP; 22 Mar 2005 05:12:12 -0000\r\nReceived: from unknown (HELO mail2.panix.com) (166.84.1.73)\n  by mta3.grp.scd.yahoo.com with SMTP; 22 Mar 2005 05:12:12 -0000\r\nReceived: from panix2.panix.com (panix2.panix.com [166.84.1.2])\n\tby mail2.panix.com (Postfix) with ESMTP id ED095A7011;\n\tTue, 22 Mar 2005 00:12:11 -0500 (EST)\r\nReceived: from localhost (lgonze@localhost)\n\tby panix2.panix.com (8.11.6p3/8.8.8/PanixN1.1) with ESMTP id j2M5CBP04181;\n\tTue, 22 Mar 2005 00:12:11 -0500 (EST)\r\nDate: Mon, 21 Mar 2005 19:12:11 -1000 (HST)\r\nTo: sip_sniffa &lt;sip_sniffa@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;d1mf7d+m3a2@...&gt;\r\nMessage-ID: &lt;Pine.NEB.4.62.0503211849570.1996@...&gt;\r\nReferences: &lt;d1mf7d+m3a2@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Lucas Gonze &lt;lgonze@...&gt;\r\nReply-To: lucas@...\r\nSubject: Re: [rest-discuss] Update races\r\nX-Yahoo-Group-Post: member; u=42263874\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\n\nOn Mon, 21 Mar 2005, sip_sniffa wrote:\n&gt; I&#39;m considering developing web services for a project in a RESTful\n&gt; manner. However, I&#39;ve encountered a problem for which I haven&#39;t yet\n&gt; seen a tried and tested solution.\n&gt; \n&gt; The distributed nature of web-based systems means that races may occur\n&gt; when clients update specific resources. Traditionally this problem is\n&gt; solved by using transactions. Server state seems to be discouraged by\n&gt; those who advocate REST\n\nCross-request transactions are frowned on because they make a system much \nless scalable.  That&#39;s the wisdom behind the stateless leg of RESTful \narchitecture.  Whether that matters in your application is something only \nyou know.\n\nTry to break down your interactions so that the race is impossible. \nLet&#39;s say there are two users who check out a counter, update it, and \ncheck it back in.  There&#39;s a race because they need to own the object \nuntil they check it back in, so you&#39;d be tempted to add a transaction or \nmutex.  However, if you remodel so that they each POST to a counter \nincrementer like http://example.com/counter/incrementer, then the server \nowns the entire transaction and the problem goes away.  (I recognize how \nunelegant that example is.  :) )\n\nAs a general thing, model so that a POST is relative to whatever state is \nalready on the server, and not relative to any state the user holds.\n\nGood luck.\n\n- Lucas\n\n\n"}}