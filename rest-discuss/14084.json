{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"JYo2RalizRiXW239P5ww8HYQu8hIKEqBhxSbnTvDC5zK1PteyQg1mMDRFp0WE1Zya0ntERbsS-_qO7zS-lAu8ZfE9LUNCXyf0lNFMw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Multiple operations on the same ressource","postDate":"1260254187","msgId":14084,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMDkxMjA3MjIzNm4xNzZjZWIyZmhmODNjNWYzNTg4YWEzOWNjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIzRTFBOUQ2MzYzRTRBMEU5RUU1OEJBOTQ4NjYxM0MwQEpyblBDPg==","referencesHeader":"PDIzRTFBOUQ2MzYzRTRBMEU5RUU1OEJBOTQ4NjYxM0MwQEpyblBDPg=="},"prevInTopic":14083,"nextInTopic":14085,"prevInTime":14083,"nextInTime":14085,"topicId":14083,"numMessagesInTopic":28,"msgSnippet":"... For single field updates, this is probably not optimal, but if you ve got different types of state changes that can be initiated by the same resource, each","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86130 invoked from network); 8 Dec 2009 06:36:27 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 8 Dec 2009 06:36:27 -0000\r\nX-Received: from unknown (HELO mail-px0-f187.google.com) (209.85.216.187)\n  by mta1.grp.sp2.yahoo.com with SMTP; 8 Dec 2009 06:36:27 -0000\r\nX-Received: by pxi17 with SMTP id 17so2173946pxi.30\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 07 Dec 2009 22:36:27 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.143.27.41 with SMTP id e41mr847756wfj.218.1260254187494; Mon, \n\t07 Dec 2009 22:36:27 -0800 (PST)\r\nIn-Reply-To: &lt;23E1A9D6363E4A0E9EE58BA9486613C0@JrnPC&gt;\r\nReferences: &lt;23E1A9D6363E4A0E9EE58BA9486613C0@JrnPC&gt;\r\nDate: Mon, 7 Dec 2009 22:36:27 -0800\r\nMessage-ID: &lt;f8b39ace0912072236n176ceb2fhf83c5f3588aa39cc@...&gt;\r\nTo: =?ISO-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00504502cd112c1e3b047a31cb34\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Multiple operations on the same ressource\r\nX-Yahoo-Group-Post: member; u=352334505; y=dnhUAyjQTPULID9SZCJFxAlMQSj5_LnBl0g7VlXmzG7628HisKvauJT1vQ\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\n\r\n--00504502cd112c1e3b047a31cb34\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Mon, Dec 7, 2009 at 9:50 PM, J=F8rn Wildt &lt;jw@...&gt; wrote:\n\n&gt;=\r\n\n&gt;\n&gt; How do one model different operations on the same ressource when we on=\r\nly\n&gt; have POST (and PUT/DELETE does not fit)?\n&gt;\n&gt; Lets assume we have a Use=\r\nr in some system and we want to be able to:\n&gt;\n&gt; 1) Change password\n&gt; 2) Cha=\r\nnge e-mail\n&gt; 3) Change address\n&gt;\n&gt; For concurrency, versioning and other re=\r\nasons we want to distingush these\n&gt; three operations from each other. This =\r\nmeans the client must make explicit\n&gt; which operation it performs. It is no=\r\nt allowed to post the whole ressource\n&gt; representation since this increases=\r\n the risc of versioning conflicts where\n&gt; two clients reads the same ressou=\r\nrce, changes different properties, and then\n&gt; posts the whole ressource bac=\r\nk again, overwriting the changes done by\n&gt; the other client.\n&gt;\n&gt; One soluti=\r\non is to switch on the posted content type: if it&#39;s a &quot;password&quot;\n&gt; then do =\r\none thing, if it&#39;s a &quot;e-mail&quot; then do something else and so on. This\n&gt; alth=\r\nough seems a bit like using the SOAP &quot;action&quot; header and tunneling\n&gt; everyh=\r\nting through a POST.\n&gt;\n\nFor single field updates, this is probably not opti=\r\nmal, but if you&#39;ve got\ndifferent types of state changes that can be initiat=\r\ned by the same resource,\neach requiring a different set of data, this is a =\r\npretty reasonable\napproach.\n\n\n&gt;\n&gt; Another solution is to have one sub-resso=\r\nurce for each operation, like for\n&gt; instance /users/1234/password, /users/1=\r\n234/email, /users/1234/address - now\n&gt; you know your operation by looking a=\r\nt the ressource your are posting to.\n&gt;\n\nMany RESTafarians frown at doing &quot;p=\r\nartial updates&quot; (i.e. only update the\nfields that are actually included in =\r\nthe request body) with a PUT -- I tend\ntowards the pragmatic view and used =\r\nthis in several APIs -- but when you&#39;re\ndoing a POST I don&#39;t see a reason w=\r\nhy it should not make sense.  Letting the\nclient change whatever combinatio=\r\nn of fields they need to in *one* request\n(and therefore probably a single =\r\ndatabase transaction) would seem reasonable\nto me.\n\n\n&gt;\n&gt; Are there better s=\r\nolutions out there?\n&gt;\n\nAnother thing you might consider is the PATCH verb, =\r\nbut it is not as\ncommonly used.\n\n\n&gt;\n&gt; Thanks, J=F8rn\n&gt;\n&gt;\nCraig\n\n\n&gt;  \n&gt;\n\r\n--00504502cd112c1e3b047a31cb34\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Dec 7, 2009 at 9:50 PM, J=F8rn W=\r\nildt &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jw@...&quot;&gt;jw@fjeldgr=\r\nuppen.dk&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; p=\r\nadding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, =\r\n255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n   =\r\n   &lt;p&gt;\n\n\n&lt;/p&gt;&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;How do one model differen=\r\nt operations on the same \nressource when we only have POST (and PUT/DELETE =\r\ndoes not fit)?&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;=A0=\r\n&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;Lets assume we have a User in s=\r\nome system and we \nwant to be able to:&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Aria=\r\nl&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;1) Chan=\r\nge password&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;2) Change e-m=\r\nail&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;3) Change address&lt;/fo=\r\nnt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font =\r\nface=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;For concurrency, versioning and other reasons we =\r\n\nwant to distingush these three operations from each other. This means the =\r\nclient \nmust make explicit which operation it performs. It is not allowed t=\r\no post the \nwhole ressource representation since this increases the risc of=\r\n versioning \nconflicts where two clients reads the same ressource, changes =\r\ndifferent \nproperties, and then posts the whole ressource back again, overw=\r\nriting the \nchanges done by the=A0other client.&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font fac=\r\ne=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2=\r\n&quot;&gt;One solution is to switch on the posted content \ntype: if it&#39;s a &quo=\r\nt;password&quot; then do one thing, if it&#39;s a &quot;e-mail&quot; then d=\r\no \nsomething else and so on. This although seems a bit like using the SOAP =\r\n&quot;action&quot; \nheader and tunneling everyhting through a POST.&lt;/font&gt;&lt;=\r\n/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;For single field updates=\r\n, this is probably not optimal, but if you&#39;ve got different types of st=\r\nate changes that can be initiated by the same resource, each requiring a di=\r\nfferent set of data, this is a pretty reasonable approach.&lt;br&gt;\n=A0&lt;/div&gt;&lt;bl=\r\nockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204=\r\n, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;div style=3D&quot;backgr=\r\nound-color: rgb(255, 255, 255);&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; =\r\nsize=3D&quot;2&quot;&gt;&lt;/font&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;Another so=\r\nlution is to have one sub-ressource for \neach operation, like for instance =\r\n/users/1234/password, /users/1234/email, \n/users/1234/address - now you kno=\r\nw your operation by looking at the ressource \nyour are posting to.&lt;/font&gt;&lt;/=\r\ndiv&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/=\r\ndiv&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Many RESTafarians frown at doing &quot;partial up=\r\ndates&quot; (i.e. only update the fields that are actually included in the =\r\nrequest body) with a PUT -- I tend towards the pragmatic view and used this=\r\n in several APIs -- but when you&#39;re doing a POST I don&#39;t see a reas=\r\non why it should not make sense.=A0 Letting the client change whatever comb=\r\nination of fields they need to in *one* request (and therefore probably a s=\r\ningle database transaction) would seem reasonable to me.&lt;br&gt;\n=A0&lt;/div&gt;&lt;bloc=\r\nkquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, =\r\n204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;div style=3D&quot;backgrou=\r\nnd-color: rgb(255, 255, 255);&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font fac=\r\ne=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;Are there better solutions out there?&lt;/font&gt;&lt;/div&gt;\n&lt;=\r\ndiv&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/=\r\nblockquote&gt;&lt;div&gt;&lt;br&gt;Another thing you might consider is the PATCH verb, but=\r\n it is not as commonly used.&lt;br&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; =\r\nstyle=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8=\r\nex; padding-left: 1ex;&quot;&gt;\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255)=\r\n;&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;=A0&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt;Thank=\r\ns, J=F8rn&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;=A0&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;=\r\ndiv&gt;Craig&lt;br&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-lef=\r\nt: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1=\r\nex;&quot;&gt;&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;div&gt;&lt;div&gt;&lt;div&gt;\n=\r\n\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color: rgb(255, 255, 255); min-h=\r\neight: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--00504502cd112c1e3b047a31cb34--\r\n\n"}}