{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"gHpv1sgaz_HDj56xZt9NWYL2euBfOVwr_6e4oHebJIqezKpAJcXrjgutMRDNISjW8kMByNZVow_nyBJYEL5BtpvpaxBLmoufySyncU57EpU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Atom feed vs. list of orders","postDate":"1281092731","msgId":16194,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPg=="},"prevInTopic":0,"nextInTopic":16198,"prevInTime":16193,"nextInTime":16195,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":"Something I have been trying to wrap my head around: Suppose we are dealing with the procurement domain. Also suppose we plan on dealing with lists of orders","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25028 invoked from network); 6 Aug 2010 11:09:47 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 6 Aug 2010 11:09:47 -0000\r\nX-Received: from unknown (HELO asmtpout028.mac.com) (17.148.16.103)\n  by mta1.grp.sp2.yahoo.com with SMTP; 6 Aug 2010 11:09:47 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [10.203.81.53] ([80.187.99.85])\n by asmtp028.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0L6Q00HF49H90090@...&gt; for\n rest-discuss@yahoogroups.com; Fri, 06 Aug 2010 04:05:42 -0700 (PDT)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=6.0.2-1004200000 definitions=main-1008060048\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.0.10011,1.0.148,0.0.0000\n definitions=2010-08-06_05:2010-08-06,2010-08-06,1970-01-01 signatures=0\r\nDate: Fri, 06 Aug 2010 13:05:31 +0200\r\nMessage-id: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=289191104; y=MwGcCHoJAHXWP3_j47C8lJONg5rBmH-_SN2ArLxolX1WJ2lLTFKGhaHn\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nSomething I have been trying to wrap my head around:\n\nSuppose we are dealing with the procurement domain. Also suppose we plan on dealing with lists of orders (e.g. maybe there is a system that manages orders and exposes the new ones, processsed ones or the ones being shipped. There will be clients that do something with these order lists such as compiling a report.\n\nAlso suppose we have defined a link semantic that allows a server to point a client to, for example, the list of new orders.\n\nIt is not important how that link semantic looks, but it could be &lt;newOrders href=&quot;/foo/bar&quot; /&gt; or &lt;link rel=&quot;new-orders&quot; href=&quot;/foo/bar&quot;/&gt; or an AtomPub collection with a special category: &lt;collection href=&quot;/foo/bar&quot;&gt;&lt;category term=&quot;new-orders&quot; scheme=&quot;..&quot;/&gt;&lt;/collection&gt;.\n\nI personally &#39;call&#39; any of those &#39;link semantics&#39; and for the purpose of my question it only matters that the useragent ends up knowing that\n\n\n   /foo/bar  is the URI of a resource that represents the list of new orders.\n\nAn equivalent from the HTML world would be that &lt;img src=&quot;/baz.gif&quot;/&gt; tells the client that\n\n  /baz.gif is a resource that is &#39;an image&#39;[1]\n\n\nThe issue I am dealing with is this: What is the appropriate degree of specificity of the media type for lists of orders. Especially I am wondering whether it is enough for the user agent to say\n\n  Accept: application/atom+xml;type=feed\n\n\nor whether the Accept header should include the user agent capabilities regarding the individual order entries, e.g.\n\n  Accept: application/orderlist\n\n\nTake a step back and lets think about what is happening here. At one level, the server informs that client about the nature of a resource and at another (lower) level the client informs the server about its technical capabilities that allow it to process responses for a request to the given resource.\n\nI think it is important to distinuish these levels because the actual request the client makes does not express any assumptions about the nature of the resource, only about the technical capability.\n\nThe assumption (e.g. that the requested resource is &#39;an image&#39;) happens before that.\n\nBrowsers are implemented to follow &lt;img src=&quot;&quot;/&gt; links and process the response by inlining the received images into the rendered page. Other HTML-aware clients might be implemented to produce a fine-printed book of all images found via &lt;img src=&quot;&quot;/&gt; links.\n\nThe actual request will (usually) contain an Accept header of the form:\n\nAccept: image/gif,image/jpeg,image/png,image/*\n\nWhat this accept header is saying is *not*\n\n    &quot;I expect that the requested resource is &#39;an image&#39;&quot;\n\nbut\n\n       &quot;I can process a response to this request if you give me any of the accepted formts&quot;\n   IOW:&quot;I can do whatever I want to do if the response comes in any of these formats&quot;\n\n\nBefore this gets boring, lets shift to the example of the list of new orders. Suppose I am implementing a user agent that compiles a list of all items ordered in the list of new orders.\n\nSuch a user agent would be implemented to find (or just be given or have bookmarked) the URI of the resource that represents the list of new orders (in the same sense as browsers get hold of the URI of &#39;an image&#39;).\n\nHow do I have to implement the user agent&#39;s construction of the GET request to /foo/bar?\n\nSuppose we are using a media type application/order for order representations and have also decided to build upon Atom for dealing with lists of stuff in our domain. We might construct the request as:\n\nGET /foo/bar\nAccept: application/atom+xml;type=feed\n\nand the server might send something like (excuse flaws in the XML, pls)\n\n\n200 Ok\nContent-Type: application/atom+xml[1]       \n\n&lt;feed&gt;\n  &lt;entry&gt;\n    &lt;content type=&quot;application/order&gt;\n      &lt;order&gt;....&lt;/order&gt;\n    &lt;/content&gt;\n  &lt;/entry&gt;\n  &lt;entry&gt;\n    &lt;content type=&quot;application/order&gt;\n      &lt;order&gt;....&lt;/order&gt;\n    &lt;/content&gt;\n  &lt;/entry&gt;\n&lt;/feed&gt;\n\nIs that sufficient? Does the acept header sufficiently express the processing capabilities in the Accept header? Can the server know that the user agent wants to receive the entries as application/order? Is it ok to just program the user agent to ignore the entries of which it does not understand the type?\n\nWould we end up with the correct list of ordered items if all entries come back as HTML and the user agent ignores them?\n\n\n\n\nI think that there is a great danger of creating a nightmare of hidden coupling because in my opinion the user agent simply can *not* fullfil its processing goal given simply &#39;an atom feed&#39;. An Atom feed reader *can* do that (because it has a different goal) but a newly-ordered-items-list compiling user agent can not do that it it must express that in the Accept header.\n\nI&#39;d rather define a media type application/orderlist (defined as an Atom feed containing entries of application/order) and have the user agent be explicit:\n\nGET /foo/bar\nAccept: application/orderlist\n\n\n200 Ok\nContent-Type: application/orderlist       \n\n&lt;feed&gt;\n  &lt;entry&gt;\n    &lt;content type=&quot;application/order&gt;\n      &lt;order&gt;....&lt;/order&gt;\n    &lt;/content&gt;\n  &lt;/entry&gt;\n  &lt;entry&gt;\n    &lt;content type=&quot;application/order&gt;\n      &lt;order&gt;....&lt;/order&gt;\n    &lt;/content&gt;\n  &lt;/entry&gt;\n&lt;/feed&gt;\n\n\nWhat do others think?\n\n(See also [3])\n\nJan\n\n[1] &#39;An image&#39; is as good as it gets in terms of definitions, BTW.\n    &lt;http://www.w3.org/TR/html401/struct/objects.html#edef-IMG&gt; \n    Note that the HTML spec also provides some sort of hint what media types are involved when dealing with images.\n\n[2] conneged on the type param already, so no need to repeat it in the Content-Type header\n\n[3] There is also the issue of returning a feed that consists of references to entries that the user agent can then GET as Accept: application/order individually. Certainly we aould not want to define a list format that constrains the references to only references application;order resource. The user agent would basically have to report an error if the referenced order is not available as application/order (that is upon a 406 on a GET subrequest)\n\nAn alternative would be to have the user agent Accept: application/atom+xml;type=feed but report an error if an entry in the feed is not provided as application/order (be it inline or via a sub-request).\n\n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}