{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":86707282,"authorName":"Scott Chapman","from":"Scott Chapman &lt;scott_list@...&gt;","profile":"chappie_mischko","replyTo":"SENDER","senderId":"vwEnp5G4Lx9lesfM1iDT_HwnITv7Q5T9xS6WSN3PWCiPWCI0SJqD-fMhOpvj35SY4VIXE_dcIgb20IWlB7A06djrQTQJnF9mCkTZdwE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful CRUD Module?","postDate":"1180881121","msgId":8777,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NjJEMEUxLjYwMjAxMDNAbWlzY2hrby5jb20+","inReplyToHeader":"PDAwMDUwMWM3YTU1ZCRkMmUyYTljMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PDg3N2lxbmMzaDIuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPjw4N2hjcHJhbWlsLmZzZkBrYW5nYS50YXBzZWxsZmVycmllci5jby51az48NzExYTczZGYwNzA2MDEwODAwdzI3Y2ZjMzA5bTQ5Y2FmNjU1OGJjOGM5N2FAbWFpbC5nbWFpbC5jb20+PDg3em0zajkwaHEuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPjw3MTFhNzNkZjA3MDYwMTA4MTV4NWI5N2IyYzFyZWNjNTZiNTEzYmIxMzFmOEBtYWlsLmdtYWlsLmNvbT48ODd3c3luOHp0di5mc2ZAa2FuZ2EudGFwc2VsbGZlcnJpZXIuY28udWs+PDQ2NjA0NTM0LjQwMDA0MDNAaGFja2NyYWZ0Lm5ldD48OTBGNEQ3MUUtOURCMi00NjhDLUI3RUUtRjM4MUQ2RUE4QTcyQG1pbmR0b3VjaC5jb20+PDQ2MkVCRjU5LTY3NDgtNERDNS05MkE1LTM0MUU1RUI5REFEM0BnbWFpbC5jb20+PEM4QkIxQkE1LTMxNTEtNDg4OS1CNzAxLTgyQjI3QTkzNDAyMkBtaW5kdG91Y2guY29tPiA8ODc2NDY3OGZ6aC5mc2ZAa2FuZ2EudGFwc2VsbGZlcnJpZXIuY28udWs+IDwwMDA1MDFjN2E1NWQkZDJlMmE5YzAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPg=="},"prevInTopic":8775,"nextInTopic":8782,"prevInTime":8776,"nextInTime":8778,"topicId":8772,"numMessagesInTopic":23,"msgSnippet":"Mike, This doesn t answer your question directly but it s a way to implement the situation and can be used in CherryPy quite easily: ","rawEmail":"Return-Path: &lt;scott_list@...&gt;\r\nX-Sender: scott_list@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 9740 invoked from network); 3 Jun 2007 14:32:56 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m44.grp.scd.yahoo.com with QMQP; 3 Jun 2007 14:32:56 -0000\r\nReceived: from unknown (HELO www.mischko.com) (198.107.3.75)\n  by mta7.grp.scd.yahoo.com with SMTP; 3 Jun 2007 14:32:56 -0000\r\nReceived: from [70.162.26.204] (ip70-162-26-204.ph.ph.cox.net [70.162.26.204])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby www.mischko.com (Postfix) with ESMTP id 6AFDFEC510;\n\tSun,  3 Jun 2007 07:32:03 -0700 (PDT)\r\nMessage-ID: &lt;4662D0E1.6020103@...&gt;\r\nDate: Sun, 03 Jun 2007 07:32:01 -0700\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070403 Thunderbird/1.5.0.10 Mnenhy/0.7.4.0\r\nMIME-Version: 1.0\r\nTo: Mike Schinkel &lt;mikeschinkel@...&gt;\r\nCc: &#39;REST Discuss&#39; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;877iqnc3h2.fsf@...&gt;&lt;87hcpramil.fsf@...&gt;&lt;711a73df0706010800w27cfc309m49caf6558bc8c97a@...&gt;&lt;87zm3j90hq.fsf@...&gt;&lt;711a73df0706010815x5b97b2c1recc56b513bb131f8@...&gt;&lt;87wsyn8ztv.fsf@...&gt;&lt;46604534.4000403@...&gt;&lt;90F4D71E-9DB2-468C-B7EE-F381D6EA8A72@...&gt;&lt;462EBF59-6748-4DC5-92A5-341E5EB9DAD3@...&gt;&lt;C8BB1BA5-3151-4889-B701-82B27A934022@...&gt; &lt;8764678fzh.fsf@...&gt; &lt;000501c7a55d$d2e2a9c0$0702a8c0@...&gt;\r\nIn-Reply-To: &lt;000501c7a55d$d2e2a9c0$0702a8c0@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Scott Chapman &lt;scott_list@...&gt;\r\nSubject: Re: [rest-discuss] RESTful CRUD Module?\r\nX-Yahoo-Group-Post: member; u=86707282; y=nhLZyXdh045as6fVHYX9FrYxxD1gc-LybvORMGnMYtWjENpg5AOXUb2m\r\nX-Yahoo-Profile: chappie_mischko\r\n\r\nMike,\nThis doesn&#39;t answer your question directly but it&#39;s a way to implement the \nsituation and can be used in CherryPy quite easily:\n\nhttp://routes.groovie.org/manual.html#restful-services\n\nIt can be used AJAXian or not, of course, depending on how you implement it.\n\nScott\n\nMike Schinkel wrote:\n&gt; Hi all:\n&gt; \n&gt; To start, this is not about the &quot;Is REST=CRUD?&quot; debate.  This is me asking\n&gt; how to create a typical CRUD module for a web application that is RESTful.\n&gt; And forgive the fact that this has probably already been answered 1000 times\n&gt; before; if it has I haven&#39;t seen it.\n&gt; \n&gt; What started this was someone asked the following on the TurboGears list:\n&gt; \n&gt;&gt; I&#39;ve been refactoring my admin interface and trying to get it \n&gt;&gt; nice and RESTful ( oh the buzzwords! ). As I am new to this \n&gt;&gt; resting business, I&#39;m wondering, is there a compelling reason \n&gt;&gt; to need to do:\n&gt;&gt;\n&gt;&gt; page/7/edit\n&gt;&gt; vs\n&gt;&gt; page/edit/7\n&gt;&gt;\n&gt;&gt; The example in the book uses the first, but I&#39;m finding the \n&gt;&gt; second would be much easier to do with CherryPy.\n&gt;&gt;\n&gt;&gt; Thanks helpful gurus!\n&gt; \n&gt; Several people replied with mechanics of TurboGears but nobody mentioned the\n&gt; use of the edit verb so I decided to clarify and then realized that, while I\n&gt; could tell him what not to do (i.e. &quot;don&#39;t use verbs&quot;), I couldn&#39;t tell him\n&gt; how to do it correctly.\n&gt; \n&gt; In the past when I have written such modules I would typically write them\n&gt; like this:\n&gt; \n&gt; \thttp://examples.com/pages/{page_id}/?mode={mode}\n&gt; \n&gt; Where {mode} was one of:\n&gt; \n&gt; \t&lt;nothing&gt;\n&gt; \tadd\n&gt; \tinsert\n&gt; \tedit\n&gt; \tupdate\n&gt; \tlist\n&gt; \tdelete\n&gt; \tconfirm\n&gt; \n&gt; And maybe a few more.  BTW, these are not that &quot;well designed&quot; URLs, but\n&gt; it&#39;s how I coded before I heavily researched URL concepts.  \n&gt; \n&gt; Note that there are several interesting pairs: &quot;add&quot; and &quot;insert&quot;, &quot;edit&quot;\n&gt; and &quot;update&quot;, and &quot;delete&quot; and &quot;confirm&quot;   Both &quot;add&quot; and &quot;edit&quot; displayed a\n&gt; data entry form whereas &quot;insert&quot; and &quot;update&quot; insert and update from those\n&gt; forms, respectively, with the latter 302 redirecting to &lt;nothing&gt; (a.k.a.\n&gt; &quot;show&quot;)  and &quot;confirm&quot; displaying a delete confirmation screen with &quot;delete&quot;\n&gt; performing the actual delete and 301 redirecting to &quot;page/list&quot;  And when\n&gt; &quot;add&quot; mode was requested it contained {mode} as a hidden field with a value\n&gt; of &quot;insert.&quot; When &quot;edit&quot; mode was requested, the hidden {mode} fields got a\n&gt; value of &quot;update.&quot;  It all works well and good, but I now understand its not\n&gt; RESTful.  \n&gt; \n&gt; To be RESTful, we GET &quot;page/{page_id}&quot; for display, PUT to &quot;page/{page_id}&quot;\n&gt; for an update, DELETE &quot;page/{page_id}&quot; for a delete, and GET &quot;page/list&quot; for\n&gt; a list. But how do we deal with getting an edit form before the PUT?  How do\n&gt; we handle delete confirmation?  How do we handle requesting a data entry\n&gt; form designed for a new page (POST to &quot;page/new&quot;?)   Answer both assuming\n&gt; AJAX and also no AJAX, if you will.\n&gt; \n\n\n"}}