{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"TIxQYRqlKClc-qYK0kRTJrwjKQE2zYrsCpFfLIVJjUBNbFvpX5e5J6Key9wH3C6_EAKgK0yZrhtTNtZAmKpUlHiTfGWGAGDvdpsi6tro2Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] More media type questions","postDate":"1286738539","msgId":16727,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMDEwMTMyMjE5LmEwYWRjZDRhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAxMDA1MjMyNjIwLmJhODU5YTI2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PEFBTkxrVGltZUZ1Uk1Qdl9GTkZDUThHT0xUeEV4c05KVFVKY3VpVkQwOGJUX0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAxMDA1MjMyNjIwLmJhODU5YTI2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":16722,"nextInTopic":0,"prevInTime":16726,"nextInTime":16728,"topicId":16718,"numMessagesInTopic":6,"msgSnippet":"... I m referring to application-layer security, not just network-layer security, to clarify -- application security is based on media type, network security","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57122 invoked from network); 10 Oct 2010 19:22:41 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 10 Oct 2010 19:22:41 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 10 Oct 2010 19:22:41 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 43A2E509D9;\n\tSun, 10 Oct 2010 15:22:40 -0400 (EDT)\r\nDate: Sun, 10 Oct 2010 13:22:19 -0600\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Will Hartung &lt;willh@...&gt;, Rest List\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20101010132219.a0adcd4a.eric@...&gt;\r\nIn-Reply-To: &lt;20101005232620.ba859a26.eric@...&gt;\r\nReferences: &lt;AANLkTimeFuRMPv_FNFCQ8GOLTxExsNJTUJcuiVD08bT_@...&gt;\n\t&lt;20101005232620.ba859a26.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] More media type questions\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt; The entire security architecture of the Internet is based on media\n&gt; types.\n&gt;\n\nI&#39;m referring to application-layer security, not just network-layer\nsecurity, to clarify -- application security is based on media type,\nnetwork security may take media type into account, but in neither case\nis media type the only concern.  2010 saw many sysadmins block PDF\noutright, across all protocols, until Adobe and Microsoft released\npatches for their vulnerable software.\n\nJust one tiny example I stumbled across in my bookmarks today, of this\nhard-and-fast rule of the Internet (use the media type which best\ndescribes your intended processing model for the data type you&#39;re\nusing):\n\nhttp://jibbering.com/blog/?p=514\n\nNothing to do with REST, just a plain fact -- work against the Web, and\nthe resulting system is one which can&#39;t be hardened by anyone, not even\nGoogle (except by changing the media type to what it should&#39;ve been in\nthe first place).  Of course, there&#39;s a guy in the comment thread who\ninsists on continuing to use text/html for his JSON because his entire\nsystem is based on vulnerable, undefined browser handling of JSON as\nJSON despite being served as text/html, where changing to application/\njson would present his users with a download dialogue -- NOT REST.\n\nREST systems, by working with the Web, may be more easily hardened by\navoiding all concerns derived from improper design:\n\nhttp://ha.ckers.org/blog/20071014/web-application-scanning-depth-statistics/\n\nThere&#39;s a whole industry out there dedicated to &quot;securing&quot; things like\ncookie-based authentication, sessions (randomized session IDs instead\nof sequential) or AJAX-driven stateful cookies -- which just aren&#39;t\nrelevant concerns in REST.  The &quot;crawling&quot; concern is entirely based on\nfiguring out what the links *really* are, since resources are defined\nas URI + cookies, instead of the identification of resources constraint.\n\nBut these crawlers are still based on &lt;a href&gt; and &lt;link&gt; -- not URIs in\nrandom markup -- plus the ability to decipher XHR code.  This industry\nis based on known exploits targeted at standardized data types (or, HTTP\nun-RESTfully implemented).  There is no way to predict what exploits may\nbe possible with unknown data types, so unknown data types are\nconsidered security holes in Web systems, regardless of what REST has\nto say about the practice.\n\nMy advice for hardening any website, is to first re-architect it as a\nREST system, even if that means accepting crummy browser implementations\nof HTTP authentication, or media/data types which are less-than-ideal.\nSuch tradeoffs have far-reaching benefits which outweigh the problems\nthey entail.  The consequences of avoiding such problems only increase\nwith the scope, scale and longevity of the system.  There&#39;s enough to\nworry about not only *by* using standard media types, but also in *how*\nthey are used, without introducing unknowns into the system.\n\nThe security profile of any REST system is a known problem, not a\nboundless one requiring consultant deployment of $30K dynamic security\nsoftware.  I&#39;m not implying that REST is secure, only readily securable.\nREST systems are invulnerable to SQL injection, because SQL isn&#39;t part\nof the API -- it&#39;s encapsulated behind a uniform interface, not exposed\n*as* the interface.  This concept is typically ignored -- by systems\nwhich are then compromised by SQL injection.\n\nIMO, Web security _starts_ with proper media type selection.  You may\naddress everything else, but by straying from the IANA registry you&#39;re\nstill left with an unknown at the heart of your system, which is just\nbegging to be exploited -- likely in a manner that&#39;s already been\nexposed and corrected for standardized media types, or which would have\nbeen brought to light in discussion on ietf-types as part of the\nregistration process.\n\n-Eric\n\n"}}