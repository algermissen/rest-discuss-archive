{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":209043068,"authorName":"Solomon Duskis","from":"Solomon Duskis &lt;sduskis@...&gt;","profile":"sduskis","replyTo":"SENDER","senderId":"uV5eASXeX91FcAZupRNwxiOmWn4X8TJiCxA5sU1kTCFiEnh3OcivPA1qEVSXtWIKFiV6yyIhreTmt3xTyPKaCbB9AgoDcTuLPQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] This is REST","postDate":"1236255703","msgId":12196,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU1YzYwZTM3MDkwMzA1MDQyMXQ1MjVjMmVlN284NWI4ZTg1NGFhMDI0NjhjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDI1OWE5ODQ0MDkwMzA0MjE1MHUyODUzMmM4bGYwNTcyZTVkZTgzOTNjNDBAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDU1YzYwZTM3MDkwMzAyMTQwOWg2ZjIwNDc2ZncyZTgwNjk2YWMzMTllYzM2QG1haWwuZ21haWwuY29tPgkgPEMwRTA2ODFGLTZFNjctNDgwNy04REIwLTI2Mjk1MkREM0FBQUBpbm5vcS5jb20+CSA8NTVjNjBlMzcwOTAzMDIxNDQwczZlYzhiMzFicmQwZjZmMmE4ZDFlNTg2ZTVAbWFpbC5nbWFpbC5jb20+CSA8RjM0QTE0MjYtNkQ3OC00MDI4LTk2M0YtNTlGRUQzMjc0OTlBQGlubm9xLmNvbT4JIDw1NWM2MGUzNzA5MDMwMzA2MTFuMjA3NzI5Y2Z4YzgyNTk2NWFmOTMwOGFlMEBtYWlsLmdtYWlsLmNvbT4JIDwyNkVFNEQ3RC0xMTJFLTRDMjMtOEVFQS0xMzYyRUQ2NzY4QTZAZ2Jpdi5jb20+CSA8NTVjNjBlMzcwOTAzMDQwMzMxdDExYTdjYjAwa2IyZjc4OTA3NjY5ODk1OWJAbWFpbC5nbWFpbC5jb20+CSA8MjU5YTk4NDQwOTAzMDQxODE4bTc5MjY4YjE4ZzkxZTc0NDY0NmUxN2YwMTZAbWFpbC5nbWFpbC5jb20+CSA8NTVjNjBlMzcwOTAzMDQyMDAzbDhiMzQ0djYyMjcyZTY4ZGFiNzZmNjlAbWFpbC5nbWFpbC5jb20+CSA8MjU5YTk4NDQwOTAzMDQyMTUwdTI4NTMyYzhsZjA1NzJlNWRlODM5M2M0MEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":12195,"nextInTopic":12197,"prevInTime":12195,"nextInTime":12197,"topicId":12170,"numMessagesInTopic":28,"msgSnippet":"*RE: XHTML *It looks like a promising foundation for RESTful API Media Types.  You have a whole bunch of class= on your  tags (plus other","rawEmail":"Return-Path: &lt;sduskis@...&gt;\r\nX-Sender: sduskis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 99864 invoked from network); 5 Mar 2009 12:21:44 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m52.grp.scd.yahoo.com with QMQP; 5 Mar 2009 12:21:44 -0000\r\nX-Received: from unknown (HELO qw-out-1920.google.com) (74.125.92.148)\n  by mta16.grp.scd.yahoo.com with SMTP; 5 Mar 2009 12:21:44 -0000\r\nX-Received: by qw-out-1920.google.com with SMTP id 14so2895689qwa.46\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 05 Mar 2009 04:21:44 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.11.72 with SMTP id s8mr1638101qas.377.1236255704005; Thu, \n\t05 Mar 2009 04:21:44 -0800 (PST)\r\nIn-Reply-To: &lt;259a98440903042150u28532c8lf0572e5de8393c40@...&gt;\r\nReferences: &lt;55c60e370903021409h6f20476fw2e80696ac319ec36@...&gt;\n\t &lt;C0E0681F-6E67-4807-8DB0-262952DD3AAA@...&gt;\n\t &lt;55c60e370903021440s6ec8b31brd0f6f2a8d1e586e5@...&gt;\n\t &lt;F34A1426-6D78-4028-963F-59FED327499A@...&gt;\n\t &lt;55c60e370903030611n207729cfxc825965af9308ae0@...&gt;\n\t &lt;26EE4D7D-112E-4C23-8EEA-1362ED6768A6@...&gt;\n\t &lt;55c60e370903040331t11a7cb00kb2f789076698959b@...&gt;\n\t &lt;259a98440903041818m79268b18g91e744646e17f016@...&gt;\n\t &lt;55c60e370903042003l8b344v62272e68dab76f69@...&gt;\n\t &lt;259a98440903042150u28532c8lf0572e5de8393c40@...&gt;\r\nDate: Thu, 5 Mar 2009 07:21:43 -0500\r\nMessage-ID: &lt;55c60e370903050421t525c2ee7o85b8e854aa02468c@...&gt;\r\nTo: darrel@...\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0015175cdb0c16bd2f04645e3631\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Solomon Duskis &lt;sduskis@...&gt;\r\nSubject: Re: [rest-discuss] This is REST\r\nX-Yahoo-Group-Post: member; u=209043068; y=Xu60nCOlwsDs4nLvjSveBcxVIUMQGhGpnFgtmhbp_oLvGA\r\nX-Yahoo-Profile: sduskis\r\n\r\n\r\n--0015175cdb0c16bd2f04645e3631\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n*RE: XHTML\n*It looks like a promising foundation for RESTful API Media Type=\r\ns.  You have\na whole bunch of class=3D&quot;&lt;some identifier&gt;&quot; on your &lt;a&gt; tags =\r\n(plus other\ntags) that a programmatic client can use to identify the meanin=\r\ng link\n(rather than relying on the href itself).\n\nI do think that HTML is t=\r\nhe media to emulate.  &quot;class&quot; is used successfully\nto perform the kind of s=\r\nemantic markup that atom&#39;s &quot;rel&quot; has.  &quot;class&quot; can\nalso be multi-valued (wh=\r\nich I don&#39;t know if that&#39;s possible with &quot;rel&quot;) and\n*is currently used* by =\r\nprogrammatic constructs to infer meaning outside of\nthe href.  &quot;class&quot; also=\r\n has HTML siblings in the task of identification.\nThere&#39;s also the &quot;id&quot; tag=\r\n in the &quot;a&quot; element, the body of the &quot;a&quot; element,\nand &quot;&lt;label for=3D&#39;&#39;&gt;...&lt;=\r\n/label&gt;&quot; for form elements.  RESTful API Media Types\nneed a way to integrat=\r\ne these types of tactics in a consistent way.\n\nBeyond the Media Type issues=\r\n, another thing that needs to be explored is how\nto use this information th=\r\ne the client side for non-browser clients.  The\nprogrammatic constructs tha=\r\nt use &quot;class&quot; (such as JavaScript, and even CSS)\nusually fall under the rol=\r\ne of code-on-demand, but the general techniques\ncan be used for programmati=\r\nc constructs that fill the role of remote\nclient.  Once we have a consisten=\r\nt approach to Media Types, we can start\nconstructing &quot;User Agent&quot; APIs that=\r\n ease the task of traversing specific\nRESTful API Media Types that share co=\r\nmmon elements of semantic markup.\n\n*RE: I don&#39;t believe you need any other =\r\ninformation to start using it.*\n\nBefore a programmatic client can perform a=\r\n specific task it must either know\na single &quot;class&quot; value , or a set of &quot;cl=\r\nass&quot; values to follow.  IMHO, that&#39;s\nshared &quot;out of band&quot; information, but =\r\nit&#39;s not driving the interaction;\nmeaning those semantics are the crux of w=\r\nhat you need to know to interact,\nbut they don&#39;t define lower-level URI con=\r\nstruction semantics.  A bookmark +\nshared media types + shared semantics sh=\r\nould provide a way for the client\ncan discover the specific resources it ne=\r\neds from the server.\n\nyou can create your own media-type and define the rel=\r\n values\n\n\nI&#39;m not going to put words in your mouth, but it sounds like ther=\r\ne needs to\nbe a shared understanding of semantics.  That shared understandi=\r\nng can come\nfrom a community consensus like Stefan Tikolov suggests:\n\nOf co=\r\nurse your program can&#39;t interpret new values of rel on the fly (unless\n&gt; it=\r\n&#39;s some fancy AI, but let&#39;s not get there). You are of\n&gt; course better off =\r\nif you use values for rel that are widely understood -\n&gt; this is the reason=\r\n for efforts like this:\n&gt;\n&gt; http://tools.ietf.org/html/draft-nottingham-htt=\r\np-link-header-04\n\n\nIt&#39;s also perfectly legitimate for a RESTful API to crea=\r\nte its own\ndictionary of values, along with its own Media Types.  It may al=\r\nso provide a\nfew entry points for different client types.  Those should the=\r\n likely be the\nonly items on a RESTful API documentation page :).  (It&#39;s al=\r\nso likely that\nthe API will have a set of example URLs to show some specifi=\r\nc functionality,\nbut should discourage clients from using those URLs direct=\r\nly, and encourage\nthe use of semantics)\n\nor you can download code (a la AJA=\r\nX) that knows what to do with those rel\n&gt; values that knows what to do with=\r\n those rel values.\n\n\nI agree that this is a great option and should be expl=\r\nored, especially\noutside the generic web browser.  Like I said earlier, I c=\r\nan see a great\nplace for &quot;User Agent&quot; platforms that know about a common Me=\r\ndia Type rules\nand knows how run ubiquitous scripting languages... More on =\r\nthat later :)\n\n\nThanks for the discussion guys!  This has been greatly enli=\r\nghtening.\n\n-Solomon\n\nOn Thu, Mar 5, 2009 at 12:50 AM, Darrel Miller &lt;darrel=\r\n.miller@...&gt;wrote:\n\n&gt;   Solomon Duskis wrote:\n&gt; &gt; I haven&#39;t seen a wo=\r\nrking &quot;REST API&quot; that provides a method to derive ALL\n&gt; of the URLs\n&gt; &gt; for=\r\n that timely specific functionality based on a single entry point.\n&gt;\n&gt;\n&gt; He=\r\nre is an experimental api that accesses the MSDN documentation and the\n&gt; co=\r\nmmunity generated content.\n&gt;\n&gt; http://lab.msdn.microsoft.com/restapi/\n&gt; It =\r\nuses the XHTML media type. I don&#39;t believe you need any other\n&gt; information=\r\n to start using it.\n&gt;\n&gt;\n&gt; Ebenezer Ikonne wrote:\n&gt; &gt; The key (in my opinion=\r\n) is that the out of band information are not URIs\n&gt; but\n&gt; &gt; rather &quot;identi=\r\nfiers&quot; for relationships e.g. Atom uses &quot;rel&quot; to indicate\n&gt; relationships\n&gt;=\r\n &gt; and basically monikers like &quot;self&quot; have meaning within the protocol.\n&gt;\n&gt;=\r\n Those rel values are not &quot;out of band&quot; they are defined in the Atom spec\n&gt;=\r\n which is related to the media type that is returned.  To my knowledge if y=\r\nou\n&gt; want a client to interpret your own rel values you have two choices, y=\r\nou can\n&gt; create your own media-type and define the rel values or you can do=\r\nwnload\n&gt; code (a la AJAX) that knows what to do with those rel values.\n&gt;\n&gt; =\r\nDarrel\n&gt;  \n&gt;\n\r\n--0015175cdb0c16bd2f04645e3631\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;i&gt;RE: XHTML&lt;br&gt;&lt;/i&gt;It looks like a promising foundation for RESTful API Me=\r\ndia Types.=A0 You have a whole bunch of\nclass=3D&quot;&lt;some identifier&g=\r\nt;&quot; on your &lt;a&gt; tags (plus other tags) that a\nprogrammatic clien=\r\nt can use to identify the meaning link (rather than relying on the href its=\r\nelf).=A0 &lt;br&gt;&lt;br&gt;I\ndo think that HTML is the media to emulate.=A0 &quot;cla=\r\nss&quot; is used successfully to perform the\nkind of semantic markup that a=\r\ntom&#39;s &quot;rel&quot; has.=A0 &quot;class&quot; can also be\nmulti-value=\r\nd (which I don&#39;t know if that&#39;s possible with &quot;rel&quot;) and =\r\n&lt;i&gt;is currently used&lt;/i&gt;\nby programmatic constructs to infer meaning outsid=\r\ne of the href.=A0 &quot;class&quot; also has HTML siblings in the task of i=\r\ndentification.=A0 There&#39;s also the &quot;id&quot; tag in\nthe &quot;a&qu=\r\not; element, the body of the &quot;a&quot; element, and &quot;&lt;label\nfor=\r\n=3D&#39;&#39;&gt;...&lt;/label&gt;&quot; for form elements.=A0 RESTful API =\r\nMedia Types need a way to integrate these types of tactics in a consistent =\r\nway.&lt;br&gt;&lt;br&gt;Beyond the Media Type issues, another thing that needs to be\nex=\r\nplored is how to use this information the the client side for non-browser c=\r\nlients.=A0 The\nprogrammatic constructs that use &quot;class&quot; (such as =\r\nJavaScript, and even\nCSS) usually fall under the role of code-on-demand, bu=\r\nt the general\ntechniques can be\nused for programmatic constructs that fill =\r\nthe role of remote client.=A0 Once we have a consistent approach to Media T=\r\nypes, we can start constructing &quot;User Agent&quot; APIs that ease the t=\r\nask of traversing specific RESTful API Media Types that share common elemen=\r\nts of semantic markup.=A0 &lt;br&gt;\n\n&lt;br&gt;&lt;i&gt;RE: I don&#39;t believe you need any=\r\n other information to start using it.&lt;/i&gt;&lt;br&gt;&lt;br&gt;Before a programmatic clie=\r\nnt can perform a specific task it must either know a single &quot;class&quo=\r\nt; value , or a set of &quot;class&quot; values to follow.=A0 IMHO, that&#3=\r\n9;s shared &quot;out of band&quot; information, but it&#39;s not driving th=\r\ne interaction; meaning those semantics are the crux of what you need to kno=\r\nw to interact, but they don&#39;t define lower-level URI construction seman=\r\ntics.=A0 A bookmark + shared media types + shared semantics should provide =\r\na way for the client can discover the specific resources it needs from the =\r\nserver.&lt;br&gt;\n&lt;br&gt;&lt;blockquote style=3D&quot;border-left: 1px solid rgb(204, 204, 2=\r\n04); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot; class=3D&quot;gmail_quote&quot;&gt;&lt;=\r\nspan style=3D&quot;border-collapse: collapse;&quot;&gt;you can create your own\nmedia-typ=\r\ne and define the rel values=A0&lt;/span&gt;&lt;span style=3D&quot;border-collapse: collap=\r\nse;&quot;&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I&#39;m not going to put words in your mo=\r\nuth, but it sounds like there needs to be a shared understanding of semanti=\r\ncs.=A0 That shared understanding can come from a community consensus like S=\r\ntefan Tikolov suggests:&lt;br&gt;\n&lt;br&gt;&lt;blockquote style=3D&quot;border-left: 1px solid=\r\n rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot; class=\r\n=3D&quot;gmail_quote&quot;&gt;Of course your program can&#39;t interpret new values of r=\r\nel on the fly\n(unless it&#39;s some fancy AI, but let&#39;s not get there).=\r\n You are of&lt;br&gt;\ncourse better off if you use values for rel that are widely=\r\n understood - this is the reason for efforts like this:&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;h=\r\nttp://tools.ietf.org/html/draft-nottingham-http-link-header-04&quot; target=3D&quot;_=\r\nblank&quot;&gt;http://tools.ietf.org/html/draft-nottingham-http-link-header-04&lt;/a&gt;&lt;=\r\n/blockquote&gt;\n&lt;div&gt;&lt;br&gt;It&#39;s also perfectly legitimate for a RESTful API =\r\nto create its own dictionary of values, along with its own Media Types.=A0 =\r\nIt may also provide a few entry points for different client types.=A0 Those=\r\n should the likely be the only items on a RESTful API documentation page :)=\r\n.=A0 (It&#39;s also likely that the API will have a set of example URLs to =\r\nshow some specific functionality, but should discourage clients from using =\r\nthose URLs directly, and encourage the use of semantics)&lt;br&gt;\n&lt;br&gt;&lt;blockquot=\r\ne style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0=\r\n.8ex; padding-left: 1ex;&quot; class=3D&quot;gmail_quote&quot;&gt;&lt;span style=3D&quot;border-colla=\r\npse: collapse;&quot;&gt;or you can download code (a la\nAJAX) that knows what to do =\r\nwith those rel values&lt;/span&gt; &lt;span style=3D&quot;border-collapse: collapse;&quot;&gt;tha=\r\nt knows what to do with those rel values.&lt;/span&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I agr=\r\nee that this is a great option and should be explored, especially outside t=\r\nhe generic web browser.=A0 Like I said earlier, I can see a great place for=\r\n &quot;User Agent&quot; platforms that know about a common Media Type rules=\r\n and knows how run ubiquitous scripting languages... More on that later :)&lt;=\r\nbr&gt;\n&lt;br&gt;&lt;br&gt;Thanks for the discussion guys!=A0 This has been greatly enligh=\r\ntening.&lt;br&gt;&lt;br&gt;-Solomon&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;/div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quot=\r\ne&quot;&gt;On Thu, Mar 5, 2009 at 12:50 AM, Darrel Miller &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a =\r\nhref=3D&quot;mailto:darrel.miller@...&quot;&gt;darrel.miller@...&lt;/a&gt;&gt;&lt;/sp=\r\nan&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px s=\r\nolid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n=\r\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n\n\n&lt;div style=\r\n=3D&quot;width: 655px;&quot;&gt;\n&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt; w=\r\nidth: 470px; float: left;&quot;&gt;\n\n\n    &lt;div&gt;\n            &lt;p&gt;&lt;/p&gt;&lt;div class=3D&quot;im=\r\n&quot;&gt;&lt;div&gt;&lt;span style=3D&quot;border-collapse: collapse;&quot;&gt;Solomon Duskis wrote:&lt;/sp=\r\nan&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;border-collapse: collapse;&quot;&gt;&gt; I haven&#39;t=\r\n seen a working &quot;REST API&quot; that provides a method to derive ALL o=\r\nf the URLs=A0&lt;/span&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;span style=3D&quot;border-collapse: collapse;&quot;=\r\n&gt;&gt; for that timely specific functionality based on a single entry point.=\r\n&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Here is an experi=\r\nmental api that accesses the MSDN documentation and the community generated=\r\n content.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;a href=3D&quot;http://lab.msdn.microsoft.com/re=\r\nstapi/&quot; target=3D&quot;_blank&quot;&gt;http://lab.msdn.microsoft.com/restapi/&lt;/a&gt;&lt;div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;&lt;div&gt;It uses the XHTML media type. I don&#39;t believe you need any=\r\n other information to start using it.&lt;/div&gt;\n&lt;div class=3D&quot;im&quot;&gt;\n&lt;div&gt;&lt;br&gt;&lt;/d=\r\niv&gt;&lt;div&gt;&lt;br&gt;Ebenezer Ikonne wrote:&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;border-collapse=\r\n: collapse;&quot;&gt;&gt; The key (in my opinion) is that the out of band informati=\r\non are not URIs but=A0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;\n&lt;span style=3D&quot;border-collapse: co=\r\nllapse;&quot;&gt;&gt; rather &quot;identifiers&quot; for relationships e.g. Atom us=\r\nes &quot;rel&quot; to indicate relationships&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=\r\n=3D&quot;border-collapse: collapse;&quot;&gt;&gt; and basically monikers like &quot;self=\r\n&quot; have meaning within the protocol.&lt;/span&gt;&lt;br&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;span style=\r\n=3D&quot;border-collapse: collapse;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;=\r\nborder-collapse: collapse;&quot;&gt;Those rel values are not &quot;out of band&quot=\r\n; they are defined in the Atom spec which is related to the media type that=\r\n is returned. =A0To my knowledge if you want a client to interpret your own=\r\n rel values you have two choices, you can create your own media-type and de=\r\nfine the rel values or you can download code (a la AJAX) that knows what to=\r\n do with those rel values.&lt;/span&gt;&lt;br&gt;\n\n&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;border-col=\r\nlapse: collapse;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;border-collapse: col=\r\nlapse;&quot;&gt;Darrel&lt;/span&gt;&lt;/div&gt;\n\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div width=3D&quot;1&quot; sty=\r\nle=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/b=\r\nlockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0015175cdb0c16bd2f04645e3631--\r\n\n"}}