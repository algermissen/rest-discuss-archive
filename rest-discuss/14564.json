{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"qwEh5dTuTKDWGt_ncDunFiLuWjHvLb18e_APCmIGHDiHN_EILhiuHYJ6ZbDTrEp2iN-e73j1Jf0hNUlGV1tGLHlM6hfdRcNzdsUo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How can a framework/library encourage REST-ful \tdevelopment?","postDate":"1263591193","msgId":14564,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MTAwMTE1MTMzM2lkOTE5NDZjcmE0MzNhMTUxNGExMjY1YjVAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14563,"nextInTopic":14565,"prevInTime":14563,"nextInTime":14565,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"You might check out this post from Erik Wilde: http://dret.typepad.com/dretblog/2009/05/rest-programming-toolbox-requirements.html For me, the bare minimum","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 31313 invoked from network); 15 Jan 2010 21:33:15 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m5.grp.sp2.yahoo.com with QMQP; 15 Jan 2010 21:33:15 -0000\r\nX-Received: from unknown (HELO ey-out-1920.google.com) (74.125.78.148)\n  by mta3.grp.re1.yahoo.com with SMTP; 15 Jan 2010 21:33:14 -0000\r\nX-Received: by ey-out-1920.google.com with SMTP id 26so77159eyw.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 15 Jan 2010 13:33:14 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.91.15 with SMTP id g15mr938098wef.24.1263591194074; Fri, \n\t15 Jan 2010 13:33:14 -0800 (PST)\r\nIn-Reply-To: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\r\nReferences: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\r\nDate: Fri, 15 Jan 2010 15:33:13 -0600\r\nX-Google-Sender-Auth: 192d4ccaeef73ece\r\nMessage-ID: &lt;8158ad751001151333id91946cra433a1514a1265b5@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016e6d566ad43a0a7047d3ac0da\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] How can a framework/library encourage REST-ful \n\tdevelopment?\r\nX-Yahoo-Group-Post: member; u=11652427; y=5ruPSH20QLQIxak65eeZPPG6ftEvqu73iSQnD6Muo4DxuzBsS8_Knv6WJg\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\r\n--0016e6d566ad43a0a7047d3ac0da\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nYou might check out this post from Erik Wilde:\n\nhttp://dret.typepad.com/dre=\r\ntblog/2009/05/rest-programming-toolbox-requirements.html\n\nFor me, the bare =\r\nminimum includes:\n\n- support for GET,PUT,POST, DELETE http methods (at leas=\r\nt ... HEAD, OPTIONS\nnice, too).\n- for GET requests, I want to know what med=\r\nia type is preferred (combination\nof looking at Accept header and/or file e=\r\nxtension, etc.)\n- for PUT/POST I want to be able to quickly and easily now =\r\nthe incoming\nContent-type\n- an easy way to parse the requested URL (w/ rege=\r\nx or named sections, etc.)\n- the ability to dispatch to a handler function =\r\nby any combination of the\nabove\n- tools for creating representations in the=\r\n most common media types: HTML (a\ntemplate language), JSON, Atom, RDF, etc.=\r\n and serving the proper one based\non requested type.\n\nIn PHP, I don&#39;t think=\r\n there is an obvious option (we&#39;ve built our own\nRESTful classes for Zend F=\r\nramework: http://github.com/pkeane/cola-zend),\nwhat I know of RoR seems to =\r\nmeet criteria, Django seems pretty nicely\nRESTful, as does the Google App E=\r\nngine &quot;WebApp.&quot;\n\n--peter\n\nOn Fri, Jan 15, 2010 at 2:27 PM, mike amundsen &lt;m=\r\namund@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Recently, I&#39;ve been thinking about how a cod=\r\ning framework or library\n&gt; can influence the way developers implement appli=\r\ncations. What would a\n&gt; coding environment look like if it was meant to enc=\r\nourage results that\n&gt; followed a particular _architectural_ style (not prog=\r\nramming style).\n&gt;\n&gt; IOW, is there a way to craft a framework that constrain=\r\ns developers in\n&gt; ways that results in a REST-ful implementation of the app=\r\nlication?\n&gt;\n&gt; I did some digging, but have yet to find any writing on this =\r\ntopic.\n&gt;\n&gt; Here are some &quot;off-the-top-of-my-head&quot; items:\n&gt;\n&gt; For example, a=\r\n framework might exhibit these REST-like traits:\n&gt; - there is a clear separ=\r\nation of concerns between resource\n&gt; identifiers, resources, and representa=\r\ntions\n&gt; - developers must define a resource as the public application inter=\r\nface\n&gt; - the Uniform Interface is enforced (e.g. those methods are the only=\r\n\n&gt; public members exposed for a resource)\n&gt; - developers must always associ=\r\nate one or more representation formats\n&gt; with a resource and/or resource me=\r\nthod before the implementation is\n&gt; valid\n&gt; - there is no way to define and=\r\n use server-side session state objects\n&gt;\n&gt; Some HTTP-specific traits might =\r\nbe:\n&gt; - support for content negotiation is &quot;baked-in&quot;\n&gt; - support for condi=\r\ntional requests is &quot;baked-in&quot; and automatic\n&gt; - RPC-like implementation pat=\r\nterns (e.g. gateway URIs) are somehow\n&gt; difficult to implement or are flagg=\r\ned as invalid\n&gt;\n&gt; Any comments? Is this line of thinking pure folly? old ha=\r\nt? already\n&gt; resolved sufficiently?\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt;  =\r\n\n&gt;\n\r\n--0016e6d566ad43a0a7047d3ac0da\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nYou might check out this post from Erik Wilde:&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;http://dre=\r\nt.typepad.com/dretblog/2009/05/rest-programming-toolbox-requirements.html&quot;&gt;=\r\nhttp://dret.typepad.com/dretblog/2009/05/rest-programming-toolbox-requireme=\r\nnts.html&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;For me, the bare minimum includes:&lt;br&gt;&lt;br&gt;- support fo=\r\nr GET,PUT,POST, DELETE http methods (at least ... HEAD, OPTIONS nice, too).=\r\n&lt;br&gt;- for GET requests, I want to know what media type is preferred (combin=\r\nation of looking at Accept header and/or file extension, etc.)&lt;br&gt;\n- for PU=\r\nT/POST I want to be able to quickly and easily now the incoming Content-typ=\r\ne &lt;br&gt;- an easy way to parse the requested URL (w/ regex or named sections,=\r\n etc.)&lt;br&gt;- the ability to dispatch to a handler function by any combinatio=\r\nn of the above&lt;br&gt;\n- tools for creating representations in the most common =\r\nmedia types: HTML (a template language), JSON, Atom, RDF, etc. and serving =\r\nthe proper one based on requested type.&lt;br&gt;&lt;br&gt;In PHP, I don&#39;t think th=\r\nere is an obvious option (we&#39;ve built our own RESTful classes for Zend =\r\nFramework: &lt;a href=3D&quot;http://github.com/pkeane/cola-zend&quot;&gt;http://github.com=\r\n/pkeane/cola-zend&lt;/a&gt;), what I know of RoR seems to meet criteria, Django s=\r\neems pretty nicely RESTful, as does the Google App Engine &quot;WebApp.&quo=\r\nt;&lt;br&gt;\n&lt;br&gt;--peter&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Jan 15, 2010 a=\r\nt 2:27 PM, mike amundsen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mamund@yah=\r\noo.com&quot;&gt;mamund@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmai=\r\nl_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0p=\r\nt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-co=\r\nlor: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=C2=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n=\r\n      \n      \n      &lt;p&gt;Recently, I&#39;ve been thinking about how a coding =\r\nframework or library&lt;br&gt;\ncan influence the way developers implement applica=\r\ntions. What would a&lt;br&gt;\ncoding environment look like if it was meant to enc=\r\nourage results that&lt;br&gt;\nfollowed a particular _architectural_ style (not pr=\r\nogramming style).&lt;br&gt;\n&lt;br&gt;\nIOW, is there a way to craft a framework that co=\r\nnstrains developers in&lt;br&gt;\nways that results in a REST-ful implementation o=\r\nf the application?&lt;br&gt;\n&lt;br&gt;\nI did some digging, but have yet to find any wr=\r\niting on this topic.&lt;br&gt;\n&lt;br&gt;\nHere are some &quot;off-the-top-of-my-head&qu=\r\not; items:&lt;br&gt;\n&lt;br&gt;\nFor example, a framework might exhibit these REST-like =\r\ntraits:&lt;br&gt;\n- there is a clear separation of concerns between resource&lt;br&gt;\n=\r\nidentifiers, resources, and representations&lt;br&gt;\n- developers must define a =\r\nresource as the public application interface&lt;br&gt;\n- the Uniform Interface is=\r\n enforced (e.g. those methods are the only&lt;br&gt;\npublic members exposed for a=\r\n resource)&lt;br&gt;\n- developers must always associate one or more representatio=\r\nn formats&lt;br&gt;\nwith a resource and/or resource method before the implementat=\r\nion is&lt;br&gt;\nvalid&lt;br&gt;\n- there is no way to define and use server-side sessio=\r\nn state objects&lt;br&gt;\n&lt;br&gt;\nSome HTTP-specific traits might be:&lt;br&gt;\n- support =\r\nfor content negotiation is &quot;baked-in&quot;&lt;br&gt;\n- support for condition=\r\nal requests is &quot;baked-in&quot; and automatic&lt;br&gt;\n- RPC-like implementa=\r\ntion patterns (e.g. gateway URIs) are somehow&lt;br&gt;\ndifficult to implement or=\r\n are flagged as invalid&lt;br&gt;\n&lt;br&gt;\nAny comments? Is this line of thinking pur=\r\ne folly? old hat? already&lt;br&gt;\nresolved sufficiently?&lt;br&gt;\n&lt;br&gt;\nmca&lt;br&gt;\n&lt;a hr=\r\nef=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amundsen.com/blog=\r\n/&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color: rgb(255, 25=\r\n5, 255); min-height: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;=\r\nbr&gt;\n\r\n--0016e6d566ad43a0a7047d3ac0da--\r\n\n"}}