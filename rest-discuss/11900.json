{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"91fipo9y-ogc9t5DHcGVrqcqoMLGAVI1v6lMJaVtizamOVIxIJY0_Mq77HGV1qZ4M4N7JL8zmSTfndmZ_0i1KXwbQYTvbO09vA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using &quot;hipertext as the engine of application state&quot; in &quot;data-centric&quot; services","postDate":"1231133913","msgId":11900,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk4Q0ExMTE1LTNDOTItNDJBNS04MUUyLTAyNTY4NjU0Njk5QUBtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PENFRTQ1MzY3LTk1RjItNDZCNi1CNTAxLTRGODNDQkIzQkVDMkBzdWJidS5vcmc+","referencesHeader":"PDJmYTU1NDQ3MDkwMTAyMDkzN3A1Y2MyNDljN3UzNjk3ZmNhN2MxZDdmNDA4QG1haWwuZ21haWwuY29tPiA8MDFFRjVBMzAtMjQxNC00OTY4LUIzRjktNTc3N0QzMUZDMzFCQGlubm9xLmNvbT4gPDdBRDcyMjQ4LUUzMzYtNDgyNi1CNjY3LTk3REUzRUU3NTAwMUBtaW5kdG91Y2guY29tPiA8RkJCQTlBOUItOEFCRi00NTIyLTk2REEtNzNDRjQzNzQxOTREQHN1YmJ1Lm9yZz4gPDBGMTk3REEyLTY0Q0QtNDBDNi1BQzI2LTUyNDAzNThENDNCOUBtaW5kdG91Y2guY29tPiA8QUFENzA5RkQtNTdDNi00OTgxLThFODMtNkM5RkQ1NERCNTU4QHN1YmJ1Lm9yZz4gPEZDMjVBNTg4LUI3RjgtNDAwOS04N0M5LTc2QTYwOEIwQzAyNEBtaW5kdG91Y2guY29tPiA8Q0VFNDUzNjctOTVGMi00NkI2LUI1MDEtNEY4M0NCQjNCRUMyQHN1YmJ1Lm9yZz4="},"prevInTopic":11899,"nextInTopic":11901,"prevInTime":11899,"nextInTime":11901,"topicId":11887,"numMessagesInTopic":24,"msgSnippet":"... Subbu, I m sorry, but I must be missing something.  Your answer seems to advocate using shared types, such as application/xhtml+xml instead of","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 59336 invoked from network); 5 Jan 2009 05:38:38 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m51.grp.scd.yahoo.com with QMQP; 5 Jan 2009 05:38:38 -0000\r\nX-Received: from unknown (HELO smtp.01.com) (38.98.186.166)\n  by mta17.grp.scd.yahoo.com with SMTP; 5 Jan 2009 05:38:38 -0000\r\nX-Received: from asav-1.01.com (localhost.localdomain [127.0.0.1])\n\tby asav-1.01.com (8.13.1/8.13.1) with SMTP id n055cZjs022702;\n\tSun, 4 Jan 2009 23:38:35 -0600\r\nX-Received: from smtp-1.01.com (smtp-1.01.com [38.98.186.157])\n\tby asav-1.01.com (asav-1.01.com [10.25.1.11])\n\tid l03NcZ1480050538yb ret-id none; Sun, 04 Jan 2009 23:38:35 -0600\r\nX-Received: from localhost (localhost.localdomain [127.0.0.1])\n\tby smtp-1.01.com (Postfix) with ESMTP id 6CCCEE0614;\n\tSun,  4 Jan 2009 23:38:35 -0600 (CST)\r\nX-Received: from smtp-1.01.com ([127.0.0.1])\n\tby localhost (smtp-1.01.com [127.0.0.1]) (amavisd-new, port 10024)\n\twith ESMTP id XCpQkqV8Ij5S; Sun,  4 Jan 2009 23:38:35 -0600 (CST)\r\nX-Received: from [192.168.1.110] (ip70-179-9-103.sd.sd.cox.net [70.179.9.103])\n\tby smtp-1.01.com (Postfix) with ESMTP id D7C3BE060D;\n\tSun,  4 Jan 2009 23:38:34 -0600 (CST)\r\nCc: REST-Discuss Group Discussion &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;98CA1115-3C92-42A5-81E2-02568654699A@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nIn-Reply-To: &lt;CEE45367-95F2-46B6-B501-4F83CBB3BEC2@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: quoted-printable\r\nMime-Version: 1.0 (Apple Message framework v930.3)\r\nDate: Sun, 4 Jan 2009 21:38:33 -0800\r\nReferences: &lt;2fa554470901020937p5cc249c7u3697fca7c1d7f408@...&gt; &lt;01EF5A30-2414-4968-B3F9-5777D31FC31B@...&gt; &lt;7AD72248-E336-4826-B667-97DE3EE75001@...&gt; &lt;FBBA9A9B-8ABF-4522-96DA-73CF4374194D@...&gt; &lt;0F197DA2-64CD-40C6-AC26-5240358D43B9@...&gt; &lt;AAD709FD-57C6-4981-8E83-6C9FD54DB558@...&gt; &lt;FC25A588-B7F8-4009-87C9-76A608B0C024@...&gt; &lt;CEE45367-95F2-46B6-B501-4F83CBB3BEC2@...&gt;\r\nX-Mailer: Apple Mail (2.930.3)\r\nX-FSL-MailScanner-Information: Please contact postmaster@... for more information\r\nX-FSL-MailScanner: Found to be clean\r\nX-FSL-MailScanner-SpamCheck: \r\nX-FSL-MailScanner-From: steveb@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] Using &quot;hipertext as the engine of application state&quot; in &quot;data-centric&quot; services\r\nX-Yahoo-Group-Post: member; u=292691042; y=7LnxiaifzXEylG5-H5W71VduuaGalASX9RoQdMAAdJbRU069Irk\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\nOn Jan 4, 2009, at 5:00 PM, Subbu Allamaraju wrote:\n&gt; Steve - that is what =\r\nI was referring to as the misinterpretation.\n&gt; Contrary to what you are say=\r\ning, media types encourage shared formats.\n&gt; In the absence of that, we hav=\r\ne fragmented apps today.\n\nSubbu, I&#39;m sorry, but I must be missing something=\r\n.  Your answer seems  \nto advocate using shared types, such as &quot;application=\r\n/xhtml+xml&quot;  \ninstead of specialized MIME types such as &quot;application/ \nvnd.=\r\nbank.org.account+xml&quot;.  Yet that was the same as I&#39;ve been saying?!?\n\nAnt=\r\n=F3nio&#39;s original question was if the MIME type should capture the  \nintern=\r\nals of the returned document (e.g. transaction vs. account).  It  \nshould n=\r\not.  Instead, the document itself must drive the state  \ntransitions of the=\r\n user agent.  For RESTful applications, the content  \ntype should only conv=\r\ney what hypermedia representation was used (XHTML  \nvs. Atom vs. RDF etc.).=\r\n\n\n&gt; Just imagine Flickr, Picasa Web, Panoramio and others using a shared\n&gt; =\r\nmedia type for managing photos. Since there is no such thing, what do\n&gt; we =\r\nhave today? Point-to-point integrations that are not portable. That\n&gt; is th=\r\ne opposite of &quot;serendipitous engineering&quot;.\n\nNod.\n\n&gt; Here is what is happeni=\r\nng today. Most server applications are\n&gt; expecting client developers to do =\r\none of the following kinds of\n&gt; programming:\n&gt;\n&gt; if(someFunc(uri1)) // i.e.=\r\n determine the kind of the URI used\n&gt; {\n&gt;     doBlah();\n&gt; }\n&gt; else if(someF=\r\nunc(uri2))\n&gt; {\n&gt;     doBlahBlah();\n&gt; }\n\nI don&#39;t understand this code.  Why =\r\nwould the client inspect the URI to  \ndetermine what to do? URIs are opaque=\r\n and should be used as is (unless  \nthe context prescribes how URI can be c=\r\nonstructed, such as URI  \ntemplates or form elements).  Maybe it&#39;s just bec=\r\nause I&#39;ve never such  \ncode before, but do people really do this?\n\n&gt; The se=\r\ncond category of code is the following for textual document\n&gt; types such as=\r\n XML, Atom and JSON.\n&gt;\n&gt; obj =3D parseResponse(...);\n&gt; if(&quot;foo&quot;.equals(obj.=\r\nrootElemName)) // Or some nested element or a JSON\n&gt; property\n&gt; {\n&gt;     doB=\r\nlah();\n&gt; }\n&gt; else if(&quot;bar&quot;.equals(obj.rootElemName)) {\n&gt;     doBlahBlah();\n=\r\n&gt; }\n\nWell, the root element should always be &lt;html&gt;. ;)  Joking aside, the =\r\n \nuser agent should only attempt to find the expected information in the  \n=\r\nresponse document.  The MIME type should be irrelevant at this stage  \nsinc=\r\ne it merely conveys the nature of the hypermedia engine used.   \nDifferent =\r\nhypermedia engines have different expressive powers.  For  \ninstance, HTML =\r\nis the most versatile (arguably too versatile) and  \nincludes a way to expr=\r\ness resource creation and COD, whereas AtomPub  \nonly defines resources del=\r\netion and editing (both define rules for  \nresource retrieval).\n\nIntroducin=\r\ng a specialized MIME type here would confuse the user agent  \nsince it does=\r\nn&#39;t know in what &quot;language&quot; you&#39;re expressing your  \nhypermedia engine in.\n=\r\n\n&gt; The first approach introduces coupling between URIs and clients while\n&gt; =\r\nthe second expects the clients to guess the type of the representation\n&gt; by=\r\n parsing it. As late Alan Flavell wrote in [3], content-type\n&gt; guessing was=\r\n a source of a number of bugs in IE. This is not to say\n&gt; that these two st=\r\nyles of code must be avoided at all cost.\n&gt; Nonetheless, if applied at the =\r\nroot level, they tantamount to media\n&gt; type tunneling, and tunneling, in ge=\r\nneral, is sub-optimal.\n\nSee above.  There is no guessing of content types.\n=\r\n\n&gt; Consequently, most developers are trying to look for schemas, WADL and\n&gt;=\r\n the like to simplify this mess, which undermines the uniform interface\n&gt; -=\r\n please see some recent threads on why.\n\nI&#39;m not one of them.  Contracts ar=\r\ne the antithesis of HATEOAS.\n\n&gt; By the way, using the right HTTP method for=\r\n the right operation is\n&gt; just part of applying the uniform interface.\n\nAnd=\r\n that is governed by the MIME type definition (i.e. use GET for &lt;a  \nhref=\r\n=3D&quot;...&quot;&gt;), not by the server.  The server merely uses the  \nexpressive pow=\r\ner of the hypermedia type to convey possible operations.\n\n&gt; How about using=\r\n SOAP then? I am not asking sarcastically. A lot in the\n&gt; industry consider=\r\n SOAP as a self-describing format. By looking at the\n&gt; SOAP headers, and th=\r\ne namespace of the body&#39;s content, one should be\n&gt; able to figure out how t=\r\no process a message. So, why not?\n\nSOAP is not self-descriptive like HTML o=\r\nr Atom are: it&#39;s statically  \nself-descriptive, not dynamically.  That is, =\r\nit does not define how  \nthe response describes further state transitions. =\r\n I&#39;m gonna leave at  \nthat, as it&#39;s a tangent.\n\n&gt;&gt; Preliminary experimentat=\r\nion with using XHTML as standard MIME type\n&gt;&gt; for web-services has been qui=\r\nte positive, but I haven&#39;t applied to a\n&gt;&gt; product yet.  And I know from my=\r\n write up about the cost of custom\n&gt;&gt; MIME types, that using this approach =\r\nis awfully expensive in the\n&gt;&gt; grand scheme of things.  Hence, using establ=\r\nished hypermedia formats\n&gt;&gt; should be preferred.  However, since cost is bo=\r\nund by the total\n&gt;&gt; population of user agents which need to know about it, =\r\nit&#39;s\n&gt;&gt; negligible for private, in-house, custom made applications.\n&gt;\n&gt; See=\r\n the examples above, which show that not introducing media types\n&gt; can beco=\r\nme awfully expensive. Once you have a media type, there is at\n&gt; least a cha=\r\nnce for someone else to reuse it or collaborate with you on\n&gt; improving it.=\r\n\n\nUnless you&#39;re going to push the media type definitions through a  \nstanda=\r\nrds body, you&#39;ll be wasting your time.  Your time would be  \nbetter investe=\r\nd in extending or constraining an existing hypermedia  \ntype.  For instance=\r\n, you could limit HTML to a subset for your web- \nservices or augment Atom =\r\nto provide the means to describe how  \nresources can be created.  I think G=\r\noogle didn&#39;t pretty nice job with  \ntheir GData API and how they&#39;ve applied=\r\n to their various applications,  \nwhile at the same time exposing the limit=\r\nations of AtomPub as the  \nhypermedia engine.\n\n&gt;&gt; So, in conclusion, I agre=\r\ne with you that the answer varies, but I\n&gt;&gt; believe the outcome is not driv=\r\nen by the application, but its reach\n&gt;&gt; (which you may have alluded to alre=\r\nady by stating interoperability\n&gt;&gt; and compatibility).  The more user agent=\r\ns there are interacting with\n&gt;&gt; your API, the more driven you should be to =\r\nfit it into an\n&gt;&gt; established MIME type.\n&gt;\n&gt; Compatibility considerations d=\r\no sometimes require introducing new\n&gt; media types.\n\nThis is a contradiction=\r\n in terms.  How can you justify introducing a  \nnew media type for the purp=\r\nose of compatibility?  By definition  \nnothing in the world will be compati=\r\nble with it!\n\nI stand by my initial position that custom types are bad.  Ne=\r\nw RESTful  \nAPIs should either build on AtomPub or a form of semantic HTML.=\r\n  The  \nchoice will be driven by how much expressive power the application =\r\n \nexpects the user agent to be able to cope with.\n\n- Steve\n\n--------------\n=\r\nSteve G. Bjorg\nhttp://mindtouch.com\nhttp://twitter.com/bjorg\nirc.freenode.n=\r\net #mindtouch\n\n\n"}}