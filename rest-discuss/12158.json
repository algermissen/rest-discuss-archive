{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343278744,"authorName":"Subbu Allamaraju","from":"Subbu Allamaraju &lt;subbu@...&gt;","profile":"sallamar","replyTo":"SENDER","senderId":"YyDmLu9E7Gt1IbzLB8VywByJF7kLIEr-zWdVQSJhRRY6QO-CuPtLDF3O8UZRAQ0arOsLb2g6OeAXn_cM2vSGRuS6AdftFOYwuQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Complex representation updates","postDate":"1235508580","msgId":12158,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdERTk1QTkyLTkxM0MtNDRCRS05NUZELTgxNDNEMDgyMkU1NUBzdWJidS5vcmc+","inReplyToHeader":"PDY5RUVBM0RFQjUyNDMyNEE4MkE2RUVBMjQ4MkFGNzdEMDM1QzBDMEZAdXNwaGxlMWEucGhsLnNhcC5jb3JwPg==","referencesHeader":"PDY5RUVBM0RFQjUyNDMyNEE4MkE2RUVBMjQ4MkFGNzdEMDM1QzBDMEZAdXNwaGxlMWEucGhsLnNhcC5jb3JwPg=="},"prevInTopic":12156,"nextInTopic":12159,"prevInTime":12157,"nextInTime":12159,"topicId":12155,"numMessagesInTopic":12,"msgSnippet":"Just designate a sidekick/transaction resource that encapsulates all that logic to do updates on those resources. If you treat every resource as a silo, the","rawEmail":"Return-Path: &lt;subbu@...&gt;\r\nX-Sender: subbu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 84511 invoked from network); 24 Feb 2009 20:48:59 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m46.grp.scd.yahoo.com with QMQP; 24 Feb 2009 20:48:59 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.238)\n  by mta16.grp.scd.yahoo.com with SMTP; 24 Feb 2009 20:48:59 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id k40so2516232rvb.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 24 Feb 2009 12:48:58 -0800 (PST)\r\nX-Received: by 10.141.29.14 with SMTP id g14mr2764786rvj.232.1235508538774;\n        Tue, 24 Feb 2009 12:48:58 -0800 (PST)\r\nReturn-Path: &lt;subbu@...&gt;\r\nX-Received: from wlan-b-211-167.corp.yahoo.com (nat-dip6.fw.corp.yahoo.com [209.131.62.115])\n        by mx.google.com with ESMTPS id g31sm4329148rvb.7.2009.02.24.12.48.57\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Tue, 24 Feb 2009 12:48:57 -0800 (PST)\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;7DE95A92-913C-44BE-95FD-8143D0822E55@...&gt;\r\nTo: &quot;Cameron, Scott&quot; &lt;scott.cameron@...&gt;\r\nIn-Reply-To: &lt;69EEA3DEB524324A82A6EEA2482AF77D035C0C0F@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v930.3)\r\nDate: Tue, 24 Feb 2009 12:49:40 -0800\r\nReferences: &lt;69EEA3DEB524324A82A6EEA2482AF77D035C0C0F@...&gt;\r\nX-Mailer: Apple Mail (2.930.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Subbu Allamaraju &lt;subbu@...&gt;\r\nSubject: Re: [rest-discuss] Complex representation updates\r\nX-Yahoo-Group-Post: member; u=343278744; y=GEkAvHWuyHMMvtHZbIfMUPf_N7rPXFxunnFpc_73966w-MI\r\nX-Yahoo-Profile: sallamar\r\n\r\nJust designate a sidekick/transaction resource that encapsulates all  \nthat logic to do updates on those resources. If you treat every  \nresource as a silo, the server will end up leaking a lot of  \napplication rules to the client.\n\nSubbu\n\nOn Feb 24, 2009, at 11:19 AM, Cameron, Scott wrote:\n\n&gt; Hi,\n&gt;\n&gt; Many RESTful web applications involve lot of resource reads, but much\n&gt; fewer  resource updates.  When updating is discussed (at least in the\n&gt; tutorials I&#39;ve seen), it tends to be around fairly simple cases where\n&gt; the changes are either very straight forward (e.g. a Customer entity\n&gt; address change from simplevalue1 to simplevalue2) or are fairly\n&gt; course-grained (e.g. adding a resource to, say, a collection  \n&gt; resource).\n&gt;\n&gt; But what about situations where the state changes are more  \n&gt; complicated,\n&gt; such as a case where the resource state must be changed according to\n&gt; some business logic?  Or where the values of two elements are related\n&gt; such that they must be updated together in a consistent way?\n&gt;\n&gt; Here is a contrived example to illustrate what I mean (although you  \n&gt; can\n&gt; imagine extending this to much more complex scenarios in real life):\n&gt;\n&gt;       PropertyA contains a value that can be updated by incrementing\n&gt; the current value by 1 if PropertyB contains a &quot;true&quot; or 5 if  \n&gt; PropertyB\n&gt; contains a &quot;false&quot;.\n&gt;\n&gt; In a local API library, this would normally be implemented behind a\n&gt; procedure call interface.  In REST there is no such client-side  \n&gt; library\n&gt; available.  Does this mean that each client needs to know this logic  \n&gt; and\n&gt; implement it themselves?  What if the &#39;5&#39; changes to a &#39;10&#39; someday in\n&gt; the rule?\n&gt;\n&gt; How do people handle this kind of thing without resorting to client- \n&gt; side\n&gt; libraries full of business logic in REST?\n&gt;\n&gt; Thanks,\n&gt; scott\n&gt;\n&gt;\n\n---\nhttp://subbu.org\n\n\n"}}