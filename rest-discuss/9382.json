{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":40455398,"authorName":"Julian Reschke","from":"Julian Reschke &lt;julian.reschke@...&gt;","profile":"JulianReschke","replyTo":"SENDER","senderId":"aOizZ-Adog1279AzJFsXx5qvTnXLhGxu5lVJzdZrmPou2HyFJeEIZGSbHMN552NCr4W1xsUg3uTNX5Yndfs2pP2lbKZ5coTHE4RRkDc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Fun with DELETE","postDate":"1183794666","msgId":9382,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2OEY0NUVBLjkwNjA3MDZAZ214LmRlPg==","inReplyToHeader":"PFc1OTYwNzI4NjI2OTE1MTE4Mzc2MTY1N0BtYWlsLm1haWxzbmFyZS5uZXQ+","referencesHeader":"PFc1OTYwNzI4NjI2OTE1MTE4Mzc2MTY1N0BtYWlsLm1haWxzbmFyZS5uZXQ+"},"prevInTopic":9381,"nextInTopic":9383,"prevInTime":9381,"nextInTime":9383,"topicId":8604,"numMessagesInTopic":107,"msgSnippet":"... I don t think RFC2616 supports that point of view. ... Well, that s Rest, not HTTP. I don t think it will work well to defend a funny design using HTTP s","rawEmail":"Return-Path: &lt;julian.reschke@...&gt;\r\nX-Sender: julian.reschke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 62312 invoked from network); 7 Jul 2007 07:51:15 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m53.grp.scd.yahoo.com with QMQP; 7 Jul 2007 07:51:15 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta10.grp.scd.yahoo.com with SMTP; 7 Jul 2007 07:51:15 -0000\r\nReceived: (qmail invoked by alias); 07 Jul 2007 07:51:10 -0000\r\nReceived: from p508F8459.dip0.t-ipconnect.de (EHLO [192.168.178.22]) [80.143.132.89]\n  by mail.gmx.net (mp054) with SMTP; 07 Jul 2007 09:51:10 +0200\r\nX-Authenticated: #1915285\r\nX-Provags-ID: V01U2FsdGVkX1/hMjVmJWHh5nUl8ZzDrdqMwWigr9WYG+0iFr3Rix\n\tGdey22zjMk9U/D\r\nMessage-ID: &lt;468F45EA.9060706@...&gt;\r\nDate: Sat, 07 Jul 2007 09:51:06 +0200\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.0.4) Gecko/20060516 Thunderbird/1.5.0.4 Mnenhy/0.7.4.666\r\nMIME-Version: 1.0\r\nTo: eric@...\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;W59607286269151183761657@...&gt;\r\nIn-Reply-To: &lt;W59607286269151183761657@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Julian Reschke &lt;julian.reschke@...&gt;\r\nSubject: Re: [rest-discuss] Re: Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=40455398; y=cK-6khnJDUibmkCmSUsIL1eOAsPZfx3uDBWNP7oiZ0VHrQydiyvtkQ\r\nX-Yahoo-Profile: JulianReschke\r\n\r\nEric J. Bowman wrote:\n&gt;  &gt;Nope. 404 means no representation is available.\n&gt;  &gt;\n&gt; \n&gt; Nope, a 404 response is a representation of the resource&#39;s unavailability.\n\nI don&#39;t think RFC2616 supports that point of view.\n\n&gt;  &gt;Please define &quot;undefined resource&quot;.\n&gt;  &gt;\n&gt; \n&gt; &quot;A resource is a conceptual mapping to a set of entities...&quot;\n\nWell, that&#39;s Rest, not HTTP. I don&#39;t think it will work well to defend a \nfunny design using HTTP&#39;s 404/410 distinction with definitions from \nRest. Unless you can demonstrate the equivalent of 404/410 in Rest, of \ncourse.\n\n&gt; The default response of any naming authority is a 404 error, right?\n&gt; That&#39;s because no conceptual mapping exists to any set of entities,\n&gt; i.e. the resource is undefined by the naming authority (server). Once\n&gt; a conceptual mapping exists, the resource has been defined (by its\n&gt; conceptual mapping). This is a precondition for sending a 410\n&gt; response -- the resource must have been defined by the naming authority,\n&gt; at some point in time.\n\nOK.\n\n&gt; If the resource still exists, but has been moved, the response could be\n&gt; a 30x to redirect the client. But, does deleting a resource delete the\n&gt; conceptual mapping that was already established? Not necessarily, the\n&gt; 410 response in no way indicates that the resource _wasn&#39;t_ moved, the\n&gt; case may be that the resource was moved to a new domain on a new ISP\n&gt; while the old ISP is no longer under contract to maintain the forwarding.\n\nYes.\n\n&gt; The 4xx response codes imply nothing about the existence of a resource.\n&gt; An undefined resource can only respond 404 to a GET request, which in no\n&gt; way precludes a defined resource from responding 404. The 404 and 410\n&gt; response codes only indicate _that_ the request has failed, not _why_.\n&gt; \n&gt;  &gt;\n&gt;  &gt;Sorry, I think you&#39;re reading things into RFC2616 which just aren&#39;t\n&gt;  &gt;there. 410 is a special case of 404, &quot;not found&quot;. That&#39;s all.\n&gt;  &gt;\n&gt; \n&gt; Sorry, but RFC 2616 clearly states that the resource may still exist\n\nYou&#39;re saying &quot;clearly&quot; here, so you can surely quote the spec where it \nsupports that? (I&#39;m not completely opposed to that view, but I sure do \nnot think that RFC2616 is &quot;clear&quot; about that :-).\n\n&gt; regardless of a 404 or a 410 response. Those status codes just mean\n&gt; the request failed, and I think you&#39;re the one reading stuff in\n&gt; beyond that if you are saying that I can&#39;t make anything but a GET or\n&gt; a PUT request if the response code is 404 or 410 because those somehow\n&gt; imply that the resource does not exist.\n&gt; \n&gt;  &gt;\n&gt;  &gt;404 is different from 200 + empty body, just like an empty file is\n&gt;  &gt;different from an absent file.\n&gt;  &gt;\n&gt; \n&gt; How is an empty file different from an absent file, in terms of REST,\n&gt; which could care less about how a resource is generated? The server\n\nEven an empty file can have entity headers, such as Content-Type, which \nis part of the representation you obtain with GET/HEAD.\n\n&gt; is opaque from the client perspective, a client receiving a 404 or a\n&gt; 410 response can make no assumptions about whether a file exists or\n&gt; does not exist on the server, or used to exist, or won&#39;t exist again\n&gt; at some point in the future. The 404 and 410 responses simply mean\n&gt; the request failed.\n\nNope.\n\nThe point of 410 is to tell the client that there was a representation, \nbut it is gone forever. How can you say the client can make no \nassumptions in this case, like the fact that retrying on the same URI \nlater is useless?\n\nFor 404 the situation is less clear, granted.\n\n&gt; ...\n\nBest regards, Julian\n\n"}}