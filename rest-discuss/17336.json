{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"xeIRnxq8chUoVgIuNYfBJO1xKAgeTYC7x2weulo9Sr5x1V2YjHbgQy5FLiLT5WO8l3Hzr1a8lpgk5ccauKrwASh175_qTQTxD_mIXV5IBig","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Loose coupling - a RESTful myth?","postDate":"1297200720","msgId":17336,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI5QjYwMUFCLTdEMkQtNEVCRS05NDUyLUJBNDk5RkZCNTk2MEBtYWMuY29tPg==","inReplyToHeader":"PGlpcG9hbytyaTFtQGVHcm91cHMuY29tPg==","referencesHeader":"PGlpcG9hbytyaTFtQGVHcm91cHMuY29tPg=="},"prevInTopic":17333,"nextInTopic":17341,"prevInTime":17335,"nextInTime":17337,"topicId":17322,"numMessagesInTopic":13,"msgSnippet":"... Hmm - which investment are you talking about? Are you saying that you think it is cheaper to define a bunch of XMLs (one per service) and a bunch of","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 59810 invoked from network); 8 Feb 2011 21:32:14 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m16.grp.re1.yahoo.com with QMQP; 8 Feb 2011 21:32:14 -0000\r\nX-Received: from unknown (HELO asmtpout021.mac.com) (17.148.16.96)\n  by mta2.grp.re1.yahoo.com with SMTP; 8 Feb 2011 21:32:14 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=iso-8859-1\r\nX-Received: from [192.168.2.101] ([84.143.202.246])\n by asmtp021.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01\n 64bit (built Nov 21 2010)) with ESMTPSA id &lt;0LGB00HW9IHDZF60@...&gt;\n for rest-discuss@yahoogroups.com; Tue, 08 Feb 2011 13:32:05 -0800 (PST)\r\nIn-reply-to: &lt;iipoao+ri1m@...&gt;\r\nDate: Tue, 08 Feb 2011 22:32:00 +0100\r\nCc: rest-discuss@yahoogroups.com\r\nContent-transfer-encoding: quoted-printable\r\nMessage-id: &lt;B9B601AB-7D2D-4EBE-9452-BA499FFB5960@...&gt;\r\nReferences: &lt;iipoao+ri1m@...&gt;\r\nTo: Jakob Strauch &lt;jakob.strauch@...&gt;\r\nX-Mailer: Apple Mail (2.1082)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Re: Loose coupling - a RESTful myth?\r\nX-Yahoo-Group-Post: member; u=289191104; y=tEjcDEfWeRl9hDa72ZMRwI2hfvuJNTu7eDfhw3fvAWNg1UY9d3iub5OU\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Feb 7, 2011, at 10:31 PM, Jakob Strauch wrote:\n\n&gt; \n&gt;  At the moment the=\r\n trade-off of being fully REST-complient is not high enough considering the=\r\n investment.\n\nHmm - which investment are you talking about?\n\nAre you saying=\r\n that you think it is &#39;cheaper&#39; to define a bunch of XMLs (one per service)=\r\n and a bunch of service descriptions (maybe one WADL per service) that defi=\r\nning one (or very few) domain-related (and *not* service specific) media ty=\r\npes?\n\nIn my opinion the &#39;high cost of doing real REST&#39; is nothing but a myt=\r\nh - maybe due to a still very common lack of what &#39;real&#39; REST actually invo=\r\nlves.\n\n\nJan \n\n\n\n\n&gt; But thats for my own (business) scenario, where i contro=\r\nl the clients, too.\n&gt; \n&gt; By the way, i want to thank all participants in th=\r\nis disscussion group for their valuable postings. I=B4m following this grou=\r\np for some months.\n&gt; \n&gt; \n&gt; Cheers,\n&gt; jakob\n&gt; \n&gt; --- In rest-discuss@yahoogr=\r\noups.com, Bob Ferris &lt;zazi@...&gt; wrote:\n&gt;&gt; \n&gt;&gt; Am 05.02.2011 17:26, schrieb =\r\nJakob Strauch:\n&gt;&gt;&gt; \n&gt;&gt;&gt; [1] http://nordsc.com/ext/classification_of_http_ba=\r\nsed_apis.html\n&gt;&gt; \n&gt;&gt; While rereading the referenced classification from abo=\r\nve, I stumbled \n&gt;&gt; about a few issues:\n&gt;&gt; \n&gt;&gt; 1. When describing a domain i=\r\nt&#39;s often not a main issue of missing media \n&gt;&gt; types. I think, one would r=\r\nather quickly find an appropriated generic \n&gt;&gt; media type. However, the iss=\r\nue of describing a domain lies not only at \n&gt;&gt; the representation and proce=\r\nss model level (which is generally also \n&gt;&gt; independent from the representa=\r\ntion level, or?), the description of the \n&gt;&gt; domain itself is thereby very =\r\nimportant - modelling the concepts of for \n&gt;&gt; instance &#39;user&#39;, &#39;order&#39;, &#39;of=\r\nfer&#39; etc.\n&gt;&gt; This is for me exactly the point where Semantic Web knowledge =\r\n\n&gt;&gt; representation languages on top of RDF Model can come into play. So I \n=\r\n&gt;&gt; can still use a generic media type, i.e. RDF Model, for realizing a \n&gt;&gt; =\r\ncommon description. However, serialize these descriptions into specific \n&gt;&gt;=\r\n representation media types, i.e. XHTML+RDFa, and thereby maybe also \n&gt;&gt; ex=\r\ntending the process model (based on a general description). Layering \n&gt;&gt; of=\r\n media types was already propagated by Roy T. Fielding, or?\n&gt;&gt; All in all, =\r\nI think, it depends more on the degree of existing \n&gt;&gt; appropriated Semanti=\r\nc Web ontologies to model (parts of) a domain, \n&gt;&gt; rather then on existing =\r\nmedia types. While there can (theoretically) \n&gt;&gt; exist a huge variety of bo=\r\nth and such a huge amount would decrease the \n&gt;&gt; simplicity property in bot=\r\nh cases; I nevertheless think, that it is \n&gt;&gt; maybe better to have less med=\r\nia types and more (especially reusable) \n&gt;&gt; Semantic Web ontologies, rather=\r\n then an equal high amount of media types.\n&gt;&gt; To summarize, I think the app=\r\nlication, reutilization and (if needed) \n&gt;&gt; creation of Semantic Web ontolo=\r\ngies fit quite well for emphasizing the \n&gt;&gt; desired properties that should =\r\nbe reached when implementing the REST \n&gt;&gt; architectural style. The costs th=\r\nat have to be invested into good \n&gt;&gt; ontology design maybe align with the c=\r\nosts of proper media type design.\n&gt;&gt; You maybe still addressed this issue s=\r\nomehow, when saying &quot;media type \n&gt;&gt; (and link relation etc.) specifications=\r\n&quot;. Anyway, I think, it might be \n&gt;&gt; good to make this concern a bit more ex=\r\nplicit. You might not explicitly \n&gt;&gt; propagate the utilization of Semantic =\r\nWeb ontologies, but please make \n&gt;&gt; aware of the general existing &#39;descript=\r\nion level&#39; (cf. [1]), which (from \n&gt;&gt; my point of view) exists already, but=\r\n is then often more implicit than \n&gt;&gt; explicit available.\n&gt;&gt; \n&gt;&gt; 2. I think=\r\n, fulfilling the hypermedia as the engine of application state \n&gt;&gt; constrai=\r\nnt is maybe still the hardest part. I cannot really imagine that \n&gt;&gt; &quot;a tra=\r\nnsition from HTTP-based Type || to REST at a later point in time, \n&gt;&gt; howev=\r\ner, is rather easy&quot;. Furthermore, &quot;turning a HTTP-based Type || API \n&gt;&gt; int=\r\no a REST API might be as easy as deleting the API documentation&quot; is a \n&gt;&gt; b=\r\nit paradox from my point of view. When I would remove the API \n&gt;&gt; documenta=\r\ntion than this application cannot really be an API any more, \n&gt;&gt; or? When I=\r\n would like to program against (?) something ( ;) ), I have to \n&gt;&gt; know how=\r\n I could do that. For instance a web browser do not really \n&gt;&gt; program agai=\r\nnst (?) something.\n&gt;&gt; I think the term &#39;REST API&#39; might be a bit inappropri=\r\nate here (I still \n&gt;&gt; doubt that a implementation of service, which is full=\r\ny REST compatible, \n&gt;&gt; is possible). The given examples for REST are not re=\r\nally APIs, or? - \n&gt;&gt; AtomPub is a protocol, OpenSearch a specification (col=\r\nlection of media \n&gt;&gt; type specifications), &quot;RESTifying Procurement&quot; an appr=\r\noach of a \n&gt;&gt; proof-of-concept REST &quot;service&quot;(?) (I couldn&#39;t really figure =\r\nout the \n&gt;&gt; current state of that project, however it looks quite interesti=\r\nng). \n&gt;&gt; Although, the chosen descriptor is still &#39;REST&#39; and not &quot;REST API&quot;=\r\n. So \n&gt;&gt; one might conclude that this could be a bit inappropriated \n&gt;&gt; cla=\r\nssification, but the descriptions are explicitly suggesting the \n&gt;&gt; applica=\r\ntion of REST principles on the implementation of (Web) services ;)\n&gt;&gt; \n&gt;&gt; 3=\r\n. Just a small issue: better &quot;REST might be the best solution&quot;, rather \n&gt;&gt; =\r\nthan &quot;REST is the best solution&quot;. I guess, &#39;is&#39; requires a kind of \n&gt;&gt; proo=\r\nf, or? Could we really provide a complete proof about this? - I \n&gt;&gt; current=\r\nly don&#39;t think so.\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; That&#39;s all for the moment.\n&gt;&gt; \n&gt;&gt; Cheers,\n&gt;&gt; =\r\n\n&gt;&gt; \n&gt;&gt; Bob\n&gt;&gt; \n&gt;&gt; [1] \n&gt;&gt; http://infoserviceonto.smiy.org/2010/11/25/on-re=\r\nsources-information-resources-and-documents/\n&gt;&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ------------=\r\n------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n\n"}}