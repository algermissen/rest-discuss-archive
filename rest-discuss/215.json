{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"hIIa9sxKNgkaoYwjMZNrFnUCQsr-kb4wUKfKUdy2C9lRV1JhwtyD9ms6EO_ugZN5bggs4YxMFZjDGh0g_nudH5RTU4-3rQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011861063","msgId":215,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNEZDNjQ3LjVBRjhGMjRGQHByZXNjb2QubmV0Pg==","referencesHeader":"PDIwMDIwMTI0MDE0OC5VQUExNzE4MkBtYXJrYmFrZXIuY2E+IDxPRTQ2QUNxOUZGU2FsTlcxNXVlMDAwMTVhMTJAaG90bWFpbC5jb20+"},"prevInTopic":209,"nextInTopic":223,"prevInTime":214,"nextInTime":216,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... Is HTTP design harder than object oriented or relational or functional design? I think it is just another one of those Zens that domain-elite computer","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 08:32:02 -0000\r\nReceived: (qmail 21517 invoked from network); 24 Jan 2002 08:32:02 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m4.grp.snv.yahoo.com with QMQP; 24 Jan 2002 08:32:02 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 24 Jan 2002 08:32:02 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0O8Vw118702;\n\tThu, 24 Jan 2002 00:31:58 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0O8Vve30479;\n\tThu, 24 Jan 2002 00:31:57 -0800\r\nMessage-ID: &lt;3C4FC647.5AF8F24F@...&gt;\r\nDate: Thu, 24 Jan 2002 00:31:03 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nReferences: &lt;200201240148.UAA17182@...&gt; &lt;OE46ACq9FFSalNW15ue00015a12@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Mike Dierken&quot; wrote:\n&gt;\n&gt; ...\n&gt; \n&gt; I don&#39;t think it is just that we are unfamiliar with HTTP, or even that we\n&gt; are unfamiliar with the concepts of ReST, but I think trying to take a model\n&gt; (pub/sub or rdbms or whatever) map it to another model (ReST) and at the\n&gt; same time map it to a &#39;wire format&#39; - something gets lost in the\n&gt; translation.\n\nIs HTTP design harder than object oriented or relational or functional\ndesign? I think it is just another one of those Zens that domain-elite\ncomputer programmers need to pick up and mediocre ones kind of emulate\nby osmosis.\n\nHaving to deal with a wire format adds some headache but hey, I learned\nOO programming using C++. Talk about an additional hurdle! Luckily it\nwasn&#39;t as frighteningly convoluted in the early days as it is now.\n\n&gt; I don&#39;t see a trend for web applications converging on common approaches of\n&gt; using HTTP for a lot of cases, because most web applications talk to\n&gt; themselves - the only interoperation is through a link and a GET. They can\n&gt; put data in any slot without breaking anything because they wrote both the\n&gt; client and the server. Look at the many ways of doing user login - almost\n&gt; none of them use HTTP security constructs - and things still work.\n\nThat&#39;s why nobody understands REST. They didn&#39;t have to understand the\nWeb to use it. They memorize a few rules (hopefully!) like GET puts\nthings in the URL. POST changes a database and so forth.\n\nWeb services are different. You want web services to work like &quot;the\nweb&quot;. You want thousands of independently designed clients and servers\nfor the more interesting ones. Maybe the majority of small point to\npoint web services will use RPC. If that works for them, fine! But I\nhope and expect that the people designing reusable protocols for use\nwith multiple clients and servers will learn about REST.\n\n&gt; ...\n&gt; Something that would help me in the future is to model a large\n&gt; information-centric applications (including security and events) and create\n&gt; a direct mapping into URIs and HTTP. \n\nEr. Wasn&#39;t that your last job?\n\nIn fact, when I started hearing about REST I remember thinking: &quot;that\nDierken lunatic was on to something!&quot;\n\n Paul Prescod\n\n"}}