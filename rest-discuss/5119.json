{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":225339837,"authorName":"pnruelle","from":"&quot;pnruelle&quot; &lt;Philip.Ruelle@...&gt;","profile":"pnruelle","replyTo":"SENDER","senderId":"kD8c5qOaliCGViloHzOpF7Xdcy3bLZvdc2bpS2fHPb6FG60s7y3DeM1jRnQWJ6hmibBXmmNHzIZyBuQ1r1ZqdZyD3YqFBgkF9Bhbe9g","spamInfo":{"isSpam":false,"reason":"12"},"subject":"OO REST Client Help","postDate":"1119521346","msgId":5119,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PGQ5ZTFvMitkMTN1QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":5121,"prevInTime":5118,"nextInTime":5120,"topicId":5119,"numMessagesInTopic":3,"msgSnippet":"All, Can anyone give me some pointers as to how a REST client might be implemented in an OO language. To my mind there are two elements: 1) a collection of","rawEmail":"Return-Path: &lt;Philip.Ruelle@...&gt;\r\nReceived: (qmail 67047 invoked from network); 23 Jun 2005 11:25:17 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m28.grp.scd.yahoo.com with QMQP; 23 Jun 2005 11:25:17 -0000\r\nReceived: from unknown (HELO n5a.bulk.scd.yahoo.com) (66.94.237.39)\n  by mta1.grp.scd.yahoo.com with SMTP; 23 Jun 2005 11:25:17 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.3] by n5.bulk.scd.yahoo.com with NNFMP; 23 Jun 2005 11:25:16 -0000\r\nReceived: from [66.218.66.78] by mailer3.bulk.scd.yahoo.com with NNFMP; 23 Jun 2005 11:25:16 -0000\r\nX-Sender: Philip.Ruelle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 32877 invoked from network); 23 Jun 2005 10:09:30 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m27.grp.scd.yahoo.com with QMQP; 23 Jun 2005 10:09:30 -0000\r\nReceived: from unknown (HELO n13a.bulk.scd.yahoo.com) (66.94.237.24)\n  by mta5.grp.scd.yahoo.com with SMTP; 23 Jun 2005 10:09:30 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.5] by n13.bulk.scd.yahoo.com with NNFMP; 23 Jun 2005 10:09:07 -0000\r\nReceived: from [66.218.66.77] by mailer5.bulk.scd.yahoo.com with NNFMP; 23 Jun 2005 10:09:07 -0000\r\nDate: Thu, 23 Jun 2005 10:09:06 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;d9e1o2+d13u@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1879\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;pnruelle&quot; &lt;Philip.Ruelle@...&gt;\r\nSubject: OO REST Client Help\r\nX-Yahoo-Group-Post: member; u=225339837; y=TFmPMV1LyXgE079GRQuCGcVMUZmKn8ataRCgCdUZMKU-e7o\r\nX-Yahoo-Profile: pnruelle\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 23 Jun 2005 11:25:13 -0000\r\n\r\nAll,\n\nCan anyone give me some pointers as to how a REST client might be\nimplemented in an OO language. \nTo my mind there are two elements:\n1) a collection of serializable classes which represent the resources\n2) a class which maps a given resource type to an URL\n\nThere is an example on the web (http://ociweb.com/jnb/jnbNov2004.html)\nwhich works along these lines.\n\nHowever I have a few issues with this approach:\n1)Is it valid to map a resource type to a single URL or in practice\nwould multiple URLs handle the same resource type?\n2) How could non-trivial GETs be specified? The example only shows\nGETs with a single valued key, but what about &#39;searches&#39; on several\nnon-key elements. What about searches using values of parent elements\n(in the example the &#39;owner&#39; is effectively a parent value but it has\nbeen included in the child thereby circumventing this problem but I\ndon&#39;t think that scales where you have deep hierarchies).\n3) Is there an application here for using &quot;hypermedia as the engine of\napplication state&quot;. Should there be a single entry point into the\n&#39;application&#39; and that then returns a list of valid links that can be\ncalled. This is the area of REST that I struggle with most and judging\nby the large number of articles that focus on resource exposure and\naddressing and the tiny number that cover this aspect of REST I guess\nother people do to.\n\nMy approach is built on trying to keep the uniform interface within\nthe OO client via the use of ResourceManager class which contains the\n4 CRUD operations and maps the resource types (specified by the class\ntypes) to URLs but perhaps that&#39;s not &#39;right&#39;. We are talking about an\nOO client so maybe it is valid to wrap the REST interface into a SOAP\nstyle GetCollectionByOwner() interface even if it &#39;feels&#39; wrong. \n\nAny and all comments, tips, hints, advice and anecdotes gratefully\nreceived.\n\nRegards,\nPhil\n\n\n\n\n\n"}}