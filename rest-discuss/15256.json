{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"_cSSzMuYZGAvN3evwJ23nyJIJ59OpkF2lxcg5hM2yjeqW8pQQJCQDAxIBYE-3_AA8qTt37a-fHquel1uT2EMLoal8DuaP1DNdooZDm1VMQ9qJ-2niiDvdbsP","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] The cache constraint","postDate":"1271341939","msgId":15256,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHEyaTJmYTU1NDQ3MTAwNDE1MDczMmsxYTAzNjUxYXljYmVkNjMzZWQ0ZDM0MWZmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDRCQzcxODhFLjEwOTAyMDFAbXlrYW5qby5jby51az4=","referencesHeader":"PDRCQzZGODRFLjQwNDAzMDBAbXlrYW5qby5jby51az4JIDxzMmg3OTkzMzBjMzEwMDQxNTA1MTd3ZTljZGJjOWF4NGM4ZjRmMTI2NmZkYzFmNEBtYWlsLmdtYWlsLmNvbT4JIDw0QkM3MTg4RS4xMDkwMjAxQG15a2Fuam8uY28udWs+"},"prevInTopic":15251,"nextInTopic":15261,"prevInTime":15255,"nextInTime":15257,"topicId":15246,"numMessagesInTopic":22,"msgSnippet":"Well, following Roy Fielding disseration, it is a constraint. Now if it is a necessary constraint (meaning optional or required), the way I see it is required","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 33522 invoked from network); 15 Apr 2010 14:49:26 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m13.grp.re1.yahoo.com with QMQP; 15 Apr 2010 14:49:26 -0000\r\nX-Received: from unknown (HELO mail-pw0-f48.google.com) (209.85.160.48)\n  by mta3.grp.sp2.yahoo.com with SMTP; 15 Apr 2010 14:49:24 -0000\r\nX-Received: by mail-pw0-f48.google.com with SMTP id 7so1081783pwi.35\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 15 Apr 2010 07:49:24 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.140.193.5 with HTTP; Thu, 15 Apr 2010 07:32:19 -0700 (PDT)\r\nIn-Reply-To: &lt;4BC7188E.1090201@...&gt;\r\nReferences: &lt;4BC6F84E.4040300@...&gt;\n\t &lt;s2h799330c31004150517we9cdbc9ax4c8f4f1266fdc1f4@...&gt;\n\t &lt;4BC7188E.1090201@...&gt;\r\nDate: Thu, 15 Apr 2010 15:32:19 +0100\r\nX-Received: by 10.140.251.13 with SMTP id y13mr289379rvh.116.1271341939897; Thu, \n\t15 Apr 2010 07:32:19 -0700 (PDT)\r\nMessage-ID: &lt;q2i2fa554471004150732k1a03651aycbed633ed4d341ff@...&gt;\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: Alan Dean &lt;alan.dean@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd1132ab735950484475cc8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] The cache constraint\r\nX-Yahoo-Group-Post: member; u=279478415; y=3eYHRCSz7QjFfmWqoJ3OcEEQDomUGELm3iHcOI8nxSUzrw\r\nX-Yahoo-Profile: amsmota\r\n\r\n\r\n--000e0cd1132ab735950484475cc8\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWell, following Roy Fielding disseration, it is a constraint. Now if it is =\r\na\nnecessary constraint (meaning optional or required), the way I see it is\n=\r\nrequired but since the responses can be implicitly labeled as\nnon-cacheable=\r\n, if you implictly label *all* responses as non-cacheable then\nin practice =\r\nthat make it a optional constraint...\n\n\n5.1.4 Cache In order to improve net=\r\nwork efficiency, we add cache constraints\nto form the client-cache-stateles=\r\ns-server style of Section\n3.4.4&lt;http://www.ics.uci.edu/%7Efielding/pubs/dis=\r\nsertation/net_arch_styles.htm#sec_3_4_4&gt;(Figure\n5-4&lt;http://www.ics.uci.edu/=\r\n%7Efielding/pubs/dissertation/rest_arch_style.htm#fig_5_4&gt;).\nCache constrai=\r\nnts require that the data within a response to a request be\nimplicitly or e=\r\nxplicitly labeled as cacheable or non-cacheable.\n\n\n\n\n______________________=\r\n___________________________\n\nMelhores cumprimentos / Beir beannacht / Best =\r\nregards\n\nAnt=F3nio Manuel dos Santos Mota\n\nhttp://card.ly/amsmota\n_________=\r\n________________________________________\n\n\n\nOn 15 April 2010 14:45, Mike Ke=\r\nlly &lt;mike@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hi Alan,\n&gt;\n&gt; Sorry, I hadn&#39;t intende=\r\nd to imply that caching was undesirable, but I\n&gt; might say something like t=\r\nhis instead of identifying it as a constraint:\n&gt;\n&gt; &quot;The constraints of REST=\r\n induce cacheability, which is a highly\n&gt; beneficial system property. This =\r\ncan be used to offset the style&#39;s costs\n&gt; in efficiency.&quot;\n&gt;\n&gt; In a similar =\r\nway you wouldn&#39;t call evolvability a constraint\n&gt;\n&gt; Cheers,\n&gt; Mike\n&gt;\n&gt;\n&gt; Al=\r\nan Dean wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Mike,\n&gt; &gt;\n&gt; &gt; Within REST, Caching is both an op=\r\ntional and a highly desirable\n&gt; &gt; constraint.\n&gt; &gt;\n&gt; &gt; It is optional in tha=\r\nt it is easy to imagine a RESTful implementation\n&gt; &gt; that never actually ex=\r\npects caching by User-Agent or any\n&gt; &gt; intermediaries (this would be the sa=\r\nme as implicitly labelling\n&gt; &gt; everything as non-cacheable). Such an implem=\r\nentation would, however,\n&gt; &gt; be inefficient to some degree which is why add=\r\ning the constraint is\n&gt; &gt; desirable.\n&gt; &gt;\n&gt; &gt; Regards,\n&gt; &gt; Alan Dean\n&gt; &gt;\n&gt; &gt;=\r\n On Thu, Apr 15, 2010 at 12:28, Mike Kelly &lt;mike@...&lt;mike%40mykan=\r\njo.co.uk&gt;\n&gt; &gt; &lt;mailto:mike@... &lt;mike%40mykanjo.co.uk&gt;&gt;&gt; wrote:\n&gt; =\r\n&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Is caching a necessary constraint from an arch style pov?\n&gt; &gt;=\r\n\n&gt; &gt; It seems like a consequence/benefit of the other constraints\n&gt; &gt; (cs/l=\r\nayered/stateless/uniform interface) rather than one in its\n&gt; &gt; own right\n&gt; =\r\n&gt;\n&gt; &gt; Cheers,\n&gt; &gt; Mike\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;  \n&gt;\n\r\n--000e0cd1132ab735950484475cc8\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWell, following Roy Fielding disseration, it is a constraint. Now if it is =\r\na necessary constraint (meaning optional or required), the way I see it is =\r\nrequired but since the responses can  be implicitly labeled as=A0 non-cache=\r\nable, if you implictly label *all* responses as non-cacheable then in pract=\r\nice that make it a optional constraint...&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;h3&gt;&lt;a name=3D&quot;sec_5_=\r\n1_4&quot;&gt;5.1.4 Cache&lt;/a&gt;&lt;/h3&gt;\n\nIn order to improve network efficiency, we add c=\r\nache constraints to form the client-cache-stateless-server style of &lt;a href=\r\n=3D&quot;http://www.ics.uci.edu/%7Efielding/pubs/dissertation/net_arch_styles.ht=\r\nm#sec_3_4_4&quot;&gt;Section 3.4.4&lt;/a&gt; (&lt;a href=3D&quot;http://www.ics.uci.edu/%7Efieldi=\r\nng/pubs/dissertation/rest_arch_style.htm#fig_5_4&quot;&gt;Figure 5-4&lt;/a&gt;).\nCache co=\r\nnstraints require that the data within a response to a request\nbe implicitl=\r\ny or explicitly labeled as cacheable or non-cacheable. &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br =\r\nclear=3D&quot;all&quot;&gt;_________________________________________________&lt;br&gt;&lt;br&gt;Melh=\r\nores cumprimentos / Beir beannacht / Best regards&lt;br&gt;&lt;br&gt;Ant=F3nio Manuel d=\r\nos Santos Mota&lt;br&gt;\n&lt;br&gt;&lt;a href=3D&quot;http://card.ly/amsmota&quot;&gt;http://card.ly/am=\r\nsmota&lt;/a&gt;&lt;br&gt;_________________________________________________&lt;br&gt;&lt;br&gt;\n&lt;br&gt;=\r\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On 15 April 2010 14:45, Mike Kelly &lt;span dir=\r\n=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mike@...&quot;&gt;mike@...&lt;/a&gt;&g=\r\nt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left:=\r\n 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex=\r\n;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;sp=\r\nan&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi Alan,&lt;b=\r\nr&gt;\n&lt;br&gt;\nSorry, I hadn&#39;t intended to imply that caching was undesirable,=\r\n but I &lt;br&gt;\nmight say something like this instead of identifying it as a co=\r\nnstraint:&lt;br&gt;\n&lt;br&gt;\n&quot;The constraints of REST induce cacheability, which=\r\n is a highly &lt;br&gt;\nbeneficial system property. This can be used to offset th=\r\ne style&#39;s costs &lt;br&gt;\nin efficiency.&quot;&lt;br&gt;\n&lt;br&gt;\nIn a similar way you=\r\n wouldn&#39;t call evolvability a constraint&lt;br&gt;\n&lt;br&gt;\nCheers,&lt;br&gt;\nMike&lt;/p&gt;&lt;=\r\ndiv class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nAlan Dean wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Mike=\r\n,&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Within REST, Caching is both an optional and a highly d=\r\nesirable &lt;br&gt;\n&gt; constraint.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; It is optional in that it =\r\nis easy to imagine a RESTful implementation &lt;br&gt;\n&gt; that never actually e=\r\nxpects caching by User-Agent or any &lt;br&gt;\n&gt; intermediaries (this would be=\r\n the same as implicitly labelling &lt;br&gt;\n&gt; everything as non-cacheable). S=\r\nuch an implementation would, however, &lt;br&gt;\n&gt; be inefficient to some degr=\r\nee which is why adding the constraint is &lt;br&gt;\n&gt; desirable.&lt;br&gt;\n&gt;&lt;br&gt;\n=\r\n&gt; Regards,&lt;br&gt;\n&gt; Alan Dean&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; On Thu, Apr 15, 2010 at =\r\n12:28, Mike Kelly &lt;&lt;a href=3D&quot;mailto:mike%40mykanjo.co.uk&quot; target=3D&quot;_bl=\r\nank&quot;&gt;mike@...&lt;/a&gt; &lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;\n&gt; &lt;mailto:&lt;a=\r\n href=3D&quot;mailto:mike%40mykanjo.co.uk&quot; target=3D&quot;_blank&quot;&gt;mike@...&lt;=\r\n/a&gt;&gt;&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;      &lt;br&gt;\n&gt;&lt;br&gt;\n&gt;     Is caching=\r\n a necessary constraint from an arch style pov?&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;     It se=\r\nems like a consequence/benefit of the other constraints&lt;br&gt;\n&gt;     (cs/la=\r\nyered/stateless/uniform interface) rather than one in its&lt;br&gt;\n&gt;     own =\r\nright&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;     Cheers,&lt;br&gt;\n&gt;     Mike&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;=\r\n\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div s=\r\ntyle=3D&quot;color: rgb(255, 255, 255); min-height: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n=\r\n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd1132ab735950484475cc8--\r\n\n"}}