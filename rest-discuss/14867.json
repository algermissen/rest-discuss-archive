{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"1_8OKFvTrlb1ntgyfoKhHKCGJgCNIK2ohfKvE24wW-VvHqUeEtL3aKkxszlFrf1cJ2vgW9xW6ef8RvBskoHcihuA9niRcppFwTukIA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Questions on REST API design","postDate":"1266912776","msgId":14867,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMTAwMjIzMDAxMmoyYjc0YzgzZm0xNjY2ZDQ0OWIwYzMzZjM4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDdFNEYwMDhCLUU1QkYtNDAxQy04MURBLTAxNzU4RjRGMDI5NUBtYWMuY29tPg==","referencesHeader":"PDYxMjBmNjY5MTAwMjIyMDkxM3QzOGQ5YzlhZmc0OTI2Y2YzZmNmOWFkOTQwQG1haWwuZ21haWwuY29tPgkgPDdFNEYwMDhCLUU1QkYtNDAxQy04MURBLTAxNzU4RjRGMDI5NUBtYWMuY29tPg=="},"prevInTopic":14866,"nextInTopic":14868,"prevInTime":14866,"nextInTime":14868,"topicId":14857,"numMessagesInTopic":15,"msgSnippet":"On Mon, Feb 22, 2010 at 11:15 PM, Jan Algermissen ... Another complexity to consider is, what happens if id1 is a valid identifier and id2 is not?  If you were","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 19368 invoked from network); 23 Feb 2010 08:12:57 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m14.grp.re1.yahoo.com with QMQP; 23 Feb 2010 08:12:57 -0000\r\nX-Received: from unknown (HELO mail-pw0-f41.google.com) (209.85.160.41)\n  by mta2.grp.sp2.yahoo.com with SMTP; 23 Feb 2010 08:12:57 -0000\r\nX-Received: by pwj7 with SMTP id 7so2976924pwj.28\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 23 Feb 2010 00:12:57 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.195.11 with SMTP id s11mr817485wff.257.1266912777166; Tue, \n\t23 Feb 2010 00:12:57 -0800 (PST)\r\nIn-Reply-To: &lt;7E4F008B-E5BF-401C-81DA-01758F4F0295@...&gt;\r\nReferences: &lt;6120f6691002220913t38d9c9afg4926cf3fcf9ad940@...&gt;\n\t &lt;7E4F008B-E5BF-401C-81DA-01758F4F0295@...&gt;\r\nDate: Tue, 23 Feb 2010 00:12:56 -0800\r\nMessage-ID: &lt;f8b39ace1002230012j2b74c83fm1666d449b0c33f38@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: =?ISO-8859-1?Q?D=E1rio_Abdulrehman?= &lt;dario.rehman@...&gt;, \n\trest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=000e0cd146420b69d90480401e8d\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Questions on REST API design\r\nX-Yahoo-Group-Post: member; u=352334505; y=qPGibU2NpdcNGv_8usuQJmsmgFS092idjS1TXpHqxWsP3AC-NAHQ3k36yw\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\n\r\n--000e0cd146420b69d90480401e8d\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Mon, Feb 22, 2010 at 11:15 PM, Jan Algermissen\n&lt;algermissen1971@...&gt;=\r\nwrote:\n\n&gt; On Feb 22, 2010, at 6:13 PM, D=E1rio Abdulrehman wrote:\n&gt; ...\n&gt;\n&gt;=\r\n &gt; to be able to invoke it with several ids at once:\n&gt; &gt;\n&gt; &gt; (b) GET resour=\r\nce?id=3D{id1}&id=3D{id2}... or\n&gt; &gt; GET resource/ids;id1;id2... or\n&gt; &gt; GET r=\r\nesource/id1/id2... (BTW is this URL template acceptable? The ids are\n&gt; not =\r\nin a hierarchy as the slashes may suggest, but I&#39;ve seen it used\n&gt; elsewher=\r\ne).\n&gt; &gt;\n&gt;\n&gt; Use the first one: GET resource?id=3D{id1}&id=3D{id2}.\n&gt;\n&gt;\n&gt; &gt; =\r\nThis falls in the realm of REST + batch operations but I don&#39;t know what\n&gt; =\r\nis the best solution according to the REST architectural style.\n&gt;\n&gt; If you =\r\nreally have to do this, the RESTful way is to make a resource that\n&gt; has th=\r\ne semantics of the &quot;bag&quot; (like you did). But beware that the response\n&gt; is =\r\na representation of *that* resource.\n&gt;\n&gt; You might want to look at multipar=\r\nt messages for this. Here is a related\n&gt; experimental I-D:\n&gt; http://tools.i=\r\netf.org/html/draft-snell-http-batch-01\n&gt;\n&gt;\n&gt;\nAnother complexity to consider=\r\n is, what happens if id1 is a valid identifier\nand id2 is not?  If you were=\r\n just GETting id2, the answer would be obvious\n... return a 404.  But now I=\r\n need to return multiple statuses (200 for id1\nand 404 for id2).  Hmm ...\n\n=\r\nWebDAV deals with this by returning a &quot;multi-status response&quot; and making th=\r\ne\nclient go through the contortions of interpreting all the response status=\r\nes\nand matching them up to the original requests.  It is technically feasib=\r\nle,\nbut this is one of the reasons you don&#39;t see a very large number of peo=\r\nple\nwriting WebDAV clients :-).\n\nI would tend to think of your use case mor=\r\ne as a &quot;search&quot; rather than a\n&quot;batch GET&quot;.  Think about defining a resource=\r\n representing the collection of\nall your resources, and use query parameter=\r\ns as filter expressions to limit\nthe results.  One advantage of this approa=\r\nch is you are no longer limited to\njust filtering based on the identifier .=\r\n.. you could select on other values\nas well.  And, maybe even throw in supp=\r\nort for interpreting an &quot;order by&quot;\nparameter for sorting, and maybe even &quot;o=\r\nffset&quot; and &quot;limit&quot; for pagination.\n\nIf you like the search paradigm, I woul=\r\nd also suggest considering the Open\nSearch API (http://opensearch.org) as a=\r\nn alternative to rolling your own\napproach.\n\nCraig McClanahan\n\r\n--000e0cd146420b69d90480401e8d\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Feb 22, 2010 at 11:15 PM, Jan Algerm=\r\nissen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:algermissen1971@...&quot;&gt;alge=\r\nrmissen1971@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quo=\r\nte&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt=\r\n 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: =\r\nrgb(255, 255, 255);&quot;&gt;&lt;span&gt;&lt;/span&gt;On Feb 22, 2010, at 6:13 PM, D=E1rio Abdu=\r\nlrehman wrote:&lt;br&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;...&lt;br&gt;&lt;div class=3D&quot;im&quot;&gt;\n&lt;br&gt;\n&gt; to be =\r\nable to invoke it with several ids at once:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt;   (b) GET re=\r\nsource?id=3D{id1}&amp;id=3D{id2}... or&lt;br&gt;\n&gt;         GET resource/ids;id=\r\n1;id2... or &lt;br&gt;\n&gt;         GET resource/id1/id2... (BTW is this URL temp=\r\nlate acceptable? The ids are not in a hierarchy as the slashes may suggest,=\r\n but I&#39;ve seen it used elsewhere).&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nUse the fir=\r\nst one: GET resource?id=3D{id1}&amp;id=3D{id2}.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n=\r\n&gt; This falls in the realm of REST + batch operations but I don&#39;t kno=\r\nw what is the best solution according to the REST architectural style.&lt;br&gt;\n=\r\n&lt;br&gt;&lt;/div&gt;\nIf you really have to do this, the RESTful way is to make a reso=\r\nurce that has the semantics of the &quot;bag&quot; (like you did). But bewa=\r\nre that the response is a representation of *that* resource.&lt;br&gt;\n&lt;br&gt;\nYou m=\r\night want to look at multipart messages for this. Here is a related experim=\r\nental I-D:&lt;br&gt;\n&lt;a href=3D&quot;http://tools.ietf.org/html/draft-snell-http-batch=\r\n-01&quot; target=3D&quot;_blank&quot;&gt;http://tools.ietf.org/html/draft-snell-http-batch-01=\r\n&lt;/a&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;=\r\ndiv&gt;&lt;br&gt;Another complexity to consider is, what happens if id1 is a valid i=\r\ndentifier and id2 is not?=A0 If you were just GETting id2, the answer would=\r\n be obvious ... return a 404.=A0 But now I need to return multiple statuses=\r\n (200 for id1 and 404 for id2).=A0 Hmm ...&lt;br&gt;\n&lt;br&gt;WebDAV deals with this b=\r\ny returning a &quot;multi-status response&quot; and making the client go th=\r\nrough the contortions of interpreting all the response statuses and matchin=\r\ng them up to the original requests.=A0 It is technically feasible, but this=\r\n is one of the reasons you don&#39;t see a very large number of people writ=\r\ning WebDAV clients :-).&lt;br&gt;\n&lt;br&gt;I would tend to think of your use case more=\r\n as a &quot;search&quot; rather than a &quot;batch GET&quot;.=A0 Think abou=\r\nt defining a resource representing the collection of all your resources, an=\r\nd use query parameters as filter expressions to limit the results.=A0 One a=\r\ndvantage of this approach is you are no longer limited to just filtering ba=\r\nsed on the identifier ... you could select on other values as well.=A0 And,=\r\n maybe even throw in support for interpreting an &quot;order by&quot; param=\r\neter for sorting, and maybe even &quot;offset&quot; and &quot;limit&quot; f=\r\nor pagination.&lt;br&gt;\n&lt;br&gt;If you like the search paradigm, I would also sugges=\r\nt considering the Open Search API (&lt;a href=3D&quot;http://opensearch.org&quot;&gt;http:/=\r\n/opensearch.org&lt;/a&gt;) as an alternative to rolling your own approach.&lt;br&gt;&lt;br=\r\n&gt;Craig McClanahan&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--000e0cd146420b69d90480401e8d--\r\n\n"}}