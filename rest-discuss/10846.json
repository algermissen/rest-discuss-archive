{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344081753,"authorName":"Erling Wegger Linde","from":"&quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;","profile":"erlingwl","replyTo":"SENDER","senderId":"F04XyYxSpVkaqp8sUJhj0Il5mDrMvamc1SPe6fiNCPa4vCOW1LJSOR8Qr4T06cqZudfN8X9lRJQ5Z-UiXXiVejIDBoa0nMmo13sqyKl6nT7C","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Versioning of RESTful services","postDate":"1212058444","msgId":10846,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlmMDU3ODI5MDgwNTI5MDM1NG40NmIyYjM4ZGszODIxMjc0NWFiMjM0Zjg4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDI4ZTI1NzExMDgwNTE5MjEzMXc3NjY3YmRiNmk3ZDM3Yzc5YWZkOTE0N2RmQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDI4ZTI1NzExMDgwNTE5MTQ0Mmg0MmFmZWZiZWwzYjliNTNhNDQzNWJjMDI2QG1haWwuZ21haWwuY29tPgkgPEI2ODUzMTRFLUUxRTAtNEU2MC1BQ0I0LTQzNDYwMDgyRTAyNUBzdWJidS5vcmc+CSA8YjU0OGRmNjUwODA1MTkxODMzazQ5ZDU5ZGU2eTdlZWU0YzY5NWQyMDQ1ZjZAbWFpbC5nbWFpbC5jb20+CSA8MjhlMjU3MTEwODA1MTkyMTMxdzc2NjdiZGI2aTdkMzdjNzlhZmQ5MTQ3ZGZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":10794,"nextInTopic":0,"prevInTime":10845,"nextInTime":10847,"topicId":10760,"numMessagesInTopic":8,"msgSnippet":"I think http://www.w3.org/Provider/Style/URI is highly relevant for this thread. - Erling ... -- Med vennlig hilsen Erling Wegger Linde","rawEmail":"Return-Path: &lt;erlingwl@...&gt;\r\nX-Sender: erlingwl@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30198 invoked from network); 29 May 2008 10:54:05 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m56.grp.scd.yahoo.com with QMQP; 29 May 2008 10:54:05 -0000\r\nX-Received: from unknown (HELO yw-out-2324.google.com) (74.125.46.29)\n  by mta17.grp.scd.yahoo.com with SMTP; 29 May 2008 10:54:05 -0000\r\nX-Received: by yw-out-2324.google.com with SMTP id 5so1825576ywh.45\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 29 May 2008 03:54:04 -0700 (PDT)\r\nX-Received: by 10.151.101.2 with SMTP id d2mr6104400ybm.193.1212058444424;\n        Thu, 29 May 2008 03:54:04 -0700 (PDT)\r\nX-Received: by 10.151.6.16 with HTTP; Thu, 29 May 2008 03:54:04 -0700 (PDT)\r\nMessage-ID: &lt;9f0578290805290354n46b2b38dk38212745ab234f88@...&gt;\r\nDate: Thu, 29 May 2008 12:54:04 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;28e257110805192131w7667bdb6i7d37c79afd9147df@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;28e257110805191442h42afefbel3b9b53a4435bc026@...&gt;\n\t &lt;B685314E-E1E0-4E60-ACB4-43460082E025@...&gt;\n\t &lt;b548df650805191833k49d59de6y7eee4c695d2045f6@...&gt;\n\t &lt;28e257110805192131w7667bdb6i7d37c79afd9147df@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Erling Wegger Linde&quot; &lt;erlingwl@...&gt;\r\nSubject: Re: [rest-discuss] Versioning of RESTful services\r\nX-Yahoo-Group-Post: member; u=344081753; y=whKivRwFDW7IAsL8NiGHKPIV0opHJ7Q547SmSfJIk9saVeo\r\nX-Yahoo-Profile: erlingwl\r\n\r\nI think http://www.w3.org/Provider/Style/URI is highly relevant for this thread.\n\n- Erling\n\nOn Tue, May 20, 2008 at 6:31 AM, Peter Williams &lt;pezra@...&gt; wrote:\n&gt; What you outline below matches pretty quite well how I use this pattern.\n&gt;\n&gt; I think this pattern holds up quite well deep linking, too.  Resources that\n&gt; exist in a particular version of the API continue to exist for that version\n&gt; of the API regardless of future versions.  A component that have saved a\n&gt; link to one, or more, of those resources will work just fine until the\n&gt; authors of that component choose to upgrade the version of the API it uses.\n&gt;\n&gt; At that point, there are couple of alternatives.  If the resource still\n&gt; exists in the new version of the API the component will need to be updated\n&gt; to handle any changes to the representations of that resources.  But that\n&gt; should be fairly straight forward because the resource will be the same\n&gt; conceptual thing in both API versions.\n&gt;\n&gt; The more complicated alternative is that the resources that are targeted by\n&gt; the links has been deprecated and is no longer available in the new version\n&gt; of API.  If the old resources have been replaced by some analogous resources\n&gt; in the new API, the server should provide permanent redirects to the new\n&gt; resources.  (I have experienced this sort of change.  We needed to\n&gt; generalize a particular sort of resource so to that we could model a larger\n&gt; set of entities.)  As the client makes requests for the old resources (using\n&gt; the new media type) it can update it&#39;s stored links to point to the new type\n&gt; of resource.\n&gt;\n&gt; If the resources pointed to by the component have no analogs in the new API\n&gt; then all bets are off.  This seems a rather unlikely scenario in practice,\n&gt; though.  The capabilities of systems tend to increase, not decrease, over\n&gt; time.\n&gt;\n&gt; As for common media types like HTML, I don&#39;t really see the need for them to\n&gt; be versioned in the same way as the more semantically rich APIs.  If\n&gt; resources are deprecated redirects would need to the added to the analogous\n&gt; new resources, as above.  But, as far as I am concerned, the HTML\n&gt; representations can change as much as the developers want them time as long\n&gt; as they remain valid HTML and the human users of the system can still figure\n&gt; out what is going on.\n&gt;\n&gt; --\n&gt; Peter Williams\n&gt; http://pezra.barelyenough.org\n&gt;\n&gt; On Mon, May 19, 2008 at 7:33 PM, mike amundsen &lt;mca@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; I&#39;ve thought about this one and one possible way to look at it is this:\n&gt;&gt;\n&gt;&gt; If you use a &quot;fully-hypermedia&quot; document model (i.e. you have a single\n&gt;&gt; bookmark into the application and then serve all other links via the\n&gt;&gt; response documents), then using a different media type can handle all\n&gt;&gt; the reasonable details of versioning your application.\n&gt;&gt;\n&gt;&gt; The &#39;entry URI&#39; (bookmarkable link) could determine the proper\n&gt;&gt; response based on the media type and:\n&gt;&gt; - serve up the proper document for this version (including the links\n&gt;&gt; appropriate for this version)\n&gt;&gt; - redirect (301) to an entirely new URI that contains the proper\n&gt;&gt; version of the document w/ links for the apprpriate version)\n&gt;&gt; - eventually return 415 (unsupported media type) for versions that\n&gt;&gt; have been &#39;deprecated&#39; completely.\n&gt;&gt;\n&gt;&gt; This begs the question of how to handle &#39;deep linking&#39; cases where the\n&gt;&gt; client has bookmarked other URI for your server application. Yeah, the\n&gt;&gt; messy part[grin]. As long as you are using custom media types, most of\n&gt;&gt; this will &#39;automagically&#39; work out fine:\n&gt;&gt; - links to the &#39;old version&#39; URI with the &#39;old version&#39; media type can\n&gt;&gt; behave as usual (supporting deprecated version of the app)\n&gt;&gt; - links to the &#39;old version&#39; with the &#39;old version&#39; media type can\n&gt;&gt; result in a redirect (301) (maybe to a warning page, or to workable\n&gt;&gt; data)\n&gt;&gt; - links to the &#39;old version&#39; URI with a new media type will return 415\n&gt;&gt; (mismatched media types)\n&gt;&gt; - again, eventually, links to the &#39;old&#39; URI w/ the &#39;old&#39; media-type\n&gt;&gt; can return 415 (we no longer support this version).\n&gt;&gt;\n&gt;&gt; In my mental experiments, this means that more thought must go into\n&gt;&gt; managing the URI set for a server application. Mainly, that you need\n&gt;&gt; to have some ideas for how to handle a deprecated URI (redirect is not\n&gt;&gt; safe for some workflow URI). Apps that use this model also need to be\n&gt;&gt; prepared to handle common web browsers where custom media types are\n&gt;&gt; usually not workable (expect via scripted Ajax, etc.). In that case,\n&gt;&gt; media-type resolution for &quot;text/html&quot; should result in the most recent\n&gt;&gt; version of the server application (ampping more than one media-type to\n&gt;&gt; a response document). This results in web browsers getting the latest\n&gt;&gt; version of the app as soon as it&#39;s publicly available.\n&gt;&gt;\n&gt;&gt; I&#39;d also be interested in Peter&#39;s comments on my musings. Am I coming\n&gt;&gt; close to the way you are thinking/using this pattern?\n&gt;&gt;\n&gt;&gt; MIke A\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Mon, May 19, 2008 at 9:11 PM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n&gt;&gt; &gt; As long as the changes are compatible, the version identifier is\n&gt;&gt; &gt; redundant.\n&gt;&gt; &gt;\n&gt;&gt; &gt; But when it comes to incompatible changes, all bets are off anyway.\n&gt;&gt; &gt; Does it matter whether a the server designates a new set of URIs or\n&gt;&gt; &gt; relies on conneg as you are proposing?\n&gt;&gt; &gt;\n&gt;&gt; &gt; Subbu\n&gt;&gt; &gt;\n&gt;&gt; &gt; On May 19, 2008, at 2:42 PM, Peter Williams wrote:\n&gt;&gt; &gt;\n&gt;&gt; &gt;&gt; In rest-discuss@yahoogroups.com, &quot;Miles Crawford&quot; &lt;mcrawfor@...&gt;\n&gt;&gt; &gt;&gt; wrote:\n&gt;&gt; &gt;&gt; &gt;\n&gt;&gt; &gt;&gt; &gt; My question is about versioning RESTful resources with URIs.\n&gt;&gt; &gt;&gt; &gt; I often see as a &quot;best practice&quot; the user of a version number in\n&gt;&gt; &gt;&gt; &gt;  URIs such as:\n&gt;&gt; &gt;&gt; &gt;\n&gt;&gt; &gt;&gt; &gt; /v1/person/{username}\n&gt;&gt; &gt;&gt; &gt;\n&gt;&gt; &gt;&gt; &gt; and then, if your service changes:\n&gt;&gt; &gt;&gt; &gt;\n&gt;&gt; &gt;&gt; &gt; /v2/person/{username}\n&gt;&gt; &gt;&gt; &gt;\n&gt;&gt; &gt;&gt; &gt; So - here&#39;s my question.  Say my organization wants to create two\n&gt;&gt; &gt;&gt; &gt; services that relate to one another, a generic person service and a\n&gt;&gt; &gt;&gt; &gt; student service. How do I avoid loops that cause troubles with\n&gt;&gt; &gt;&gt; version\n&gt;&gt; &gt;&gt; &gt; numbers?\n&gt;&gt; &gt;&gt;\n&gt;&gt; &gt;&gt; Personally, I am quite uncomfortable with the idea mangling my URIs\n&gt;&gt; &gt;&gt; with a version number.  The issue you are asking about here is\n&gt;&gt; &gt;&gt; definitely one of the reasons.  Using content negotiation handle\n&gt;&gt; &gt;&gt; REST/HTTP service versioning works much better, in my experience.  I\n&gt;&gt; &gt;&gt; have written about such an approach at\n&gt;&gt; &gt;&gt; &lt;http://pezra.barelyenough.org/blog/2008/05/versioning-rest-web-services/\n&gt;&gt; &gt;&gt; &gt; if you are interested.\n&gt;&gt; &gt;&gt;\n&gt;&gt; &gt;&gt; --\n&gt;&gt; &gt;&gt; Peter Willams\n&gt;&gt; &gt;&gt; http://pezra.barelyenough.org\n&gt;&gt; &gt;&gt;\n&gt;&gt; &gt;&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; ------------------------------------\n&gt;&gt; &gt;\n&gt;&gt; &gt; Yahoo! Groups Links\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;\n&gt; \n\n\n\n-- \nMed vennlig hilsen\nErling Wegger Linde\n\n"}}