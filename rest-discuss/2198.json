{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":121832671,"authorName":"inthedarkplace","from":"&quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;","profile":"inthedarkplace","replyTo":"SENDER","senderId":"OIwJf500F7GcxtuC8nRvL1Q52IqSmGq_mS-eCH3dRQk9eB7OCHS6Rl2AsVAfM7JHMBHNj5Df3pfgWM9-LFEoHLLu-27oyN5T2fNiuY_FskEhMw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Searching Containers","postDate":"1030070369","msgId":2198,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFrNDc5MSt0cW9tQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":2231,"prevInTime":2197,"nextInTime":2199,"topicId":2198,"numMessagesInTopic":3,"msgSnippet":"Guys, I m curious; has anybody established any best practices for performing arbitrary searching of collection resources? Eg, say I have the collection /users","rawEmail":"Return-Path: &lt;inthedarkplace@...&gt;\r\nX-Sender: inthedarkplace@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 23 Aug 2002 02:39:30 -0000\r\nReceived: (qmail 73398 invoked from network); 23 Aug 2002 02:39:30 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m15.grp.scd.yahoo.com with QMQP; 23 Aug 2002 02:39:30 -0000\r\nReceived: from unknown (HELO n20.grp.scd.yahoo.com) (66.218.66.76)\n  by mta2.grp.scd.yahoo.com with SMTP; 23 Aug 2002 02:39:30 -0000\r\nReceived: from [66.218.67.157] by n20.grp.scd.yahoo.com with NNFMP; 23 Aug 2002 02:39:30 -0000\r\nDate: Fri, 23 Aug 2002 02:39:29 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Searching Containers\r\nMessage-ID: &lt;ak4791+tqom@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2223\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;\r\nX-Yahoo-Group-Post: member; u=121832671\r\nX-Yahoo-Profile: inthedarkplace\r\n\r\nGuys,\n\nI&#39;m curious; has anybody established any best practices for \nperforming arbitrary searching of collection resources? Eg, say I \nhave the collection /users and I want to find a user with the \nusername &#39;kd&#39;. What&#39;s the most RESTful and elegant way to do this? \n\nIt seems like there&#39;s basically three options.\n\n1) Have the user POST an XML-document describing the query to the \ncollection\n\nPros: Logically intuitive. If I have a collection, I should ask it to \nexecute queries. \n\nCons: Because searching is not a mutator-method (ie it doesn&#39;t change \nthe state of the users collection) it doesn&#39;t seem like POST is the \nbest method. But neither do GET, PUT, or DELETE make much sense \nunless  I do a GET with a body which I&#39;ve been told is in poor taste. \nThis also makes it very difficult to write the collection code \nbecause now the collection must parse the XML document, figure out \nwhich operation is happening (either user creation or searching) and \nthen essentially reparse the algorithm.\n\n2) Have the user do a GET on the users collection, passing the search \nquery in through the query string. eg /users?username=&#39;xxx&#39;\n\nPros: Intuitive. This is what for the query string is for, I think. \nIt also allows the user to bookmark searches which might be \npotentially very useful for working with sets of users.\n\nCons: Severely limits the expressiveness of queries. Also puts more \ncode in the users code, but this isn&#39;t a huge issue.\n\n3) Create a special query resource located at /users/query. This \nquery resource can have simply queries passed in through the query \nstring or more complex queries passed in through a POST. \n\nPros: This seems to the most elegant. It also makes sense because \nPOSTing to a query resource can be seen as creating a query. \nPotentially, this query could even be assigned a URI. Because queries \ncan be passed in through GET or POST it allows for arbitrarily \nexpressive queries.\n\nCons: Potentially, this could lead to resource explosion because \nevery container resource now needs an additional &#39;query&#39; resource. \nThis might not be such a good thing.\n\nRight now I&#39;m leaning more towards number 3. But I&#39;m curious, what \nother solutions have people come up with?\n\n- inthedarkplace\n\n\n"}}