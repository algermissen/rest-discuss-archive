{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7519858,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","profile":"gonga_thrash","replyTo":"SENDER","senderId":"7UraF85y5XsPLPbtSsxRgIlPICSrStExwijS_9Jnp1MsfUTKOUe4NFiRJD98DDwUFHIm7KJZTLvhUijVCWA12wcvEg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: PUT, POST, authorization and purchase orders","postDate":"1030053881","msgId":2193,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwODIyMTgwNDQwLkUxOTAyQHd3dy5tYXJrYmFrZXIuY2E+","inReplyToHeader":"PGFrM2swYytjc3RwQGVHcm91cHMuY29tPjsgZnJvbSBiaGF1Z2VuMzJAeWFob28uY29tIG9uIFRodSwgQXVnIDIyLCAyMDAyIGF0IDA5OjEwOjM2UE0gLTAwMDA=","referencesHeader":"PDIwMDIwODIyMTU1NTA4LkMxOTAyQHd3dy5tYXJrYmFrZXIuY2E+IDxhazNrMGMrY3N0cEBlR3JvdXBzLmNvbT4="},"prevInTopic":2192,"nextInTopic":2194,"prevInTime":2192,"nextInTime":2194,"topicId":2178,"numMessagesInTopic":15,"msgSnippet":"... Right.  Not all containers create subordinate resources. In my abstract model, and in RestRDF, I presented the following hierarchy; Resource - Container ","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 22 Aug 2002 22:06:20 -0000\r\nReceived: (qmail 33172 invoked from network); 22 Aug 2002 22:06:19 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m7.grp.scd.yahoo.com with QMQP; 22 Aug 2002 22:06:19 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Aug 2002 22:06:19 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id SAA02563;\n\tThu, 22 Aug 2002 18:04:41 -0400\r\nDate: Thu, 22 Aug 2002 18:04:41 -0400\r\nTo: bhaugen32 &lt;bhaugen32@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Re: PUT, POST, authorization and purchase orders\r\nMessage-ID: &lt;20020822180440.E1902@...&gt;\r\nReferences: &lt;20020822155508.C1902@...&gt; &lt;ak3k0c+cstp@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nUser-Agent: Mutt/1.2.5.1i\r\nIn-Reply-To: &lt;ak3k0c+cstp@...&gt;; from bhaugen32@... on Thu, Aug 22, 2002 at 09:10:36PM -0000\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: member; u=7519858\r\nX-Yahoo-Profile: gonga_thrash\r\n\r\nOn Thu, Aug 22, 2002 at 09:10:36PM -0000, bhaugen32 wrote:\n&gt; The context was &quot;the resource is a container&quot;.\n\nRight.  Not all containers create subordinate resources.\n\nIn my abstract model, and in RestRDF, I presented the following\nhierarchy;\n\nResource\n  -&gt; Container\n     -&gt; StatePreservingContainer (ne IdentityPreservingContainer) (1)\n     -&gt; Processor (2)\n     -&gt; \n  -&gt; Replaceable\n  etc..\n\n(1) is meant to describe containers who create a resource and return a\n201\n\n(2) is meant to describe containers who do not create a resource, but\ninstead just use the data to somehow do something, but do not hold\nany state themselves.\n\nI suppose it might be useful to add a class to the taxonomy that\nrepresents non-state preserving, but state-holding resources, but I\ndidn&#39;t do that.  But anyhow, the point being that &quot;Container&quot; is\nvery high up in the hierarchy, and therefore covers a whole lot of\nvaried functionality, including process-and-forget.\n\n&gt; Ok, let me try again, because there is a lot of confusion on this \n&gt; point:\n&gt; *If* the resource is a container, \n&gt; then it is *allowed* to post a subordinate\n&gt; and request that the server create a new resource\n&gt; linked to the container.\n\nNope, at least not with this definition of container.  And FWIW, I think\nit&#39;s pretty standard.  It would be equivalent to a tuple space, or an\nOpenDoc container, or a Java Beans Context, etc..\n\n&gt; Or would you put it some other way?\n\nAs above.\n\n&gt; The reason I&#39;m belaboring the point is that people read into these \n&gt; statements all kinds of things, and it would be possible to read into \n&gt; your statement that my assertion was incorrect, and you cannot POST a \n&gt; subordinate resource to a container and have the server create a new \n&gt; resource for you.\n\nHmm, ok.  I certainly don&#39;t mean that.  I just mean that if you only\nknow the thing is a container, it may or may not create a resource for\nyou.  If you know it&#39;s a StatePreservingContainer, then you know that\nit will.\n\nMB\n-- \nMark Baker, CTO, Idokorro Mobile (formerly Planetfred)\nOttawa, Ontario, CANADA.               distobj@...\nhttp://www.markbaker.ca        http://www.idokorro.com\n\n"}}