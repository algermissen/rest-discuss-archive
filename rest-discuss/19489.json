{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":201150942,"authorName":"Greg Young","from":"Greg Young &lt;gregoryyoung1@...&gt;","profile":"gumboismadeoffish","replyTo":"SENDER","senderId":"Eh4Yahred6XG11TiLCIKkazBrveQjDoG2SPISDyfq5e_MuSpUEI0mol6yNRTIm5o22D5ke1nTEPPtNLQVftwYSgoivBBfNoo6IGT","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Atom and prev links","postDate":"1372417051","msgId":19489,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQzlSUXRoc0J6TGg5UFk2VHA5ZUdtT2E4RVFpLTVOQ3o4bmo5WWNSPVpvZU1FX3pTQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDUxY2Q2YTFkLjIzMWEzMjBhLjM5ODguMzgzZlNNVFBJTl9BRERFRF9CUk9LRU5AbXguZ29vZ2xlLmNvbT4=","referencesHeader":"PENBQzlSUXRqK1IzVHZ1TjdSVGpFT0dNWFR1NmlZMU1NdEZtdmp2YnJTK3NpRHZmVEtvUUBtYWlsLmdtYWlsLmNvbT4JPDUxY2Q2YTFkLjIzMWEzMjBhLjM5ODguMzgzZlNNVFBJTl9BRERFRF9CUk9LRU5AbXguZ29vZ2xlLmNvbT4="},"prevInTopic":19488,"nextInTopic":19490,"prevInTime":19488,"nextInTime":19490,"topicId":19487,"numMessagesInTopic":23,"msgSnippet":"Actually we have a pretty simple reason for this caching. If we were to hide the prev that uri would have to be non-cachable. If we put it there (we are","rawEmail":"Return-Path: &lt;gregoryyoung1@...&gt;\r\nX-Sender: gregoryyoung1@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 57595 invoked from network); 28 Jun 2013 10:57:31 -0000\r\nX-Received: from unknown (98.137.63.211)\n  by m16.grp.sp2.yahoo.com with QMQP; 28 Jun 2013 10:57:31 -0000\r\nX-Received: from unknown (HELO mail-pa0-f41.google.com) (209.85.220.41)\n  by mtaq1.grp.sp2.yahoo.com with SMTP; 28 Jun 2013 10:57:31 -0000\r\nX-Received: by mail-pa0-f41.google.com with SMTP id bj3so2319977pad.28\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 28 Jun 2013 03:57:31 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.68.75.49 with SMTP id z17mr10817024pbv.169.1372417051603;\n Fri, 28 Jun 2013 03:57:31 -0700 (PDT)\r\nX-Received: by 10.68.138.170 with HTTP; Fri, 28 Jun 2013 03:57:31 -0700 (PDT)\r\nIn-Reply-To: &lt;51cd6a1d.231a320a.3988.383fSMTPIN_ADDED_BROKEN@...&gt;\r\nReferences: &lt;CAC9RQtj+R3TvuN7RTjEOGMXTu6iY1MMtFmvjvbrS+siDvfTKoQ@...&gt;\n\t&lt;51cd6a1d.231a320a.3988.383fSMTPIN_ADDED_BROKEN@...&gt;\r\nDate: Fri, 28 Jun 2013 13:57:31 +0300\r\nMessage-ID: &lt;CAC9RQthsBzLh9PY6Tp9eGmOa8EQi-5NCz8nj9YcR=ZoeME_zSA@...&gt;\r\nTo: Markus Lanthaler &lt;markus.lanthaler@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=e89a8ffbace3d83c2904e034be83\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Greg Young &lt;gregoryyoung1@...&gt;\r\nSubject: Re: [rest-discuss] Atom and prev links\r\nX-Yahoo-Group-Post: member; u=201150942; y=5cRF7m1NjVkFVMRm1WN8CxWZp0Wo7YVEmHxWUOUJjV_x8Lfv4z90nkG33Kw\r\nX-Yahoo-Profile: gumboismadeoffish\r\n\r\n\r\n--e89a8ffbace3d83c2904e034be83\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nActually we have a pretty simple reason for this caching.\n\nIf we were to hi=\r\nde the prev that uri would have to be non-cachable. If we\nput it there (we =\r\nare forward only) then every valid uri we have is\ninfinitely cachable. By p=\r\nredefining the next only our non-existant uri is\nnon-cachable.\n\nThough keep=\r\ning the last existing one as non-cachable could also solve this\nand maybe i=\r\nts a better overall way.\n\nCheers,\n\nGreg\n\nOn Fri, Jun 28, 2013 at 1:47 PM, M=\r\narkus Lanthaler\n&lt;markus.lanthaler@...&gt;wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt; On Friday, Jun=\r\ne 28, 2013 12:16 PM, Greg Young wrote:\n&gt; &gt; The issue revolves around prev l=\r\ninks. At some point on an atom feed\n&gt; &gt; you will hit the current item, prev=\r\n will point to the next item that\n&gt; &gt; does not yet exist. Most implementati=\r\nons I can find 404 this uri and\n&gt; &gt; the client has the logic to keep pollin=\r\ng the 404. This seems off to\n&gt; &gt; me, I would expect this to be a 204. Then =\r\nif I change my uri structure\n&gt; &gt; it becomes a 404, otherwise it would seem =\r\nthat if I change my uri\n&gt; &gt; structure all prev uris would need to redirect =\r\nto the new ones (which\n&gt; &gt; would be a rather large undertaking).\n&gt;\n&gt; Why do=\r\nn&#39;t you just hide the next/prev link till the next/prev resource\n&gt; really e=\r\nxists? If really necessary, the client can keep polling the last\n&gt; resource=\r\n it encountered till the next/prev link becomes available. This\n&gt; also\n&gt; me=\r\nans that you can decide how to construct the URL of the new element as\n&gt; so=\r\non as it is created instead of relying on, e.g., an autoincrement.\n&gt;\n&gt; Did =\r\nI miss something?\n&gt;\n&gt; --\n&gt; Markus Lanthaler\n&gt; @markuslanthaler\n&gt;\n&gt;  \n&gt;\n\n\n\n-=\r\n- \nLe doute n&#39;est pas une condition agr=E9able, mais la certitude est absur=\r\nde.\n\r\n--e89a8ffbace3d83c2904e034be83\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nActually we have a pretty simple reason for this caching.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;di=\r\nv&gt;If we were to hide the prev that uri would have to be non-cachable. If we=\r\n put it there (we are forward only) then every valid uri we have is infinit=\r\nely cachable. By predefining the next only our non-existant uri is non-cach=\r\nable.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Though keeping the last existing one as non=\r\n-cachable could also solve this and maybe its a better overall way.&lt;/div&gt;&lt;d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Greg&lt;br&gt;&lt;br&gt;&lt;div class=\r\n=3D&quot;gmail_quote&quot;&gt;\nOn Fri, Jun 28, 2013 at 1:47 PM, Markus Lanthaler &lt;span d=\r\nir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:markus.lanthaler@...&quot; target=3D&quot;_blank=\r\n&quot;&gt;markus.lanthaler@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gm=\r\nail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-le=\r\nft:1ex&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n=\r\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div class=3D&quot;im&quot;&gt;On Friday, June 28=\r\n, 2013 12:16 PM, Greg Young wrote:&lt;br&gt;\n&gt; The issue revolves around prev =\r\nlinks. At some point on an atom feed&lt;br&gt;\n&gt; you will hit the current item=\r\n, prev will point to the next item that&lt;br&gt;\n&gt; does not yet exist. Most i=\r\nmplementations I can find 404 this uri and&lt;br&gt;\n&gt; the client has the logi=\r\nc to keep polling the 404. This seems off to&lt;br&gt;\n&gt; me, I would expect th=\r\nis to be a 204. Then if I change my uri structure&lt;br&gt;\n&gt; it becomes a 404=\r\n, otherwise it would seem that if I change my uri&lt;br&gt;\n&gt; structure all pr=\r\nev uris would need to redirect to the new ones (which&lt;br&gt;\n&gt; would be a r=\r\nather large undertaking).&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nWhy don&#39;t you just hide the ne=\r\nxt/prev link till the next/prev resource&lt;br&gt;\nreally exists? If really neces=\r\nsary, the client can keep polling the last&lt;br&gt;\nresource it encountered till=\r\n the next/prev link becomes available. This also&lt;br&gt;\nmeans that you can dec=\r\nide how to construct the URL of the new element as&lt;br&gt;\nsoon as it is create=\r\nd instead of relying on, e.g., an autoincrement.&lt;br&gt;\n&lt;br&gt;\nDid I miss someth=\r\ning?&lt;br&gt;\n&lt;br&gt;\n--&lt;br&gt;\nMarkus Lanthaler&lt;br&gt;\n@markuslanthaler&lt;br&gt;\n&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;=\r\n\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n=\r\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/di=\r\nv&gt;-- &lt;br&gt;Le doute n&#39;est pas une condition agr=E9able, mais la certitude=\r\n est absurde.\n&lt;/div&gt;\n\r\n--e89a8ffbace3d83c2904e034be83--\r\n\n"}}