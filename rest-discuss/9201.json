{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":192402827,"authorName":"Mike Dierken","from":"&quot;Mike Dierken&quot; &lt;dierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"AnVf9l-4bYIsYes7FDrfXpn09R80Rpi1ha9veddDzWYWgB5Gezf4Cgxz5H_bptywHkWqP4fJyXPdcyle0HPvH4eh9tGlMm1rHg","spamInfo":{"isSpam":false,"reason":"4"},"subject":"RE: [rest-discuss] On resource modeling, intermediaries and deployment","postDate":"1182645739","msgId":9201,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMGEwMWM3YjVmOCQ4NTk4ZDBkMCQwMjAxYThjMEBtZXJjdXJ5Pg==","inReplyToHeader":"PDkzNmExMjU2MDcwNjIzMDU0MG80NDU2NGU5YnY3ZmNjYmU3MWY5NzA3MGMyQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDkzNmExMjU2MDcwNjIzMDU0MG80NDU2NGU5YnY3ZmNjYmU3MWY5NzA3MGMyQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":9199,"nextInTopic":9214,"prevInTime":9200,"nextInTime":9202,"topicId":9196,"numMessagesInTopic":8,"msgSnippet":" I apologize for the duplicate messages, not the fault of Koranteng. These were caught in the spam filter on Yahoo & I just forwarded all of","rawEmail":"Return-Path: &lt;dierken@...&gt;\r\nX-Sender: dierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 43881 invoked from network); 24 Jun 2007 00:42:23 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m47.grp.scd.yahoo.com with QMQP; 24 Jun 2007 00:42:22 -0000\r\nReceived: from unknown (HELO wa-out-1112.google.com) (209.85.146.176)\n  by mta12.grp.scd.yahoo.com with SMTP; 24 Jun 2007 00:42:20 -0000\r\nReceived: by wa-out-1112.google.com with SMTP id m34so1507565wag\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 23 Jun 2007 17:42:18 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:from:to:references:subject:date:message-id:mime-version:content-type:content-transfer-encoding:x-mailer:in-reply-to:thread-index:x-mimeole;\n        b=BpUQztfZeIkRzu5cZ9m5EfX2bDt4KUiz/Shz8vVojMja7gbMZYwOxj1YbSRt9Vll2YrfojSI6lgSqC9icEkq/Jcay21/Hg9jSg+ySf9RFEg97iQEhXG2PoZzF0ccXRzh4x7x9dDCpAW8veW5HZgPR6TWbT6a6vK66Eq+1NNe09U=\r\nReceived: by 10.141.88.3 with SMTP id q3mr374846rvl.1182645737580;\n        Sat, 23 Jun 2007 17:42:17 -0700 (PDT)\r\nReturn-Path: &lt;dierken@...&gt;\r\nReceived: from mercury ( [67.165.117.15])\n        by mx.google.com with ESMTP id l31sm4262638rvb.2007.06.23.17.42.17\n        (version=SSLv3 cipher=RC4-MD5);\n        Sat, 23 Jun 2007 17:42:17 -0700 (PDT)\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;936a12560706230540o44564e9bv7fccbe71f97070c2@...&gt;\r\nDate: Sat, 23 Jun 2007 17:42:19 -0700\r\nMessage-ID: &lt;000a01c7b5f8$8598d0d0$0201a8c0@mercury&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nIn-Reply-To: &lt;936a12560706230540o44564e9bv7fccbe71f97070c2@...&gt;\r\nThread-Index: Ace1+Dk6koizOCAwRnOwJMUjEd7m9AAACBBg\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3138\r\nX-eGroups-Msg-Info: 2:4:8:0\r\nFrom: &quot;Mike Dierken&quot; &lt;dierken@...&gt;\r\nSubject: RE: [rest-discuss] On resource modeling, intermediaries and deployment\r\nX-Yahoo-Group-Post: member; u=192402827; y=_i2hpPRKgQRo6DfXSSsbz46KxD1uumveaXjhN86KXcQ7Oec\r\nX-Yahoo-Profile: mdierken\r\n\r\n&lt;administrivia&gt;\nI apologize for the duplicate messages, not the fault of Koranteng. \nThese were caught in the spam filter on Yahoo & I just forwarded all of them\nwithout reading them closely enough.\n\nMike (part-time moderator)\n&lt;/administrivia&gt; \n\n\n&gt; -----Original Message-----\n&gt; From: rest-discuss@yahoogroups.com \n&gt; [mailto:rest-discuss@yahoogroups.com] On Behalf Of Koranteng \n&gt; Ofosu-Amaah\n&gt; Sent: Saturday, June 23, 2007 5:40 AM\n&gt; To: rest-discuss@yahoogroups.com\n&gt; Subject: [rest-discuss] On resource modeling, intermediaries \n&gt; and deployment\n&gt; \n&gt; Lots of recent discussions have sent me down a path thinking \n&gt; again about the REST take on extensibility and also about how \n&gt; new services and protocols are deployed on the web.\n&gt; \n&gt; I started by observing lots of talk about deployment, which \n&gt; puzzled me a little. A priori, I would think that deployment \n&gt; concerns shouldn&#39;t drive the way you do your resource \n&gt; modeling when you&#39;re designing. The advice I gave the JSF \n&gt; folks was [1]:\n&gt; \n&gt; Seek ye first the resource model and its righteousness; and \n&gt; all these things shall be added unto you.\n&gt; \n&gt; I truly believe that. Spending time upfront developing a good \n&gt; resource model and discussing it with as many people as \n&gt; possible will save your bacon down the line. Good things \n&gt; follow from a resource model that is aligned with the \n&gt; underlying architecture.\n&gt; \n&gt; I continue to see far too many people starting with \n&gt; performance or premature optimizations in mind based on such things as\n&gt; \n&gt; 1. an aversion to the link\n&gt; 2. an aversion to &quot;too many HTTP requests&quot; and performance \n&gt; implications thereof 3. worrying about a so-called explosion \n&gt; in URI space.\n&gt; \n&gt; All of these as if important resources don&#39;t need to be \n&gt; identified, and as if linking wasn&#39;t singularly cheap, as if \n&gt; you couldn&#39;t model new resources for batch operations, or \n&gt; indeed as if the web wasn&#39;t fairly optimized for caching. \n&gt; That was much of the point of HTTP 1.1 right?\n&gt; \n&gt; But I digress... On to intermediaries and all those caches.\n&gt; \n&gt; Reading Mark Nottingham&#39;s recent take on the state of proxy \n&gt; caching [2], I&#39;m now wondering if intermediaries are going to \n&gt; be a limiting factor on experimentation on the web, much like \n&gt; NATs have been inhibiting the end-to-end internet.\n&gt; \n&gt; A couple of things that immediately struck me\n&gt; \n&gt; 1. intermediaries handle the major HTTP verbs well \n&gt; (GET/POST/PUT/DELETE are well understood), even as people on \n&gt; this list continue to eternally debate their semantics. \n&gt; However he also points out that not all of the caching \n&gt; intermediaries are taking full advantage of the idempotency \n&gt; of PUT and DELETE for further optimizations. Therein could \n&gt; lie a competitive advantage for those with an itch to scratch.\n&gt; \n&gt; 2. newer verbs such as those introduced by WebDAV are poorly \n&gt; supported, if at all.\n&gt; \n&gt; Which leads me to extensibility...\n&gt; \n&gt; Traditionally the HTTP/REST take on extensibility has been\n&gt; \n&gt; 1. new verbs (as WebDAV added to HTTP)\n&gt; 2. additional HTTP headers (I see lots X-* custom headers in \n&gt; many applications, Google&#39;s custom cache control headers are a case in\n&gt; point)\n&gt; 3. code-on-demand\n&gt; 4. URIs - minting new uris (which can probably be coalesced \n&gt; with the next point) 5. hypermedia as the engine of application state\n&gt; \n&gt; That last is the crucial one in defining the line on \n&gt; extensibility, namely REST seems to place the onus on the \n&gt; evolving set of hypermedia standards that are exchanged.\n&gt; \n&gt; Have we come to a point were extensibility in REST is now \n&gt; de-facto limited to points 2 to 5? And has deployment \n&gt; experience on the web now limited the degrees of freedom \n&gt; available to designers?\n&gt; \n&gt; I guess the question boils down to this: what about the verbs?\n&gt; \n&gt; We tend to preach about uniform interfaces, things that have \n&gt; globally understood semantics, and indeed, we harp on the \n&gt; small set of verbs as the selling point of REST. \n&gt; &quot;Manipulation of resources through representations&quot; using a \n&gt; few methods. But is the Rule of Four the best we can hope \n&gt; for? Is it that the social problem of standardizing exchanged \n&gt; hypermedia is a more tractable one that dealing with an \n&gt; expanded vocabulary.\n&gt; \n&gt; &quot;Think twice. We don&#39;t need more verbs.&quot;\n&gt; \n&gt; As I project onto the wonderful world of Waka, that next \n&gt; generation panacea [3], I wonder about how these deployment \n&gt; concerns will be addressed. Has the web now come, like the \n&gt; internet it was built on, to have to face the analogous \n&gt; challenge of the NAT/firewall hobgoblin.\n&gt; Will any new service will have to pay fealty to our caching masters?\n&gt; \n&gt; I&#39;d like to tie this in to the discussion around Microsoft&#39;s \n&gt; WEB3S [4], its resource model, and the proposal of a new HTTP \n&gt; verb: UPDATE.\n&gt; \n&gt; The thing that ultimately resonates is not the catchy \n&gt; headlines that appear to bait to some [4], nor indeed is it \n&gt; the discussion about the resource model, schemas, hierarchies \n&gt; and the like [5]. I would suggest that the main sticking \n&gt; point, and perhaps the sharpest criticism, is the \n&gt; introduction of a new verb.\n&gt; \n&gt; Now I like verbs myself, And while I wouldn&#39;t have modeled \n&gt; things the way Yaron and company have, I don&#39;t particularly \n&gt; see what&#39;s wrong with a new verb. That shouldn&#39;t be the \n&gt; onerous burden. In practice, however, it looks, per Mark&#39;s \n&gt; findings, like that will be the limiting factor for adoption \n&gt; of their new RESTful protocol.\n&gt; \n&gt; Might this be another argument to shy away from new HTTP \n&gt; methods and instead seek to model resources with the well \n&gt; known and understood semantics of our four horsemen of the \n&gt; web? Perhaps we&#39;ll find that the collections and entries of \n&gt; Atompub will be good enough for a large subset. I hope, and I \n&gt; wonder at the same time.\n&gt; \n&gt; The success of the web was predicated on that beautiful thing \n&gt; the uri, and on the browser, the servers, the ecosystem of \n&gt; HTTP libraries, and those unsung heroes: the caches. \n&gt; Architecting for middlemen is part of the genius of REST. The \n&gt; Caesar&#39;s Tax Collector Principle is one I subscribe to and I \n&gt; like taxes as much as the next guy, but have we reached a \n&gt; stage where the taxman is getting more than his due?\n&gt; \n&gt; Caches of various sorts are the main intermediaries in the \n&gt; wild, but there should be room for lots of innovation in this \n&gt; space. The pipe and filter model should allow more types of \n&gt; filters. What is it in the HTTP spec that makes writing \n&gt; intermediaries so difficult that in practice they can&#39;t \n&gt; handle extension methods? Is it the backwards compatibility \n&gt; with HTTP 1.0? Do we need errata or clarifications written \n&gt; for HTTP 1.1? Do we need to round up the proxies? Or is it \n&gt; simply inertia, that no one ever upgrades their caches once \n&gt; in place until the hardware dies? All that is certain in life \n&gt; is death and caches?\n&gt; \n&gt; Why can&#39;t I have more verbs? Is it that N-squared business \n&gt; all the way down? [7]\n&gt; \n&gt; Anyway just a few idle thoughts.\n&gt; \n&gt; I can think of a few follow-ups and maybe I&#39;ll write them in \n&gt; due course:\n&gt; \n&gt; - On resource modeling [8]\n&gt; - REST and the Holy Grail of Extensibility\n&gt; - The spy thriller: The cache who loved me. or alternatively\n&gt; - The horror flick: Fear of the cache\n&gt; \n&gt; [1] http://koranteng.blogspot.com/2007/04/crawl-before-you-walk.html\n&gt; \n&gt; [2] http://www.mnot.net/blog/2007/06/20/proxy_caching\n&gt; \n&gt; [3] http://gbiv.com/protocols/waka/200211_fielding_apachecon.ppt\n&gt; \n&gt; [4] http://dev.live.com/livedata/web3s.htm\n&gt; \n&gt; [5] \n&gt; http://www.25hoursaday.com/weblog/CommentView.aspx?guid=83d2bb\n&gt; 00-4ad6-4af2-8c2c-d4686c446737\n&gt; \n&gt; [6] http://www.goland.org/appanddare/\n&gt; \n&gt; [7] \n&gt; http://www.dehora.net/journal/2006/03/now_they_have_nsquared_p\n&gt; roblems.html\n&gt; \n&gt; [8] Alan Dean&#39;s comment about the fundamental difficulty of \n&gt; resource modeling. \n&gt; http://tech.groups.yahoo.com/group/rest-discuss/message/8673\n&gt; \n&gt; It is a social process and there is a bit of black magic if \n&gt; you aren&#39;t used to doing it. I&#39;ll suggest that discussing \n&gt; with as many people the details of your resource model is the \n&gt; first step. And like everything practice makes perfect\n&gt; \n&gt; [9] On resource modeling: Joe Gregorio always does the View \n&gt; Source business; also Sam and Leonard&#39;s book has 2 nice \n&gt; chapters on resource modeling although it wasn&#39;t called out \n&gt; using that term. That&#39;s my first critique of the book. The \n&gt; other would be the read-only versus read-write distinction. \n&gt; It&#39;s all resource modeling to me...\n&gt; \n&gt; Cheers,\n&gt; --\n&gt; Koranteng Ofosu-Amaah\n&gt; --\n&gt; Koranteng&#39;s Toli\n&gt; http://koranteng.blogspot.com/\n&gt; --\n&gt; Observers are worried\n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n\n"}}