{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"alM7FqlZwnvcOQqhwKWJZYKkX-eXv6MahVLSaZQhvMRxmb1weYF5UptSeHq4iFFeYtqIeS39bG-85E_7GBBZRK5Hy--xA-dgpg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] the meaning of stateless","postDate":"1366738773","msgId":19342,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQTJpRGlBMjB0am9BeWJteE5CdDhIR2QtUXhyZmt1TXNkZXc0MGFUSkZUcHpIcHBpUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBR1ZiWEw1R0dWSlZvNDlWQ3NlNEs9VE1DdHZ1V25VY0ZuV1BMZlFOMzBWTTBPNlJGQUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBR1ZiWEw2X09IT2hPVFMwa2YwU0tjV0EtPXpLWWJLTFFXVldmQm9US09tZzd2WHhFQUBtYWlsLmdtYWlsLmNvbT4JPENBUFdfOG03bmtZV3lRZTVmUWVqWUJ0aTl1TlUtdTZ3WGZnZ0VjTEhuOUZYRytNTm01QUBtYWlsLmdtYWlsLmNvbT4JPENBR1ZiWEw0QWh0QkJKS1VCQUx2WXFBcTdHSnNnQkZLeFctN1pYWDVXM0c3OWtjSmJUUUBtYWlsLmdtYWlsLmNvbT4JPENBUFdfOG03ODBmZ0w2SHBlTnk4ZXZ6TjlqMHo9N1JiZzdEcDZVZ1R3QnJrakhoYkhrd0BtYWlsLmdtYWlsLmNvbT4JPENBR1ZiWEw0TmIxWEd3NTN4KzVaPTRDaD1PV1JfSCttVHRnS3FzdT1tcS05Wit5X05EZ0BtYWlsLmdtYWlsLmNvbT4JPENBTGNvWmlvUXo4Nm8tRmQ3WW5PZ0RocHJnS1U5azVHUytIUWRhbXJRTjNHZGJQY2J0UUBtYWlsLmdtYWlsLmNvbT4JPENBR1ZiWEw1R0dWSlZvNDlWQ3NlNEs9VE1DdHZ1V25VY0ZuV1BMZlFOMzBWTTBPNlJGQUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":19341,"nextInTopic":19343,"prevInTime":19341,"nextInTime":19343,"topicId":19309,"numMessagesInTopic":86,"msgSnippet":"... Let s take this as a specific example: POST /createquery  returns 301 Location: /queryresult/1234 POSTing to create query","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98500 invoked from network); 23 Apr 2013 17:39:33 -0000\r\nX-Received: from unknown (10.193.84.163)\n  by m9.grp.bf1.yahoo.com with QMQP; 23 Apr 2013 17:39:33 -0000\r\nX-Received: from unknown (HELO mail-qc0-f180.google.com) (209.85.216.180)\n  by mta3.grp.bf1.yahoo.com with SMTP; 23 Apr 2013 17:39:33 -0000\r\nX-Received: by mail-qc0-f180.google.com with SMTP id b40so459925qcq.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 23 Apr 2013 10:39:33 -0700 (PDT)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=google.com; s=20120113;\n        h=mime-version:x-received:in-reply-to:references:date:message-id\n         :subject:from:to:cc:content-type:x-gm-message-state;\n        bh=M4hvw3KyPqjXPymWx8EGodsjosEx4Ukhg2RXOBsyUBE=;\n        b=hOwIqI8Ipqjnj6Qy2kBJOiMXUk7OtIe2cm/NO5juaiGIOtyaXZjBcpsR87zsqnairG\n         IEv82kro67RHv/woSa9/JhMZA1cBE78ZbUs3B9VVqpSZTZNQdJFvh1n9c6LLooKpS4HO\n         8tVaOTALUwN0yh6gdgN3hfcvPKBxP/77iHCJammngKWCSJCyWCaTCrKy1p1BxasrLWcR\n         G2m87eVDSOs7LrkynUamnSN5fIkE7ocv5aF1/wG4LG7pX/PsceZhoCW78ZbIzq6uVqcj\n         rohMkwfZI0BcFfm10oPTRXRowUlyVlkbArBpUssV24CRB+dqshe6fal1O5Ww2iZYuFFQ\n         i8RQ==\r\nMIME-Version: 1.0\r\nX-Received: by 10.49.38.169 with SMTP id h9mr12752592qek.54.1366738773483;\n Tue, 23 Apr 2013 10:39:33 -0700 (PDT)\r\nX-Received: by 10.49.37.130 with HTTP; Tue, 23 Apr 2013 10:39:33 -0700 (PDT)\r\nIn-Reply-To: &lt;CAGVbXL5GGVJVo49VCse4K=TMCtvuWnUcFnWPLfQN30VM0O6RFA@...&gt;\r\nReferences: &lt;CAGVbXL6_OHOhOTS0kf0SKcWA-=zKYbKLQWVWfBoTKOmg7vXxEA@...&gt;\n\t&lt;CAPW_8m7nkYWyQe5fQejYBti9uNU-u6wXfggEcLHn9FXG+MNm5A@...&gt;\n\t&lt;CAGVbXL4AhtBBJKUBALvYqAq7GJsgBFKxW-7ZXX5W3G79kcJbTQ@...&gt;\n\t&lt;CAPW_8m780fgL6HpeNy8evzN9j0z=7Rbg7Dp6UgTwBrkjHhbHkw@...&gt;\n\t&lt;CAGVbXL4Nb1XGw53x+5Z=4Ch=OWR_H+mTtgKqsu=mq-9Z+y_NDg@...&gt;\n\t&lt;CALcoZioQz86o-Fd7YnOgDhprgKU9k5GS+HQdamrQN3GdbPcbtQ@...&gt;\n\t&lt;CAGVbXL5GGVJVo49VCse4K=TMCtvuWnUcFnWPLfQN30VM0O6RFA@...&gt;\r\nDate: Tue, 23 Apr 2013 10:39:33 -0700\r\nMessage-ID: &lt;CAA2iDiA20tjoAybmxNBt8HGd-QxrfkuMsdew40aTJFTpzHppiQ@...&gt;\r\nTo: Brian Craft &lt;craft.brian@...&gt;\r\nCc: Mark Baker &lt;distobj@...&gt;, mca &lt;mca@...&gt;, \n\trest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=047d7bdc122018e3f304db0aaba2\r\nX-Gm-Message-State: ALoCoQkmnCleKneTvoY7shyI8cb948jI41bNzPnm/JmZ8rLh9J/TT8j/7Vj0jaGzYpJ7NFCN618RtWRjU1x7fIJcmYH5KRkwxJPeT7/fa31mmDhvBHmx+E0=\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] the meaning of stateless\r\nX-Yahoo-Group-Post: member; u=401876259; y=l7jPVr6Qdo2RII1VQF9H9SCvGmh-4ds_2OmPP0CFFxRJQ4214WO3sw\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--047d7bdc122018e3f304db0aaba2\r\nContent-Type: text/plain; charset=US-ASCII\r\n\r\nOn Tue, Apr 23, 2013 at 9:14 AM, Brian Craft &lt;craft.brian@...&gt; wrote:\n\n&gt; **\n&gt; What does &quot;understand&quot; mean in this sentence? I&#39;m not aware of a technical\n&gt; definition of &quot;understand&quot; as it applies to computer systems, and it&#39;s not\n&gt; defined in the paper. Again, take the &quot;query by POST&quot; pattern. The eventual\n&gt; GET depends on a previous POST. Does the server &quot;understand&quot; a request that\n&gt; depends on a previous request? What about &quot;stored context&quot;? One would\n&gt; reasonably believe that POSTing a query creates stored context on the\n&gt; server which later requests may take advantage of. But this sentence says\n&gt; that it must not &quot;take advantage of any stored context on the server.&quot; I\n&gt; assume this apparent contradiction is due to some different use of terms,\n&gt; that &quot;stored context&quot; doesn&#39;t mean what one would reasonably assume it\n&gt; means, or something. If this is a different usage of the terms, they should\n&gt; be defined somewhere.\n&gt;\n\nLet&#39;s take this as a specific example:\n\nPOST /createquery\n\n&lt;lots of query information&gt;\n\nreturns\n301\nLocation: /queryresult/1234\n\nPOSTing to create query creates a query result, and then redirects you to\nthat identifier. The query result is a resource, you can GET that result\nall day long. Is that result dynamic? Is it a cached result set? That&#39;s up\nto the service to decide. The system may well delete all query results\nafter 1hr. That&#39;s valid too.\n\nIt can also tie that result specifically to you, in that it only lets you,\nwho authorized as Brian, access query result 1234.\n\nBut you can see, that POST /createquery has clearly defined semantics -- it\ncreates a query result. Then, GET /queryresult/&lt;resultid&gt; returns that\ninformation that was previously created.\n\nNow, consider:\n\nGET /latestqueryresult\n\nWhich returns &quot;the most recent query result for the user&quot;.\n\nDoes this violate &quot;cannot take advantage of any stored context on the\nserver&quot;?\n\nWe can easily see the /createquery process creating not just a\n/queryresult, but a /latestquery/brian result. There&#39;s no limitation about\na process creating affecting a single resource.\n\nAll of the information required to achieve the result is in the request:\nthe URL itself (/latestqueryresult) as well as the identification of the\nuser (Authorization: ...). It&#39;s also pretty well accepted that the\nAuthorization header can affect the outcome of a request. And if there&#39;s\nanything that an Authorization header represents, it&#39;s store context on the\nserver.\n\nWell, now, how does an Authorization header get any more credence to affect\nan operation than a Cookie header?\n\nSo, what we&#39;re now stumbling in to is the definition of &quot;Request&quot;. What\ndoes a request consist of? Just the URL? URL and Authorization Header? What\nabout the Accept headers? They must count for something. So how is a cookie\nany different? Or any other additional header?\n\nThe issue isn&#39;t so much the request itself, it&#39;s not an issue with cookies\nper se. It&#39;s an issue of misuse on the server. Specifically Sessions.\n\nIt&#39;s a problem with hidden conversational state, however manifested (you\ncan represent a Session ID with a query fragment, for example). It goes\ntoward the goal of coarse, self contained transactions being a fundamental\ncore principal of the REST architecture. It&#39;s a &quot;spirit of the rule&quot; vs the\n&quot;letter of the law&quot;. As a general rule, you should be able to take requests\nwholesale, hand them to any server in the system and get the proper result.\nMaking the requests work on first class resources, rather than\nconversational state discreetly maintained, empowers things like proxies,\ncaching, serendipitous reuse.\n\nFor example, when you POST to /createquery, perhaps instead of creating a\nnew queryresult, the system realized it already had one that was &quot;current\nenough&quot; and simply returns the URL to that one. You can easily see\nsomething like Google doing that. Internally caching popular queries for a\nminute.\n\nBut any item typically considered as conversational state can be uplifted\nto a first class resource (the Transaction pattern being a germane\nexample). The loss of implicit stored server context makes you rethink the\nproblem and bring all of these attributes in to the open, where they can be\nanalyzed more readily, and perhaps repurposed later. Having first class\nresources means that everything shares the same fundamental properties.\nImprove the capabilities of these of that foundation, and you potentially\nuplift the entire infrastructure.\n\n-- \nCONFIDENTIALITY NOTICE: The information contained in this electronic \ntransmission may be confidential. If you are not an intended recipient, be \naware that any disclosure, copying, distribution or use of the information \ncontained in this transmission is prohibited and may be unlawful. If you \nhave received this transmission in error, please notify us by email reply \nand then erase it from your computer system.\n\r\n--047d7bdc122018e3f304db0aaba2\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail=\r\n_quote&quot;&gt;On Tue, Apr 23, 2013 at 9:14 AM, Brian Craft &lt;span dir=3D&quot;ltr&quot;&gt;&lt;=\r\n&lt;a href=3D&quot;mailto:craft.brian@...&quot; target=3D&quot;_blank&quot;&gt;craft.brian@gmai=\r\nl.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nmargin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-lef=\r\nt:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;&lt;span&gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div dir=\r\n=3D&quot;ltr&quot;&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;&lt;div&gt;What do=\r\nes &quot;understand&quot; mean in this sentence? I&#39;m not aware of a tec=\r\nhnical definition of &quot;understand&quot; as it applies to computer syste=\r\nms, and it&#39;s not defined in the paper. Again, take the &quot;query by P=\r\nOST&quot; pattern. The eventual GET depends on a previous POST. Does the se=\r\nrver &quot;understand&quot; a request that depends on a previous request? W=\r\nhat about &quot;stored context&quot;? One would reasonably believe that POS=\r\nTing a query creates stored context on the server which later requests may =\r\ntake advantage of. But this sentence says that it must not &quot;take advan=\r\ntage of any stored context on the server.&quot; I assume this apparent cont=\r\nradiction is due to some different use of terms, that &quot;stored context&=\r\nquot; doesn&#39;t mean what one would reasonably assume it means, or someth=\r\ning. If this is a different usage of the terms, they should be defined some=\r\nwhere.&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Let&#39;s take this as a specific example:&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;d=\r\niv&gt;POST /createquery&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;lots of query information&gt;&lt;br=\r\n&gt;&lt;br&gt;&lt;/div&gt;\n&lt;div&gt;returns&lt;br&gt;301&lt;br&gt;&lt;/div&gt;&lt;div&gt;Location: /queryresult/1234&lt;b=\r\nr&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;POSTing to create query creates a query result, and then r=\r\nedirects you to that identifier. The query result is a resource, you can GE=\r\nT that result all day long. Is that result dynamic? Is it a cached result s=\r\net? That&#39;s up to the service to decide. The system may well delete all =\r\nquery results after 1hr. That&#39;s valid too.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;It can al=\r\nso tie that result specifically to you, in that it only lets you, who autho=\r\nrized as Brian, access query result 1234.&lt;br&gt;&lt;br&gt;But you can see, that POST=\r\n /createquery has clearly defined semantics -- it creates a query result. T=\r\nhen, GET /queryresult/&lt;resultid&gt; returns that information that was pr=\r\neviously created.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Now, consider:&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;GET /=\r\nlatestqueryresult&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Which returns &quot;the most recent que=\r\nry result for the user&quot;.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Does this violate &quot;can=\r\nnot take advantage of any stored context on the server&quot;?&lt;br&gt;\n&lt;br&gt;&lt;/div=\r\n&gt;&lt;div&gt;We can easily see the /createquery process creating not just a /query=\r\nresult, but a /latestquery/brian result. There&#39;s no limitation about a =\r\nprocess creating affecting a single resource.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;&lt;div=\r\n&gt;All of the information required to achieve the result is in the request: t=\r\nhe URL itself (/latestqueryresult) as well as the identification of the use=\r\nr (Authorization: ...). It&#39;s also pretty well accepted that the Authori=\r\nzation header can affect the outcome of a request. And if there&#39;s anyth=\r\ning that an Authorization header represents, it&#39;s store context on the =\r\nserver.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Well, now, how does an Authorization header get =\r\nany more credence to affect an operation than a Cookie header?&lt;br&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div&gt;So, what we&#39;re now stumbling in to is the definition of &quot;Req=\r\nuest&quot;. What does a request consist of? Just the URL? URL and Authoriza=\r\ntion Header? What about the Accept headers? They must count for something. =\r\nSo how is a cookie any different? Or any other additional header?&lt;br&gt;\n&lt;/div=\r\n&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The issue isn&#39;t so much the request itself, it&#39=\r\n;s not an issue with cookies per se. It&#39;s an issue of misuse on the ser=\r\nver. Specifically Sessions.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;It&#39;s a problem with hidde=\r\nn conversational state, however manifested (you can represent a Session ID =\r\nwith a query fragment, for example). It goes toward the goal of coarse, sel=\r\nf contained transactions being a fundamental core principal of the REST arc=\r\nhitecture. It&#39;s a &quot;spirit of the rule&quot; vs the &quot;letter of=\r\n the law&quot;. As a general rule, you should be able to take requests whol=\r\nesale, hand them to any server in the system and get the proper result. Mak=\r\ning the requests work on first class resources, rather than conversational =\r\nstate discreetly maintained, empowers things like proxies, caching, serendi=\r\npitous reuse. &lt;br&gt;\n&lt;br&gt;For example, when you POST to /createquery, perhaps =\r\ninstead of creating a new queryresult, the system realized it already had o=\r\nne that was &quot;current enough&quot; and simply returns the URL to that o=\r\nne. You can easily see something like Google doing that. Internally caching=\r\n popular queries for a minute.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;But any item typically co=\r\nnsidered as conversational state can be uplifted to a first class resource =\r\n(the Transaction pattern being a germane example). The loss of implicit sto=\r\nred server context makes you rethink the problem and bring all of these att=\r\nributes in to the open, where they can be analyzed more readily, and perhap=\r\ns repurposed later. Having first class resources means that everything shar=\r\nes the same fundamental properties. Improve the capabilities of these of th=\r\nat foundation, and you potentially uplift the entire infrastructure.&lt;br&gt;\n&lt;b=\r\nr&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;br&gt;\n&lt;span&gt;&lt;font face=3D&quot;Arial&quot; size=3D&quot;1&quot;&gt;=\r\nCONFIDENTIALITY NOTICE: The information contained in this electronic transm=\r\nission may be confidential. If you are not an intended recipient, be aware =\r\nthat any disclosure, copying, distribution or use of the information contai=\r\nned in this transmission is prohibited and may be unlawful. If you have rec=\r\neived this transmission in error, please notify us by email reply and then =\r\nerase it from your computer system.&lt;/font&gt;&lt;/span&gt;\r\n--047d7bdc122018e3f304db0aaba2--\r\n\n"}}