{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"9EMaNvLgLqavynbaJSykRzByrBHnkbrAfvL0wZf83HqnFsLG9oV2MYUvRiZ6AK7yoCZIZdQnFY6J4sFV8I0Kz6cb_lVbK5ZZofEvTDlwOw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Google proposes RPC style APIs over REST","postDate":"1280739226","msgId":16079,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODAyMDI1MzQ2LmIyZWIyOTA1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGk9dHlYQlNqNEVXZlJMWFdTbVEyMytpOGJnemgyS2JnWHZjNzdRMUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGkzMnMzNCtmc21sQGVHcm91cHMuY29tPgk8MTI4MDY4NTEwNS4xNDkxNS40NC5jYW1lbEBkZWhvcmEtbGFwdG9wPgk8QUFOTGtUaT10eVhCU2o0RVdmUkxYV1NtUTIzK2k4Ymd6aDJLYmdYdmM3N1ExQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":16078,"nextInTopic":16080,"prevInTime":16078,"nextInTime":16080,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... Or headers in general.  In a uniform interface, there s no need to detail what methods are available for a resource -- the Allow: header does this -- or","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 42778 invoked from network); 2 Aug 2010 08:53:53 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m10.grp.re1.yahoo.com with QMQP; 2 Aug 2010 08:53:53 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 2 Aug 2010 08:53:53 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 36EDA509DA;\n\tMon,  2 Aug 2010 04:53:51 -0400 (EDT)\r\nDate: Mon, 2 Aug 2010 02:53:46 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: bill@..., wahbedahbe &lt;andrew.wahbe@...&gt;,\n rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100802025346.b2eb2905.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=tyXBSj4EWfRLXWSmQ23+i8bgzh2KbgXvc77Q1@...&gt;\r\nReferences: &lt;i32s34+fsml@...&gt;\n\t&lt;1280685105.14915.44.camel@dehora-laptop&gt;\n\t&lt;AANLkTi=tyXBSj4EWfRLXWSmQ23+i8bgzh2KbgXvc77Q1@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt; \n&gt; Why use WADL for that? Seems unnecessary when can achieve the same\n&gt; thing with just a Link header.\n&gt; \n\nOr headers in general.  In a uniform interface, there&#39;s no need to\ndetail what methods are available for a resource -- the Allow: header\ndoes this -- or what responses will result; the user agent must be\nready to deal with any response code.  Perhaps, if Accept: defaults to\nPUT and there&#39;s already Accept-Patch:, there&#39;s room to introduce an\nAccept-Post: header.\n\nAccept: and Accept-*: headers, in combination with the Allow: header,\ndetail the interface for any media type on my demo system, for example.\nI mentioned using WADL as an OPTIONS response on my system; this would\nbe generated by reading the actual headers the server sends for the\nresource, instead of the other way around.\n\nThe limitations of HTTP in describing a REST system, for example the\nlimitation of just having Accept:, are cause to extend HTTP to\ncompensate; not ditch the whole concept of headers in favor of IDLs and\nRPC interfaces.\n\n-Eric\n\n"}}