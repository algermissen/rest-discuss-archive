{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"sWsDszpjVTh8ad4Z6UfCg90WfGlYMUeH0iCxc5Lj7EQ-QD2IjssazCRppnoPVFGkmdDvXVJBXsnzAyNpnak8WNrUltO_yg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Idea: Simple Web Service Behaviour Language","postDate":"1013798997","msgId":734,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNkQ1ODU1Ljg2M0E0OThFQHByZXNjb2QubmV0Pg==","referencesHeader":"PGE0ajRmMStvdW5iQGVHcm91cHMuY29tPg=="},"prevInTopic":733,"nextInTopic":737,"prevInTime":733,"nextInTime":735,"topicId":725,"numMessagesInTopic":41,"msgSnippet":"... I think we can be mutually helpful here! I may have to be short today, though. Other stuff to do. ... POST. ... Response to POST. Generates a new URI","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 15 Feb 2002 18:57:17 -0000\r\nReceived: (qmail 91922 invoked from network); 15 Feb 2002 18:57:17 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m5.grp.snv.yahoo.com with QMQP; 15 Feb 2002 18:57:17 -0000\r\nReceived: from unknown (HELO smtp2.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 15 Feb 2002 18:57:17 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp2.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1FIvE021343;\n\tFri, 15 Feb 2002 10:57:14 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1FIqDL14235;\n\tFri, 15 Feb 2002 10:52:13 -0800\r\nMessage-ID: &lt;3C6D5855.863A498E@...&gt;\r\nDate: Fri, 15 Feb 2002 10:49:57 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: bhaugen32 &lt;bhaugen32@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Re: Idea: Simple Web Service Behaviour Language\r\nReferences: &lt;a4j4f1+ounb@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nbhaugen32 wrote:\n&gt; \n&gt;...\n&gt; \n&gt; I&#39;m having some trouble getting the business *conversations*\n&gt; RESTified correctly, though, and maybe you can help.\n\nI think we can be mutually helpful here! I may have to be short today,\nthough. Other stuff to do.\n \n&gt; For example:\n&gt; The business protocol for a Order is Offer-Acceptance.\n&gt; A Purchase Order is an offer to buy.\n&gt; To be binding, it must be explicitly accepted by the supplier.\n&gt; The offer must have a time constraint - it is not good forever.\n&gt; \n&gt; So a Purchase Order as a Web resource is also an element in a dialog\n&gt; between Customer and Supplier.\n&gt; \n&gt; The offer-acceptance protocol for a Purchase Order in RosettaNet and\n&gt; ebXML includes stages of requesting and responding messages with\n&gt; timeouts:\n&gt; 1. The Customer places the Purchase Order.\n\nPOST.\n\n&gt; 2. The Supplier sends a receiptAcknowledgment quickly signifying both\n&gt; receipt and schema validation.\n\nResponse to POST. Generates a new URI representing the eventual target\nof its acceptance or rejection.\n\nCustomer uses HTTPEvents to WATCH the new URI (call it /acceptance).\n\n&gt; 3. The Supplier sends an acceptance or rejection (for which they\n&gt; would typically have more time).  Acceptance means contract formation\n&gt; or binding - a Purchase Order is a type of contract.\n\nA notification comes through that the client should check /acceptance\nbecause something has changed at the URI. The customer sees that\n/acceptance says &lt;accept/&gt; (with a date, digital signature, contract,\nlist of things supplied, etc.)\n\n&gt; 4. The Customer sends a receiptAck of the acceptance or rejection.\n\nCustomer POSTs their ack with a digital signature and a URI pointing\nback to /acceptance.\n\n&gt; There are reasons for these signals.  If the receiptAck times out,\n&gt; the Customer may retry or go to another Supplier without wasting any\n&gt; more time.  If the acceptance times out, the offer failed.  B2B\n&gt; orders are usually not like consumer ones where the customer prepays\n&gt; using a credit card.  B2B orders are often postpaid, on credit.  So\n&gt; business state alignment is important:  meaning both parties must\n&gt; agree explicitly and deterministically on whether the order was\n&gt; accepted (or not).\n\nThat&#39;s where the digital signatures and URIs help.\n\n&gt; &quot;Business state alignment&quot; implies that a Purchase Order has a state\n&gt; model:  for example, pending, accepted, rejected, fulfilled, etc.\n&gt; (That was not a complete list of states, by the way.)\n\nYou might think of those as different kinds of resources, pending_po,\naccepted_po, rejected_po, fulfilled_po. Because they all have URIs, you\ncan say: &quot;LOOK, I rejected that PO. Here&#39;s the URI.&quot; Of course one\ncannot necessarily trust one&#39;s business partner so you need to have a\nmirror on your side also.\n\n&gt; Allowed actions will be constrained by PO state:  for example, a PO\n&gt; in the &quot;fulfilled&quot; state cannot be canceled; a &quot;rejected&quot; order\n&gt; should not be fulfilled.  In other words, orchestration of actions is\n&gt; conditioned by resource state.  (Not by message sequence.)\n\nAnother good reason to have separate resources. A fullfilled_PO will\nsimply reject the cancellation POST.\n\n&gt; ebXML (among other initiatives) is attempting to express the\n&gt; orchestration rules as XML documents.  Which means the business\n&gt; process can become a Web resource as well as the business objects.  I\n&gt; think this is very similar to what Paul is trying to do with SWSBL,\n&gt; except that (1) it may be more complex than what you have in mind,\n&gt; and (2) the ebXML guys for the most part do not have a Web resource\n&gt; model in their collective mind.\n\nAgreed.\n\nI&#39;ll have to look at the rest of your stuff later. \n\nI think it is important to show real business examples. I admit that I\nthink in terms of technology and not business. I just know from what I\nhear from business people that the technological problems are similar to\nmore standard protocol problems.\n\nMaybe we could work together sometime on an article about the\nintersection of ebXML and REST. I think that the ebXML crowd should be\nfertile ground for REST thought. Many of them are old SGML heads who\nwould understand the benefits of linking. Others probably have a sense\nthat the web services world is going in the wrong direction and would\nlike to see something going in the right one.\n\n Paul Prescod\n\n"}}