{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic James Ferrier","from":"Nic James Ferrier &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"yMZ8nQRyBOr4jWLQGJBIHppYAzwjRlhBUiQ0V704iQJdt5PsF-2KykjnD3-hrDFEX2GInFgqPnDSrUbE3spiYY47Wjo0uLENq4XMu6S181Kew19nT5GGsg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: WADL pushback","postDate":"1181069610","msgId":8823,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3aXJhMnoxMDUuZnNmQGthbmdhLnRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","inReplyToHeader":"PDQ2NjVBRDVCLjUwMTAwMDNAaGFja2NyYWZ0Lm5ldD4gKEpvbiBIYW5uYSdzIG1lc3NhZ2Ugb2YgIlR1ZVwsIDA1IEp1biAyMDA3IDE5XDozN1w6MTUgKzAxMDAiKQ==","referencesHeader":"PDlkYzc4ZDdiMDcwNjA0MTMzOGoxMDM1NGM5ZnI5ZjI3YTYwMWEzNjNlNGJlQG1haWwuZ21haWwuY29tPgk8ZjQzbXV1JDFoYSQxQHNlYS5nbWFuZS5vcmc+IDxmNDQ3cWwkNmxlJDFAc2VhLmdtYW5lLm9yZz4JPDQ2NjVBRDVCLjUwMTAwMDNAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":8821,"nextInTopic":8824,"prevInTime":8822,"nextInTime":8824,"topicId":8794,"numMessagesInTopic":108,"msgSnippet":"... I have a different perspective on  this. I like to use JSON when I m dealing with a web object inside a programming language - pretty much any programming","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 49265 invoked from network); 5 Jun 2007 19:22:07 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m46.grp.scd.yahoo.com with QMQP; 5 Jun 2007 19:22:07 -0000\r\nReceived: from unknown (HELO owls-house.tapsellferrier.co.uk) (81.187.188.218)\n  by mta13.grp.scd.yahoo.com with SMTP; 5 Jun 2007 19:22:04 -0000\r\nReceived: from nicferrier.tapsellferrier.co.uk ([172.31.50.1] helo=localhost)\n\tby owls-house.tapsellferrier.co.uk with esmtp (Exim 4.60 #1 (Debian))\n\tid 1Hve79-0007ZJ-QX; Tue, 05 Jun 2007 19:50:43 +0100\r\nReceived: by localhost (Postfix, from userid 1000)\n\tid 83798C06D8; Tue,  5 Jun 2007 19:53:30 +0100 (BST)\r\nTo: Jon Hanna &lt;jon@...&gt;\r\nCc: Patrick Mueller &lt;pmuellr@...&gt;,  rest-discuss@yahoogroups.com\r\nReferences: &lt;9dc78d7b0706041338j10354c9fr9f27a601a363e4be@...&gt;\n\t&lt;f43muu$1ha$1@...&gt; &lt;f447ql$6le$1@...&gt;\n\t&lt;4665AD5B.5010003@...&gt;\r\nDate: Tue, 05 Jun 2007 19:53:30 +0100\r\nIn-Reply-To: &lt;4665AD5B.5010003@...&gt; (Jon Hanna&#39;s message of &quot;Tue&#92;, 05 Jun 2007 19&#92;:37&#92;:15 +0100&quot;)\r\nMessage-ID: &lt;87ira2z105.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Nic James Ferrier &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Re: WADL pushback\r\nX-Yahoo-Group-Post: member; u=3702469; y=2WzcOml0uD599TiqIL6eCX6zVOH5NngicRHMpss0DZakkODYizTUszhPtEJV8iJaixU\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\nJon Hanna &lt;jon@...&gt; writes:\n\n&gt; Patrick Mueller wrote:\n&gt;&gt; XML is great for documents.  Which are hard to map into data; you have \n&gt;&gt; to actually think about how to do it right.  Attributes or sub-elements? \n&gt;&gt;   Explicit list structures, or just multiple elements to represent a list?\n&gt;&gt; \n&gt;&gt; JSON is great for data.  Which is easy to map into data.\n&gt;\n&gt; XML is good for data you will map to documents though (if you are a whiz \n&gt; at whatever language is doing the work and lousy at XSLT you will \n&gt; obviously have different thresholds than if you can write enough code to \n&gt; pump something into a transform but are a whiz at XSLT). JSON isn&#39;t too \n&gt; hot for languages other than javascript if you have XML parsers to hand \n&gt; by not JSON parser.\n&gt;\n&gt; I tend to find that if I&#39;m writing javascript then I&#39;m also producing \n&gt; XML documents or fragments out of what I&#39;m receiving, so I tend to \n&gt; favour XML. However, JSON does indeed come into its own for anything \n&gt; where just having a javascript object is what you want.\n\nI have a different perspective on  this.\n\nI like to use JSON when I&#39;m dealing with a web object inside a\nprogramming language - pretty much any programming language but I\nmostly only use languages that are JSON friendly.\n\nIt&#39;s hard to write XML in Java, Python or Ruby. You basically have to\nwrite it as strings and lose lots of editing goodness and keep making\nsyntax mistakes.\n\nBut editing JSON in those languages is usually a matter of using the\nnative language features which all have good syntax support.\n\nFor example, here&#39;s a bit of Python code I&#39;ve written just recently:\n\n return {&quot;abbr&quot;:\n         {&quot;@class&quot;: &quot;user&quot;,\n          &quot;@title&quot;: strip_openid_url(openid_profile.openid),\n          &quot;div&quot;:\n          [{&quot;span&quot;:\n            {&quot;@class&quot;: &quot;nickname&quot;,\n             &quot;span&quot;: openid_profile.nick_name }},\n           {&quot;ul&quot;:\n            {&quot;@class&quot;: &quot;mugshots&quot;,\n             &quot;div&quot;:\n             [{&quot;li&quot;:\n               [{&quot;img&quot;:\n                 {&quot;@class&quot;: &quot;mugshot&quot;,\n                  &quot;@alt&quot;: mugshot.name,\n                  &quot;@src&quot;: file_field_get_url(mugshot.shot) }},\n                {&quot;img&quot;:\n                 {&quot;@class&quot;: &quot;avatar&quot;,\n                  &quot;@alt&quot;: mugshot.name,\n                  &quot;@src&quot;: &quot;/sitemedia/%s&quot; % (mugshot.thumb)}}]} for mugshot in openid_profile.mugshot_set.all()]}}]}}\n\npretty obvious what that is doing. \n\n(in the above instance it&#39;s actually being transformed into XML and\npassed through XSLT to the user - but I also have the option of\ndelivering it to a UA directly as JSON)\n\n\nHTML and XML I find I use directly when I can store a template\nsomewhere or where I have a process that produces SAX events or DOM\ntrees and I&#39;m not altering it much.\n\n-- \nNic Ferrier\nhttp://www.tapsellferrier.co.uk   \n\n"}}