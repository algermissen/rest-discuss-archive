{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":3702469,"authorName":"Nic","from":"Nic &lt;nferrier@...&gt;","profile":"nferrier_tapsellferrier","replyTo":"SENDER","senderId":"K5fA7KsxY_2afz49iHUrLYvUtZuajVh61uVzQxfFeY7ZLlWzzvM0BSSWFJKPnSuJPWXfbpZi4R2RjbnGxDIDraf9iqt7QOx9TFU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Cacheability example","postDate":"1145579816","msgId":6072,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDg3ZnlrN3d5cWYuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+","inReplyToHeader":"PDQ0NDgyMkRCLjEwNzAyMDVAdmVpY29uLmNvbT4gKEx5bGUgS29wbmlja3kncyBtZXNzYWdlIG9mICJUaHUsIDIwIEFwciAyMDA2IDE3OjEwOjAzIC0wNzAwIik=","referencesHeader":"PDQ0NDgwMTA2LjIwOTAxMDNAdmVpY29uLmNvbT4JPDg3MXd2cnlpYmkuZnNmQG5pY2ZlcnJpZXIudGFwc2VsbGZlcnJpZXIuY28udWs+CTw0NDQ4MjJEQi4xMDcwMjA1QHZlaWNvbi5jb20+"},"prevInTopic":6070,"nextInTopic":6073,"prevInTime":6071,"nextInTime":6073,"topicId":6046,"numMessagesInTopic":33,"msgSnippet":"... Because you had to authenticate and authorize yourself just as you would with any app (they want to know who to send that Ministry of Sound album to after","rawEmail":"Return-Path: &lt;nferrier@...&gt;\r\nX-Sender: nferrier@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 83940 invoked from network); 21 Apr 2006 00:43:51 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m29.grp.scd.yahoo.com with QMQP; 21 Apr 2006 00:43:51 -0000\r\nReceived: from unknown (HELO owls-house.tapsellferrier.co.uk) (81.187.188.218)\n  by mta10.grp.scd.yahoo.com with SMTP; 21 Apr 2006 00:43:50 -0000\r\nReceived: from [172.31.50.1] (helo=nicferrier.tapsellferrier.co.uk)\n\tby owls-house.tapsellferrier.co.uk with esmtp (Exim 4.60 #1 (Debian))\n\tid 1FWjeh-0007ai-Jv; Fri, 21 Apr 2006 01:37:51 +0100\r\nReceived: from nferrier by nicferrier.tapsellferrier.co.uk with local (Exim 4.50)\n\tid 1FWjdo-0001kI-R4; Fri, 21 Apr 2006 01:36:56 +0100\r\nTo: Lyle Kopnicky &lt;lyle@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;44480106.2090103@...&gt;\n\t&lt;871wvryibi.fsf@...&gt;\n\t&lt;444822DB.1070205@...&gt;\r\nDate: Fri, 21 Apr 2006 01:36:56 +0100\r\nIn-Reply-To: &lt;444822DB.1070205@...&gt; (Lyle Kopnicky&#39;s message of &quot;Thu, 20 Apr 2006 17:10:03 -0700&quot;)\r\nMessage-ID: &lt;87fyk7wyqf.fsf@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Nic &lt;nferrier@...&gt;\r\nSubject: Re: [rest-discuss] Cacheability example\r\nX-Yahoo-Group-Post: member; u=3702469; y=tJV6g8TPANnuLUTu-rBe0T3CO5hb860ZQgnLTc2C_TVDve62iijHjtCrMnnoUhKaFJ0\r\nX-Yahoo-Profile: nferrier_tapsellferrier\r\n\r\nLyle Kopnicky &lt;lyle@...&gt; writes:\n\n&gt; Nic wrote:\n&gt;&gt;\n&gt;&gt; Another way of doing this though is without a cookie. the user could\n&gt;&gt; have a resource on the server:\n&gt;&gt;\n&gt;&gt;   http://store/nicferrier/cart\n&gt;&gt;\n&gt;&gt; and the client side AJAX could update that resource as and when I\n&gt;&gt; check things in and out of my cart.\n&gt;&gt;\n&gt;&gt;   \n&gt; But here&#39;s the catch:  How does the client side AJAX know to access the \n&gt; URL http://store/nicferrier/cart?  Where does it get the\n&gt; &#39;nicferrier&#39; bit?\n\nBecause you had to authenticate and authorize yourself just as you\nwould with any app (they want to know who to send that Ministry of\nSound album to after all).\n\n\nSo in our example implementation the HTML shell would allow you to\nlogin and store a cookie to identify you.\n\nOr alternately a random basket would be assigned to you (and probably\nstored in a cookie so that you could always be associated with it).\n\nNote that the cookie would NOT store any reference to a session. It\nsimply stores a way to reference the back end cart which can be\naccessed with the HTTP verbs.\n\nBut that wouldn&#39;t change the cacheability of any of the resources\neither (even though the cookie would be different for every person\nrequesting all the resources) because only the client side would read\nthe cookie. In effect the cookie wouldn&#39;t need to be communicated to\nthe server at all because the server wouldn&#39;t be using it.\n\n\nNic\n\n"}}