{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":199619313,"authorName":"Jerome Louvel","from":"Jerome Louvel &lt;jerome.louvel@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"NPKipy88e9aSH8YN4Vn3Ni1M8tmz8vGr_dH_GIzWbDHsskXLL9-6N1gpWt7BirECX0H-B6OpXs1Vu854UjE6egzz3M4gtaVbrCl7E67wxyI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Framework","postDate":"1262018230","msgId":14424,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhoYW1yayRvbGEkMUBnZXIuZ21hbmUub3JnPg==","inReplyToHeader":"PDRCMEU2RjNCLjMwOTA1MDRAZ21haWwuY29tPg==","referencesHeader":"IDxoZWo0ZG0rNnNrZEBlR3JvdXBzLmNvbT4gPDg3emw2YTVscHAud2wlYmVyZW5kQHBvYm94LmNvbT4gPDRCMEU2RjNCLjMwOTA1MDRAZ21haWwuY29tPg=="},"prevInTopic":14064,"nextInTopic":0,"prevInTime":14423,"nextInTime":14425,"topicId":14050,"numMessagesInTopic":13,"msgSnippet":"Hi Antonio, I m a bit late in this thread, but wondered what you meant by expensive exactly regarding the Restlet framework. In many cases, you can rely on a","rawEmail":"Return-Path: &lt;jerome.louvel@...&gt;\r\nX-Sender: jerome.louvel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 43895 invoked from network); 28 Dec 2009 16:37:34 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m12.grp.re1.yahoo.com with QMQP; 28 Dec 2009 16:37:34 -0000\r\nX-Received: from unknown (HELO lo.gmane.org) (80.91.229.12)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Dec 2009 16:37:33 -0000\r\nX-Received: from list by lo.gmane.org with local (Exim 4.50)\n\tid 1NPIb5-00080x-92\n\tfor rest-discuss@yahoogroups.com; Mon, 28 Dec 2009 17:37:31 +0100\r\nX-Received: from host.94.124.68.195.rev.coltfrance.com ([195.68.124.94])\n        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 28 Dec 2009 17:37:31 +0100\r\nX-Received: from jerome.louvel by host.94.124.68.195.rev.coltfrance.com with local (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 28 Dec 2009 17:37:31 +0100\r\nX-Injected-Via-Gmane: http://gmane.org/\r\nTo: rest-discuss@yahoogroups.com\r\nDate:  Mon, 28 Dec 2009 17:37:10 +0100\r\nLines: 130\r\nMessage-ID: &lt;hhamrk$ola$1@...&gt;\r\nReferences:  &lt;hej4dm+6skd@...&gt; &lt;87zl6a5lpp.wl%berend@...&gt; &lt;4B0E6F3B.3090504@...&gt;\r\nMime-Version:  1.0\r\nContent-Type:  text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding:  8bit\r\nX-Complaints-To: usenet@...\r\nX-Gmane-NNTP-Posting-Host: host.94.124.68.195.rev.coltfrance.com\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.9.1.5) Gecko/20091204 Thunderbird/3.0\r\nIn-Reply-To: &lt;4B0E6F3B.3090504@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jerome Louvel &lt;jerome.louvel@...&gt;\r\nSubject: Re: Framework\r\nX-Yahoo-Group-Post: member; u=199619313; y=ZQlUMWujP5J7jWwpVUCyB4yCp5K-aU1pIT7B7ynQcrvcj1jOAuVjkQ\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\nHi Antonio,\n\nI&#39;m a bit late in this thread, but wondered what you meant by \n&quot;expensive&quot; exactly regarding the Restlet framework. In many cases, you \ncan rely on a single &quot;org.restlet.jar&quot; file for:\n  - Restlet API\n  - Restlet Engine (basic HTTP client and server included)\n  - not other dependency beside Java SE needed\n\nThen, all the rest are optional extensions (including one for JAX-RS). \nThe Restlet API itself is quite compact and easy to learn. It isn&#39;t \nintrusive and can be used as a library where you pick a few classes or \nas a framework.\n\nIs it that you want to provide your own connectors for new URI schemes? \nThis is quite easy to do as we proved with SMTP, POP3, JDBC or more \nrecently SIP.\n\nBest regards,\nJerome Louvel\n--\nRestlet ~ Founder and Lead developer ~ http://www.restlet.org\nNoelios Technologies ~ Co-founder ~ http://www.noelios.com\n\n\nLe 26/11/2009 13:06, Ant�nio Mota a �crit :\n&gt; I myself I&#39;m not a big fan of frameworks, I even wrote elsewhere about\n&gt; what I consider a anti-pattern that I called Framework Oriented Design\n&gt; Architecture, or FODA for short (Portuguese speakers will appreciate the\n&gt; irony...).\n&gt;\n&gt; Basically, what I call FODA is a more or less current practice of\n&gt; choosing a Framework (or two or three) and then design the architecture\n&gt; around the framework, rather than doing the opposite, and then having to\n&gt; &quot;fit&quot; the architecture to what the framework(s) can or not do, instead\n&gt; of the business model that it was supposed to fit.\n&gt;\n&gt; The best example of this is the myriad of applications that start by\n&gt; choose &quot;Spring + Hibernate&quot; without taking into account the limitations\n&gt; of those two frameworks, and then conform to those limitations that in\n&gt; turn limit the business value of the solution.\n&gt;\n&gt; That being said, it is undoubtedly true that frameworks are very useful\n&gt; in avoiding writing &quot;plumbing&quot; code and speeding up development. Like\n&gt; Spring Core when correctly used (I&#39;m not so sure about Hibernate...)\n&gt;\n&gt; So of course, IMO, frameworks have their space in REST as in any\n&gt; development style, as long they do not dictate the overall architecture.\n&gt; So I would say, design your architecture first (simply putting the ideas\n&gt; in your head in a consistent order, defining clearly the ends to which\n&gt; it aims, even designing some fancy squares and circles and lines in a\n&gt; napkin, not necessarily a &quot;formal&quot; design - but remember you&#39;ll need\n&gt; that formality later in the process) and from them look not only at the\n&gt; frameworks that gives you what you need, but also *how* they do it,\n&gt; because probably you will need *some* of the functionalities of the\n&gt; framework but you will want to avoid to commit yourself to the whole\n&gt; stack it provides - or you risk falling into a FODA.\n&gt;\n&gt; For instance, since the beginning we knew that for business reasons we\n&gt; had to support not only HTTP but a few other methods of communicating\n&gt; with our clients/business partners, and we build the design with that in\n&gt; mind. Had we chosen a framework in the first place and we had to deal\n&gt; with big problems down the road - like choosing Jersey, that gives what\n&gt; we need but only for HTTP, or Restlet, that supports some other\n&gt; protocols but is way too &quot;expensive&quot; (not in money, but technologically\n&gt; speaking) to one of the goals of our design - to be simple and &quot;light&quot;.\n&gt; And expansible.\n&gt;\n&gt; So we end up using Spring (core, beans, context), Spring Batch, Spring\n&gt; Web/MVC (only for the HTTP connector), big chunks of Jersey,\n&gt; Spring-Integration (on hold now), Hibernate (against my will) and a few\n&gt; others like JackRabbit, Funanbol, jBPM and others for very specific things.\n&gt;\n&gt; I hope this helps you in analysing the frameworks.\n&gt;\n&gt;\n&gt; berend@... wrote:\n&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; &quot;dhillon&quot; == dhillon sjsu&lt;narpal.dhillon@...\n&gt;&gt; &lt;mailto:narpal.dhillon%40ymail.com&gt;&gt;  writes:\n&gt;&gt;\n&gt;&gt; dhillon&gt;  Hello I am new to the REST development. I have general\n&gt;&gt; dhillon&gt;  question that which is the most popular and mostly used\n&gt;&gt; dhillon&gt;  framework for RESTful web services. e.g. Jerset, Restlet\n&gt;&gt; dhillon&gt;  or Rails. I am not asking for a specific language, but in\n&gt;&gt; dhillon&gt;  general.\n&gt;&gt;\n&gt;&gt; REST and framework don&#39;t belong in the same sentence. That&#39;s the short\n&gt;&gt; answer.\n&gt;&gt;\n&gt;&gt; The longer answer is that you don&#39;t need one, nor want one. If your\n&gt;&gt; framework cannot tell you the HTTP method, doesn&#39;t allow (or makes it\n&gt;&gt; heard) you to query or specify headers, it&#39;s probably not useful for\n&gt;&gt; REST either.\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; Cheers,\n&gt;&gt;\n&gt;&gt; Berend de Boer\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}