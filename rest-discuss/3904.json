{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"zMpk9IBN1PnooyoHXhfn6Zj-jRaLt0OoSBDVrjiXpHfEsRUTpGvjFDsNcJ8HUoLC-1drDf0j5ROwxas-Q7lAfUFN","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] ReST vs MoST Messaging","postDate":"1060801880","msgId":3904,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyMjI1OTIzNi4xMDYwNzg3NDgwQGxvY2FsaG9zdD4=","inReplyToHeader":"PDAwNjgwMWMzNjFjMSRlMDFlYzA4MCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDM1NDIxMTUyOS4xMDYwNzE5NDYyQGxvY2FsaG9zdD4gPDAwMDAwMWMzNjE5NyRhNDNiNDZkMCRhMDAwYThjMEBTZWFpcnRoQTMxPiA8NDEwMTE1NDQ0LjEwNjA3NzUzMzZAbG9jYWxob3N0PiA8MDA2ODAxYzM2MWMxJGUwMWVjMDgwJGEwMDBhOGMwQFNlYWlydGhBMzE+"},"prevInTopic":3903,"nextInTopic":3905,"prevInTime":3903,"nextInTime":3905,"topicId":3880,"numMessagesInTopic":23,"msgSnippet":"--On Wednesday, August 13, 2003 1:39 PM -0400 Seairth Jacobs ... How is that functionally different from a mail system that requires RFC2017 URL external body","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 59656 invoked from network); 13 Aug 2003 19:37:07 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m18.grp.scd.yahoo.com with QMQP; 13 Aug 2003 19:37:07 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (208.45.6.97)\n  by mta1.grp.scd.yahoo.com with SMTP; 13 Aug 2003 19:37:06 -0000\r\nReceived: from [192.168.123.103] (m288d36d0.tmodns.net [208.54.141.40])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid AED4389072; Wed, 13 Aug 2003 15:37:05 -0400 (EDT)\r\nDate: Wed, 13 Aug 2003 15:11:20 -0400\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n\trest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] ReST vs MoST Messaging\r\nMessage-ID: &lt;422259236.1060787480@localhost&gt;\r\nIn-Reply-To: &lt;006801c361c1$e01ec080$a000a8c0@SeairthA31&gt;\r\nReferences: &lt;354211529.1060719462@localhost&gt;\n &lt;000001c36197$a43b46d0$a000a8c0@SeairthA31&gt; &lt;410115444.1060775336@localhost&gt;\n &lt;006801c361c1$e01ec080$a000a8c0@SeairthA31&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\n--On Wednesday, August 13, 2003 1:39 PM -0400 Seairth Jacobs \n&lt;seairth@...&gt; wrote:\n&gt;&gt; OK, what is the purpose of RNA?\n&gt;\n&gt; Its nothing more than a way for one party to notify another party of a\n&gt; resource.\n\nHow is that functionally different from a mail system that requires RFC2017 \nURL external body content-types? In other words a mail system in which the \nbody of the message is access via URL rather than included in the message \nitself.\n\nSince my one line spec does exactly that.  Why do I need all the RNA docs?\n\n&gt;&gt; Nope.  You still don&#39;t have a content-type for identity or inbox.\n&gt;\n&gt; What are you talking about?  Resources dont have content-types!  Only the\n&gt; representations of them do.\n\nThat is the subject of the current debate.  My claim is that POST requires \nthat resources MUST have content-types and that those resource \ncontent-types MUST be exposed whenever a client make a GET requests without \nan Accept header.\n\nHow the server stores the resource is irrelevant.  The server must BEHAVE \nas if the content-type is whatever it says in response to a raw GET.\n\nDid you read my last reply to Roy?  Have you read the actual text of \nRFC2616?\n\n&gt; For instance, suppose you have a resource that is an image of me.\n\nWhat does it mean for the resource to be an image of you?  You have a \nresource that is an image.  RFC2616 requires that the server behave as if \nthe image is stored in whatever content-type it declares in response to a \nGET or HEAD request.\n\n&gt; Either through conneg or through different URIs,\n&gt; a GET may return a jpg, gif, png, svg, bmp, wmf, pdf, mix, pcx, or even\n&gt; ascii art. Each of those representations have a content-type.  The\n&gt; resource itself is not any one of those content-types and should not be\n&gt; expressed as such.  It *may* be that the actual bits on the server are\n&gt; stored as svg (and converted for all other content-type representations),\n&gt; but that doesn&#39;t mean that a client should think of the resource as being\n&gt; an svg resource.\n\nYou are confusing conneg with raw GET.  The client *should* think of the \nresource as being a text/xml+svg resource IF that is the content-type the \nserver supplies in response to a GET without an Accept header.\n\n&gt; That is an implementation detail that has nothing to do\n&gt; with the client-server relationship. Likewise, neither the Identity or\n&gt; Inbox resources should have a content-type.\n\nIf they don&#39;t have a content-type, it is not really meaningfully to talk \nabout POSTing to it because without a content-type you lack a notion of \nsubordinate resources.\n\nIn what way is a notification subordnate to an Inbox or an Agreement \nsubordinate to an Identity?  How can a client know that?\n\n&gt;&gt; What they *are* constrains how they interact via HTTP.  Defining a custom\n&gt;&gt; interface via HTTP is defining a custom interface and loses all the\n&gt;&gt; advantages of genericity/visibility/transparency etc.  It is NOT\n&gt;&gt; discoverable.\n&gt;&gt; Given the arbitrariness of your interface, why not define a new HTTP\n&gt; method?\n&gt;\n&gt; All that needs knowing is what the resource does with the associated\n&gt; content-type (3 and 4 above).  Beyond that, the client shouldn&#39;t care what\n&gt; the resource is.\n\nHow does the client know the content-type it is supposed to POST?  If you \nare restricting POST to an entirely arbitrary content-type and the effect \nof that POST is entirely invisible to the client and the notion of \n&quot;subordinate resource&quot; has no meaning, in what sense are you implementing \nHTTP POST.  You are defining a new method and should choose another name? \nAt very least, if you did, the client would know whether the server is \nactually implementing RNA or just accepting POSTs of *any* random \ncontent-type.  The client would know this based on the NOT IMPLEMENTED \nstatus code.  Your protocol provides the client NO WAY to know what the \nserver is actually doing (whether the resource actually even intends to \nimplement an RNA interface).\n\n&gt;&gt; If the returned content-type is undefined, you are violating HTTP and\n&gt;&gt; describing NOTHING.\n&gt;\n&gt; As I said, though, let&#39;s not\n&gt; get stuck on this minor point.  It isn&#39;t central to RNA.\n\nThe content-type of a resource is essential to HTTP.  Otherwise PUT, POST, \nand GET have no meaning.\n\n&gt;&gt; 202 implies ABSOLUTELY NOTHING about the behavior of the system.  You are\n&gt;&gt; describing entirely arbitrary interfaces.  Why not define a new method?\n&gt;\n&gt; Would you like 204 instead?  To me, 202 means &quot;the request was valid and\n&gt; there is nothing more to say&quot;.  If you know what\n&gt; application/x.rna.notification+xml is and what its relationship to an\n&gt; Inbox resource is, then I think it means all that it needs to mean.\n\nUnless Inbox has a content-type, I have NO way to know what its \nrelationship is to ANYTHING.  All I know is that it accepts your \ncontent-type via a method you call POST (but that isn&#39;t the POST described \nby the HTTP spec).  Why not use another method name?  It would be less \nconfusing.\n\n&gt;&gt; &gt; Notes:\n&gt;&gt; &gt; [2] 4xx and 5xx responses are always implicitly supported, but can be\n&gt;&gt; &gt; explicitly named above if special criteria need to be given (such as a\n&gt;&gt; &gt; specific returnable content-type).\n&gt;&gt;\n&gt;&gt; Your spec says that an RNA inbox accepts any POST of the content-type you\n&gt;&gt; specify.  Stuff that is not that content-type is not covered by your\n&gt;&gt; spec. Again, your spec defines ABSOLUTELY NO visible behavior by an HTTP\n&gt;&gt; server.\n&gt;\n&gt; Sorry, you&#39;ve lost me here as well.  What do you mean by that last\n&gt; sentence?\n\nAre you defining the behavior of the URI with respect to all possible \nPOSTed content-types or only with respect to the content-types you define? \nIf the former, you can&#39;t talk about 4xx or 5xx codes.  If the later, you \nare moving even further away from HTTP and are really just defining a new \nHTTP method.\n\n&gt;&gt; &gt; Identity Resource\n&gt;&gt; &gt; This resource represents a user&#39;s (person, program, machine, etc.)\n&gt;&gt; &gt; identity. Currently, it has only two functions:  negotiate RNA\n&gt;&gt; &gt; Agreement documents (content-type of application/x.rna.agreement+xml),\n&gt;&gt; &gt; and to return something (such as an html document) what queried.\n\n&gt;&gt; If resources have &quot;functions&quot; you are implementing a custom interface. \nWhy\n&gt;&gt; not give these functions explicit method names?\n&gt;\n&gt; Because POST is sufficient.  I don&#39;t see that creating a new method would\n&gt; be any more helpful.\n\nYou are *already* creating a new method, the only question is whether you \ncan or should call it POST.  Since the HTTP spec reserves the POST method \nname, to comply with HTTP, you must choose another name.\n\n-Alex-\n\n\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n"}}