{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175757792,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"ndbXliEJ83VpyTOYVOdLgKaAzCpzcKfhlX-0aYHQXdyoMVxi5751S5RJ4W_rN6mQQCFmhJpW4Cs9vVVhCTzlPbQOKUx0WidM7U0NGA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] client-stateless-server","postDate":"1177618813","msgId":8260,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM4MDU4MDJDLTM4QzYtNDkxRS04MzQ5LUMwMzRFMzg3MUNFNUBnYml2LmNvbT4=","inReplyToHeader":"PDk5RUYxMEI3LUE5MjQtNDA3Mi05RTZELTI2OTRDQzAwQzk5OUBibHVlem9vLm9yZz4=","referencesHeader":"PGYwbnJmNytlc2FjQGVHcm91cHMuY29tPiA8OTlFRjEwQjctQTkyNC00MDcyLTlFNkQtMjY5NENDMDBDOTk5QGJsdWV6b28ub3JnPg=="},"prevInTopic":8259,"nextInTopic":0,"prevInTime":8259,"nextInTime":8261,"topicId":8254,"numMessagesInTopic":7,"msgSnippet":"... Right, but only if you want such state to persist for a user. The best way to do a shopping cart RESTfully is to use standard mark-up to describe items","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 24917 invoked from network); 26 Apr 2007 20:20:27 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m51.grp.scd.yahoo.com with QMQP; 26 Apr 2007 20:20:27 -0000\r\nReceived: from unknown (HELO spaceymail-a3.g.dreamhost.com) (208.97.132.66)\n  by mta13.grp.scd.yahoo.com with SMTP; 26 Apr 2007 20:20:27 -0000\r\nReceived: from [192.168.0.133] (ip72-211-200-45.oc.oc.cox.net [72.211.200.45])\n\tby spaceymail-a3.g.dreamhost.com (Postfix) with ESMTP id 34AD4195159;\n\tThu, 26 Apr 2007 13:20:15 -0700 (PDT)\r\nIn-Reply-To: &lt;99EF10B7-A924-4072-9E6D-2694CC00C999@...&gt;\r\nReferences: &lt;f0nrf7+esac@...&gt; &lt;99EF10B7-A924-4072-9E6D-2694CC00C999@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;C805802C-38C6-491E-8349-C034E3871CE5@...&gt;\r\nCc: siefert.david &lt;siefert.david@...&gt;,\n\trest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 26 Apr 2007 13:20:13 -0700\r\nTo: Chris Burdess &lt;dog@...&gt;\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nSubject: Re: [rest-discuss] client-stateless-server\r\nX-Yahoo-Group-Post: member; u=175757792; y=AlRPnubLXC0L9WyqEFRSgQBMq3irKbByuxoGQ5FA-1DQ4ePwIcXy\r\nX-Yahoo-Profile: roy_fielding\r\n\r\n\nOn Apr 26, 2007, at 2:30 AM, Chris Burdess wrote:\n&gt; There&#39;s a bit of confusion here about the notion of state. It&#39;s OK\n&gt; for the server to have state, and for that state to be updated as a\n&gt; result of requests, in fact it&#39;s quite normal. The issue in a REST\n&gt; design is about application state and its relation to scalability,\n&gt; specifically that if a server is required to store transactional\n&gt; state that associates multiple request/response pairs with one\n&gt; another in a state machine, as with many Internet protocols like IMAP\n&gt; or FTP, it has a negative effect on scalability and limits the number\n&gt; of potential clients that can be served. Therefore in a REST system\n&gt; (e.g. HTTP) all this transactional state is made available in each\n&gt; request. For non-application functionality, it&#39;s OK for the client\n&gt; and the server to share a secret, like the authenticated user&#39;s\n&gt; passphrase. But generally, the plan is to expose any data related to\n&gt; application functionality as a resource, identified as a URL, and\n&gt; describe the application as a set of operations that transfer data\n&gt; representing that resource to and from the server. So you wouldn&#39;t\n&gt; design a shopping cart using a shared secret, e.g. a cookie that\n&gt; holds an opaque identifier that identifies a record in some database\n&gt; accessible to the server; you&#39;d design it as a shopping-cart resource\n&gt; that you can GET with its URL to see the current state of it\n&gt; (assuming you have the authorisation to do so), and POST to with a\n&gt; new item to be added to it, etc.\n\nRight, but only if you want such state to persist for a user.\n\nThe best way to do a shopping cart RESTfully is to use standard mark-up\nto describe items that can be purchased and allow the user agent\nto &quot;move&quot; items from whatever page they happen to be looking at\ninto their own browser&#39;s virtual cart.  The mark-up can describe\nwhere to go for check-out, and the cart could contain items from\nmany different merchants.  In other words, all of the state remains\non the client.  The reason we don&#39;t do it that way now is partly\nbecause shops don&#39;t believe in waiting for standard media types\nto be updated, and partly because Netscape became gun-shy after\nthe response to their early HTML extensions.\n\n....Roy\n\n"}}