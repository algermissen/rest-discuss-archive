{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"S8RRLnkMojm6oGzQfOlbJjaUiSg2xbL6K_-EXTVOAJXLiURglq-E7k6oBRvf95deAP2-gDvoB6JOJKl3EmA8WeEi2NAkJPgN0JzD","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking \tnon-hypertext","postDate":"1246411928","msgId":13050,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxNThhZDc1MDkwNjMwMTgzMm8zZWJjYjdkOWcxY2NmMzg3ODZkMmM4MDU4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDBBRDY1QkZBLUZFMzYtNEQzMi1BNDcyLTg0OEE3QUZBQUI4RUBzdWJidS5vcmc+","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4JIDw0QTQ0MDRGOC4zMDAwMDA4QHJlZGhhdC5jb20+IDw0QTQ0MTZEMi41MDgwMzA0QGRlaG9yYS5uZXQ+CSA8Mjg1MDUwNjgtMTkzQS00MjE0LUI1RjUtMThGM0U5N0E5NkM0QHN1YmJ1Lm9yZz4JIDwyMTYwNmRjZjA5MDYzMDAzNDRnNGI5ZjdmYzNrYzUxNDYyNDc4NmVjMmNmZEBtYWlsLmdtYWlsLmNvbT4JIDwwRENDQTBEMC1GNDVGLTRENTYtQTI2Ni0zQjU1QjM4NDUzNzNAc3ViYnUub3JnPgkgPDgxNThhZDc1MDkwNjMwMTEzMnI0NTkxMDg4NHY1MjE2ZGVhZjQ3NWEzYWU4QG1haWwuZ21haWwuY29tPgkgPEYxOTEzOUQ0LUQ4RjAtNEMwRS04NDlDLThDQjZFRkQ1MjUwMEBzdWJidS5vcmc+CSA8ODE1OGFkNzUwOTA2MzAxMzI4dzY3MTc3ZjkyaGU2NzI3MWYzM2I2NTI1NTFAbWFpbC5nbWFpbC5jb20+CSA8MEFENjVCRkEtRkUzNi00RDMyLUE0NzItODQ4QTdBRkFBQjhFQHN1YmJ1Lm9yZz4="},"prevInTopic":13049,"nextInTopic":13051,"prevInTime":13049,"nextInTime":13051,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"... Good questions.  Certainly, it ll be the server that controls what s a valid linkage , but the range of possibilities might be (nearly) infinite.  And I ","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 70923 invoked from network); 1 Jul 2009 01:33:08 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.sp2.yahoo.com with QMQP; 1 Jul 2009 01:33:08 -0000\r\nX-Received: from unknown (HELO mail-qy0-f194.google.com) (209.85.221.194)\n  by mta3.grp.re1.yahoo.com with SMTP; 1 Jul 2009 01:33:08 -0000\r\nX-Received: by qyk32 with SMTP id 32so716948qyk.0\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 18:32:08 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.45.149 with SMTP id e21mr4425652qaf.275.1246411928451; \n\tTue, 30 Jun 2009 18:32:08 -0700 (PDT)\r\nIn-Reply-To: &lt;0AD65BFA-FE36-4D32-A472-848A7AFAAB8E@...&gt;\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt;\n\t &lt;4A4404F8.3000008@...&gt; &lt;4A4416D2.5080304@...&gt;\n\t &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt;\n\t &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt;\n\t &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt;\n\t &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\n\t &lt;F19139D4-D8F0-4C0E-849C-8CB6EFD52500@...&gt;\n\t &lt;8158ad750906301328w67177f92he67271f33b652551@...&gt;\n\t &lt;0AD65BFA-FE36-4D32-A472-848A7AFAAB8E@...&gt;\r\nDate: Tue, 30 Jun 2009 20:32:08 -0500\r\nX-Google-Sender-Auth: e3c762593deb787a\r\nMessage-ID: &lt;8158ad750906301832o3ebcb7d9g1ccf38786d2c8058@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Sam Johnston &lt;samj@...&gt;, Bill de hOra &lt;bill@...&gt;, rest-discuss@yahoogroups.com, \n\tMark Nottingham &lt;mnot@...&gt;\r\nContent-Type: multipart/alternative; boundary=0015175cb30e3d3d57046d9ae46a\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking \n\tnon-hypertext\r\nX-Yahoo-Group-Post: member; u=11652427; y=q1mzKtMV_GNtFks0j3sCNOenYKOPdwWJdEQNogpqTSWzAqiKKGj3mAVJrA\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\n\r\n--0015175cb30e3d3d57046d9ae46a\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nOn Tue, Jun 30, 2009 at 5:17 PM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt; This looks just right for a one-many link (as in my #1 option -- post to a\n&gt;&gt; cart &quot;collection&quot; resource) in which the &quot;one&quot; is obvious and easily\n&gt;&gt; discoverable (like a cart).  But a common case I run into is a one in\n&gt;&gt; which\n&gt;&gt; a resource must be linked to any of a large number of possible related\n&gt;&gt; resources.  (In my case it is a digital image library, in which we\n&gt;&gt; regularly\n&gt;&gt; need to create links between items, e.g., a link from a photo of an\n&gt;&gt; architect to an image of a building that she created.).  We have needed to\n&gt;&gt; devise as general an operation as possible to *relate* two resources.  In\n&gt;&gt; the case of a cart and a product, it is obvious what the relationship will\n&gt;&gt; be once it is created.  We have need to create links between resources\n&gt;&gt; that\n&gt;&gt; may have any of a large number of relations (e.g., &quot;created-by&quot;).  I wish\n&gt;&gt; to\n&gt;&gt; stay in the realm of Atom (avoiding complexities of RDF).  I am reminded\n&gt;&gt; somewhat here by the work going on in activities streams....  Anyway, I\n&gt;&gt; agree with Sam that it is currently an unsolved problem with wide\n&gt;&gt; applicability.\n&gt;&gt;\n&gt;&gt;\n&gt; So, when you let clients establish links between resources, who controls\n&gt; whether a link is valid or bogus?\n&gt;\n&gt; What is the advantage of the client owning this problem?\n&gt;\n&gt; Forgetting about HTTP and REST for a bit, would you still take the same\n&gt; approach if you are building this application using a different style? What\n&gt; I am getting at is, is the &quot;link management&quot; problem real, or is it a\n&gt; manifestation of an implementation choice?\n\n\nGood questions.  Certainly, it&#39;ll be the server that controls what&#39;s a valid\n&quot;linkage&quot;, but the range of possibilities might be (nearly) infinite.  And I\nagree there are few cases in which the problem should be owned by the\nclient. (I can&#39;t help but think about all of the sticky issue around RDF\nhere -- by whose authority is a particular assertion made given that the\npower to make an assertion is &quot;granted&quot; to any &quot;client&quot;?).\n\nI can decompose the problem such that a UI might be a drag-and-drop, an\n&quot;add-to-cart&quot; button, etc.  More commonly, in my digital library case, I&#39;ll\nhave an embedded search feature where I allow the user to do an open search\nover the collection and select any found items to be &quot;related&quot; to the\ncurrent item (and probably provide a pull-down selection of relation\ntypes).\n\nJust under the hood, though, a link is being created between these two\nresources.  Since the range of possible links is so huge, I&#39;d find it hard\nto offer a @rel=buy link as in your example.  I suppose a reasonable\nextrapolation of that would be to provide a &quot;linker&quot; global resource that\nwould allow me, say, to post form encoded:\nid_one=123&id_two=224&relation=created-by (?).  OR perhaps each item has\nit&#39;s own &lt;link rel=&quot;http://example.org/linker&quot; href=&quot;\nhttp://example.org/item/linker/123&quot;/&gt; that I could post an id and\nrelationship type to (hmmm -- need to provide a way for client to know the\npossible relation types -- possibly an atom:link for each relation type that\nI can POST to?).\n\nAnyway, it gets unwieldy quickly.  It&#39;s unavoidable (I think) that a case in\nwhich you might simply add a foreign key or a bridge table when thinking\nrelationally, you need to do lots of contortions to do RESTfully.  When all\nis said and done, link headers seems reasonably elegant.  I agree with you,\nthough, that it potentially gives the client too much (unconstrained, or at\nleast not constrained in a discoverable way) ownership of the problem.\n\n--peter\n\n\n\n\n&gt;\n&gt; Subbu\n&gt;\n\r\n--0015175cb30e3d3d57046d9ae46a\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Jun 30, 2009 at 5:17 PM, Subbu A=\r\nllamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@su=\r\nbbu.org&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D=\r\n&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padd=\r\ning-left: 1ex;&quot;&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; p=\r\nadding-left: 1ex;&quot;&gt;\nThis looks just right for a one-many link (as in my #1 =\r\noption -- post to a&lt;br&gt;\ncart &quot;collection&quot; resource) in which the =\r\n&quot;one&quot; is obvious and easily&lt;br&gt;\ndiscoverable (like a cart). =C2=\r\n=A0But a common case I run into is a one in which&lt;br&gt;\na resource must be li=\r\nnked to any of a large number of possible related&lt;br&gt;\nresources. =C2=A0(In =\r\nmy case it is a digital image library, in which we regularly&lt;br&gt;\nneed to cr=\r\neate links between items, e.g., a link from a photo of an&lt;br&gt;\narchitect to =\r\nan image of a building that she created.). =C2=A0We have needed to&lt;br&gt;\ndevi=\r\nse as general an operation as possible to *relate* two resources. =C2=A0In&lt;=\r\nbr&gt;\nthe case of a cart and a product, it is obvious what the relationship w=\r\nill&lt;br&gt;\nbe once it is created. =C2=A0We have need to create links between r=\r\nesources that&lt;br&gt;\nmay have any of a large number of relations (e.g., &quot;=\r\ncreated-by&quot;). =C2=A0I wish to&lt;br&gt;\nstay in the realm of Atom (avoiding =\r\ncomplexities of RDF). =C2=A0I am reminded&lt;br&gt;\nsomewhat here by the work goi=\r\nng on in activities streams.... =C2=A0Anyway, I&lt;br&gt;\nagree with Sam that it =\r\nis currently an unsolved problem with wide&lt;br&gt;\napplicability.&lt;br&gt;\n&lt;br&gt;\n&lt;/bl=\r\nockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nSo, when you let clients establish links between resou=\r\nrces, who controls whether a link is valid or bogus?&lt;br&gt;\n&lt;br&gt;\nWhat is the a=\r\ndvantage of the client owning this problem?&lt;br&gt;\n&lt;br&gt;\nForgetting about HTTP =\r\nand REST for a bit, would you still take the same approach if you are build=\r\ning this application using a different style? What I am getting at is, is t=\r\nhe &quot;link management&quot; problem real, or is it a manifestation of an=\r\n implementation choice?&lt;/blockquote&gt;\n&lt;div&gt;&lt;br&gt;Good questions.=C2=A0 Certain=\r\nly, it&#39;ll be the server that controls what&#39;s a valid &quot;linkage&=\r\nquot;, but the range of possibilities might be (nearly) infinite.=C2=A0 And=\r\n I agree there are few cases in which the problem should be owned by the cl=\r\nient. (I can&#39;t help but think about all of the sticky issue around RDF =\r\nhere -- by whose authority is a particular assertion made given that the po=\r\nwer to make an assertion is &quot;granted&quot; to any &quot;client&quot;?)=\r\n.&lt;br&gt;\n&lt;br&gt;I can decompose the problem such that a UI might be a drag-and-dr=\r\nop, an &quot;add-to-cart&quot; button, etc.=C2=A0 More commonly, in my digi=\r\ntal library case, I&#39;ll have an embedded search feature where I allow th=\r\ne user to do an open search over the collection and select any found items =\r\nto be &quot;related&quot; to the current item (and probably provide a pull-=\r\ndown selection of relation types).=C2=A0 &lt;br&gt;\n&lt;br&gt;Just under the hood, thou=\r\ngh, a link is being created between these two resources.=C2=A0 Since the ra=\r\nnge of possible links is so huge, I&#39;d find it hard to offer a @rel=3Dbu=\r\ny link as in your example.=C2=A0 I suppose a reasonable extrapolation of th=\r\nat would be to provide a &quot;linker&quot; global resource that would allo=\r\nw me, say, to post form encoded: id_one=3D123&amp;id_two=3D224&amp;relation=\r\n=3Dcreated-by (?).=C2=A0 OR perhaps each item has it&#39;s own &lt;link rel=\r\n=3D&quot;&lt;a href=3D&quot;http://example.org/linker&quot;&gt;http://example.org/linker&lt;/a=\r\n&gt;&quot; href=3D&quot;&lt;a href=3D&quot;http://example.org/item/linker/123&quot;&gt;http://=\r\nexample.org/item/linker/123&lt;/a&gt;&quot;/&gt; that I could post an id and rela=\r\ntionship type to (hmmm -- need to provide a way for client to know the poss=\r\nible relation types -- possibly an atom:link for each relation type that I =\r\ncan POST to?).&lt;br&gt;\n&lt;br&gt;Anyway, it gets unwieldy quickly.=C2=A0 It&#39;s una=\r\nvoidable (I think) that a case in which you might simply add a foreign key =\r\nor a bridge table when thinking relationally, you need to do lots of contor=\r\ntions to do RESTfully.=C2=A0 When all is said and done, link headers seems =\r\nreasonably elegant.=C2=A0 I agree with you, though, that it potentially giv=\r\nes the client too much (unconstrained, or at least not constrained in a dis=\r\ncoverable way) ownership of the problem.&lt;br&gt;\n&lt;br&gt;--peter&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/d=\r\niv&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(20=\r\n4, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;br&gt;&lt;font colo=\r\nr=3D&quot;#888888&quot;&gt;\n&lt;br&gt;\nSubbu&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0015175cb30e3d3d57046d9ae46a--\r\n\n"}}