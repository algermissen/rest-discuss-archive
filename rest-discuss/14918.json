{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223135631,"authorName":"Felipe Ga√∫cho","from":"=?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;","profile":"felipegaucho2003","replyTo":"SENDER","senderId":"R-nrZEM-1Z3Hs6NMJvj6yiuYBHnNUp0CZ5DfO6h3X1mPF1tmH_sOXb6ZfQ-DYHPyt3QsO6Czb29vd--kAom9FXFzerUyocaF93MxUtQ3eXef02jQVSxWowfW-Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267165563","msgId":14918,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQxMTYwMzg2MTAwMjI1MjIyNmo2NGI4ZDM0MmlmZmRkYTRlNmQ4NjgzMzkwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDU1MTk1Ljc2MDYwLnFtQHdlYjU1OTA4Lm1haWwucmUzLnlhaG9vLmNvbT4=","referencesHeader":"PGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+CSA8NTUxOTUuNzYwNjAucW1Ad2ViNTU5MDgubWFpbC5yZTMueWFob28uY29tPg=="},"prevInTopic":14917,"nextInTopic":14919,"prevInTime":14917,"nextInTime":14919,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"There is only 1 drawback in your solution: JAXB unfortunately doesn t allow you to add extra annotations in the generated files, so you need to manually manage","rawEmail":"Return-Path: &lt;fgaucho@...&gt;\r\nX-Sender: fgaucho@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 42186 invoked from network); 26 Feb 2010 06:26:03 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m14.grp.re1.yahoo.com with QMQP; 26 Feb 2010 06:26:03 -0000\r\nX-Received: from unknown (HELO mail-px0-f196.google.com) (209.85.216.196)\n  by mta3.grp.sp2.yahoo.com with SMTP; 26 Feb 2010 06:26:03 -0000\r\nX-Received: by pxi34 with SMTP id 34so412000pxi.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 25 Feb 2010 22:26:03 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.141.2.10 with SMTP id e10mr349916rvi.158.1267165563309; Thu, \n\t25 Feb 2010 22:26:03 -0800 (PST)\r\nIn-Reply-To: &lt;55195.76060.qm@...&gt;\r\nReferences: &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\n\t &lt;55195.76060.qm@...&gt;\r\nDate: Fri, 26 Feb 2010 07:26:03 +0100\r\nMessage-ID: &lt;d11603861002252226j64b8d342iffdda4e6d8683390@...&gt;\r\nTo: Kevin Duffey &lt;andjarnic@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd113b445cfdc04807af9f0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=223135631; y=M82HD7h_FyVAadI6ZRJdO4MaXeO1-HZ2ilrzV45w_7xCvKQBrnIE-IMPjw\r\nX-Yahoo-Profile: felipegaucho2003\r\n\r\n\r\n--000e0cd113b445cfdc04807af9f0\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThere is only 1 drawback in your solution: JAXB unfortunately doesn&#39;t allow=\r\n\nyou to add extra annotations in the generated files, so you need to manual=\r\nly\nmanage the ORM.. Despite that there is a large community that believes t=\r\nhat\nisolating domain model from business model is a better approach than mi=\r\nx\nthem together.. (a long Java Design Patterns discussion I will avoid here=\r\n)\n\nOne alternative is to use the package-info file to manage the namespaces=\r\n and\ndo annotate the model classes directly.. it is more programmatic appro=\r\nach\nbut you preserve the namespaces as well... and then you can annotate th=\r\ne\nclasses also as Entities and you get the DB roundtrip for free.. and Jers=\r\ney\n+ CDI com inject the EntityManager in your service layer if you want... =\r\nand\nit scales like hell :) eheh\n\n\nthe problem still remains: how to control=\r\n the hypermedia workflow.. I&#39;ve\nseen people adopting custom annotations and=\r\n several other tricks but so far\na stable solution didn&#39;t emerged ... we ar=\r\ne waiting your best thoughts :)\n\n\n\n\nOn Fri, Feb 26, 2010 at 3:33 AM, Kevin =\r\nDuffey &lt;andjarnic@...&gt; wrote:\n\n&gt;\n&gt;\n&gt;\n&gt; Maybe I am doing this wrong, b=\r\nut what I do is usually I put my JAXB\n&gt; generated XSD model objects in a se=\r\nparate project. I then build this jar and\n&gt; copy it to my web-inf/lib of my=\r\n REST/ejb based application. I use the JAXB\n&gt; model objects in my Jersey re=\r\nsources, as well as in my session beans to\n&gt; convert from the JAXB bean to =\r\nthe entity bean. There is probably an easier\n&gt; way to do this, but presentl=\r\ny I simply do a eb.setXxx(jb.getXxx()) method\n&gt; for each item I wish to cop=\r\ny to the entity, or from it when going back the\n&gt; other way. JEE6 makes thi=\r\ns a breeze to work with.\n&gt;\n&gt; I&#39;ve not yet looked into the ramifications of =\r\nscaling, caching, etc.. I am\n&gt; hoping that the EE6 containers do a lot of t=\r\nhis for me for free these days.\n&gt; Being stateless in the session bean and R=\r\nEST service, and only the entity\n&gt; persists when required, I would hope tha=\r\nt I should be able to scale quite\n&gt; rapidly and easily, the back end DB bei=\r\nng the most difficult probably to\n&gt; deal with.\n&gt;\n&gt; --- On *Thu, 2/25/10, Cr=\r\naig McClanahan &lt;craigmcc@...&gt;* wrote:\n&gt;\n&gt;\n&gt; From: Craig McClanahan &lt;c=\r\nraigmcc@...&gt;\n&gt; Subject: Re: [rest-discuss] Differentiating HTTP-based=\r\n APIs\n&gt; To: &quot;Jan Algermissen&quot; &lt;algermissen1971@...&gt;\n&gt; Cc: &quot;Felipe Gauch=\r\no&quot; &lt;fgaucho@...&gt;, &quot;REST Discuss&quot; &lt;\n&gt; rest-discuss@yahoogroups.com&gt;\n&gt; =\r\nDate: Thursday, February 25, 2010, 11:37 AM\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Thu, Feb 25, 2010 =\r\nat 9:12 AM, Jan Algermissen\n&gt; &lt;algermissen1971@ mac.com &lt;http://mc/compose?=\r\nto=3Dalgermissen1971%40mac.com&gt;&gt;\n&gt; wrote:\n&gt; &gt;\n&gt; &gt; On Feb 25, 2010, at 5:50 =\r\nPM, Felipe Gaucho wrote:\n&gt; &gt;\n&gt; &gt;&gt; You can use jaxb and use xml and get a re=\r\nstful service...\n&gt; &gt;&gt; There is no mandatory link between these technologies=\r\n and &quot;non-rest&quot;\n&gt; style...\n&gt; &gt;\n&gt; &gt; Right, sorry to imply that. OTH, there w=\r\nill often be no 1:1 mapping\n&gt; between domain object (that&#39;s how I understoo=\r\nd POJO) so if you use JAXB on\n&gt; your POJO you&#39;ll rather have a serialized d=\r\nomain object than &#39;resource\n&gt; representation&#39;\n&gt; &gt;\n&gt;\n&gt; When using JAX-RS, I&#39;=\r\nm finding myself more and more often building a\n&gt; set of JAXB annotated cla=\r\nsses that directly represent my resources,\n&gt; separate from the classes that=\r\n might represent my domain tier (with,\n&gt; perhaps, JPA or Hibernate annotati=\r\nons on them). Besides the fact that\n&gt; this means I don&#39;t have to write all =\r\nof the boring serialization code,\n&gt; it has some other benefits:\n&gt;\n&gt; - Both =\r\nXML and JSON serialization, nearly for free.\n&gt;\n&gt; - Ability to include prope=\r\nrties for however I&#39;m going to represent\n&gt; links (which don&#39;t belong in the=\r\n domain model at all).\n&gt;\n&gt; - Ability to include properties for related reso=\r\nurces (either individual\n&gt; child beans or collections of them), for which J=\r\nAXB does a\n&gt; slick job of including as nested sub-elements, versus\n&gt; entity=\r\n beans that are typically associated with only one table.\n&gt;\n&gt; - Ability to =\r\nwrite business logic that is natural to Java\n&gt; developers used to beans ori=\r\nented development,\n&gt; independent of the fact that this resource was receive=\r\nd\n&gt; (or will be sent) across some HTTP or other transport.\n&gt;\n&gt; - Ablity to =\r\nwrite much better unit and functional tests that can\n&gt; reason about the res=\r\nource model (independent of how the\n&gt; resources got received from a client =\r\nor synthesized from my\n&gt; database domain objects), with all the usual\n&gt; ben=\r\nefits of a strongly typed language (versus using\n&gt; XPath or poking through =\r\nsome JSON data structure\n&gt; with string based keys and hoping I spelled the =\r\nkeys right).\n&gt;\n&gt; It&#39;s good stuff for Java developers.\n&gt;\n&gt; Craig\n&gt;\n&gt;\n&gt;  \n&gt;\n\n=\r\n\n\n-- \n------------------------------------------\n  Felipe Ga=FAcho\n  10+ Ja=\r\nva Programmer\n  CEJUG Senior Advisor\n\r\n--000e0cd113b445cfdc04807af9f0\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThere is only 1 drawback in your solution: JAXB unfortunately doesn&#39;t a=\r\nllow you to add extra annotations in the generated files, so you need to ma=\r\nnually manage the ORM.. Despite that there is a large community that believ=\r\nes that isolating domain model from business model is a better approach tha=\r\nn mix them together.. (a long Java Design Patterns discussion I will avoid =\r\nhere)&lt;br&gt;\n&lt;br&gt;One alternative is to use the package-info file to manage the=\r\n namespaces and do annotate the model classes directly.. it is more program=\r\nmatic approach but you preserve the namespaces as well... and then you can =\r\nannotate the classes also as Entities and you get the DB roundtrip for free=\r\n.. and Jersey + CDI com inject the EntityManager in your service layer if y=\r\nou want... and it scales like hell :) eheh&lt;br&gt;\n&lt;br&gt;&lt;br&gt;the problem still re=\r\nmains: how to control the hypermedia workflow.. I&#39;ve seen people adopti=\r\nng custom annotations and several other tricks but so far a stable solution=\r\n didn&#39;t emerged ... we are waiting your best thoughts :)&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;b=\r\nr&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Feb 26, 2010 at 3:33 AM, Kevin Duf=\r\nfey &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:andjarnic@...&quot;&gt;andjarnic@=\r\nyahoo.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; p=\r\nadding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, =\r\n255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n   =\r\n   &lt;p&gt;&lt;/p&gt;&lt;table border=3D&quot;0&quot; cellpadding=3D&quot;0&quot; cellspacing=3D&quot;0&quot;&gt;&lt;tbody&gt;&lt;t=\r\nr&gt;&lt;td style=3D&quot;font-family: inherit; font-style: inherit; font-variant: inh=\r\nerit; font-weight: inherit; font-size: inherit; line-height: inherit; font-=\r\nsize-adjust: inherit; font-stretch: inherit;&quot; valign=3D&quot;top&quot;&gt;\n&lt;br&gt;Maybe I a=\r\nm doing this wrong, but what I do is usually I put my JAXB generated XSD mo=\r\ndel objects in a separate project. I then build this jar and copy it to my =\r\nweb-inf/lib of my REST/ejb based application. I use the JAXB model objects =\r\nin my Jersey resources, as well as in my session beans to convert from the =\r\nJAXB bean to the entity bean. There is probably an easier way to do this, b=\r\nut presently I simply do a eb.setXxx(jb.getXxx()) method for each item I wi=\r\nsh to copy to the entity, or from it when going back the other way. JEE6 ma=\r\nkes this a breeze to work with.&lt;br&gt;\n&lt;br&gt;I&#39;ve not yet looked into the ra=\r\nmifications of scaling, caching, etc.. I am hoping that the EE6 containers =\r\ndo a lot of this for me for free these days. Being stateless in the session=\r\n bean and REST service, and only the entity persists when required, I would=\r\n hope that I should be able to scale\n quite rapidly and easily, the back en=\r\nd DB being the most difficult probably to deal with.&lt;br&gt;&lt;br&gt;--- On &lt;b&gt;Thu, =\r\n2/25/10, Craig McClanahan &lt;i&gt;&lt;&lt;a href=3D&quot;mailto:craigmcc@...&quot; targ=\r\net=3D&quot;_blank&quot;&gt;craigmcc@...&lt;/a&gt;&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;\n&lt;blockquote sty=\r\nle=3D&quot;border-left: 2px solid rgb(16, 16, 255);&quot;&gt;&lt;br&gt;From: Craig McClanahan =\r\n&lt;&lt;a href=3D&quot;mailto:craigmcc@...&quot; target=3D&quot;_blank&quot;&gt;craigmcc@gmail.=\r\ncom&lt;/a&gt;&gt;&lt;br&gt;Subject: Re: [rest-discuss] Differentiating HTTP-based APIs&lt;=\r\nbr&gt;\nTo: &quot;Jan Algermissen&quot; &lt;&lt;a href=3D&quot;mailto:algermissen1971@m=\r\nac.com&quot; target=3D&quot;_blank&quot;&gt;algermissen1971@...&lt;/a&gt;&gt;&lt;br&gt;Cc: &quot;Feli=\r\npe Gaucho&quot; &lt;&lt;a href=3D&quot;mailto:fgaucho@...&quot; target=3D&quot;_blank&quot;&gt;=\r\nfgaucho@...&lt;/a&gt;&gt;, &quot;REST Discuss&quot; &lt;&lt;a href=3D&quot;mailto:r=\r\nest-discuss@yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com=\r\n&lt;/a&gt;&gt;&lt;br&gt;\nDate: Thursday, February 25, 2010, 11:37 AM&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;di=\r\nv class=3D&quot;h5&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&gt;\n\n\n\n\n\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n\n    &lt;div&gt;\n      \n    =\r\n  \n      &lt;p&gt;On Thu, Feb 25, 2010 at 9:12 AM, Jan Algermissen&lt;br&gt;\n&lt;&lt;a rel=\r\n=3D&quot;nofollow&quot; href=3D&quot;http://mc/compose?to=3Dalgermissen1971%40mac.com&quot; tar=\r\nget=3D&quot;_blank&quot;&gt;algermissen1971@ mac.com&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; On=\r\n Feb 25, 2010, at 5:50 PM, Felipe Gaucho wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&gt; You c=\r\nan use jaxb and use xml and get a restful service...&lt;br&gt;\n&gt;&gt; There is =\r\nno mandatory link between these technologies and &quot;non-rest&quot; style=\r\n...&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Right, sorry to imply that. OTH, there will often be =\r\nno 1:1 mapping between domain object (that&#39;s how I understood POJO) so =\r\nif you use JAXB on your POJO you&#39;ll rather have a serialized domain obj=\r\nect than &#39;resource representation&#39;&lt;br&gt;\n\n&gt;&lt;br&gt;\n&lt;br&gt;\nWhen using JA=\r\nX-RS, I&#39;m finding myself more and more often building a&lt;br&gt;\nset of JAXB=\r\n annotated classes that directly represent my resources,&lt;br&gt;\nseparate from =\r\nthe classes that might represent my domain tier (with,&lt;br&gt;\nperhaps, JPA or =\r\nHibernate annotations on them).  Besides the fact that&lt;br&gt;\nthis means I don=\r\n&#39;t have to write all of the boring serialization code,&lt;br&gt;\nit has some =\r\nother benefits:&lt;br&gt;\n&lt;br&gt;\n- Both XML and JSON serialization, nearly for free=\r\n.&lt;br&gt;\n&lt;br&gt;\n- Ability to include properties for however I&#39;m going to rep=\r\nresent&lt;br&gt;\n  links (which don&#39;t belong in the domain model at all).&lt;br&gt;=\r\n\n&lt;br&gt;\n- Ability to include properties for related resources (either individ=\r\nual&lt;br&gt;\n  child beans or collections of them), for which JAXB does a&lt;br&gt;\n  =\r\nslick job of including as nested sub-elements, versus&lt;br&gt;\n  entity beans th=\r\nat are typically associated with only one table.&lt;br&gt;\n&lt;br&gt;\n- Ability to writ=\r\ne business logic that is natural to Java&lt;br&gt;\n  developers used to beans ori=\r\nented development,&lt;br&gt;\n  independent of the fact that this resource was rec=\r\neived&lt;br&gt;\n  (or will be sent) across some HTTP or other transport.&lt;br&gt;\n&lt;br&gt;=\r\n\n- Ablity to write much better unit and functional tests that can&lt;br&gt;\n  rea=\r\nson about the resource model (independent of how the&lt;br&gt;\n  resources got re=\r\nceived from a client or synthesized from my&lt;br&gt;\n  database domain objects),=\r\n with all the usual&lt;br&gt;\n  benefits of a strongly typed language (versus usi=\r\nng&lt;br&gt;\n  XPath or poking through some JSON data structure&lt;br&gt;\n  with string=\r\n based keys and hoping I spelled the keys right).&lt;br&gt;\n&lt;br&gt;\nIt&#39;s good st=\r\nuff for Java developers.&lt;br&gt;\n&lt;br&gt;\nCraig&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n\n\n \n\n\n&lt;=\r\n/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;\n\n\n\n      \n\n   =\r\n &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color: rgb(255, 255, 255); min-height=\r\n: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all=\r\n&quot;&gt;&lt;br&gt;-- &lt;br&gt;------------------------------------------&lt;br&gt; =A0 Felipe Ga=\r\n=FAcho&lt;br&gt; =A0 10+ Java Programmer&lt;br&gt; =A0 CEJUG Senior Advisor&lt;br&gt;&lt;br&gt;\n\r\n--000e0cd113b445cfdc04807af9f0--\r\n\n"}}