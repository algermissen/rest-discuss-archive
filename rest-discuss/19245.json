{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"JÃ¸rn Wildt","from":"=?ISO-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"4KQRr4yZO5UTQkefe3BFphjSaXJgBYJIIKbcj1eUvIp8I2La_IWByUHylgJEJJO72CuBWavscGpvAenhkIbQ-La67MEoceFAnzOjHnthDVhS4H7Xpnm8B78","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] API versioning","postDate":"1357632233","msgId":19245,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBTGgteWtKR1JnaHhOR3k3UlozMD1QSmtZRm5najB4VWNUc1ZwTXpGLXFnWU9Qc0tlUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGtjZm1jMCthb2lkQGVHcm91cHMuY29tPgk8MjAxMzAxMDcyMDM3MTkuNWJhM2ZkZDIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8OUQ5NDUyQjAtQ0I1Qi00QkY3LThGMTgtRTEwRjZCNUZBNEI1QGdtYWlsLmNvbT4JPDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":19244,"nextInTopic":19246,"prevInTime":19244,"nextInTime":19246,"topicId":19240,"numMessagesInTopic":13,"msgSnippet":"Hi Eric ... wire, so I ve never understood why this solution is so prevalent in REST discussions. Just media types, which are agnostic as to what type of ","rawEmail":"Return-Path: &lt;jornwildt@...&gt;\r\nX-Sender: jornwildt@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1229 invoked from network); 8 Jan 2013 08:03:55 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m7.grp.sp2.yahoo.com with QMQP; 8 Jan 2013 08:03:55 -0000\r\nX-Received: from unknown (HELO mail-ia0-f182.google.com) (209.85.210.182)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Jan 2013 08:03:53 -0000\r\nX-Received: by mail-ia0-f182.google.com with SMTP id x2so92512iad.41\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 08 Jan 2013 00:03:53 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.50.33.147 with SMTP id r19mr8257670igi.73.1357632233155;\n Tue, 08 Jan 2013 00:03:53 -0800 (PST)\r\nX-Received: by 10.43.132.131 with HTTP; Tue, 8 Jan 2013 00:03:53 -0800 (PST)\r\nIn-Reply-To: &lt;20130107225713.3b1ff58c.eric@...&gt;\r\nReferences: &lt;kcfmc0+aoid@...&gt;\n\t&lt;20130107203719.5ba3fdd2.eric@...&gt;\n\t&lt;9D9452B0-CB5B-4BF7-8F18-E10F6B5FA4B5@...&gt;\n\t&lt;20130107225713.3b1ff58c.eric@...&gt;\r\nDate: Tue, 8 Jan 2013 09:03:53 +0100\r\nX-Google-Sender-Auth: cwwXM6im5mmFf5tlwWbgM5l6kBw\r\nMessage-ID: &lt;CALh-ykJGRghxNGy7RZ30=PJkYFngj0xUcTsVpMzF-qgYOPsKeQ@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Keith Hassen &lt;keith.hassen@...&gt;, \n\tRest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=f46d04462ec8fe2d4b04d2c26263\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nSubject: Re: [rest-discuss] API versioning\r\nX-Yahoo-Group-Post: member; u=242972596; y=3Z69_V6GHgPFU9c91AeA_mjfTeYU0r7UVRiWQVMPLNsEf-SWdiZ1A2dWN4U\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\n\r\n--f46d04462ec8fe2d4b04d2c26263\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Eric\n\n&gt; REST has no notion of resource &quot;type&quot; let alone of exposing same=\r\n on the\nwire, so I&#39;ve never understood why this solution is so prevalent in=\r\n REST\ndiscussions. Just media types, which are agnostic as to what &quot;type&quot; o=\r\nf\nresource is being represented (with rare exceptions as parameters).\n\nI re=\r\nmember your stance on this from previous discussions. And, yes, a\n&quot;sales or=\r\nder&quot; or what ever other &quot;type&quot; you need can certainly be\nrepresented as (X)=\r\nHTML. Sure, I am in no way questioning that.\n\nMy question is though - from =\r\nwhere does the client get the information it\nneeds to extract, say, the ord=\r\ner sum, delivery address, order lines\nquantity and so on from the generic p=\r\nayload?\n\nLet me expand with an example:\n\n- A client of mine sends me a link=\r\n to a sales order and I want to import\nthat into my local ERP system.\n\n- If=\r\n the sales order is only available in (X)HTML, JSON or similar generic\nmedi=\r\na type, how would I then be able to understand the content in enough\ndetail=\r\n to import it?\n\n- If the sales order was available in ATOM, I could at leas=\r\nt import it as a\ndocument having a title and some content. But, okay, you c=\r\nan do that with\n(X)HTML too - albeit not with JSON and XML.\n\n- If the sales=\r\n order was available in an even more domain specific media\ntype, I could do=\r\n an even better import of data.\n\n- ... and so on for various levels of doma=\r\nin specific media types ...\n\nHaving a domain specific media type does altho=\r\nugh not imply any specific\n&quot;type&quot; of the resource itself - it only says &quot;th=\r\nis particular resource can\n(also) be represented as XXX&quot; - where XXX is an =\r\nofficial application\nspecific media type, for instance vCard or vCal which =\r\nwould allow the\nclient to derive contact and calendar information from a re=\r\nsource - without\nmaking *any* kind of assumption about the underlying &quot;type=\r\n&quot; of the it.\n\nActually, I would argue that a generic media type is more &quot;ty=\r\nped&quot; than a\ndomain specific media type. Okay, that sounds like rubbish, I k=\r\nnow - but\nlet me explain:\n\n- as I stated above, a domain specific media typ=\r\ne lets you derived useful\ninformation from a resource without making any as=\r\nsumptions about its\nunderlying type.\n\n- whereas a generic media type forces=\r\n the client to magically assume the\nresource has a specific type with speci=\r\nfic properties you can extract from\nthe generic payload.\n\nWell, that is my =\r\ncurrent view on this issue ... and I have been swinging\nback and forth betw=\r\neen your viewpoint and the above viewpoint during the\nlast couple of years =\r\n:-) Still open for new inputs!\n\nThanks, J=F8rn\n\n\nOn Tue, Jan 8, 2013 at 6:5=\r\n7 AM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt; Keith Hassen=\r\n wrote:\n&gt; &gt;\n&gt; &gt; This seems to be a recommended practice that I&#39;ve encounter=\r\ned in\n&gt; &gt; reading about RESTful implementations.\n&gt; &gt;\n&gt;\n&gt; Perfectly good HTT=\r\nP API practice; REST, not so much. The point of\n&gt; media types is to provide=\r\n loose coupling based on shared understanding\n&gt; of how the representation i=\r\ns to be decoded. Not tight coupling based\n&gt; on interpreting the content of =\r\nthe representation. I&#39;ve never seen an\n&gt; order API that couldn&#39;t be represe=\r\nnted as HTML; despite any number of\n&gt; variations on this theme (or versions=\r\n within), the media type doesn&#39;t\n&gt; vary between more order APIs on the Web =\r\nthan I can count.\n&gt;\n&gt; REST has no notion of resource &quot;type&quot; let alone of ex=\r\nposing same on the\n&gt; wire, so I&#39;ve never understood why this solution is so=\r\n prevalent in REST\n&gt; discussions. Just media types, which are agnostic as t=\r\no what &quot;type&quot; of\n&gt; resource is being represented (with rare exceptions as p=\r\narameters).\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; &gt; Anything else is up to the user-agent to work out=\r\n. This is actually\n&gt; &gt; &gt; easier for m2m than h2m; a v1 m2m client should al=\r\nready ignore any\n&gt; &gt; &gt; hypertext it doesn&#39;t understand, rolling out v2 can =\r\nthen re-use any\n&gt; &gt; &gt; non-deprecated bits of the API already present plus t=\r\nhe new stuff,\n&gt; &gt; &gt; and ignore the deprecated stuff. Can&#39;t it?\n&gt; &gt;\n&gt; &gt; Not =\r\nalways, at least not in my experience. :) I have found that\n&gt; &gt; while break=\r\ning changes don&#39;t happen often, they *do* happen. Add to\n&gt; &gt; this the possi=\r\nbility of different types of API consumers that start\n&gt; &gt; off implementing =\r\nyour APIs the same way, but slowly (or rapidly!)\n&gt; &gt; diverge over time. In =\r\nsome cases new resources (and thus new URIs)\n&gt; &gt; will suffice, but in other=\r\n cases what we are doing is very\n&gt; &gt; specifically *evolving* the resource r=\r\nepresentation to accommodate\n&gt; &gt; new requirements.\n&gt; &gt;\n&gt;\n&gt; Then design for =\r\ngraceful degradation (or progressive enhancement) using\n&gt; client-side featu=\r\nre detection. Just saying there&#39;s no need to swing\n&gt; the conneg hammer to t=\r\nurn this particular screw.\n&gt;\n&gt; -Eric\n&gt;\n&gt;  \n&gt;\n\r\n--f46d04462ec8fe2d4b04d2c26263\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;Hi Eric&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=\r\n=3D&quot;im&quot;&gt;&gt; REST has no notion of resource &quot;type&quot; let alone of e=\r\nxposing same on the&lt;br&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;\nwire, so I&#39;ve never =\r\nunderstood why this solution is so prevalent in REST&lt;br&gt;\ndiscussions.  Just=\r\n media types, which are agnostic as to what &quot;type&quot; of&lt;br&gt;\nresourc=\r\ne is being represented (with rare exceptions as parameters).&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;=\r\n/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;I\n remember your stance on this from previo=\r\nus discussions. And, yes, a \n&quot;sales order&quot; or what ever other &qu=\r\not;type&quot; you need can certainly be \nrepresented as (X)HTML. Sure, I am=\r\n in no way questioning that.&lt;br&gt;\n&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;My \nquestion is though - from where does the cl=\r\nient get the information it \nneeds to extract, say, the order sum, delivery=\r\n address, order lines \nquantity and so on from the generic payload?&lt;br&gt;\n&lt;br=\r\n&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;Let me expand with an example:&lt;br&gt;&lt;br&gt;&lt;/d=\r\niv&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;- A client of mine sends me a link to a sales=\r\n order and I want to import that into my local ERP system.&lt;br&gt;&lt;br&gt;&lt;/div&gt;\n\n&lt;=\r\ndiv class=3D&quot;gmail_extra&quot;&gt;- If the sales order is only available in \n(X)HTM=\r\nL, JSON or similar generic media type, how would I then be able to\n underst=\r\nand the content in enough detail to import it?&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail=\r\n_extra&quot;&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;- If the sales order was avai=\r\nlable in\n ATOM, I could at least import it as a document having a title and=\r\n some \ncontent. But, okay, you can do that with (X)HTML too - albeit not wi=\r\nth \nJSON and XML.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;- If the sales o=\r\nrder was available in an even more domain specific media type, I could do a=\r\nn even better import of data.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;- ...=\r\n and so on for various levels of domain specific media types ...&lt;br&gt;\n\n&lt;br&gt;&lt;=\r\n/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;Having a domain specific media type \ndoes a=\r\nlthough not imply any specific &quot;type&quot; of the resource itself - it=\r\n \nonly says &quot;this particular resource can (also) be represented as XXX=\r\n&quot; - \nwhere XXX is an official application specific media type, for ins=\r\ntance \nvCard or vCal which would allow the client to derive contact and \nca=\r\nlendar information from a resource - without making *any* kind of \nassumpti=\r\non about the underlying &quot;type&quot; of the it.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div clas=\r\ns=3D&quot;gmail_extra&quot;&gt;Actually, I would argue that a \ngeneric media type is mor=\r\ne &quot;typed&quot; than a domain specific media type. \nOkay, that sounds l=\r\nike rubbish, I know - but let me explain: &lt;br&gt;&lt;br&gt;- \nas I stated above, a d=\r\nomain specific media type lets you derived useful \ninformation from a resou=\r\nrce without making any assumptions about its \nunderlying type.&lt;br&gt;\n&lt;br&gt;&lt;/di=\r\nv&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;- whereas a generic media type forces\n the cli=\r\nent to magically assume the resource has a specific type with \nspecific pro=\r\nperties you can extract from the generic payload.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=\r\n=3D&quot;gmail_extra&quot;&gt;\nWell, that is my current view on this issue ... and I hav=\r\ne been swinging\n back and forth between your viewpoint and the above viewpo=\r\nint during \nthe last couple of years :-) Still open for new inputs!&lt;br&gt;&lt;/di=\r\nv&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;\n&lt;br&gt;&lt;/div&gt;Thanks, J=F8rn&lt;/div&gt;&lt;div class=3D&quot;g=\r\nmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Jan 8, 2013 at 6:57 =\r\nAM, Eric J. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@bisonsystem=\r\ns.net&quot; target=3D&quot;_blank&quot;&gt;eric@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;b=\r\nlockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px =\r\n#ccc solid;padding-left:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=A0&lt;/sp=\r\nan&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div class=3D&quot;im=\r\n&quot;&gt;Keith Hassen wrote:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; This seems to be a recommended pra=\r\nctice that I&#39;ve encountered in&lt;br&gt;\n&gt; reading about RESTful implement=\r\nations.&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nPerfectly good HTTP API practice; REST, no=\r\nt so much.  The point of&lt;br&gt;\nmedia types is to provide loose coupling based=\r\n on shared understanding&lt;br&gt;\nof how the representation is to be decoded.  N=\r\not tight coupling based&lt;br&gt;\non interpreting the content of the representati=\r\non.  I&#39;ve never seen an&lt;br&gt;\norder API that couldn&#39;t be represented =\r\nas HTML; despite any number of&lt;br&gt;\nvariations on this theme (or versions wi=\r\nthin), the media type doesn&#39;t&lt;br&gt;\nvary between more order APIs on the W=\r\neb than I can count.&lt;br&gt;\n&lt;br&gt;\nREST has no notion of resource &quot;type&quo=\r\nt; let alone of exposing same on the&lt;br&gt;\nwire, so I&#39;ve never understood=\r\n why this solution is so prevalent in REST&lt;br&gt;\ndiscussions.  Just media typ=\r\nes, which are agnostic as to what &quot;type&quot; of&lt;br&gt;\nresource is being=\r\n represented (with rare exceptions as parameters).&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;b=\r\nr&gt;\n&gt;&lt;br&gt;\n&gt; &gt; Anything else is up to the user-agent to work out.  T=\r\nhis is actually&lt;br&gt;\n&gt; &gt; easier for m2m than h2m; a v1 m2m client shou=\r\nld already ignore any&lt;br&gt;\n&gt; &gt; hypertext it doesn&#39;t understand, ro=\r\nlling out v2 can then re-use any&lt;br&gt;\n&gt; &gt; non-deprecated bits of the A=\r\nPI already present plus the new stuff,&lt;br&gt;\n&gt; &gt; and ignore the depreca=\r\nted stuff.  Can&#39;t it?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Not always, at least not in my=\r\n experience. :)  I have found that&lt;br&gt;\n&gt; while breaking changes don&#39;=\r\nt happen often, they *do* happen.  Add to&lt;br&gt;\n&gt; this the possibility of =\r\ndifferent types of API consumers that start&lt;br&gt;\n&gt; off implementing your =\r\nAPIs the same way, but slowly (or rapidly!)&lt;br&gt;\n&gt; diverge over time.  In=\r\n some cases new resources (and thus new URIs)&lt;br&gt;\n&gt; will suffice, but in=\r\n other cases what we are doing is very&lt;br&gt;\n&gt; specifically *evolving* the=\r\n resource representation to accommodate&lt;br&gt;\n&gt; new requirements.&lt;br&gt;\n&gt;=\r\n &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nThen design for graceful degradation (or progressive enhan=\r\ncement) using&lt;br&gt;\nclient-side feature detection.  Just saying there&#39;s n=\r\no need to swing&lt;br&gt;\nthe conneg hammer to turn this particular screw.&lt;br&gt;\n&lt;b=\r\nr&gt;\n-Eric&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;m=\r\nin-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--f46d04462ec8fe2d4b04d2c26263--\r\n\n"}}