{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"yfXEM8sF1nuU-WLEKAOT19JTkmZUp1quZ3P8XGjtCxSAskH489JhyH5kEckMwRnuySHL3bIK_-zRsF8m45hv1-UJaMM0bE6jgyFdodJmtA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Google proposes RPC style APIs over REST","postDate":"1280497504","msgId":16033,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNzMwMDc0NTA0LmIyZDFmOWMzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwNzMwMDU0MjExLmZmMGY3ZTlhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGkydGhyditzZjd0QGVHcm91cHMuY29tPgk8MjAxMDA3MzAwMzA5NDIuZmQyZTE0MjAuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjAxMDA3MzAwNDI2MzIuOGM5OTBlOGEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjAxMDA3MzAwNTQyMTEuZmYwZjdlOWEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":16031,"nextInTopic":16036,"prevInTime":16032,"nextInTime":16034,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"... What if we don t want to transfer a representation of image.jpg to the client, or back to the server?  No problem.  HEAD /image.jpg?rot=90 to get the Etag","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74735 invoked from network); 30 Jul 2010 13:45:43 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m14.grp.re1.yahoo.com with QMQP; 30 Jul 2010 13:45:43 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 30 Jul 2010 13:45:43 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 2E105509DA;\n\tFri, 30 Jul 2010 09:45:42 -0400 (EDT)\r\nDate: Fri, 30 Jul 2010 07:45:04 -0600\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: &quot;Suresh&quot; &lt;sureshkk@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100730074504.b2d1f9c3.eric@...&gt;\r\nIn-Reply-To: &lt;20100730054211.ff0f7e9a.eric@...&gt;\r\nReferences: &lt;i2thrv+sf7t@...&gt;\n\t&lt;20100730030942.fd2e1420.eric@...&gt;\n\t&lt;20100730042632.8c990e8a.eric@...&gt;\n\t&lt;20100730054211.ff0f7e9a.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt; \n&gt; I made this too hard.  Forget the first GET.  The conditional PUT uses\n&gt; if-none-match the Etag of /image.jpg?rot=90.  Makes the hypertext API\n&gt; even easier to write.\n&gt; \n\nWhat if we don&#39;t want to transfer a representation of image.jpg to the\nclient, or back to the server?  No problem.  HEAD /image.jpg?rot=90 to\nget the Etag (or GET), followed by a conditional POST to /image.jpg of a\nrepresentation of the desired application state as application/x-www-\nform-urlencoded, i.e. POST /image.jpg?rot=90 if-none-match Etag.\n\nWhile this may technically solve the lost-update problem, without\nactually transferring the image, how does the user (human or machine)\nknow the image hasn&#39;t already been rotated by 90 degrees?  If what\nGoogle meant to call awkward wasn&#39;t the notion of the client doing the\nrotation, but the notion that the image needs to be transferred to the\nclient at all, then I don&#39;t see any way around it -- without viewing\nthe image, how would a human or machine user know that it needs\nrotation, or by how many degrees?\n\nSo my HEAD-conditional POST solution is only RESTful in situations\nwhere the user goal is to rotate an image regardless of current\norientation.  Whereas this is the only use-case Google&#39;s RPC supports,\nwithout solving for lost-update, making it brittle even where lost-\nupdate isn&#39;t a problem:  Google&#39;s way, if the confirmation of the POST\nis lost and the operation repeated as a result, the rotation is 180\ndegrees not 90.  My way, prevents this by properly identifying\nresources (for starters) and using conditional requests.  Not brittle.\n\nThere is nothing unRESTful about POST /image.jpg?rot=90 being\ninterpreted by the server to mean &quot;rotate image.jpg 90 degrees&quot; unless\nsuch an operation isn&#39;t hypertext-driven, and provided the media type is\napplication/x-www-form-urlencoded.  In which case &quot;rot&quot; is not a &quot;verb&quot;,\nit is a noun identifying a stored procedure (regardless of HTTP method).\n\nGoogle&#39;s POST, by way of comparison, is not a transfer of a \nrepresentation of the desired resource state.  It&#39;s RPC.  I couldn&#39;t\nmake this argument if Google allowed GET on the same URI -- this is the\ndifference between identification of resources (regardless of how sloppy\nthe URIs) and custom verbs tunneled over POST.\n\n-Eric\n\n"}}