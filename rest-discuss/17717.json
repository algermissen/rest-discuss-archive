{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"bryan_w_taylor","from":"&quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"uHKgLhpbzerulfZYm47n4ck8k4T0f5WSaK5gQenH-S3UAq2NdYMUmAw7iyqiHOspI6Th5DiqDML-3SBv2-jJjGLA_wIIaDE1dnbYQYvSPVWSiw","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: User dependent Resources","postDate":"1315208458","msgId":17717,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGo0MXVlYSs0c2xhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PENBUFdfOG01M3pzY2dKZVZEOGt3SnF4RE56TXlTQy1hZWdSUms5eDRFbnRHMkdFRDdiUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17716,"nextInTopic":17719,"prevInTime":17716,"nextInTime":17718,"topicId":17714,"numMessagesInTopic":12,"msgSnippet":"Great breakdown. My situation doesn t lend itself to code on demand, unfortunately. I like idea #3 of /my-tasks just being a local composition with the right","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 89284 invoked from network); 5 Sep 2011 07:40:59 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m4.grp.sp2.yahoo.com with QMQP; 5 Sep 2011 07:40:59 -0000\r\nX-Received: from unknown (HELO n5-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.101)\n  by mta4.grp.sp2.yahoo.com with SMTP; 5 Sep 2011 07:40:59 -0000\r\nX-Received: from [67.195.134.48] by n5.bullet.mail.sp2.yahoo.com with NNFMP; 05 Sep 2011 07:40:58 -0000\r\nX-Received: from [69.147.65.149] by t1.bullet.mail.sp2.yahoo.com with NNFMP; 05 Sep 2011 07:40:58 -0000\r\nX-Received: from [98.137.34.34] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 05 Sep 2011 07:40:58 -0000\r\nDate: Mon, 05 Sep 2011 07:40:58 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;j41uea+4sla@...&gt;\r\nIn-Reply-To: &lt;CAPW_8m53zscgJeVD8kwJqxDNzMySC-aegRRk9x4EntG2GED7bQ@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: User dependent Resources\r\nX-Yahoo-Group-Post: member; u=119533972; y=qbQiEp4t_ia5q2agWPnqN-Zrqswnof6W2yTUAA02ypzzjPIq1SX1B60\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\nGreat breakdown. My situation doesn&#39;t lend itself to code on demand, unfort=\r\nunately.\n\nI like idea #3 of /my-tasks just being a local composition with t=\r\nhe right Vary header. I don&#39;t have a problem if the URI doesn&#39;t identify th=\r\ne representation. A URI should identify the resource, not the representatio=\r\nn. I don&#39;t see this as any different than /blogs/latest . The representatio=\r\nn for /my-tasks could do a link with rel=3Dbookmark to /tasks/joe if you ne=\r\ned a permalink. \n\n\n--- In rest-discuss@yahoogroups.com, mike amundsen &lt;mamu=\r\nnd@...&gt; wrote:\n&gt;\n&gt; As I mentioned in the post, in option #3, the URI no lon=\r\nger accurately\n&gt; identifies the resource representation. The same URI now r=\r\neturns multiple\n&gt; resource representations. This is the only example I supp=\r\nlied where this is\n&gt; true.\n&gt; \n&gt; &quot;- to be able to protect the resources, reg=\r\nardless of what the user in the\n&gt; uri is, you&#39;d have to have the standard a=\r\nuthentication mechanisms cookies,\n&gt; headers etc.&quot;\n&gt; While this is correct, =\r\nthere is no requirement that this standard\n&gt; authentication data MUST be us=\r\ned to override the URI of a request to alter\n&gt; the response representation.=\r\n I prefer to keep authentication\n&gt; details orthogonal to the resource ident=\r\nifer; my use of the characters &quot;joe&quot;\n&gt; to not at all assume that a user&#39;s l=\r\nog in data includes the characters &quot;joe&quot;\n&gt; (i.e. &quot;joe&quot; need not be the user=\r\nname for #1 to work properly).\n&gt; \n&gt; &quot;- we&#39;d be tunneling authentication sem=\r\nantics in the uri.&quot;\n&gt; Possibly you assume that the appearance of the three =\r\ncharacters &quot;j-o-e&quot; mean\n&gt; that the URI _contains_ identity information. Thi=\r\ns need not be the case at\n&gt; all. The URI could contain any set of character=\r\ns and I would perfer it as\n&gt; long as that set of chracters resulted in a _u=\r\nnique_ URI (not necessarily at\n&gt; _descriptive_ URI).\n&gt; \n&gt; Does that last po=\r\nint make sense? IOW, perfer #1 since it results in a URI\n&gt; that is unique t=\r\no each resource representation. I prefer #2 since it results\n&gt; in two resou=\r\nrces, each unique to each representation.  I do not prefer #3\n&gt; because it =\r\nresults in a single URI that returns multiple representations;\n&gt; the URI is=\r\n no longer unique per representation returned.\n&gt; \n&gt; #3 is the only example =\r\nwhere the URI is re-used to return multiple\n&gt; representations; it is needle=\r\nss tunneling. While it is true that some of the\n&gt; control data (headers) ma=\r\nrk the record as unique, this is less preferable\n&gt; (to me) as there are oth=\r\ner options that result in unique URIs for each\n&gt; representation.\n&gt; \n&gt; \n&gt; mc=\r\na\n&gt; http://amundsen.com/blog/\n&gt; http://twitter.com@mamund\n&gt; http://mamund.c=\r\nom/foaf.rdf#me\n&gt; \n&gt; \n&gt; #RESTFest 2011 - Aug 18-20\n&gt; http://restfest.org\n&gt; \n=\r\n&gt; \n&gt; On Sun, Sep 4, 2011 at 22:55, Dilip Krishnan &lt;dilip.krishnan@...&gt;wrote=\r\n:\n&gt; \n&gt; &gt; Option 2 and 3 seem fairly similar differing only in where the log=\r\nic to get\n&gt; &gt; user-specific-content happens=85 Old habits die hard, but my =\r\nservice oriented\n&gt; &gt; brain seems to think of 3 as the most intuitive option=\r\n that I&#39;d consider.\n&gt; &gt; Also it separates the non-functional aspects of the=\r\n resource=85 in this case\n&gt; &gt; authentication and authorization from the fun=\r\nctional aspect which in this\n&gt; &gt; example is to &quot;GET&quot; my-tasks.\n&gt; &gt;\n&gt; &gt; I se=\r\ne a couple of issues with having the user as part of the resource uri\n&gt; &gt; s=\r\npace\n&gt; &gt; - if the authentication/authorization resources are different from=\r\n the\n&gt; &gt; my-tasks resources, perhaps the identity provider is facebook or g=\r\noogle. How\n&gt; &gt; can one model a user integral to the resource space when we =\r\ndon&#39;t know how\n&gt; &gt; they can be represented in a different system.\n&gt; &gt; - to =\r\nbe able to protect the resources, regardless of what the user in the\n&gt; &gt; ur=\r\ni is, you&#39;d have to have the standard authentication mechanisms cookies,\n&gt; =\r\n&gt; headers etc.\n&gt; &gt; - we&#39;d be tunneling authentication semantics in the uri.=\r\n\n&gt; &gt;\n&gt; &gt; In a recent project that I worked on we did go with the third opti=\r\non, but\n&gt; &gt; I&#39;d be curious why you prefer 1 and 2 over 3.\n&gt; &gt;\n&gt; &gt; Regards,\n=\r\n&gt; &gt; Dilip Krishnan\n&gt; &gt; dilip.krishnan@...\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Sep 4, 2011, a=\r\nt 4:33 PM, mike amundsen wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; I&#39;ve approached this in the=\r\n following ways:\n&gt; &gt;\n&gt; &gt; 1) use dedicated resource : /my-tasks/joe, /joe/my=\r\n-tasks, etc.\n&gt; &gt;\n&gt; &gt; Advantage here is the exact resource is easy to find, =\r\ncache, and bookmark.\n&gt; &gt; Downside is the server must compose this and cache=\r\ns need to keep track of\n&gt; &gt; minor changes (add, edit, remove, tasks) in the=\r\n resource (usually via\n&gt; &gt; ETags).\n&gt; &gt;\n&gt; &gt; 2) use two resources : /my-tasks=\r\n/ and include code on demand that uses\n&gt; &gt; transient state (i.e. cookie, au=\r\nthentication header, etc) to identify and\n&gt; &gt; load personalization data fro=\r\nm another URI.\n&gt; &gt;\n&gt; &gt; Advantage here is there is a single resource that ca=\r\nn be shared by all\n&gt; &gt; users of /my-tasks/ and a second (equally cache-able=\r\n) resource that is\n&gt; &gt; specific to the logged-in user. Downside is that thi=\r\ns is not easily\n&gt; &gt; book-markable since state is involved in retrieving the=\r\n second resource. You\n&gt; &gt; can mitigate this by using an extra URI as a book=\r\nmark\n&gt; &gt; (/bookmark?/my-tasks&user=3Djoe, etc.) or store the transient stat=\r\ne in the URI\n&gt; &gt; using a hashtag (/my-tasks/#joe, etc.). Dev will need to m=\r\nake sure the\n&gt; &gt; code-on-demand also does the proper caching work (attend t=\r\no hastags, track\n&gt; &gt; 304 responses, etc.)\n&gt; &gt;\n&gt; &gt; 3) have servers use a gen=\r\neric URI (/my-tasks/) plus transient data (cookie,\n&gt; &gt; authorization header=\r\n, etc.) to compose the resource server-side and mark the\n&gt; &gt; resource w/ a =\r\n&quot;Vary&quot; header that includes the transient state container to\n&gt; &gt; make sure =\r\ncaches keep the variants sorted.  Advantage is it&#39;s easy to\n&gt; &gt; bookmark an=\r\nd does not require code-on-demand. Downside is a loss of\n&gt; &gt; visbility in g=\r\neneral (the URI does not identify the resource anymore and\n&gt; &gt; possible une=\r\nxpected results when sharing the link (will be harder for userA\n&gt; &gt; to shar=\r\ne w/ userB as the server will step in and mung the resource\n&gt; &gt; representat=\r\nion).\n&gt; &gt;\n&gt; &gt; I usually use #2 unless scripting is dis-allowed/unavailable =\r\nthen i use #1.\n&gt; &gt; I rarely use #3.\n&gt; &gt;\n&gt; &gt; mca\n&gt; &gt; http://amundsen.com/blo=\r\ng/\n&gt; &gt; http://twitter.com@mamund\n&gt; &gt; http://mamund.com/foaf.rdf#me\n&gt; &gt;\n&gt; &gt;\n=\r\n&gt; &gt; #RESTFest 2011 - Aug 18-20\n&gt; &gt; http://restfest.org\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On S=\r\nun, Sep 4, 2011 at 15:41, bryan_w_taylor &lt;bryan_w_taylor@...&gt;\n&gt; &gt; wrote:\n&gt; =\r\n&gt;\n&gt; &gt;&gt; Is it reasonable for a resource to return representations that vary =\r\nbased\n&gt; &gt;&gt; on the authenticated user? Eg:\n&gt; &gt;&gt;\n&gt; &gt;&gt; http://example.com/my-t=\r\nasks\n&gt; &gt;&gt;  vs\n&gt; &gt;&gt; http://example.com/tasks?user=3Djoe\n&gt; &gt;&gt;\n&gt; &gt;&gt; We&#39;ve cons=\r\nider offering both and having my-tasks redirect to the\n&gt; &gt;&gt; appropriate use=\r\nr=3D resource. This helps caching, but at the cost of an extra\n&gt; &gt;&gt; network=\r\n round trip. It also creates a potential for a direct object\n&gt; &gt;&gt; reference=\r\n vulnerability, as I can&#39;t trust URIs that come from joe to always\n&gt; &gt;&gt; say=\r\n user=3Djoe as joe my get frisky and hand edit it to be user=3Djane. So I\n&gt;=\r\n &gt;&gt; have to check the auth&#39;d user vs the URI parameter anyway. Though I mig=\r\nht\n&gt; &gt;&gt; actually want managers to be able to use the user=3D form on employ=\r\nees that\n&gt; &gt;&gt; report up to them.\n&gt; &gt;&gt;\n&gt; &gt;&gt; The my-tasks URI has a huge adva=\r\nntage that it&#39;s static, so I can give it\n&gt; &gt;&gt; to users from static content,=\r\n or more importantly from external or\n&gt; &gt;&gt; non-authenticated content where =\r\nthe server that delivers the URI doesn&#39;t\n&gt; &gt;&gt; know I call him joe. The redi=\r\nrect strategy also works for this.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Aside from breaking caching, i=\r\ns there anything wrong with just returning\n&gt; &gt;&gt; joe&#39;s task when he hits my-=\r\ntasks ? This contemplates a resource that\n&gt; &gt;&gt; responds to GET with represe=\r\nntations that depend on the session token from a\n&gt; &gt;&gt; cookie or a header. M=\r\ny thoughts on the redirect are that it&#39;s STILL a user\n&gt; &gt;&gt; dependent resour=\r\nce, and that unless I make the user type &quot;joe&quot; in a form,\n&gt; &gt;&gt; whatever pag=\r\ne gives him the user=3Djoe link is probably also user dependent. I\n&gt; &gt;&gt; sup=\r\npose I could even save caching by using a rewrite rule instead of a\n&gt; &gt;&gt; re=\r\ndirect.\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; ------------------------------------\n&gt; &gt;&gt;\n=\r\n&gt; &gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; \n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;=\r\n\n\n\n\n"}}