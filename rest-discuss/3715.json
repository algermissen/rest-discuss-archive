{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":139691997,"authorName":"Tyler Close","from":"Tyler Close &lt;tyler@...&gt;","profile":"tjclose","replyTo":"SENDER","senderId":"NXsqsJDfj6Bz5M2Vvcin3hJM3Lkp0VEzcF1HYupjRKfmgqxzndSNSP4r08WOpDcHaU7uSQ1m1FCCgMiw1HGqT74NH8k5JUE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] cgi generating HTML,  do you have a REST example ?","postDate":"1057085482","msgId":3715,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEUxOVhRRHItMDAwM3BYLTAwQGNhbnRlZW4+","inReplyToHeader":"PDE1RkY2QzEwLUFCRTktMTFENy1BN0QwLTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg==","referencesHeader":"PDE1RkY2QzEwLUFCRTktMTFENy1BN0QwLTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg=="},"prevInTopic":3714,"nextInTopic":3716,"prevInTime":3714,"nextInTime":3716,"topicId":3709,"numMessagesInTopic":55,"msgSnippet":"... In this thread, we are interested in the granularity of the abstraction identified by the URL. Let s use a different example to make the point, and then","rawEmail":"Return-Path: &lt;tyler@...&gt;\r\nX-Sender: tyler@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 92912 invoked from network); 1 Jul 2003 19:11:42 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m10.grp.scd.yahoo.com with QMQP; 1 Jul 2003 19:11:42 -0000\r\nReceived: from unknown (HELO canteen) (24.81.31.30)\n  by mta1.grp.scd.yahoo.com with SMTP; 1 Jul 2003 19:11:41 -0000\r\nReceived: from canteen ([127.0.0.1] helo=there)\n\tby canteen with smtp (Exim 3.35 #1 (Debian))\n\tid 19XQDr-0003pX-00\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 01 Jul 2003 14:51:23 -0400\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] cgi generating HTML,  do you have a REST example ?\r\nDate: Tue, 1 Jul 2003 14:51:22 -0400\r\nX-Mailer: KMail [version 1.3.2]\r\nReferences: &lt;15FF6C10-ABE9-11D7-A7D0-000393753936@...&gt;\r\nIn-Reply-To: &lt;15FF6C10-ABE9-11D7-A7D0-000393753936@...&gt;\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: 8bit\r\nMessage-Id: &lt;E19XQDr-0003pX-00@canteen&gt;\r\nFrom: Tyler Close &lt;tyler@...&gt;\r\nX-Yahoo-Group-Post: member; u=139691997\r\nX-Yahoo-Profile: tjclose\r\n\r\nOn Tuesday 01 July 2003 13:26, Roy T. Fielding wrote:\n&gt; It isn&#39;t the *only* information in REST.  The identified information\n&gt; is an abstraction. If I have a link to\n&gt;\n&gt;     http://bigbank.com/services/myaccount\n&gt;\n&gt; then it is identifying the same abstraction regardless of the number\n&gt; of different users that might receive different bytes in response\n&gt; to successfully authenticating and accessing that resource via GET.\n\nIn this thread, we are interested in the granularity of the\nabstraction identified by the URL.\n\nLet&#39;s use a different example to make the point, and then relate\nit back to the issues created by HTTP Auth.\n\nSay there is a web site that hosts multiple documents. The web\nsite has a single URL for its home page.  The site determines\nwhich particular document to respond with based on a string\ncontained in the body of the request.\n\nWe would all agree that such a web site is not RESTful. Since the\nsite does not present a collection of identifiable resources, it\nis impossible to make hyperlinks to particular documents.\n\nHTTP Auth similarly aggregates multiple logical resources under\nthe same URL. There is a significant loss of granularity in the\nabstraction identified by the URL. Just like the RESTless web\nsite, the HTTP Auth application makes it infeasible to make\nhyperlinks to the logical resources.\n\n&gt; User-specific\n&gt; responses via access control are no different than negotiated\n&gt; response by conneg, except that access-controlled resources\n&gt; default to not-shared-cacheable.\n\nThis is false. Conneg only changes the format used for the\nproduced representation, it does not loosen the granularity of the\nidentified abstraction. When you use HTTP Auth to determine the\nuser-specific, logical resource for a request, you loosen the\ngranularity of the URI. If you have 2 users on the same URI, you\ndo not have a URI for each user-specific logical resource. You\nhave taken what could be 2 resources and made them one. Combining\nmultiple logical resources into a single resource is not RESTful;\nit defeats the creation of a web.\n\n&gt; The purpose of REST is to model how the Web is supposed to work.\n&gt; If I were to take the stance that access control doesn&#39;t fit the\n&gt; REST model, then it wouldn&#39;t be the right model.\n\nThis is not the stance I am arguing for. Access control and HTTP\nAuth are not synonymous. There are other ways of implementing\naccess control.\n\nI am arguing that the way access control is popularly implemented\non the WWW is not RESTful. I am making my argument based on the\nprinciples presented in your dissertation.\n\n&gt; It doesn&#39;t defeat anything that wasn&#39;t already defeated by the\n&gt; nature of the application:\n\nThis is also false. The application MUST initially give the bank\naccount holder sole access to the application resources. There is\nno reason why the user should not be allowed to voluntarily share\nsome of those resources with other users. You present a black and\nwhite view of totally private, or totally public resources. This\nview is too simple. Many useful resources are subject to\ndiscretionary sharing. HTTP Auth prevents discretionary sharing by\nusers.  This constraint is not part of generic application\nrequirements.\n\nTo clarify this debate I have broken my argument down into a\nprogression of simple statements:\n\n1. REST states that important resources should have a URI.\n2. A user-specific resource is an important resource.\n3. HTTP Auth is used to discriminate between user-specific\nresources.\n4. This use of HTTP Auth amalgamates user-specific resources under\na shared URI.\n5. Such use of HTTP Auth is RESTless.\n\nTyler\n\n"}}