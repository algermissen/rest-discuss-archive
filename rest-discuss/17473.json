{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119533972,"authorName":"bryan_w_taylor","from":"&quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;","profile":"bryan_w_taylor","replyTo":"SENDER","senderId":"E04uR1ZD3-X4Lu-5IA0U919UCumtcGiJPpRaBExtx-3rgbagBnxiYyFY32HX1jTwkdkRYCSMy8qJ3ZlKRYls6GqvwTMEGpOrzJ3j95AINDrGaw","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: PUT for partial update of an existing resource","postDate":"1302856876","msgId":17473,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGlvOTBiYys5cjJqQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDFGNDBGRDFDLTAyQjEtNEJFNS1BQzEwLTdDQkFFRkFCQkFENkBzdWJidS5vcmc+"},"prevInTopic":17472,"nextInTopic":17474,"prevInTime":17472,"nextInTime":17474,"topicId":17415,"numMessagesInTopic":59,"msgSnippet":"... I actually agree that it should be the language of the spec that controls what happens. Not lore about it, but the actual spec. Many people are asserting","rawEmail":"Return-Path: &lt;bryan_w_taylor@...&gt;\r\nX-Sender: bryan_w_taylor@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73054 invoked from network); 15 Apr 2011 08:41:20 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 15 Apr 2011 08:41:19 -0000\r\nX-Received: from unknown (HELO n5-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.101)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Apr 2011 08:41:19 -0000\r\nX-Received: from [67.195.134.239] by n5.bullet.mail.sp2.yahoo.com with NNFMP; 15 Apr 2011 08:41:18 -0000\r\nX-Received: from [69.147.65.148] by t4.bullet.mail.sp2.yahoo.com with NNFMP; 15 Apr 2011 08:41:18 -0000\r\nX-Received: from [98.137.34.36] by t11.bullet.mail.sp1.yahoo.com with NNFMP; 15 Apr 2011 08:41:18 -0000\r\nDate: Fri, 15 Apr 2011 08:41:16 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;io90bc+9r2j@...&gt;\r\nIn-Reply-To: &lt;1F40FD1C-02B1-4BE5-AC10-7CBAEFABBAD6@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;bryan_w_taylor&quot; &lt;bryan_w_taylor@...&gt;\r\nSubject: Re: PUT for partial update of an existing resource\r\nX-Yahoo-Group-Post: member; u=119533972; y=HHVaaNAS4II_SfscwHq4jqo7_8ND1VKoG3LVLxlZ7SGW8JaD5csL3KY\r\nX-Yahoo-Profile: bryan_w_taylor\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n=\r\n\n&gt; Actually it ought be because the spec says so. The point of protocols li=\r\nke HTTP is interoperability. We can change rules based on what we think is =\r\nbetter or worse, but every time we do so, we are weakening interoperability=\r\n.\n\nI actually agree that it should be the language of the spec that control=\r\ns what happens. Not lore about it, but the actual spec. Many people are ass=\r\nerting that the spec outlaws partial updates. I&#39;m reading the spec and thin=\r\nk it allows a certain form of partial update. I&#39;m not really arguing about =\r\nwhat the spec should be, I&#39;m arguing about what actually follows from it an=\r\nd disputing the conclusion other reach.\n\nConsider a resource defined by a m=\r\nulticolumn column row in a database, say its Joe&#39;s record in a person table=\r\n. Consider two subsets A and B of column values within Joe&#39;s record, say A =\r\nincludes the PK, his name and address and B includes the PK his name and Jo=\r\ne&#39;s job information.  At this company, media types for addresses and job de=\r\nscriptions already exist, and no one can prevent me from using these to rep=\r\nresent Joe&#39;s data. This server chooses not to define any derived resources =\r\n-- ie no refinements. Adding refinements is arguably good design, but it is=\r\n certainly not required design. Like it or not, this server doesn&#39;t support=\r\n it and you access all information about Joe using Joe&#39;s URI, http://exampl=\r\ne.com/Joe and the server uses content negotiation that accepts application/=\r\naddress+xml or application/job+xml as media types. The server implements PU=\r\nT by updating or inserting a row as needed with the column values specified=\r\n. Default values for each column. For existing rows, PUT modifies all colum=\r\nns and only those columns depicted in each media type (A for address, B for=\r\n job).\n\nDoing this results in an operation that is idempotent, as repeated =\r\nPUT of address or job data causes it to be set and after its set doing it a=\r\ngain doesn&#39;t change any column value. Both operations are also what I call =\r\ninvertible, meaning that after a PUT, the resource state could be used to r=\r\neconstruct an equivalent representation to the last PUT.\n\nI believe that th=\r\ne definition of PUT should be an idempotent, invertible write operation. Th=\r\nis is similar, but slightly different to what Roy is getting at in his draf=\r\nt changes to PUT, with one big difference. He actually expects GET to inver=\r\nt PUT. I don&#39;t like that because I should be free to do PUT of application/=\r\naddress+xml and application/job+xml but to only support whole row GET via a=\r\npplication/person+xml. Note access controls might motivate me to split up t=\r\nhe write operations this way differently from the reads.\n\n\n\n"}}