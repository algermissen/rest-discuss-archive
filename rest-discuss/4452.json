{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"e3UVr4CHN9Lm9gqWie4UtZXywRweLWbI_XUjNBisH0oFKJAQd8OGhw1UUCnuQL48g9jJYn16FOuJL_Lpb0uojQRVjsRXIixOTKDrd4uPeA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Design questions for applying REST","postDate":"1087017432","msgId":4452,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTE2LURBVjMwT1JGUUd3WjQwMDAzNzgzYkBob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTE2LURBVjYwc0w2N1FsTkQwMDAzNjZmNkBob3RtYWlsLmNvbT4gPDQwQzlCMjI5LjYwMDAxQG5lZ2dpZS5uZXQ+"},"prevInTopic":4450,"nextInTopic":4455,"prevInTime":4451,"nextInTime":4453,"topicId":4447,"numMessagesInTopic":13,"msgSnippet":"... I have 40M+ resources, so I wasn t considering this as feasible. I also think that HTTP indicates that part of a server s job for handling PUT is for the","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 73298 invoked from network); 12 Jun 2004 05:17:13 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m2.grp.scd.yahoo.com with QMQP; 12 Jun 2004 05:17:13 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.186.210)\n  by mta6.grp.scd.yahoo.com with SMTP; 12 Jun 2004 05:17:13 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 11 Jun 2004 22:17:13 -0700\r\nReceived: from 207.202.171.254 by bay16-dav30.bay16.hotmail.com with DAV;\n\tSat, 12 Jun 2004 05:17:13 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &quot;John Belmonte&quot; &lt;john@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;BAY16-DAV60sL67QlND000366f6@...&gt; &lt;40C9B229.60001@...&gt;\r\nDate: Fri, 11 Jun 2004 22:17:12 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nMessage-ID: &lt;BAY16-DAV30ORFQGwZ40003783b@...&gt;\r\nX-OriginalArrivalTime: 12 Jun 2004 05:17:13.0554 (UTC) FILETIME=[85291B20:01C4503C]\r\nX-eGroups-Remote-IP: 65.54.186.210\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: Re: [rest-discuss] Design questions for applying REST\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n&gt;\n&gt; I don&#39;t consider it that annoying that clients have to remember\n&gt; mappings.  When you design so that state is not stored on the server,\n&gt; naturally it will have to be stored elsewhere-- it&#39;s part of the\n&gt; client&#39;s job.\nI have 40M+ resources, so I wasn&#39;t considering this as feasible.\nI also think that HTTP indicates that part of a server&#39;s job for handling\nPUT is for the client to be able to specify the URI.\n\n&gt;\n&gt; In any case, you can make this plan more robust as follows: when the\n&gt; server creates a record for a new document, also store the digest of the\n&gt; request that caused it.  Then, if it receives a duplicate request from\n&gt; the client, ignore it and return the exiting resource location.\nI&#39;m not really worried about duplicate requests - the behavior would be to\ndetermine if the submitted content already had been submitted before. Either\nvia the URI having the client-managed identifier or having the content\ncontain the client-managed identifier.\n\n&gt;\n&gt; Also, assuming that input documents are not shared, the server could\n&gt; provide a query function that returns the output resource given an input\n&gt; resource URL.\nWhat would that look like? It&#39;d be a compound URI, right? Whatever it would\nlook like, I hadn&#39;t considered two resources - one for the stored input\ndocument and one with references to the synthesized output document, but in\norder to know about this second resource either the client generates that\nresource identifier or that identifer is contained in a representation of\nthe stored input document - and I might as well point to the synthesized\noutput document directly.\nSomething to think about though, there&#39;s probably an answer in here\nsomewhere....\n\n\n(Anyone else with some ideas/comments? Roy? Mark? Jeff? Paul? Rohit?)\n\n"}}