{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":498432483,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jan.algermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"o-X7Dcmbgdd9qezxzltX7jh1dplnGPPFVofQCGkLLQVhzuqc_qSzJKmRACZQezl7Pd4zBQJUZkcogSWPlPWtncw4g8vdFRSN-bsOi1KEYGOteIw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST is not about domain models","postDate":"1324544816","msgId":18143,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDZGOUE0QkIxLTVFNjktNDQ3My1CQzM4LTQ0OEUyRTU1REQ1OUBub3Jkc2MuY29tPg==","inReplyToHeader":"PDg2RDAzREZCOEU4MTRBNDdBOUNBNkFBRDVFRDZFREJCQEpyblBDPg==","referencesHeader":"PDBGQkNBODgwNzQyQjRGQ0FCNjgzODcyRDk2NEE3RjYxQEpyblBDPiA8ODZEMDNERkI4RTgxNEE0N0E5Q0E2QUFENUVENkVEQkJASnJuUEM+"},"prevInTopic":18142,"nextInTopic":18144,"prevInTime":18142,"nextInTime":18144,"topicId":18135,"numMessagesInTopic":20,"msgSnippet":"... One thing I forgot to say: There is a difference between protocol and service functionality and a client needs to consider two things: Why it chooses a","rawEmail":"Return-Path: &lt;jan.algermissen@...&gt;\r\nX-Sender: jan.algermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83639 invoked from network); 22 Dec 2011 09:06:58 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m7.grp.sp2.yahoo.com with QMQP; 22 Dec 2011 09:06:58 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.171)\n  by mta1.grp.sp2.yahoo.com with SMTP; 22 Dec 2011 09:06:58 -0000\r\nX-Received: from [192.168.2.107] (p548F9B5A.dip.t-dialin.net [84.143.155.90])\n\tby mrelayeu.kundenserver.de (node=mreu2) with ESMTP (Nemesis)\n\tid 0MPKwG-1RZElE3ayG-004ub8; Thu, 22 Dec 2011 10:06:57 +0100\r\nMime-Version: 1.0 (Apple Message framework v1084)\r\nContent-Type: text/plain; charset=iso-8859-1\r\nX-Priority: 3\r\nIn-Reply-To: &lt;86D03DFB8E814A47A9CA6AAD5ED6EDBB@JrnPC&gt;\r\nDate: Thu, 22 Dec 2011 10:06:56 +0100\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;6F9A4BB1-5E69-4473-BC38-448E2E55DD59@...&gt;\r\nReferences: &lt;0FBCA880742B4FCAB683872D964A7F61@JrnPC&gt; &lt;86D03DFB8E814A47A9CA6AAD5ED6EDBB@JrnPC&gt;\r\nTo: =?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nX-Mailer: Apple Mail (2.1084)\r\nX-Provags-ID: V02:K0:bfNt7pH2kJ3IdJPDq0hii6WTUL9X/QCSIV5Rqncfwkh\n 3vnULe5TpAXmZd0p6P9osbWZmiH1dtN79eVCCmz0R0FJOfzzyU\n q1DQtLLyaAnmiz9WmbTF08R11QyxJrnvlOMbCn0rrMX/MdVrLg\n wPaNhZZBjGGtTEk1+G1CJ+RMGrscpZxCgUDFQCybN65YSNhHhv\n fPowgKgA6gV4h2G4rQ17ju7MYCYxH4VPi4mVrhZoQ4NQ/xVnpN\n 93OLKiHTRtgH7COS/i/WjZW0mWwZUBr8zkQCIrffPV3lz6hBua\n XaBlel3DCSg4ncWygazwYNuVgz1dOGjy03kSbjaqvBAIXTRfwn\n luhoqPE+K7bTCHPheybNkIP/imNUTwGYhE8ZAUWRCCYRWUC7cR\n XZxKQSVBb2KgQ==\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nSubject: Re: [rest-discuss] REST is not about domain models\r\nX-Yahoo-Group-Post: member; u=498432483; y=RA3mCl-Z37NuCHdrhIdy_xuF1C2YlNbwt7C0eq3g7zddHsAmQW3IG_Wm\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Dec 22, 2011, at 7:50 AM, J=F8rn Wildt wrote:\n\n&gt; There are \n&gt; endless n=\r\numbers of different domains out there\n\nOne thing I forgot to say:\n\nThere is=\r\n a difference between protocol and service functionality and a client needs=\r\n to consider two things: Why it chooses a specific service and how to inter=\r\nact with it.\n\nThe service type is orthogonal to the question of what API it=\r\n exposes (there might even be several APIs in serveral arch. styles on a si=\r\nngle service). This is an aspect that is in my experience not well understo=\r\nod nor talked about. Certainly the SOA(P) world completely ignores this dis=\r\ntinction, often implicitly substituting service API signature with service =\r\ntype.\n\nMany of the domain semantics you mention can be part of the service =\r\ntypes defined in that domain. Client (of course) need to understand these s=\r\nervice types to make the very decision *which* service to talk to to achiev=\r\ne a certain goal. This decision includes quite some amount of expectations =\r\nabout how the service will behave (sometimes referred to as &#39;intent&#39;).\n\nMed=\r\nia types only need to capture the protocol semantics that enable communicat=\r\nion they need not (and must not) define service functionality.\n\nThis is why=\r\n you do not need an &lt;order-placement-request&gt; XML schema (or a placeOrder()=\r\n method for that matter) - it is sufficient, for example, to base the actua=\r\nl communication on a domain-independent media type spec such as AtomPub and=\r\n POST &lt;order&gt;s to an AtomPub server *that whoever configures the applicatio=\r\nn knows to be an order-processing-service*.\n\nYou can see this in code, if y=\r\nou consider that  \n\nOrderProcessorService ops;\nOrder order;\n...\nops.placeOr=\r\nder(order);\n\nunnecessarily duplicates the knowledge how ops behaves into th=\r\ne RPC API ( =3D&gt; placeOrder(Order order)).\n\nOrderProcessorService ops;\nOrde=\r\nr order;\n...\nops.post(order);\n\ndoes exactly the same thing but this time th=\r\nrough a uniform API.\n\n-----\n\nIf you point your browser to Amazon to buy a b=\r\nook, you pick Amazon&#39;s service because you expect to be able to order books=\r\n there. Your HTTP/HTML based browser is just an agent (sic!) realizing (tog=\r\nether with the server component) your intended use case. If Amazon stopped =\r\nselling books and turned into a whether-info service instead, no amount of =\r\nRPC-style API-level tight coupling would fix that and magically enforce you=\r\nr use case.\n\nJan\n\n\n\n\n"}}