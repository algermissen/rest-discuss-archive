{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"_bULV_X0cnZmCxLhqrAL0KJS49W6WsBHefMGrDI-h8eqOwXXWN83Vo-MowLQ7qDsj6mcn2ZAVOFq5vlHyVS1n9pi_PWydEEq8g","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] bootstrapping","postDate":"1200626226","msgId":10257,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDgwMTE3MTkxN2gyZDM2ZTQ4MG43NjAzNzY1OTg1ZDBjNzU2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDEwNTQwMWM4NThlNyQ0OGZjYjVmMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPgkgPDUwMzdiNmU0MDgwMTE2MTA0OHE0MGViYWQ4NGkzOGY3YzhhMmQ5MmU3MDA1QG1haWwuZ21haWwuY29tPgkgPDBmM2UwMWM4NTg3ZiQ5ZDhhY2Y3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+CSA8NTAzN2I2ZTQwODAxMTYyMjM5Zzc3N2I0NjdkcTY0YjEzNzMzMDAwOTg4YWNAbWFpbC5nbWFpbC5jb20+CSA8MTA1NDAxYzg1OGU3JDQ4ZmNiNWYwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4="},"prevInTopic":10247,"nextInTopic":10258,"prevInTime":10256,"nextInTime":10258,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... I just call them developers.  Those working on the business needs like order fullfilment and inventory management, far outweight those working on","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 56253 invoked from network); 18 Jan 2008 03:17:08 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m55.grp.scd.yahoo.com with QMQP; 18 Jan 2008 03:17:08 -0000\r\nX-Received: from unknown (HELO fg-out-1718.google.com) (72.14.220.157)\n  by mta18.grp.scd.yahoo.com with SMTP; 18 Jan 2008 03:17:08 -0000\r\nX-Received: by fg-out-1718.google.com with SMTP id l27so1182224fgb.43\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 17 Jan 2008 19:17:07 -0800 (PST)\r\nX-Received: by 10.86.59.2 with SMTP id h2mr2613840fga.19.1200626227004;\n        Thu, 17 Jan 2008 19:17:07 -0800 (PST)\r\nX-Received: by 10.86.71.6 with HTTP; Thu, 17 Jan 2008 19:17:06 -0800 (PST)\r\nMessage-ID: &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\r\nDate: Thu, 17 Jan 2008 19:17:06 -0800\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;fmks78+k15k@...&gt;\n\t &lt;5037b6e40801161048q40ebad84i38f7c8a2d92e7005@...&gt;\n\t &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt;\n\t &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt;\n\t &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=319607554; y=HXWzyDqLz4X303CFovKvIKcx8dkTT1CPLhwA5sXNH5KziYEFrA\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn Jan 17, 2008 12:59 AM, Mike Schinkel &lt;mikeschinkel@...&gt; wrote:\n&gt; However, and I explain this so you&#39;ll know why I make some of my arguments,\n&gt; I&#39;m also concerned with empowering a class of people that I think most who\n&gt; participate on these lists are not concerned with. I&#39;ll call those people\n&gt; &quot;occupational&quot; programmers (as opposed to &quot;professional&quot;) programmers.\n&gt; Occupational programmers by nature program to get a job done not because\n&gt; their job is programming. The more difficult something is the less likely an\n&gt; occupational programmers will ever be able to do it because they don&#39;t\n&gt; rarely have the time to learn more than beginner-level programming skills.\n\nI just call them developers.  Those working on the business needs like\norder fullfilment and inventory management, far outweight those\nworking on infrastructure problems like how to connect any given\nserver to any given client.  I belong to the smaller category of\ninfrastructure developers, who worry about that stuff, but only so\nother developers won&#39;t have to.\n\nSame difference, I just think it helps in remembering that what works\nfor me doesn&#39;t work for most developers.\n\n\n&gt; IMO for the HATEOAS to be fully respected and generally used we need a\n&gt; standard way to discover and interact with REST-based web services and that\n&gt; standard way to interact need to then be built into browsers thus allowing\n&gt; people to discover and interact with them without having to write code.\n&gt; Until that happens, it&#39;s unrealistic to expect widespread use of HATEOAS for\n&gt; any but the most standards-pedantic of web service publishers much like\n&gt; people still use &lt;table&gt; elements instead of pure CSS because pure CSS\n&gt; doesn&#39;t fully meet the needs of users.  Companies that have a strategic\n&gt; reason for more people to use their externally published web services are\n&gt; foolish not to publish direct URL interfaces because given the current state\n&gt; of things HATEOAS signifcantly stunts adoption.\n\nHATEOAS, if I understand correctly, talks about links and their\nequivalence, or how you navigate from one resource to another, or\nchange from one state to another.  The Web as we know it has another\nthing called discovery.  Given a resource I can discover how to use\nit, as I&#39;m using it, and use hypermedia to drive the application\nstate.\n\nIn my experience that doesn&#39;t work for the programmable Web.  You\nreally do need to know what the states and transitions are, before you\nstart coding for them.  Things like getting an order done is pursuing\nknown transitions, to a desired end state, but you&#39;ll never start if\nyou don&#39;t know there&#39;s a paved road leading to your destination.\n\nWorking without a spec (i.e. pure discovery) has other down sides,\nlike not always finding the optimal path, not being able to develop in\nparallel, QA servers on behalf of clients, or even determining what\nchanges break clients.\n\nYou need a map, and post signs along the way.\n\nThe problem with WSDL, and from what I&#39;ve seen also WADL, is that\nneither one provides a map.  They provide blueprints.  They tell you\nexactly how to manufacture a service (and clients), but in doing so\neliminates necessary deviations, extensions and compositions that can\nhappen over time.  We need something better than that, which smartly\ndivides that which belongs in the map and what which belongs on signs.\n\nIn that world view, dynamically downloading a map is unnecessary.  You\nalready have one, from which you&#39;re building your code.  And if the\none you have is different from the one you download, there&#39;s little\nyou can do about it.  But you pay attention to signs along the route,\nin fact you can&#39;t get to your destination without following signs.\n\nSo in this particular case, I would say that for all the known places,\nyou should just list them on a map, hand it to developers to build\nclients from it.  As you point out, public services like Google do\nthat as a matter of practice, and that just means you have to honor\nthese specifications once you publish them.  But some routes may\nchange over time, in which case it&#39;s best to have the server resolve\nthem, which is a simple matter of &quot;here&#39;s the data, give me back a\nURL&quot;.\n\nThe inbetween case is putting something up with intent that it be a\nsign, but possibility to be used as a map.  If it&#39;s possible it will\nhappen, much more than developers reading the manual.  So rather than\nhoping things will happen in a particular way, I say commit to them.\nMake something a map or a sign, and only available in one form.\n\n\n&gt; BTW, 99% of what I&#39;m discussing in this email are web services published for\n&gt; external use, not web services that are only used by others in the same\n&gt; organization.\n\nIt&#39;s been my experience that if you follow the successful practices of\nthe Web, it ends up working quite well internally, if you follow\npractices only intended to work internally, they don&#39;t always work\ninternally.  There&#39;s obviously a benefit to writing a service that\nonly your coworker in the next room can use -- time being one of them\n-- but that&#39;s also how we acquire technical debt.\n\nI plan on every service as if it was publish on the Web, because I\ncan&#39;t tell that the person who was at the design meeting today won&#39;t\nbe replaced by someone else tomorrow who doesn&#39;t share our same\nunderstanding of doing things.\n\n-- Assaf\nhttp://labnotes.org\n\n&gt;\n&gt; There are also cases where a HATEOAS requirement effectively nullifies the\n&gt; benefit fo the service, for example the published URL interfaces for\n&gt; Google&#39;s Chart API [1].  Given that the Google Chart API returns an image\n&gt; for use in a &lt;img src=&quot;...&quot;&gt; element, requiring the client to first call a\n&gt; main URL to get the specific URL before it can use it elimates potential use\n&gt; anywhere Javascript is not an option and for anyone who does not have the\n&gt; required Javascript skills (My guess is more than 10 times more people know\n&gt; HTML than Javascript.)  Again, I&#39;m advocating for accessibility for the\n&gt; lesser skilled. They, after all, are not here to advocate for themselves\n&gt; (unless you count me in that category. :-)\n&gt;\n&gt; --\n&gt; -Mike Schinkel\n&gt; http://www.mikeschinkel.com/blogs/\n&gt; http://www.welldesignedurls.org\n&gt; http://atlanta-web.org\n&gt;\n&gt; [1] http://code.google.com/apis/chart/#url_format\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; Assaf\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; But even your service is public, if it is important that the URL be\n&gt; &gt; &gt; able to change then make that clear in no uncertain terms\n&gt; &gt; in the docs\n&gt; &gt; &gt; and in UPPERCASE comments in any representations returned.\n&gt; &gt; And if you\n&gt; &gt; &gt; are paranoid, literally change the URL every time with a\n&gt; &gt; validatation\n&gt; &gt; &gt; parameter so that anyone who did hard code quickly learns\n&gt; &gt; better and\n&gt; &gt; &gt; no time is given to allow hardcoded clients time is build up.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Or IMO best of all, just document it and commit to the URL\n&gt; &gt; format just\n&gt; &gt; &gt; as Google have done with their Chart service, for example.\n&gt; &gt; Yes I know,\n&gt; &gt; &gt; that violates the HATEOAS requirement but I personally don&#39;t think\n&gt; &gt; &gt; being a fundamentalist in all things is such a good idea;\n&gt; &gt; some times\n&gt; &gt; &gt; it is better just to put a stake in the ground. If\n&gt; &gt; *everything* were\n&gt; &gt; &gt; meta, we&#39;d never get anything done.\n&gt; &gt; &gt;\n&gt; &gt; &gt; --\n&gt; &gt; &gt; -Mike Schinkel\n&gt; &gt; &gt; http://www.mikeschinkel.com/blogs/\n&gt; &gt; &gt; http://www.welldesignedurls.org\n&gt; &gt; &gt; http://atlanta-web.org\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --\n&gt; &gt; -- Assaf\n&gt; &gt;\n&gt; &gt; http://labnotes.org\n&gt;\n&gt;\n\n"}}