{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":22604463,"authorName":"Allan Doyle","from":"Allan Doyle &lt;adoyle@...&gt;","profile":"mit80eecs","replyTo":"SENDER","senderId":"XJuLjzGLO6TiyKH951Ss6uVaD0RRwu1dXfzM4VhS6DVtbsziCrQSaR6KULEIBrbdMichiXWDpGmerQx4CScql8x1riSwFZYagzIe3YYr7A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] socket-level mods","postDate":"1026433313","msgId":1814,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE1NjYyLjg0ODEuODkwNzkwLjYyMDczMEBnYXJnbGUuZ2FyZ2xlLkhPV0w+","inReplyToHeader":"PFBpbmUuTE5YLjQuNDQuMDIwNzExMTkyMjQzMC40NjYtMTAwMDAwQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4=","referencesHeader":"PDNEMkRGQTVGLkY1RjhEN0I5QHByZXNjb2QubmV0Pgk8UGluZS5MTlguNC40NC4wMjA3MTExOTIyNDMwLjQ2Ni0xMDAwMDBAbG9jYWxob3N0LmxvY2FsZG9tYWluPg=="},"prevInTopic":1813,"nextInTopic":1815,"prevInTime":1813,"nextInTime":1815,"topicId":1733,"numMessagesInTopic":74,"msgSnippet":"I may be totally off base here, and would need to do some experiments, but given that HTTP runs over TCP, isn t it the case that a request sent to a server can","rawEmail":"Return-Path: &lt;adoyle@...&gt;\r\nX-Sender: adoyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 12 Jul 2002 00:21:56 -0000\r\nReceived: (qmail 13044 invoked from network); 12 Jul 2002 00:21:56 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m1.grp.scd.yahoo.com with QMQP; 12 Jul 2002 00:21:56 -0000\r\nReceived: from unknown (HELO this.intl-interfaces.net) (66.92.76.202)\n  by mta1.grp.scd.yahoo.com with SMTP; 12 Jul 2002 00:21:56 -0000\r\nReceived: from this.intl-interfaces.net (localhost [127.0.0.1])\n\tby this.intl-interfaces.net (Postfix) with ESMTP\n\tid 78176C6EE7; Thu, 11 Jul 2002 20:21:54 -0400 (EDT)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nMessage-ID: &lt;15662.8481.890790.620730@...&gt;\r\nDate: Thu, 11 Jul 2002 20:21:53 -0400\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] socket-level mods\r\nIn-Reply-To: &lt;Pine.LNX.4.44.0207111922430.466-100000@...&gt;\r\nReferences: &lt;3D2DFA5F.F5F8D7B9@...&gt;\n\t&lt;Pine.LNX.4.44.0207111922430.466-100000@...&gt;\r\nX-Mailer: VM 7.00 under Emacs 21.1.1\r\nFrom: Allan Doyle &lt;adoyle@...&gt;\r\nX-Yahoo-Group-Post: member; u=22604463\r\nX-Yahoo-Profile: mit80eecs\r\n\r\nI may be totally off base here, and would need to do some experiments,\nbut given that HTTP runs over TCP, isn&#39;t it the case that a request\nsent to a server can be held by the server nearly indefinitely before\nit sends a reply? \n\nIf so, then one thing I learned from rubbing elbows with the old\nCORBUS system at BBN is something called &quot;futures&quot;. If a client makes\na request to a server, and that server hangs onto the request while\nthe client merrily goes on its way, then when the response eventually\ncomes, the client can treat it as an asynchronous message from the\nserver. If the server cleverly puts content into the reply, voila,\nyour client can wake up and deal with it.\n\nIf the TCP connection breaks, or the HTTP server times out and shuts\nit down, the client would get a different signal/error. Then client\ncould then decide whether to send another future request or do\nsomething else. In any case, you are buying time and leaving open a\nmeans for an async notification.\n\nThis would move the problem up one level and you would not have to\nmuck with HTTP. The only issue is whether the breakage level is too\nhigh, causing overconsumption of resources. Then you do have to work\non some optimizations (potentially even rewriting HTTP).\n\n     Allan\n\n\nOn Thursday 2002-07-11 at 19:41:29(-0400) Lucas Gonze wrote:\n &gt; Paul Prescod said:\n &gt; &gt; I&#39;m not familiar with the Gnutella protocol. Maybe you could outline the\n &gt; &gt; major message types, resource types and addressing facilities or point\n &gt; &gt; to a good summarizing URI.\n &gt; \n &gt; It&#39;s totally brain dead but still hard to do with HTTP.  What you need to \n &gt; know is that a connection is a continuous stream of message events.  An \n &gt; outgoing message may have 0, 1, or more responses.  The mechanics of \n &gt; store-and-forward are mashed into the message along with application \n &gt; functionality.  \n &gt; \n &gt; Documentation for the 0.4 version of the protocol:\n &gt; http://www.rixsoft.com/Knowbuddy/gnutellafaq.html\n &gt; \n &gt; There are many things about it that I don&#39;t want to emulate.  What I do \n &gt; want is how trivial it makes asynchronous messaging in a p2p context.\n &gt; \n &gt; &gt; To me the most fundamental problem is the same problem with all p2p\n &gt; &gt; apps: clients can be behind NAT and have no global addresses. So yes,\n &gt; &gt; you do need a TURN/ETRN and it won&#39;t be backwards compatible. My\n &gt; &gt; instinct is to have the client open a socket and ask for a backchannel\n &gt; &gt; with a POST. The server creates a &quot;listener&quot; and returns the port number\n &gt; &gt; and maybe some authentication data. The client connects *not* using HTTP\n &gt; &gt; but using a &quot;reversible socket protocol&quot;. The client and server\n &gt; &gt; understand that on the reversed socket they have swapped roles.\n &gt; \n &gt; No doubt.  but what is the reversible socket protocol?  The most\n &gt; parsimonious solution to my mind is that it&#39;s 100% HTTP 1.1, except that\n &gt; the transport layer underneath is different.  Is there any architectural\n &gt; reason why this wouldn&#39;t work?\n &gt; \n &gt; A total digression: the fundamental problem with p2p is that the network\n &gt; is self-organizing in a way that affects your moment to moment\n &gt; interactions.  With browser-oriented applications the self-organizing\n &gt; macro structure is too big to be visible usually.\n &gt; \n &gt; &gt; I doubt this idea is compatible with all existing infrastructure, but\n &gt; &gt; there is no solution that will be 100% compatible with existing\n &gt; &gt; infrastructure *except* tunnelling. By definition turning the existing\n &gt; &gt; one-way architecture into a two-way one requires either extension or\n &gt; &gt; tunnelling. If you care about the marketability of your protocol, it\n &gt; &gt; should probably provide both options.\n &gt; \n &gt; It&#39;s incompatible in a wierd way.  99.99% of the thought that went into\n &gt; HTTP can be reused.  All HTTP implementations need a little bit of hacking\n &gt; to be compatible.  All HTTP-based applications need a total rewrite.  The\n &gt; loss is that it&#39;s a new protocol, the win is that the new protocol is also\n &gt; HTTP.  ...that&#39;s the idea anyway.\n &gt; \n &gt; \n &gt; \n &gt; \n &gt; \n &gt; To unsubscribe from this group, send an email to:\n &gt; rest-discuss-unsubscribe@yahoogroups.com\n &gt; \n &gt;  \n &gt; \n &gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ \n &gt; \n &gt; \n\n-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nAllan Doyle                         http://www.intl-interfaces.com\nadoyle@...\n\n\n"}}