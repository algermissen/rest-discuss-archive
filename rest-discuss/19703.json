{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"8bZd_4HlDd74MH5uHNN8G-9TLfIM58XduAABOVskNTxAZTKsaqh9EnABJmI-HHcbwa3z1M8W98W-tZ5f6nLsbcmpaW7K6_8rQg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Forward/Backward versioning, media-types, etc","postDate":"1408247320","msgId":19703,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE0MDgyNDczMjAuOTAwODIuWWFob29NYWlsTmVvQHdlYjEyMjIwNi5tYWlsLm5lMS55YWhvby5jb20+","referencesHeader":""},"prevInTopic":0,"nextInTopic":19704,"prevInTime":19702,"nextInTime":19704,"topicId":19703,"numMessagesInTopic":2,"msgSnippet":"Hi all, I ve been reading up quite a bit on versioning, HATEOAS, forward/backward compatibility changes and versioning, etc with REST APIs. Some recent docs","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 37827 invoked by uid 102); 17 Aug 2014 03:51:35 -0000\r\nX-Received: from unknown (HELO mtaq1.grp.bf1.yahoo.com) (10.193.84.32)\n  by m6.grp.bf1.yahoo.com with SMTP; 17 Aug 2014 03:51:35 -0000\r\nX-Received: (qmail 32685 invoked from network); 17 Aug 2014 03:51:35 -0000\r\nX-Received: from unknown (HELO nm43.bullet.mail.ne1.yahoo.com) (98.138.100.120)\n  by mtaq1.grp.bf1.yahoo.com with SMTP; 17 Aug 2014 03:51:35 -0000\r\nX-Received: from [127.0.0.1] by nm43.bullet.mail.ne1.yahoo.com with NNFMP; 17 Aug 2014 03:51:34 -0000\r\nX-Received: from [98.138.100.102] by nm43.bullet.mail.ne1.yahoo.com with NNFMP; 17 Aug 2014 03:48:41 -0000\r\nX-Received: from [98.138.226.165] by tm101.bullet.mail.ne1.yahoo.com with NNFMP; 17 Aug 2014 03:48:41 -0000\r\nX-Received: from [127.0.0.1] by omp1066.mail.ne1.yahoo.com with NNFMP; 17 Aug 2014 03:48:41 -0000\r\nX-Yahoo-Newman-Property: ymail-4\r\nX-Yahoo-Newman-Id: 266475.85595.bm@...\r\nX-Received: (qmail 50422 invoked by uid 60001); 17 Aug 2014 03:48:41 -0000\r\nX-YMail-OSG: S8mjGfsVM1lrWMM8sdIUOA3QLQHh6bjmz2Z9S912jJ1uWtt\n hbHlV6Kba.xQ61Q.nkyqcIjxIDNeDZVO1uQaMMR0iT7d5GN8P6Ao1fKWfbhg\n gUZ.4BS5SWiD47QRCJHzI4YE64YA9DhEuBIms85hy_.yidYX9vq4Hxud7lo1\n dx.hSOYolT5q0e5NFKcQyAf7A4ZyQvLdn0X_iM_c7zIY6Ef7A4vyzcwoWQmR\n XUGh2akto0wlDNyBGezQmzd55vKeSB6fZ_7YUVGcI6rbKUyfDMCMDZewySDk\n jyyJA0pATrlkseQWK_cCCJNcnCrcd.FzV8AvNT.GhYRLK.u6ADuCu8TkFHOf\n G6s7j9qDyYsd0AN_a8ZudI5hZJ99TQulxH_A3wxxLDsmhLUyhxZzaJA23z7E\n WT72ijGdCNlPbBwZjcaMB.4MGSOhj6cTtqx8vLQdYvjOr0fzzM76RT26bDzq\n 4mkDEBQBiaraScNHdP1R..oFHjYk2zzjyF3UXdGLFDeEkW_DMrJnq.d5Hkkh\n ucr38EWWgtza5SRVIb1QA35_4ya0t.VN5oNec3UK21xR5dARw2QWP0eqQYtU\n OyjOg\r\nX-Received: from [76.14.118.228] by web122206.mail.ne1.yahoo.com via HTTP; Sat, 16 Aug 2014 20:48:40 PDT\r\nX-Rocket-MIMEInfo: 002.001,SGkgYWxsLAoKSSd2ZSBiZWVuIHJlYWRpbmcgdXAgcXVpdGUgYSBiaXQgb24gdmVyc2lvbmluZywgSEFURU9BUywgZm9yd2FyZC9iYWNrd2FyZCBjb21wYXRpYmlsaXR5IGNoYW5nZXMgYW5kIHZlcnNpb25pbmcsIGV0YyB3aXRoIFJFU1QgQVBJcy4gU29tZSByZWNlbnQgZG9jcyBhcmUgc3VnZ2VzdGluZyB0aGF0IG1vcmUgcGVvcGxlIGFyZSB1c2luZyB2ZXJzaW9uaW5nIGluIHRoZSBVUkkgYnV0IG9ubHkgZm9yIG1ham9yIHZlcnNpb24gY2hhbmdlcyBvZiB0aGUgZW50aXJlIEFQSSBhbmQgdXBkYXRlIHRoZSABMAEBAQE-\r\nX-Mailer: YahooMailWebService/0.8.201.700\r\nReferences: \r\nMessage-ID: &lt;1408247320.90082.YahooMailNeo@...&gt;\r\nDate: Sat, 16 Aug 2014 20:48:40 -0700\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;-2079400718-122398558-1408247320=:90082&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nReply-To: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Forward/Backward versioning, media-types, etc\r\nX-Yahoo-Group-Post: member; u=272793929; y=j65CKAcJD9T7js6TuKB32o10iWBNSe7GvDMOnejSJvI3wRRl\r\nX-Yahoo-Profile: andjarnic\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\n\r\n\r\n---2079400718-122398558-1408247320=:90082\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi all,\n\nI&#39;ve been reading up quite a bit on versioning, HATEOAS, forward/b=\r\nackward compatibility changes and versioning, etc with REST APIs. Some rece=\r\nnt docs are suggesting that more people are using versioning in the URI but=\r\n only for major version changes of the entire API and update the version ve=\r\nry rarely. I fall into the camp that the resource URI should not be version=\r\ned, instead using the Accept header and version the media-type (conneg).=A0=\r\n\n\nI do have a couple of questions though around all this.\n\nFrom some stuff =\r\nI&#39;ve read, it sounded like if I have a version 1 XML document, with say &lt;a&gt;=\r\n&lt;b&gt;data&lt;/b&gt;&lt;/a&gt;, and that was public, and then I wanted to add a new elemen=\r\nt to that doc (representation) (e.g. &lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt; or &lt;a&gt;&lt;b&gt;&lt;c/&gt;&lt;/b&gt;&lt;/a&gt;)=\r\n, existing clients should not break because they would simply ignore the ne=\r\nwly added element. However, I am seeing something somewhat different, in th=\r\nat we support JSON and XML, and in some cases, we&#39;re seeing exceptions when=\r\n the new document is trying to be marshaled into a POJO object. I should sa=\r\ny that we provide an XSD document that is used by our server side as well a=\r\ns clients to generate POJOs. We do so with Python and Java presently, but I=\r\n assume any language could take our XSD and generate POJOs, then use those =\r\nwhen marshaling/un-marshaling representations. So it seems, at least with X=\r\nML, there may be a way (I don&#39;t know off hand) to &quot;relax&quot; the requirement f=\r\nor newly added elements to match the generated POJO\n objects, such that a c=\r\nlient with our first version could actually receive the 2nd version documen=\r\nt, but would only see the elements that their first version POJO understood=\r\n during the marshaling process. Hope that makes sense. Anyway, I am confuse=\r\nd if this is how it should be, with both XML and JSON, or if the exception =\r\nwe&#39;re seeing means that our clients MUST indicate version 2 of the represen=\r\ntation?\n\nI think the right answer is that ALL of our resources should alway=\r\ns require the Accept header to include the version of the document, and fro=\r\nm day one, it should be v1, so that when v2 comes out, existing clients are=\r\n still using v1 (and we return v1 to them), but those clients that know abo=\r\nut v2, can update their clients to request the v2 representation. At least =\r\nfrom all that I&#39;ve read, this seems safer than assuming a client using our =\r\nXSDs to generate POJOs to use in their language, will get a properly marsha=\r\nled v2 representation within a v1 POJO.\n\nAlong similar lines.. when we add =\r\nnew items to an existing doc, then it&#39;s correct to bump the version value t=\r\no get the new representation.. right? That is, we&#39;re currently working thro=\r\nugh a beta program and we&#39;re taking customer feedback to adjust/add/fix/rem=\r\nove/etc various API resource representations. During this cycle, some of ou=\r\nr customers are still using version 1, some moved to version 2, and we&#39;re w=\r\norking on version 3 now. Is it &quot;ok&quot; to keep bumping the version in this cas=\r\ne? At some point we&#39;ll release a GA and whatever version that is, stays in =\r\nGA. However, our goal is to move to a more rapid release schedule, such tha=\r\nt we may be adding features (new resources) along with updating (extending/=\r\nadding to) existing resources (their representations). As we do this, I ass=\r\nume we should be bumping the versions of the specific resource representati=\r\nons that change (be it add, change or remove elements from the representati=\r\non).. does that make sense?\r\n---2079400718-122398558-1408247320=:90082\r\nContent-Type: text/html; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;body&gt;&lt;div style=3D&quot;color:#000; background-color:#fff; font-family:He=\r\nlveticaNeue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;fo=\r\nnt-size:12pt&quot;&gt;&lt;div id=3D&quot;yiv6191446839&quot;&gt;&lt;div&gt;&lt;div style=3D&quot;color: rgb(0, 0,=\r\n 0); font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Helvetica, Arial, &#39;Lucid=\r\na Grande&#39;, sans-serif; font-size: 12pt; background-color: rgb(255, 255, 255=\r\n);&quot;&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot;&gt;Hi all,&lt;/div&gt;&lt;di=\r\nv id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot;&gt;&lt;br id=3D&quot;yiv6191446839=\r\nyui_3_16_0_1_1408125632107_28546&quot;&gt;&lt;/div&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_=\r\n6_1408125632107_19&quot; style=3D&quot;color: rgb(0, 0, 0); font-size: 16px; font-fam=\r\nily: HelveticaNeue, &#39;Helvetica Neue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sa=\r\nns-serif; font-style: normal; background-color: transparent;&quot;&gt;I&#39;ve been rea=\r\nding up quite a bit on versioning, HATEOAS, forward/backward compatibility =\r\nchanges and versioning, etc with REST APIs. Some recent docs are suggesting=\r\n that\n more people are using versioning in the URI but only for major versi=\r\non changes of the entire API and update the version very rarely. I fall int=\r\no the camp that the resource URI should not be versioned, instead using the=\r\n Accept header and version the media-type\n (conneg).&nbsp;&lt;/div&gt;&lt;div id=3D&quot;=\r\nyiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0, 0, 0); f=\r\nont-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Helvetica, Ar=\r\nial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-color: tra=\r\nnsparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0_1_1408125632107_28548&quot;&gt;&lt;/div&gt;&lt;=\r\ndiv id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0=\r\n, 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Hel=\r\nvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-=\r\ncolor: transparent;&quot;&gt;I do have a couple of questions though around all this=\r\n.&lt;/div&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;colo=\r\nr: rgb(0, 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Ne=\r\nue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; bac=\r\nkground-color: transparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0_1_1408125632=\r\n107_28550&quot;&gt;&lt;/div&gt;&lt;div\n id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; st=\r\nyle=3D&quot;color: rgb(0, 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;H=\r\nelvetica Neue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: =\r\nnormal; background-color: transparent;&quot;&gt;From some stuff I&#39;ve read, it sound=\r\ned like if I have a version 1 XML document, with say &lt;a&gt;&lt;b&gt;data=\r\n&lt;/b&gt;&lt;/a&gt;, and that was public, and then I wanted to add a new e=\r\nlement to that doc (representation) (e.g. &lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;=\r\n/a&gt; or &lt;a&gt;&lt;b&gt;&lt;c/&gt;&lt;/b&gt;&lt;/a&gt;), existing clien=\r\nts should not break because they would simply ignore the newly added elemen=\r\nt. However, I am seeing something somewhat different, in that we support JS=\r\nON and XML, and in some cases, we&#39;re seeing exceptions when the new documen=\r\nt is trying to be marshaled into a POJO object. I should say that we provid=\r\ne an XSD document that is used by our server side as well as clients to gen=\r\nerate POJOs. We do\n so with Python and Java presently, but I assume any lan=\r\nguage could take our XSD and generate POJOs, then\n use those when marshalin=\r\ng/un-marshaling representations. So it seems, at least with XML, there may =\r\nbe a way (I don&#39;t know off hand) to &quot;relax&quot; the requirement for newly added=\r\n elements to match the generated POJO objects, such that a client with our =\r\nfirst version could actually receive the 2nd version document, but would on=\r\nly see the elements that their first version POJO understood during the mar=\r\nshaling process. Hope that makes sense. Anyway, I am confused if this is ho=\r\nw it should be, with both XML and JSON, or if the exception we&#39;re seeing me=\r\nans that our clients MUST indicate version 2 of the representation?&lt;/div&gt;&lt;d=\r\niv id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0,=\r\n 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Helv=\r\netica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-c=\r\nolor: transparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0_1_1408125632107_28603=\r\n&quot;&gt;&lt;/div&gt;&lt;div\n id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;co=\r\nlor: rgb(0, 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica =\r\nNeue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; b=\r\nackground-color: transparent;&quot;&gt;I think the right answer is that ALL of our =\r\nresources should always require the Accept header to include the version of=\r\n the document, and from day one, it should be v1, so that when v2 comes out=\r\n, existing clients are still using v1 (and we return v1 to them), but those=\r\n clients that know about v2, can update their clients to request the v2 rep=\r\nresentation. At least from all that I&#39;ve read, this seems safer than assumi=\r\nng a client using our XSDs to generate POJOs to use in their language, will=\r\n get a properly marshaled v2 representation within a v1 POJO.&lt;/div&gt;&lt;div id=\r\n=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0, 0, 0=\r\n); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Helvetica=\r\n, Arial,\n &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-color=\r\n: transparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0_1_1408125632107_28660&quot;&gt;&lt;/=\r\ndiv&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: =\r\nrgb(0, 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;=\r\n, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; backgr=\r\nound-color: transparent;&quot;&gt;Along similar lines.. when we add new items to an=\r\n existing doc, then it&#39;s correct to bump the version value to get the new r=\r\nepresentation.. right? That is, we&#39;re currently working through a beta prog=\r\nram and we&#39;re taking customer feedback to adjust/add/fix/remove/etc various=\r\n API resource representations. During this cycle, some of our customers are=\r\n still using version 1, some moved to version 2, and we&#39;re working on versi=\r\non 3 now. Is it &quot;ok&quot; to keep bumping the version in this case? At some poin=\r\nt we&#39;ll release a GA and whatever version that is, stays in GA. However, ou=\r\nr goal\n is to move to a more rapid release schedule, such that we may be ad=\r\nding features (new resources) along with\n updating (extending/adding to) ex=\r\nisting resources (their representations). As we do this, I assume we should=\r\n be bumping the versions of the specific resource representations that chan=\r\nge (be it add, change or remove elements from the representation).. does th=\r\nat make sense?&lt;/div&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; =\r\nstyle=3D&quot;color: rgb(0, 0, 0); font-size: 16px; font-family: HelveticaNeue, =\r\n&#39;Helvetica Neue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style=\r\n: normal; background-color: transparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0=\r\n_1_1408125632107_28662&quot;&gt;&lt;/div&gt;&lt;div id=3D&quot;yiv6191446839yui_3_16_0_6_14081256=\r\n32107_19&quot; style=3D&quot;color: rgb(0, 0, 0); font-size: 16px; font-family: Helve=\r\nticaNeue, &#39;Helvetica Neue&#39;, Helvetica, Arial, &#39;Lucida Grande&#39;, sans-serif; =\r\nfont-style: normal; background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div id=3D&quot;yi=\r\nv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0, 0, 0); fon=\r\nt-size: 16px; font-family: HelveticaNeue,\n &#39;Helvetica Neue&#39;, Helvetica, Ari=\r\nal, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-color: tran=\r\nsparent;&quot;&gt;&lt;br id=3D&quot;yiv6191446839yui_3_16_0_1_1408125632107_28605&quot;&gt;&lt;/div&gt;&lt;d=\r\niv id=3D&quot;yiv6191446839yui_3_16_0_6_1408125632107_19&quot; style=3D&quot;color: rgb(0,=\r\n 0, 0); font-size: 16px; font-family: HelveticaNeue, &#39;Helvetica Neue&#39;, Helv=\r\netica, Arial, &#39;Lucida Grande&#39;, sans-serif; font-style: normal; background-c=\r\nolor: transparent;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\r\n---2079400718-122398558-1408247320=:90082--\r\n\n"}}