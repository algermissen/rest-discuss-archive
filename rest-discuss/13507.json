{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":251253334,"authorName":"Jeff Robertson","from":"Jeff Robertson &lt;jeff.robertson@...&gt;","profile":"jeff_robertson","replyTo":"SENDER","senderId":"B0biRivX4vyDrYRtaAX72AZLQVmf_kyynEytZTv8pFX_T9KpZsTbEtjO_4x4jCBNR6W_2oNIEPcKz_HqRx4xvf6uPzHoThHEtFO9Ne_wiWk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"is Google&#39;s &quot;ClientLogin&quot; a good thing to imitate?","postDate":"1253666251","msgId":13507,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE2Y2MzMzhlMDkwOTIyMTczN3czYTYzZDc4Ymo2MDA1ZDY4YmRjYjhlN2EwQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":13506,"nextInTime":13508,"topicId":13507,"numMessagesInTopic":1,"msgSnippet":"I have a case that, at least superficially, seems similar to what Google solves for with their ClientLogin API for installed applications: ","rawEmail":"Return-Path: &lt;jeff.robertson@...&gt;\r\nX-Sender: jeff.robertson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96787 invoked from network); 23 Sep 2009 00:38:32 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m4.grp.re1.yahoo.com with QMQP; 23 Sep 2009 00:38:32 -0000\r\nX-Received: from unknown (HELO qw-out-1920.google.com) (74.125.92.148)\n  by mta3.grp.re1.yahoo.com with SMTP; 23 Sep 2009 00:38:31 -0000\r\nX-Received: by qw-out-1920.google.com with SMTP id 4so83204qwk.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 22 Sep 2009 17:37:31 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.19.82 with SMTP id z18mr723488qca.9.1253666251726; Tue, 22 \n\tSep 2009 17:37:31 -0700 (PDT)\r\nDate: Tue, 22 Sep 2009 20:37:31 -0400\r\nMessage-ID: &lt;16cc338e0909221737w3a63d78bj6005d68bdcb8e7a0@...&gt;\r\nTo: REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=UTF-8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jeff Robertson &lt;jeff.robertson@...&gt;\r\nSubject: is Google&#39;s &quot;ClientLogin&quot; a good thing to imitate?\r\nX-Yahoo-Group-Post: member; u=251253334; y=z4T5QD_hJJQYONhWuI5-tHlh_MoUiJTR0Fg8ZGUnzN0dbZJ8X6uSD8k\r\nX-Yahoo-Profile: jeff_robertson\r\n\r\nI have a case that, at least superficially, seems similar to what\nGoogle solves for with their ClientLogin API for installed\napplications:\n\nhttp://code.google.com/apis/accounts/docs/AuthForInstalledApps.html\n\nSo at first glance I&#39;m tempted to create a custom authentication that\nis vaguely similar to what is described at that link.\n\nBut.. how RESTful is this, really? Some concerns:\n\n- Although POSTing to ClientLogin notionally creates a &quot;resource&quot;,\nthis resource has no URI. It is identified by the Auth token, which is\nnot a URI. There is no way to GET it or DELETE it.\n\n- These resources (not even sure what to call them) need to be stored\nsomewhere. While I could conceive of an implementation that kept them\nin memory, like sessions in a stateful web app, this would of course\nviolate the statelessness constraint and mess with load-balancing in\nall the usual ways. I assume Google has plenty of room to store\nmillions of these things on their servers.\n\n- Does this whole thing *inherently* count as stateful regardless of\nhow they are stored? Does the very idea of forcing the client to &quot;log\nin&quot; before they start making requests for real data violate the\nconstraint no matter how you implement it?\n\n- There is a whole set of custom error codes that are embedded in the\nrepresentation of a failed login, would these be better handled as\nresponse codes (although the idea of custom response codes doesn&#39;t\nsound to good either.. violation of HTTP?), or in a header? Does it\nmatter?\n\nAm I missing anything?\n\n"}}