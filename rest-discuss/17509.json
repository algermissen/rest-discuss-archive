{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343254917,"authorName":"Sean Kennedy","from":"Sean Kennedy &lt;seandkennedy@...&gt;","profile":"seandkennedy","replyTo":"SENDER","senderId":"o4zzakLs7Sw4frHdmpYw1Cu3DnXSC-mQZX-DaWWJg_nX3ofWBU2pSlSF5A_ZVLE_80igsYe4ueaxQ8XQxvkaH33TLWE9GNE46W7LQypP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] SA-REST","postDate":"1304674538","msgId":17509,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDcwNjI3MC40Mjk5MS5xbUB3ZWIyODMwOS5tYWlsLnVrbC55YWhvby5jb20+","inReplyToHeader":"PDIwMTEwNTA1MjA1NzEzLjIxMmNkYTdmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDkxNzE2OC45MTcxNS5xbUB3ZWIyODMxNi5tYWlsLnVrbC55YWhvby5jb20+IDwyMDExMDUwNTIwNTcxMy4yMTJjZGE3Zi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":17508,"nextInTopic":17511,"prevInTime":17508,"nextInTime":17510,"topicId":17506,"numMessagesInTopic":8,"msgSnippet":"Hi Eric, Thanks for the time you took on that detailed response - appreciate it. My thesis is based on a mapping framework transforming XML Web Services (both","rawEmail":"Return-Path: &lt;seandkennedy@...&gt;\r\nX-Sender: seandkennedy@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9983 invoked from network); 6 May 2011 09:35:39 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 6 May 2011 09:35:39 -0000\r\nX-Received: from unknown (HELO nm10-vm0.bullet.mail.ukl.yahoo.com) (217.146.183.242)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 May 2011 09:35:39 -0000\r\nX-Received: from [217.146.183.210] by nm10.bullet.mail.ukl.yahoo.com with NNFMP; 06 May 2011 09:35:39 -0000\r\nX-Received: from [217.146.183.172] by tm3.bullet.mail.ukl.yahoo.com with NNFMP; 06 May 2011 09:35:39 -0000\r\nX-Received: from [127.0.0.1] by omp1013.mail.ukl.yahoo.com with NNFMP; 06 May 2011 09:35:38 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 996671.9726.bm@...\r\nX-Received: (qmail 48038 invoked by uid 60001); 6 May 2011 09:35:38 -0000\r\nMessage-ID: &lt;706270.42991.qm@...&gt;\r\nX-YMail-OSG: hNzNy0EVM1kqQ0IBXo3AFfWuhfOogMpUI.Ew7514ZdNYZdl\n DBv1Qj0GY1J0ukGhrTUU_jsJs2LIUrRrmAXmHxumJml2pp3.gPuBKt7bGwRh\n _yVopqLAbJjBbOHOn4V5ULHAcf21EL6kaKbJI2nn5rJ5r1QqIq9KTm4aXBd.\n 9H9_.cM4QxrMyHjfCzR7L_OKSsF4z1.8wz.aCatd2Co_pTR5J4IoWGBV0B8k\n d6fxSRwM_AFoZkx4C7LmZBZfKGVbR_0QJfWh3wf3iYBN1YPHmMpvB29tXrMf\n rjUx68KoYwk9K0nHlJbSM143vpZzBTo77wah9abTyQ1kn4nDKglHkJrMtnmD\n 2QKycwwmt46mneBAZ9DwYrGp_6aUm\r\nX-Received: from [92.251.162.112] by web28309.mail.ukl.yahoo.com via HTTP; Fri, 06 May 2011 10:35:38 BST\r\nX-Mailer: YahooMailRC/559 YahooMailWebService/0.8.111.303096\r\nReferences: &lt;917168.91715.qm@...&gt; &lt;20110505205713.212cda7f.eric@...&gt;\r\nDate: Fri, 6 May 2011 10:35:38 +0100 (BST)\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;20110505205713.212cda7f.eric@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-61290451-1304674538=:42991&quot;\r\nFrom: Sean Kennedy &lt;seandkennedy@...&gt;\r\nSubject: Re: [rest-discuss] SA-REST\r\nX-Yahoo-Group-Post: member; u=343254917; y=vHThsiAbCzICwSJb7oUxdKa-MF3uOsxvqabP7FlyOa7VvkypKm8G\r\nX-Yahoo-Profile: seandkennedy\r\n\r\n\r\n--0-61290451-1304674538=:42991\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Eric,\n     Thanks for the time you took on that detailed response - appr=\r\neciate it. My \nthesis is based on a mapping framework transforming XML Web =\r\nServices (both SOAP \nand POX) to RESTful HTTP format. This framework has tw=\r\no stages: a) a \nconfiguration stage that sets up a mapping file and b) a ru=\r\nn-time adapter that \ntransforms the messages based on the mapping file. \n\n =\r\n   The advantages are that this framework enables the Web architecture (POS=\r\nT \ncan be replaced with GET in certain situations); the framework helps wit=\r\nh \ngradual migration from SOAP/POX to RESTful HTTP WS. It has constraints o=\r\nf \ncourse, principally: URI limits for GET/DELETE and SOAP/POX POSTs which =\r\nmap \nlogically to multiple RESTful URI&#39;s are left untouched (i.e. as a POST=\r\n).\n    Where the Semantic Web comes into it is in the mapping file that inf=\r\norms the \nrun-time adapter. The first version had a manual setup where the =\r\nuser matched \nthe XML WS operations to RESTful HTTP verbs. The second/curre=\r\nnt version uses the \nSemantic Web to automate this process. Currently, I us=\r\ne SAWSDL for the XML WS \nside and hRESTS/MicroWSMO on the RESTful WS side. =\r\nA tool called Core Dashboard \nenables me to annotate both services [1]. Bot=\r\nh sides point to the &quot;conceptually&quot; \nhigher semantic ontology layer (WSMO-L=\r\nite is the standard I use for this layer). \n\n    In my thesis I will have t=\r\no cover the alternatives and originally SA-REST \nappeared to be that. Howev=\r\ner, the W3C submission is different to earlier \npublications. My informatio=\r\nn is that it is a microformat (hRESTS/MicroWSMO) \nversus RDFa (RDFa/SA-REST=\r\n) option. So if that is the case is my logic below \ncorrect:\n\n\t1. It would =\r\nappear that SA-REST is equivalent to (hRESTS + MicroWSMO). It has a \nservic=\r\ne model similar to hRESTS and using the SA-REST properties (domain-rel, \nse=\r\nm-rel and sem-class) can point to the semantic layer (as MicroWSMO does).\n\t=\r\n2. Then using RDFa, SA-REST has the ability to be serialised from XHTML as =\r\n \nRDF.\nThanks again,\nSean.\n\nPS A lifting is an XSLT transformation that map=\r\ns e.g. a SOAP message to the \n&quot;conceptually higher&quot; semantic layer (an RDF =\r\nfile); a lowering is the opposite. \n\n\n[1] Core Dashboard, http://coconut.ti=\r\ne.nl:8080/dashboard/#1304670463179\n\n\n\n\n________________________________\nFro=\r\nm: Eric J. Bowman &lt;eric@...&gt;\nTo: Sean Kennedy &lt;seandkennedy@ya=\r\nhoo.co.uk&gt;\nCc: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\nSent: F=\r\nri, 6 May, 2011 3:57:13\nSubject: Re: [rest-discuss] SA-REST\n\nSean Kennedy w=\r\nrote:\n&gt;\n&gt; I am trying to write up a section of my thesis on SA-REST.\n&gt;\n\nHop=\r\nefully, explaining to the REST community what this is, and what it\nhas to d=\r\no with REST?  ;-)  What&#39;s the overall topic of your thesis?\n\n&gt;\n&gt; I have a f=\r\new q&#39;s that I am looking for help with:\n&gt; \n\nWe&#39;ve bandied-about the issue o=\r\nf whether or not IDLs have any place in\nREST, many times.  Since I don&#39;t se=\r\ne the point of an IDL when using the\nhypertext constraint, I don&#39;t see the =\r\npoint of IDL-as-microformat,\neither.  I&#39;ve also never seen the point of a m=\r\nachine-readable service\ndocument as an endpoint user-agents need to consult=\r\n before taking\naction -- what results is some other architectural style (wh=\r\nere the\nsemantics of the URI mappings vary based on some hash table at an\n&quot;=\r\nentry point&quot; URI, instead of remaining RESTfully static).\n\nSo I can&#39;t answe=\r\nr your questions, since I don&#39;t know how this &quot;fits in&quot;\nwith REST, either. =\r\n What hRESTS/SA-REST look like to me, is kludged-in\ntooling support to more=\r\n efficiently produce the HTTP APIs most folks\n*call* REST APIs these days. =\r\n Remember, I don&#39;t judge APIs by whether\nthey&#39;re RESTful, only how well the=\r\ny&#39;re suited to their purposes, so I&#39;m\nnot scorning any project which may re=\r\nsult in better APIs -- my *opinion*\nis that this approach may even lead som=\r\ne people _to_ REST&#39;s hypertext\nconstraint, so it&#39;s probably a good thing, j=\r\nust mis-labeled.\n\nWe&#39;ve also discussed machine-readability many times; ther=\r\ne are those\nwho prefer machine-targeted data types, and those who prefer RD=\r\nFa.  I\nsee RDFa as a superior solution to microformats, for any purpose, an=\r\nd\nhRESTS is another example of why -- instead of a general-purpose parsing\n=\r\nmodel, each microformat has its own unique parsing model, usually\ndefined a=\r\ns XSLT -- as is the case with hRESTS/SA-REST, which GRDDL-maps\nits microfor=\r\nmat to RDF, begging the question &quot;why not just use RDFa?&quot;\n\nInteroperability=\r\n is a concern; modular XHTML encompasses Xforms, which\ngives the ability to=\r\n &quot;describe&quot; more HTTP-method-rich APIs, but those\ntokens collide with hREST=\r\nS -- which really shouldn&#39;t use class=3D&#39;label&#39;\nbecause that collides with =\r\n&lt;label&gt;, as well.  The reason it&#39;s easier to\ncreate RDF vocabularies than i=\r\nt is to create markup languages (or even\nmicroformats), is the vocabulary a=\r\nuthor doesn&#39;t have to worry about if\nbrowsers&#39; javascript forms-modules res=\r\nerve &#39;label&#39; as a keyword, etc.\n\nIn a nutshell, I don&#39;t see how using hREST=\r\nS/SA-REST would result in the\nRESTful APIs I&#39;ve done using Xforms/RDFa; alt=\r\nhough by solving what I\nwho doesn&#39;t use tooling for API development conside=\r\nrs a non-problem, I\ncan see how I could&#39;ve produced functionally-equivalent=\r\n HTTP APIs in a\nfraction of the time.  Which seems to be the problem with a=\r\nny effort to\nmass-produce RESTful APIs, what&#39;s lost in translation is all t=\r\nhe design-\nfor-longevity goodness which distinguishes REST APIs from HTTP A=\r\nPIs.\n\nThe hRESTS/SA-REST approach intrigues me from an HTTP tinkerer\nperspe=\r\nctive, supporting server-parsed server-configuration-on-the-fly.\nOn one han=\r\nd, this would philosophically violate separation of concerns;\nOTOH, long-te=\r\nrm maintenance of Web systems based on static files may\nbenefit from having=\r\n fewer files to edit.\n\n&gt;\n&gt; 1. Where does SA-REST fit in? The service model =\r\n[1] looks very\n&gt; similar to the service model of hRESTS [2]. According to t=\r\nhe diagram\n&gt; at the start of  [2], SA-REST sits on top of hRESTS - why then=\r\n does\n&gt; SA-REST  define a similar service model? \n&gt; \n\nPerhaps you should as=\r\nk this of the authors, since they&#39;re the same?\n\n&gt;\n&gt; 2. According to [2], SA=\r\n-REST supports faceted search. Where are\n&gt; &quot;p-lang-binding&quot; and &quot;data-forma=\r\nt&quot; [2] coming from? Why is there no\n&gt; mention of them in the W3C Submission=\r\n ? [3].\n&gt;\n\nThat is a good question, and if it&#39;s machine readable, then wher=\r\ne are\nthose tokens like PHP and Java defined and how is versioning accounte=\r\nd\nfor?  I understand the problem of mashing up services which use\ndifferent=\r\n formats, but I don&#39;t understand the rationale of solving this\nby making se=\r\nrvices searchable by data format (or any other &quot;facet&quot;),\nlet alone what it =\r\nhas to do with REST other than attaching that name to\nnew IBM products whic=\r\nh support this feature.  Seems like tight coupling\nto me, hence my confusio=\r\nn on calling it REST...\n\nParticularly when their example of a RESTful Web S=\r\nervice is a JSON-RPC\nendpoint.\n\n&gt;\n&gt; 3. In its service model [1], there is n=\r\no  lifting/lowering. How is\n&gt; this done when using SA-REST?\n&gt;\n\nWhat *are* l=\r\nifting and lowering?\n\n-Eric\n\r\n--0-61290451-1304674538=:42991\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;style type=3D&quot;text/css&quot;&gt;&lt;!-- DIV {margin:0px;} --&gt;&lt;/style&gt;&lt;/he=\r\nad&gt;&lt;body&gt;&lt;div style=3D&quot;font-family:times new roman,new york,times,serif;fon=\r\nt-size:12pt&quot;&gt;&lt;div&gt;Hi Eric,&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp; Thanks for the time =\r\nyou took on that detailed response - appreciate it. My thesis is based on a=\r\n mapping framework transforming XML Web Services (both SOAP and POX) to RES=\r\nTful HTTP format. This framework has two stages: a) a configuration stage t=\r\nhat sets up a mapping file and b) a run-time adapter that transforms the me=\r\nssages based on the mapping file. &lt;br&gt;&nbsp;&nbsp;&nbsp; The advantages are=\r\n that this framework enables the Web architecture (POST can be replaced wit=\r\nh GET in certain situations); the framework helps with gradual migration fr=\r\nom SOAP/POX to RESTful HTTP WS. It has constraints of course, principally: =\r\nURI limits for GET/DELETE and SOAP/POX POSTs which map logically to multipl=\r\ne RESTful URI&#39;s are left untouched (i.e. as a\n POST).&lt;br&gt;&nbsp;&nbsp;&nbsp;=\r\n Where the Semantic Web comes into it is in the mapping file that informs t=\r\nhe run-time adapter. The first version had a manual setup where the user ma=\r\ntched the XML WS operations to RESTful HTTP verbs. The second/current versi=\r\non uses the Semantic Web to automate this process. Currently, I use SAWSDL =\r\nfor the XML WS side and hRESTS/MicroWSMO on the RESTful WS side. A tool cal=\r\nled Core Dashboard enables me to annotate both services [1]. Both sides poi=\r\nnt to the &quot;conceptually&quot; higher semantic ontology layer (WSMO-Lite is the s=\r\ntandard I use for this layer). &lt;br&gt;&nbsp;&nbsp;&nbsp; In my thesis I will h=\r\nave to cover the alternatives and originally SA-REST appeared to be that. H=\r\nowever, the W3C submission is different to earlier publications. My informa=\r\ntion is that it is a microformat (hRESTS/MicroWSMO) versus RDFa (RDFa/SA-RE=\r\nST) option. So if that is the case i&lt;span style=3D&quot;text-decoration: underli=\r\nne;&quot;&gt;s my logic below\n correct&lt;/span&gt;:&lt;br&gt;&lt;ol&gt;&lt;li&gt;It would appear that SA-R=\r\nEST is equivalent to (hRESTS + MicroWSMO). It has a service model similar t=\r\no hRESTS and using the SA-REST properties (&lt;span style=3D&quot;font-style: itali=\r\nc;&quot;&gt;domain-rel, sem-rel&lt;/span&gt; and &lt;span style=3D&quot;font-style: italic;&quot;&gt;sem-=\r\nclass&lt;/span&gt;) can point to the semantic layer (as MicroWSMO does).&lt;/li&gt;&lt;li&gt;=\r\nThen using RDFa, SA-REST has the ability to be serialised from XHTML as&nbs=\r\np; RDF.&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;Thanks again,&lt;br&gt;Sean.&lt;br&gt;&lt;br&gt;PS A lifting is an XSLT =\r\ntransformation that maps e.g. a SOAP message to the &quot;conceptually higher&quot; s=\r\nemantic layer (an RDF file); a lowering is the opposite. &lt;br&gt;&lt;br&gt;[1] Core D=\r\nashboard, &lt;a href=3D&quot;http://coconut.tie.nl:8080/dashboard/#1304670463179&quot;&gt;h=\r\nttp://coconut.tie.nl:8080/dashboard/#1304670463179&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family: times new roman,new york,times,serif; font-size: 12pt;&quot;&gt;&lt;b=\r\nr&gt;&lt;div style=3D&quot;font-family: arial,helvetica,sans-serif; font-size: 13px;&quot;&gt;=\r\n&lt;font size=3D&quot;2&quot;\n face=3D&quot;Tahoma&quot;&gt;&lt;hr size=3D&quot;1&quot;&gt;&lt;b&gt;&lt;span style=3D&quot;font-wei=\r\nght: bold;&quot;&gt;From:&lt;/span&gt;&lt;/b&gt; Eric J. Bowman &lt;eric@...&gt;&lt;b=\r\nr&gt;&lt;b&gt;&lt;span style=3D&quot;font-weight: bold;&quot;&gt;To:&lt;/span&gt;&lt;/b&gt; Sean Kennedy &lt;sea=\r\nndkennedy@...&gt;&lt;br&gt;&lt;b&gt;&lt;span style=3D&quot;font-weight: bold;&quot;&gt;Cc:&lt;/spa=\r\nn&gt;&lt;/b&gt; Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;&lt;br&gt;&lt;b&gt;&lt;sp=\r\nan style=3D&quot;font-weight: bold;&quot;&gt;Sent:&lt;/span&gt;&lt;/b&gt; Fri, 6 May, 2011 3:57:13&lt;b=\r\nr&gt;&lt;b&gt;&lt;span style=3D&quot;font-weight: bold;&quot;&gt;Subject:&lt;/span&gt;&lt;/b&gt; Re: [rest-discu=\r\nss] SA-REST&lt;br&gt;&lt;/font&gt;&lt;br&gt;Sean Kennedy wrote:&lt;br&gt;&gt;&lt;br&gt;&gt; I am trying t=\r\no write up a section of my thesis on SA-REST.&lt;br&gt;&gt;&lt;br&gt;&lt;br&gt;Hopefully, exp=\r\nlaining to the REST community what this is, and what it&lt;br&gt;has to do with R=\r\nEST?&nbsp; ;-)&nbsp; What&#39;s the overall topic of your thesis?&lt;br&gt;&lt;br&gt;&gt;&lt;b=\r\nr&gt;&gt; I have a few q&#39;s that I am looking for help with:&lt;br&gt;&gt; &lt;br&gt;&lt;br&gt;We=\r\n&#39;ve bandied-about the issue of whether or not IDLs have any place in&lt;br&gt;RES=\r\nT, many times.&nbsp;\n Since I don&#39;t see the point of an IDL when using the&lt;=\r\nbr&gt;hypertext constraint, I don&#39;t see the point of IDL-as-microformat,&lt;br&gt;ei=\r\nther.&nbsp; I&#39;ve also never seen the point of a machine-readable service&lt;br=\r\n&gt;document as an endpoint user-agents need to consult before taking&lt;br&gt;actio=\r\nn -- what results is some other architectural style (where the&lt;br&gt;semantics=\r\n of the URI mappings vary based on some hash table at an&lt;br&gt;&quot;entry point&quot; U=\r\nRI, instead of remaining RESTfully static).&lt;br&gt;&lt;br&gt;So I can&#39;t answer your q=\r\nuestions, since I don&#39;t know how this &quot;fits in&quot;&lt;br&gt;with REST, either.&nbsp;=\r\n What hRESTS/SA-REST look like to me, is kludged-in&lt;br&gt;tooling support to m=\r\nore efficiently produce the HTTP APIs most folks&lt;br&gt;*call* REST APIs these =\r\ndays.&nbsp; Remember, I don&#39;t judge APIs by whether&lt;br&gt;they&#39;re RESTful, onl=\r\ny how well they&#39;re suited to their purposes, so I&#39;m&lt;br&gt;not scorning any pro=\r\nject which may result in better APIs -- my *opinion*&lt;br&gt;is that this approa=\r\nch may even\n lead some people _to_ REST&#39;s hypertext&lt;br&gt;constraint, so it&#39;s =\r\nprobably a good thing, just mis-labeled.&lt;br&gt;&lt;br&gt;We&#39;ve also discussed machin=\r\ne-readability many times; there are those&lt;br&gt;who prefer machine-targeted da=\r\nta types, and those who prefer RDFa.&nbsp; I&lt;br&gt;see RDFa as a superior solu=\r\ntion to microformats, for any purpose, and&lt;br&gt;hRESTS is another example of =\r\nwhy -- instead of a general-purpose parsing&lt;br&gt;model, each microformat has =\r\nits own unique parsing model, usually&lt;br&gt;defined as XSLT -- as is the case =\r\nwith hRESTS/SA-REST, which GRDDL-maps&lt;br&gt;its microformat to RDF, begging th=\r\ne question &quot;why not just use RDFa?&quot;&lt;br&gt;&lt;br&gt;Interoperability is a concern; m=\r\nodular XHTML encompasses Xforms, which&lt;br&gt;gives the ability to &quot;describe&quot; m=\r\nore HTTP-method-rich APIs, but those&lt;br&gt;tokens collide with hRESTS -- which=\r\n really shouldn&#39;t use class=3D&#39;label&#39;&lt;br&gt;because that collides with &lt;lab=\r\nel&gt;, as well.&nbsp; The reason it&#39;s easier to&lt;br&gt;create RDF vocabularies=\r\n than\n it is to create markup languages (or even&lt;br&gt;microformats), is the v=\r\nocabulary author doesn&#39;t have to worry about if&lt;br&gt;browsers&#39; javascript for=\r\nms-modules reserve &#39;label&#39; as a keyword, etc.&lt;br&gt;&lt;br&gt;In a nutshell, I don&#39;t=\r\n see how using hRESTS/SA-REST would result in the&lt;br&gt;RESTful APIs I&#39;ve done=\r\n using Xforms/RDFa; although by solving what I&lt;br&gt;who doesn&#39;t use tooling f=\r\nor API development considers a non-problem, I&lt;br&gt;can see how I could&#39;ve pro=\r\nduced functionally-equivalent HTTP APIs in a&lt;br&gt;fraction of the time.&nbsp;=\r\n Which seems to be the problem with any effort to&lt;br&gt;mass-produce RESTful A=\r\nPIs, what&#39;s lost in translation is all the design-&lt;br&gt;for-longevity goodnes=\r\ns which distinguishes REST APIs from HTTP APIs.&lt;br&gt;&lt;br&gt;The hRESTS/SA-REST a=\r\npproach intrigues me from an HTTP tinkerer&lt;br&gt;perspective, supporting serve=\r\nr-parsed server-configuration-on-the-fly.&lt;br&gt;On one hand, this would philos=\r\nophically violate separation of concerns;&lt;br&gt;OTOH, long-term maintenance\n o=\r\nf Web systems based on static files may&lt;br&gt;benefit from having fewer files =\r\nto edit.&lt;br&gt;&lt;br&gt;&gt;&lt;br&gt;&gt; 1. Where does SA-REST fit in? The service mode=\r\nl [1] looks very&lt;br&gt;&gt; similar to the service model of hRESTS [2]. Accord=\r\ning to the diagram&lt;br&gt;&gt; at the start of&nbsp; [2], SA-REST sits on top o=\r\nf hRESTS - why then does&lt;br&gt;&gt; SA-REST&nbsp; define a similar service mod=\r\nel? &lt;br&gt;&gt; &lt;br&gt;&lt;br&gt;Perhaps you should ask this of the authors, since they=\r\n&#39;re the same?&lt;br&gt;&lt;br&gt;&gt;&lt;br&gt;&gt; 2. According to [2], SA-REST supports fac=\r\neted search. Where are&lt;br&gt;&gt; &quot;p-lang-binding&quot; and &quot;data-format&quot; [2] comin=\r\ng from? Why is there no&lt;br&gt;&gt; mention of them in the W3C Submission ? [3]=\r\n.&lt;br&gt;&gt;&lt;br&gt;&lt;br&gt;That is a good question, and if it&#39;s machine readable, the=\r\nn where are&lt;br&gt;those tokens like PHP and Java defined and how is versioning=\r\n accounted&lt;br&gt;for?&nbsp; I understand the problem of mashing up services wh=\r\nich use&lt;br&gt;different formats, but I don&#39;t understand the rationale\n of solv=\r\ning this&lt;br&gt;by making services searchable by data format (or any other &quot;fac=\r\net&quot;),&lt;br&gt;let alone what it has to do with REST other than attaching that na=\r\nme to&lt;br&gt;new IBM products which support this feature.&nbsp; Seems like tigh=\r\nt coupling&lt;br&gt;to me, hence my confusion on calling it REST...&lt;br&gt;&lt;br&gt;Partic=\r\nularly when their example of a RESTful Web Service is a JSON-RPC&lt;br&gt;endpoin=\r\nt.&lt;br&gt;&lt;br&gt;&gt;&lt;br&gt;&gt; 3. In its service model [1], there is no&nbsp; lifti=\r\nng/lowering. How is&lt;br&gt;&gt; this done when using SA-REST?&lt;br&gt;&gt;&lt;br&gt;&lt;br&gt;Wh=\r\nat *are* lifting and lowering?&lt;br&gt;&lt;br&gt;-Eric&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;/body&gt;&lt;/=\r\nhtml&gt;\r\n--0-61290451-1304674538=:42991--\r\n\n"}}