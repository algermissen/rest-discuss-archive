{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"q1tG4qpwCcHRCiR6tWBLjb2xvGWHKapx_p0ymx_JnIYrkwa24HK09T69mEJpiv2BJ2_SBu_EU1U1ta0r9ZcYWD3eHVGA9M6CYi3NaQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Request for feedback: REST for the Rest of Us","postDate":"1167848866","msgId":7412,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVuZ3NqMit0MGh1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQ1OWIzZGVlLjQ5ZDg1MzNkLjQ1ZGYuMzMwMkBteC5nb29nbGUuY29tPg=="},"prevInTopic":7409,"nextInTopic":7414,"prevInTime":7411,"nextInTime":7413,"topicId":7355,"numMessagesInTopic":134,"msgSnippet":"I think a lot of the things you are objecting to actually are good rules of thumb that joe-blow-developer can easily understand and follow. While these rules","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 69858 invoked from network); 3 Jan 2007 18:27:48 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m20.grp.scd.yahoo.com with QMQP; 3 Jan 2007 18:27:48 -0000\r\nReceived: from unknown (HELO n28b.bullet.scd.yahoo.com) (66.94.237.30)\n  by mta6.grp.scd.yahoo.com with SMTP; 3 Jan 2007 18:27:48 -0000\r\nReceived: from [209.73.164.86] by n28.bullet.scd.yahoo.com with NNFMP; 03 Jan 2007 18:27:47 -0000\r\nReceived: from [66.218.66.80] by t8.bullet.scd.yahoo.com with NNFMP; 03 Jan 2007 18:27:47 -0000\r\nDate: Wed, 03 Jan 2007 18:27:46 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;engsj2+t0hu@...&gt;\r\nIn-Reply-To: &lt;459b3dee.49d8533d.45df.3302@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: Request for feedback: REST for the Rest of Us\r\nX-Yahoo-Group-Post: member; u=221173245; y=OmoT5flvUSRYvEVxY232F2gFoWF14LAWZRz8AOgsgL1cXHqWug\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nI think a lot of the things you are objecting to actually are good\nrules of=\r\n thumb that joe-blow-developer can easily understand and\nfollow. While thes=\r\ne rules aren&#39;t necessarily constraints imposed by\nREST, they aren&#39;t in conf=\r\nlict with it either. Most of the article&#39;s\ncontent is characterized as &quot;pat=\r\nterns&quot; as opposed to rules or concepts\ndefined by REST. So the author is be=\r\ning fairly clear about this IMO.\n\nI think this is a really good idea and is=\r\n much needed. The average\ndeveloper would probably appreciate and understan=\r\nd these simple rules\nand patterns a lot more easily than an Architectural S=\r\ntyle. As long as\nthe author is clear that these patterns are not defined by=\r\n REST and\nthat there are other ways to build RESTful interfaces then I thin=\r\nk its\nfine.\n\nMany people learn by example, and at this point the bad exampl=\r\nes\noutnumber the good. We need more good examples.\n\nAndrew Wahbe\n\n--- In re=\r\nst-discuss@yahoogroups.com, &quot;S. Mike Dierken&quot; &lt;dierken@...&gt;\nwrote:\n&gt;\n&gt; &gt; Th=\r\nis introduction will cover some basics of HTTP [...]\n&gt; You probably should =\r\nmention that REST does not mean &quot;HTTP&quot; and\nmention why\n&gt; you chose to talk =\r\nabout HTTP (like, it display many of the\ncharacteristics\n&gt; described by the=\r\n REST style).\n&gt; \n&gt; &gt; Compare this to mounted network drives, whose names ha=\r\nve no way of\nbeing\n&gt; resolved by a recipient. \n&gt; Huh? I would need an expla=\r\nnation of how that&#39;s similar, so this could be\n&gt; clarified or replaced with=\r\n something more understandable.\n&gt; \n&gt; &gt; Similarly, we can also query a compl=\r\nex resource, such as a blog,\nto get\n&gt; parts of the data:\n&gt; This isn&#39;t query=\r\ning a resource, it simply /is/ a resource. You might say\n&gt; something like a=\r\n resource can represent complex information like\n&quot;all the\n&gt; blog comments a=\r\nfter a particular timestamp written by &#39;anonymous&#39; &quot;. The\n&gt; client doesn&#39;t =\r\nneed to know just how complex things could be for the\nserver\n&gt; - it just do=\r\nes a GET.\n&gt; \n&gt; &gt; All data resources support GET, but not all behavioral res=\r\nources do. \n&gt; What&#39;s a &quot;data resource&quot; compared to &quot;behavioral resource&quot; - =\r\nyou might\n&gt; rephrase that to say that some resources are read-only.\n&gt; \n&gt; &gt; =\r\nWhile a GET request cannot have side-effects, it can return only\nparts of\n&gt;=\r\n the resource.  \n&gt; &gt; This means that GET is both an atomic read, as well as=\r\n a query\noperation.\n&gt; This is not correct - GET does not return parts of a =\r\nresource. At\nleast, not\n&gt; the way you suggest with query terms.\n&gt; You might=\r\n want to describe that a GET could be a simple static file or a\n&gt; complex q=\r\nuery operation - both are simply retrievals of data.\n&gt; \n&gt; &gt; If two PUT oper=\r\nations occur simultaneously, one of them will win and\n&gt; determine the final=\r\n state of the resource. \n&gt; What happens to the other one? I think that both=\r\n win. REST gives\nrise to all\n&gt; sorts of win-win situations.\n&gt; \n&gt; &gt; In the c=\r\nase of two simultaneous DELETE operations, one of them may\nfail\n&gt; since the=\r\n resource \n&gt; &gt; will have already been deleted.\n&gt; Nope. It&#39;s important to re=\r\nalize that /both/ succeed. There should be no\n&gt; error code. The protocol do=\r\nes not assume a &quot;locate object or fail,\nactivate\n&gt; object or fail, invoke m=\r\nethod on object&quot; - it just says &quot;make sure the\n&gt; resource is gone when the =\r\nrequest completes&quot;. An absent resource is\njust as\n&gt; gone as a recently dele=\r\nted one.\n&gt; \n&gt; &gt; The POST operation is very generic and no specific meaning =\r\ncan be\nattached\n&gt; to it. \n&gt; There is meaning associated with it, and unique=\r\n aspects regarding\n&gt; repeatability and caching.\n&gt; \n&gt; &gt; In general, use POST=\r\n when only a subset of a resource needs to be\nmodified\n&gt; and it cannot be a=\r\nccessed \n&gt; &gt; as its own resource; or when the equivalent of a method call m=\r\nust be\n&gt; exposed.\n&gt; Rather than suggesting a generic method calls is approp=\r\nriate via POST,\n&gt; perhaps you could narrow it down to modification operatio=\r\nns that\ndon&#39;t fit\n&gt; into PUT or DELETE.\n&gt; \n&gt; &gt; We can also update individua=\r\nl properties of the entry, because\nthey are\n&gt; exposed as nested resources. =\r\n\n&gt; There isn&#39;t a concept of a &#39;nested resource&#39;. And this example only\nwork=\r\ns\n&gt; because the server implements it that way, it&#39;s not part of REST or\nHTT=\r\nP (or\n&gt; even most Web server frameworks unfortunately). And there is no\nreq=\r\nuirement\n&gt; that the second resource that is the &#39;property of the entry&#39; use=\r\n a\nURI with\n&gt; paths - it could just as easily be:\n&gt;  PUT http://myserver/my=\r\naddressbook/johndoe?prop=3D27\n&gt;  PUT http://myserver/myaddressbook/phones?u=\r\nser=3Djohndoe&type=3Dwork\n&gt; \n&gt; \n&gt; \n&gt; &gt; -----Original Message-----\n&gt; &gt; From:=\r\n rest-discuss@yahoogroups.com \n&gt; &gt; [mailto:rest-discuss@yahoogroups.com] On=\r\n Behalf Of Steve G. Bjorg\n&gt; &gt; Sent: Monday, January 01, 2007 9:28 PM\n&gt; &gt; To=\r\n: rest-discuss@yahoogroups.com\n&gt; &gt; Subject: [rest-discuss] Request for feed=\r\nback: REST for the Rest of Us\n&gt; &gt; \n&gt; &gt; I&#39;ve created a short tutorial on RES=\r\nT and some common \n&gt; &gt; resource/service patterns.  The tutorial is based on=\r\n my \n&gt; &gt; experience with designing the API for our DekiWiki application [1]=\r\n.\n&gt; &gt; \n&gt; &gt; I would welcome feedback on the accuracy of the content.  The \n&gt;=\r\n &gt; tutorial will be used to introduce developers to REST and \n&gt; &gt; establish=\r\n a common framework for designing services.\n&gt; &gt; http://doc.opengarden.org/A=\r\nrticles/REST_for_the_Rest_of_Us\n&gt; &gt; \n&gt; &gt; Thanks in advance for taking a loo=\r\nk at it.\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Cheers,\n&gt; &gt; \n&gt; &gt; - Steve\n&gt; &gt; \n&gt; &gt; [1] http://doc.ope=\r\nngarden.org/DekiWiki_API/Reference/DekiWiki\n&gt; &gt; \n&gt; &gt; --------------\n&gt; &gt; Ste=\r\nve G. Bjorg\n&gt; &gt; http://www.mindtouch.com\n&gt; &gt; http://www.opengarden.org\n&gt; &gt; =\r\n\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;  \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}