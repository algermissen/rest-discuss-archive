{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":265354406,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean+rest-discuss@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"rldP01pBZS80ODrDfkG_rJXvVSmnTyCXujFRx3tZO7Q8VYQW4I3tD9pfxh-zQl_4EzpSD2UEiU5BEE-sZo81SQgRKGXDRmzizJIXWLFowG8LjBg0Cw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Request Header vs. Query String","postDate":"1145043791","msgId":5954,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGUxb3UwZis2anFpQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyNUIzOUFGLTUxQzEtNENGMy04QzQyLUI5M0I0NDgyQkU3NEBnYml2LmNvbT4="},"prevInTopic":5921,"nextInTopic":5975,"prevInTime":5953,"nextInTime":5955,"topicId":5844,"numMessagesInTopic":23,"msgSnippet":"... I feel quite comfortable with the concept of properly supporting Content-Type in the request header but also permitting what is, in effect, an overload","rawEmail":"Return-Path: &lt;alan.dean+rest-discuss@...&gt;\r\nX-Sender: alan.dean+rest-discuss@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 14416 invoked from network); 14 Apr 2006 19:43:12 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m26.grp.scd.yahoo.com with QMQP; 14 Apr 2006 19:43:12 -0000\r\nReceived: from unknown (HELO n22a.bullet.scd.yahoo.com) (66.94.237.51)\n  by mta6.grp.scd.yahoo.com with SMTP; 14 Apr 2006 19:43:12 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.6] by n22.bullet.scd.yahoo.com with NNFMP; 14 Apr 2006 19:43:12 -0000\r\nReceived: from [66.218.66.71] by t6.bullet.scd.yahoo.com with NNFMP; 14 Apr 2006 19:43:12 -0000\r\nDate: Fri, 14 Apr 2006 19:43:11 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;e1ou0f+6jqi@...&gt;\r\nIn-Reply-To: &lt;725B39AF-51C1-4CF3-8C42-B93B4482BE74@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean+rest-discuss@...&gt;\r\nSubject: Re: Request Header vs. Query String\r\nX-Yahoo-Group-Post: member; u=265354406; y=CnalMb6ezp8mdKeAWtl1pkptRadoZz450l1Q5sKb90W6DE24YJR8cI3X\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\n--- In rest-discuss@yahoogroups.com, Roy T. Fielding &lt;fielding@...&gt; wrote:\n=\r\n\n&gt; * snip *\n&gt; \n&gt; Huh, that is getting to be a FAQ.  I have no idea why peop=\r\nle can&#39;t see\n&gt; the second and third link on the top page\n&gt; \n&gt;     http://ww=\r\nw.ics.uci.edu/~fielding/pubs/dissertation/top.htm\n&gt; \n&gt; that point to the tw=\r\no PDF editions.  *shrug*\n&gt; \n&gt; * snip *\n\nI feel quite comfortable with the c=\r\noncept of properly supporting\nContent-Type in the request header but also p=\r\nermitting what is, in\neffect, an overload from the URL as described by Roy.=\r\n\n\nHowever, I have been musing over a real-world issue that is not\nilluminat=\r\ned by the HTML / PDF examples discussed. Here is the problem\ndomain that I =\r\nhave been considering.\n\nForgive the lengthy nature of this, but I simply wa=\r\nnt to make my\nmusing clear.\n\nFor argument sake, let&#39;s say we are building a=\r\n blogging engine. We\nhave decided that we will represent a blog as a resour=\r\nce in the form:\n\n    http://example.com/blog/user.name\n\nYou decide that the=\r\n following requests:\n\n    GET /blog/user.name HTTP/1.1\n    Host: example.co=\r\nm\n    Accept: text/html\n\nand:\n\n    GET /blog/user.name HTTP/1.1\n    Host: e=\r\nxample.com\n    Accept: text/*\n\nand:\n\n    GET /blog/user.name HTTP/1.1\n    H=\r\nost: example.com\n    Accept: */*\n\nare all equivalent and resolve to the sam=\r\ne response:\n\n    HTTP/1.1 200 OK\n    Content-Type: text/html\n    &lt;html&gt; ...=\r\n &lt;/html&gt;\n\nAll well and good so far...\n\nNow let&#39;s consider that we decide to=\r\n support RSS and Atom xml feeds.\nWe decide to support the following request=\r\n:\n\n    GET /blog/user.name HTTP/1.1\n    Host: example.com\n    Accept: appli=\r\ncation/rss+xml\n\nto which we provide the response:\n\n    HTTP/1.1 200 OK\n    =\r\nContent-Type: application/rss+xml\n    &lt;rss version=3D&quot;2.0&quot;&gt; ... &lt;/rss&gt;\n\nHow=\r\never... it turns out that browsers don&#39;t recognise\n&quot;application/rss+xml&quot; so=\r\n... we send this response instead:\n\n    HTTP/1.1 200 OK\n    Content-Type: t=\r\next/xml\n    &lt;rss version=3D&quot;2.0&quot;&gt; ... &lt;/rss&gt;\n\nBy the same logic, in the eve=\r\nnt of the following request:\n\n    GET /blog/user.name HTTP/1.1\n    Host: ex=\r\nample.com\n    Accept: application/atom+xml\n\nWe respond:\n\n    HTTP/1.1 200 O=\r\nK\n    Content-Type: text/xml\n    &lt;feed xmlns=3D&quot;xmlns=3D&quot;http://www.w3.org/=\r\n2005/Atom&quot;&gt; ... &lt;/feed&gt;\n\n\nMy question is this: that the &#39;transmutation&#39; of =\r\nmedia type doesn&#39;t\nfeel very &#39;correct&#39; to me. The client is requesting one =\r\nmedia type\nspecifically, but we would then be supplanting the requested typ=\r\ne. Do\nwe just need to live with the reality of browser support, or have I\nm=\r\nissed something?\n\n\nFor the record, I would expect &#39;overloaded&#39; media type r=\r\nequests to\nrequire a matching Accept header as in:\n\n    GET /blog/user.name=\r\n?media=3Dapplication/atom+xml HTTP/1.1\n    Host: example.com\n    Accept: */=\r\n*\n\nor:\n\n    GET /blog/user.name?media=3Dapplication/rss+xml&version=3D2.0 H=\r\nTTP/1.1\n    Host: example.com\n    Accept: application/*\n\nMy musing was kick=\r\ned off by this article from the &quot;Microsoft Team RSS\nBlog&quot; (see http://blogs=\r\n.msdn.com/rssteam/articles/PublishersGuide.aspx\n). I worry that we end up i=\r\nn a cul-de-sac where we either do\nnon-compliant things like media type tran=\r\nsformations or end up driving\nall &#39;fuzzy types&#39; onto the URL and smacking d=\r\nown non-compliant\nrequests with &quot;Bad Request&quot; which is a brittle interopera=\r\nbility\napproach. The problem is that the latter approach, whilst being more=\r\n\ntolerant, in effect deprecates the Content-Type header simply due to\npoor =\r\nclient support.\n\nAlan Dean\nLead Developer, OnlineTravel.com\n\n\n\n\n"}}