{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"A. Pagaltzis","from":"&quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"nXkhzQukHYJG4e8UY1WwN3zkBClGRgnDG4dR0IrtK6-p9sU8yITAPBD3_NPca2GPHG4FKouEDLBjwbmN3Lt5n4HI_UCEnGQT","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: To PUT things right","postDate":"1184673646","msgId":9501,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcwNzE3MTIwMDQ2LkdJMTY1MzdAa2xhbmdyYXVtPg==","inReplyToHeader":"PFc1Mjc5NTE2Mzk5MTgwMDkxMTg0NjUzOTI5QG1haWwubWFpbHNuYXJlLm5ldD4=","referencesHeader":"PFc1Mjc5NTE2Mzk5MTgwMDkxMTg0NjUzOTI5QG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9498,"nextInTopic":9508,"prevInTime":9500,"nextInTime":9502,"topicId":9262,"numMessagesInTopic":19,"msgSnippet":"... Oh but that’s *exactly* what the division implies. Once you depart from octet-for-octet equivalence (or any other, a priori prescribed and well-specified","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 55169 invoked from network); 17 Jul 2007 14:35:32 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m50.grp.scd.yahoo.com with QMQP; 17 Jul 2007 14:35:32 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta11.grp.scd.yahoo.com with SMTP; 17 Jul 2007 14:35:32 -0000\r\nReceived: (qmail invoked by alias); 17 Jul 2007 12:00:46 -0000\r\nReceived: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp056) with SMTP; 17 Jul 2007 14:00:46 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX19WEe0zpfhWTU+50LZobeXWzgS9QsTnxLKN40A+mW\n\tgSQ6G4Q0e8dtQ9\r\nDate: Tue, 17 Jul 2007 14:00:46 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20070717120046.GI16537@klangraum&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;W5279516399180091184653929@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;W5279516399180091184653929@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;\r\nSubject: Re: To PUT things right\r\nX-Yahoo-Group-Post: member; u=147780944; y=nXDH0RJfcarroLi3LIFIkS65J01giPolKDAohMlNytVc\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Eric J. Bowman &lt;eric@...&gt; [2007-07-17 08:35]:\n&gt; &gt;&gt; I still say to meet this constraint PUT must be given the\n&gt; &gt;&gt; same meaning in HTTP as STOR has in FTP but I will stand on\n&gt; &gt;&gt; my two earlier explanations for why this must be so, and not\n&gt; &gt;&gt; repeat myself here.\n&gt; &gt;\n&gt; &gt;In another message you said:\n&gt; &gt;\n&gt; &gt;&gt; My application uses one URL and content negotiation to serve\n&gt; &gt;&gt; four different &quot;text/html&quot; representations and three\n&gt; &gt;&gt; &quot;application/xhtml+xml&quot; representations (plus one Atom and\n&gt; &gt;&gt; one PDF) depending on client capability, so I would have to\n&gt; &gt;&gt; say that I am keenly aware of the separation between the\n&gt; &gt;&gt; HTTP resource/representation model and the file-centric\n&gt; &gt;&gt; models of FTP and WebDAV.\n&gt; \n&gt; Just because HTTP has resources and representations does not\n&gt; change my view that PUT must be given the same *replacement\n&gt; semantics* as STOR.  \n\nOh but that’s *exactly* what the division implies. Once you\ndepart from octet-for-octet equivalence (or any other, a priori\nprescribed and well-specified form of equivalence), it is no\nlonger testable in any meaningful sense of the word whether the\nserver is merging or replacing things. In fact, it would often\nbe *undecidable* whether the server is doing one or the other.\n\nSay I submit XML to your server and you make PDF out of it.\nLet’s further assume that my XML did not contain anything that\nwould specify the page margins. The PDF has the same page margins\nas the PDF representation of the previous version of the\nresource. Can you decide whether the server used the margin\nsettings from the previous version of the resource, or used some\nglobal default? In the context of a single request?\n\nNope.\n\nAnd that is all there is to this point.\n\nBut consider…\n\n&gt; PUT is not meant to have merge semantics, any more than STOR is\n&gt; meant to have merge semantics, this should not be misconstrued\n&gt; as meaning that I believe a PUT must replace a file on a\n&gt; filesystem a la FTP or WebDAV.  Would you like me to re-word my\n&gt; prior post?\n&gt; \n&gt; &quot;I still say to meet this constraint PUT must be given\n&gt; replacement semantics in HTTP just as STOR must be given\n&gt; replacement semantics in FTP.&quot;\n&gt; \n&gt; Nowhere do I imply this has anything to do with overwriting a\n&gt; file on disk, that is not what &quot;replacement semantics&quot; means by\n&gt; any stretch.  Replacing a file on disk vs. changing umpteen\n&gt; database fields is an implementation detail, not different\n&gt; semantics being applied to the method used.\n\n… that nowhere did *I* say that PUT should intentionally be\nmade to do unexpected or useless things. If you noticed, I argued\nquite strongly that PATCH has to be separate from PUT, because\nthat allows the client to express intent more unambiguously. Why\nis that desirable? Obviously it is so because the server can then\nreact in more useful ways. Conflating PUT and PATCH deprives the\nclient of expressiveness, which in turn limit’s the server’s\noptions in interpreting the request in the client’s interests.\n\nHowever, the server *is* free to interpret PUT requests as it\nsees fit. A server that does useless things with a PUT request\nbut returns the right status codes isn’t broken; it’s simply\nuseless. There is no problem with this, though: usefulness is\na human concept, not a formal one. In the long run, no one will\ncontinue using such a server; and that’s the end of its useless\nbut compliant behaviour.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}