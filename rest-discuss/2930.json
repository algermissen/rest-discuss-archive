{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"xZGG54Ae7aWVdZu8qCd2ANjJMQ3qE9TuZgXwz5601q-MBCePShxXSHB461IVLVHcch5_kzPNK1jxjpFrWNrhmswGtre9nlvVx_h4sQWTGQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Rest compliant protocols","postDate":"1038419836","msgId":2930,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMzB5TzJvRjdPZGJKdWhVUU8wMDAwYzQ3ZUBob3RtYWlsLmNvbT4=","referencesHeader":"PDEwMzgzOTI5OTUuM2RlNDllYTM5OGMxZUBpbXAuZnJlZS5mcj4gPE9FNzN2R2F3Yk9lSUlmZkVCaFowMDAwNDAzY0Bob3RtYWlsLmNvbT4="},"prevInTopic":2928,"nextInTopic":2932,"prevInTime":2929,"nextInTime":2931,"topicId":2924,"numMessagesInTopic":17,"msgSnippet":"... From: S. Mike Dierken  ... to ... It looks like the query aspect is the non-HTTP part, file retrieval is pure HTTP GET. The","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 27 Nov 2002 17:55:48 -0000\r\nReceived: (qmail 63037 invoked from network); 27 Nov 2002 17:55:47 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m1.grp.scd.yahoo.com with QMQP; 27 Nov 2002 17:55:47 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.87)\n  by mta3.grp.scd.yahoo.com with SMTP; 27 Nov 2002 17:55:47 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Wed, 27 Nov 2002 09:55:47 -0800\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;1038392995.3de49ea398c1e@...&gt; &lt;OE73vGawbOeIIffEBhZ0000403c@...&gt;\r\nSubject: Re: [rest-discuss] Rest compliant protocols\r\nDate: Wed, 27 Nov 2002 09:57:16 -0800\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE30yO2oF7OdbJuhUQO0000c47e@...&gt;\r\nX-OriginalArrivalTime: 27 Nov 2002 17:55:47.0445 (UTC) FILETIME=[36FC7A50:01C2963E]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n----- Original Message -----\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\n\n&gt;\n&gt; &gt; Another approach... Does anyone here has implemented (or tested, or at\n&gt; least\n&gt; &gt; thought about) a rest architecture above Gnutella?\n&gt; Not that I know of, but it sure sounds interesting.\n&gt;\n&gt; &gt; I&#39;ve recently learned that Gnutella is actually extended Http.\n&gt; Interesting. I wonder how much is extended according to &#39;extension&#39;\n&gt; specifications - and how much of the &#39;extensions&#39; were actually necessary\n&gt; (often people don&#39;t think HTTP can do some things and so assume they need\nto\n&gt; invent a new way of doing it.)\nIt looks like the &#39;query&#39; aspect is the non-HTTP part, file retrieval is\npure HTTP GET.\nThe information space will be (poorly) organized based on each region&#39;s\ninterpretation of a query.\nSome machines will treat &quot;.mp3&quot; differently than others. A single query will\nreturn qualitatively different results.\nThis is also true of pure HTTP, but the addition of &lt;FORM&gt; helped create\nricher queries (names and values).\nFor example, if today&#39;s Gnutella queries look like &quot;.mp3&quot;, changing this to\n&quot;name=*.mp3&quot; may help servers return more relevant results.\n\n&gt;\n&gt; &gt; It could solve the &quot;push&quot; problem, and other aspect that I wanted\ndelegate\n&gt; to Jabber :)\n&gt; It won&#39;t solve the push problem. The &#39;push&#39; problem can be solved with any\n&gt; TCP/IP protocol by having the server initiate a persistent connection to a\n&gt; routing/dispatching proxy. That is basically how many systems do it.\nNobody\n&gt; has yet shipped a reference implementation that is as &#39;pure http&#39; as\n&gt; possible yet. But that might change soon.\nThis is interesting - a Gnutella node behind a firewall can&#39;t respond to\nGET, but it can respond to a request to &#39;push the content&#39; to you.\nIf a node can respond to /anything/ at all, then you can do a GET via a\nproxy, but HTTP has problems with this since it is connection oriented.\nMore thought needed.\n\n\nRegarding Gnutella - here is an excellent introduction:\nhttp://www.rixsoft.com/Knowbuddy/gnutellafaq.html#overview\n\nRelevant paragraphs:\n===\nSearching\nSearching works similarly to connecting: you send out a search request, it\nis propagated through the network, and each servent that has matching terms\npasses back its result set. Each servent handles the search query in its own\nway. The simple query &quot;.mp3&quot; could be handled in different ways by different\nservents: one servent might take it literally, matching anything with &quot;.mp3&quot;\nin it, while another might interpret it as a regular expression and match\nany character followed by &quot;mp3&quot;. To save on bandwidth, a servent does not\nhave to respond to a query if it has no matching items. The servent also has\nthe option of returning only a limited result set, so that it doesn&#39;t have\nto return 5000 matches when someone searches for &quot;mp3&quot;.\n\nSince all of the searches are to the local servent&#39;s database, the servent\nsees what everyone else is searching for. Using this, most clients have a\nSearch Monitor that allows the user to see, in real time, the searches that\ntheir servent is responding to.\n\nDownloading\nFor file sharing, each servent acts as a miniature HTTP web server. Since\nthe HTTP protocol is well established, existing code libraries can be used.\nWhen you find a search result that you want to download, you just connect to\nthe servent in the same way your web browser would connect to a web server,\nand you are good to go. Of course, the servent has this built-in, so your\nnormal web browser never has to enter the picture.\n\nServents are also smart enough to compensate for firewalls. If you are\nbehind a firewall that can only connect to the outside world on certain\nports (80, for instance) you will just need to find a servent running on\nport 80. Since the servents can serve on any port, you are likely going to\nfind one that is serving on a firewall-friendly port. Also, if you are\ntrying to download a file from a servent that is behind a firewall, you can\nask the firewalled servent to push the file to you since you will not be\nable to connect to it directly. The only thing the protocol cannot\ncompensate for is file transfers between two servents behind two different\nfirewalls. In such a case, there really isn&#39;t anything that can be done.\n===\n\n\n\n"}}