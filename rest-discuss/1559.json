{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":21058027,"authorName":"Philip Eskelin","from":"&quot;Philip Eskelin&quot; &lt;philip@...&gt;","profile":"philip_eskelin","replyTo":"SENDER","senderId":"wd6Ryj7igq4iVUYAyyADEhaWkrqkp0wUTW341tlv7a34CDNWFVhM7I8w6azHOCLDaTnXObxb_F_P0gBeAs9nnazLSdt6J-zliyA49A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Use verbs in URIs? [was: REST Best Practices]","postDate":"1024422471","msgId":1559,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNzUwMWMyMTZmMCQ0NTZkYzhhMCQwMjAxYThjMEB1bHlzc2VzPg==","inReplyToHeader":"PDNEMEY2NkNDLjIwNzA3MDZAYnJpdm8ubmV0Pg=="},"prevInTopic":1557,"nextInTopic":1561,"prevInTime":1558,"nextInTime":1560,"topicId":1517,"numMessagesInTopic":30,"msgSnippet":"... Got it.  I see the difference. ... This is something that will also apply to my topic and queue abstractions.  For example, when you publish to a topic,","rawEmail":"Return-Path: &lt;philip@...&gt;\r\nX-Sender: philip@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 18 Jun 2002 17:51:17 -0000\r\nReceived: (qmail 18747 invoked from network); 18 Jun 2002 17:49:17 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m4.grp.scd.yahoo.com with QMQP; 18 Jun 2002 17:49:17 -0000\r\nReceived: from unknown (HELO eskelin.com) (64.7.2.220)\n  by mta1.grp.scd.yahoo.com with SMTP; 18 Jun 2002 17:49:16 -0000\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nCc: &quot;&#39;Seth Ladd&#39;&quot; &lt;seth@...&gt;\r\nSubject: RE: [rest-discuss] Use verbs in URIs? [was: REST Best Practices]\r\nDate: Tue, 18 Jun 2002 13:47:51 -0400\r\nMessage-ID: &lt;007501c216f0$456dc8a0$0201a8c0@ulysses&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook CWS, Build 9.0.2416 (9.0.2910.0)\r\nImportance: Normal\r\nIn-Reply-To: &lt;3D0F66CC.2070706@...&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Philip Eskelin&quot; &lt;philip@...&gt;\r\nReply-To: &lt;philip@...&gt;\r\nX-Yahoo-Group-Post: member; u=21058027\r\nX-Yahoo-Profile: philip_eskelin\r\n\r\nSeth Ladd wrote:\n&gt; Order order = new Order(&quot;http://www.parts-depot.com/orders/32432&quot;);\n&gt; order.addPart( new PartNumber(01234));\n&gt;\n&gt; // RESTful magic setting state, /NOT/ calling method\n&gt; order.complete();\n&gt;\n&gt; // The Transfer part of Representational State Transfer\n&gt; transfer(order.toXML());\n&gt;\n&gt; Notice how we just manipulate the state of the object.  We do it twice,\n&gt; once when we add Parts and once when we declare this order as complete.\n&gt; The server does not get the new state of the order until we transfer\n&gt; it (by PUTing the order on top of the old one, using the same URI).\n\nGot it.  I see the difference.\n\n&gt; How does the server know when to process orders?  By checking the state\n&gt; of the objects PUT to the server.  The server has a state machine\n&gt; looking for particular states of objects.\n\nThis is something that will also apply to my topic and queue abstractions.  For\nexample, when you publish to a topic, rather than calling a &quot;publish&quot; method\n(which was my original approach) you either PUT a representation if it&#39;s the\nentire resource, or POST if the event only includes a delta of change in the\nresource.  GET would allow a subscriber to get a snapshot of the topic&#39;s state\nupon initialization.\n\n&gt; The above URI is clearly *not* a noun resource, unless you see the method as a\n&gt; noun resource that can be invoked like a verb.  Bit of a stretch.  In general,\n&gt; my aim is to make it easy as possible for programmers to invoke behavior in\n&gt; their distributed while being as RESTful as possible.  I guess what people are\n&gt; advocating is something more like this:\n&gt;\n&gt; Actually, I would argue that the above URI\n&gt; (&quot;http://www.parts-depot.com/parts/order/34254&quot;) *is* a noun, it&#39;s\n&gt; identifying a particular order.  If your aim is to make it easy for\n&gt; programmers, take away method calls and actions all together.  That way,\n&gt; there is no API to show them or have them mess up.  All they have to do\n&gt; is unstand the object hierarchy of your business domain.\n\nWell, both of us are right.  The original URI I specified as being a verb was\nhttp://www.parts-depot.com/parts/order.  In actuality, whether it is a noun or\nverb is ambiguous.  I read it as a verb, you read it as a noun.  What REST does\nby enforcing that you only do state transfer of noun-based objects is remove\nthat ambiguity.  I like that - it&#39;s simpler, which is why we are here.\n\n&gt; &gt;   CMethod order_parts(&quot;http://www.parts-depot.com/parts/01234&quot;);\n&gt; &gt;   CStringTable params;\n&gt; &gt;   params.addItem(&quot;action&quot;, &quot;order&quot;)\n&gt; &gt;   order_parts.doPost(params);\n&gt; &gt;\n&gt; &gt; If this is more RESTful, then it would be easy to refactor my method concept\nto\n&gt; &gt; work this way.  Is there a more RESTful way to approach this example?\n&gt;\n&gt; I believe my example above is more RESTful.  Here you are declaring an\n&gt; action to be performed on that order object.  All you really want to do\n&gt; is set the state of the object order to something that means &quot;Done&quot;.\n&gt; Then let the server do to it whatever it wants to.\n\nNow that we&#39;ve got a concrete example, I see what you mean and see what I need\nto change in terms of my own thinking and how it is realized in my framework.\nWouldn&#39;t it be a tragedy if some toolkits finally emerged, only to suffer from\nthe *same* problems that RPC-related initiatives have.\n\n&gt; &gt; The only thing holding me back is making sure it&#39;s coherent enough for us to\n&gt; &gt; work with.  Then I hope we can really sit down and hash through these\nconcepts.\n&gt;\n&gt; I think one of the key things to remember here is that you are just\n&gt; transfering objects around the network.  Don&#39;t try to send programatic\n&gt; instructions along with the object.  Let the server&#39;s state machine\n&gt; handle what to do.  Let your programmers just manipulate objects and\n&gt; transfer them around.  It greatly simplifies your API to nothing but the\n&gt; object tree.\n&gt;\n&gt; Please let me know if that makes sense, or helps you out.  I believe the\n&gt; only verbs you want are PUT, DELETE, and GET.\n\nYes, it makes sense.  Believe it or not, state transfer of objects around the\nnetwork is something I remember, because it was a core theme when I began\nbuilding this toolkit a few years ago.  What happened to me - and I&#39;m sure this\nwill be a recurring issue as REST takes hold - is that even when you have the\nintention of going REST, there is a tendency to get sucked back into thinking\nprocedurally.\n\nThanks,\nPhilip\n\n\n"}}