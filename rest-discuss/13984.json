{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"9yh9dVQJWcn5JYKRWs7gfodFfKdp5yjibvGRFWNDc-0mLKM9zrz3Z1RlYw6HoyCJxgL9lQltfwunQNX8mmZX0oYUjz5VLOccggvj9QJMGtA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &#39;No application data on client&#39; constraint? was: RESTful ordering and order-rejection","postDate":"1257205881","msgId":13984,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFFOEI3MjIzLTY4RjktNDM2OC1CNkFBLTZGNzQyRDQxQzE5NUBtYWMuY29tPg==","inReplyToHeader":"PGI1NDhkZjY1MDkxMTAyMTUxM3Y5NTBjYzExcGRmNjBlOTZiZjAzMWM3MkBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDJCNkI4NDNFLTVGNDUtNENCQy05QzM5LTBBMkY4RDMwQTk1QUBtYWMuY29tPiA8QkxVMTAyLVcyNjRBRTQwNUQ0NzhBNjFGMUFBQzgyQjVCMzBAcGh4LmdibD4gPDkwRTU0MkE3LTJGNUMtNDAyNC04NjNFLTZBNDM0RDlFRURBNUBtYWMuY29tPiA8YTZhNmRmMzYwOTExMDIxMzUyazZhMTQ0NTAycDhiMDY5NWVmZTZlNTZjODJAbWFpbC5nbWFpbC5jb20+IDxEQjgwNDNFQS00RDk4LTQ0Q0QtODQwMy02QzhGQTU2QjhCOUFAbWFjLmNvbT4gPGI1NDhkZjY1MDkxMTAyMTUxM3Y5NTBjYzExcGRmNjBlOTZiZjAzMWM3MkBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":13983,"nextInTopic":13989,"prevInTime":13983,"nextInTime":13985,"topicId":13970,"numMessagesInTopic":18,"msgSnippet":"... Because it does not exactly sell good if you cannot back up advice you give by principles. One of the things I admire about the Software Architecture","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63412 invoked from network); 2 Nov 2009 23:51:26 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m11.grp.re1.yahoo.com with QMQP; 2 Nov 2009 23:51:26 -0000\r\nX-Received: from unknown (HELO asmtpout018.mac.com) (17.148.16.93)\n  by mta2.grp.sp2.yahoo.com with SMTP; 2 Nov 2009 23:51:26 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.102] ([84.144.98.104])\n by asmtp018.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KSI001ZCA9LP310@...&gt; for\n rest-discuss@yahoogroups.com; Mon, 02 Nov 2009 15:51:26 -0800 (PST)\r\nCc: Nick Gall &lt;nick.gall@...&gt;,\n &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;AE8B7223-68F9-4368-B6AA-6F742D41C195@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nIn-reply-to: &lt;b548df650911021513v950cc11pdf60e96bf031c72@...&gt;\r\nContent-transfer-encoding: quoted-printable\r\nDate: Tue, 03 Nov 2009 00:51:21 +0100\r\nReferences: &lt;2B6B843E-5F45-4CBC-9C39-0A2F8D30A95A@...&gt;\n &lt;BLU102-W264AE405D478A61F1AAC82B5B30@...&gt;\n &lt;90E542A7-2F5C-4024-863E-6A434D9EEDA5@...&gt;\n &lt;a6a6df360911021352k6a144502p8b0695efe6e56c82@...&gt;\n &lt;DB8043EA-4D98-44CD-8403-6C8FA56B8B9A@...&gt;\n &lt;b548df650911021513v950cc11pdf60e96bf031c72@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] &#39;No application data on client&#39; constraint? was:\n RESTful ordering and order-rejection\r\nX-Yahoo-Group-Post: member; u=289191104; y=B-Jwj-H7p8qXrQWw7ZK6UXu2jZCOt8TWKuNAWa9hpxPJD-pCzr4Zn1AE\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Nov 3, 2009, at 12:13 AM, mike amundsen wrote:\n\n&gt; Jan:\n&gt;\n&gt; &lt;snip&gt;\n&gt; I a=\r\nm trying to get away from the &quot;you could do this and you could do\n&gt; that bu=\r\nt you also could do it that way&quot; kinds of answers to practical\n&gt; REST desig=\r\nn questions.\n&gt; &lt;/snip&gt;\n&gt;\n&gt; Why do you want to get away from this?\n\nBecause =\r\nit does not exactly sell good if you cannot back up advice you  \ngive by pr=\r\ninciples. One of the things I admire about the Software  \nArchitecture noti=\r\non laid out by Perry/Wolf, Garlan/Shaw and Roy [1] is  \nthat it creates a f=\r\noundation for backing up architectural design  \ndecisions by principles. An=\r\nd I just get this feeling of hand waving  \nwhen it comes to answering quest=\r\nions about &#39;how do I do X&#39;. I don&#39;t  \nmind that there are many solutions (o=\r\ntherwise there would not be any  \nroom for design) but (at least) I often c=\r\nannot articulate a clear  \nreasoning why and when to prefer one over the ot=\r\nher.\n\nTake the example problem I posted. What is better for order-rejection=\r\n- \nwith-suggested-modification? To send 409 and e.g. a UBL-like order- \nres=\r\nponse document (like you would in the non computerized business  \nworld) or=\r\n to create an order resource anyhow, set the status to  \npending and then l=\r\net the client update the order until it can be  \naccepted?\n\n(I had a hunch =\r\nthat the latter is better than the former because it  \nmaintains applicatio=\r\nn data on the server only)\n\nLikewise, several return codes have been sugges=\r\nted (409, 422 for  \nexample). It makes no sense to have different returns c=\r\nodes specified  \nwhen a group like this one cannot provide a spot-on &#39;yeah,=\r\n it is that  \none and only that one&#39; response.\n\nAnd even if there is a sing=\r\nle best answer - how do you get  \ninteroperability if it is so easy for dif=\r\nferent people to have  \ndifferent opinions about it?\n\nJan\n\n\n[1] Excuses for=\r\n the names missing here\n\n\n\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On=\r\n Mon, Nov 2, 2009 at 17:09, Jan Algermissen  \n&gt; &lt;algermissen1971@...&gt; w=\r\nrote:\n&gt;&gt;\n&gt;&gt; On Nov 2, 2009, at 10:52 PM, Nick Gall wrote:\n&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; On=\r\n Mon, Nov 2, 2009 at 4:16 PM, Jan Algermissen &lt;algermissen1971@...\n&gt;&gt;&gt;&gt;=\r\n wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; My hunch is that in a RESTful system\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; a) all appl=\r\nication state (aka session state) is on the client\n&gt;&gt;&gt;&gt; b) all application =\r\ndata resides on the server (as resource state)\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; The question that =\r\ndrives me is what the significance of resource\n&gt;&gt;&gt; state\n&gt;&gt;&gt;&gt; is (what is i=\r\nts meaning/purpose in a given design? What are the\n&gt;&gt;&gt; design\n&gt;&gt;&gt;&gt; conditio=\r\nns that lead to the creation of new resource state? Etc.)\n&gt;&gt;&gt; I am\n&gt;&gt;&gt;&gt; try=\r\ning to get away from the &quot;you could do this and you could do  \n&gt;&gt;&gt;&gt; that\n&gt;&gt;=\r\n&gt;&gt; but you also could do it that way&quot; kinds of answers to practical\n&gt;&gt;&gt; RES=\r\nT\n&gt;&gt;&gt;&gt; design questions.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I think I see what you are driving at with=\r\n your distinction between\n&gt;&gt;&gt; session state vs resource state, but I don&#39;t =\r\nthink the distinction\n&gt;&gt;&gt; is so clean in REST. Here&#39;s a relevant passage fr=\r\nom Roy&#39;s thesis\n&gt;&gt;&gt; (5.3.3):\n&gt;&gt;&gt;\n&gt;&gt;&gt; The application state is controlled an=\r\nd stored by the user agent and\n&gt;&gt;&gt; can be composed of representations from =\r\nmultiple servers. In\n&gt;&gt;&gt; addition to freeing the server from the scalabilit=\r\ny problems of\n&gt;&gt;&gt; storing state, this allows the user to directly manipulat=\r\ne the state\n&gt;&gt;&gt; (e.g., a Web browser&#39;s history), anticipate changes to that=\r\n state\n&gt;&gt;&gt; (e.g., link maps and prefetching of representations), and jump f=\r\nrom\n&gt;&gt;&gt; one application to another (e.g., bookmarks and URI-entry dialogs).=\r\n\n&gt;&gt;&gt; [emphasis added]\n&gt;&gt;&gt;\n&gt;&gt;&gt; So at least a copy of the resource state (in =\r\nthe form or a\n&gt;&gt;&gt; representation of that resource) is intended to be stored=\r\n and\n&gt;&gt;&gt; manipulated on the client side. For example, I believe this 5.3.3\n=\r\n&gt;&gt;&gt; paragraph endorses the following scenario:\n&gt;&gt;&gt;       =95 client receive=\r\ns a representation of the works of art in a  \n&gt;&gt;&gt; museum\n&gt;&gt;&gt; exhibit as lis=\r\nt of art works (name of work, name of artist) from a\n&gt;&gt;&gt; museum service on =\r\nsome museum server\n&gt;&gt;&gt;       =95 the client extracts the name of an artist =\r\n(a string) from  \n&gt;&gt;&gt; the\n&gt;&gt;&gt; list and submits it to Wikipedia on a differe=\r\nnt set of servers\n&gt;&gt;&gt;       =95 It takes the representation from Wikipedia =\r\nand formats it  \n&gt;&gt;&gt; into a\n&gt;&gt;&gt; popup for the user&#39;s UI visualization of th=\r\ne museum exhibit\n&gt;&gt;&gt; In this scenario the client &quot;jumps from one applicatio=\r\nn (museum\n&gt;&gt;&gt; service) to another (Wikipedia)&quot;, submitting representation d=\r\nata it\n&gt;&gt;&gt; received from the first service to the second service. Your\n&gt;&gt;&gt; =\r\ndescription above seems to prohibit such a scenario (&quot;to continue\n&gt;&gt;&gt; its i=\r\nnteraction with the service on another machine, it would not\n&gt;&gt;&gt; only need =\r\nto take the appropriate URIs with it ... but also other\n&gt;&gt;&gt; data elements&quot;)=\r\n.\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; But in your scenario, the client could allways, just be use of =\r\nthe  \n&gt;&gt; one\n&gt;&gt; initial URI, pick up the interaction. And this is (IMHO) ex=\r\nactly the\n&gt;&gt; significance of storing the application data as resource state=\r\n - so\n&gt;&gt; that the client can pick it up again. If the data was not stored i=\r\nn\n&gt;&gt; the server it would have to be stored on the client and the ability\n&gt;&gt;=\r\n would be lost to pick up the conversation just on the basis of the  \n&gt;&gt; UR=\r\nI.\n&gt;&gt;\n&gt;&gt; Jan\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; It appears that REST endorses the use of &quot;applica=\r\ntion data&quot; stored\n&gt;&gt;&gt; on the client, at least in the case where such data w=\r\nas at some\n&gt;&gt;&gt; point in the past received by the client as part of a repres=\r\nentation\n&gt;&gt;&gt; of a server-based resource.\n&gt;&gt;&gt;\n&gt;&gt;&gt; -- Nick\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;=\r\n\n&gt;&gt; --------------------------------------\n&gt;&gt; Jan Algermissen\n&gt;&gt;\n&gt;&gt; Mail: a=\r\nlgermissen@...\n&gt;&gt; Blog: http://algermissen.blogspot.com/\n&gt;&gt; Home: http:=\r\n//www.jalgermissen.com\n&gt;&gt; --------------------------------------\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;=\r\n&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;=\r\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n=\r\n&gt;\n&gt;\n&gt;\n\n--------------------------------------\nJan Algermissen\n\nMail: algerm=\r\nissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalge=\r\nrmissen.com\n--------------------------------------\n\n\n\n\n"}}