{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"&#39;A. Pagaltzis&#39;","from":"&quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"l4XflzItUU8Di6SOEGzYZALaTjVZTa4S6IReQJKM7l80UFPRA7Y6NE9RoToe3zQ5R-YU6QiYnnYL1rBk230MImYqSzJobNdoJK4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Interface definition languages and service registries for REST services","postDate":"1186922474","msgId":9592,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcwODEyMTI0MTE0LkdBODcxMEBrbGFuZ3JhdW0+","inReplyToHeader":"PDAxMzcwMWM3ZGM0OSRhNTdhNTY5MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PDI4Mjc2Y2YwMDcwODAyMTg0MXc3ZTYxMGZiYnNjZmEyMTkyZTljOGUzOTc0QG1haWwuZ21haWwuY29tPiA8OWRjNzhkN2IwNzA4MDYwMzI2aDNhYWRhYzdjeGMwYjdlYmI3MTVhZmI1MDdAbWFpbC5nbWFpbC5jb20+IDwwMTUzMDFjN2Q5NWIkNjg2NmQ3MTAkMjEwMmZlYTlAR3VpZGVzLmxvY2FsPiA8MjAwNzA4MTAwMjUwMTMuR0wxNTU2NkBrbGFuZ3JhdW0+IDwwODExMDFjN2RiNzgkOWNkYzRiZjAkMjEwMmZlYTlAR3VpZGVzLmxvY2FsPiA8MjAwNzA4MTEwMTIyMDAuR1cxNTU2NkBrbGFuZ3JhdW0+IDwwOTVhMDFjN2RiYzckMjIzMjM4YzAkMjEwMmZlYTlAR3VpZGVzLmxvY2FsPiA8MjAwNzA4MTEwODI5MTQuR0UxNTU2NkBrbGFuZ3JhdW0+IDwwMTM3MDFjN2RjNDkkYTU3YTU2OTAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPg=="},"prevInTopic":9589,"nextInTopic":9593,"prevInTime":9591,"nextInTime":9593,"topicId":9547,"numMessagesInTopic":23,"msgSnippet":"... No, not the *same* problem – just the *application-specific* part of the problem. The common parts of the problem are factored out to Atompub. But","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 29515 invoked from network); 12 Aug 2007 23:28:30 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m40.grp.scd.yahoo.com with QMQP; 12 Aug 2007 23:28:30 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta11.grp.scd.yahoo.com with SMTP; 12 Aug 2007 23:28:29 -0000\r\nReceived: (qmail invoked by alias); 12 Aug 2007 12:41:15 -0000\r\nReceived: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp002) with SMTP; 12 Aug 2007 14:41:15 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX1++cetABq2+ZTYzbaHgkuUKaNA8mvZGcVZvinoDCp\n\tjxXW2oB667m220\r\nDate: Sun, 12 Aug 2007 14:41:14 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20070812124114.GA8710@klangraum&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;28276cf00708021841w7e610fbbscfa2192e9c8e3974@...&gt; &lt;9dc78d7b0708060326h3aadac7cxc0b7ebb715afb507@...&gt; &lt;015301c7d95b$6866d710$2102fea9@...&gt; &lt;20070810025013.GL15566@klangraum&gt; &lt;081101c7db78$9cdc4bf0$2102fea9@...&gt; &lt;20070811012200.GW15566@klangraum&gt; &lt;095a01c7dbc7$223238c0$2102fea9@...&gt; &lt;20070811082914.GE15566@klangraum&gt; &lt;013701c7dc49$a57a5690$0702a8c0@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;013701c7dc49$a57a5690$0702a8c0@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;\r\nSubject: Re: Interface definition languages and service registries for REST services\r\nX-Yahoo-Group-Post: member; u=147780944; y=PxdRpOR-W0HiiPGVFYI2laFo2Jf03vNnOTuEuay-Ueuj\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Mike Schinkel &lt;mikeschinkel@...&gt; [2007-08-11 21:00]:\n&gt; Of course, but there are still many things in the use-case\n&gt; domain AtomPub doesn&#39;t address so we end up having to deal with\n&gt; those. Hence back to the same problem albeit higher up the\n&gt; stack.\n\nNo, not the *same* problem – just the *application-specific* part\nof the problem. The common parts of the problem are factored out\nto Atompub.\n\nBut that’s a given; Atompub is infrastructure, just like HTTP\nitself. The fact that Atompub alone is not enough to model the\nfull semantics of the application is no more to the point than\nthe fact that HTTP isn’t either. Yet I don’t see people frowning\nand saying “well HTTP doesn’t really solve my problem so what’s\nthe point – let’s make a new TCP-based wire protocol.”\n\n&gt; &gt; &gt; One thing I dislike about AtomPub, and I know I&#39;m probably\n&gt; &gt; &gt; in the minority here, is it requires special tools to\n&gt; &gt; &gt; interact with vs. just having a browser,\n&gt; \n&gt; &gt; Wait, first you&#39;re telling me you don&#39;t like\n&gt; &gt; one-size-fits-all advocacy for Atompub, then you tell me we\n&gt; &gt; should just shoehorn all apps into the browser? :-)\n&gt; \n&gt; You are putting words in my mouth, as usual. :)  \n&gt; \n&gt; I didn&#39;t say that I didn&#39;t like the one-size-fits-all aspect,\n&gt; that aspect I do like; the uniform interface. What I was tryng\n&gt; to say is there will still be a need for use-case specifics and\n&gt; without some way to identify and codify those we&#39;ll end up with\n&gt; the same problem, albeit higher up the stack (Is there an echo\n&gt; in here? Am I repeating myself? :)\n\nNo, you’re not. I see two different statements. If the latter is\nwhat you meant by the first, then the first one was not explicit\nenough for me to understand it clearly.\n\nConsidering the latter argument, though, I’m not sure how “just\nhaving a browser” solves the problem that Atompub purportedly\ndoes not. Is it because HTML bundles the app chrome alongside the\ndata, which Atompub does not?\n\nIf so, I don’t see this as a strong objection. I assume we will\nsee technologies other than HTML (eg. XForms) or complementary\nto HTML (eg. you an HTML page generated by an XSL transform\nreferred to from an xml-stylesheet PI in the Atompub service\ndocument – assuming browsers had support for PUT and DELETE,\nand/or your server knew how to tunnel them through POST for\nlegacy browser).\n\n&gt; &gt; Me, I hope that Atompub uptake is strong enough that we&#39;ll\n&gt; &gt; see browsers expand to support everything required that one\n&gt; &gt; day we shall, in fact, be able to interact with many Atompub\n&gt; &gt; services with just a browser. \n&gt; \n&gt; I have mixed feelings about that. Yes, I assume I would like\n&gt; browser support but frankly I find the browser support in IE7\n&gt; of RSS disconcerting.\n\nThat sounds to me like “it doesn’t work the way it always used to\nand that freaks me out.” There are developments that weird me out\ntoo, but what they make me worry about is me, not the new ways;\nI don’t want to get crusty and set in my ways.\n\nSee also http://www.douglasadams.com/dna/19990901-00-a.html\n\n&gt; I strongly believe there should be only one primary format for\n&gt; the web, HTML.\n\nHTML is going exactly nowhere. All of the content I consume on\nthe web today is HTML. However most of the time it comes wrapped\nin something that’s not `text/html`. What I see is just the\napplication chrome moving out of HTML and into structured formats\nso that the content can stand pure and undiluted. I don’t see how\nyou can disagree that this is a good thing unless you prefer\nvisiting 300 sites in your browser over reading them in an\naggregator.\n\n&gt; &gt; (In fact, with XMLHttpRequest you already can.)\n&gt; \n&gt; Actually, that&#39;s not true. Browsers don&#39;t natively display\n&gt; things using XMLHttpRequest, it is a capability that needs to\n&gt; be programmed. By your logic then Java applets and in some\n&gt; browsers ActiveX controls can all be interacted with via a\n&gt; browser. Tell me, how many grandmas are interacting with\n&gt; XMLHttpRequest?\n\nYour examples are at the extreme end of the continuum. Javascript\nis code run by the browser, but it’s much closer to “content” in\nmany characteristics than are applets and ActiveX controls.\n\nNote that I consider XMLHttpRequest an interim solution only. I’m\nnot saying it’s the way things should work; however I *am* saying\nthat you can use to make these things *work* in the here and now.\n\nRunning code trumps theoretical purity.\n\n&gt; &gt; &gt; it requires web services be created in addition to web\n&gt; &gt; &gt; pages.\n&gt; &gt; &gt; \n&gt; &gt; &gt; I&#39;d really advocate for exposing webservices as a default\n&gt; &gt; &gt; case via semantic HTML instead of AtomPub\n&gt; &gt; \n&gt; &gt; How is that different? A WordPress blog has a public face and\n&gt; &gt; an admin area. Isn&#39;t it really kind of incidental what kind\n&gt; &gt; of content types get exchanged on which half of the service?\n&gt; \n&gt; The differences are:\n&gt; \n&gt; • the requirement to develop seperately for multiple content\n&gt;   types.\n&gt; • the high liklihood that the two efforts will result in output\n&gt;   lacking 100% fidelity.\n&gt; • the high liklihood that the web service won&#39;t be developed\n&gt;   even though the web site is.\n&gt; • that tools available for HTML, including browsers, will never\n&gt;   in their entirety be available for AtomPub.\n&gt; • the fact that the default interaction for users on the web is\n&gt;   with content that behaves like HTML\n&gt; \n&gt; Having it be a best practice where building a website means\n&gt; building a web service will ensure many more web services\n&gt; actually get built. […] The only way it is viable in my world\n&gt; view is if the CMS that is generating the content type\n&gt; generates them with 100% fidelity without user/admin\n&gt; involvement\n\nI think you are looking at it from the wrong angle, but Atompub\nis new and I guess it’s understandable that people have trouble\nimagining how their instincts would be changed by a world in\nwhich it was already ubiquitous.\n\nHere’s the point (again): Atompub is infrastructure.\n\nThink for a moment about a world in which plenty of ready-made\nimplementations exist as pluggable libraries or frameworks, or\nmaybe even fullblown servers on the scale of Apache. (OK, the\nlatter is less likely.) In this world, no one would think of the\ntask as “writing an Atompub implementation alongside the HTML\ninterface.” You would use an Atompub imlpementation to build the\nplumbing of your application, and then write the HTML interface\nas a client application on top of the Atompub service. The\nAtompub service just falls out of that for free.\n\n&gt; you mention that AtomPub handles things for you so you don&#39;t\n&gt; have to. I&#39;ve read the AtomPub spec, although I don&#39;t know how\n&gt; awake I was reading it considering how long it is, and I didn&#39;t\n&gt; see anything earth shattering. I see AtomPub as a very valuable\n&gt; albeit specialty protocol/format. It seems you see it for\n&gt; general purpose use. Can you tell me specifically what it is\n&gt; about AtomPub that causes you to value its use outside the\n&gt; nominal case of publishing?  \n&gt; \n&gt; Maybe it is a panacea and I just don&#39;t yet see it. Here&#39;s your\n&gt; chance, convert me.\n\nThe role in which I see Atompub is retrofitting HTTP with a\nnotion of collections. In so doing it sets up expectations for\nclients about how the mechanics of creating resources on the\nserver will work.\n\nThe only means for changing state on the server with a browser is\nHTML forms and POST. But these forms and POST requests are mute\nand featureless; the browser has no idea whatsoever about the\nmeaning of what it’s doing. You need a human to drive it.\n\nWith Atompub, the client is no longer just putting forth its fist\nwith eyes shut tight, murmuring “here’s some data, I don’t know\nwhat you want it for.” It can actually have an intent for that\ndata and a notion of what is going to happen with it.\n\nConsider Amazon S3; it’s such a simple service that if it had\nhappened 5 years later the documentation would consist of “see\nRFC &lt;whatever Atompub will be assigned&gt;” and no one would be\nwriting custom clients for it.\n\nBut that only scratches the surface. Think about how ubiquitous\nthe notion of collections is. To quote Bill de hÓra:\n\n    &lt;http://www.dehora.net/journal/2007/07/shipping_notes.html&gt;:\n    AtomPub sits in a very strange place, as it has the potential\n    to disrupt half a dozen or more industry sectors, such as,\n    Enterprise Content Management, Blogging, Digital/Desktop\n    Publishing and Archiving, Mobile Web, EAI/WS-* messaging,\n    Social Networks, Online Productivity tools. As interesting as\n    the adoption rates, will be people and sectors finding\n    reasons not use it to protect distribution channels and data\n    lockins with more complicated solutions. Any kind of data\n    garden is fair game for AtomPub to rationalize.\n\nThis is much, much bigger than publishing systems.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}