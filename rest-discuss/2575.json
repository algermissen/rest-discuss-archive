{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"KqFWFcu97uvnqZLt_X7BJmWoNnjZ7x84HqEeP0pJMc_QYJ5aRa5ziB0CXZajWXDSeaNYoYgmCuXJLzz-VM7rGH8Y49wG0w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Client-composed URI","postDate":"1032221684","msgId":2575,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEODY3M0Y0LjkwNDA5QHByZXNjb2QubmV0Pg==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDQ1RUVDRUJAY2xpZmZvcmQuZGV2by5pbHguY29tPiA8M0Q4NjBFNDYuMzAyMDgwN0BwcmVzY29kLm5ldD4gPE9FNTZmOVBTN1JQTWVrRzUwdjgwMDAwMWI0NEBob3RtYWlsLmNvbT4gPDNEODY0QTNDLjQwMzA2MDFAcHJlc2NvZC5uZXQ+IDxPRTEzUXB0Z0ZyWUlMb3lnWExzMDAwMDEzZWNAaG90bWFpbC5jb20+"},"prevInTopic":2574,"nextInTopic":2576,"prevInTime":2574,"nextInTime":2576,"topicId":2566,"numMessagesInTopic":22,"msgSnippet":"... To me, one of the central goals of REST is to allow new applications to be created later that I didn t foresee in the beginning. That s a big part of my","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 17 Sep 2002 00:14:51 -0000\r\nReceived: (qmail 1582 invoked from network); 17 Sep 2002 00:14:51 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 17 Sep 2002 00:14:51 -0000\r\nReceived: from unknown (HELO yoda.blastradius.com) (216.13.219.34)\n  by mta2.grp.scd.yahoo.com with SMTP; 17 Sep 2002 00:14:52 -0000\r\nReceived: from prescod.net (192.168.10.197 [192.168.10.197]) by yoda.blastradius.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2653.13)\n\tid RHSN6VJF; Mon, 16 Sep 2002 17:18:54 -0700\r\nMessage-ID: &lt;3D8673F4.90409@...&gt;\r\nDate: Mon, 16 Sep 2002 17:14:44 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en-US; rv:1.1) Gecko/20020826\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Client-composed URI\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F64045EECEB@...&gt; &lt;3D860E46.3020807@...&gt; &lt;OE56f9PS7RPMekG50v800001b44@...&gt; &lt;3D864A3C.4030601@...&gt; &lt;OE13QptgFrYILoygXLs000013ec@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nS. Mike Dierken wrote:\n &gt;...\n &gt;\n &gt; But I don&#39;t get paid to deliver a different kind of application. (Okay...\n &gt; right now I don&#39;t get paid at all...)\n &gt; Explicit links are fine - and they do have the nice property of\n &gt; opaque/low-intelligence retrievals.\n\nTo me, one of the central goals of REST is to allow new applications to\nbe created later that I didn&#39;t foresee in the beginning. That&#39;s a big\npart of my definition of &quot;loose coupling&quot;.\n\n &gt; But for the main use-case of getting a particular portfolio, the client\n &gt; still needs to know which link is the right link. And that requires \nknowing\n &gt; (in your example) the name &#39;asof&#39; and the value &#39;20020914&#39;.\n\nYes, in the most tightly bound scenario where the client knows\neverything interesting about the server and is specifically coded to\nwork with that particular type of server and its datatyhpes, there is no \ndifference. But  then in that case I could also just as easily use SOAP, \nCORBA or ASN.1. It&#39;s allowing the other applications that is of interest \nto me and where I think REST can contribute.\n\n &gt; .... The client pops\n &gt; these two data items into a function and out pops a URI. Either\n &gt; algorithmically constructed or retrieved via a lookup - not much \ndifference,\n &gt; except that transferring lookup tables isn&#39;t all that scalable and \ndoesn&#39;t\n &gt; reduce coupling.\n\nObviously I disagree on the latter point.\n\n &gt;&gt;Whereas constructing URIs requires the knowledge\n &gt;&gt;that you shouldn&#39;t try to construct URIs into the future or the distant\n &gt;&gt;past.\n &gt;\n &gt; That is a &#39;nice-to-have&#39; not a &#39;need-to-have&#39;.\n\nIf it prevents your client from hanging indefinately, it is a\n&quot;need-to-have&quot;. Basically the list version gives the client more\ninformation than the query version. It says not only &quot;you can try to get\ndata at this URI&quot; but also: &quot;Here are URIs that are guaranteed to work\nand URIs that you don&#39;t see here are likely not to work.&quot; My philosophy\nis for the server to always give as much extra information to the client\nas is reasonably possible. To me that loosens binding.\n\n &gt;...\n &gt; How would the client &quot;know how to retrieve &#39;date-versioned documents&#39;&quot;?\n &gt; Isn&#39;t that what we are talking about?\n\nNo, we&#39;re talking about specifically date-versioned portfolios not the\nmore generic concept of date-versioned resources. I&#39;m trying to\nintroduce the notion of subtyping. Subtyping on the Web is well-defined\nfor graphs of links, but not for queries (though that is perhaps doable\n-- nobody has thought it through).\n\n &gt;...\n &gt;\n &gt; Knowing the type/meaning is not the same as knowing how to retrieve the\n &gt; information. The &#39;query contruction technologies&#39; is the &#39;how to \nretrieve&#39;\n &gt; part. The semweb technologies you mentioned don&#39;t talk about it. You just\n &gt; essentially said &#39;assume I know how to retrieve one&#39;...\n\nBasically you see a URI, you invoke GET. The question is how do I filter \nto certain dates. I already pretty much know how to do that right now \nusing the N3 implementation CWM (presuming the data is somehow \ninterperable as RDF). Of course saving the documents to the local hard \ndisk is a side-effect that is outside the scope of N3.\n\nBut anyhow, the part I could do in N3 is: &quot;Start with this URI which is \na list of &#39;date-versioned resources&#39;. By definition each one has a date. \nGet the ones that are less than 5 days old (some hand waving around date \nfunctions here...). Then dereference each of them and parse them as RDF. \nThen look for a &#39;VersionType&#39; property and return me the set where the \n&#39;VersionType&#39; is &quot;Major&quot;, not &quot;Minor&quot;.&#39;\n\nAlthough it sounds like I am telling it the order of operations of \ncourse I wouldn&#39;t really. It could do a depth-first search for relevant \ndata or get them all and then filter, based on its own best judgement.\n\nThe N3 &quot;query&quot; will automatically work with any subtype of \n&quot;date-versioned-resource&quot; including &quot;date-versioned purchase order&quot; or \n&quot;date-versioned home page&quot; or &quot;date-versioned portfolio.&quot; It will also \nwork with any resource that N3 knows how to interpret *as* a \ndate-versioned resource using some inferencing rules that may rename or \ncompute properties.\n\nAs in object oriented programming, subtyping is usually only valuable in \nthe long run, not for the very first project you apply it to. It&#39;s when \nyou end up with many subtypes of the same thing that you get economies \nof scale.\n\n   Paul Prescod\n\n\n\n"}}