{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"VL2yArU0LAqqXiG3ciOdEqBbsmgHl2hC13hn_YugX3LIqKetS8QcXdy-4_d2AloeZuBxVap9hzljnGUHq53P68OpWnqz6w3JrzDJiJZeSQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1275563709","msgId":15528,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjAzMDUxNTA5LmI1MTliOGViLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGluZHcybDdLQ3FKZHpYdjlPMi1HRjFLX2pjN3dRY2pwa25oSGZuaEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGltTzROM0ZTeDg5bjR2Sm43RkpsMzJYaC1ERnNZUl93dG5Pd3VYdUBtYWlsLmdtYWlsLmNvbT4JPDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2MTU2RDlFNkNAUFJJU00uY2FmZmVpbmUtaXQubmV0Pgk8QUFOTGtUaW5Hc3JWaUdXSUJTWElmd3YxeTY1dDRNbTEyRW1PcXNnNTlONmUyQG1haWwuZ21haWwuY29tPgk8MjAxMDA2MDExMDUxNTEuZTYzZjgyMmEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8QUFOTGtUaWxIU3RDNWNpU0N5MHg5ZFFmRUJsdHluVld5ZEdLblZlbjZaYm1KQG1haWwuZ21haWwuY29tPgk8MjAxMDA2MDExNzU2NDEuZjZhY2FhMjguZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8QUFOTGtUaW5kdzJsN0tDcUpkelh2OU8yLUdGMUtfamM3d1FjanBrbmhIZm5oQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15516,"nextInTopic":15531,"prevInTime":15527,"nextInTime":15529,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"On Wed, 2 Jun 2010 15:11:26 +0100 ... What cost?  What dependencies?  There is no invisible dependency between a negotiated resource and any resources that","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 79673 invoked from network); 3 Jun 2010 11:15:34 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m14.grp.re1.yahoo.com with QMQP; 3 Jun 2010 11:15:34 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 3 Jun 2010 11:15:33 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 418FE509DF;\n\tThu,  3 Jun 2010 07:15:31 -0400 (EDT)\r\nDate: Thu, 3 Jun 2010 05:15:09 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: Sebastien Lambla &lt;seb@...&gt;, mike amundsen &lt;mamund@...&gt;,\n Glenn Block &lt;glenn.block@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100603051509.b519b8eb.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTindw2l7KCqJdzXv9O2-GF1K_jc7wQcjpknhHfnh@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\n\t&lt;AANLkTimO4N3FSx89n4vJn7FJl32Xh-DFsYR_wtnOwuXu@...&gt;\n\t&lt;3DDD0BE655869D4EA506652B3803AEF6156D9E6C@...-it.net&gt;\n\t&lt;AANLkTinGsrViGWIBSXIfwv1y65t4Mm12EmOqsg59N6e2@...&gt;\n\t&lt;20100601105151.e63f822a.eric@...&gt;\n\t&lt;AANLkTilHStC5ciSCy0x9dQfEBltynVWydGKnVen6ZbmJ@...&gt;\n\t&lt;20100601175641.f6acaa28.eric@...&gt;\n\t&lt;AANLkTindw2l7KCqJdzXv9O2-GF1K_jc7wQcjpknhHfnh@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nOn Wed, 2 Jun 2010 15:11:26 +0100\nMike Kelly wrote:\n&gt;\n&gt; Eric J. Bowman wrote:\n&gt; \n&gt; &gt; That\n&gt; &gt; Atom and only Atom resource is a *different resource* whose entity\n&gt; &gt; happens to overlap with that of some other resource -- which\n&gt; &gt; happens all the time in REST.\n&gt; &gt;\n&gt; \n&gt; Agreed, that does happen all the time, but at a significant cost to\n&gt; visibility since it results in invisible resources dependencies.\n&gt;\n\nWhat cost?  What dependencies?  There is no &quot;invisible dependency&quot;\nbetween a negotiated resource and any resources that also happen to be\nvariants.  That makes no sense whatsoever.\n\n&gt;\n&gt; Reduced visibility directly impacts on your ability to leverage the\n&gt; layered constraint which, amongst other things, weakens your ability\n&gt; to compensate for the inefficiencies that emerge from the REST style.\n&gt; That is a problem. Particularly at scale.\n&gt; \n\nBy leveraging the layered system constraint, do you mean caching?  The\ncaching on my Atom files served from non-negotiated URIs is more\nefficient than that of the exact same files served as variants of a\nnegotiated URI.  In fact, if I don&#39;t assign the variants their own URIs\nand send that along in Content-Location, caching breaks down entirely\non the negotiated resources.\n\nREST development involves tradeoffs.  If you aren&#39;t willing to make\nthose tradeoffs (by &quot;compensating for inefficiencies&quot;), then you aren&#39;t\nfollowing the REST style, and the consequences will be felt most\nparticularly at scale.  Self-descriptive messaging means that all\nknowledge needed to understand a request is contained within the\nrequest, that it does not depend on any other resource state (as with\ncookies when used for storing state).\n\nYou can&#39;t seriously be claiming that assigning URIs to variants of a\nnegotiated resource somehow has a negative impact on visibility?\nReality itself proves otherwise, since caching the variants of a\nnegotiated resource only works (except for compression) when you assign\nURIs to those variants.  Only the visibility provided by the Content-\nLocation URI allows for scaling to occur on systems which implement\nconneg.\n\nAs with cookies, what you propose also violates the self-descriptive\nmessaging constraint.  This is simple enough to check -- does the\nresponse representation vary depending on the context of the request?\n\nIf @type worked the way you wanted it to, dereferencing a resource\nwould return a media type based on the native Accept header if the URI\nis typed or pasted in, or a link is followed from a page that doesn&#39;t\nset @type.  Yet if the same URI is dereferenced from some other page\nthat does set @type, the response representation has just changed based\non the prior application state, i.e. shared context.\n\nThis is a major problem, which totally violates the layered-system and\nidentification of resources constraints also, which may be easily and\nsimply avoided by the best-practice solution of assigning URIs to\nvariants.  Problem _solved_.  Period.\n\nIf your compensation for these perceived inefficiencies violates three\ncritical REST constraints, on what do you base your scalability claim?\nEven if you were getting the concept of visibility right, it is a\nbenefit of REST, not a constraint that best-practice conneg somehow\nviolates.\n\n&gt;\n&gt; Bizarrely, the research I&#39;ve been doing on cache invalidation[1] is\n&gt; all based around ways to mitigate the sorts of problems that kind of\n&gt; reduced visibility causes.\n&gt;\n\nWhich might explain its incomprehensibility to a REST architect.\nSpecifically:\n\n&quot;This does, however, require any client to make several subsequent\nrequests for each item resource. This behaviour is generally considered\noverly &#39;chatty&#39; and inefficient  and therefore in the real world clear\nidentification of resources and their state is traded-away for network\nefficiency gains.&quot;\n\nNo, this is not considered &quot;overly chatty and inefficient&quot; and I&#39;ve yet\nto see proof that working around this with batch messaging or anything\nelse results in better scaling than a REST architecture.  A sequence\nof requests for resources which results in cache hits anywhere from the\nclient cache to the server cache is more efficient than a cache miss.\n\nTrying to avoid the &quot;inefficient overhead&quot; of making a whole slew of\nrequests in a limited number of over-the-wire transactions is simply\nnot the REST style, so claiming that doing so gives the same benefits\nas REST is non sequitir.  When a browser dereferences a URI on my demo,\nit will make a whole slew of requests in order to render a steady-state.\n\nDue to the browser-resident XSLT architecture and the caching it\nallows, the server is averaging 1KB/hit with a 70% cache-hit ratio.  A\nlot of this traffic is due to the &#39;must-revalidate&#39; directive I left in\nthe static, conneg-stripped demo where it does nothing, to simulate the\nconneg implementation that depends on it.\n\nI can serve 1KB responses all day.  The fact that my server only spends\n30% of its time actually serving files is what makes REST so awesome.\nTaking exception with the number of URIs I&#39;ve assigned to achieve that,\nor the number of requests which make up a steady-state, is nit-picking\nin the face of real-world results which disprove the notion that doing\neither incurs any significant costs relative to the actual benefits.\n\nIOW, when you point to that and claim in the face of all evidence to\nthe contrary (70% cache-hit ratios don&#39;t result from systems with\nvisibility problems) that it somehow lacks visibility, you&#39;re claiming\nthat the REST style is severely flawed.  Reality itself is the counter-\nargument -- this isn&#39;t a philosophical debate, it&#39;s technology, and the\nproof is in the server logs of any REST system.\n\n&gt;\n&gt; The solution, at least the one I&#39;ve\n&gt; proposed, requires extending the system&#39;s uniform interface in order\n&gt; to compensate.\n&gt;\n\nSo in order to compensate for a non-problem, your solution is to\nviolate three fundamental REST constraints?  Such a result is not, by\ndefinition, a Uniform Interface.\n\n&gt;\n&gt; The point being; you don&#39;t get it for free\n&gt;\n\nYes, you do.  Your point is that my assignment of URIs to variants has\nhad some detrimental impact to my system&#39;s visibility by introducing\nsome phantom coupling between my resources, thus my assignment of URIs\nto variants has incurred some cost.\n\nMy counterpoint is, again, reality.  I can&#39;t for the life of me figure\nout what cost minting those URIs has incurred on my system, when the\ncost of removing them would cut my cache-hit ratio by at least half.\n\n&gt;\n&gt; - and in my\n&gt; opinion it actually solves a problem that could be avoided altogether\n&gt; by re-evaluating the mechanisms that encourage the practices which\n&gt; cause these issues to arise in the first place.\n&gt; \n\nIt&#39;s a non-problem.  Any philosophical debate is irrelevant in the face\nof statistical analysis of any REST system&#39;s logs.  Problems exist with\nconneg, to be sure, but this isn&#39;t it.  And this is hardly the solution.\nIn the future, new protocols will evolve to replace HTTP 1.1, which will\ncertainly address these shortcomings, preferably in ways consistent with\nthe constraints of REST.\n\n-Eric\n\n"}}