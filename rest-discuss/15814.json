{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"Fg3OWZnP9t3LusBHcOH47EW9GsP0S7lYcVREQ1dam1cs7IbeCc0gU0A-4WYrvgkFGkaMVYVmxxmwjJ0mu4Bbf0FqNu-vXBB4JYAPK8BfNu4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Restful Approaches to some Enterprise Integration Problems","postDate":"1278578227","msgId":15814,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEEwM0MxOUQzLTA2RDItNDhEMy1BREY0LUFBOERCMUU4N0RDN0BtYWMuY29tPg==","inReplyToHeader":"PDNEREQwQkU2NTU4NjlENEVBNTA2NjUyQjM4MDNBRUY2M0EyNTVGOTJAUFJJU00uY2FmZmVpbmUtaXQubmV0Pg==","referencesHeader":"PGkwdWxraCtsdnI5QGVHcm91cHMuY29tPiA8MDYxQzYzMkEtRERCNy00REUzLUIyMEQtRTgxRjY3NzIxQzA4QGdiaXYuY29tPiA8QUFOTGtUaW5rU21tb3JSb3MxazJiWkY3WllmUDBTR3ZGTDc1dzBMclNhc3VzQG1haWwuZ21haWwuY29tPiA8M0RERDBCRTY1NTg2OUQ0RUE1MDY2NTJCMzgwM0FFRjYzQTI1NUY5MkBQUklTTS5jYWZmZWluZS1pdC5uZXQ+"},"prevInTopic":15812,"nextInTopic":15815,"prevInTime":15813,"nextInTime":15815,"topicId":15761,"numMessagesInTopic":45,"msgSnippet":"Sent from my iPhone ... Google for arrested rohit khare Jan ... Sent from my iPhone On Jul 8, 2010, at 10:28, Sebastien Lambla  wrote: As","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 7706 invoked from network); 8 Jul 2010 08:36:18 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m1.grp.sp2.yahoo.com with QMQP; 8 Jul 2010 08:36:18 -0000\r\nX-Received: from unknown (HELO asmtpout025.mac.com) (17.148.16.100)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Jul 2010 08:36:18 -0000\r\nMIME-version: 1.0\r\nContent-type: multipart/alternative;\n boundary=&quot;Boundary_(ID_fScjjGUf99WR7rO6x4a0vQ)&quot;\r\nX-Received: from [10.221.207.227]\n (tmo-101-179.customers.d1-online.com [80.187.101.179])\n by asmtp025.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0L58003RZD7QRK60@...&gt; for\n rest-discuss@yahoogroups.com; Thu, 08 Jul 2010 01:35:58 -0700 (PDT)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=6.0.2-1004200000 definitions=main-1007080010\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=1.12.8161:2.4.5,1.2.40,4.0.166\n definitions=2010-07-07_05:2010-02-06,2010-07-08,2010-07-08 signatures=0\r\nReferences: &lt;i0ulkh+lvr9@...&gt;\n &lt;061C632A-DDB7-4DE3-B20D-E81F67721C08@...&gt;\n &lt;AANLkTinkSmmorRos1k2bZF7ZYfP0SGvFL75w0LrSasus@...&gt;\n &lt;3DDD0BE655869D4EA506652B3803AEF63A255F92@...-it.net&gt;\r\nMessage-id: &lt;A03C19D3-06D2-48D3-ADF4-AA8DB1E87DC7@...&gt;\r\nTo: Sebastien Lambla &lt;seb@...&gt;\r\nIn-reply-to: &lt;3DDD0BE655869D4EA506652B3803AEF63A255F92@...-it.net&gt;\r\nX-Mailer: iPhone Mail (7E18)\r\nDate: Thu, 08 Jul 2010 10:37:07 +0200\r\nCc: Glenn Block &lt;glenn.block@...&gt;, &quot;Roy T.Fielding&quot; &lt;fielding@...&gt;,\n bryan_w_taylor &lt;bryan_w_taylor@...&gt;,\n &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Re: Restful Approaches to some Enterprise\n Integration Problems\r\nX-Yahoo-Group-Post: member; u=289191104; y=raTyjNRtR_SuXFQf2fgIEaJF7vLi65EwBTu1Vv5ZVCqnaP-n4assQ8P5\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\r\n--Boundary_(ID_fScjjGUf99WR7rO6x4a0vQ)\r\nContent-type: text/plain; charset=utf-8; format=flowed; delsp=yes\r\nContent-transfer-encoding: quoted-printable\r\n\r\n\n\nSent from my iPhone\n\nOn Jul 8, 2010, at 10:28, Sebastien Lambla &lt;seb@seri=\r\nalseb.com&gt; wrote:\n\n&gt;\n&gt;\n&gt; As ReST is request-response, any eventing / pubsub=\r\n you try and slap  \n&gt; on it is something else that is not ReST. There are h=\r\nowever other  \n&gt; thesis that build on top of ReST to provide architectural =\r\n \n&gt; constraints for such systems, but I don=E2=80=99t have the link anymore=\r\n. Hav \n&gt; e a search\n&gt;\nGoogle for arrested rohit khare\n\nJan\n\n\n&gt; on the maili=\r\nng list, it should be in the archives somewhere.\n&gt;\n&gt;\n&gt;\n&gt; From: rest-discuss=\r\n@yahoogroups.com [mailto:rest- \n&gt; discuss@yahoogroups.com] On Behalf Of Gle=\r\nnn Block\n&gt; Sent: 08 July 2010 06:53\n&gt; To: Roy T.Fielding\n&gt; Cc: bryan_w_tayl=\r\nor; rest-discuss@yahoogroups.com\n&gt; Subject: Re: [rest-discuss] Re: Restful =\r\nApproaches to some  \n&gt; Enterprise Integration Problems\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Hi R=\r\noy\n&gt;\n&gt;\n&gt;\n&gt; Any thoughs on HTML5 Web Sockets wrt REST? Would it be viable to=\r\n  \n&gt; have a REST resources that can communicate changes (events) through  \n=\r\n&gt; web sockets? Or would you say that it is orthagonal?\n&gt;\n&gt;\n&gt;\n&gt; Thanks\n&gt; Gle=\r\nnn\n&gt;\n&gt; On Wed, Jul 7, 2010 at 8:25 PM, Roy T.Fielding &lt;fielding@...&gt;  =\r\n\n&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt; On Jul 6, 2010, at 12:22 AM, bryan_w_taylor wrote:\n&gt; &gt; --=\r\n- In rest-discuss@yahoogroups.com, &quot;Roy T. Fielding&quot;  \n&gt; &lt;fielding@...&gt; wro=\r\nte:\n&gt; &gt;\n&gt; &gt; &gt; &gt; Specifically, we are trying to find RESTful solutions to:\n&gt;=\r\n &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; 1) Guaranteed Delivery - we need a paradigm to follow so tha=\r\nt  \n&gt; one service can transfer a sequence of resource representations to  \n=\r\n&gt; another reliably even though both services and the network suffer  \n&gt; tem=\r\nporary unreliability\n&gt; &gt; &gt;\n&gt; &gt; &gt; That doesn&#39;t sound like a problem encounte=\r\nred by RESTful\n&gt; &gt; &gt; architectures. Reliable upload of multiple files can b=\r\ne\n&gt; &gt; &gt; performed using a single zip file, but the assumption being made\n&gt; =\r\n&gt; &gt; here is that the client has a shared understanding of what the\n&gt; &gt; &gt; se=\r\nrver is intending to do with those files. That&#39;s coupling.\n&gt; &gt;\n&gt; &gt; I don&#39;t =\r\nfollow. Several people have given good simple answers  \n&gt; saying to use the=\r\n idempotent nature of PUT (or fake it with POST)  \n&gt; until a GET of the res=\r\nource succeeds or add an HTTP header of If- \n&gt; None-Match: * and repeat the=\r\n PUT until you get a 412 Precondition  \n&gt; Failed response, so I thought thi=\r\ns was a slam dunk.\n&gt;\n&gt; I guess it depends on how you define guaranteed deli=\r\nvery. You can\n&gt; certainly do such things with HTTP, but doing CRUD ops via =\r\nHTTP does\n&gt; not automatically make it a RESTful paradigm.\n&gt;\n&gt;\n&gt;\n&gt; &gt; But tha=\r\nt answers &quot;how&quot; and I think you are getting at &quot;why&quot;. I&#39;m  \n&gt; imagining tha=\r\nt we have two servers A and B, where A plays the role  \n&gt; of the client in =\r\nthe interaction. Events happen on server A and  \n&gt; server B must receive so=\r\nme representation related to each event or  \n&gt; unacceptable business conseq=\r\nuences occur.\n&gt;\n&gt; Ah, typical event-based integration. That&#39;s a good archit=\r\nectural\n&gt; style for some applications. Why use REST to do that?\n&gt;\n&gt;\n&gt;\n&gt; &gt; W=\r\nhy can&#39;t we merge the functionality of server A and B? Lots of  \n&gt; reasons:=\r\n Security, regulatory compliance, use of 3rd party systems,  \n&gt; organizatio=\r\nnal boundaries and/or politics are a few. The way a  \n&gt; company manages it&#39;=\r\ns systems engineering work is to partition  \n&gt; business functionality into =\r\npieces, give ownership of each piece to  \n&gt; a team, and align physical reso=\r\nurces like servers to those teams. If  \n&gt; this imposes constraints not foun=\r\nd in RESTful systems, then I have  \n&gt; no choice but to deal with those.\n&gt;\n&gt;=\r\n Yes, but the RESTful solution is not to pretend that REST is an\n&gt; event-ba=\r\nsed integration style. What you want to do with REST is\n&gt; re-architect the =\r\nsystem into more isolated parts that are event-based\n&gt; (usually a very smal=\r\nl communication subsystem) and the remainder\n&gt; as a layered information sys=\r\ntem. The reason to do this, presumably,\n&gt; is to expose the RESTful interfac=\r\ne to consumers instead of exposing\n&gt; the much more complex (and brittle) ev=\r\nent interface.\n&gt;\n&gt; For example, CQ5 has a content repository based on the J=\r\nCR\n&gt; interface, which includes both observation (change event notifiers)\n&gt; =\r\nand RESTful interaction. The observation is behind the resource\n&gt; interface=\r\n, so the fact that it isn&#39;t RESTful itself does not\n&gt; interfere with the mu=\r\nlti-organizational, long-lived applications\n&gt; that might only use the Web i=\r\nnterface.\n&gt;\n&gt;\n&gt;\n&gt; &gt; &gt; Applications like that are usually accomplished via c=\r\node-on- \n&gt; demand.\n&gt; &gt; &gt; The problem you will run into here is implementati=\r\non issues\n&gt; &gt; &gt; regarding current browsers, not architectural issues and\n&gt; =\r\n&gt; &gt; certainly not a style issue. Most such tools are developed\n&gt; &gt; &gt; as bro=\r\nwser extensions or app-specific clients, mostly because\n&gt; &gt; &gt; they need unf=\r\nettered access to the filesystem and because\n&gt; &gt; &gt; browsers (for some unkno=\r\nwn reason) don&#39;t include integrity checks\n&gt; &gt; &gt; in normal file uploads.\n&gt; &gt;=\r\n\n&gt; &gt; I expect the clients of most of our services would count as &quot;app  \n&gt; s=\r\npecific clients&quot;. These might be our other services, our app  \n&gt; servers th=\r\nat host user interfaces, or sometimes we will allow  \n&gt; external business e=\r\nntities (customers, partners, suppliers, etc...)  \n&gt; to write such apps dir=\r\nectly. I don&#39;t mind going beyond browser  \n&gt; limitations.\n&gt; &gt;\n&gt; &gt; &gt; &gt; 2) Di=\r\nstributed Transactions - we need a paradigm to allow  \n&gt; state changes on m=\r\nultiple services to happen so that the changes  \n&gt; succeed or fail as a uni=\r\nt\n&gt; &gt; &gt;\n&gt; &gt; &gt; Again, not a characteristic of RESTful architectures. If the\n=\r\n&gt; &gt; &gt; client knows the transaction is distributed, you have failed.\n&gt; &gt; &gt; T=\r\nhere are lots of ways to solve this kind of problem on the\n&gt; &gt; &gt; back-end o=\r\nf services interfaces, behind the resource abstraction,\n&gt; &gt; &gt; but none of t=\r\nhose are relevant to the REST architectural style\n&gt; &gt; &gt; that might apply on=\r\n the front-end of the service interface.\n&gt; &gt;\n&gt; &gt; This one I accept doesn&#39;t =\r\nfit in a RESTful solution, and in other  \n&gt; posts in this thread, we are ex=\r\nploring several of other ways you  \n&gt; mention.\n&gt; &gt;\n&gt; &gt; &gt; &gt; 3) Long running =\r\noperations - we need asynchronous invocations  \n&gt; between services and a me=\r\nchanism for the invoking service to find  \n&gt; out when the invoked service i=\r\ns done given that this work may take  \n&gt; indefinitely long\n&gt; &gt; &gt;\n&gt; &gt; &gt; Any =\r\nresource can behave as a long-running service. Just program  \n&gt; it that way=\r\n.\n&gt; &gt;\n&gt; &gt; Right, the question is how, exactly. Good solutions have been  \n&gt;=\r\n posted in this thread for this. Subbu&#39;s RESTful Web Services  \n&gt; Cookbook =\r\nsolves this in examples 1.10 and 1.11. I think this was  \n&gt; another slam du=\r\nnk.\n&gt; &gt;\n&gt; &gt; I&#39;m curious what you think about using so called &quot;web hooks&quot; fo=\r\nr  \n&gt; this kind of thing. Would you consider this a violation of the  \n&gt; cl=\r\nient-server constraint?\n&gt;\n&gt; No, web hooks is just someone&#39;s marketing term =\r\nfor registering\n&gt; notifications. The components that act on them are still =\r\neither\n&gt; clients or servers during the communication (i.e., they are not\n&gt; =\r\ntrying to do both at the same time and functionality is still\n&gt; split acros=\r\ns components). This is not a new concept. E.g.,\n&gt;\n&gt; http://www.xent.com/FoR=\r\nK-archive/apr98/0445.html\n&gt;\n&gt; http://www.xent.com/FoRK-archive/august98/030=\r\n7.html\n&gt;\n&gt;\n&gt;\n&gt; &gt; &gt; &gt; 4) Workflow Orchestration - we would like to have  \n&gt; =\r\norchestration services that define business processes via  \n&gt; standardized =\r\nrepresentations (eg BPMN), then execute instances of  \n&gt; those processes an=\r\nd build up an process instance execution data  \n&gt; resource by interacting w=\r\nith other RESTful resources using message  \n&gt; exchange patterns that could =\r\nspecify the above behaviors.\n&gt; &gt; &gt;\n&gt; &gt; &gt; That is a system, not an integrati=\r\non problem. If you want to\n&gt; &gt; &gt; solve it, buy a full-featured WCM system l=\r\nike Day&#39;s CQ5.\n&gt; &gt; &gt;\n&gt; &gt; &gt; http://www.day.com/day/en/products/web_content_m=\r\nanagement.html\n&gt; &gt; &gt;\n&gt; &gt; &gt; (sorry, I don&#39;t have a way to answer that one wi=\r\nthout sounding\n&gt; &gt; &gt; like a sales plug -- it is, after all, why I work for =\r\na WCM  \n&gt; vendor).\n&gt; &gt;\n&gt; &gt; No need to apologize for pointing me to a produc=\r\nt that might be  \n&gt; useful for us. I&#39;ve been in several sales presentations=\r\n in the last  \n&gt; couple weeks with different vendors who have big fancy wor=\r\nkflow  \n&gt; engines. They all want to talk about WS-BPEL and orchestrating ou=\r\nr  \n&gt; SOAP endpoints. I enjoy the look of confusion when I mention that we =\r\n \n&gt; are considering not allowing any new services to be created using  \n&gt; S=\r\nOAP. That seems to get their attention. They say &quot;what will you do  \n&gt; inst=\r\nead?&quot; and I say use HTTP and they say &quot;huh?&quot;.\n&gt;\n&gt; As much as I like doing t=\r\nhings in HTTP, there are many closed systems\n&gt; that are better implemented =\r\nin an efficient RPC syntax or a wire\n&gt; protocol specifically designed for m=\r\nessage queues. Use whatever\n&gt; works best for the specific architecture behi=\r\nnd the resource interface\n&gt; and then apply REST as the external facade to s=\r\nupport large-scale\n&gt; integration and reusability of the information produce=\r\nd/consumed.\n&gt;\n&gt; Note, however, that SOAP is fairly unique for being the lea=\r\nst  \n&gt; efficient\n&gt; way of doing anything. That&#39;s what happens when core pro=\r\ntocol design\n&gt; is driven by marketing.\n&gt;\n&gt; ....Roy\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\r\n--Boundary_(ID_fScjjGUf99WR7rO6x4a0vQ)\r\nContent-type: text/html; charset=utf-8\r\nContent-transfer-encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;body bgcolor=3D&quot;#FFFFFF&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;Sent from my iPhone&lt;/div&gt;&lt;div&gt;=\r\n&lt;br&gt;On Jul 8, 2010, at 10:28, Sebastien Lambla &lt;&lt;a href=3D&quot;mailto:seb@se=\r\nrialseb.com&quot;&gt;seb@...&lt;/a&gt;&gt; wrote:&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;bloc=\r\nkquote type=3D&quot;cite&quot;&gt;&lt;div&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div class=3D&quot;WordSection1&quot;&gt;&lt;p class=\r\n=3D&quot;MsoNormal&quot;&gt;&lt;span style=3D&quot;font-size:11.0pt;font-family:&quot;Calibri&qu=\r\not;,&quot;sans-serif&quot;;color:#1F497D&quot;&gt;As ReST is request-response, any =\r\neventing / pubsub you try and slap on it is something else that is not ReST=\r\n. There are however other thesis that build on top of ReST to provide archi=\r\ntectural constraints for such systems, but I don=E2=80=99t have the link an=\r\nymore. Have a search &lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;Google for ar=\r\nrested rohit khare&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Jan&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;bl=\r\nockquote type=3D&quot;cite&quot;&gt;&lt;div&gt;&lt;div class=3D&quot;WordSection1&quot;&gt;&lt;p class=3D&quot;MsoNorm=\r\nal&quot;&gt;&lt;span style=3D&quot;font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;s=\r\nans-serif&quot;;color:#1F497D&quot;&gt;on the mailing list, it should be in the arc=\r\nhives somewhere.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=3D&quot;MsoNormal&quot;&gt;&lt;span style=3D=\r\n&quot;font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;co=\r\nlor:#1F497D&quot;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;div style=3D&quot;border:none;bor=\r\nder-top:solid #B5C4DF 1.0pt;padding:3.0pt 0cm 0cm 0cm&quot;&gt;&lt;p class=3D&quot;MsoNorma=\r\nl&quot; style=3D&quot;margin-left:36.0pt&quot;&gt;&lt;b&gt;&lt;span lang=3D&quot;EN-US&quot; style=3D&quot;font-size:=\r\n10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;&quot;&gt;From:&lt;/span&gt;&lt;=\r\n/b&gt;&lt;span lang=3D&quot;EN-US&quot; style=3D&quot;font-size:10.0pt;font-family:&quot;Tahoma&=\r\nquot;,&quot;sans-serif&quot;&quot;&gt; &lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.c=\r\nom&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt; [mailto:rest-discuss@yahoogroups.com] =\r\n&lt;b&gt;On Behalf Of\n &lt;/b&gt;Glenn Block&lt;br&gt;&lt;b&gt;Sent:&lt;/b&gt; 08 July 2010 06:53&lt;br&gt;&lt;b&gt;T=\r\no:&lt;/b&gt; Roy T.Fielding&lt;br&gt;&lt;b&gt;Cc:&lt;/b&gt; bryan_w_taylor; &lt;a href=3D&quot;mailto:rest-=\r\ndiscuss@yahoogroups.com&quot;&gt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot;&gt;re=\r\nst-discuss@yahoogroups.com&lt;/a&gt;&lt;/a&gt;&lt;br&gt;&lt;b&gt;Subject:&lt;/b&gt; Re: [rest-discuss] Re=\r\n: Restful Approaches to some Enterprise Integration Problems&lt;o:p&gt;&lt;/o:p&gt;&lt;/sp=\r\nan&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt&quot;&gt;&lt;o:p=\r\n&gt;&nbsp;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt&quot;&gt;&lt;br&gt;&lt;b=\r\nr&gt;&lt;br&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0p=\r\nt&quot;&gt;Hi Roy&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-l=\r\neft:36.0pt&quot;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D=\r\n&quot;margin-left:36.0pt&quot;&gt;Any thoughs on HTML5 Web Sockets wrt REST? Would it be=\r\n viable to have a REST resources that can communicate changes (events) thro=\r\nugh web sockets? Or would you say that it is orthagonal?&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/di=\r\nv&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt&quot;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p=\r\n&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-margin-top-alt:0cm;marg=\r\nin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt&quot;&gt;Thanks&lt;br&gt;Glenn&lt;o:p&gt;&lt;=\r\n/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt&quot;&gt;On =\r\nWed, Jul 7, 2010 at 8:25 PM, Roy T.Fielding &lt;&lt;a href=3D&quot;mailto:fielding@=\r\ngbiv.com&quot;&gt;&lt;a href=3D&quot;mailto:fielding@...&quot;&gt;fielding@...&lt;/a&gt;&lt;/a&gt;&gt=\r\n; wrote:&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.=\r\n0pt;background:white&quot;&gt;&nbsp; &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;p class=3D=\r\n&quot;MsoNormal&quot; style=3D&quot;mso-margin-top-alt:0cm;margin-right:0cm;margin-bottom:=\r\n12.0pt;margin-left:36.0pt;background:white&quot;&gt;On Jul 6, 2010, at 12:22 AM, br=\r\nyan_w_taylor wrote:&lt;br&gt;&gt; --- In &lt;a href=3D&quot;mailto:rest-discuss%40yahoogr=\r\noups.com&quot; target=3D&quot;_blank&quot;&gt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot;=\r\n&gt;rest-discuss@yahoogroups.com&lt;/a&gt;&lt;/a&gt;, &quot;Roy T. Fielding&quot; &lt;fielding@...&g=\r\nt; wrote:&lt;br&gt;&gt; &lt;br&gt;&gt; &gt; &gt; Specifically, we are trying to find RE=\r\nSTful solutions to:&lt;br&gt;&gt; &gt; &gt; &lt;br&gt;&gt; &gt; &gt; 1) Guaranteed Deli=\r\nvery - we need a paradigm to follow so that one service can transfer a sequ=\r\nence of resource\n representations to another reliably even though both serv=\r\nices and the network suffer temporary unreliability&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &=\r\ngt; That doesn&#39;t sound like a problem encountered by RESTful&lt;br&gt;&gt; &gt; a=\r\nrchitectures. Reliable upload of multiple files can be&lt;br&gt;&gt; &gt; perform=\r\ned using a single zip file, but the assumption being made&lt;br&gt;&gt; &gt; here=\r\n is that the client has a shared understanding of what the&lt;br&gt;&gt; &gt; ser=\r\nver is intending to do with those files. That&#39;s coupling.&lt;br&gt;&gt; &lt;br&gt;&gt; =\r\nI don&#39;t follow. Several people have given good simple answers saying to use=\r\n the idempotent nature of PUT (or fake it with POST) until a GET of the res=\r\nource succeeds or add an HTTP header of If-None-Match: * and repeat the PUT=\r\n until you get a 412 Precondition Failed response, so I thought this was a =\r\nslam dunk.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:=\r\n36.0pt;background:white&quot;&gt;I guess it depends on how you define guaranteed de=\r\nlivery. You can&lt;br&gt;certainly do such things\n with HTTP, but doing CRUD ops =\r\nvia HTTP does&lt;br&gt;not automatically make it a RESTful paradigm. &lt;o:p&gt;&lt;/o:p&gt;&lt;=\r\n/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-margin-top-alt:0cm;margin-right=\r\n:0cm;margin-bottom:12.0pt;margin-left:36.0pt;background:white&quot;&gt;&lt;br&gt;&lt;br&gt;&gt;=\r\n But that answers &quot;how&quot; and I think you are getting at &quot;why&quot;. I&#39;m imagining=\r\n that we have two servers A and B, where A plays the role of the client in =\r\nthe interaction. Events happen on server A and server B must receive some r=\r\nepresentation related to each event or unacceptable business consequences o=\r\nccur.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0p=\r\nt;background:white&quot;&gt;Ah, typical event-based integration. That&#39;s a good arch=\r\nitectural&lt;br&gt;style for some applications. Why use REST to do that? &lt;o:p&gt;&lt;/o=\r\n:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-margin-top-alt:0cm;margin-r=\r\night:0cm;margin-bottom:12.0pt;margin-left:36.0pt;background:white&quot;&gt;&lt;br&gt;&lt;br&gt;=\r\n&gt; Why can&#39;t we merge the functionality of server A and B? Lots\n of reaso=\r\nns: Security, regulatory compliance, use of 3rd party systems, organization=\r\nal boundaries and/or politics are a few. The way a company manages it&#39;s sys=\r\ntems engineering work is to partition business functionality into pieces, g=\r\nive ownership of each piece to a team, and align physical resources like se=\r\nrvers to those teams. If this imposes constraints not found in RESTful syst=\r\nems, then I have no choice but to deal with those. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p =\r\nclass=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt;background:white&quot;&gt;Yes, but =\r\nthe RESTful solution is not to pretend that REST is an&lt;br&gt;event-based integ=\r\nration style. What you want to do with REST is&lt;br&gt;re-architect the system i=\r\nnto more isolated parts that are event-based&lt;br&gt;(usually a very small commu=\r\nnication subsystem) and the remainder&lt;br&gt;as a layered information system. T=\r\nhe reason to do this, presumably,&lt;br&gt;is to expose the RESTful interface to =\r\nconsumers instead of exposing&lt;br&gt;the much more complex (and brittle) event\n=\r\n interface.&lt;br&gt;&lt;br&gt;For example, CQ5 has a content repository based on the J=\r\nCR&lt;br&gt;interface, which includes both observation (change event notifiers)&lt;b=\r\nr&gt;and RESTful interaction. The observation is behind the resource&lt;br&gt;interf=\r\nace, so the fact that it isn&#39;t RESTful itself does not&lt;br&gt;interfere with th=\r\ne multi-organizational, long-lived applications&lt;br&gt;that might only use the =\r\nWeb interface. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-marg=\r\nin-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt;bac=\r\nkground:white&quot;&gt;&lt;br&gt;&lt;br&gt;&gt; &gt; Applications like that are usually accompl=\r\nished via code-on-demand.&lt;br&gt;&gt; &gt; The problem you will run into here i=\r\ns implementation issues&lt;br&gt;&gt; &gt; regarding current browsers, not archit=\r\nectural issues and&lt;br&gt;&gt; &gt; certainly not a style issue. Most such tool=\r\ns are developed&lt;br&gt;&gt; &gt; as browser extensions or app-specific clients,=\r\n mostly because&lt;br&gt;&gt; &gt; they need unfettered access to the filesystem =\r\nand because&lt;br&gt;&gt; &gt;\n browsers (for some unknown reason) don&#39;t include =\r\nintegrity checks&lt;br&gt;&gt; &gt; in normal file uploads.&lt;br&gt;&gt; &lt;br&gt;&gt; I ex=\r\npect the clients of most of our services would count as &quot;app specific clien=\r\nts&quot;. These might be our other services, our app servers that host user inte=\r\nrfaces, or sometimes we will allow external business entities (customers, p=\r\nartners, suppliers, etc...) to write such apps directly. I don&#39;t mind going=\r\n beyond browser limitations. &lt;br&gt;&gt; &lt;br&gt;&gt; &gt; &gt; 2) Distributed Tra=\r\nnsactions - we need a paradigm to allow state changes on multiple services =\r\nto happen so that the changes succeed or fail as a unit&lt;br&gt;&gt; &gt; &lt;br&gt;&g=\r\nt; &gt; Again, not a characteristic of RESTful architectures. If the&lt;br&gt;&gt=\r\n; &gt; client knows the transaction is distributed, you have failed.&lt;br&gt;&gt=\r\n; &gt; There are lots of ways to solve this kind of problem on the&lt;br&gt;&gt; =\r\n&gt; back-end of services interfaces, behind the resource abstraction,&lt;br&gt;&=\r\ngt; &gt; but none of those are\n relevant to the REST architectural style&lt;br=\r\n&gt;&gt; &gt; that might apply on the front-end of the service interface.&lt;br&gt;&=\r\ngt; &lt;br&gt;&gt; This one I accept doesn&#39;t fit in a RESTful solution, and in ot=\r\nher posts in this thread, we are exploring several of other ways you mentio=\r\nn.&lt;br&gt;&gt; &lt;br&gt;&gt; &gt; &gt; 3) Long running operations - we need asynchro=\r\nnous invocations between services and a mechanism for the invoking service =\r\nto find out when the invoked service is done given that this work may take =\r\nindefinitely long&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; Any resource can behave as a l=\r\nong-running service. Just program it that way.&lt;br&gt;&gt; &lt;br&gt;&gt; Right, the =\r\nquestion is how, exactly. Good solutions have been posted in this thread fo=\r\nr this. Subbu&#39;s RESTful Web Services Cookbook solves this in examples 1.10 =\r\nand 1.11. I think this was another slam dunk.&lt;br&gt;&gt; &lt;br&gt;&gt; I&#39;m curious =\r\nwhat you think about using so called &quot;web hooks&quot; for this kind of thing. Wo=\r\nuld you consider this a violation of the\n client-server constraint? &lt;o:p&gt;&lt;/=\r\no:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt;background=\r\n:white&quot;&gt;No, web hooks is just someone&#39;s marketing term for registering&lt;br&gt;n=\r\notifications. The components that act on them are still either&lt;br&gt;clients o=\r\nr servers during the communication (i.e., they are not&lt;br&gt;trying to do both=\r\n at the same time and functionality is still&lt;br&gt;split across components). T=\r\nhis is not a new concept. E.g.,&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.xent.com/FoRK-=\r\narchive/apr98/0445.html&quot; target=3D&quot;_blank&quot;&gt;&lt;a href=3D&quot;http://www.xent.com/F=\r\noRK-archive/apr98/0445.html&quot;&gt;http://www.xent.com/FoRK-archive/apr98/0445.ht=\r\nml&lt;/a&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;http://www.xent.com/FoRK-archive/august98/0307=\r\n.html&quot; target=3D&quot;_blank&quot;&gt;&lt;a href=3D&quot;http://www.xent.com/FoRK-archive/august=\r\n98/0307.html&quot;&gt;http://www.xent.com/FoRK-archive/august98/0307.html&lt;/a&gt;&lt;/a&gt; &lt;=\r\no:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-margin-top-alt:0cm;m=\r\nargin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt;background:white&quot;&gt;&lt;=\r\nbr&gt;&lt;br&gt;&gt; &gt; &gt; 4) Workflow Orchestration - we would like to have orc=\r\nhestration services that define business processes via standardized\n repres=\r\nentations (eg BPMN), then execute instances of those processes and build up=\r\n an process instance execution data resource by interacting with other REST=\r\nful resources using message exchange patterns that could specify the above =\r\nbehaviors.&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; That is a system, not an integration =\r\nproblem. If you want to&lt;br&gt;&gt; &gt; solve it, buy a full-featured WCM syst=\r\nem like Day&#39;s CQ5.&lt;br&gt;&gt; &gt; &lt;br&gt;&gt; &gt; &lt;a href=3D&quot;http://www.day.com=\r\n/day/en/products/web_content_management.html&quot; target=3D&quot;_blank&quot;&gt;&lt;a href=3D&quot;=\r\nhttp://www.day.com/day/en/products/web_content_management.html&quot;&gt;http://www.=\r\nday.com/day/en/products/web_content_management.html&lt;/a&gt;&lt;/a&gt;&lt;br&gt;&gt; &gt; &lt;b=\r\nr&gt;&gt; &gt; (sorry, I don&#39;t have a way to answer that one without sounding&lt;=\r\nbr&gt;&gt; &gt; like a sales plug -- it is, after all, why I work for a WCM ve=\r\nndor).&lt;br&gt;&gt; &lt;br&gt;&gt; No need to apologize for pointing me to a product t=\r\nhat might be useful for us. I&#39;ve been in several sales presentations in the=\r\n last couple weeks with different vendors who have big fancy workflow engin=\r\nes. They all want to\n talk about WS-BPEL and orchestrating our SOAP endpoin=\r\nts. I enjoy the look of confusion when I mention that we are considering no=\r\nt allowing any new services to be created using SOAP. That seems to get the=\r\nir attention. They say &quot;what will you do instead?&quot; and I say use HTTP and t=\r\nhey say &quot;huh?&quot;. &lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;mso-ma=\r\nrgin-top-alt:0cm;margin-right:0cm;margin-bottom:12.0pt;margin-left:36.0pt;b=\r\nackground:white&quot;&gt;As much as I like doing things in HTTP, there are many clo=\r\nsed systems&lt;br&gt;that are better implemented in an efficient RPC syntax or a =\r\nwire&lt;br&gt;protocol specifically designed for message queues. Use whatever&lt;br&gt;=\r\nworks best for the specific architecture behind the resource interface&lt;br&gt;a=\r\nnd then apply REST as the external facade to support large-scale&lt;br&gt;integra=\r\ntion and reusability of the information produced/consumed.&lt;br&gt;&lt;br&gt;Note, how=\r\never, that SOAP is fairly unique for being the least efficient&lt;br&gt;way of do=\r\ning anything. That&#39;s what\n happens when core protocol design&lt;br&gt;is driven b=\r\ny marketing.&lt;br&gt;&lt;br&gt;....Roy&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=\r\n=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt;background:white&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b=\r\nr&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;div&gt;&lt;p class=3D&quot;MsoNormal&quot; style=3D&quot;margin-left:36.0pt;ba=\r\nckground:white&quot;&gt;&lt;span style=3D&quot;color:white&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;&lt;/div&gt;\n\n\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div=\r\n&gt;\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Boundary_(ID_fScjjGUf99WR7rO6x4a0vQ)--\r\n\n"}}