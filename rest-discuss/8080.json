{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"SqOjDydFETSuMgiUcB2Ga7n6AjVZ-S0fINFo76GwD_iLoq3XN2nkZeC0pMMtH1huGCzuQhlbvIhhHRtIZG6Wg8aYhNohgkkCjg8cIQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Acceptable Responses","postDate":"1173107625","msgId":8080,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVzaGMzOSttMmdoQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVzaDdqMiR2cHQkMUBzZWEuZ21hbmUub3JnPg=="},"prevInTopic":8079,"nextInTopic":8081,"prevInTime":8079,"nextInTime":8081,"topicId":8074,"numMessagesInTopic":13,"msgSnippet":"On re-using Accept in the response: For what its worth, SIP uses an Accept in the OPTIONS response to indicate what types the resource itself can accept in","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 74316 invoked from network); 5 Mar 2007 15:21:27 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m30.grp.scd.yahoo.com with QMQP; 5 Mar 2007 15:21:27 -0000\r\nReceived: from unknown (HELO n14b.bullet.sp1.yahoo.com) (69.147.64.116)\n  by mta11.grp.scd.yahoo.com with SMTP; 5 Mar 2007 15:21:27 -0000\r\nReceived: from [216.252.122.217] by n14.bullet.sp1.yahoo.com with NNFMP; 05 Mar 2007 15:13:45 -0000\r\nReceived: from [66.218.69.6] by t2.bullet.sp1.yahoo.com with NNFMP; 05 Mar 2007 15:13:45 -0000\r\nReceived: from [66.218.66.91] by t6.bullet.scd.yahoo.com with NNFMP; 05 Mar 2007 15:13:45 -0000\r\nDate: Mon, 05 Mar 2007 15:13:45 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;eshc39+m2gh@...&gt;\r\nIn-Reply-To: &lt;esh7j2$vpt$1@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: Acceptable Responses\r\nX-Yahoo-Group-Post: member; u=221173245; y=pUItEtRHZeiRZtWCPQ9MZ5j_pGNbZes7FtW5N0jrU26l0HpZgw\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nOn re-using Accept in the response:\n\nFor what its worth, SIP uses an Accept=\r\n in the OPTIONS response to\nindicate what types the resource itself can acc=\r\nept in requests.\n\nIt makes sense that this would mean the same thing in the=\r\n context of\nHTTP. ie. this is what can be POSTed or PUT to the resource.\n\n\n=\r\n--- In rest-discuss@yahoogroups.com, Jerome Louvel &lt;contact@...&gt; wrote:\n&gt;\n&gt;=\r\n Hi Alan,\n&gt; \n&gt; Nice post. This is indeed an issue. I like the idea to lever=\r\nage OPTIONS \n&gt; as a way to obtain metadata on the resource. One option coul=\r\nd be to \n&gt; return a WADL snippet describing only the resource that is the\nt=\r\narget of \n&gt; the OPTIONS method.\n&gt; \n&gt; Otherwise, your proposition to use new=\r\n headers is even better. It is \n&gt; important to note that there are multiple=\r\n aspects defining what is \n&gt; acceptable, the media type, the language, etc.=\r\n If we add an \n&gt; &quot;Acceptable:&quot; header, we should also add &quot;Acceptable-Langu=\r\nage&quot;, \n&gt; &quot;Acceptable-Charset&quot; and &quot;Acceptable-Encoding&quot;.\n&gt; \n&gt; Actually, as =\r\nthe &quot;Accept-Ranges&quot; response headers already exists for \n&gt; similar purposes=\r\n, we could simply reuse the request headers as response \n&gt; headers: &quot;Accept=\r\n&quot; to list acceptable media types, &quot;Accept-Language&quot;, \n&gt; &quot;Accept-Charset&quot; an=\r\nd &quot;Accept-Encoding&quot; for other metadata.\n&gt; \n&gt; Regards,\n&gt; Jerome\n&gt; \n&gt; \n&gt; Alan=\r\n Dean a =E9crit :\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; I apologise up front for what will be a rat=\r\nher lengthy post to the\n&gt; &gt; group.\n&gt; &gt; \n&gt; &gt; I would like some feedback on s=\r\nomething that I&#39;ve been thinking hard\n&gt; &gt; about recently: &quot;acceptable respo=\r\nnses&quot;.\n&gt; &gt; \n&gt; &gt; What do I mean by this? Well, we all know that one of the s=\r\ntrengths\n&gt; &gt; of REST is that the interface is &#39;well-known&#39; so we don&#39;t need=\r\n to use\n&gt; &gt; WSDL (or equivalent) to bind to a RESTful endpoint - we just ne=\r\ned a\n&gt; &gt; URL.\n&gt; &gt; \n&gt; &gt; As an example, we can quite happily have the followi=\r\nng\n&gt; &gt; Request/Response to do a directory listing:\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; GET /fo=\r\no/\n&gt; &gt; \n&gt; &gt; &lt;--\n&gt; &gt; 200 OK\n&gt; &gt; Content-Type: text/html\n&gt; &gt; \n&gt; &gt; &lt;html&gt;\n&gt; &gt; =\r\n&lt;body&gt;\n&gt; &gt; &lt;a href=3D&quot;dir1/&quot;&gt;dir1&lt;/a&gt;\n&gt; &gt; &lt;a href=3D&quot;dir2/&quot;&gt;dir2&lt;/a&gt;\n&gt; &gt; &lt;a=\r\n href=3D&quot;file.txt/&quot;&gt;Text File&lt;/a&gt;\n&gt; &gt; &lt;a href=3D&quot;file.html/&quot;&gt;HTML File&lt;/a&gt;\n=\r\n&gt; &gt; &lt;/body&gt;\n&gt; &gt; &lt;/html&gt;\n&gt; &gt; \n&gt; &gt; Now, that&#39;s all fine and uncontroversial. =\r\nA cient can parse the\n&gt; &gt; response representation, discover the text/html c=\r\nontent type, load\n&gt; &gt; the body into a DOM and select each href - perhaps wi=\r\nth the\n&gt; &gt; XPath //@href\n&gt; &gt; \n&gt; &gt; This also allows the response representat=\r\nion to be loaded in a\n&gt; &gt; browser and viewed by a human.\n&gt; &gt; \n&gt; &gt; However..=\r\n.\n&gt; &gt; \n&gt; &gt; What if the client is a robot?\n&gt; &gt; \n&gt; &gt; The above example text/h=\r\ntml representation will probably be fine for\n&gt; &gt; most robots, such as searc=\r\nh crawlers. But I wonder if this is really\n&gt; &gt; nothing more clever than scr=\r\neen-scraping. (Note that this approach\n&gt; &gt; would treat all href URLs the sa=\r\nme)\n&gt; &gt; \n&gt; &gt; The obvious answer to this is to support multiple representati=\r\nons. In\n&gt; &gt; the example above, the request implicitly carries an Accept: */=\r\n*\n&gt; &gt; header value. However, a robot might make the following request\n&gt; &gt; i=\r\nnstead:\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; GET /foo/\n&gt; &gt; Accept: application/rdf+xml\n&gt; &gt; \n&gt; &gt;=\r\n &lt;--\n&gt; &gt; 200 OK\n&gt; &gt; Content-Type: application/rdf+xml\n&gt; &gt; \n&gt; &gt; &lt;?xml versio=\r\nn=3D&quot;1.0&quot;?&gt;\n&gt; &gt; &lt;rdf:RDF&gt;\n&gt; &gt; ...\n&gt; &gt; &lt;rdf:RDF&gt;\n&gt; &gt; \n&gt; &gt; Now the robot has =\r\nobtained an RDF/XML representation of the directory\n&gt; &gt; contents. This is n=\r\no longer simple screen-scraping, but semantically\n&gt; &gt; meaningful data.\n&gt; &gt; =\r\n\n&gt; &gt; Again, this isn&#39;t terribly controversial. But note that we now have\n&gt; =\r\n&gt; two alternate representations of the some resource and we have\n&gt; &gt; decide=\r\nd which is the default. Furthermore, there could be many other\n&gt; &gt; alternat=\r\ne representation formats - each as equally &#39;standard&#39; as\n&gt; &gt; text/html or a=\r\npplication/rdf+xml - such as text/plain or text/csv and\n&gt; &gt; so on.\n&gt; &gt; \n&gt; &gt;=\r\n This means that any of the following requests might be acceptable:\n&gt; &gt; \n&gt; =\r\n&gt; --&gt;\n&gt; &gt; GET /foo/\n&gt; &gt; Accept: text/plain\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; GET /foo/\n&gt; &gt; A=\r\nccept: text/csv\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; GET /foo/\n&gt; &gt; Accept: text/html\n&gt; &gt; \n&gt; &gt; -=\r\n-&gt;\n&gt; &gt; GET /foo/\n&gt; &gt; Accept: application/rdf+xml\n&gt; &gt; \n&gt; &gt; This now draws me=\r\n towards the crux of my question.\n&gt; &gt; \n&gt; &gt; How does a client discover the s=\r\nupported representations?\n&gt; &gt; \n&gt; &gt; The client might ping the resource with =\r\neach known (to the client)\n&gt; &gt; Content-Type, in the following manner:\n&gt; &gt; \n=\r\n&gt; &gt; --&gt;\n&gt; &gt; HEAD /foo/\n&gt; &gt; Accept: application/xml\n&gt; &gt; \n&gt; &gt; &lt;--\n&gt; &gt; 406 Not=\r\n Acceptable\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; HEAD /foo/\n&gt; &gt; Accept: text/html\n&gt; &gt; \n&gt; &gt; &lt;--\n=\r\n&gt; &gt; 200 OK\n&gt; &gt; Content-Type: application/rdf+xml\n&gt; &gt; \n&gt; &gt; This has several =\r\ndrawbacks to it (latency and inefficiency both jump\n&gt; &gt; to mind).\n&gt; &gt; \n&gt; &gt; =\r\nSome of you may be thinking that 300 Multiple Choices is the answer.\n&gt; &gt; Bu=\r\nt I suspect that, for this issue, the problem becomes circular at\n&gt; &gt; this =\r\npoint (what format should the 300 response representation itself\n&gt; &gt; use?).=\r\n\n&gt; &gt; \n&gt; &gt; Furthermore, this issue is implicit in many requests. Consider wh=\r\nat\n&gt; &gt; the representation format should be for any of the following:\n&gt; &gt; \n&gt;=\r\n &gt; 1. An OPTIONS request (what are the supported representation formats?)\n&gt;=\r\n &gt; 2. A 406 Not Acceptable response (what are acceptable representation\n&gt; &gt;=\r\n formats?)\n&gt; &gt; 3. A 300 Multiple Choices response\n&gt; &gt; \n&gt; &gt; At first blush, =\r\nwe might decide that what we need is a standard\n&gt; &gt; representation. I thoug=\r\nht about that and decided that it makes little\n&gt; &gt; sense - mostly for pragm=\r\natic and practical reasons, but also because\n&gt; &gt; it seems to fall foul of t=\r\nhe same anti-pattern as WSDL.\n&gt; &gt; \n&gt; &gt; Then ... I thought about how allowed=\r\n methods are communicated:\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; OPTIONS /foo/\n&gt; &gt; \n&gt; &gt; &lt;--\n&gt; &gt; =\r\n200 OK\n&gt; &gt; Allow: GET, HEAD, POST, PUT, DELETE\n&gt; &gt; \n&gt; &gt; I wonder if the ans=\r\nwer to the dilemna outlined above is that we need\n&gt; &gt; an equivalent HTTP he=\r\nader for Content-Types? Consider the following:\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; OPTIONS /f=\r\noo/\n&gt; &gt; \n&gt; &gt; &lt;--\n&gt; &gt; 200 OK\n&gt; &gt; Allow: GET, HEAD, POST, PUT, DELETE\n&gt; &gt; Acc=\r\neptable: text/plain, text/html, application/rdf+xml\n&gt; &gt; \n&gt; &gt; --&gt;\n&gt; &gt; GET /f=\r\noo/\n&gt; &gt; Accept: model/*\n&gt; &gt; \n&gt; &gt; &lt;--\n&gt; &gt; 406 Not Acceptable\n&gt; &gt; Acceptable:=\r\n text/plain, text/html, application/rdf+xml\n&gt; &gt; \n&gt; &gt; This seems clean and e=\r\nlegant to me. What do you all think?\n&gt; &gt; \n&gt; &gt; Regards,\n&gt; &gt; Alan Dean\n&gt; &gt; ht=\r\ntp://thoughtpad.net/who/alan-dean/\n&lt;http://thoughtpad.net/who/alan-dean/&gt;\n&gt;=\r\n &gt; \n&gt; &gt;\n&gt;\n\n\n\n"}}