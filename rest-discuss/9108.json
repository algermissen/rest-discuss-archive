{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"z-ciO2bzs5fLna9jC361xUuyPflI63rG3t7pYQdQfKMjbnHA-QLyw1s1VOzVJLL2LkBizOYYdq3F5sAxUoy8Rv_0dEjvfbRPao_rh6oqAA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: REST API specification templates","postDate":"1182322980","msgId":9108,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNDcwMWM3YjMwOSQwYTI3OGMzMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDIwMDcwNjE5MDAwNzQxLkdKMjQ3MDhAa2xhbmdyYXVtPg==","referencesHeader":"PGYzNjJkNCsxZW1hQGVHcm91cHMuY29tPiA8MjAwNzA1MjYyMTQzMzguR0k2MDM4QGtsYW5ncmF1bT4gPDZmYjE3M2Y1MDcwNTI2MTUxN3Q4ZjAwYjR5MTllODQyNzVmZGViNjU1ZkBtYWlsLmdtYWlsLmNvbT4gPDAyYzUwMWM3OWZmZSRjZjAwNDc0MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+IDwwMDAxMDFjN2EwMWIkYjUzMzdjYzAkMDIwMWE4YzBAbWVyY3VyeT4gPDAyZjEwMWM3YTAyOCQyODE5NDgzMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+IDwyMDA3MDUyNzE2MDUwNy5HTjYwMzhAa2xhbmdyYXVtPiA8MDAwMDAxYzdhMDkzJDQ5MmZlMjIwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDIwMDcwNjE5MDAwNzQxLkdKMjQ3MDhAa2xhbmdyYXVtPg=="},"prevInTopic":9092,"nextInTopic":9640,"prevInTime":9107,"nextInTime":9109,"topicId":8578,"numMessagesInTopic":91,"msgSnippet":"... Actually, your last paragraph sums it up for me too. What I m struggling with is this: I think things that are too easy to create and change result in","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 81504 invoked from network); 20 Jun 2007 07:03:03 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m43.grp.scd.yahoo.com with QMQP; 20 Jun 2007 07:03:03 -0000\r\nReceived: from unknown (HELO wx-out-0506.google.com) (66.249.82.237)\n  by mta13.grp.scd.yahoo.com with SMTP; 20 Jun 2007 07:03:02 -0000\r\nReceived: by wx-out-0506.google.com with SMTP id i30so81405wxd\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 20 Jun 2007 00:03:02 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:from:to:references:subject:date:message-id:mime-version:content-type:content-transfer-encoding:x-mailer:thread-index:in-reply-to:x-mimeole;\n        b=sgZj9ymyW7t+HqXkxTTvDXnFflbc2wptufAufJ5YrYEa+AyEK+j4VdrF5vW9chutqpggtyFNg14Cd++N86cg8SwZIxFVyw+C+kyF5ycELX8nX2/Smr6AvCNf0q4pOhA/ISrBqxV5J6lo6i865SI/FjBimFoGEYWCvR5//LE5cpE=\r\nReceived: by 10.70.113.13 with SMTP id l13mr612535wxc.1182322982600;\n        Wed, 20 Jun 2007 00:03:02 -0700 (PDT)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nReceived: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTP id 7sm444136wrh.2007.06.20.00.03.00\n        (version=SSLv3 cipher=RC4-MD5);\n        Wed, 20 Jun 2007 00:03:01 -0700 (PDT)\r\nTo: &quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;f362d4+1ema@...&gt; &lt;20070526214338.GI6038@klangraum&gt; &lt;6fb173f50705261517t8f00b4y19e84275fdeb655f@...&gt; &lt;02c501c79ffe$cf004740$0702a8c0@...&gt; &lt;000101c7a01b$b5337cc0$0201a8c0@mercury&gt; &lt;02f101c7a028$28194830$0702a8c0@...&gt; &lt;20070527160507.GN6038@klangraum&gt; &lt;000001c7a093$492fe220$0702a8c0@...&gt; &lt;20070619000741.GJ24708@klangraum&gt;\r\nDate: Wed, 20 Jun 2007 03:03:00 -0400\r\nMessage-ID: &lt;004701c7b309$0a278c30$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nThread-Index: AceyCSNMs3f8hxJeSTCgDrEPJrE5dwA/omAg\r\nIn-Reply-To: &lt;20070619000741.GJ24708@klangraum&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3138\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] Re: REST API specification templates\r\nX-Yahoo-Group-Post: member; u=228155998; y=bnkFhjz9kI5MdrgbGDMk5hN_W31Odyyo_DJobuoMirZ_rlfzPnhW\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\nA. Pagaltzis wrote:\n&gt; &gt; &gt; That&#39;s what I think is great about the AtomPP: it\n&gt; &gt; &gt; provides a base for a large array of services by\n&gt; &gt; &gt; defining a few base media types and a number of HTTP\n&gt; &gt; &gt; transactions complete with meanings, granular enough\n&gt; &gt; &gt; to be useful without customisation, but with clear\n&gt; &gt; &gt; extension hooks throughout.\n&gt; &gt; &gt; \n&gt; &gt; To me this is too close to &quot;the one Media Type to rule \n&gt; &gt; them all&quot; (what would we do w/o Tolkien?!?).  AtomPP\n&gt; &gt; seems to me to be more of a well-defined conduit for\n&gt; &gt; implementing services than anything that would help\n&gt; &gt; identify specific services, but I haven&#39;t been\n&gt; &gt; following it closely enough to know for sure.\n&gt; &gt; \n&gt; &gt; So at the risk of having an opinion based on ignorance,\n&gt; &gt; I&#39;d say that AtomPP would be a great base but we still\n&gt; &gt; need to be able to define Webful APIs for specific\n&gt; &gt; services, i.e.\n&gt; &gt; \n&gt; &gt; \t&quot;application/atomserv+xml/events&quot;\n&gt; &gt; \n&gt; &gt; &quot;Event&quot;s here would still be vetted by a working group\n&gt; &gt; somewhere and still need to be registered with IANA.\n&gt; &gt; \n&gt; &gt; How does that sit with you?\n&gt; &gt; \n&gt; Not sure. I appreciate the concern, but I&#39;m coming to\n&gt; different conclusions.\n&gt; \n&gt; Looking at `application/atomsvc+xml` tells a client where\n&gt; to look for links, and what they mean (well mostly; there\n&gt; may be extension elements and link relationships it\n&gt; doesn&#39;t know about, but that&#39;s fine). And generic clients\n&gt; for AtomPP are certainly going to be written. (Going to?\n&gt; Have been.)\n&gt; \n&gt; What specific use case the AtomPP server in question is\n&gt; designed for should hopefully not matter - not to the\n&gt; point of needing a new media type anyway. If it differs\n&gt; that much, it won&#39;t be AtomPP anymore and should be\n&gt; designed from scratch.\n&gt; \n&gt; (If it doesn&#39;t differ that much, then describing the\n&gt; difference within the document, such as by using the\n&gt; feature extension, would be enough; intermediaries,\n&gt; f.ex., wouldn&#39;t be affected by the specific use case.)\n&gt; \n&gt; And I do fully expect we will see other generic\n&gt; REST-based protocols, mostly non-overlapping in the class\n&gt; of target use cases. That is fine and I consider it a\n&gt; sign of a healthy ecosystem. From another part of my\n&gt; message that you quoted:\n&gt; \n&gt; &gt; &gt; We need a middle ground: a small variety of somewhat\n&gt; &gt; &gt; generic media types that can be used for a wide\n&gt; &gt; &gt; variety of things. Individual services can then use\n&gt; &gt; &gt; one of them, and clients can then be implemented as\n&gt; &gt; &gt; glue on top of a library.\n&gt; &gt; &gt; \n&gt; I think our difference in view is that you see AtomPP as\n&gt; ruling the market, possibly? My expectation is that it\n&gt; will see strong adoption, and maybe even capture a\n&gt; majority of the pie (a big maybe here), however I don&#39;t\n&gt; think it will take all. Therefore I&#39;m not that worried.\n&gt; \n&gt; What might be useful is to have payload media types for\n&gt; common applications, for reuse across REST-based\n&gt; protocols. But that is something I think will happen\n&gt; naturally in a non-coordinated fashion anyway.\n&gt; \n&gt; For now I just want to watch AtomPP and see how things\n&gt; shake out. REST outside the browser hasn&#39;t really been\n&gt; done in anger on the open web yet, and I have little\n&gt; faith in our collective ability to anticipate what will\n&gt; work and what not so much.\n\nActually, your last paragraph sums it up for me too. \n\nWhat I&#39;m struggling with is this: I think things that are too easy to create\nand change result in interoperability problems. Imagine people creating\nhundreds of HTTP methods?  Zero interoperability. So the easier it is to\ncreate new content types, the more people will do it. Or put another way, if\nAtomPP becomes the universal content type with an infinite number of\n(essentially) &quot;subtypes&quot; then interoperability will be limited to the least\ncommon denominator for AtomPP. If apps depend on higher level functionality,\nthey won&#39;t work and without, they won&#39;t do much interesting.\n\nBut honestly, I don&#39;t have an answer for it all, I&#39;m just pontificating.\n\n-- \n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org\nhttp://atlanta-web.org - http://t.oolicio.us\n\n\n"}}