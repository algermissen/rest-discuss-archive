{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"wahbedahbe","from":"&quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"2dkKzcXWiBZlx6czbQMMYXKROZMdKDCU_hRODGbWrNSFV-qweisvdcRJdBGdvnYrEy5MzAatd_uVk6A3isbhpdg3Jcvdc0WsGmDrRA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: &#39;No application data on client&#39; constraint? was: RESTful ordering and order-rejection","postDate":"1257310819","msgId":13991,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhjcjFwMyticGlvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PENDMEFBNkIxLTQwMzYtNDBFNC1COTIzLUMwMDhENjc5NkUwNUBtYWMuY29tPg=="},"prevInTopic":13990,"nextInTopic":13992,"prevInTime":13990,"nextInTime":13992,"topicId":13970,"numMessagesInTopic":18,"msgSnippet":"... Well I don t think it is necessarily the case that the response to every request *replaces* the application state on the client. That is, a response can be","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 85788 invoked from network); 4 Nov 2009 05:00:40 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 4 Nov 2009 05:00:40 -0000\r\nX-Received: from unknown (HELO n42b.bullet.mail.sp1.yahoo.com) (66.163.168.156)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Nov 2009 05:00:40 -0000\r\nX-Received: from [69.147.65.172] by n42.bullet.mail.sp1.yahoo.com with NNFMP; 04 Nov 2009 05:00:21 -0000\r\nX-Received: from [98.137.34.32] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 04 Nov 2009 05:00:21 -0000\r\nDate: Wed, 04 Nov 2009 05:00:19 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hcr1p3+bpio@...&gt;\r\nIn-Reply-To: &lt;CC0AA6B1-4036-40E4-B923-C008D6796E05@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nSubject: Re: &#39;No application data on client&#39; constraint? was: RESTful ordering and order-rejection\r\nX-Yahoo-Group-Post: member; u=221173245; y=EdqGxyRA0uF-bLRqRjyAjiDRNZcZEAnPNFhBlI3YSA4O_hNZkw\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\n\n\n--- In rest-discuss@yahoogroups.com, Jan Algermissen &lt;algermissen1971@...=\r\n&gt; wrote:\n&gt;\n&gt; \n&gt; On Oct 31, 2009, at 12:01 AM, Jan Algermissen wrote:\n&gt; \n&gt; &gt;=\r\n Hi,\n&gt; &gt;\n&gt; &gt; suppose the following media types do exist:\n&gt; &gt;\n&gt; &gt; - applicat=\r\nion/procurement-order for orders\n&gt; &gt; - application/procurement-orderrejecti=\r\non for order rejections\n&gt; &gt;\n&gt; &gt; also suppose the client knows there is a re=\r\nsource at /order-processor\n&gt; &gt; that accepts orders in application/procureme=\r\nnt-order media type.\n&gt; &gt;\n&gt; &gt; What if the client submits an order and the se=\r\nrver wants to reject\n&gt; &gt; the order (maybe because the requested items are p=\r\nermanently out\n&gt; &gt; of stock)? What return code would the server use and doe=\r\ns it make\n&gt; &gt; sense to send the order rejection document as the body of the=\r\n\n&gt; &gt; (error-)response?\n&gt; \n&gt; I am trying to rule out the abve approach by de=\r\nriving from REST&#39;s  \n&gt; constraints.\n&gt; Here is my thinking:\n&gt; \n&gt; I assume (b=\r\necause I am not able yet to derive that from the REST  \n&gt; constraints)\n&gt; th=\r\nat there is an implicit constraint in REST that demands all  \n&gt; application=\r\n data\n&gt; to be stored on the server.\n&gt; \n&gt; To put this in other words: a clie=\r\nnt must be able to perform any of  \n&gt; the next\n&gt; possible transitions in an=\r\n application soley based on the responses  \n&gt; previously\n&gt; received. The cl=\r\nient-server collaboration must not be designed in a  \n&gt; way that\n&gt; requires=\r\n a client to keep track of its own requests.\n&gt; \n\nWell I don&#39;t think it is n=\r\necessarily the case that the response to every request *replaces* the appli=\r\ncation state on the client. That is, a response can be use to *add to* or o=\r\ntherwise modify the client state. This is certainly the case for ancillary =\r\nresources like images in a web page. But I think it is also valid to do thi=\r\ns after already reaching a steady state. For example, this is what is often=\r\n happening in an Ajax application. An HTTP request can retrieve new data th=\r\nat changes the client state but the overall client state is defined by a co=\r\nmbination of data retrieved from multiple requests. This does present the p=\r\nroblem of not having a single URI to represent the current state of the app=\r\nlication but many Ajax apps are using URI fragments to deal with this. As f=\r\nar as I can tell, this is &quot;ok&quot;.\n\n&gt; Applied to my question above I think tha=\r\nt a RESTful solution demands  \n&gt; that the\n&gt; server creates application data=\r\n as the basis for subsequent  \n&gt; interactions and\n&gt; then instructs the clie=\r\nnt how to procede through the application. (This\n&gt; implies a solution where=\r\n the order is created on the server and marked  \n&gt; as\n&gt; &#39;pending&#39; to provid=\r\ne the application data. The client would then alter  \n&gt; the\n&gt; order (the ap=\r\nplication data) to &#39;fix&#39; the (item-out-of-stock-)problem.\n&gt; \n\nWell I don&#39;t =\r\nthink it is unRESTful for a server to respond to a POST with a 200 OK rathe=\r\nr than a 201 Created or a 303 See Other. This does create a &quot;transient&quot; sta=\r\nte that the client can&#39;t return to (via a bookmark) or communicate by shari=\r\nng the URI. It is common practice to avoid doing this, but if the state tru=\r\nly is transient then maybe it&#39;s the right thing? Anyways, I don&#39;t believe t=\r\nhat REST requires that there are no transient states, which I think is what=\r\n you are getting at. I can&#39;t say that I have any references to back this up=\r\n though -- I&#39;m more going on the fact that I&#39;ve never seen authoritative so=\r\nurces say otherwise.\n\nRegards,\n\nAndrew\n\n\n\n\n"}}