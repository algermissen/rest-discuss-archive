{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"Alan Dean &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"vc9DpJpDkABuorKK-X5wvm1jTpLHMixvL_KSvYotNG3MPQeJLxddhHkrkA4OWMLsS0It3rvKGUr2GLbEuBN9Yqk8UR9G_Q","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Determining which Media type for post/put","postDate":"1275463068","msgId":15510,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlueTFfS1JPNDl4dXh1Q0ZGYTlmaVRVdExEYzI4RjdsOUlhNnVxMkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTAwNjAxMTc1NjQxLmY2YWNhYTI4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4gCTxBQU5Ma1RpbU80TjNGU3g4OW40dkpuN0ZKbDMyWGgtREZzWVJfd3RuT3d1WHVAbWFpbC5nbWFpbC5jb20+IAk8M0RERDBCRTY1NTg2OUQ0RUE1MDY2NTJCMzgwM0FFRjYxNTZEOUU2Q0BQUklTTS5jYWZmZWluZS1pdC5uZXQ+IAk8QUFOTGtUaW5Hc3JWaUdXSUJTWElmd3YxeTY1dDRNbTEyRW1PcXNnNTlONmUyQG1haWwuZ21haWwuY29tPiAJPDIwMTAwNjAxMTA1MTUxLmU2M2Y4MjJhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPEFBTkxrVGlsSFN0QzVjaVNDeTB4OWRRZkVCbHR5blZXeWRHS25WZW42WmJtSkBtYWlsLmdtYWlsLmNvbT4gCTwyMDEwMDYwMTE3NTY0MS5mNmFjYWEyOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":15509,"nextInTopic":15516,"prevInTime":15509,"nextInTime":15511,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"I m with Eric on this. As an example, each @type has it s own lanneg+conneg leaf URI on my CV website http://about.alan-dean.com/ which is controlled from","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74106 invoked from network); 2 Jun 2010 07:19:12 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 2 Jun 2010 07:19:12 -0000\r\nX-Received: from unknown (HELO mail-yx0-f181.google.com) (209.85.213.181)\n  by mta1.grp.sp2.yahoo.com with SMTP; 2 Jun 2010 07:19:11 -0000\r\nX-Received: by yxk30 with SMTP id 30so897841yxk.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 02 Jun 2010 00:18:11 -0700 (PDT)\r\nX-Received: by 10.101.5.15 with SMTP id h15mr8794500ani.81.1275463089516; Wed, \n\t02 Jun 2010 00:18:09 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.100.135.6 with HTTP; Wed, 2 Jun 2010 00:17:48 -0700 (PDT)\r\nIn-Reply-To: &lt;20100601175641.f6acaa28.eric@...&gt;\r\nReferences: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt; \n\t&lt;AANLkTimO4N3FSx89n4vJn7FJl32Xh-DFsYR_wtnOwuXu@...&gt; \n\t&lt;3DDD0BE655869D4EA506652B3803AEF6156D9E6C@...-it.net&gt; \n\t&lt;AANLkTinGsrViGWIBSXIfwv1y65t4Mm12EmOqsg59N6e2@...&gt; \n\t&lt;20100601105151.e63f822a.eric@...&gt; &lt;AANLkTilHStC5ciSCy0x9dQfEBltynVWydGKnVen6ZbmJ@...&gt; \n\t&lt;20100601175641.f6acaa28.eric@...&gt;\r\nDate: Wed, 2 Jun 2010 08:17:48 +0100\r\nX-Google-Sender-Auth: T0h82UeeqpVsXCkkfKqcsGj__1U\r\nMessage-ID: &lt;AANLkTiny1_KRO49xuxuCFFa9fiTUtLDc28F7l9Ia6uq2@...&gt;\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001636c92ad95ff37c048806e42b\r\nFrom: Alan Dean &lt;alan.dean@...&gt;\r\nSubject: Re: [rest-discuss] Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=189321215; y=A4ndtzNYMl8Ph7t6mqcKAu_sG0bUHUci_qKMsymXPdlvqUgouzmMFkv5\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\n\r\n--001636c92ad95ff37c048806e42b\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI&#39;m with Eric on this.\n\nAs an example, each @type has it&#39;s own lanneg+conne=\r\ng &#39;leaf&#39; URI on my CV\nwebsite http://about.alan-dean.com/ which is controll=\r\ned from the server\nusing Accept and Accept-Language from a root URI. For la=\r\nnneg, it falls back\nto &#39;en&#39; rather than giving an error whilst conneg will =\r\nthrow an Unsupported\nType error as appropriate. I&#39;m not using the browser-s=\r\nide XML+XSLT trick\nthough; my (X)HTML is server-rendered.\n\nThe one PITA is =\r\nthat IE *still* (sigh) doesn&#39;t recognise\napplication/xhtml+xml on the wire =\r\nand so thinks that\nhttp://www.alan-dean.com/about.en.xhtml is a download. T=\r\nhis means that xhtml\nURI&#39;s aren&#39;t actually universal page links, unfortunat=\r\nely.\n\nYou can also see the same lanneg and conneg in action on\nhttp://examp=\r\nle.moveme.com/zoopla/letters alongside the standard PRG\npattern (for non-UK=\r\n readers, you can use &quot;AA1 1AA&quot; as a postcode and &quot;01234\n567 890&quot; as a tele=\r\nphone number). It&#39;s only a test site, so feel free to use\nan @... e=\r\nmail address. Please don&#39;t report any errors to me as I\nleft moveme.com las=\r\nt Friday.\n\nRegards,\nAlan Dean\n\nOn Wed, Jun 2, 2010 at 00:56, Eric J. Bowman=\r\n &lt;eric@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Mike Kelly wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; Eric J. =\r\nBowman wrote:\n&gt; &gt;\n&gt; &gt; &gt; Mike Kelly wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Actually, the ide=\r\nntifying function of HTTP is URI + any control\n&gt; &gt; &gt; &gt; data.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n=\r\n&gt; &gt; &gt; Absolutely NOT. URIs identify _resources_ the control data is used\n&gt; =\r\n&gt; &gt; to select _representations_ and the two are _not_ the same thing.\n&gt; &gt; &gt;=\r\n\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; You sound like you&#39;re agreeing with me, the way Seb uses the t=\r\nerm\n&gt; &gt; &#39;identifying function&#39; implied we were talking abouts representatio=\r\nns\n&gt; &gt; not resource, which is what I was addressing:\n&gt; &gt;\n&gt;\n&gt; I assure you, =\r\nI am not agreeing with you.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; I don&#39;t know if you&#39;ve ever had to =\r\ndevelop a non-trivial\n&gt; &gt; hypermedia-driven application that needs to servi=\r\nce (amongst other\n&gt; &gt; clients) browsers via HTML\n&gt; &gt;\n&gt;\n&gt; Yes, I&#39;ve been des=\r\nigning hypermedia-driven HTML applications for\n&gt; browsers since 1993, using=\r\n conneg since 1998. You?\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; If you need to directly refere=\r\nnce a specific variant, assign it a\n&gt; &gt; &gt; URI and sent *that* to the client=\r\n. THAT is the solution. It\n&gt; &gt; &gt; works. There is no &quot;problem&quot; left to be so=\r\nlved by borking @type.\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; .. I take it you haven&#39;t tried desig=\r\nning a RESTful system that handles\n&gt; &gt; browser clients then.\n&gt; &gt;\n&gt;\n&gt; I rece=\r\nntly posted an online demo of my under-development REST system,\n&gt; and publi=\r\nshed the URIs on this very list, so perhaps you need to recall\n&gt; that old a=\r\ndage about making assumptions. It uses content negotiation\n&gt; to handle not =\r\nonly different browsers, but clients that aren&#39;t browsers,\n&gt; as well. The c=\r\nonneg is disabled on the static demo, but I assure you\n&gt; it works just fine=\r\n on the live system -- without borking @type.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; - but this confla=\r\ntion of resource and representation is *exactly* the\n&gt; &gt; problem that I am =\r\ntaking issue with.. you can&#39;t make a browser\n&gt; &gt; negotiate any other type o=\r\nf representation over HTML, which means you\n&gt; &gt; end up having to pretend re=\r\npresentations are resources and ignoring\n&gt; &gt; negotiation altogether in orde=\r\nr to make the representations\n&gt; &gt; accessible to browsers.\n&gt; &gt;\n&gt;\n&gt; But it&#39;s =\r\na *non* problem. Any negotiated resource on my system may\n&gt; respond with At=\r\nom or HTML as appropriate to the client. Browsers get\n&gt; XHTML + XSLT, the b=\r\nrowser-resident XSLT transcludes the Atom source\n&gt; files. Obviously, I don&#39;=\r\nt want the browser to reference the negotiated\n&gt; resource, because then it =\r\nwill retrieve the HTML instead of the Atom.\n&gt;\n&gt; So, I assign the Atom varia=\r\nnt a URI, making it a resource in its own\n&gt; right. The XSLT document() call=\r\ns may now retrieve Atom regardless of\n&gt; the Accept header sent by the user =\r\nagent. This is not &quot;pretending&quot;\n&gt; that the Atom representation is a resourc=\r\ne.\n&gt;\n&gt; Since there are situations where I want to access Atom and only Atom=\r\n,\n&gt; why on Earth would I want to dereference a negotiated resource? That\n&gt; =\r\nAtom and only Atom resource is a *different resource* whose entity\n&gt; happen=\r\ns to overlap with that of some other resource -- which happens all\n&gt; the ti=\r\nme in REST.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; &gt; It is a\n&gt; &gt; &gt; violation of both the layered-syste=\r\nm and identification of resources\n&gt; &gt; &gt; constraints to use @type in any oth=\r\ner way.\n&gt; &gt;\n&gt; &gt; Afaik this is nothing to do with either of those constraint=\r\ns\n&gt; &gt;\n&gt;\n&gt; Since the Atom-and-only-Atom resource is not the same resource (b=\r\ny the\n&gt; definition of resource from Roy&#39;s thesis) as the negotiated resourc=\r\ne,\n&gt; trying to access that resource without assigning it a URI of its own\n&gt;=\r\n violates the identification of resources constraint.\n&gt;\n&gt; In order for conn=\r\neg to work, a user agent must send the Accept header\n&gt; deemed appropriate b=\r\ny its developer(s). The server must respond to\n&gt; that header to negotiate b=\r\ny media type. If the server sends some\n&gt; representation to the client which=\r\n changes the developers&#39; intended\n&gt; Accept header, it&#39;s a blatant violation=\r\n of the separation of concerns\n&gt; that the layered system constraint is all =\r\nabout.\n&gt;\n&gt; In Web architecture, conneg is reactive, not proactive. The\n&gt; ar=\r\nchitecture simply does not support having the server tell the client\n&gt; what=\r\n media types it accepts. This is a feature, not a bug, since (as\n&gt; you&#39;ve b=\r\neen told dozens of times) the problem you are having is soooo\n&gt; easily solv=\r\ned by assigning the desired variant its own URI, making it a\n&gt; resource in =\r\nits own right, and sending that conneg-free URI to the user\n&gt; agent. That i=\r\ns how to override conneg, not @type.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; If the t=\r\nype attribute in links wasn&#39;t designed that way.. What\n&gt; &gt; &gt; &gt; exactly is t=\r\nhe point of it, if it is not intended to affect client\n&gt; &gt; &gt; &gt; behavior? Th=\r\nere is an argument that if the type attribute wasn&#39;t\n&gt; &gt; &gt; &gt; designed to su=\r\npport that case then a mistake was made and it was\n&gt; &gt; &gt; &gt; poorly defined.\n=\r\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; The point of it is to allow us to self-document our API=\r\ns.\n&gt; &gt;\n&gt; &gt; What does that even mean? What is the objective of doing that? W=\r\nhat\n&gt; &gt; are you documenting if, as you&#39;re suggesting, it doesn&#39;t make any\n&gt;=\r\n &gt; mechanical difference?\n&gt; &gt;\n&gt;\n&gt; How can I tell that the stylesheet an HTM=\r\nL page links to is text/css\n&gt; utf-8, without @type and @charset? By making =\r\na HEAD request to the CSS\n&gt; target, of course, and that is the only authori=\r\ntative source of the\n&gt; media type and charset of the resource. Those attrib=\r\nutes are simply\n&gt; not necessary to make the Web work.\n&gt;\n&gt; But the purpose o=\r\nf a hypertext API is to have a self-documenting API,\n&gt; one which tells me t=\r\nhat I can _expect_ a HEAD request to tell me the\n&gt; resource is utf-8 text/c=\r\nss. Without @type and @charset, all I can\n&gt; document in the hypertext is th=\r\ne URL, which isn&#39;t very informative, let\n&gt; alone self-documenting.\n&gt;\n&gt; So @=\r\ntype and @charset, far from being useless, allow us to annotate our\n&gt; hyper=\r\nlinks with metadata (which, in a properly designed system, will\n&gt; happen to=\r\n be exactly accurate). If you assign these attributes some\n&gt; other role, th=\r\nen some other attributes will need to be created to fill\n&gt; the annotation r=\r\nole @type and @charset were intended to fill.\n&gt;\n&gt; So instead of saying that=\r\n everyone else is wrong and these attributes\n&gt; are somehow broken, shouldn&#39;=\r\nt you be proposing the addition of some new\n&gt; attributes with your desired =\r\nsemantics? I&#39;d hate to see old work start\n&gt; to break because browsers sudde=\r\nnly decide to take @type and @charset\n&gt; literally, which is what would happ=\r\nen.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; &gt; The server is not to dictate\n&gt; &gt; &gt; to the client what med=\r\nia types are acceptable to the client.\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; Sure sure, unfortunate=\r\nly the reality is that users of browsers care\n&gt; &gt; about certain representat=\r\nions of resources depending on the context\n&gt; &gt;\n&gt;\n&gt; That&#39;s sorta right. The =\r\nuser could frankly care less what\n&gt; representation the server sends, provid=\r\ned that the resulting steady-\n&gt; state works. In the context of browser-resi=\r\ndent XSLT transformation, I\n&gt; obviously want the browser to retrieve Atom-a=\r\nnd-only-Atom, so I link to\n&gt; the Atom-and-only-Atom resource in the XSLT in=\r\nstead of the negotiated\n&gt; resource which also happens to, given the proper =\r\nAccept header, return\n&gt; the same exact Atom variant.\n&gt;\n&gt; But that isn&#39;t a p=\r\nroblem. See REST&#39;s discussion of &quot;author&#39;s preferred\n&gt; version&quot;, there&#39;s no=\r\n constraint which says multiple resources can&#39;t\n&gt; return the same represent=\r\nation when dereferenced. If you have a\n&gt; different context (like needing th=\r\ne Atom variants for XSLT), then you\n&gt; arguably have a different resource, s=\r\no give it its own URI instead of\n&gt; wasting everyone&#39;s time trying to find f=\r\nault with that perfectly-\n&gt; functional, time-tested, Web-proven, RESTful so=\r\nlution.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; and the solution used in the browser+html world right n=\r\now is to link\n&gt; &gt; *directly* to a media-type specific URI, so in practice i=\r\nt is\n&gt; &gt; actually *no different at all*, and is in fact a much worse soluti=\r\non\n&gt; &gt; since the link itself is less descriptive to the client (the client\n=\r\n&gt; &gt; has no idea the link is intended to be media type specific, URIs are\n&gt; =\r\n&gt; opaque), and the interaction is less visible to intermediaries (since\n&gt; &gt;=\r\n no negotiation is taking place).\n&gt; &gt;\n&gt;\n&gt; Uhhh, how is an interaction witho=\r\nut conneg *less* visible than one with\n&gt; conneg? That&#39;s just wrong. The sol=\r\nution of assigning some variant its\n&gt; own URI so it may be referred to outs=\r\nide of the conneg context, is\n&gt; called the &quot;identification of resources&quot; co=\r\nnstraint. It is not a\n&gt; &quot;worse solution&quot; and I don&#39;t begin to see how it co=\r\nuld be. The client\n&gt; may be informed unambiguously using @type and @charset=\r\n what to expect,\n&gt; and could frankly care less that the representation also=\r\n happens to be\n&gt; part of the set of representations of some other resource.=\r\n\n&gt;\n&gt; Hitting a conneg URI on my system with a browser will return an HTML\n&gt;=\r\n response. If that representation isn&#39;t appropriate, the user agent may\n&gt; p=\r\nresent the user with alternatives, taken from either an Alternates\n&gt; header=\r\n or a bunch of &lt;link/&gt; tags in the &lt;head&gt; listing each variant,\n&gt; its URI, =\r\nand its @type/@charset -- nothing could be clearer when they\n&gt; all have rel=\r\n=3D&#39;alternate&#39;.\n&gt;\n&gt; As always, my advice when using conneg is to assign eac=\r\nh variant its\n&gt; own URI, and return that URI in Content-Location such that =\r\ncaching will\n&gt; work, with the exception of negotiating for compression. Thi=\r\ns is not a\n&gt; problem, it is BEST PRACTICE.\n&gt;\n&gt; -Eric\n&gt;\n&gt;  \n&gt;\n\r\n--001636c92ad95ff37c048806e42b\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI&#39;m with Eric on this.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As an example, each @type has=\r\n it&#39;s own lanneg+conneg &#39;leaf&#39; URI on my CV website=C2=A0&lt;a hre=\r\nf=3D&quot;http://about.alan-dean.com/&quot;&gt;http://about.alan-dean.com/&lt;/a&gt;=C2=A0whic=\r\nh is controlled from the server using Accept and Accept-Language from a roo=\r\nt URI. For lanneg, it falls back to &#39;en&#39; rather than giving an erro=\r\nr whilst conneg will throw an Unsupported Type error as appropriate. I&#39;=\r\nm not using the browser-side XML+XSLT trick though; my (X)HTML is server-re=\r\nndered.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The one PITA is that IE *still* (sigh) d=\r\noesn&#39;t recognise application/xhtml+xml on the wire and so thinks that=\r\n=C2=A0&lt;a href=3D&quot;http://www.alan-dean.com/about.en.xhtml&quot;&gt;http://www.alan-d=\r\nean.com/about.en.xhtml&lt;/a&gt;=C2=A0is a download. This means that xhtml URI&#3=\r\n9;s aren&#39;t actually universal page links, unfortunately.=C2=A0&lt;/div&gt;\n\n&lt;=\r\ndiv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You can also see the same lanneg and conneg in action on=\r\n=C2=A0&lt;a href=3D&quot;http://example.moveme.com/zoopla/letters&quot;&gt;http://example.m=\r\noveme.com/zoopla/letters&lt;/a&gt;=C2=A0alongside the standard PRG pattern=C2=A0(=\r\nfor non-UK readers, you can use &quot;AA1 1AA&quot; as a postcode and &quot=\r\n;01234 567 890&quot; as a telephone number). It&#39;s only a test site, so =\r\nfeel free to use an @&lt;a href=3D&quot;http://example.com&quot;&gt;example.com&lt;/a&gt; email a=\r\nddress. Please don&#39;t report any errors to me as I left &lt;a href=3D&quot;http:=\r\n//moveme.com&quot;&gt;moveme.com&lt;/a&gt; last Friday.&lt;/div&gt;\n\n&lt;div&gt;&lt;br clear=3D&quot;all&quot;&gt;Reg=\r\nards,&lt;br&gt;Alan Dean&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Jun 2, 2010 at=\r\n 00:56, Eric J. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@bisonsy=\r\nstems.net&quot;&gt;eric@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;blockquote cla=\r\nss=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;pa=\r\ndding-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=\r\n=C2=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Mike Kelly=\r\n wrote:&lt;/p&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Eric J. Bowman wrote:&lt;br&gt;\n=\r\n&gt; &lt;br&gt;\n&gt; &gt; Mike Kelly wrote:&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt; &gt;=\r\n Actually, the identifying function of HTTP is URI + any control&lt;br&gt;\n&gt; &=\r\ngt; &gt; data.&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Absolutely NO=\r\nT.  URIs identify _resources_ the control data is used&lt;br&gt;\n&gt; &gt; to sel=\r\nect _representations_ and the two are _not_ the same thing.&lt;br&gt;\n&gt; &gt;&lt;b=\r\nr&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; You sound like you&#39;re agreeing with me, the=\r\n way Seb uses the term&lt;br&gt;\n&gt; &#39;identifying function&#39; implied we w=\r\nere talking abouts representations&lt;br&gt;\n&gt; not resource, which is what I w=\r\nas addressing:&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nI assure you, I am not agreeing wit=\r\nh you.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I don&#39;t know if you&#39=\r\n;ve ever had to develop a non-trivial&lt;br&gt;\n&gt; hypermedia-driven applicatio=\r\nn that needs to service (amongst other&lt;br&gt;\n&gt; clients) browsers via HTML&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nYes, I&#39;ve been designing hypermedia-driven HTML=\r\n applications for&lt;br&gt;\nbrowsers since 1993, using conneg since 1998.  You?&lt;d=\r\niv class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; If you need to =\r\ndirectly reference a specific variant, assign it a&lt;br&gt;\n&gt; &gt; URI and se=\r\nnt *that* to the client.  THAT is the solution.  It&lt;br&gt;\n&gt; &gt; works.  T=\r\nhere is no &quot;problem&quot; left to be solved by borking @type.&lt;br&gt;\n&gt;=\r\n &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; .. I take it you haven&#39;t tried designing a=\r\n RESTful system that handles&lt;br&gt;\n&gt; browser clients then.&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;=\r\nbr&gt;&lt;/div&gt;\nI recently posted an online demo of my under-development REST sys=\r\ntem,&lt;br&gt;\nand published the URIs on this very list, so perhaps you need to r=\r\necall&lt;br&gt;\nthat old adage about making assumptions.  It uses content negotia=\r\ntion&lt;br&gt;\nto handle not only different browsers, but clients that aren&#39;t=\r\n browsers,&lt;br&gt;\nas well.  The conneg is disabled on the static demo, but I a=\r\nssure you&lt;br&gt;\nit works just fine on the live system -- without borking @typ=\r\ne.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; - but this conflation of resour=\r\nce and representation is *exactly* the&lt;br&gt;\n&gt; problem that I am taking is=\r\nsue with.. you can&#39;t make a browser&lt;br&gt;\n&gt; negotiate any other type o=\r\nf representation over HTML, which means you&lt;br&gt;\n&gt; end up having to prete=\r\nnd representations are resources and ignoring&lt;br&gt;\n&gt; negotiation altogeth=\r\ner in order to make the representations&lt;br&gt;\n&gt; accessible to browsers.&lt;br=\r\n&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nBut it&#39;s a *non* problem.  Any negotiated resour=\r\nce on my system may&lt;br&gt;\nrespond with Atom or HTML as appropriate to the cli=\r\nent.  Browsers get&lt;br&gt;\nXHTML + XSLT, the browser-resident XSLT transcludes =\r\nthe Atom source&lt;br&gt;\nfiles.  Obviously, I don&#39;t want the browser to refe=\r\nrence the negotiated&lt;br&gt;\nresource, because then it will retrieve the HTML i=\r\nnstead of the Atom.&lt;br&gt;\n&lt;br&gt;\nSo, I assign the Atom variant a URI, making it=\r\n a resource in its own&lt;br&gt;\nright.  The XSLT document() calls may now retrie=\r\nve Atom regardless of&lt;br&gt;\nthe Accept header sent by the user agent.  This i=\r\ns not &quot;pretending&quot;&lt;br&gt;\nthat the Atom representation is a resource=\r\n.&lt;br&gt;\n&lt;br&gt;\nSince there are situations where I want to access Atom and only =\r\nAtom,&lt;br&gt;\nwhy on Earth would I want to dereference a negotiated resource?  =\r\nThat&lt;br&gt;\nAtom and only Atom resource is a *different resource* whose entity=\r\n&lt;br&gt;\nhappens to overlap with that of some other resource -- which happens a=\r\nll&lt;br&gt;\nthe time in REST.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &gt; It =\r\nis a&lt;br&gt;\n&gt; &gt; violation of both the layered-system and identification =\r\nof resources&lt;br&gt;\n&gt; &gt; constraints to use @type in any other way.&lt;br&gt;\n&=\r\ngt; &lt;br&gt;\n&gt; Afaik this is nothing to do with either of those constraints&lt;=\r\nbr&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nSince the Atom-and-only-Atom resource is not the sa=\r\nme resource (by the&lt;br&gt;\ndefinition of resource from Roy&#39;s thesis) as th=\r\ne negotiated resource,&lt;br&gt;\ntrying to access that resource without assigning=\r\n it a URI of its own&lt;br&gt;\nviolates the identification of resources constrain=\r\nt.&lt;br&gt;\n&lt;br&gt;\nIn order for conneg to work, a user agent must send the Accept =\r\nheader&lt;br&gt;\ndeemed appropriate by its developer(s).  The server must respond=\r\n to&lt;br&gt;\nthat header to negotiate by media type.  If the server sends some&lt;b=\r\nr&gt;\nrepresentation to the client which changes the developers&#39; intended&lt;=\r\nbr&gt;\nAccept header, it&#39;s a blatant violation of the separation of concer=\r\nns&lt;br&gt;\nthat the layered system constraint is all about.&lt;br&gt;\n&lt;br&gt;\nIn Web arc=\r\nhitecture, conneg is reactive, not proactive.  The&lt;br&gt;\narchitecture simply =\r\ndoes not support having the server tell the client&lt;br&gt;\nwhat media types it =\r\naccepts.  This is a feature, not a bug, since (as&lt;br&gt;\nyou&#39;ve been told =\r\ndozens of times) the problem you are having is soooo&lt;br&gt;\neasily solved by a=\r\nssigning the desired variant its own URI, making it a&lt;br&gt;\nresource in its o=\r\nwn right, and sending that conneg-free URI to the user&lt;br&gt;\nagent.  That is =\r\nhow to override conneg, not @type.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt=\r\n; &gt;&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt; &gt; If the type attribute in links=\r\n wasn&#39;t designed that way.. What&lt;br&gt;\n&gt; &gt; &gt; exactly is the poin=\r\nt of it, if it is not intended to affect client&lt;br&gt;\n&gt; &gt; &gt; behavior=\r\n? There is an argument that if the type attribute wasn&#39;t&lt;br&gt;\n&gt; &gt; =\r\n&gt; designed to support that case then a mistake was made and it was&lt;br&gt;\n&=\r\ngt; &gt; &gt; poorly defined.&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt=\r\n; The point of it is to allow us to self-document our APIs.&lt;br&gt;\n&gt; &lt;br&gt;\n&=\r\ngt; What does that even mean? What is the objective of doing that? What&lt;br&gt;=\r\n\n&gt; are you documenting if, as you&#39;re suggesting, it doesn&#39;t make=\r\n any&lt;br&gt;\n&gt; mechanical difference?&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nHow can I tel=\r\nl that the stylesheet an HTML page links to is text/css&lt;br&gt;\nutf-8, without =\r\n@type and @charset?  By making a HEAD request to the CSS&lt;br&gt;\ntarget, of cou=\r\nrse, and that is the only authoritative source of the&lt;br&gt;\nmedia type and ch=\r\narset of the resource.  Those attributes are simply&lt;br&gt;\nnot necessary to ma=\r\nke the Web work.&lt;br&gt;\n&lt;br&gt;\nBut the purpose of a hypertext API is to have a s=\r\nelf-documenting API,&lt;br&gt;\none which tells me that I can _expect_ a HEAD requ=\r\nest to tell me the&lt;br&gt;\nresource is utf-8 text/css.  Without @type and @char=\r\nset, all I can&lt;br&gt;\ndocument in the hypertext is the URL, which isn&#39;t ve=\r\nry informative, let&lt;br&gt;\nalone self-documenting.&lt;br&gt;\n&lt;br&gt;\nSo @type and @char=\r\nset, far from being useless, allow us to annotate our&lt;br&gt;\nhyperlinks with m=\r\netadata (which, in a properly designed system, will&lt;br&gt;\nhappen to be exactl=\r\ny accurate).  If you assign these attributes some&lt;br&gt;\nother role, then some=\r\n other attributes will need to be created to fill&lt;br&gt;\nthe annotation role @=\r\ntype and @charset were intended to fill.&lt;br&gt;\n&lt;br&gt;\nSo instead of saying that=\r\n everyone else is wrong and these attributes&lt;br&gt;\nare somehow broken, should=\r\nn&#39;t you be proposing the addition of some new&lt;br&gt;\nattributes with your =\r\ndesired semantics?  I&#39;d hate to see old work start&lt;br&gt;\nto break because=\r\n browsers suddenly decide to take @type and @charset&lt;br&gt;\nliterally, which i=\r\ns what would happen.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &gt; The ser=\r\nver is not to dictate&lt;br&gt;\n&gt; &gt; to the client what media types are acce=\r\nptable to the client.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Sure sure, unfortuna=\r\ntely the reality is that users of browsers care&lt;br&gt;\n&gt; about certain repr=\r\nesentations of resources depending on the context&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nT=\r\nhat&#39;s sorta right.  The user could frankly care less what&lt;br&gt;\nrepresent=\r\nation the server sends, provided that the resulting steady-&lt;br&gt;\nstate works=\r\n.  In the context of browser-resident XSLT transformation, I&lt;br&gt;\nobviously =\r\nwant the browser to retrieve Atom-and-only-Atom, so I link to&lt;br&gt;\nthe Atom-=\r\nand-only-Atom resource in the XSLT instead of the negotiated&lt;br&gt;\nresource w=\r\nhich also happens to, given the proper Accept header, return&lt;br&gt;\nthe same e=\r\nxact Atom variant.&lt;br&gt;\n&lt;br&gt;\nBut that isn&#39;t a problem.  See REST&#39;s d=\r\niscussion of &quot;author&#39;s preferred&lt;br&gt;\nversion&quot;, there&#39;s no=\r\n constraint which says multiple resources can&#39;t&lt;br&gt;\nreturn the same rep=\r\nresentation when dereferenced.  If you have a&lt;br&gt;\ndifferent context (like n=\r\needing the Atom variants for XSLT), then you&lt;br&gt;\narguably have a different =\r\nresource, so give it its own URI instead of&lt;br&gt;\nwasting everyone&#39;s time=\r\n trying to find fault with that perfectly-&lt;br&gt;\nfunctional, time-tested, Web=\r\n-proven, RESTful solution.&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; and the=\r\n solution used in the browser+html world right now is to link&lt;br&gt;\n&gt; *dir=\r\nectly* to a media-type specific URI, so in practice it is&lt;br&gt;\n&gt; actually=\r\n *no different at all*, and is in fact a much worse solution&lt;br&gt;\n&gt; since=\r\n the link itself is less descriptive to the client (the client&lt;br&gt;\n&gt; has=\r\n no idea the link is intended to be media type specific, URIs are&lt;br&gt;\n&gt; =\r\nopaque), and the interaction is less visible to intermediaries (since&lt;br&gt;\n&=\r\ngt; no negotiation is taking place).&lt;br&gt;\n&gt; &lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nUhhh, how is =\r\nan interaction without conneg *less* visible than one with&lt;br&gt;\nconneg?  Tha=\r\nt&#39;s just wrong.  The solution of assigning some variant its&lt;br&gt;\nown URI=\r\n so it may be referred to outside of the conneg context, is&lt;br&gt;\ncalled the =\r\n&quot;identification of resources&quot; constraint.  It is not a&lt;br&gt;\n&quot;=\r\nworse solution&quot; and I don&#39;t begin to see how it could be.  The cli=\r\nent&lt;br&gt;\nmay be informed unambiguously using @type and @charset what to expe=\r\nct,&lt;br&gt;\nand could frankly care less that the representation also happens to=\r\n be&lt;br&gt;\npart of the set of representations of some other resource.&lt;br&gt;\n&lt;br&gt;=\r\n\nHitting a conneg URI on my system with a browser will return an HTML&lt;br&gt;\nr=\r\nesponse.  If that representation isn&#39;t appropriate, the user agent may&lt;=\r\nbr&gt;\npresent the user with alternatives, taken from either an Alternates&lt;br&gt;=\r\n\nheader or a bunch of &lt;link/&gt; tags in the &lt;head&gt; listing each v=\r\nariant,&lt;br&gt;\nits URI, and its @type/@charset -- nothing could be clearer whe=\r\nn they&lt;br&gt;\nall have rel=3D&#39;alternate&#39;.&lt;br&gt;\n&lt;br&gt;\nAs always, my advic=\r\ne when using conneg is to assign each variant its&lt;br&gt;\nown URI, and return t=\r\nhat URI in Content-Location such that caching will&lt;br&gt;\nwork, with the excep=\r\ntion of negotiating for compression.  This is not a&lt;br&gt;\nproblem, it is BEST=\r\n PRACTICE.&lt;br&gt;\n&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div styl=\r\ne=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--001636c92ad95ff37c048806e42b--\r\n\n"}}