{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":45758910,"authorName":"Erik Mogensen","from":"Erik Mogensen &lt;erik@...&gt;","profile":"mogsie_oslo","replyTo":"SENDER","senderId":"Urpp79Opf12N7oHxq3NfcMtZmQZcVQbeoCk9gf9yAD1mwDvrxx1VlumDxcjO6inHisFhj6MgsgexgZCYpVncu0c1RgWxCR33jw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Feedback on implementing client side HTTP caching","postDate":"1296030675","msgId":17229,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrYXRQdlBXNXJVM0Ezd2dLVHhiMTAyWHh5NTZIM1BqblVWQS15R0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PERBNDBGNjMwLTI5MjgtNDZFMC04MkU2LUVCODg0NENGREExREBzdWJidS5vcmc+","referencesHeader":"PEFBTkxrVGltPVhDcFVOeXlrZnJEV2RSdlpLSmFnVTBndllkTXpLTGM5Q2tKVEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMS1yRzZLQjdxc2pWZUZEbnlwdWdUdmQzZWZTQjk9OGJLeFZtVUBtYWlsLmdtYWlsLmNvbT4JPEE2NDYzMDcwLTMzNEItNEYwRi04QTVBLTg4MDZBRkZCMkYwMUBzdWJidS5vcmc+CTxBQU5Ma1RpbnRha18reXRfdXAzWTgxb01rRjFxaUZ4YWIxRVdmSlQxc3NSdjFAbWFpbC5nbWFpbC5jb20+CTxEQTQwRjYzMC0yOTI4LTQ2RTAtODJFNi1FQjg4NDRDRkRBMURAc3ViYnUub3JnPg=="},"prevInTopic":17228,"nextInTopic":17230,"prevInTime":17228,"nextInTime":17230,"topicId":17219,"numMessagesInTopic":22,"msgSnippet":"... HTTPCache4j is most useful in a client, but we ve since used it in server-to-server communications too.  We generally use HTTPCache4j to do all of our HTTP","rawEmail":"Return-Path: &lt;3rik.mogensen@...&gt;\r\nX-Sender: 3rik.mogensen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9940 invoked from network); 26 Jan 2011 08:31:16 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.sp2.yahoo.com with QMQP; 26 Jan 2011 08:31:16 -0000\r\nX-Received: from unknown (HELO mail-qw0-f51.google.com) (209.85.216.51)\n  by mta3.grp.sp2.yahoo.com with SMTP; 26 Jan 2011 08:31:16 -0000\r\nX-Received: by qwg5 with SMTP id 5so701782qwg.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 26 Jan 2011 00:31:15 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.74.9 with SMTP id s9mr156858qcj.165.1296030675359; Wed, 26\n Jan 2011 00:31:15 -0800 (PST)\r\nX-Received: by 10.220.189.8 with HTTP; Wed, 26 Jan 2011 00:31:15 -0800 (PST)\r\nIn-Reply-To: &lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nReferences: &lt;AANLkTim=XCpUNyykfrDWdRvZKJagU0gvYdMzKLc9CkJT@...&gt;\n\t&lt;AANLkTik1-rG6KB7qsjVeFDnypugTvd3efSB9=8bKxVmU@...&gt;\n\t&lt;A6463070-334B-4F0F-8A5A-8806AFFB2F01@...&gt;\n\t&lt;AANLkTintak_+yt_up3Y81oMkF1qiFxab1EWfJT1ssRv1@...&gt;\n\t&lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nDate: Wed, 26 Jan 2011 09:31:15 +0100\r\nX-Google-Sender-Auth: d-FDcu14ciAJ2dk3r_ZyFWih81k\r\nMessage-ID: &lt;AANLkTikatPvPW5rU3A3wgKTxb102Xxy56H3PjnUVA-yG@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: David Stanek &lt;dstanek@...&gt;, Erlend Hamnaberg &lt;ngarthl@...&gt;, \n\tSidu Ponnappa &lt;lorddaemon@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00163646d73a05d954049abba82f\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Erik Mogensen &lt;erik@...&gt;\r\nSubject: Re: [rest-discuss] Feedback on implementing client side HTTP caching\r\nX-Yahoo-Group-Post: member; u=45758910; y=Pab-W5sHrLv-7lEChojahsE62pYfjbTbh6Y6MXb8OwNcF7H0yUo\r\nX-Yahoo-Profile: mogsie_oslo\r\n\r\n\r\n--00163646d73a05d954049abba82f\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Wed, Jan 26, 2011 at 8:01 AM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Sure, a browser is another example. There is nothing to forbid a client\n&gt; from doing its own caching, but in general, it is better to delegate this to\n&gt; a proxy cache..\n&gt;\n&gt;\nHTTPCache4j is most useful in a client, but we&#39;ve since used it in\nserver-to-server communications too.  We generally use HTTPCache4j to do all\nof our HTTP communication, using it more as a HTTP client rather than a\nspecific HTTP cache; the cache is just there.  And as long as the server\ndoesn&#39;t provide any caching directives, HTTPCache4j doesn&#39;t provide any\nvalue.\n\nThe real value is reaped when we (e.g. in production) need to add caching.\n Adding a real intermediary is not always feasible, and it&#39;s nice to know\nthat all of our clients honour caching directives correctly.  All we need to\ndo to increase performance is to drop in a header or two in the server&#39;s\nresponses, and just like that, client perceived performance increases many\norders of magnitude.\n\nThe only gripe I have with HTTPCache4j is the names of methods and so on.\n &quot;doCachedRequest&quot; ought to be called simply &quot;request&quot;...  ;-)\n-- \n-mogsie-\n\r\n--00163646d73a05d954049abba82f\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Jan 26, 2011 at 8:01 AM, Subbu A=\r\nllamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@su=\r\nbbu.org&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D=\r\n&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n=\r\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;=\r\n\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Sure, a browser is another example. The=\r\nre is nothing to forbid a client from doing its own caching, but in general=\r\n, it is better to delegate this to a proxy cache.. &lt;br&gt;&lt;/p&gt;&lt;div class=3D&quot;im=\r\n&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HTTPC=\r\nache4j is most useful in a client, but we&#39;ve since used it in server-to=\r\n-server communications too. =A0We generally use HTTPCache4j to do all of ou=\r\nr HTTP communication, using it more as a HTTP client rather than a specific=\r\n HTTP cache; the cache is just there. =A0And as long as the server doesn&#3=\r\n9;t provide any caching directives, HTTPCache4j doesn&#39;t provide any val=\r\nue.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The real value is reaped when we (e.g. in pro=\r\nduction) need to add caching. =A0Adding a real intermediary is not always f=\r\neasible, and it&#39;s nice to know that all of our clients honour caching d=\r\nirectives correctly. =A0All we need to do to increase performance is to dro=\r\np in a header or two in the server&#39;s responses, and just like that, cli=\r\nent perceived performance increases many orders of magnitude.&lt;/div&gt;\n&lt;div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;&lt;div&gt;The only gripe I have with HTTPCache4j is the names of methods=\r\n and so on. =A0&quot;doCachedRequest&quot; ought to be called simply &quot;=\r\nrequest&quot;... =A0;-)&lt;/div&gt;&lt;div&gt;--=A0&lt;/div&gt;&lt;div&gt;-mogsie-&lt;/div&gt;&lt;/div&gt;\n\r\n--00163646d73a05d954049abba82f--\r\n\n"}}