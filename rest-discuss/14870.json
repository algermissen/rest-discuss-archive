{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"y-jUTFuovreXB4bE4bOZV4nmKi3Yx0rjcruFxO0hU_a-DJ0EduqFUhHb1PodRhVpFyOZV_OyuYMbGGgQbN0_FsdToQPF8ENr_tDb2wYrsw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Questions on REST API design","postDate":"1266921454","msgId":14870,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwMjIzMDMzNzM0LjQ5NmFiNTA4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDYxMjBmNjY5MTAwMjIyMDkxM3QzOGQ5YzlhZmc0OTI2Y2YzZmNmOWFkOTQwQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDYxMjBmNjY5MTAwMjIyMDkxM3QzOGQ5YzlhZmc0OTI2Y2YzZmNmOWFkOTQwQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14869,"nextInTopic":14871,"prevInTime":14869,"nextInTime":14871,"topicId":14857,"numMessagesInTopic":15,"msgSnippet":"... Hi DÃ¡rio.  Please don t take my hijacking your thread personally, this goes to a larger point I ve been trying to make of late, that the starting place is","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38706 invoked from network); 23 Feb 2010 10:37:46 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m13.grp.re1.yahoo.com with QMQP; 23 Feb 2010 10:37:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 23 Feb 2010 10:37:45 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id C4E77509DB;\n\tTue, 23 Feb 2010 05:37:41 -0500 (EST)\r\nDate: Tue, 23 Feb 2010 03:37:34 -0700\r\nTo: =?ISO-8859-1?Q?D=E1rio?= Abdulrehman &lt;dario.rehman@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100223033734.496ab508.eric@...&gt;\r\nIn-Reply-To: &lt;6120f6691002220913t38d9c9afg4926cf3fcf9ad940@...&gt;\r\nReferences: &lt;6120f6691002220913t38d9c9afg4926cf3fcf9ad940@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Questions on REST API design\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nD=E1rio Abdulrehman wrote:\n&gt;\n&gt; Hi,\n&gt; \n&gt; I have the following questions on t=\r\nhe implementation of a REST API:\n&gt; \n\nHi D=E1rio.  Please don&#39;t take my hija=\r\ncking your thread personally, this\ngoes to a larger point I&#39;ve been trying =\r\nto make of late, that the\nstarting place is resource modeling, not implemen=\r\ntation (URI design).\nI&#39;m not criticizing you (or anyone else) or singling y=\r\nou (or anyone\nelse) out, just tilting at the windmill of changing how REST =\r\nis taught.\n\nToday, I&#39;m trying to illustrate my point by considering fragmen=\r\nt vs.\nquery string.\n\n&gt;\n&gt; 1.\n&gt; I have a resource which can be used like:\n&gt; \n=\r\n&gt;   (a) GET resource/{id}\n&gt; \n\nLet&#39;s try to model that, first of all, by cal=\r\nling it a collection of\nresources with unique IDs, &#39;/collection/{member}&#39; i=\r\ns widely understood.\nBut at this point I know of no reason it can&#39;t be /col=\r\nlection#member.\n\n&gt;\n&gt; but it would be useful, to save round trips, to be abl=\r\ne to invoke it\n&gt; with several ids at once:\n&gt; \n&gt;   (b) GET resource?id=3D{id=\r\n1}&id=3D{id2}... or\n&gt;         GET resource/ids;id1;id2... or\n&gt;         GET =\r\nresource/id1/id2... (BTW is this URL template acceptable?\n&gt; The ids are not=\r\n in a hierarchy as the slashes may suggest, but I&#39;ve\n&gt; seen it used elsewhe=\r\nre).\n&gt; \n\nThis is where I get worried every time someone new posts exactly t=\r\nhis\nsort of question here.  We all know how pervasive misconceptions of\nRES=\r\nT are.  We shouldn&#39;t play along with questions regarding URI design\nwithout=\r\n having any notion of what the resource is.\n\nI&#39;d love to go into resources/=\r\nsubresources and URI syntax, Xpointer,\nand other solutions to this -- excep=\r\nt I think this would push the thread\nstarter further along in the wrong dir=\r\nection.  I can&#39;t tell, because I\ndon&#39;t understand his notion of this resour=\r\nce.\n\n&gt;\n&gt; This falls in the realm of REST + batch operations...\n&gt;\n\nI don&#39;t h=\r\nave enough information about the nature of the resource in\nquestion, to kno=\r\nw if that&#39;s an accurate assessment.  As Jan pointed\nout, saving round trips=\r\n isn&#39;t a goal of REST API design.  A RESTful API\nwill be conducive to cachi=\r\nng, the side effect of which is saving round\ntrips.\n\nWithout some notion of=\r\n the nature of the resource, it&#39;s impossible to\nproceed in a disciplined fa=\r\nshion.  Can the data be modeled as SVG, and\nif so, can SVG&#39;s fragment synta=\r\nx be utilized to extract subresources\nfor display?  If not, is this a &quot;ligh=\r\ntbulb&quot; for developing a new media\ntype with its own fragment syntax?\n\n&gt;\n&gt; F=\r\nrom what I&#39;ve read some people are of the opinion that (a) should be\n&gt; used=\r\n with HTTP pipelining for batch operations while others think\n&gt; that the so=\r\nlution (b) is\n&gt; equally acceptable since this is a resource that happens to=\r\n take\n&gt; multiple query/path/matrix parameters.\n&gt; \n\nThe opinions of others i=\r\ns a bad place to learn REST.  Roy&#39;s thesis has\nsome nuggets of wisdom in it=\r\n, though...\n\n&quot;\nA distributed hypermedia architect has only three fundamenta=\r\nl options:\n1) render the data where it is located and send a fixed-format i=\r\nmage to\nthe recipient; 2) encapsulate the data with a rendering engine and =\r\nsend\nboth to the recipient; or, 3) send the raw data to the recipient along=\r\n\nwith metadata that describes the data type, so that the recipient can\nchoo=\r\nse their own rendering engine.\n&quot;\n\nSince we have no notion of &quot;resource&quot; to =\r\nground us here, we lack the\nability to choose one of these options.  If SVG=\r\n or some SVG-like\nfragment implementation within a media type isn&#39;t the sol=\r\nution, then\nperhaps approximating the mobile object style by applying the o=\r\nptional\nCode on Demand constraint (2) is called for.  In which case, parame=\r\nters\nmay not show up in the URI at all, query or fragment (still REST).\n\nRe=\r\nsources must be conceptually modeled before any decisions about\nsystem arch=\r\nitecture may be effectively made.  Craig&#39;s response was\nsound advice, but r=\r\nests on an assumption that the resource models out\nas something that can be=\r\n represented as OpenSearch.  But, the resource\nmay not fit that model -- wh=\r\no&#39;s to say, from the information we&#39;ve been\ngiven?\n\nI would suggest that if=\r\n the purpose is to submit some JSON code to a\nresource, then make that code=\r\n a query string and GET the response\n(Craig&#39;s right, POST isn&#39;t correct), s=\r\naving a round-trip and enabling\ncaching.  But I have no idea if this is app=\r\nropriate, vs. using some URI\nfragment syntax, since we haven&#39;t modeled the =\r\nresource or considered\nany media types, or discussed architectural options =\r\nlike CoD.\n\nI&#39;m up on my high horse on this, because I think when we REST se=\r\nmpai\nstart winging it by throwing URI patterns around, we only add to the\nc=\r\nonfusion of the REST kohai by reinforcing whatever misconceptions led\nthem =\r\nto design an API by starting with URI allocation scheme in the\nfirst place.=\r\n  Meaning no offense to anyone, I&#39;m guilty of same.\n\n&gt;\n&gt; 2.\n&gt; I have anothe=\r\nr resource which is an algorithm that takes as input:\n&gt; - a list of paramet=\r\ners [x1, x2, ...]\n&gt; - another list of parameters [y1, y2, ...]\n&gt; - some oth=\r\ner optional arguments\n&gt; \n\nLet&#39;s try to model that resource, first of all, b=\r\ny calling it a service\nendpoint.  Then we can get down to the brass tacks o=\r\nf implementation.\n\n&gt; \n&gt; How can I make the resources 1. and 2. above RESTfu=\r\nl?\n&gt; \n\nI have no idea.  Even if I did have a better idea of the nature of\nt=\r\nhese resources, REST is concerned with the interaction between\ncomponents i=\r\nn a system via Uniform Connector Interfaces.  Analyzing one\nresource in iso=\r\nlation won&#39;t usually tell you anything about whether the\nsystem is RESTful =\r\nor not, any more than looking at its URI can.\n\nI can help you model your re=\r\nsources, determine their relations to one\nanother, and express that using h=\r\nypertext link relations.  I can help\nwith the selection and/or design of me=\r\ndia types.  I can help develop an\narchitecture around those media types and=\r\n link relations.  I can help\ndesign a hypertext engine to drive application=\r\n state.\n\nWhat I can&#39;t do, is wave my magic guru wand and come up with a URI=\r\n\nallocation scheme describing what methods to use on what resources of\ninte=\r\nrest, and call it a REST API.  I can only develop a REST API *after*\nI know=\r\n the nature of the resources involved, otherwise I&#39;d just be\nguessing.\n\nRES=\r\nT development is all about tradeoffs.  Disciplined REST development\nis base=\r\nd on weighing the pros and cons of architectural choices.\nComing up with a =\r\nRESTful solution without considering choices and\nweighing tradeoffs is poss=\r\nible, but how is the architect then to\nevaluate his or her creation against=\r\n the goals for the system?\n\nStarting with URI design locks the architect in=\r\nto a set of fundamental\ndesign constraints which may be inappropriate for t=\r\nhe system.  The\nchoice between query string and URI fragment places a rigid=\r\n dividing\nline between client and server that&#39;s difficult, if not impossibl=\r\ne, to\nchange further on down the road.\n\n-Eric\n\n"}}