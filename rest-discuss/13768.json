{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11652427,"authorName":"Peter Keane","from":"Peter Keane &lt;pkeane@...&gt;","profile":"pkeane_littlehat","replyTo":"SENDER","senderId":"zsM5krcbTceHKVyLyw9LmyEtmlezsYul0xZcuvPKKdrpTolqHEw2kvSwdZfi-kJIVHra1NpcGJjkKPFmSvao077CTWKeimURkOaH","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful Cookies?","postDate":"1255038167","msgId":13768,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQ0U1Q0Q3LjIwMzAyMDdAbWFpbC51dGV4YXMuZWR1Pg==","inReplyToHeader":"PGhhbDB2aSt1ZnZvQGVHcm91cHMuY29tPg==","referencesHeader":"PGhhbDB2aSt1ZnZvQGVHcm91cHMuY29tPg=="},"prevInTopic":13763,"nextInTopic":13770,"prevInTime":13767,"nextInTime":13769,"topicId":13750,"numMessagesInTopic":9,"msgSnippet":"One of the ways I have used cookies is to have the server set a cookie that simply includes a username when a user authenticates with a site. Since you","rawEmail":"Return-Path: &lt;pjkeane@...&gt;\r\nX-Sender: pjkeane@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 59351 invoked from network); 8 Oct 2009 21:42:53 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.re1.yahoo.com with QMQP; 8 Oct 2009 21:42:53 -0000\r\nX-Received: from unknown (HELO mail-px0-f185.google.com) (209.85.216.185)\n  by mta3.grp.sp2.yahoo.com with SMTP; 8 Oct 2009 21:42:53 -0000\r\nX-Received: by pxi15 with SMTP id 15so6086950pxi.26\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 08 Oct 2009 14:42:49 -0700 (PDT)\r\nX-Received: by 10.114.237.19 with SMTP id k19mr2796347wah.69.1255038169611;\n        Thu, 08 Oct 2009 14:42:49 -0700 (PDT)\r\nReturn-Path: &lt;pjkeane@...&gt;\r\nX-Received: from ?128.83.27.7? (harpo.laits.utexas.edu [128.83.27.7])\n        by mx.google.com with ESMTPS id 20sm153095pzk.1.2009.10.08.14.42.48\n        (version=SSLv3 cipher=RC4-MD5);\n        Thu, 08 Oct 2009 14:42:48 -0700 (PDT)\r\nMessage-ID: &lt;4ACE5CD7.2030207@...&gt;\r\nDate: Thu, 08 Oct 2009 16:42:47 -0500\r\nUser-Agent: Thunderbird 2.0.0.23 (X11/20091001)\r\nMIME-Version: 1.0\r\nTo: groovepapa &lt;luke.crouch@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;hal0vi+ufvo@...&gt;\r\nIn-Reply-To: &lt;hal0vi+ufvo@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Peter Keane &lt;pkeane@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful Cookies?\r\nX-Yahoo-Group-Post: member; u=11652427; y=f5PS-uSSaimeaPjmunVC6MjZASeviX6yAbVNGrix1lRPCDzD_QWSO-gZuA\r\nX-Yahoo-Profile: pkeane_littlehat\r\n\r\nOne of the ways I have used cookies is to have the server set a cookie \nthat simply includes a &#39;username&#39; when a user authenticates with a site. \nSince you cannot really be &#39;logged in&#39; to a stateless service, the \nusername allows the client to make a separate request (using AJAX) for \neach page allowing that page to be &quot;decorated&quot; with personalized data \n(allowing the undecorated page to be cacheable for all users). The \nusername is used in conjunction with a URI template (delivered with the \nHTML page itself). E.g., page is at http://example.com/events and URI \ntemplate might be http://example.com/{username}/events.\n\n--peter keane\n\n\ngroovepapa wrote:\n&gt;\n&gt; I like to use cookies from javascript for things like preserving the \n&gt; values of input boxes between requests. That seems like it&#39;s all \n&gt; client state data anyway, so I&#39;ve never felt RESTless doing it. It&#39;s \n&gt; just persisting the client-side (HTML) application state.\n&gt;\n&gt; -L\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com \n&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt;, Nina Jeliazkova &lt;nina@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Moore, Jonathan (CIM) wrote:\n&gt; &gt; &gt; Nina Jeliazkova wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt;&gt; Besides, REST does not encourages cookies and sessions, meaning\n&gt; &gt; &gt;&gt; credentials or something derived from credentials should be sent\n&gt; &gt; &gt;&gt; on_every_ request.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; I&#39;m curious about this assertion, at least as it applies to \n&gt; cookies. Cookies represent pieces of application state that are stored \n&gt; with the client, and they get sent on every request (where domains \n&gt; apply). Why isn&#39;t that RESTful?\n&gt; &gt; &gt;\n&gt; &gt; Well, this is what REST gurus [1] are telling us:\n&gt; &gt;\n&gt; &gt; /*&quot;The Trouble with Cookies*\n&gt; &gt; A web service that sends HTTP cookies violates the principle of\n&gt; &gt; statelessness. In fact, it usually violates statelessness twice. It\n&gt; &gt; moves application state onto the server even though it belongs on\n&gt; &gt; the client, and it stops clients from being in charge of their own\n&gt; &gt; application state.&quot;\n&gt; &gt; ...\n&gt; &gt; OK, so cookies shouldn’t contain session IDs: that’s just an excuse\n&gt; &gt; to keep application state on the server. What about cookies that\n&gt; &gt; really do contain application state? What if you serialize the\n&gt; &gt; actual session hash and send it as a cookie, instead of just sending\n&gt; &gt; a reference to a hash on the server?\n&gt; &gt; This can be RESTful, but it’s usually not. The cookie standard says\n&gt; &gt; that the client can get rid of a cookie when it expires, or when the\n&gt; &gt; client terminates. This is a pretty big restriction on the client’s\n&gt; &gt; control over application state. If you make 10 web requests and\n&gt; &gt; suddenly the server sends you a cookie, you have to start sending\n&gt; &gt; this cookie with your future requests. You can’t make those 10\n&gt; &gt; precookie requests unless you quit and start over. To use a web\n&gt; &gt; browser analogy, your “Back” button is broken. You can’t put the\n&gt; &gt; application in any of the states it was in before you got the cookie.\n&gt; &gt; ...\n&gt; &gt; The only RESTful use of cookies is one where the client is in charge\n&gt; &gt; of the cookie value. The server can suggest values for a cookie\n&gt; &gt; using the Set-Cookie header, just like it can suggest links the\n&gt; &gt; client might want to follow, but the client chooses what cookie to\n&gt; &gt; send just as it chooses what links to follow. In some browser-based\n&gt; &gt; applications, cookies are created by the client and never sent to\n&gt; &gt; the server. The cookie is just a convenient container for\n&gt; &gt; application state, which makes its way to the server in\n&gt; &gt; representations and URIs. That’s a very RESTful use of cookies.&quot;\n&gt; &gt;\n&gt; &gt; /\n&gt; &gt;\n&gt; &gt; I hope the authors don&#39;t mind the long citation .\n&gt; &gt;\n&gt; &gt; Best regards,\n&gt; &gt; Nina\n&gt; &gt;\n&gt; &gt; [1] Leonard Richardson and Sam Ruby, RESTful Web Services, O&#39;Reilly\n&gt; &gt; 2007, p.252\n&gt; &gt;\n&gt; &gt; &gt; (Noting that some cookies may contain more interesting information \n&gt; than JSESSIONID, for example. I agree with an understand the general \n&gt; assessment that server-side session storage is not RESTful).\n&gt; &gt; &gt;\n&gt; &gt; &gt; Jon\n&gt; &gt; &gt; ........\n&gt; &gt; &gt; Jon Moore\n&gt; &gt; &gt; Comcast Interactive Media\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; -----Original Message-----\n&gt; &gt; &gt; From: rest-discuss@yahoogroups.com \n&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt; on behalf of Nina Jeliazkova\n&gt; &gt; &gt; Sent: Thu 10/8/2009 10:53 AM\n&gt; &gt; &gt; To: Subbu Allamaraju\n&gt; &gt; &gt; Cc: jeliazkova.nina@...; Rest List\n&gt; &gt; &gt; Subject: Re: [rest-discuss] composition of REST services\n&gt; &gt; &gt;\n&gt; &gt; &gt; Subbu Allamaraju wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt;&gt; Learning how to authenticate is no different from leaning about the\n&gt; &gt; &gt;&gt; media types and formats.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; I don&#39;t mean to undermine the difficulty here, but the problem does\n&gt; &gt; &gt;&gt; not change just because a URI belongs to a server different from the\n&gt; &gt; &gt;&gt; one that served the representation.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Subbu\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt; The difficulty is not in the authentication itself, but with the\n&gt; &gt; &gt; federated authentication/authorization, encompassing multiple servers.\n&gt; &gt; &gt; Otherwise, it is pretty easy to protect each resource with arbitrary\n&gt; &gt; &gt; kind of available authentication scheme and ask the client to provide\n&gt; &gt; &gt; credentials on each POST. It is quite sure users will not be happy \n&gt; with\n&gt; &gt; &gt; such approach.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Besides, REST does not encourages cookies and sessions, meaning\n&gt; &gt; &gt; credentials or something derived from credentials should be sent\n&gt; &gt; &gt; on_every_ request.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Best regards,\n&gt; &gt; &gt; Nina\n&gt; &gt; &gt;\n&gt; &gt; &gt;&gt; On Thu, Oct 8, 2009 at 4:24 PM, Nina Jeliazkova &lt;nina@...\n&gt; &gt; &gt;&gt; &lt;mailto:nina@...&gt;&gt; wrote:\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;&gt; The integration problem is real, but the server boundary does not\n&gt; &gt; &gt;&gt;&gt; change the problem very much. Does the client care if the\n&gt; &gt; &gt;&gt;&gt; resource it is accessing is on hateoas.com &lt;http://hateoas.com \n&gt; &lt;http://hateoas.com&gt;&gt;\n&gt; &gt; &gt;&gt;&gt; or ulser.com &lt;http://ulser.com &lt;http://ulser.com&gt;&gt; as long it \n&gt; knows the semantics of\n&gt; &gt; &gt;&gt;&gt; the link, the methods to use, security requirements, media types\n&gt; &gt; &gt;&gt;&gt; and so on?\n&gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt;&gt; At least transparently accessing resources outside of server\n&gt; &gt; &gt;&gt; boundary under different domains requires /slightly/ more\n&gt; &gt; &gt;&gt; complicated authentication/authorization scheme, that just a\n&gt; &gt; &gt;&gt; single server, unless all resources are considered unprotected.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Best regards,\n&gt; &gt; &gt;&gt; Nina\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; ------------------------------------\n&gt; &gt; &gt;\n&gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n&gt; \n\n\n"}}