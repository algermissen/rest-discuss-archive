{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":420885286,"authorName":"scott vernon","from":"&quot;scott vernon&quot; &lt;vern33nova@...&gt;","profile":"vern33nova","replyTo":"SENDER","senderId":"WdIO62jtFeoSb5dTAYE6RkhEskSN86ZHAo5WtaFrRN0rl_Pk8UktNArysZHY3DEBmNo5xoTV6ZiNt3AIyvJ8voMBHmtH5ntiAfOdSg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: the meaning of stateless","postDate":"1366725264","msgId":19337,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtsNjNxZytkM3M4QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDkwNEIyQTZGLUNDMzctNEVEOS1BODg4LTkzOUU4OUEwMDkzRUBub3Jkc2MuY29tPg=="},"prevInTopic":19336,"nextInTopic":19338,"prevInTime":19336,"nextInTime":19338,"topicId":19309,"numMessagesInTopic":86,"msgSnippet":"Thank you Jan,  that was very helpful. ... that ... of ... be ... the ... Providing ... store ... fields, ... Yes, you loose visibility and thus cacheability","rawEmail":"Return-Path: &lt;vern33nova@...&gt;\r\nX-Sender: vern33nova@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 16408 invoked from network); 23 Apr 2013 13:54:26 -0000\r\nX-Received: from unknown (10.193.84.168)\n  by m11.grp.bf1.yahoo.com with QMQP; 23 Apr 2013 13:54:26 -0000\r\nX-Received: from unknown (HELO ng7-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.48)\n  by mta6.grp.bf1.yahoo.com with SMTP; 23 Apr 2013 13:54:26 -0000\r\nX-Received: from [98.139.164.120] by ng7.bullet.mail.bf1.yahoo.com with NNFMP; 23 Apr 2013 13:54:26 -0000\r\nX-Received: from [10.193.94.45] by tg1.bullet.mail.bf1.yahoo.com with NNFMP; 23 Apr 2013 13:54:26 -0000\r\nDate: Tue, 23 Apr 2013 13:54:24 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;kl63qg+d3s8@...&gt;\r\nIn-Reply-To: &lt;904B2A6F-CC37-4ED9-A888-939E89A0093E@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;scott vernon&quot; &lt;vern33nova@...&gt;\r\nSubject: Re: the meaning of stateless\r\nX-Yahoo-Group-Post: member; u=420885286; y=IymhiurJcodw7oU1xe5ySOoenRxVWKmAH09rkv8-jSHHA9qK0w\r\nX-Yahoo-Profile: vern33nova\r\n\r\nThank you Jan,  that was very helpful.\n\n--- In rest-discuss@yahoogroups.com=\r\n, Jan Algermissen  wrote:\n&gt;\n&gt; On 22.04.2013, at 22:51, &quot;scott vernon&quot; vern3=\r\n3nova@... wrote:\n&gt;\n&gt; &gt; Thank you for your response.\n&gt; &gt;\n&gt; &gt; The function th=\r\nat we are exposing is a reimbursement calculation\nthat\n&gt; &gt; has many differe=\r\nnt fields (&gt; 50) that could alter the outcome.  Some\nof\n&gt; &gt; the fields are =\r\nbasic flags and others are lists of items that could\nbe\n&gt; &gt; empty or up to =\r\nas many as 100.  There isn&#39;t really any hierarchy to\nthe\n&gt; &gt; data or any va=\r\nlue to expose them as resources individually. \nProviding\n&gt; &gt; the data in a =\r\nPOST would work but then the concern is we need to\nstore\n&gt; &gt; the output of =\r\nthe formula, which also contains a good amount of\nfields,\n&gt; &gt; on the server=\r\n in order to respond to the future GET.\n&gt;\n&gt; Which future GET? Why not just =\r\nPOST the query and consume the result?\nYes, you loose visibility and thus c=\r\nacheability of the result, but given\nthe myriad of parameters reasonable ca=\r\nche hit ratio seems unlikely\nanyhow.\n&gt;\n&gt; So, either I am missing the point,=\r\n or you should just\n&gt;\n&gt; POST /service/calculator\n&gt; Content-Type: applicatio=\r\nn/vnd.foo.reimbursement (or whatever)\n&gt;\n&gt;\n&gt;  ...\n&gt;\n&gt;\n&gt; 200 Ok\n&gt; Content-Typ=\r\ne: application/vnd.foo.reimbursement\n&gt;\n&gt;\n&gt;  ...\n&gt;\n&gt;\n&gt; and be done. Add boxe=\r\ns at will to scale. It&#39;s ok, to just use POST.\n&gt;\n&gt; If you need caching, bec=\r\nause the result will be re-used, you could\nstore the result (as a static fi=\r\nle, maybe), assign it a URI and tell the\nclient (and caches on the way) abo=\r\nut it:\n&gt;\n&gt;\n&gt; 200 Ok\n&gt; Content-Type: application/vnd.foo.reimbursement\n&gt; Con=\r\ntent-Location: http://static.foo.org/calculation-resuts/7qjy6s\n&gt; Location: =\r\nhttp://static.foo.org/calculation-resuts/7qjy6s\n&gt;\n&gt;\n&gt;  ...\n&gt;\n&gt;\n&gt; That way, =\r\nyou could share the static resource with other &#39;users&#39; and\nuse a phalanx of=\r\n caches (replicated using a standard cache protocol) to\nserve up the result=\r\n in the future.\n&gt;\n&gt; ----\n&gt;\n&gt; In the end, you are right though. Keeping the =\r\nresult on the server\ncreates server side state - but this is ok, if you ass=\r\nign it a URI. And\nyes, you essentially need to distribute that across all s=\r\nervers in order\nto scale. This is a normal situation, such as with accounts=\r\n of new users\nor uploaded photos to Flickr.\n&gt;\n&gt; One way to deal with that i=\r\ns caches that replicate, another is trading\nthe &#39;C&#39; of the CAP theorem for =\r\nthe &#39;A&#39;, use a NoSQL DB in the backend\nand deal with the (occasional if at =\r\nall) lack of consistency.\n&gt;\n&gt; Hope that helps.\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt; &gt; We are event=\r\nually\n&gt; &gt; going to feed this service into a larger application and would li=\r\nke\nto\n&gt; &gt; be able to scale as we get large amounts of data fed through.  If=\r\n\nthe\n&gt; &gt; result data is stored in memory, we would lose the ability to scal=\r\ne\nout,\n&gt; &gt; and in essence would make the system not &quot;stateless&quot;.\n&gt; &gt;\n&gt; &gt; My=\r\n developers think that using SOAP so that the result of formula\ncan be\n&gt; &gt; =\r\nreturned in one transaction is the best way to solve this problem. \nI\n&gt; &gt; b=\r\nelieve in REST but I don&#39;t&#39; know if adding a database to hold the\n&gt; &gt; resul=\r\nt data outweighs the benefits or if using a overloaded POST is\n&gt; &gt; better t=\r\nhan the SOAP solution.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --- In rest-discuss@yahoogroups.com, Jan=\r\n Algermissen  wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt; And if you really have to:\n&gt; &gt;&gt;\n&gt; &gt;&gt; On 22.0=\r\n4.2013, at 20:56, &quot;scott vernon&quot; vern33nova@ wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt; so where wou=\r\nld we store the intermediate data\n&gt; &gt;&gt;\n&gt; &gt;&gt; Build up the state on the clien=\r\nt. Why does the intermediate state\nneed\n&gt; &gt; to be on the server in the firs=\r\nt place? Why not just POST the large\n&gt; &gt; &#39;query&#39;?\n&gt; &gt;&gt;\n&gt; &gt;&gt; Jan\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; =\r\n&gt;\n&gt;\n\n\n\n"}}