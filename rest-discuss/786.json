{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"_FIOtBiqfMw_CQoHYIjnOTwqMwoWcwX3L0QtksL1QKr-syCHfb0kW4QtW99CiZkP5YK-NLzWSDzU3hqLIZ6hehKx7OQ7OQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Meerkat API in WRDL","postDate":"1014593059","msgId":786,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNzk3NjIzLkNBODI3RTlBQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDNzgwMjQwLkY4NTZGRjY4QHByZXNjb2QubmV0PiA8MDBiYzAxYzFiY2M3JDNkYWY1OGEwJDY0MDFhOGMwQGluamVrdGlsbz4gPDNDNzg0MUZFLjlCRDRGODcxQHByZXNjb2QubmV0PiA8MDAyMTAxYzFiY2Q5JDdkYmFiZTAwJDY0MDFhOGMwQGluamVrdGlsbz4gPDNDNzhFMjRDLkU3QUI3NDQyQHByZXNjb2QubmV0PiA8MDA3MzAxYzFiZDM5JGQwYmIwZWIwJDY0MDFhOGMwQGluamVrdGlsbz4="},"prevInTopic":785,"nextInTopic":0,"prevInTime":785,"nextInTime":787,"topicId":776,"numMessagesInTopic":8,"msgSnippet":"This message is dedicated to the Canadian hockey teams. ;) ... I could be wrong but I think their model is more complex and requires sort of modifications to","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 24 Feb 2002 23:27:03 -0000\r\nReceived: (qmail 94922 invoked from network); 24 Feb 2002 23:26:48 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m4.grp.snv.yahoo.com with QMQP; 24 Feb 2002 23:26:48 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.snv.yahoo.com with SMTP; 24 Feb 2002 23:26:48 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1ONQjS30997;\n\tSun, 24 Feb 2002 15:26:45 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1ONQiL03996;\n\tSun, 24 Feb 2002 15:26:44 -0800\r\nMessage-ID: &lt;3C797623.CA827E9A@...&gt;\r\nDate: Sun, 24 Feb 2002 15:24:19 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Jason Diamond &lt;jason@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Meerkat API in WRDL\r\nReferences: &lt;3C780240.F856FF68@...&gt; &lt;00bc01c1bcc7$3daf58a0$6401a8c0@injektilo&gt; &lt;3C7841FE.9BD4F871@...&gt; &lt;002101c1bcd9$7dbabe00$6401a8c0@injektilo&gt; &lt;3C78E24C.E7AB7442@...&gt; &lt;007301c1bd39$d0bb0eb0$6401a8c0@injektilo&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nThis message is dedicated to the Canadian hockey teams. ;)\n\nJason Diamond wrote:\n&gt; \n&gt; &gt; Well there are only two &quot;standardized&quot; representations (other than\n&gt; &gt; HTML), XML and form parameters so I think it may make sense to support\n&gt; &gt; them both directly. I am thinking about a simple templating feature for\n&gt; &gt; XML:\n&gt; &gt;\n&gt; &gt; &lt;foo bar=&quot;{height}&quot;&gt;\n&gt; &gt;   &lt;width&gt;{width}&lt;/width&gt;\n&gt; &gt; &lt;/foo&gt;\n&gt; &gt;\n&gt; &gt; It probably doesn&#39;t make much sense to go beyond that.\n&gt; \n&gt; This almost looks like XForms. They have an element that lets you specify\n&gt; model instance data where elements get replaced with the actual form values\n&gt; when the form gets submitted.\n\nI could be wrong but I think their model is more complex and requires\nsort of modifications to be made to the instance data. I was thinking\nmore about a bunch of named replacement parameters. Still it might make\nsense to make reference to XForms somehow as an optional extra feature.\n\nI&#39;ll delay the addition of both features to judge the need more.\n\n&gt; Would these be different kinds of inputs? You can certainly still have query\n&gt; and header inputs. Maybe you don&#39;t need the {variables} in your template if\n&gt; you put XPath expressions on the elements (variable? parameter?) that\n&gt; specify these.\n\nDon&#39;t follow what you would do to put a &quot;foo&quot; attribute with value\nextracted from a user-supplied variable called &quot;bar&quot; in the element\n&quot;blah&quot; using XPaths. Here&#39;s what it looks like in my proposed model:\n\n&lt;blah foo=&quot;{bar}&quot;/&gt;\n\nThe thing that worries me is how to generate repeating structures.\nExamplotron has an eg:occurs=&quot;+&quot; attribute that says that a particular\nstructure is repeatable. But how does that translate into an API, as a\nlist of hashtables for that structure? I&#39;ll probably add this feature if\neither a) I decide that the fixed-structure case is the common one,\nrather than a repeating-structure case or b) I can find a clean, simple\nway to handle the repeating structure case both in WRDL and the API.\n\n&gt; Would you be able to specify an output template as well?\n\nIt sort of makes sense. It might be a cheap, simple way of doing parsing\nand data binding to hashtables or lists of hashtables. Maybe the\ntemplate parsing/serialization language is a different but related\nlanguage.\n\n&gt; I think this is really cool but I&#39;m not sure if it&#39;s really necessary for\n&gt; WRDL. At least for an initial release. By the way, do you have a list of\n&gt; goals or requirements for the first release of WRDL? We certainly don&#39;t want\n&gt; to succumb to feature creep or we might have to change the R to an S. ;-)\n\nThe goal is to make it easy to statically pre-declare the structure of\nXML and XHTML-based web services \n\n&gt; &gt; I think I will also rename it to reference-type, because really we&#39;re\n&gt; &gt; classifying references. Make sense to you?\n&gt; \n&gt; Sounds good. Are you switching to lisp-style identifiers instead of\n&gt; camelCase? I don&#39;t care which one you use but they should probably be\n&gt; consistent.\n\nGood point. I guess camelCase is a little more compatible with non-lisp\nlanguages. \n\n&gt; &gt; &lt;!ELEMENT reference-type (documentation?, appinfo?)&gt;\n&gt; &gt;\n&gt; &gt; &lt;!ATTLIST reference-type name %Name; #REQUIRED\n&gt; &gt;                     match %XPath; #REQUIRED\n&gt; &gt;                     use %XPath; #REQUIRED\n&gt; &gt;                     resourceType %QName; #REQUIRED&gt;\n&gt; \n&gt; Maybe the use attribute should be optional. I can imagine some resources\n&gt; containing a list of references with no obvious key. And perhaps some\n&gt; applications won&#39;t care about the keys.\n\nTrue enough.\n\n&gt; Will the spec specify any sort of rules for compliant APIs? The question I\n&gt; have now is this: should the collection of references maintain the same\n&gt; order they were found in even if keyed? If so, we&#39;d have to use a fancier\n&gt; data structure than a Hashtable or Map since those usually destroy the\n&gt; ordering. I would tend to think that the answer to this would be use but I\n&gt; don&#39;t have any particular use cases to justify it.\n\nThere should be some way to order them by position but it may not\nrequire a special data structure. If you put a &quot;documentPosition&quot;\nattribute on each reference/resource object then the application could\nsort on that.\n\n Paul Prescod\n\n"}}