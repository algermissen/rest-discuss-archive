{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":341233558,"authorName":"Tim Williams","from":"Tim Williams &lt;williamstw@...&gt;","profile":"quwiltw","replyTo":"SENDER","senderId":"uhlFbKM6xayFTxAxSyYVGR4TffWlfEwd9ym-Uuxa9QOL0T4CwrB4r54degSMAwl3SsN5zSsCEKX6s0fW2cFkGREtLaV0KfjqY3k","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Media Type Version Negotiation","postDate":"1252674759","msgId":13230,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5OTg4ODQ0MDkwOTExMDYxMnY1YzQyN2VlYnA4ZWE5MjIxZDIxYzM4OTgxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDI4ZTI1NzExMDkwOTEwMjI0OG0xNTllYzgxNGk4OTc2MjRlY2JmMWNjMGVjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPgkgPDRBQTlDM0NCLjgwODA3QHJlZGhhdC5jb20+CSA8MjhlMjU3MTEwOTA5MTAyMjQ4bTE1OWVjODE0aTg5NzYyNGVjYmYxY2MwZWNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":13229,"nextInTopic":13231,"prevInTime":13229,"nextInTime":13231,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"... Thanks Peter, I wish I d crafted the right google keywords to find this before I posed the question - well done:) --tim","rawEmail":"Return-Path: &lt;williamstw@...&gt;\r\nX-Sender: williamstw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 17552 invoked from network); 11 Sep 2009 13:12:50 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m3.grp.re1.yahoo.com with QMQP; 11 Sep 2009 13:12:50 -0000\r\nX-Received: from unknown (HELO mail-yx0-f182.google.com) (209.85.210.182)\n  by mta2.grp.sp2.yahoo.com with SMTP; 11 Sep 2009 13:12:49 -0000\r\nX-Received: by yxe12 with SMTP id 12so1464419yxe.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 11 Sep 2009 06:12:39 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.150.130.31 with SMTP id c31mr4852300ybd.278.1252674759313; \n\tFri, 11 Sep 2009 06:12:39 -0700 (PDT)\r\nIn-Reply-To: &lt;28e257110909102248m159ec814i897624ecbf1cc0ec@...&gt;\r\nReferences: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt;\n\t &lt;4AA9C3CB.80807@...&gt;\n\t &lt;28e257110909102248m159ec814i897624ecbf1cc0ec@...&gt;\r\nDate: Fri, 11 Sep 2009 09:12:39 -0400\r\nMessage-ID: &lt;499888440909110612v5c427eebp8ea9221d21c38981@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Tim Williams &lt;williamstw@...&gt;\r\nSubject: Re: [rest-discuss] Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=341233558; y=0dzpMKfgZ5_ystA9tffyKh0BjlKBX3DtAIIdxZtVojwurw\r\nX-Yahoo-Profile: quwiltw\r\n\r\nOn Fri, Sep 11, 2009 at 1:48 AM, Peter Williams &lt;pezra@...&gt; wr=\r\note:\n&gt; On Thu, Sep 10, 2009 at 9:28 PM, Bill Burke &lt;bburke@...&gt; wrot=\r\ne:\n&gt;&gt; Tim Williams wrote:\n&gt;&gt;\n&gt;&gt; &gt; 3) The next thing that comes to mind is s=\r\nomething like the &quot;level&quot;\n&gt;&gt; &gt; accept-extension exampled in rfc2616 (e.g. t=\r\next/html;level=3D1). In my\n&gt;&gt; &gt; scenario, would be something like: applicat=\r\nion/myformat;version=3D2.0 I\n&gt;&gt; &gt; suppose.\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt; I like this approach =\r\nthe best. I also prefer:\n&gt;&gt;\n&gt;&gt; application/myformat+xml;version=3D2.0\n&gt;&gt; ap=\r\nplication/myformat+json;version=3D2.0\n&gt;&gt;\n&gt;&gt; In other words, the &quot;+&quot; whether=\r\n or not the media type allows the + or\n&gt;&gt; not. (json doesn&#39;t I think).\n&gt;&gt;\n&gt;=\r\n\n&gt; I, on the other hand, think the best approach is to put the major\n&gt; vers=\r\nion directly in the subtype (eg `application/myformat.v2+xml`).\n&gt;\n&gt; One pra=\r\nctical issue with putting the version in a parameter is that\n&gt; many applica=\r\ntions servers will be unable to facilitate content\n&gt; negotiation. =A0For in=\r\nstance, Rails believes, quite reasonably, that\n&gt; `application/myformat+xml;=\r\nversion=3D2.0` and\n&gt; `application/myformat+xml;version=3D3.0` are the same =\r\nmime type.\n&gt; Therefore, if you take this approach, you would not be able to=\r\n\n&gt; leverage any on it&#39;s very nice content negotiation support. =A0I am not\n=\r\n&gt; very familiar with other web app frameworks but it would bear\n&gt; investiga=\r\nting the one you plan on using.\n&gt;\n&gt; On a more theoretical level there is th=\r\ne fact that parameters for a\n&gt; mime type are syntactically optional. =A0Thi=\r\ns means that as a server you\n&gt; have to decide what to do when you get a req=\r\nuest with an accept of\n&gt; `application/myformat+xml`. =A0There are three opt=\r\nions none of which is\n&gt; very good.\n&gt;\n&gt; You could return at 406 with the lis=\r\nt types with valid versions.\n&gt; However, this might be somewhat disconcertin=\r\ng given that to date\n&gt; almost common MIME type parameters are both syntacti=\r\ncally and\n&gt; semantically optional (eg `charset`)\n&gt;\n&gt; You could return the p=\r\nreferred (read: highest) version. =A0However, this\n&gt; does not work because =\r\nit will cause clients to break every time an\n&gt; addition version is created.=\r\n =A0If, as a client developer exploring the\n&gt; api, i get a usable response =\r\nusing `application/myformat+xml` i am\n&gt; quite likely to just use that in my=\r\n code. =A0However, my parsing of the\n&gt; representations will be based on the=\r\n schema of the preferred version\n&gt; at that time.\n&gt;\n&gt; You could return the m=\r\nost compatible (read: lowest) version. =A0But that\n&gt; means that you are enc=\r\nouraging users to use the least preferred\n&gt; version of the api. =A0As an ex=\r\nploring developer i happen to leave off\n&gt; the version what i see is the ini=\r\ntial flawed attempts at the api.\n&gt;\n&gt; Embedding the major version directly i=\r\nn the subtype\n&gt; (eg `application/myformat.v2+xml`) makes it absolutely clea=\r\nr that\n&gt; the major version is required. =A0A parameter is a good place to p=\r\nut a\n&gt; minor version, though, if you need such a thing. =A0If there are\n&gt; m=\r\nultiple server implementations for example, some clients might need a\n&gt; way=\r\n of saying i need version 2.1 where as other might be fine with any\n&gt; v2 im=\r\nplementation. =A0In this situation i think\n&gt; `application/myformat.v2+xml;l=\r\nevel=3D42` works rather well. =A0The lack of\n&gt; a level parameter in the acc=\r\nept header field implies that any level\n&gt; will do, where as specifying a le=\r\nvel means that the specified level,\n&gt; or greater, is required.\n&gt;\n&gt;\n&gt; BTW, i=\r\n have written a series of posts\n&gt; (&lt;http://barelyenough.org/blog/tag/rest-v=\r\nersioning/) on this subject which\n&gt; you might find interesting.\n\nThanks Pet=\r\ner, I wish I&#39;d crafted the right google keywords to find\nthis before I pose=\r\nd the question - well done:)\n\n--tim\n\n"}}