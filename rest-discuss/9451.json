{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"PWNWWXk257-8ixGcKo5IWNtRBMnmvFG-Xo-HvTRiIQYOz3fRBPtCIPOGe3QH3fQ8AJiOmydeBoCsTNCQ3U1HBNZLbcmBLAK1qEIjwYdA2g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: To PUT things right","postDate":"1184278209","msgId":9451,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc3NTc3OTEyNTE2MTkzNDkxMTg0Mjc4MjA5QG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":9263,"nextInTopic":9453,"prevInTime":9450,"nextInTime":9452,"topicId":9262,"numMessagesInTopic":19,"msgSnippet":"... Following RFC 2616 doesn t begin to guarantee the resulting implementation won t break the constraints of REST.  Ergo, HTTP is not REST, nor is REST","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 34309 invoked from network); 12 Jul 2007 22:10:50 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m52.grp.scd.yahoo.com with QMQP; 12 Jul 2007 22:10:50 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta7.grp.scd.yahoo.com with SMTP; 12 Jul 2007 22:10:50 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nReceived: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 1CC587945F\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Jul 2007 22:10:10 +0000 (UTC)\r\nTo: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W7577912516193491184278209@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Thu, 12 Jul 2007 22:10:09 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re: To PUT things right\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt;&gt; There&#39;s some disagreement here, which stems from the wording of\n&gt;&gt; the RFC. But HTTP is not REST,\n&gt;\n&gt;HTTP is a protocol for REST applications.\n&gt;\n\nFollowing RFC 2616 doesn&#39;t begin to guarantee the resulting \nimplementation won&#39;t break the constraints of REST.  Ergo, HTTP is not \nREST, nor is REST dependent on HTTP as a protocol (no matter what \nMicrosoft says).\n\n&gt;\n&gt;&gt; if we are discussing the semantics of PUT in REST terms\n&gt;&gt; (generic interface) then store means replace in RFC 2616 just\n&gt;&gt; like STOR means replace in RFC 765.\n&gt;\n&gt;A generic interface can be anything. A â€œuniform interfaceâ€� has no\n&gt;particular properties other than being uniform. HTTP provides the\n&gt;means to implement *a* particular uniform interface. The\n&gt;specifics of the uniform interface defined by HTTP are described\n&gt;in RFCÂ 2616 and nowhere else.\n&gt;\n\nI think &quot;uniform interface&quot; and &quot;generic interface&quot; mean exactly the \nsame thing, as Roy seems to use them interchangably throughout the \nthesis.  A generic, or uniform, interface follows the principle of \ngenerality.  Where does HTTP say anything about generic or uniform \ninterfaces?  How can connector semantics be &quot;generic&quot; across only \none protocol?\n\n&gt;\n&gt;&gt; &quot;REST does not restrict communication to a particular protocol,\n&gt;&gt; but it does constrain the interface between components, and\n&gt;&gt; hence the scope of interaction and implementation assumptions\n&gt;&gt; that might otherwise be made between components. For example,\n&gt;&gt; the Web&#39;s primary transfer protocol is HTTP, but the\n&gt;&gt; architecture also includes seamless access to resources that\n&gt;&gt; originate on pre-existing network servers, including FTP,\n&gt;&gt; Gopher, and WAIS. Interaction with those services is restricted\n&gt;&gt; to the semantics of a REST connector.&quot;\n&gt;\n&gt;This is exactly what I&#39;m saying.\n&gt;\n\nYou&#39;re saying that giving PUT semantics other than &quot;replace&quot; meets \nthe definition of a uniform interface.  I&#39;m saying no, if you give \nPUT any other semantics besides &quot;replace&quot; then the scope of your \ninteractions has broken the constraints of REST because other \ncomponents assume PUT to have &quot;replace&quot; semantics -- the essence of \n&quot;self-descriptive messages&quot; is that they are not application-\nspecific or even protocol-specific, but generic.  An HTTP PUT \nrequest is only self-descriptive if it uses generic &quot;replace&quot; \nsemantics, otherwise it is application-specific and depends on a \nlibrary API for interoperability between components -- at which \npoint it is no longer self-descriptive.\n\n&gt;\n&gt;&gt; This tells me that a REST connector must understand that the\n&gt;&gt; semantics of GET equal the semantics of RETR, APPE=POST,\n&gt;&gt; DELE=DELETE, LIST=OPTIONS and STOR=PUT in order to meet the\n&gt;&gt; Uniform Interface constraint.\n&gt;\n&gt;Err. Yes, that is true if you are implementing a RESTful bridge\n&gt;to old protocols like FTP. It is not a universal truth about\n&gt;REST. Sorry.\n&gt;\n\nIt doesn&#39;t matter whether you&#39;re using FTP or not.  If you have truly \nimplemented &quot;the semantics of a REST connector&quot; then that connector \ncan seamlessly access an FTP resource using the generic semantics \nshared between the two protocols.  If it cannot, whether you intend it \nto use FTP or not, then your semantics are not that of a REST connector.  \nSo yes, this is a universal truth about REST.\n\nA REST connector has a &quot;socket&quot; with the semantics of &quot;replace&quot;, each \nprotocol (WAIS, Gopher, FTP, HTTP, presumably waka) has a method which \ncorresponds to that socket.  Don&#39;t plug HTTP PUT into any socket other \nthan &quot;replace&quot; and don&#39;t plug FTP STOR into any socket other than \n&quot;replace&quot;.  If you plug one method into multiple sockets, you&#39;ve broken \nthis constraint.\n\nIf you plug PUT into a socket with some other semantics (like &quot;merge&quot; \nor &quot;move&quot;) instead of the &quot;replace&quot; socket whose generic semantics are \n(should be) well understood, your connector becomes application-specific \nand not a REST connector.  I don&#39;t care if that PUT is an HTTP PUT or a \nWeb3S PUT, one method must be reserved to implement the generic \nsemantics of &quot;replace&quot; in *any* REST protocol or implementation.\n\n-Eric\n\n\n\n\n"}}