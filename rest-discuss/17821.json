{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":22895181,"authorName":"Dan Haywood","from":"Dan Haywood &lt;dan@...&gt;","profile":"danhaywood@ymail.com","replyTo":"SENDER","senderId":"x8AJgUcoMTuWsintbODHpjZtSLkR5JOjQgRcCLV079W_-AjkihA5ewWAyB8EfsHXMd_Vi_t5RfqnPT342to8pwvrT03VvqOmbh0lQmI9cGwC","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Should a RESTful API expose use cases & view models rather than entities?","postDate":"1317315913","msgId":17821,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRFODRBNTQ5LjMwOTA4MDZAaGF5d29vZC1hc3NvY2lhdGVzLmNvLnVrPg==","inReplyToHeader":"PDM0NjU5NzdDLTc1QUMtNDY3Qi1BMTZGLTA5Njg3QTFCMDlFOUBnbWFpbC5jb20+","referencesHeader":"PC00Njg3NDM3NTA4NjIzMzU4MTMwQHVua25vd25tc2dpZD4gPDRFODMwNkE5LjIwOTA3MDBAaGF5d29vZC1hc3NvY2lhdGVzLmNvLnVrPiA8MzQ2NTk3N0MtNzVBQy00NjdCLUExNkYtMDk2ODdBMUIwOUU5QGdtYWlsLmNvbT4="},"prevInTopic":17815,"nextInTopic":0,"prevInTime":17820,"nextInTime":17822,"topicId":17795,"numMessagesInTopic":16,"msgSnippet":"... So if I understand, you are basically saying that DTOs act as a projection of the entity and therefore address versioning issues if the entity changes its","rawEmail":"Return-Path: &lt;dan@...&gt;\r\nX-Sender: dan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 694 invoked from network); 29 Sep 2011 17:05:15 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m1.grp.sp2.yahoo.com with QMQP; 29 Sep 2011 17:05:15 -0000\r\nX-Received: from unknown (HELO mail-wy0-f180.google.com) (74.125.82.180)\n  by mta2.grp.sp2.yahoo.com with SMTP; 29 Sep 2011 17:05:15 -0000\r\nX-Received: by mail-wy0-f180.google.com with SMTP id 11so311628wyh.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 29 Sep 2011 10:05:14 -0700 (PDT)\r\nX-Received: by 10.216.138.138 with SMTP id a10mr12614975wej.58.1317315914613;\n        Thu, 29 Sep 2011 10:05:14 -0700 (PDT)\r\nReturn-Path: &lt;dan@...&gt;\r\nX-Received: from [10.70.7.215] ([46.233.64.128])\n        by mx.google.com with ESMTPS id gd6sm3363333wbb.1.2011.09.29.10.05.12\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Thu, 29 Sep 2011 10:05:12 -0700 (PDT)\r\nMessage-ID: &lt;4E84A549.3090806@...&gt;\r\nDate: Thu, 29 Sep 2011 18:05:13 +0100\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20110902 Thunderbird/6.0.2\r\nMIME-Version: 1.0\r\nTo: Dilip Krishnan &lt;dilip.krishnan@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;-4687437508623358130@unknownmsgid&gt; &lt;4E8306A9.2090700@...&gt; &lt;3465977C-75AC-467B-A16F-09687A1B09E9@...&gt;\r\nIn-Reply-To: &lt;3465977C-75AC-467B-A16F-09687A1B09E9@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dan Haywood &lt;dan@...&gt;\r\nSubject: Re: [rest-discuss] Should a RESTful API expose use cases & view models\n rather than entities?\r\nX-Yahoo-Group-Post: member; u=22895181; y=6Ff9np3YkAqAaqr4tjqAM1WZVm4D-0Nm0iUFwcPdSWmlof4I8FteYt_UgIJewLo\r\nX-Yahoo-Profile: danhaywood@...\r\n\r\n&gt;\n&gt;&gt; But don&#39;t DTOs also constitute a client coupling, specifically to the\n&gt;&gt; parameters required to complete a particular use case?\n&gt;\n&gt; True, but using DTO&#39;s only couples the client to the representation and\n&gt; not the domain model itself\n&gt;\n\nSo if I understand, you are basically saying that DTOs act as a \nprojection of the entity and therefore address versioning issues if the \nentity changes its structure.  I can indeed see that this is an issue if \nthe RESTful client is hard-wired to render particular information from \nspecific representations.\n\nOn the other hand, a RESTful client could be written in a more generic \nfashion such that it would be resilient to changes (in the same way that \na web browser can render any HTML page, and doesn&#39;t care how the page&#39;s \ncontent changes over time).\n\nFor such clients, it wouldn&#39;t be necessary to create DTO projections \nfrom entities, would it?\n\n\n\n&gt;&gt; In other words, if the use case evolves so that it now requires another\n&gt;&gt; input (&quot;would you like a pastry with your coffee, sir?&quot;) then the client\n&gt;&gt; will still break, won&#39;t it?\n&gt;\n&gt; Not necessarily, provided the design is right. In your example whats\n&gt; changing is the state machine and not the resource itself. So in your\n&gt; example the server would drive a different workflow using the same\n&gt; resource primitives.\n\nUnderstood.\n\nAt the risk of revisiting debates that&#39;s have been had here many times \nbefore (ie: please bear with me), I wonder, whether Roy intended REST \nresources to represent application state, ie use cases?    I ask because \nin the comments to his HATEOAS blog post he says:\n\n&quot;Don�t confuse application state (the state of the user�s application of \ncomputing to a given task) with resource state (the state of the world \nas exposed by a given service). They are not the same thing.&quot;\n\nTo me this suggests that designing resources that represent a single \nuser&#39;s application state isn&#39;t at all what Roy intended.\n\nFWIW, I would have thought that using code-on-demand to track \napplication state is more in keeping with the REST principles?\n\n\n&gt;\n&gt; Good\n&gt; examples of that in the RESTbucks\n&gt; &lt;http://www.infoq.com/articles/webber-rest-workflow&gt; article or Web\n&gt; Intents &lt;http://webintents.org/&gt;.\n&gt;\n\nThanks for these links.  NB: the webber article is where I followed the \nlink through to Roy&#39;s comment.  The webintents does sound like an \ninteresting idea, though.\n\n\n-- Dan\n\n"}}