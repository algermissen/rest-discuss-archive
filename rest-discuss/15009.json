{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"sVpzgcdlVlrY-292mV3JgzciDZzEnh_MEAgrDwJL0EqjyxuVh2wSC4Yf4Tkb-cIwflD6nUpd4C1lI7w0eNn5P0L0F1KHHC6aXQ","spamInfo":{"isSpam":false,"reason":"1"},"subject":"Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website","postDate":"1267858953","msgId":15009,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDMxMzY2OS41MTk3Ny5xbUB3ZWI1NTkwMy5tYWlsLnJlMy55YWhvby5jb20+","inReplyToHeader":"PGI1NDhkZjY1MTAwMzA1MjAyM3QxNWM5YzAwYmc0ZGFkYWUxNThiNWI2NDQxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15008,"nextInTopic":15010,"prevInTime":15008,"nextInTime":15010,"topicId":14978,"numMessagesInTopic":41,"msgSnippet":"I suppose what I am asking is, on every request, I basically have to perform some ACL on the given URL id and the authorization header id to make sure they","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 92970 invoked from network); 6 Mar 2010 07:02:37 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m13.grp.re1.yahoo.com with QMQP; 6 Mar 2010 07:02:37 -0000\r\nX-Received: from unknown (HELO n15c.bullet.mail.mud.yahoo.com) (68.142.207.203)\n  by mta1.grp.re1.yahoo.com with SMTP; 6 Mar 2010 07:02:37 -0000\r\nX-Received: from [209.191.108.96] by n15.bullet.mail.mud.yahoo.com with NNFMP; 06 Mar 2010 07:02:33 -0000\r\nX-Received: from [66.196.97.154] by t3.bullet.mud.yahoo.com with NNFMP; 06 Mar 2010 07:02:33 -0000\r\nX-Received: from [127.0.0.1] by omp207.mail.re3.yahoo.com with NNFMP; 06 Mar 2010 07:02:33 -0000\r\nX-Yahoo-Newman-Property: ymail-5\r\nX-Yahoo-Newman-Id: 445040.60316.bm@...\r\nX-Received: (qmail 51982 invoked by uid 60001); 6 Mar 2010 07:02:33 -0000\r\nMessage-ID: &lt;313669.51977.qm@...&gt;\r\nX-YMail-OSG: jqfI0xIVM1n2xC_W3a2kikJRaniHnAW5Pg51.uD1S_vrVTW\n ha6Hp2YwRNqbMxLAV5fzCyD4mN4hTZ.uF00ZjwhGcktXw5K3MFTqZAYA9pAm\n DnLpacr0FCf0L69BWehWmAWpFw_X8S5EfDLMUxXpWEsIz3._qJZbWBZEGe3K\n T4XOMt0LZTJ91FYcToixjvTN1faDdFH5hKXA7AXf1kyvjf6lA7gHEB0xDzlT\n 61v.fU5_Ji6S2fVd3LDw38bDLTXsx6Zfb9ink_um9SkPyRlsEU705MT.txA-\n -\r\nX-Received: from [99.22.138.61] by web55903.mail.re3.yahoo.com via HTTP; Fri, 05 Mar 2010 23:02:33 PST\r\nX-Mailer: YahooMailClassic/9.2.12 YahooMailWebService/0.8.100.260964\r\nDate: Fri, 5 Mar 2010 23:02:33 -0800 (PST)\r\nTo: craigmcc@..., mike amundsen &lt;mamund@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;b548df651003052023t15c9c00bg4dadae158b5b6441@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-568618117-1267858953=:51977&quot;\r\nX-eGroups-Msg-Info: 2:1:1:0:0\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website\r\nX-Yahoo-Group-Post: member; u=272793929; y=XTscKKNJ3h3hHPYGLLh1ry4yHZckZlqecGGPjllImD1vGHqp\r\nX-Yahoo-Profile: andjarnic\r\n\r\n\r\n--0-568618117-1267858953=:51977\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI suppose what I am asking is, on every request, I basically have to perfor=\r\nm some ACL on the given URL id and the authorization header id to make sure=\r\n they match. IF they do (and the id is allowed to make the call via acl), t=\r\nhen it continues. But, there is ALWAYS some logic in place to check this. R=\r\night now, for example, I simply use the Auth header to validate, if so, the=\r\n call continues. In my current way of doing this, it&#39;s very possible someon=\r\ne could give someone else (or someone could steal it) the URL and anyone th=\r\nat authenticates, has access to it. \n\nSo basically I should probably first =\r\nmake sure the calling user via the Authorization header is valid. Then, mak=\r\ne sure that matches up to the URL id (if one is applicable), and then make =\r\nsure the id has the rights to access the method being requested. If all tha=\r\nt goes thru, then the method can take place. That about right?\n\n\nCraig, you=\r\n wouldn&#39;t find much if you had access to my account. It&#39;s pretty empty sadl=\r\ny! \n\n--- On Fri, 3/5/10, mike amundsen &lt;mamund@...&gt; wrote:\n\nFrom: mik=\r\ne amundsen &lt;mamund@...&gt;\nSubject: Re: [rest-discuss] Re: Thoughts abou=\r\nt URLs for a REST driven website\nTo: craigmcc@...\nCc: rest-discuss@ya=\r\nhoogroups.com\nDate: Friday, March 5, 2010, 8:23 PM\n\n\n\n\n\n\n\n=C2=A0\n\n\n\n  \n\n\n  =\r\n  \n      \n      \n      &lt;snip&gt;\n\n&gt; This approach works if a URL template is e=\r\nither valid or not for a\n\n&gt; particular user, but that doesn&#39;t cover Kevin&#39;s=\r\n use case where\n\n&gt; &quot;/orders/{id} &quot; is valid for both of us, but we should n=\r\not be able to see\n\n&gt; each other&#39;s orders.\n\n&lt;/snip&gt;\n\n\n\nThere are lots of pos=\r\nsibilities:\n\ndetailed list\n\n&lt;user id=3D&quot;kevin&quot;&gt;\n\n=C2=A0=C2=A0&lt;acl href=3D&quot;/=\r\norders/ 1&quot; methods=3D&quot;*&quot;/ &gt;\n\n=C2=A0=C2=A0&lt;acl href=3D&quot;/orders/ 6&quot; methods=\r\n=3D&quot;*&quot;/ &gt;\n\n=C2=A0=C2=A0&lt;acl href=3D&quot;/orders/ 7&quot; methods=3D&quot;*&quot;/ &gt;\n\n=C2=A0=C2=\r\n=A0&lt;acl href=3D&quot;/orders/ 8&quot; methods=3D&quot;*&quot;/ &gt;\n\n&lt;/user&gt;\n\n\n\ntemplate:\n\n&lt;user i=\r\nd=3D&quot;craig&quot;&gt;\n\n=C2=A0=C2=A0&lt;acl href=3D&quot;/orders/ (2|3|4|5) &quot; methods=3D&quot;*&quot;/ =\r\n&gt;\n\n&lt;/user&gt;\n\n\n\nchange URI design:\n\norder resource URI contains prefix (mca-0=\r\n01, mca-002, etc)\n\n&lt;user id=3D&quot;mamund&quot;&gt;\n\n  &lt;acl href=3D&quot;/orders/ mca-(.*)&quot; =\r\nmethods=3D&quot;*&quot; /&gt;\n\n&lt;/user&gt;\n\n\n\netc.\n\n\n\nmca\n\nhttp://amundsen. com/blog/\n\n\n\nOn =\r\nFri, Mar 5, 2010 at 22:44, Craig McClanahan &lt;craigmcc@gmail. com&gt; wrote:\n\n&gt;=\r\n\n\n&gt;\n\n&gt; On Fri, Mar 5, 2010 at 6:04 PM, mike amundsen &lt;mamund@yahoo. com&gt; wr=\r\note:\n\n&gt;&gt;\n\n&gt;&gt;\n\n&gt;&gt;\n\n&gt;&gt; It sounds like you are asking about how to handle auth=\r\norization (not\n\n&gt;&gt; authentication) . If so, that&#39;s not really a REST issue,=\r\n but an\n\n&gt;&gt; implementation detail for HTTP apps.\n\n&gt;&gt;\n\n&gt;&gt; In my HTTP applica=\r\ntions I refer to a list of URIs (or regexp-based URI\n\n&gt;&gt; templates) plus a =\r\nlist of HTTP methods for each authenticated user; storage\n\n&gt;&gt; and represent=\r\nation can vary to taste. Consider a user-centered\n\n&gt;&gt; representation of an =\r\napplication&#39; s access control list for a user:\n\n&gt;&gt; &lt;user id=3D&quot;mamund&quot;&gt;\n\n&gt;&gt;=\r\n =C2=A0=C2=A0&lt;acl href=3D&quot;/(.*)&quot; methods=3D&quot;GET, HEAD,OPTIONS&quot; /&gt; &lt;!-- defa=\r\nult access --&gt;\n\n&gt;&gt; =C2=A0=C2=A0&lt;acl href=3D&quot;/admin/ (.*)&quot; methods=3D&quot;!&quot;/ &gt; =\r\n&lt;!-- deny all methods --&gt;\n\n&gt;&gt; =C2=A0=C2=A0&lt;acl href=3D&quot;/mamund/ (.*)&quot; metho=\r\nds=3D&quot;*&quot;/ &gt; &lt;!-- allow all methods --&gt;\n\n&gt;&gt; &lt;/user&gt;\n\n&gt;&gt; All that is left is =\r\nto compare the incoming request&#39;s METHOD + URI against\n\n&gt;&gt; the above list. =\r\nAny access=C2=A0failures result in a &quot;403 Forbidden&quot; response.\n\n&gt;\n\n&gt; This a=\r\npproach works if a URL template is either valid or not for a\n\n&gt; particular =\r\nuser, but that doesn&#39;t cover Kevin&#39;s use case where\n\n&gt; &quot;/orders/{id} &quot; is v=\r\nalid for both of us, but we should not be able to see\n\n&gt; each other&#39;s order=\r\ns.\n\n&gt;\n\n&gt; As you mentioned, this is not a REST issue at all, because exactly=\r\n the same\n\n&gt; scenario applies to a traditional webapp where a crafty user m=\r\night try to\n\n&gt; hand modify the URL that displays an order&#39;s content, pluggi=\r\nng in someone\n\n&gt; else&#39;s orderid to see if the system will let him see it.=\r\n=C2=A0 A properly\n\n&gt; designed webapp should not; neither should a web servi=\r\nce.\n\n&gt;\n\n&gt; There&#39;s lots of ways to implement this in the back end.=C2=A0 At =\r\nJive, for\n\n&gt; example, we have a low level DAO that handles the database cal=\r\nls with no\n\n&gt; authorization (could be JPA or Hibernate or whatever), and a =\r\nhigher level\n\n&gt; &quot;manager&quot; that checks whether the authenticated user has ac=\r\ncess to the the\n\n&gt; requested data.=C2=A0 This is what all of the other busi=\r\nness logic in the\n\n&gt; application calls -- the DAO is *only* used by the cor=\r\nresponding manager.\n\n&gt;\n\n&gt; The rules for determining=C2=A0authoriz ed access=\r\n=C2=A0are necessarily domain specific,\n\n&gt; but for the use case being descri=\r\nbed it&#39;s pretty simple -- if the\n\n&gt; authenticated user owns the requested o=\r\nrder, the data should be returned;\n\n&gt; otherwise it should not.\n\n&gt;\n\n&gt; And yo=\r\nu=C2=A0should use exactly the same logic behind a REST service and a\n\n&gt; cor=\r\nresponding webapp that supports HTML based access to the same data.\n\n&gt;\n\n&gt; C=\r\nraig\n\n&gt;\n\n&gt; PS:=C2=A0 Kevin, if you&#39;re really willing to give me your securi=\r\nty token and your\n\n&gt; identity, as well as the URL for your order, give me a=\r\n second to set up a\n\n&gt; little HTML form so you can give me your banking log=\r\nin credentials too :-).\n\n&gt;\n\n\n\n    \n     \n\n    \n    \n\n\n \n\n\n\n  \n\n\n\n\n\n\n      \r\n--0-568618117-1267858953=:51977\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;table cellspacing=3D&quot;0&quot; cellpadding=3D&quot;0&quot; border=3D&quot;0&quot; &gt;&lt;tr&gt;&lt;td valign=3D&quot;=\r\ntop&quot; style=3D&quot;font: inherit;&quot;&gt;I suppose what I am asking is, on every reque=\r\nst, I basically have to perform some ACL on the given URL id and the author=\r\nization header id to make sure they match. IF they do (and the id is allowe=\r\nd to make the call via acl), then it continues. But, there is ALWAYS some l=\r\nogic in place to check this. Right now, for example, I simply use the Auth =\r\nheader to validate, if so, the call continues. In my current way of doing t=\r\nhis, it&#39;s very possible someone could give someone else (or someone could s=\r\nteal it) the URL and anyone that authenticates, has access to it. &lt;br&gt;&lt;br&gt;S=\r\no basically I should probably first make sure the calling user via the Auth=\r\norization header is valid. Then, make sure that matches up to the URL id (i=\r\nf one is applicable), and then make sure the id has the rights to access th=\r\ne method being requested. If all that goes thru, then the method can take\n =\r\nplace. That about right?&lt;br&gt;&lt;br&gt;&lt;br&gt;Craig, you wouldn&#39;t find much if you ha=\r\nd access to my account. It&#39;s pretty empty sadly! &lt;br&gt;&lt;br&gt;--- On &lt;b&gt;Fri, 3/5=\r\n/10, mike amundsen &lt;i&gt;&lt;mamund@...&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;&lt;blockquot=\r\ne style=3D&quot;border-left: 2px solid rgb(16, 16, 255); margin-left: 5px; paddi=\r\nng-left: 5px;&quot;&gt;&lt;br&gt;From: mike amundsen &lt;mamund@...&gt;&lt;br&gt;Subject:=\r\n Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website&lt;br&gt;To=\r\n: craigmcc@...&lt;br&gt;Cc: rest-discuss@yahoogroups.com&lt;br&gt;Date: Friday, M=\r\narch 5, 2010, 8:23 PM&lt;br&gt;&lt;br&gt;&lt;div id=3D&quot;yiv1502502269&quot;&gt;\n\n\n\n\n\n&lt;span style=3D=\r\n&quot;display: none;&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;ygrp-text&quot;&gt;\n      \n      \n=\r\n      &lt;p&gt;&lt;snip&gt;&lt;br&gt;\n&gt; This approach works if a URL template is eit=\r\nher valid or not for a&lt;br&gt;\n&gt; particular user, but that doesn&#39;t cover Kev=\r\nin&#39;s use case where&lt;br&gt;\n&gt; &quot;/orders/{id} &quot; is valid for both of us, but w=\r\ne should not be able to see&lt;br&gt;\n&gt; each other&#39;s orders.&lt;br&gt;\n&lt;/snip&gt;=\r\n&lt;br&gt;\n&lt;br&gt;\nThere are lots of possibilities:&lt;br&gt;\ndetailed list&lt;br&gt;\n&lt;user i=\r\nd=3D&quot;kevin&quot;&gt;&lt;br&gt;\n&nbsp;&nbsp;&lt;acl href=3D&quot;/orders/ 1&quot; methods=3D&quot;*&quot;/ =\r\n&gt;&lt;br&gt;\n&nbsp;&nbsp;&lt;acl href=3D&quot;/orders/ 6&quot; methods=3D&quot;*&quot;/ &gt;&lt;br&gt;\n&n=\r\nbsp;&nbsp;&lt;acl href=3D&quot;/orders/ 7&quot; methods=3D&quot;*&quot;/ &gt;&lt;br&gt;\n&nbsp;&nbsp;&=\r\nlt;acl href=3D&quot;/orders/ 8&quot; methods=3D&quot;*&quot;/ &gt;&lt;br&gt;\n&lt;/user&gt;&lt;br&gt;\n&lt;br&gt;\nt=\r\nemplate:&lt;br&gt;\n&lt;user id=3D&quot;craig&quot;&gt;&lt;br&gt;\n&nbsp;&nbsp;&lt;acl href=3D&quot;/ord=\r\ners/ (2|3|4|5) &quot; methods=3D&quot;*&quot;/ &gt;&lt;br&gt;\n&lt;/user&gt;&lt;br&gt;\n&lt;br&gt;\nchange URI =\r\ndesign:&lt;br&gt;\norder resource URI contains prefix (mca-001, mca-002, etc)&lt;br&gt;\n=\r\n&lt;user id=3D&quot;mamund&quot;&gt;&lt;br&gt;\n  &lt;acl href=3D&quot;/orders/ mca-(.*)&quot; methods=\r\n=3D&quot;*&quot; /&gt;&lt;br&gt;\n&lt;/user&gt;&lt;br&gt;\n&lt;br&gt;\netc.&lt;br&gt;\n&lt;br&gt;\nmca&lt;br&gt;\n&lt;a rel=3D&quot;nof=\r\nollow&quot; target=3D&quot;_blank&quot; href=3D&quot;http://amundsen.com/blog/&quot;&gt;http://amundsen=\r\n. com/blog/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nOn Fri, Mar 5, 2010 at 22:44, Craig McClanahan &lt=\r\n;&lt;a rel=3D&quot;nofollow&quot; ymailto=3D&quot;mailto:craigmcc%40gmail.com&quot; target=3D&quot;_bla=\r\nnk&quot; href=3D&quot;/mc/compose?to=3Dcraigmcc%40gmail.com&quot;&gt;craigmcc@gmail. com&lt;/a&gt;&=\r\ngt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; On Fri, Mar 5, 2010 at 6:04 PM, mike =\r\namundsen &lt;&lt;a rel=3D&quot;nofollow&quot; ymailto=3D&quot;mailto:mamund%40yahoo.com&quot; targ=\r\net=3D&quot;_blank&quot; href=3D&quot;/mc/compose?to=3Dmamund%40yahoo.com&quot;&gt;mamund@yahoo. co=\r\nm&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; It sou=\r\nnds like you are asking about how to handle authorization (not&lt;br&gt;\n&gt;&gt;=\r\n authentication) . If so, that&#39;s not really a REST issue, but an&lt;br&gt;\n&gt;&g=\r\nt; implementation detail for HTTP apps.&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt; In my HTT=\r\nP applications I refer to a list of URIs (or regexp-based URI&lt;br&gt;\n&gt;&gt; =\r\ntemplates) plus a list of HTTP methods for each authenticated user; storage=\r\n&lt;br&gt;\n&gt;&gt; and representation can vary to taste. Consider a user-centere=\r\nd&lt;br&gt;\n&gt;&gt; representation of an application&#39; s access control list for =\r\na user:&lt;br&gt;\n&gt;&gt; &lt;user id=3D&quot;mamund&quot;&gt;&lt;br&gt;\n&gt;&gt; &nbsp;&nbsp;&l=\r\nt;acl href=3D&quot;/(.*)&quot; methods=3D&quot;GET, HEAD,OPTIONS&quot; /&gt; &lt;!-- default ac=\r\ncess --&gt;&lt;br&gt;\n&gt;&gt; &nbsp;&nbsp;&lt;acl href=3D&quot;/admin/ (.*)&quot; methods=\r\n=3D&quot;!&quot;/ &gt; &lt;!-- deny all methods --&gt;&lt;br&gt;\n&gt;&gt; &nbsp;&nbsp;&lt;a=\r\ncl href=3D&quot;/mamund/ (.*)&quot; methods=3D&quot;*&quot;/ &gt; &lt;!-- allow all methods --&=\r\ngt;&lt;br&gt;\n&gt;&gt; &lt;/user&gt;&lt;br&gt;\n&gt;&gt; All that is left is to compare =\r\nthe incoming request&#39;s METHOD + URI against&lt;br&gt;\n&gt;&gt; the above list. An=\r\ny access&nbsp;failures result in a &quot;403 Forbidden&quot; response.&lt;br&gt;\n&gt;&lt;br&gt;\n&=\r\ngt; This approach works if a URL template is either valid or not for a&lt;br&gt;\n=\r\n&gt; particular user, but that doesn&#39;t cover Kevin&#39;s use case where&lt;br&gt;\n&gt=\r\n; &quot;/orders/{id} &quot; is valid for both of us, but we should not be able to see=\r\n&lt;br&gt;\n&gt; each other&#39;s orders.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; As you mentioned, this is =\r\nnot a REST issue at all, because exactly the same&lt;br&gt;\n&gt; scenario applies=\r\n to a traditional webapp where a crafty user might try to&lt;br&gt;\n&gt; hand mod=\r\nify the URL that displays an order&#39;s content, plugging in someone&lt;br&gt;\n&gt; =\r\nelse&#39;s orderid to see if the system will let him see it.&nbsp; A properly&lt;b=\r\nr&gt;\n&gt; designed webapp should not; neither should a web service.&lt;br&gt;\n&gt;&lt;=\r\nbr&gt;\n&gt; There&#39;s lots of ways to implement this in the back end.&nbsp; At J=\r\nive, for&lt;br&gt;\n&gt; example, we have a low level DAO that handles the databas=\r\ne calls with no&lt;br&gt;\n&gt; authorization (could be JPA or Hibernate or whatev=\r\ner), and a higher level&lt;br&gt;\n&gt; &quot;manager&quot; that checks whether the authenti=\r\ncated user has access to the the&lt;br&gt;\n&gt; requested data.&nbsp; This is wha=\r\nt all of the other business logic in the&lt;br&gt;\n&gt; application calls -- the =\r\nDAO is *only* used by the corresponding manager.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; The rule=\r\ns for determining&nbsp;authoriz ed access&nbsp;are necessarily domain speci=\r\nfic,&lt;br&gt;\n&gt; but for the use case being described it&#39;s pretty simple -- if=\r\n the&lt;br&gt;\n&gt; authenticated user owns the requested order, the data should =\r\nbe returned;&lt;br&gt;\n&gt; otherwise it should not.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; And you&nb=\r\nsp;should use exactly the same logic behind a REST service and a&lt;br&gt;\n&gt; c=\r\norresponding webapp that supports HTML based access to the same data.&lt;br&gt;\n&=\r\ngt;&lt;br&gt;\n&gt; Craig&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; PS:&nbsp; Kevin, if you&#39;re really will=\r\ning to give me your security token and your&lt;br&gt;\n&gt; identity, as well as t=\r\nhe URL for your order, give me a second to set up a&lt;br&gt;\n&gt; little HTML fo=\r\nrm so you can give me your banking login credentials too :-).&lt;br&gt;\n&gt;&lt;br&gt;\n=\r\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n\n\n \n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;\n\n  =\r\n    \r\n--0-568618117-1267858953=:51977--\r\n\n"}}