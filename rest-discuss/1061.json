{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"WAFV5LS7zv9uBfPlkz-pgLN6skkLa4t2vV0ONtLGJ7U4g9vBQw2opbUgBfBKnTZNViZvdE9JvG3SC5FGUzowP8TEdTojGOoAICKYtzQQWw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RE: REST by example?","postDate":"1019194277","msgId":1061,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FMjB6OFV0NjVCVkVwVlJxT2QwMDAwNTE2ZUBob3RtYWlsLmNvbT4=","referencesHeader":"PDIwMDIwNDE4MDc0MTE0LlVLQk4yOTAxLm10YTEtcm1lLnh0cmEuY28ubnpAdGhlcmU+"},"prevInTopic":1056,"nextInTopic":1062,"prevInTime":1060,"nextInTime":1062,"topicId":1041,"numMessagesInTopic":11,"msgSnippet":"... From: Holden Glova  ... commonly ... The URLs should be objects that support the generic methods of get, put, post, and delete rather","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_1); 19 Apr 2002 05:31:10 -0000\r\nReceived: (qmail 15105 invoked from network); 19 Apr 2002 05:29:17 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m6.grp.scd.yahoo.com with QMQP; 19 Apr 2002 05:29:17 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.124)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 Apr 2002 05:29:17 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 18 Apr 2002 22:29:17 -0700\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;Holden Glova&quot; &lt;dsafari@...&gt;\r\nReferences: &lt;20020418074114.UKBN2901.mta1-rme.xtra.co.nz@there&gt;\r\nSubject: Re: [rest-discuss] RE: REST by example?\r\nDate: Thu, 18 Apr 2002 22:31:17 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE20z8Ut65BVEpVRqOd0000516e@...&gt;\r\nX-OriginalArrivalTime: 19 Apr 2002 05:29:17.0369 (UTC) FILETIME=[2650C290:01C1E763]\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n----- Original Message -----\nFrom: &quot;Holden Glova&quot; &lt;dsafari@...&gt;\n\n&gt;\n&gt; I would do something like employee.create, or update etc...This is\ncommonly\n&gt; termed as the CRUD approach. In REST would this be something like the\n&gt; following?\n&gt;\n&gt; http://somehost.com/employee/create?id=12345\n&gt; http://somehost.com/employee/update?id=12345\n&gt;\n&gt; Then on the server side there would be a create, update method on the\n&gt; employee that takes an id parameter?\n\nThe URLs should be objects that support the generic methods of get, put,\npost, and delete rather than urls with the methods themselves (no matter how\ntempting it may be, and I&#39;m just as guilty of ignoring that as anyone.).\nThe &#39;post&#39; operations means &#39;modify&#39; and it could be implemented to\nadd/subtract/extend/whatever. It can also optionally return the ID of a\nnewly created resource.\n\nIn HTTP there are similar but different operations for CRUD type of\nfunctionality.\nTwo are easy, GET=Read and DELETE=Delete. With HTTP you have two choices to\ncreate new data, POST and PUT, depending on who knows the desired ID, as\nwell as how you want to deal with safely repeatable operations\n(idempotency).\nYou use PUT when the client knows the desired ID and POST when the server\nwill generate the ID. So in your example, you only need to use one HTTP\nmethod (since the client is providing the ID of the new employee)\nPUT http://somehost.com/employee/12345/\n\nIn a database if you INSERT with a duplicate key, it fails. If you UPDATE a\nrecord that doesn&#39;t exist it fails.\nWith PUT the record is created if it doesn&#39;t exist or updated if it does -\nan &#39;upsert&#39;.\nWith POST a record is created and the key is returned - and wacky things\nhappen if you call it twice...\n\nCRUD (create, read, update, delete) is a framing of REST over relational\ndatabases (or vice-versa...)\nREST has the attitude of &#39;lots of nouns, few verbs&#39;.\nDatabases follow this very succesfully. Although we always talk about\nGET/PUT/POST/DELETE, those are just one example as applied by the HTTP. It\nis useful to compare the two (and others.. I should start a page on the\nWiki...) and consider issues like:\n - are the operations safely repeatable\n - who controls the ID (primary key, etc)\n - can you create an empty resource and fill it in later\n\n\n\n\n\n"}}