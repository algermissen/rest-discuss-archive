{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":498432483,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;jan.algermissen@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"jhw8scx-iX5HLs6EO8HOkAC17k9gQJ4yCkGH7gzL0d83t0o0LPY56ofwJCerxMbhTC48BNdkynj_6er7GUW73-xtlanccNtjv4GOHdcbWxFUZMk","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] Rails 3.2 and PATCH","postDate":"1323948878","msgId":18018,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI2M0JCMzA3LTk3MDYtNENDRS04RDFDLTc3MjM4QTdBMjUxOUBub3Jkc2MuY29tPg==","inReplyToHeader":"PENBTnFpWkphRTFOeEJjVFJ6N04xRlo3NU1uWGRyaFBSTXY4eGN4QkxHN1JCU0VycC1UUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBQkwrWkI2Y1JpS1k4cD14MFpSPVUxempwUk1kQkI1RGRRdlFoV1Foem1YbUQzVW1FZ0BtYWlsLmdtYWlsLmNvbT4gPENBTnFpWkpZTWhDPVh3QmVRaCtyUXpHUHppUDkyeDBUTHh6Z1RHbi1DZFNScDFiPUhtQUBtYWlsLmdtYWlsLmNvbT4gPDFGNjJDRTVBLTk0NEYtNDk1OC1BNjE2LTI2ODA1MzREQ0M2MEBub3Jkc2MuY29tPiA8Q0FOcWlaSmJTZGN4ZkVuaHktUkdqQ3h2dFFfQ2cwZG05aGd0RXdFU21veU9NWG5HZDFnQG1haWwuZ21haWwuY29tPiA8OENFMTM4QjktQTlERS00OTRELUJEOTctOEQ3NkEyRDA2MzcyQG5vcmRzYy5jb20+IDxDQU5xaVpKYUUxTnhCY1RSejdOMUZaNzVNblhkcmhQUk12OHhjeEJMRzdSQlNFcnAtVFFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":18017,"nextInTopic":18019,"prevInTime":18017,"nextInTime":18019,"topicId":18011,"numMessagesInTopic":86,"msgSnippet":"... When a client (or intermediary, for that matter) re-does a PUT N-times (e.g. because it did not receive any response the first N-1 times due to network","rawEmail":"Return-Path: &lt;jan.algermissen@...&gt;\r\nX-Sender: jan.algermissen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 18293 invoked from network); 15 Dec 2011 11:34:42 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m14.grp.sp2.yahoo.com with QMQP; 15 Dec 2011 11:34:42 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.17.10)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Dec 2011 11:34:42 -0000\r\nX-Received: from [10.90.129.94] ([87.253.171.201])\n\tby mrelayeu.kundenserver.de (node=mreu1) with ESMTP (Nemesis)\n\tid 0MYrHb-1RFNJk1Bsx-00VBpv; Thu, 15 Dec 2011 12:34:39 +0100\r\nMime-Version: 1.0 (Apple Message framework v1084)\r\nContent-Type: text/plain; charset=us-ascii\r\nIn-Reply-To: &lt;CANqiZJaE1NxBcTRz7N1FZ75MnXdrhPRMv8xcxBLG7RBSErp-TQ@...&gt;\r\nDate: Thu, 15 Dec 2011 12:34:38 +0100\r\nCc: Steve Klabnik &lt;steve@...&gt;,\n Darrel Miller &lt;darrel.miller@...&gt;,\n rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;B63BB307-9706-4CCE-8D1C-77238A7A2519@...&gt;\r\nReferences: &lt;CABL+ZB6cRiKY8p=x0ZR=U1zjpRMdBB5DdQvQhWQhzmXmD3UmEg@...&gt; &lt;CANqiZJYMhC=XwBeQh+rQzGPziP92x0TLxzgTGn-CdSRp1b=HmA@...&gt; &lt;1F62CE5A-944F-4958-A616-2680534DCC60@...&gt; &lt;CANqiZJbSdcxfEnhy-RGjCxvtQ_Cg0dm9hgtEwESmoyOMXnGd1g@...&gt; &lt;8CE138B9-A9DE-494D-BD97-8D76A2D06372@...&gt; &lt;CANqiZJaE1NxBcTRz7N1FZ75MnXdrhPRMv8xcxBLG7RBSErp-TQ@...&gt;\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nX-Mailer: Apple Mail (2.1084)\r\nX-Provags-ID: V02:K0:BRRw9GZUy+trqH8aF5GDLh0pOKcmG6xbuC0363d5rH4\n DRhUHzI+eMXUDpd8RG6/fLfSx73BGs/9y8Kk9XdVbtWUTJw0Gi\n goxFBm+p+I16vK/Qs3q7csAiu2DGYobwoE0LnGd92UpalB/Obb\n +LPui7W5DYmsUu6HYEaarWR28D7PHHtXzCExnVfYQY7AU4F+RP\n iYFWsktG531A4JG1KO+oqaOzZNAD3cnXLwAA5YsdT7fX8KhlHY\n yDsfWJuKoWbq9ysYBpoVhL+bSFs+mGTYxSMPmGthG1XFyj+JuT\n x5H/+Nv5EHtErXrCJ0fWG871Y47J0v6I8yzlaoK2tW/tPIpaRl\n DLOvBo0JTJKaNvzKvRLV/SO88L+ifvnDrgfL9Tfir/2qcFBeM2\n X/upZviDa3kyg==\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nSubject: Re: [rest-discuss] Rails 3.2 and PATCH\r\nX-Yahoo-Group-Post: member; u=498432483; y=46ITmdn0zrrx7-H7d3yFDc2GuSjw1kSx-fNeueAKPoDoMqjA2tB_I0SQ\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Dec 15, 2011, at 11:54 AM, Mike Kelly wrote:\n\n&gt; What is it specifically=\r\n, in practice, that non-compliant\n&gt; implementations like Rails lose by &#39;doi=\r\nng it wrong&#39; and allowing\n&gt; partial PUTs?\n\nWhen a client (or intermediary, =\r\nfor that matter) re-does a PUT N-times (e.g. because it did not receive any=\r\n response the first N-1 times due to network problems) the result on the se=\r\nrver might not be what the client assumes it is, given the idempotent natur=\r\ne of PUT.\n\nA client that is aware of the server&#39;s tunneling-partial-update-=\r\nthrough-PUT semantics might not redo the PUT but any intermediary in betwee=\r\nn might (because they would not be aware of the out-of-band knowledge / jus=\r\nt like Google accelerator in the case of GET-to-delete-account).\n\nWhat is t=\r\nhe problem of just using POST for the partial update in the first place? Th=\r\nis is what POST is for.\n\nJan\n\n\n\n&gt; \n&gt; On Thu, Dec 15, 2011 at 10:36 AM, Jan =\r\nAlgermissen\n&gt; &lt;jan.algermissen@...&gt; wrote:\n&gt;&gt; \n&gt;&gt; On Dec 15, 2011, a=\r\nt 11:02 AM, Mike Kelly wrote:\n&gt;&gt; \n&gt;&gt;&gt; On Thu, Dec 15, 2011 at 9:14 AM, Jan =\r\nAlgermissen\n&gt;&gt;&gt; &lt;jan.algermissen@...&gt; wrote:\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; On Dec 15, 2=\r\n011, at 1:42 AM, Mike Kelly wrote:\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt;&gt; I created a question on Stac=\r\nk Overflow about this a while ago:\n&gt;&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt;&gt; http://stackoverflow.com/qu=\r\nestions/2364110/whats-the-justification-behind-disallowing-partial-put\n&gt;&gt;&gt;&gt;=\r\n&gt; \n&gt;&gt;&gt;&gt;&gt; I still don&#39;t really understand the benefit of not allowing PUT to=\r\n be\n&gt;&gt;&gt;&gt;&gt; partial,\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; So you are asking, why PUT was defined as ide=\r\nmpotent in the first place, yes?\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; I think the reason is sort of &quot;=\r\nbecause we can define it that way&quot;. There is POST, which has no visibility =\r\n(=3D=3DPOST is meaningless to an intermediary) and everything could just be=\r\n done with POST. But then, adding methods that *have* visibility adds some =\r\nserious capabilities to HTTP. E.g. GET&#39;s semantics allow for caching and it=\r\n is also very helpful that we know that GET is safe - we can call it any nu=\r\nmber of times.\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt; \n&gt;&gt;&gt; .. and PUTs &#39;complete replace&#39; semantics allo=\r\nw for.. ?\n&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; You could do updates with POST, but then, full updates =\r\nhave the inherent property of being idempotent so it makes sense to define =\r\na method for that, leveraging the idempotency to the protocol level. Same f=\r\nor DELETE. For example, no a cache can mark copies it has of a response as =\r\nstale upon a corresponding response to a PUT. PUT&#39;s idempotency is also a w=\r\nin over just using POST.\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; If the interactions you design match th=\r\ne semantics of PUT, use it (for its added visibility), if they do not match=\r\n, just use POST.\n&gt;&gt;&gt; \n&gt;&gt;&gt; Again.. the point of the question is to try and f=\r\nathom what the\n&gt;&gt;&gt; &#39;guaranteed completeness&#39; of PUT requests actually contr=\r\nibutes in\n&gt;&gt;&gt; terms of visibility on the web. i.e. what intermediary mechan=\r\nisms rely\n&gt;&gt;&gt; on the completeness of a PUT?\n&gt;&gt; \n&gt;&gt; Huh? No, it is the other=\r\n way round: *partial* updates cannot be guaranteed to be idempotent. It is =\r\nthe idempotency we want for the sake of greater visibility (compared to POS=\r\nT). And we can only specify idempotent update semantics if the updates are =\r\nreplaces.\n&gt;&gt; \n&gt;&gt; (As to why partial updates cannot be guaranteed to be idem=\r\npotent, see my answer in the mentioned SO question).\n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt; \n&gt;&gt;&gt; \n&gt;=\r\n&gt;&gt;&gt; Redefining PUT to mean &#39;partial update without idempotency&#39; is no win b=\r\necause  &#39;partial update without idempotency&#39; does not give an intermediary =\r\nany visibility. You could just use POST in the first place.\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt; Does=\r\n that help?\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt; \n&gt;&gt;&gt; No it doesn&#39;t. POST is a non-idempotent action; =\r\nusing it for an\n&gt;&gt;&gt; _intentionally idempotent partial update_\n&gt;&gt; \n&gt;&gt; See - =\r\nthis is a contradiction. How would you prevent people to define media types=\r\n that lead to non-idempotency in partial updates? Remember that the method =\r\nsemantics must be orthogonal to the media type semantics.\n&gt;&gt; \n&gt;&gt; Itempotent=\r\n partial updates depend on the specific media type used and hence you canno=\r\nt specify a method that alone has these idempotent partial update semantics=\r\n.\n&gt;&gt; \n&gt;&gt; (This is also the reason why PATH cannot be idempotent, never).\n&gt;&gt;=\r\n \n&gt;&gt; Jan\n&gt;&gt; \n&gt;&gt;&gt; complicates the interaction\n&gt;&gt;&gt; from the client&#39;s perspect=\r\nive - what if the request fails?\n&gt;&gt;&gt; \n&gt;&gt;&gt; \n&gt;&gt;&gt; Maybe a better way of approa=\r\nching this might be for someone to\n&gt;&gt;&gt; demonstrate what supposed &quot;non-compl=\r\niant&quot; implementations that allow\n&gt;&gt;&gt; partial PUT (e.g. Rails) lose as a res=\r\nult of not following the suposed\n&gt;&gt;&gt; &quot;worthwhile&quot; no-partials-allowed seman=\r\ntics of PUT?\n&gt;&gt;&gt; \n&gt;&gt;&gt; Cheers,\n&gt;&gt;&gt; Mike\n&gt;&gt; \n\n\n"}}