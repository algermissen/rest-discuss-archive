{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":147780944,"authorName":"A. Pagaltzis","from":"&quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;","profile":"a22pag","replyTo":"SENDER","senderId":"dlY8hmSD9VSfop2UfQe1Me03MahXrJN-7rsxMKlSXVp0xsqf_iNhCylWkQJnyw8bdFQmilqQ_GmDlq6XqkYbmd8q6N8bjamU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: WADL pushback","postDate":"1184236926","msgId":9433,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDcwNzEyMTA0MjA1LkdNMTI3NzdAa2xhbmdyYXVtPg==","inReplyToHeader":"PDQ2OTVFRURELjcwMDA2MDdAbWV0YWxhYi51bmMuZWR1Pg==","referencesHeader":"PGY0ZmFlNys3aWpzQGVHcm91cHMuY29tPiA8NDY2QkU3Q0MuMTA4MDQwMEBtZXRhbGFiLnVuYy5lZHU+IDxjODIwNDU0MzA3MDYxMDE3MjRuNmY5YjVmZDh4OWVmNzUwZjU2YWY5YmQyMEBtYWlsLmdtYWlsLmNvbT4gPDQ2N0JCOTIwLjgwNjA4MDdAbWV0YWxhYi51bmMuZWR1PiA8MjAwNzA3MDYyMDUwNDguR0ExMjc3N0BrbGFuZ3JhdW0+IDw0Njk1NTI0Qi4zMDMwMDA3QG1ldGFsYWIudW5jLmVkdT4gPDY4ZmJhNWM1MDcwNzExMTUxMmtmNzcwYjQ2bDYyMDcwMTNmOTFlZGQ0NmVAbWFpbC5nbWFpbC5jb20+IDw0Njk1RUVERC43MDAwNjA3QG1ldGFsYWIudW5jLmVkdT4="},"prevInTopic":9432,"nextInTopic":9434,"prevInTime":9432,"nextInTime":9434,"topicId":8794,"numMessagesInTopic":108,"msgSnippet":"... The problem with that is the mindboggling amount of indirection you have introduced. You have an element containing whitespace text nodes and elements, and","rawEmail":"Return-Path: &lt;pagaltzis@...&gt;\r\nX-Sender: pagaltzis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67069 invoked from network); 12 Jul 2007 11:02:21 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m38.grp.scd.yahoo.com with QMQP; 12 Jul 2007 11:02:21 -0000\r\nReceived: from unknown (HELO mail.gmx.net) (213.165.64.20)\n  by mta7.grp.scd.yahoo.com with SMTP; 12 Jul 2007 11:02:21 -0000\r\nReceived: (qmail invoked by alias); 12 Jul 2007 10:42:09 -0000\r\nReceived: from static-87-79-236-202.netcologne.de (EHLO klangraum) [87.79.236.202]\n  by mail.gmx.net (mp020) with SMTP; 12 Jul 2007 12:42:09 +0200\r\nX-Authenticated: #163624\r\nX-Provags-ID: V01U2FsdGVkX18dVzFlFMgd67CJ5AIHGGT80VUp7TgTarqSBjLZ9P\n\tc/Wu2Y+E5TSvdX\r\nDate: Thu, 12 Jul 2007 12:42:06 +0200\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;20070712104205.GM12777@klangraum&gt;\r\nMail-Followup-To: rest-discuss@yahoogroups.com\r\nReferences: &lt;f4fae7+7ijs@...&gt; &lt;466BE7CC.1080400@...&gt; &lt;c82045430706101724n6f9b5fd8x9ef750f56af9bd20@...&gt; &lt;467BB920.8060807@...&gt; &lt;20070706205048.GA12777@klangraum&gt; &lt;4695524B.3030007@...&gt; &lt;68fba5c50707111512kf770b46l6207013f91edd46e@...&gt; &lt;4695EEDD.7000607@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 8bit\r\nIn-Reply-To: &lt;4695EEDD.7000607@...&gt;\r\nUser-Agent: Mutt/1.4.2.1i\r\nX-Y-GMX-Trusted: 0\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;A. Pagaltzis&quot; &lt;pagaltzis@...&gt;\r\nSubject: Re: WADL pushback\r\nX-Yahoo-Group-Post: member; u=147780944; y=8r4uyh7Y5VY4arGKDrq-Ex_PtQO12hitsVTV2R-4FbCh\r\nX-Yahoo-Profile: a22pag\r\n\r\n* Elliotte Harold &lt;elharo@...&gt; [2007-07-12 11:10]:\n&gt; Robert Sayre wrote:\n&gt; &gt; XML is an incredibly crappy way to write hashtables and\n&gt; &gt; arrays. JSON is good at that. Lots of people want a way to\n&gt; &gt; pass hashtables and arrays with unicode keys and values, and\n&gt; &gt; be able to squeeze unicode into ascii (an undervalued ability\n&gt; &gt; of both JSON and XML). \n&gt; \n&gt; Hahstables and arrays are both easy:\n&gt; \n&gt; &lt;hashtable&gt;\n&gt;    &lt;entry&gt;\n&gt;      &lt;key&gt;foo&lt;/key&gt;\n&gt;      &lt;value&gt;bar&lt;/value&gt;\n&gt;    &lt;entry&gt;\n&gt; &lt;/hashtable&gt;\n\nThe problem with that is the mindboggling amount of indirection\nyou have introduced. You have an element containing whitespace\ntext nodes and elements, and each subelement in turn contains\nwhitespace text nodes and two elements, each of which contains\na text node.\n\nBy comparison:\n\n    { &#39;foo&#39;: &#39;bar&#39; }\n\nThat’s a hash containing a key with a string value.\n\nIt’s called the XML Infoset.\n\nAnd on top of that you have lots of people using a wide variety\nof markup layouts to express a hash table. There’s only one\nreasonable way to write a hash table in JSON and everyone who is\nreasonable uses that.\n\nAnother issue is that the structure you chose does not enforce\nuniqueness of hash keys at the parser level, which the JSON\nequivalent does. If you wanted to do that with XML, you would\nhave to express the keys as attributes with arbitrary names on a\nsingle element. But attribute values can only be text nodes, so\nyou need further complication to make it work for arbitrarily\nnested structures. Off the top of my head this leads to a design\nvaguely like this:\n\n    &lt;hashtable&gt;\n        &lt;keys foo=&quot;&quot; baz=&quot;&quot;/&gt;\n        &lt;value for=&quot;foo&quot;&gt;bar&lt;/value&gt;\n        &lt;value for=&quot;baz&quot;&gt;quux&lt;/value&gt;\n    &lt;/hashtable&gt;\n\nIf that’s not horrible XML, I dunno what is.\n\nAnd it’s harder to validate than your vocabulary and easier to\nmake mistakes with; both due to co-constraints.\n\nAnd the Infoset for that is STILL a lot more convoluted than the\ndata model of a JSON hash table.\n\nThese things aren’t matters of opinion; the XML Infoset is\nobjectively far more complicated than the JSON data model and\ndoes not admit direct mapping of data structures without a\nvocabulary and a bunch of local conventions that have various\ntrade-offs depending on how you choose them.\n\n(Eg. maybe you’d prefer to omit the `keys` element and put the\nattributes on the `hashtable` element. Maybe for simple values\nyou’d prefer to put them right in the attribute, and use the\nreference only when the value is compound. Maybe you’d pick the\ndesign you suggested. Someone else would do something else\ncompletely.)\n\nAs far as I’m concerned, you can reasonably argue about the value\nof the problem domain that JSON maps out, and you can reasonably\nargue about whether the things people use JSON for are broader\nthan that problem domain and more amenable to XML.\n\nBut you cannot straight-facedly argue that the Infoset maps\nbetter or even just as well to JSON’s domain as JSON. Not by\na very long stretch.\n\nRegards,\n-- \nAristotle Pagaltzis // &lt;http://plasmasturm.org/&gt;\n\n"}}