{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"FUha7VoHlMfW4Z1KJUsa6e_9zAIz6Mw03nwJzjFCQxZhvY8BaFnFdl1kRRg1Vg1Q-c3eOs1IG0IXvo3mRDdkkbvShvRfXg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1012006637","msgId":329,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTFGRUVELkNDQkZCMUE0QHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI1MTkyMTQ3MC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":328,"nextInTopic":330,"prevInTime":328,"nextInTime":330,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... You re telling me that the SMTP spec gives SMTP implementations permission to discard messages according to their own discretion? ... If SMTP was reliable","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 26 Jan 2002 00:58:16 -0000\r\nReceived: (qmail 31948 invoked from network); 26 Jan 2002 00:58:16 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m10.grp.snv.yahoo.com with QMQP; 26 Jan 2002 00:58:16 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.snv.yahoo.com with SMTP; 26 Jan 2002 00:58:16 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0Q0wD127806\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 25 Jan 2002 16:58:13 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0Q0wCe21634\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 25 Jan 2002 16:58:12 -0800\r\nMessage-ID: &lt;3C51FEED.CCBFB1A4@...&gt;\r\nDate: Fri, 25 Jan 2002 16:57:17 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nReferences: &lt;Pine.WNT.4.43.0201251921470.1400-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; No.  The spec leaves it up to the recieving\n&gt; application.  \n\nYou&#39;re telling me that the SMTP spec gives SMTP implementations\npermission to discard messages according to their own discretion?\n\n&gt; ... If you want to claim this is a new\n&gt; protocol then it is a one line protocol:\n&gt; \n&gt;         only process any given message-id once.\n&gt; \n&gt; Also, in good implementations duplicate messages\n&gt; should be very rare.  See RFC1047.\n\nIf SMTP was reliable RFC1047 wouldn&#39;t need to exist. Can we quit arguing\nabout it? SMTP is not reliable! It has some error reporting capabilities\nfor use in relaying circumstances. That has nothing to do with my\n&quot;reliable HTTP&quot; paper.\n\n&gt;...\n&gt; No.  My point is that you can &quot;link&quot; to a post\n&gt; using hidden fields.  So I don&#39;t see why this is\n&gt; so important.\n\nCan I make an RDF assertion about it?\nCan I make an XLink to it?\nCan I bookmark it in a browser?\nCan I download it in an XSLT file?\nCan I dictate it to my mom over the phone?\nCan I put it on the side of a bus?\nCan I make a Windows &quot;Internet Shortcut&quot; to it?\nCan I use it as input to wget?\nCan I link to it from inside a PDF or Powerpoint?\nCan I report it in an HTTP header?\nCan I apply an ACL to it?\n\n&gt;...\n&gt; So how do you put the terrorist images in the\n&gt; query string?  Remember you can&#39;t pass content\n&gt; type.\n\nYou would use POST.\n\n&gt; ...\n&gt; In contrast, the RPC version represents only a\n&gt; single request and does not force the server into\n&gt; deciding when it is ok to garbage collect the\n&gt; images.\n\nAs I&#39;ve said a dozen times, you could use POST. It would not be RPC\nbecause you aren&#39;t setting up a private addressing scheme, you aren&#39;t\ntelling the target what to do with a method name. Using POST for\nnon-idempotent things is not a big deal. It is *usually* bad style\nbecause it is *usually* a way around giving resources addresses. It is\nalso not cachable. But given the option of doing it in a straightforward\nway using POST and embedding it in a silly RPC with a method name, it\nseems obvious that the method name is useless.\n\n Paul Prescod\n\n"}}