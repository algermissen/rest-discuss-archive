{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":109596655,"authorName":"Bediako George","from":"Bediako George &lt;bediakogeorge@...&gt;","profile":"bediakogeorge","replyTo":"SENDER","senderId":"MEAGZR058CtLdFZVyv50JSzdD12jlHKYRJTsVZk0Fc0GaRg48SeaiZFj2hDAk6x78JKWpP7Buw9iv6LIKjbUiddhsB5kw8aTn2gMEatnRQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Application state","postDate":"1254653991","msgId":13666,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNmI3MjU5MDkxMDA0MDM1OXM2MzBiNDU0YmcyNmM4NThlNDQ2MzUzOTc2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGhhN3RkOCszMW1qQGVHcm91cHMuY29tPg==","referencesHeader":"PDY1REJBMzNELTUyOEEtNDBFQS1CNkM5LTg2N0U0NTg5NkZFMEBnbWFpbC5jb20+CSA8aGE3dGQ4KzMxbWpAZUdyb3Vwcy5jb20+"},"prevInTopic":13663,"nextInTopic":13667,"prevInTime":13665,"nextInTime":13667,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Thank you for this description.  This has confirmed my initial understanding of the difference between application and resource state. Regards, Bediako ... -- ","rawEmail":"Return-Path: &lt;bediako.george@...&gt;\r\nX-Sender: bediako.george@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8605 invoked from network); 4 Oct 2009 10:59:52 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.re1.yahoo.com with QMQP; 4 Oct 2009 10:59:52 -0000\r\nX-Received: from unknown (HELO mail-yx0-f192.google.com) (209.85.210.192)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Oct 2009 10:59:52 -0000\r\nX-Received: by yxe30 with SMTP id 30so3781509yxe.29\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 04 Oct 2009 03:59:52 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.90.217.11 with SMTP id p11mr2564008agg.82.1254653991880; Sun, \n\t04 Oct 2009 03:59:51 -0700 (PDT)\r\nIn-Reply-To: &lt;ha7td8+31mj@...&gt;\r\nReferences: &lt;65DBA33D-528A-40EA-B6C9-867E45896FE0@...&gt;\n\t &lt;ha7td8+31mj@...&gt;\r\nDate: Sun, 4 Oct 2009 03:59:51 -0700\r\nX-Google-Sender-Auth: f0bc2ce4b947a5c4\r\nMessage-ID: &lt;106b72590910040359s630b454bg26c858e446353976@...&gt;\r\nTo: Ian &lt;iansrobinson@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016368324b2808f90047519e591\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bediako George &lt;bediakogeorge@...&gt;\r\nSubject: Re: [rest-discuss] Re: Application state\r\nX-Yahoo-Group-Post: member; u=109596655; y=3OIZJvTkyWro2FAFzVf-ZIAQxiM3mGjjfXZ4LUjSEHbGVCfGFZoS0w\r\nX-Yahoo-Profile: bediakogeorge\r\n\r\n\r\n--0016368324b2808f90047519e591\r\nContent-Type: text/plain; charset=UTF-8\r\n\r\nThank you for this description.  This has confirmed my initial understanding\nof the difference between application and resource state.\n\nRegards,\n\nBediako\n\nOn Sat, Oct 3, 2009 at 9:16 AM, Ian &lt;iansrobinson@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hi Christian\n&gt;\n&gt; The state of an order - whether it has zero line items, or five, is\n&gt; resource state, not application state. The state of the order as held in the\n&gt; http session in your example is resource state, not application state.\n&gt;\n&gt; A simple - perhaps overly simple - ordering protocol might be something\n&gt; like: new order created -&gt; adding line items -&gt; order completed -&gt; payment\n&gt; received -&gt; order dispatched.\n&gt;\n&gt; In the observable interactions between client and server, this protocol is\n&gt; never visible &quot;as such&quot;: it can only be viewed through the lens of resource\n&gt; state.\n&gt;\n&gt; Over the course of a series of interactions, the &quot;application&quot; (the game\n&gt; being played out between the client and the server) will be in one or other\n&gt; of these states - as viewed from a &quot;God&#39;s eye&quot; point of view. Once the\n&gt; application state has progressed to &quot;order completed&quot;, for example, it&#39;s no\n&gt; longer possible to add manipulate resources so as to add new line items; it\n&gt; is, however, possible to manipulate resources such that the application\n&gt; state transitions to &quot;payment received&quot; (the client would do this by\n&gt; submitting a representation of a payment, perhaps).\n&gt;\n&gt; The client and the server cooperate to execute this protocol, but they do\n&gt; so by transferring representations of resource state, not representations of\n&gt; application state. Application state is never represented &quot;as such&quot;; rather,\n&gt; it&#39;s inferred by the client based on on current representations of resource\n&gt; state. If the application is in the &quot;order completed&quot; state, the\n&gt; representation of the order received by the client may very well include a\n&gt; link that has been annotated with the link relation value &quot;payment&quot;. This\n&gt; isn&#39;t a straightforward representation of application state, however: it&#39;s\n&gt; an &quot;invitation&quot; to the client to transfer a representation of a payment to\n&gt; this linked resource. As a side-effect of transferring this representation,\n&gt; the &quot;application&quot; may transition to &quot;payment received&quot;.\n&gt;\n&gt; What&#39;s important here is that the server is really only interested in\n&gt; maintaining resource state, which includes maintaining the integrity of the\n&gt; lifecycles of the resources under its control, and the invariants that hold\n&gt; between resources (if any). The server can&#39;t be sure the client will ever\n&gt; take that step of submitting a payment, so why bother holding onto\n&gt; application state? Application state is something that can be reconstructed\n&gt; &quot;after the fact&quot;, by a client, or omniscient observer, based on the\n&gt; disposition of the current set of resource representations.\n&gt;\n&gt; So the order representation is always a representation of resource state.\n&gt; Application state, that &quot;snapshot of the instance of execution of a\n&gt; protocol&quot;, can only be inferred or reconstructed from resource state.\n&gt;\n&gt; Hope this is of some help. Apologies if I&#39;ve confused more than clarified;\n&gt; double apologies if I&#39;m just talking plain nonsense.\n&gt;\n&gt; ian\n&gt;\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com &lt;rest-discuss%40yahoogroups.com&gt;,\n&gt; Kristian Nordal &lt;kristian.nordal@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Oct 2, 2009, at 10:55 PM, Ian wrote:\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; --- In rest-discuss@yahoogroups.com &lt;rest-discuss%40yahoogroups.com&gt;,\n&gt; Mark Baker &lt;distobj@&gt; wrote:\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; On Fri, Oct 2, 2009 at 4:56 AM, Kristian Nordal\n&gt; &gt; &gt;&gt; &lt;kristian.nordal@&gt; wrote:\n&gt; &gt; &gt;&gt;&gt; I&#39;m also struggling with the difference between application state\n&gt; &gt; &gt;&gt;&gt; and\n&gt; &gt; &gt;&gt;&gt; server state (which I assume is the same as &quot;resource state&quot;). Can\n&gt; &gt; &gt;&gt;&gt; someone point me to a good definition of &quot;application state&quot;?\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; It&#39;s literally the *state* of the *application*. If you&#39;re looking\n&gt; &gt; &gt;&gt; at\n&gt; &gt; &gt;&gt; your bank balance, that&#39;s a different state than if you were\n&gt; &gt; &gt;&gt; preparing\n&gt; &gt; &gt;&gt; to submit a bill payment, and once you&#39;ve submitted the payment,\n&gt; &gt; &gt;&gt; you&#39;re in yet another state in the application state machine.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Mark.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Just to add to Mark&#39;s definition, and put it in the context of\n&gt; &gt; &gt; &quot;application&quot; and &quot;application protocol&quot;: if we think of an\n&gt; &gt; &gt; application as being computer behavior that achieves a particular\n&gt; &gt; &gt; goal, we can describe an application protocol as the specification\n&gt; &gt; &gt; of the legitimate interactions necessary to realize that behavior,\n&gt; &gt; &gt; and application state as a snapshot of the instance of execution of\n&gt; &gt; &gt; an application protocol.\n&gt; &gt;\n&gt; &gt; Thanks for the definitions. I&#39;m still a bit confused though, so I&#39;m\n&gt; &gt; going to try to use an example:\n&gt; &gt;\n&gt; &gt; Let&#39;s say we have an client/ua that is filling out an order (order +\n&gt; &gt; line items). In a traditional web application, the order would be in\n&gt; &gt; the http session, and we would add/remove line items to that order,\n&gt; &gt; and finally place the order. In that case I clearly see that we are\n&gt; &gt; talking about application state that is placed on the server. The\n&gt; &gt; server keeps track of it, and it&#39;s literally the state of the client/\n&gt; &gt; application.\n&gt; &gt;\n&gt; &gt; But if we were to store and address the order like any other resource,\n&gt; &gt; would that change the nature of the state? It would simply be another\n&gt; &gt; way of storing the same state, but nevertheless it would be\n&gt; &gt; &quot;resources&quot; with the same properties induced by the stateless\n&gt; &gt; constraint (visibility, reliability, and salability) - given that they\n&gt; &gt; were stored in the a way that make that possible. To me, this looks\n&gt; &gt; like exactly the same kind of state (application state), simply stored/\n&gt; &gt; modeled differently. But in that case I don&#39;t see how or if it\n&gt; &gt; violates the stateless constraint.\n&gt; &gt;\n&gt; &gt; Would you say that the order in this example is always a &quot;snapshot of\n&gt; &gt; the instance execution of an application protocol&quot;, and that it will\n&gt; &gt; always be application state - no matter how it&#39;s modeled? And by\n&gt; &gt; placing it on the server it would be in violation of the REST\n&gt; &gt; principles, even though the stateless constraint is dealt with?\n&gt; &gt;\n&gt; &gt; --\n&gt; &gt; Thanks,\n&gt; &gt; Kristian\n&gt; &gt;\n&gt;\n&gt;  \n&gt;\n\n\n\n-- \nBediako George\nPartner - Lucid Technics, LLC\nThink Clearly, Think Lucid\nwww.lucidtechnics.com\n(p) 202.683.7486 (f) 703.563.6279\n\r\n--0016368324b2808f90047519e591\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThank you for this description.=C2=A0 This has confirmed my initial underst=\r\nanding of the difference between application and resource state.&lt;br&gt;&lt;br&gt;Reg=\r\nards,&lt;br&gt;&lt;br&gt;Bediako&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sat, Oct 3, 2009 =\r\nat 9:16 AM, Ian &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:iansrobinson@gmail.=\r\ncom&quot;&gt;iansrobinson@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;=\r\ngmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0p=\r\nt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-co=\r\nlor: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=C2=A0&lt;/span&gt;\n\n&lt;div style=3D&quot;width: 655px;=\r\n&quot;&gt;\n&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt; width: 470px; floa=\r\nt: left;&quot;&gt;\n\n    &lt;div&gt;\n                  &lt;p&gt;Hi Christian&lt;br&gt;\n&lt;br&gt;\nThe state =\r\nof an order - whether it has zero line items, or five, is resource state, n=\r\not application state. The state of the order as held in the http session in=\r\n your example is resource state, not application state.&lt;br&gt;\n&lt;br&gt;\nA simple -=\r\n perhaps overly simple - ordering protocol might be something like: new ord=\r\ner created -&gt; adding line items -&gt; order completed -&gt; payment rece=\r\nived -&gt; order dispatched. &lt;br&gt;\n&lt;br&gt;\nIn the observable interactions betwe=\r\nen client and server, this protocol is never visible &quot;as such&quot;: i=\r\nt can only be viewed through the lens of resource state.&lt;br&gt;\n&lt;br&gt;\nOver the =\r\ncourse of a series of interactions, the &quot;application&quot; (the game b=\r\neing played out between the client and the server) will be in one or other =\r\nof these states - as viewed from a &quot;God&#39;s eye&quot; point of view.=\r\n Once the application state has progressed to &quot;order completed&quot;, =\r\nfor example, it&#39;s no longer possible to add manipulate resources so as =\r\nto add new line items; it is, however, possible to manipulate resources suc=\r\nh that the application state transitions to &quot;payment received&quot; (t=\r\nhe client would do this by submitting a representation of a payment, perhap=\r\ns). &lt;br&gt;\n\n&lt;br&gt;\nThe client and the server cooperate to execute this protocol=\r\n, but they do so by transferring representations of resource state, not rep=\r\nresentations of application state. Application state is never represented &=\r\nquot;as such&quot;; rather, it&#39;s inferred by the client based on on cur=\r\nrent representations of resource state. If the application is in the &quot;=\r\norder completed&quot; state, the representation of the order received by th=\r\ne client may very well include a link that has been annotated with the link=\r\n relation value &quot;payment&quot;. This isn&#39;t a straightforward repre=\r\nsentation of application state, however: it&#39;s an &quot;invitation&quot;=\r\n to the client to transfer a representation of a payment to this linked res=\r\nource. As a side-effect of transferring this representation, the &quot;appl=\r\nication&quot; may transition to &quot;payment received&quot;.&lt;br&gt;\n\n&lt;br&gt;\nWha=\r\nt&#39;s important here is that the server is really only interested in main=\r\ntaining resource state, which includes maintaining the integrity of the lif=\r\necycles of the resources under its control, and the invariants that hold be=\r\ntween resources (if any). The server can&#39;t be sure the client will ever=\r\n take that step of submitting a payment, so why bother holding onto applica=\r\ntion state? Application state is something that can be reconstructed &quot;=\r\nafter the fact&quot;, by a client, or omniscient observer, based on the dis=\r\nposition of the current set of resource representations.&lt;br&gt;\n\n&lt;br&gt;\nSo the o=\r\nrder representation is always a representation of resource state. Applicati=\r\non state, that &quot;snapshot of the instance of execution of a protocol&qu=\r\not;, can only be inferred or reconstructed from resource state.&lt;br&gt;\n\n&lt;br&gt;\nH=\r\nope this is of some help. Apologies if I&#39;ve confused more than clarifie=\r\nd; double apologies if I&#39;m just talking plain nonsense.&lt;br&gt;\n&lt;br&gt;\nian&lt;/p=\r\n&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n--- In &lt;a href=3D&quot;mailto:rest-=\r\ndiscuss%40yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/=\r\na&gt;, Kristian Nordal &lt;kristian.nordal@...&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &lt;b=\r\nr&gt;\n&gt; On Oct 2, 2009, at 10:55 PM, Ian wrote:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &gt;&lt;br&gt;=\r\n\n&gt; &gt;&lt;br&gt;\n&gt; &gt; --- In &lt;a href=3D&quot;mailto:rest-discuss%40yahoogroup=\r\ns.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;, Mark Baker &lt;d=\r\nistobj@&gt; wrote:&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; On Fri, Oct 2, 2009 =\r\nat 4:56 AM, Kristian Nordal&lt;br&gt;\n&gt; &gt;&gt; &lt;kristian.nordal@&gt; wrot=\r\ne:&lt;br&gt;\n&gt; &gt;&gt;&gt; I&#39;m also struggling with the difference betwee=\r\nn application state  &lt;br&gt;\n&gt; &gt;&gt;&gt; and&lt;br&gt;\n&gt; &gt;&gt;&gt; serve=\r\nr state (which I assume is the same as &quot;resource state&quot;). Can&lt;br&gt;=\r\n\n&gt; &gt;&gt;&gt; someone point me to a good definition of &quot;applicati=\r\non state&quot;?&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; It&#39;s literally the =\r\n*state* of the *application*.  If you&#39;re looking  &lt;br&gt;\n&gt; &gt;&gt; at=\r\n&lt;br&gt;\n&gt; &gt;&gt; your bank balance, that&#39;s a different state than if =\r\nyou were  &lt;br&gt;\n&gt; &gt;&gt; preparing&lt;br&gt;\n&gt; &gt;&gt; to submit a bill p=\r\nayment, and once you&#39;ve submitted the payment,&lt;br&gt;\n&gt; &gt;&gt; you&#3=\r\n9;re in yet another state in the application state machine.&lt;br&gt;\n&gt; &gt;&g=\r\nt;&lt;br&gt;\n&gt; &gt;&gt; Mark.&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Ju=\r\nst to add to Mark&#39;s definition, and put it in the context of  &lt;br&gt;\n&gt;=\r\n &gt; &quot;application&quot; and &quot;application protocol&quot;: if we t=\r\nhink of an  &lt;br&gt;\n&gt; &gt; application as being computer behavior that achi=\r\neves a particular  &lt;br&gt;\n&gt; &gt; goal, we can describe an application prot=\r\nocol as the specification  &lt;br&gt;\n&gt; &gt; of the legitimate interactions ne=\r\ncessary to realize that behavior,  &lt;br&gt;\n&gt; &gt; and application state as =\r\na snapshot of the instance of execution of  &lt;br&gt;\n&gt; &gt; an application p=\r\nrotocol.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Thanks for the definitions. I&#39;m still a bit=\r\n confused though, so I&#39;m  &lt;br&gt;\n&gt; going to try to use an example:&lt;br&gt;=\r\n\n&gt; &lt;br&gt;\n&gt; Let&#39;s say we have an client/ua that is filling out an o=\r\nrder (order +  &lt;br&gt;\n&gt; line items). In a traditional web application, the=\r\n order would be in  &lt;br&gt;\n&gt; the http session, and we would add/remove lin=\r\ne items to that order,  &lt;br&gt;\n&gt; and finally place the order. In that case=\r\n I clearly see that we are  &lt;br&gt;\n&gt; talking about application state that =\r\nis placed on the server. The  &lt;br&gt;\n&gt; server keeps track of it, and it&#3=\r\n9;s literally the state of the client/ &lt;br&gt;\n&gt; application.&lt;br&gt;\n&gt; &lt;br&gt;=\r\n\n&gt; But if we were to store and address the order like any other resource=\r\n,  &lt;br&gt;\n&gt; would that change the nature of the state? It would simply be =\r\nanother  &lt;br&gt;\n&gt; way of storing the same state, but nevertheless it would=\r\n be  &lt;br&gt;\n&gt; &quot;resources&quot; with the same properties induced by th=\r\ne stateless  &lt;br&gt;\n&gt; constraint (visibility, reliability, and salability)=\r\n - given that they  &lt;br&gt;\n&gt; were stored in the a way that make that possi=\r\nble. To me, this looks  &lt;br&gt;\n&gt; like exactly the same kind of state (appl=\r\nication state), simply stored/ &lt;br&gt;\n&gt; modeled differently. But in that c=\r\nase I don&#39;t see how or if it  &lt;br&gt;\n&gt; violates the stateless constrai=\r\nnt.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Would you say that the order in this example is alwa=\r\nys a &quot;snapshot of  &lt;br&gt;\n&gt; the instance execution of an application =\r\nprotocol&quot;, and that it will  &lt;br&gt;\n&gt; always be application state - n=\r\no matter how it&#39;s modeled? And by  &lt;br&gt;\n&gt; placing it on the server i=\r\nt would be in violation of the REST  &lt;br&gt;\n&gt; principles, even though the =\r\nstateless constraint is dealt with?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; --&lt;br&gt;\n&gt; Thanks,&lt;=\r\nbr&gt;\n&gt; Kristian&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;\n \n\n    &lt;/div&gt;  \n\n    \n    =\r\n&lt;div width=3D&quot;1&quot; style=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n=\r\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;br&gt;-- &lt;br&gt;Bediak=\r\no George&lt;br&gt;Partner - Lucid Technics, LLC&lt;br&gt;Think Clearly, Think Lucid&lt;br&gt;=\r\n&lt;a href=3D&quot;http://www.lucidtechnics.com&quot;&gt;www.lucidtechnics.com&lt;/a&gt;&lt;br&gt;(p) 2=\r\n02.683.7486 (f) 703.563.6279&lt;br&gt;\n\n\r\n--0016368324b2808f90047519e591--\r\n\n"}}