{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"5ZFT5ZFnafRetEiUOweLxn-O4dcN3jNx79nll4m5spmyqhLW67Lpt7fKAwaCcO_iXc-64I1-xn5aoG5XhMR60_A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Different apps have different needs","postDate":"1012767634","msgId":634,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNUQ5QjkyLjczM0ZBRDg2QGp1bXAubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMjAzMTUwMTI4MC4xNTU2LTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":0,"nextInTopic":641,"prevInTime":633,"nextInTime":635,"topicId":634,"numMessagesInTopic":4,"msgSnippet":"... Okay, so here s the conclusion I m coming to --- all of the various options we ve been discussing are appropriate in different application contexts.  None","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 3 Feb 2002 20:23:28 -0000\r\nReceived: (qmail 88748 invoked from network); 3 Feb 2002 20:23:28 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m11.grp.snv.yahoo.com with QMQP; 3 Feb 2002 20:23:28 -0000\r\nReceived: from unknown (HELO blanco.clickfeed.com) (207.8.92.96)\n  by mta1.grp.snv.yahoo.com with SMTP; 3 Feb 2002 20:23:27 -0000\r\nReceived: from jump.net (cust-92-97.customer.jump.net [207.8.92.97])\n\tby blanco.clickfeed.com (8.10.0/8.10.0) with ESMTP id g13KNNK13942;\n\tSun, 3 Feb 2002 14:23:23 -0600\r\nMessage-ID: &lt;3C5D9B92.733FAD86@...&gt;\r\nDate: Sun, 03 Feb 2002 14:20:34 -0600\r\nX-Mailer: Mozilla 4.7 [en]C-CCK-MCD {Sony}  (Win98; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;shop2it@...&gt;\r\nCc: Lucas Gonze &lt;lucas@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: Different apps have different needs\r\nReferences: &lt;Pine.WNT.4.43.0202031501280.1556-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\n\n&quot;S. Alexander Jacobson&quot; wrote:\n\n&gt; At least with HTTP/XML, you get some bonus in\n&gt; deployability/flexibility.  With one shot\n&gt; notifications, you don&#39;t.  Worse, with One-shot,\n&gt; you need a new HTTP method!\n&gt;\n&gt; The semantics of GET Events are cleaner.  It\n&gt; is more deployable.  It is more scalable.  And, it\n&gt; is more consistent with the way the web already\n&gt; works.\n\nOkay, so here&#39;s the conclusion I&#39;m coming to --- all of the various options we&#39;ve been\ndiscussing are appropriate in different application contexts.  None of them is\nuniversal --- as Paul points out, viewing a chat room as a caching problem is probably\nnot the right answer, but OTOH presence is *very much* a caching problem.  For a chat\nroom, you most likely need a &quot;centralized&quot; resource that reifies the room and manages\nmux/demux/ordering of arriving messages.  For presence, a resource models a particular\nperson&#39;s status and cache invalidation is appropriate, update an optimization.  For\nIM, it&#39;s probably the case that a simple POST is appropriate.  (Rollover from IM to\nchat is then cleanly handled by a 3xx redirect in response to a POST, with a header\nindicating that a long-lived GET on the indicated resource should be established.)\nFor syndication, cache invalidation is the right option, and update via a pushed state\nrepresentation an important optimization.  For Web-based distributed storage, again\ncache invalidation is probably the right option.  For stock quote streams, long-lived\nGET is probably the right option.  Etc., etc., etc.\n\nLong-lived GET is appropriate in two contexts:  first, where the problem you&#39;re\nactually solving is the asymmetry of connectivity on the Web, and then long-lived GET\nonly solves half the problem, and that rather poorly.  Second, when the resource model\nof interest changes frequently and ordering of those updates is important.\n\nThe problem, though, is that (particularly in the second case) the mechanism for\nframing and delivering events over a long-running GET is (a) not specified by HTTP,\nreally --- there are no existing suitable mechanisms for passing *multiple* responses\nto a single request, though pipelining could potentially be abused somehow, and (b)\neven if there were, the problem seems very application-specific;  knowing what\nindividual update messages or events mean, etc. may not be generalizable.  To the\nextent that it is generalizable, KN or similar probably provides the right general\npattern.\n\nJust some thoughts...  mulling over a whole can of worms that I&#39;d been mostly ignoring\nfor the last few years... ;-)\n\njb\n\n\n\n\n\n"}}