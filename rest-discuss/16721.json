{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"lFFrFjEtj0qLom8BzOu5D6ydoC-b80qqkFvT0qoDGitzzbQOUF6CDvejEimg02S1ySE_6ziLGYu9Z76cbEAhGF-0g1pqXtYro2QPEE7FNA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] More media type questions","postDate":"1286342780","msgId":16721,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMDA1MjMyNjIwLmJhODU5YTI2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGltZUZ1Uk1Qdl9GTkZDUThHT0xUeEV4c05KVFVKY3VpVkQwOGJUX0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGltZUZ1Uk1Qdl9GTkZDUThHT0xUeEV4c05KVFVKY3VpVkQwOGJUX0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16720,"nextInTopic":16722,"prevInTime":16720,"nextInTime":16722,"topicId":16718,"numMessagesInTopic":6,"msgSnippet":"... This has already been discussed at length.  The entire security architecture of the Internet is based on media types.  Anything and everything called a","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1667 invoked from network); 6 Oct 2010 05:26:36 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 6 Oct 2010 05:26:36 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 6 Oct 2010 05:26:36 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 4D74D509E0;\n\tWed,  6 Oct 2010 01:26:35 -0400 (EDT)\r\nDate: Tue, 5 Oct 2010 23:26:20 -0600\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20101005232620.ba859a26.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTimeFuRMPv_FNFCQ8GOLTxExsNJTUJcuiVD08bT_@...&gt;\r\nReferences: &lt;AANLkTimeFuRMPv_FNFCQ8GOLTxExsNJTUJcuiVD08bT_@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] More media type questions\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nWill Hartung wrote:\n&gt; \n&gt; What are some examples of serendipitous reuse that the Web offers\n&gt; applications today?\n&gt; \n\nThis has already been discussed at length.  The entire security\narchitecture of the Internet is based on media types.  Anything and\neverything called a &quot;Web accelerator&quot; is based on media types.  DNS\naccelerators, like the one Google makes, are based on media types.  The\npoint is that you can&#39;t know; all you can do to allow intermediaries to\nparticipate in the communication as smart agents, rather than just as\nrouters, is to use the media types common to the deployed network\ninfrastructure.\n\n&gt;\n&gt; One, I guess, is Caching. It has been suggested that admins won&#39;t\n&gt; cache unfamiliar data types.\n&gt; \n\nOr block them altogether as attempts at tunneling.\n\n&gt;\n&gt; But what are some other examples? I heard a mention of link caching,\n&gt; or some such thing. What is that referring to? Is that premised on a\n&gt; proxy perhaps prefetching links in an HTML payload much like some\n&gt; browsers do today? Something of that nature?\n&gt; \n\nYes.  How can anything be prefetched if the agent doesn&#39;t know what a\nlink is?  How can the security considerations of the payload be known\nto anyone on the network unless it&#39;s been peer reviewed as part of the\npublic approval process for standards-tree media types?\n\n&gt;\n&gt; Are search engine search bots an example?\n&gt; \n\nYes, they know what &lt;a href&gt; means when the media type is text/html or\napplication/xhtml+xml.  They don&#39;t know what those URIs in your JSON\nsent as application/json mean, other than they&#39;re strings of text.\n\n&gt; \n&gt; On the one hand, these donation documents could be\n&gt; application/x-campaign-donation+xml, with a specification posted on\n&gt; the campaign website. But that&#39;s an unregistered media type.\n&gt; \n\nNo, it&#39;s simply not a media type.  The definition of media type is\nreserved for those things approved for inclusion in the IANA registry.\nThe proper prefix is &#39;x.&#39; not &#39;x-&#39;.  The &#39;+xml&#39; suffix is meaningless,\nonly media types approved as RFC 3023-compliant XML media types give\nthat suffix any meaning.  You&#39;re sending application/$.\n\n&gt;\n&gt; &lt;donation&gt;\n&gt;     &lt;name&gt;Bob Eubanks&lt;/name&gt;\n&gt;     &lt;date&gt;09/01/2010&lt;/date&gt;\n&gt;     &lt;amount&gt;25.00&lt;/amount&gt;\n&gt; &lt;/donation&gt;\n&gt; \n&gt; On the other hand, it could be simply text/html:\n&gt; \n&gt; &lt;html&gt;\n&gt; &lt;body&gt;\n&gt; &lt;dl&gt;\n&gt;     &lt;dt&gt;Name&lt;/dt&gt;&lt;dd&gt;Bob Eubanks&lt;/dd&gt;\n&gt;     &lt;dt&gt;Date&lt;/dt&gt;&lt;dd&gt;09/01/2010&lt;/dd&gt;\n&gt;     &lt;dt&gt;Amount&lt;/dt&gt;&lt;dd&gt;$25.00&lt;/dd&gt;\n&gt; &lt;/dt&gt;\n&gt; &lt;/body&gt;\n&gt; &lt;/html&gt;\n&gt; \n\nYou&#39;re comparing data types, not media types.  You need to understand\nthe vast difference between the two -- HTML tables (which is more\ncorrect for your data structure) have a thead-tfoot-tbody structure\nwhich allows for progressive rendering.  It&#39;s been extensively peer-\nreviewed and improved in the public arena over many years, for both\nforward and backward compatibility, extensibility, processing into a\nDOM such that it may have bindings for scripting and styling.  The\nsecurity considerations are a matter of public record, there are\nbindings such that the user agent&#39;s accessibility API may be scripted,\nthere&#39;s a forms language which relates how protocol methods are to be\nused, the semantics of which URIs are to be embedded and which are to\nbe selected by the user and which are styles/scripts/namespace\nidentifiers is clearly defined, and so on and so forth.\n\nThis is the network-based shared understanding represented by both HTML\nmedia types.  I can&#39;t deduce anything of the sort from application/$.\nWhy would you want to duplicate all that effort to recreate HTML for an\napplication that&#39;s right up HTML&#39;s alley to begin with?\n\n&gt; \n&gt; The application/x-campaign-donation+xml is not self descriptive, since\n&gt; it is unregistered. Therefore it has no expectation of getting any\n&gt; reuse. It may well not even be cached, even with appropriate caching\n&gt; headers.\n&gt; \n\nIt&#39;s an unknown quantity with no public information about its peer-\nreviewed security considerations regarding its use on IP networks\nacross multiple protocols.  Why would I let it cross my boundary?  What\npossible incentive do I have?  Whereas the IANA registry allows me to\nmake an *informed* decision as to whether or not to allow a media type\nthrough a firewall.  Granted, that&#39;s a worst-case scenario, but then\nagain it&#39;s often the case with Java/Javascript/Flash, so why would you\nexpect anything unknown to fare any better?\n\n&gt;\n&gt; The HTML version is self descriptive, but it&#39;s only self descriptive\n&gt; of HTML. It&#39;s not self descriptive of a campaign donation.\n&gt;\n\nBy that logic, text/html is not self-descriptive of *anything* and\nevery use of HTML thus requires its own media type -- one for online\nbanking, another for airline reservations, yet another for event\nticketing, still another for registering a domain name, yet another to\npurchase crap from Amazon, then another to purchase crap from BestBuy\nbecause Amazon and BestBuy can&#39;t agree on semantics...\n\n&gt;\n&gt; There is no way to identify this resource as a campaign donation.\n&gt;\n\nOf course there is.  A hypertext API is self-documenting.  An HTML\nsystem which allows you to track these things is encapsulated around\nwhatever your backend system is.  Does the natural language of the text\ntell you your list or table of things are campaign donations?  Are the\nforms marked up such that you know you&#39;re entering someone&#39;s name\nfollowed by a dollar value?  Then clearly, the representation is\ndescribing a campaign donation resource, even without RDFa, which you\nonly need to make it machine-readable.  The resource means whatever its\nrepresentations say it means, not its media type, which only defines\nthe sender&#39;s intended processing model.\n\n&gt;\n&gt; can benefit from some reuse, notably caching, potentially google,\n&gt;\n\nWhy would Google bother indexing it, when it can&#39;t know what a link\neven is?  Or an image?  Or how to construct a URI from a form?  Or\nanything else anyone assumes Google magically just knows, when the\nreality is that Google&#39;s behavior is (mostly) based on media types?\n\n&gt;\n&gt; etc. But there can be no expectation of reuse at the domain level.\n&gt; For example, if someone wanted to track the rate of donations by\n&gt; county, they can not do that on the HTML payload, as they have no\n&gt; documentation of the domain elements within the payload.\n&gt;\n\nHuh?  Why can&#39;t you provide them a search interface which tells them\nexactly what they&#39;re searching for, with natural-language text\nexplaining that interface, exactly like Google does?  Or better yet, if\nyou&#39;re re-using HTML, then why can&#39;t those folks just google for what\nthey&#39;re after from your domain specifically?  You&#39;re describing exactly\nthe sort of routine, everyday HTML application the Web thrives on.\nREST doesn&#39;t require you to abandon all that and strike off on your own.\n\n&gt; \n&gt; Much like the difference between application/xml and\n&gt; application/x-campaign-donation+xml. Both are XML, but one has the\n&gt; campaign donation semantics associated with it.\n&gt; \n\nNo, one is XML, the other one is application/$ and any assumption that\nit&#39;s XML requires introspection of the payload to confirm -- that&#39;s the\nopposite of being self-descriptive.\n\n-Eric\n\n"}}