{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":371338898,"authorName":"Bill Burke","from":"Bill Burke &lt;bburke@...&gt;","profile":"patriot1burke","replyTo":"SENDER","senderId":"2TG8yTseeAbmQFbHHJ-iJ4FgZqaKVWGF37MJTJSby_cFdQ919vqYQeUSs_4Bssp72IUxWhyPWZw0imjk44wsHJL1QUQI","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Re: HATEOAS & REST APIs - back to basics","postDate":"1238517865","msgId":12348,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5RDI0ODY5LjQwNDA4MDlAcmVkaGF0LmNvbT4=","inReplyToHeader":"PGdxcGI0ZCtkdjBiQGVHcm91cHMuY29tPg==","referencesHeader":"PGdxcGI0ZCtkdjBiQGVHcm91cHMuY29tPg=="},"prevInTopic":12338,"nextInTopic":0,"prevInTime":12347,"nextInTime":12349,"topicId":12327,"numMessagesInTopic":9,"msgSnippet":"... (I want to argue my point so that a) i m not misunderstood b) to make sure I have a point ;)  ) What HATEOAS decouples from a machine perspective (NOT A","rawEmail":"Return-Path: &lt;bburke@...&gt;\r\nX-Sender: bburke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 82329 invoked from network); 31 Mar 2009 16:45:50 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 31 Mar 2009 16:45:49 -0000\r\nX-Received: from unknown (HELO mx2.redhat.com) (66.187.237.31)\n  by mta1.grp.sp2.yahoo.com with SMTP; 31 Mar 2009 16:45:49 -0000\r\nX-Received: from int-mx2.corp.redhat.com (int-mx2.corp.redhat.com [172.16.27.26])\n\tby mx2.redhat.com (8.13.8/8.13.8) with ESMTP id n2VGiQ1V007897;\n\tTue, 31 Mar 2009 12:44:26 -0400\r\nX-Received: from ns3.rdu.redhat.com (ns3.rdu.redhat.com [10.11.255.199])\n\tby int-mx2.corp.redhat.com (8.13.1/8.13.1) with ESMTP id n2VGiRJi019365;\n\tTue, 31 Mar 2009 12:44:27 -0400\r\nX-Received: from bill-burkes-computer.local (vpn-13-67.rdu.redhat.com [10.11.13.67])\n\tby ns3.rdu.redhat.com (8.13.8/8.13.8) with ESMTP id n2VGiQL5008988;\n\tTue, 31 Mar 2009 12:44:26 -0400\r\nMessage-ID: &lt;49D24869.4040809@...&gt;\r\nDate: Tue, 31 Mar 2009 12:44:25 -0400\r\nUser-Agent: Thunderbird 2.0.0.21 (Macintosh/20090302)\r\nMIME-Version: 1.0\r\nTo: wahbedahbe &lt;andrew.wahbe@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;gqpb4d+dv0b@...&gt;\r\nIn-Reply-To: &lt;gqpb4d+dv0b@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Scanned-By: MIMEDefang 2.58 on 172.16.27.26\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Bill Burke &lt;bburke@...&gt;\r\nSubject: Re: [rest-discuss] Re: HATEOAS & REST APIs - back to basics\r\nX-Yahoo-Group-Post: member; u=371338898; y=uQ7DhagxghodAqrycaC6sqJTyA08kgkpC_jUfEmSeznVrjxOiHSx4w\r\nX-Yahoo-Profile: patriot1burke\r\n\r\n\n\nwahbedahbe wrote:\n&gt; &quot;Computers aren&#39;t humans. While a human can look at a web page\n&gt; and figure out how to enter information on the form there, a\n&gt; piece of code can&#39;t. For code, everything needs to be mostly\n&gt; predetermined and the interactions agreed upon before hand.&quot;\n&gt; \n&gt; No offense to Bill, but that completely misses the point of REST. One of \n&gt; the biggest benefits you will get from a RESTful design is the \n&gt; decoupling of the client and server. This is why the HATEOAS constraint \n&gt; is so important.\n&gt; \n\n(I want to argue my point so that a) i&#39;m not misunderstood b) to make \nsure I have a point ;)  )\n\nWhat HATEOAS decouples from a machine perspective (NOT A HUMAN ONE!) is \nthe relationship to the endpoint.  Specifically, where it lives and to a \nlesser extent, what message you are exchanging.  A service cannot change \n  its acceptable media types without breaking existing clients.  So, \nIMO, the only thing HATEOAS really ends up decoupling from a \nmachine-to-machine perspective is relationship location.  This is still \nmuch better than relying on a directory or naming service because you \ncan define a conversation contract within the schema of the media type.\n\nThis was the point I was making to Solomon.  Its the schema that defines \nthe contract.  The message itself is not self-describing.  The message&#39;s \nreference to its schema is.  Back to Solomon&#39;s apiml example, the \nmachine client already has to know the format of the form it will \ntransmit as it traverses relationships, so the self-describing part of \nhis message is irrelevant.\n\n\n\n\n\n-- \nBill Burke\nJBoss, a division of Red Hat\nhttp://bill.burkecentral.com\n\n"}}