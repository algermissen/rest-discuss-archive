{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4981751,"authorName":"Mark Nottingham","from":"&quot;Mark Nottingham&quot; &lt;mnot@...&gt;","profile":"mnotting","replyTo":"SENDER","senderId":"6SMueFe1g1yuftfSKpbOM2GATSSIPM9CrCz8e4HtgyMYDb58Z2_WhjbYS5smwG-p9PW_iyvGVBjWWttvgDOloBlotTEMjEcD","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Beating my head against the &quot;session management&quot; wall","postDate":"1030340372","msgId":2218,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAxM2UwMWMyNGNjMiRmNTM5M2E1MCQyNjBiYThjMEBtbm90bGFwdG9wPg==","referencesHeader":"PDAwMDkwMWMyNGNhYSRjNTRhYTUzMCQ2NDAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":2217,"nextInTopic":2222,"prevInTime":2217,"nextInTime":2219,"topicId":2217,"numMessagesInTopic":13,"msgSnippet":"This may be helpful: There is no session and You ll come to realize, as I did, that there s a difference between knowing the resource and representing the","rawEmail":"Return-Path: &lt;mnot@...&gt;\r\nX-Sender: mnot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 05:40:37 -0000\r\nReceived: (qmail 59036 invoked from network); 26 Aug 2002 05:40:36 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 26 Aug 2002 05:40:36 -0000\r\nReceived: from unknown (HELO mail.mnot.net) (67.119.69.242)\n  by mta3.grp.scd.yahoo.com with SMTP; 26 Aug 2002 05:40:37 -0000\r\nReceived: from mnotlaptop (unknown [63.96.163.210])\n\t(using TLSv1 with cipher RC4-MD5 (128/128 bits))\n\t(No client certificate requested)\n\tby mail.mnot.net (Postfix) with ESMTP id B24A672BB\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun, 25 Aug 2002 22:40:36 -0700 (PDT)\r\nMessage-ID: &lt;013e01c24cc2$f5393a50$260ba8c0@mnotlaptop&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;000901c24caa$c54aa530$6400a8c0@seairthlaptop&gt;\r\nSubject: Re: [rest-discuss] Beating my head against the &quot;session management&quot; wall\r\nDate: Sun, 25 Aug 2002 22:39:32 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nFrom: &quot;Mark Nottingham&quot; &lt;mnot@...&gt;\r\nX-Yahoo-Group-Post: member; u=4981751\r\nX-Yahoo-Profile: mnotting\r\n\r\nThis may be helpful:\n\n  &quot;There is no session&quot;\n\nand\n\n  &quot;You&#39;ll come to realize, as I did, that there&#39;s a difference between\nknowing the resource and representing the resource.&quot;\n\n(with apologies)\n\n\n\n----- Original Message -----\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\nSent: Sunday, August 25, 2002 7:46 PM\nSubject: [rest-discuss] Beating my head against the &quot;session management&quot;\nwall\n\n\n&gt; *sigh*  Do you ever have the feeling that the solutions set before you\nare\n&gt; all not-quite-good-enough, each in their own way?  Currently, this is\nhow I\n&gt; am feeling about session management when it comes to REST...\n&gt;\n&gt; Known options:\n&gt;\n&gt; 1) HTTP Authentication:  This is a simple, non-intrusive solution.\nHowever,\n&gt; &quot;basic&quot; is insecure and &quot;digest&quot; is not consistently implemented.\n&gt;\n&gt; 2) Generating your own &quot;session id&quot;.  This has the problem that you must\n&gt; provide an &quot;intrusive&quot; login screen/process.  Further, you then need to\n&gt; continue tracking the session id.  With this, there are two techniques\n&gt; (well, three sorta):\n&gt;\n&gt;     a) Session Cookie:  If done properly, this is effectively no\ndifferent\n&gt; than http authentication in the sense that the browser is sending an\n&gt; &quot;authenticating&quot; identifier with each request.  Session cookies are\nsomewhat\n&gt; nicer than http authentication in that they are potentially more secure\n(if\n&gt; done correctly) and that it is easier for the server to handle them\n(e.g.\n&gt; deleting them, updating them, etc.).  The major down side is that\ncurrent\n&gt; browsers allow the users to reject session cookies.\n&gt;\n&gt;     b) Query String:  This one, from a REST POV, seems like a really bad\n&gt; technique.  This effectively creates non-permanent unique URL spaces for\n&gt; each user session.  Further, the session id may not actually be related\nto\n&gt; the resource that the URL (with the query string) is pointing to.\nHowever,\n&gt; the good thing about query strings is that, short of a user typing an\n&gt; address into the browser or using a stored link, the server has control\nover\n&gt; them and the user does not have the ability to reject them.\n&gt;\n&gt;     c) Hidden Field: if you are not using the QueryString method and are\n&gt; have a form, you could put the session id in a hidden field.  However,\nyou\n&gt; are then limited to using only the POST method.  Otherwise, the browser\nwill\n&gt; generate a URL with your hidden field showing up in a QueryString.  But,\nif\n&gt; the request is guaranteed to be idempotent, then it is my understanding\nthat\n&gt; the GET method should be used, not POST.\n&gt;\n&gt;\n&gt; Now, I know that all of the above methods (with the possible exception\nof\n&gt; digest authentication, if done correctly and at a certain cost) still\nallows\n&gt; someone to sniff the connection and get enough information to\npotentially\n&gt; mimic the session.  This could all be taken care of using SSL (at which\n&gt; point, even basic authentication is secure), but that seems to be adding\na\n&gt; lot of overhead.  When I only need to authenticate the request, not\nsecure\n&gt; the response, this seems like overkill (and it can be expensive too).\n&gt;\n&gt;\n&gt;\n&gt; Frankly, I think I am leaning towards session cookies at this point.\nSince\n&gt; the site will primarily be for web developers, I am hoping that they at\n&gt; least accept session cookies.  I would have liked to go the HTTP\n&gt; authentication route, but it just seems to unsecure for my taste\n&gt; (considering the fact that I am not using SSL).  If anyone out there can\n&gt; convince my why I should not follow this route, esp. as far as REST is\n&gt; concerned, please say so.  I really would like to be convinced of\nanother\n&gt; method.\n&gt;\n&gt;\n&gt; IN THE MEANTIME....\n&gt;\n&gt; I have been thinking of this dilemma (the one above).  And I have an\nidea.\n&gt; I am wondering whether the idea would work well with the REST model or\nnot.\n&gt; If it would, I would like to get a group of people together to formalize\nit\n&gt; and get it submitted to the right people.\n&gt;\n&gt; What I propose is that web browsers should support a new HTTP header\ncalled\n&gt; &quot;session-id&quot;.  This header would conform to the following rules:\n&gt;\n&gt; 1) The header works sort of like a session cookie.  When the header is\nsent\n&gt; to the browser, you can specify the domain and path (http authentication\n&gt; realm?) and an expiration timestamp.  The timestamp only ensures that\nthe\n&gt; header will stop being sent back to the server if the browser is not\nclosed\n&gt; by that point.  Just like current cookies, setting the timestamp to the\npast\n&gt; will cause the session-id header to become immediately stale.\n&gt;\n&gt; 2) THE USER MAY NOT REJECT THE HEADER.  Browsers that allow optional\n&gt; rejection will be considered NON-STANDARDS-COMPLIANT.  Proxies SHOULD\nNOT\n&gt; REJECT THE HEADER.  I would prefer to make this MAY NOT, but I doubt it\n&gt; would stick.  What are proxies allowed to do with the www-authenticate\n&gt; header?\n&gt;\n&gt; 3) the www-authenticate and session-id headers are mutually exclusive.\nIn\n&gt; other words, if a browser receives a session-id header which matches the\n&gt; existing realm, the browser dumps the www-authenticate response and uses\n&gt; session-id instead.  This allows the http authentication methods to\nstill be\n&gt; used, but also allows the request headers to be replaced with something\nthat\n&gt; is more controllable by the server.\n&gt;\n&gt;\n&gt; Though I know that more thought needs to be put into the idea, I feel it\n&gt; would provide the consistency of basic authentication, the flexibility\nand\n&gt; overhead of cookies, and the security of digest authentication.  Note\nthat\n&gt; it is not even necessary to use HTML forms, since http authentication\ncould\n&gt; be used as the first step then replaced as in #3 above.  However, if one\n&gt; *really* wants the nice look, they could do that as well.\n&gt;\n&gt; So, what do you all think?  Would this interfere with the REST model?\n&gt;\n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@...\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to\nhttp://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n"}}