{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"CUZoVAmO3hJGIcVlGYq-ww5R7AV9mZ4UjtMWUeR3Bplz-6pu00SUk-qSsKWzQQMaInKEYqlQJyPvY3iBXQi9O9_ThEsrjyBhKBsVdEwoCg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs. list of orders]","postDate":"1282646798","msgId":16380,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwODI0MDQ0NjM4LjFkOWQ0NWRkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEFBTkxrVGluQmprS2JWTDUzMWVYRUtTMWF2cF9HNExVaFV6d2hVZjgwVnNvMEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGluNlctcDhxX3Bmc29FR3JiT1NtRnFDWFNqVENfZnZnTDEyOW8xdUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMTMyS3RfPW1aQytrYm5NQlVLZUJtOGE5cEVma0VaOHNab0M5RkBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlua25fUTdZRGhqbS1LWlBBYTlNRj16eXNlODFMS0x0VTZYX1U1VEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGluV25OdXVXWGJLZGVUWmFmOW9aYzZLQlo9VG5wVXk1Q25YZmZZZEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9b1Qxc0t5VjNjUD0tejd6dFJlcEVPMFk1Mi01QkMzc1NVWDFvYUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGk9aFRyekVYRzk1VHl5Q0ZmNlVNVnY0XzMrM2FCTlBUZk9CdmszZ0BtYWlsLmdtYWlsLmNvbT4JPDIwMTAwODIzMDIxODUwLjI1ZTM4M2Q1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyODI1NTQ2MjAuMTczNTcuNjguY2FtZWxAYmFja3BhY2s+CTwyMDEwMDgyMzA0MTMyMi44MDIzNmU2Yy5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwxMjgyNTk2MTAyLjE3MzU3LjExNS5jYW1lbEBiYWNrcGFjaz4JPDFEQjYyQkM3LUQ3MkQtNDVBRi05NTgwLTMwNUM3NkI1Njc5RkBtYWMuY29tPgk8MjAxMDA4MjMxNjIzNDEuODdlY2Q4MjcuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8QUFOTGtUaW5CamtLYlZMNTMxZVhFS1MxYXZwX0c0TFVoVXp3aFVmODBWc28wQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":16379,"nextInTopic":16381,"prevInTime":16379,"nextInTime":16381,"topicId":16269,"numMessagesInTopic":139,"msgSnippet":"... Because we aren t talking about evolution, we re talking about RFC 2616. When I see a Content-Type header, the only thing I know to do is to look in the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98496 invoked from network); 24 Aug 2010 10:46:36 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 24 Aug 2010 10:46:36 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 24 Aug 2010 10:46:36 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id EDC16509DA;\n\tTue, 24 Aug 2010 06:46:34 -0400 (EDT)\r\nDate: Tue, 24 Aug 2010 04:46:38 -0600\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;, juergen.brendel@...,\n Glenn Block &lt;glenn.block@...&gt;, mike amundsen &lt;mamund@...&gt;,\n =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;, Peter Williams\n &lt;pezra@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100824044638.1d9d45dd.eric@...&gt;\r\nIn-Reply-To: &lt;AANLkTinBjkKbVL531eXEKS1avp_G4LUhUzwhUf80Vso0@...&gt;\r\nReferences: &lt;AANLkTin6W-p8q_pfsoEGrbOSmFqCXSjTC_fvgL129o1u@...&gt;\n\t&lt;AANLkTik132Kt_=mZC+kbnMBUKeBm8a9pEfkEZ8sZoC9F@...&gt;\n\t&lt;AANLkTinkn_Q7YDhjm-KZPAa9MF=zyse81LKLtU6X_U5T@...&gt;\n\t&lt;AANLkTinWnNuuWXbKdeTZaf9oZc6KBZ=TnpUy5CnXffYd@...&gt;\n\t&lt;AANLkTi=oT1sKyV3cP=-z7ztRepEO0Y52-5BC3sSUX1oa@...&gt;\n\t&lt;AANLkTi=hTrzEXG95TyyCFf6UMVv4_3+3aBNPTfOBvk3g@...&gt;\n\t&lt;20100823021850.25e383d5.eric@...&gt;\n\t&lt;1282554620.17357.68.camel@backpack&gt;\n\t&lt;20100823041322.80236e6c.eric@...&gt;\n\t&lt;1282596102.17357.115.camel@backpack&gt;\n\t&lt;1DB62BC7-D72D-45AF-9580-305C76B5679F@...&gt;\n\t&lt;20100823162341.87ecd827.eric@...&gt;\n\t&lt;AANLkTinBjkKbVL531eXEKS1avp_G4LUhUzwhUf80Vso0@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST, HTTP, Web, Internet [was Atom feed vs.\n list of orders]\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Kelly wrote:\n&gt;\n&gt; &gt; No, it isn&#39;t. =A0Without some sort of registry like=\r\n IANA, there&#39;s no\n&gt; &gt; way to avoid media type identifier *collisions*, by w=\r\nhich I mean\n&gt; &gt; how can anybody know that application/foo+xml from example.=\r\norg has\n&gt; &gt; the same meaning as application/foo+xml from example.com?\n&gt; \n&gt; =\r\nWhy do *collisions* matter that much? Evolution has its own mechanisms\n&gt; fo=\r\nr dealing with this in the real world, why do they not apply here?\n&gt; \n\nBeca=\r\nuse we aren&#39;t talking about evolution, we&#39;re talking about RFC 2616.\nWhen I=\r\n see a Content-Type header, the only thing I know to do is to\nlook in the I=\r\nANA registry to see what media type it correlates with,\nbecause that&#39;s the =\r\nONLY place the RFC 2616 tells me to look.  If it\nisn&#39;t there, it&#39;s an unkno=\r\nwn and subject to collisions, so I ignore it.\nThe goal in REST is not to ha=\r\nve intermediaries ignore your payload, or\nbe restricted to only caching it,=\r\n if that...\n\nNone of these problems occur when using registered identifiers=\r\n to refer\nto standard media types... so tell me, why is it we want to *avoi=\r\nd*\ndoing what the architectural style requires and HTTP strongly suggests?\n=\r\nLess interoperability?!?  Again, the pushback befuddles me, why we must\ndeb=\r\nate against every single plain-as-day REST requirement...\n\n&gt;\n&gt; &gt; There&#39;s a =\r\nreason HTTP frowns on unregistered types and REST\n&gt; &gt; constrains against th=\r\nem. =A0Messaging isn&#39;t self-descriptive if\n&gt; &gt; there&#39;s no record of your me=\r\ndia type identifier in the IANA\n&gt; &gt; registry. =A0*It can&#39;t be.*\n&gt; \n&gt; The me=\r\nssages are *less* descriptive, not non-descriptive. &quot;This is the\n&gt; media ty=\r\npe (you don&#39;t recognize it)&quot; is still descriptive, and besides\n&gt; - there&#39;s =\r\nway more to HTTP messages than just the Content-Type.\n&gt; \n\nThere is a world =\r\nof difference between not recognizing a media type,\nand not being able to r=\r\necognize it because it isn&#39;t registered.\nWithout a registered media type, t=\r\nhe message is NOT self-descriptive:\n\n&quot;REST enables intermediate processing =\r\nby constraining messages to be\nself-descriptive: interaction is stateless b=\r\netween requests, standard\nmethods and media types are used to indicate sema=\r\nntics and exchange\ninformation, and responses explicitly indicate cacheabil=\r\nity.&quot;\n\nALL standard media types have corresponding identifiers in the IANA\n=\r\nregistry (except XBEL).  How can it be any more plain-as-day, that the\nself=\r\n-descriptive messaging constraint requires STANDARD MEDIA TYPES?\nIf not pre=\r\nsent, the message isn&#39;t _less_ self-descriptive, it just\nplain _isn&#39;t_ self=\r\n-descriptive, BY DEFINITION, not by opinion of Eric...\n\nFine, you&#39;ve coined=\r\n a new identifier, and registered it even, and want\nto send it over the Int=\r\nernet.  But unless and until it&#39;s adopted as a\nstandard (allowing for evolu=\r\ntion), it simply _cannot_ meet the self-\ndescriptive messaging constraint, =\r\nunless my English and Roy&#39;s English\nhave radically different semantics...\n\n=\r\n&gt;\n&gt; &gt; It is simply NOT the REST style to treat media type identifiers as\n&gt; =\r\n&gt; opaque strings that only need to be understood by producers and\n&gt; &gt; consu=\r\nmers of data, when using the Internet, because you&#39;re taking\n&gt; &gt; advantage =\r\nof an existing cache infrastructure which requires media\n&gt; &gt; type identifie=\r\nrs to mean the same thing regardless of origin domain.\n&gt; \n&gt; Why would a cac=\r\nhe care whether or not the origin server&#39;s notion of\n&gt; xyz media type confl=\r\nicts with some other version? That wouldn&#39;t even\n&gt; matter if the origin ser=\r\nver was contradicting /itself/ across multiple\n&gt; resources - let alone anot=\r\nher server entirely.\n&gt; \n\nDumb routers don&#39;t care.  See REST 6.5.1 again.  I=\r\nn order for any\nintermediary to take active part in communication, the key =\r\nto anarchic\nscalability on the Web, it must agree on what the media type id=\r\nentifier\nmeans.  How can this occur, if different origin servers are taggin=\r\ng\ndifferent payloads with different processing requirements, using the\nsame=\r\n identifier?  Isn&#39;t that the antithesis of self-descriptiveness?\n\nHow can y=\r\nou seriously expect Web architecture not to collapse in\nsmoking wreckage if=\r\n anarchy prevails over any form of registry for\nidentifiers, sacrificing th=\r\ne ability to easily tell identifiers apart by\nsimple string comparison, in =\r\nfavor of semantics that are bound to what\nthe most popular interpretation o=\r\nf the string was on the date it was\nimplemented for a particular service?\n\n=\r\nIf you ask me, I&#39;m all in favor of using simple string comparison to\ntell o=\r\nne media type identifier from another...  KISS.\n\n-Eric\n\n"}}