{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7519858,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","profile":"gonga_thrash","replyTo":"SENDER","senderId":"JF-NSYBloexAcB17Oqtpd9pGdWrQnOxR6En0-90BAlOpQ-kEmGZbPw_MYNHz3PiDySUz4YeFWAOizZxJxVxeg9LUow","spamInfo":{"isSpam":false,"reason":"0"},"subject":"HTTP and safety","postDate":"1030381375","msgId":2227,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwODI2MTMwMjU1LlIxOTAyQHd3dy5tYXJrYmFrZXIuY2E+","inReplyToHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QjlAY2xpZmZvcmQuZGV2by5pbHguY29tPjsgZnJvbSB3YWxkZW5tQGlseC5jb20gb24gTW9uLCBBdWcgMjYsIDIwMDIgYXQgMTI6MDU6MzdQTSAtMDQwMA==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4QjlAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2226,"nextInTopic":2244,"prevInTime":2226,"nextInTime":2228,"topicId":2205,"numMessagesInTopic":64,"msgSnippet":"We re creeping into rest-explore territory here. ... Mostly the former, but ultimately both, since it takes both together to complete the task.  For example, a","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 17:04:20 -0000\r\nReceived: (qmail 68399 invoked from network); 26 Aug 2002 17:04:19 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m13.grp.scd.yahoo.com with QMQP; 26 Aug 2002 17:04:19 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta2.grp.scd.yahoo.com with SMTP; 26 Aug 2002 17:04:19 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.11.6/8.8.7) id g7QH2tK16639;\n\tMon, 26 Aug 2002 13:02:55 -0400\r\nDate: Mon, 26 Aug 2002 13:02:55 -0400\r\nTo: &quot;Mathews, Walden&quot; &lt;waldenm@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: HTTP and safety\r\nMessage-ID: &lt;20020826130255.R1902@...&gt;\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F640155F8B9@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Disposition: inline\r\nUser-Agent: Mutt/1.2.5.1i\r\nIn-Reply-To: &lt;1373D6342FA1D4119A5100E029437F640155F8B9@...&gt;; from waldenm@... on Mon, Aug 26, 2002 at 12:05:37PM -0400\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: member; u=7519858\r\nX-Yahoo-Profile: gonga_thrash\r\n\r\nWe&#39;re creeping into rest-explore territory here.\n\nOn Mon, Aug 26, 2002 at 12:05:37PM -0400, Mathews, Walden wrote:\n&gt; &gt; Whatever BAR might mean, if the community (i.e. IETF) has \n&gt; &gt; specified that\n&gt; &gt; HTTP implementations MUST support BAR, then the server \n&gt; &gt; doesn&#39;t have the\n&gt; &gt; final say, the spec does.\n&gt; \n&gt; Sorry, I&#39;m confused.  By &quot;HTTP implementations&quot; do you mean things\n&gt; like libwww, or applications that use HTTP?\n\nMostly the former, but ultimately both, since it takes both together\nto complete the task.  For example, a servlet can give you doGet(),\nand manage etags and cache control and stuff for you, but it&#39;s still up\nto the app to not to change state when it&#39;s invoked.\n\n&gt;  Then, I&#39;ll infer the meaning\n&gt; of &quot;support BAR&quot; from that, hopefully.  But in the meantime, for\n&gt; technologies like libwww, HttpClient and Servlet to &quot;support BAR&quot;\n&gt; means little more than forwarding messages with them.  On the other\n&gt; hand, applications seem to be free to choose which methods they will\n&gt; and will not support (or else there are some superfluous response\n&gt; codes).  Like I said, I&#39;m confused...\n&gt; \n&gt; &gt; \n&gt; &gt; &gt; A little clarification: the fact that a server doesn&#39;t have \n&gt; &gt; to do what I\n&gt; &gt; &gt; say in a POST is not a property of POST; it&#39;s a property of \n&gt; &gt; HTTP, and more\n&gt; &gt; &gt; broadly, of server side applications that are autonomous in their\n&gt; &gt; &gt; respective domains, regardless of which level 7 protocol they use.\n&gt; &gt; \n&gt; &gt; In the broader space of &quot;server side applications&quot;, I&#39;d say that the\n&gt; &gt; party(s) that define the contract get the final say.  With most RPC\n&gt; &gt; systems, this could be the very people who implement the \n&gt; &gt; system, and so\n&gt; &gt; they do/can have the final say.  But when the world sits down \n&gt; &gt; to design\n&gt; &gt; an application protocol, it is done with the expectation that\n&gt; &gt; implementors - many/most of whom won&#39;t be at the \n&gt; &gt; standardization table -\n&gt; &gt; will follow the rules in the specification.  And this is, in \n&gt; &gt; fact, what\n&gt; &gt; happens most of the time.\n&gt; \n&gt; And that&#39;s fine for methods GET, PUT and DELETE, all of whose meanings\n&gt; are bounded to a single conceptual resource.  POST is in a different\n&gt; class, as you know.  One might say that it&#39;s *underspecified* as an\n&gt; application\n&gt; semantic, or from the other point of view, that it&#39;s overloaded to catch\n&gt; everything that&#39;s not meant by the other methods.\n\nI wouldn&#39;t say that it&#39;s underspecified at all.  Why do you believe it\nis?\n\n&gt; What I&#39;m trying to understand is why it is more of a security concern\n&gt; to use a very underspecified HTTP method (e.g., &quot;BAR&quot;, which is not\n&gt; specified\n&gt; at all as an HTTP method) as opposed to a somewhat underspecified method,\n&gt; &quot;POST&quot;.  POST seems like a ready-made tunnel for resource mutation, and\n&gt; hence even in RESTful design it is used this way.  Why should a firewall\n&gt; treat POST any differently than BAR, given the real limitations to\n&gt; visibility?\n\nThe fundamental issue to firewall admins is that somebody on the other\nside of the firewall should not be able to extend the semantics of the\nconnection such that visibility to the firewall is reduced.  i.e. the\nsystem shouldn&#39;t be able to break itself.\n\nPeople have, for some time, talked about being able to *prove* the\nsecurity of application protocols like HTTP, by examining exactly these\nsorts of issues; what kinds of extended agreement can be created, and\ncan it ever be used to do something that goes against a security policy\nenacted by an intermediary.  For RFC 2616 POST, this *cannot* be done.\nBut it&#39;s not automatically the case for extension methods - they need to\nbe studied closely.\n\nMB\n-- \nMark Baker, CTO, Idokorro Mobile (formerly Planetfred)\nOttawa, Ontario, CANADA.               distobj@...\nhttp://www.markbaker.ca        http://www.idokorro.com\n\n"}}