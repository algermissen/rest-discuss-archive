{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"4OhqcgZ7bbmmDVlrSoPmP7UVZiyMDUG3lOWciwZuAd514hCLL2vTfgJZNNd2C3qeKS1usq3nj0xNXx24iojjQrLhhIo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful way to pop first item in a queue","postDate":"1281454462","msgId":16258,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9NjFoRDV6RVJrdkctdTFUQXp6b0dOMlB3NG5pb2ljNFZMRCtOekBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDEyODEwMzQ3NDguMjkxNy4zMDMuY2FtZWxAYmFja3BhY2s+"},"prevInTopic":16200,"nextInTopic":16259,"prevInTime":16257,"nextInTime":16259,"topicId":16148,"numMessagesInTopic":46,"msgSnippet":"I think there is difference between a Restful solution and a Restful HTTP solution. If one has to use HTTP, then the following are my design 1. There is","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 35938 invoked from network); 10 Aug 2010 15:34:24 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.sp2.yahoo.com with QMQP; 10 Aug 2010 15:34:24 -0000\r\nX-Received: from unknown (HELO mail-vw0-f46.google.com) (209.85.212.46)\n  by mta3.grp.sp2.yahoo.com with SMTP; 10 Aug 2010 15:34:23 -0000\r\nX-Received: by vws3 with SMTP id 3so9887787vws.33\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 10 Aug 2010 08:34:23 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.62.200 with SMTP id y8mr4195843vch.91.1281454462957; Tue, \n\t10 Aug 2010 08:34:22 -0700 (PDT)\r\nX-Received: by 10.220.158.212 with HTTP; Tue, 10 Aug 2010 08:34:22 -0700 (PDT)\r\nIn-Reply-To: &lt;1281034748.2917.303.camel@backpack&gt;\r\nReferences: &lt;1281034748.2917.303.camel@backpack&gt;\r\nDate: Tue, 10 Aug 2010 09:34:22 -0600\r\nMessage-ID: &lt;AANLkTi=61hD5zERkvG-u1TAzzoGN2Pw4nioic4VLD+Nz@...&gt;\r\nTo: juergen.brendel@..., rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=e0cb4e88735f0f78d6048d79de68\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\nSubject: Re: [rest-discuss] RESTful way to pop first item in a queue\r\nX-Yahoo-Group-Post: member; u=198897688; y=VLUtCtnakl3fgtrRWZFnrdoaCs9WKdQzx0v97XTNMyS_vQ\r\nX-Yahoo-Profile: edonliu\r\n\r\n\r\n--e0cb4e88735f0f78d6048d79de68\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI think there is difference between a &#39;Restful&#39; solution and a &#39;Restful&#39;\nHT=\r\nTP solution.\n\nIf one has to use HTTP, then the following are my design\n\n1. =\r\nThere is nothing mapped to GET some url like /foo/{id}.\n2. GET /foo/HEAD do=\r\nes not cache, and returns an {id}.\n3. POST /foo/ to push().\n4. DELETE /foo/=\r\n{id} to pop(). If {id} is never the HEAD then the request\nfails.\n\nNot sure =\r\nif it is good to implement 3 and 4 by PATCH.\n\nCheers,\n\nDong\n\nOn Thu, Aug 5,=\r\n 2010 at 12:59 PM, Juergen Brendel &lt;\njuergen.brendel@...&gt; wrote:\n\n=\r\n&gt;\n&gt;\n&gt;\n&gt; Hello!\n&gt;\n&gt; Let&#39;s say I have a queue resource: /foo\n&gt;\n&gt; I can POST n=\r\new entries into the queue. I can even refer to individual\n&gt; entries within =\r\nthe queue: /foo/&lt;id&gt;\n&gt;\n&gt; But how do I pop the next entry? How do I construc=\r\nt a single request\n&gt; that gets me the next/first entry but also removes the=\r\n entry at the same\n&gt; time?\n&gt;\n&gt; Maybe I can implement a special resource /fo=\r\no/next, which always refers\n&gt; to the next entry in the queue. But clearly, =\r\nI can&#39;t use GET to pop the\n&gt; entry, since that would not be idempotent.\n&gt;\n&gt;=\r\n The queue has multiple consumers, so the &#39;pop&#39; operation should be\n&gt; atomi=\r\nc. This seems to rule out the possibility of doing a GET to\n&gt; retrieve the =\r\nlatest element, followed by a DELETE to remove it. Someone\n&gt; else could hav=\r\ne gotten the &#39;latest&#39; element in the meantime, thus\n&gt; causing the same elem=\r\nent to be consumed twice.\n&gt;\n&gt; Maybe I can cause a &#39;move&#39;, where a single re=\r\nquest causes the next\n&gt; element to be renamed to a unique ID, which is then=\r\n returned to the\n&gt; client, who then is the only one who has a handle on tha=\r\nt object. The\n&gt; client can then work with the resource. But the question no=\r\nw is:\n&gt;\n&gt; a) What happens when the client fails before it can delete the re=\r\nsource?\n&gt; b) What is the best way to &#39;move&#39; an item in that way?\n&gt;\n&gt; Juerge=\r\nn\n&gt;\n&gt; --\n&gt; Juergen Brendel\n&gt; http://restx.mulesoft.org\n&gt;\n&gt;  \n&gt;\n\r\n--e0cb4e88735f0f78d6048d79de68\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI think there is difference between a &#39;Restful&#39; solution and a &#39=\r\n;Restful&#39; HTTP solution.=A0&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If one has to use HTTP, =\r\nthen the following are my design =A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. There is n=\r\nothing mapped to GET some url like /foo/{id}.=A0&lt;/div&gt;\n&lt;div&gt;2. GET /foo/HEA=\r\nD does not cache, and returns an {id}.=A0&lt;/div&gt;&lt;div&gt;3. POST /foo/ to push()=\r\n.=A0&lt;/div&gt;&lt;div&gt;4. DELETE /foo/{id} to pop(). If {id} is never the HEAD then=\r\n the request fails.=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Not sure if it is good to i=\r\nmplement 3 and 4 by PATCH.=A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;=\r\nbr&gt;&lt;/div&gt;&lt;div&gt;Dong=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Aug =\r\n5, 2010 at 12:59 PM, Juergen Brendel &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailt=\r\no:juergen.brendel@...&quot;&gt;juergen.brendel@...&lt;/a&gt;&gt;&lt;/span&gt;=\r\n wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;bo=\r\nrder-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;bac=\r\nkground-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n  =\r\n    \n      &lt;p&gt;&lt;br&gt;\nHello!&lt;br&gt;\n&lt;br&gt;\nLet&#39;s say I have a queue resource: /=\r\nfoo&lt;br&gt;\n&lt;br&gt;\nI can POST new entries into the queue. I can even refer to ind=\r\nividual&lt;br&gt;\nentries within the queue: /foo/&lt;id&gt;&lt;br&gt;\n&lt;br&gt;\nBut how do I=\r\n pop the next entry? How do I construct a single request&lt;br&gt;\nthat gets me t=\r\nhe next/first entry but also removes the entry at the same&lt;br&gt;\ntime?&lt;br&gt;\n&lt;b=\r\nr&gt;\nMaybe I can implement a special resource /foo/next, which always refers&lt;=\r\nbr&gt;\nto the next entry in the queue. But clearly, I can&#39;t use GET to pop=\r\n the&lt;br&gt;\nentry, since that would not be idempotent.&lt;br&gt;\n&lt;br&gt;\nThe queue has =\r\nmultiple consumers, so the &#39;pop&#39; operation should be&lt;br&gt;\natomic. Th=\r\nis seems to rule out the possibility of doing a GET to&lt;br&gt;\nretrieve the lat=\r\nest element, followed by a DELETE to remove it. Someone&lt;br&gt;\nelse could have=\r\n gotten the &#39;latest&#39; element in the meantime, thus&lt;br&gt;\ncausing the =\r\nsame element to be consumed twice.&lt;br&gt;\n&lt;br&gt;\nMaybe I can cause a &#39;move&#=\r\n39;, where a single request causes the next&lt;br&gt;\nelement to be renamed to a =\r\nunique ID, which is then returned to the&lt;br&gt;\nclient, who then is the only o=\r\nne who has a handle on that object. The&lt;br&gt;\nclient can then work with the r=\r\nesource. But the question now is:&lt;br&gt;\n&lt;br&gt;\na) What happens when the client =\r\nfails before it can delete the resource?&lt;br&gt;\nb) What is the best way to &#3=\r\n9;move&#39; an item in that way?&lt;br&gt;\n&lt;br&gt;\nJuergen&lt;br&gt;\n&lt;br&gt;\n-- &lt;br&gt;\nJuergen =\r\nBrendel&lt;br&gt;\n&lt;a href=3D&quot;http://restx.mulesoft.org&quot; target=3D&quot;_blank&quot;&gt;http://=\r\nrestx.mulesoft.org&lt;/a&gt; &lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div styl=\r\ne=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--e0cb4e88735f0f78d6048d79de68--\r\n\n"}}