{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"x7D8Jgm24s0zOkvpJe81P5ofU4oTXVrkcog7LhQ1wf0BFfcyo_2Uun6SzVvpxVPvEY983VB62pnGDqL6EaPnm6lKffbAozY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How can a framework/library encourage REST-ful \tdevelopment?","postDate":"1263588734","msgId":14563,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMTE1MTI1MmoxOTg1OWM3NHMzNjRkMDIwMTM2NGUzOTk2QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGRlNzBiMzlkMTAwMTE1MTI0N3I0ZDliYmQyZWlmZTJhNjdlMDhlNDE5NTI4QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPgkgPGRlNzBiMzlkMTAwMTE1MTI0N3I0ZDliYmQyZWlmZTJhNjdlMDhlNDE5NTI4QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14562,"nextInTopic":14564,"prevInTime":14562,"nextInTime":14564,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"Noah: I am familiar w/ a handful of environments that are thought to be HTTP/REST-friendly. I am wondering what it is about these frameworks that give people","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 36595 invoked from network); 15 Jan 2010 20:52:16 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m14.grp.re1.yahoo.com with QMQP; 15 Jan 2010 20:52:16 -0000\r\nX-Received: from unknown (HELO mail-fx0-f222.google.com) (209.85.220.222)\n  by mta2.grp.sp2.yahoo.com with SMTP; 15 Jan 2010 20:52:15 -0000\r\nX-Received: by fxm22 with SMTP id 22so606436fxm.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 15 Jan 2010 12:52:14 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.18.145 with SMTP id w17mr3178093faa.66.1263588734735; Fri, \n\t15 Jan 2010 12:52:14 -0800 (PST)\r\nIn-Reply-To: &lt;de70b39d1001151247r4d9bbd2eife2a67e08e419528@...&gt;\r\nReferences: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\n\t &lt;de70b39d1001151247r4d9bbd2eife2a67e08e419528@...&gt;\r\nDate: Fri, 15 Jan 2010 15:52:14 -0500\r\nX-Google-Sender-Auth: 61dcbdfa79240355\r\nMessage-ID: &lt;b548df651001151252j19859c74s364d0201364e3996@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] How can a framework/library encourage REST-ful \n\tdevelopment?\r\nX-Yahoo-Group-Post: member; u=69164307; y=5mIG-1BZjn-nLpb5V1OOx7rKVSG0MT5RxaXkpjH8HrMx\r\nX-Yahoo-Profile: mamund\r\n\r\nNoah:\n\nI am familiar w/ a handful of environments that are thought to be\nHT=\r\nTP/REST-friendly. I am wondering what it is about these frameworks\nthat giv=\r\ne people reason to make that claim (true or false).\n\nIOW, what are the abst=\r\nract traits that make them so? Are these traits\nshared across libraries/lan=\r\nguages/platforms?\n\nMaybe a way to start is to document the REST-ful feature=\r\ns of each of\nthese libraries and draw conclusions.\n\nmca\nhttp://amundsen.com=\r\n/blog/\n\n\n\n\nOn Fri, Jan 15, 2010 at 15:47, Noah Campbell &lt;noahcampbell@gmail=\r\n.com&gt; wrote:\n&gt; JAX-RS (Jersey) does a pretty good job IMO. =A0Python&#39;s Pist=\r\non on Django\n&gt; looks promising (...and that&#39;s the limit of my experience wi=\r\nth REST\n&gt; frameworks I&#39;ve used in anger).\n&gt;\n&gt; On Fri, Jan 15, 2010 at 12:27=\r\n PM, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt; Recently, I&#39;ve been thinkin=\r\ng about how a coding framework or library\n&gt;&gt; can influence the way develope=\r\nrs implement applications. What would a\n&gt;&gt; coding environment look like if =\r\nit was meant to encourage results that\n&gt;&gt; followed a particular _architectu=\r\nral_ style (not programming style).\n&gt;&gt;\n&gt;&gt; IOW, is there a way to craft a fr=\r\namework that constrains developers in\n&gt;&gt; ways that results in a REST-ful im=\r\nplementation of the application?\n&gt;&gt;\n&gt;&gt; I did some digging, but have yet to =\r\nfind any writing on this topic.\n&gt;&gt;\n&gt;&gt; Here are some &quot;off-the-top-of-my-head=\r\n&quot; items:\n&gt;&gt;\n&gt;&gt; For example, a framework might exhibit these REST-like trait=\r\ns:\n&gt;&gt; - there is a clear separation of concerns between resource\n&gt;&gt; identif=\r\niers, resources, and representations\n&gt;&gt; - developers must define a resource=\r\n as the public application interface\n&gt;&gt; - the Uniform Interface is enforced=\r\n (e.g. those methods are the only\n&gt;&gt; public members exposed for a resource)=\r\n\n&gt;&gt; - developers must always associate one or more representation formats\n&gt;=\r\n&gt; with a resource and/or resource method before the implementation is\n&gt;&gt; va=\r\nlid\n&gt;&gt; - there is no way to define and use server-side session state object=\r\ns\n&gt;&gt;\n&gt;&gt; Some HTTP-specific traits might be:\n&gt;&gt; - support for content negoti=\r\nation is &quot;baked-in&quot;\n&gt;&gt; - support for conditional requests is &quot;baked-in&quot; and=\r\n automatic\n&gt;&gt; - RPC-like implementation patterns (e.g. gateway URIs) are so=\r\nmehow\n&gt;&gt; difficult to implement or are flagged as invalid\n&gt;&gt;\n&gt;&gt; Any comment=\r\ns? Is this line of thinking pure folly? old hat? already\n&gt;&gt; resolved suffic=\r\niently?\n&gt;&gt;\n&gt;&gt; mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; -------------------=\r\n-----------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n\n"}}