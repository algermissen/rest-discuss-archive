{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":253063886,"authorName":"Alexandros Marinos","from":"Alexandros Marinos &lt;al3xgr@...&gt;","profile":"trojector.rm","replyTo":"SENDER","senderId":"M6SXagfmDrC8T5sEuYBzgQDd2cc4WYnNj3eFlLsKnw3QQvFEc1-Fe9avOkhQ3CIDzZKD6zBJqmqnTT02dIr80csAUQuceYnm-ybs_g","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Application state","postDate":"1254839044","msgId":13699,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRjZjdlZDJjMDkxMDA2MDcyNHAzNGMyYTQ0MGtkMzlkM2YzMjcwMjY0YWI4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGhhZmc5bittaWE3QGVHcm91cHMuY29tPg==","referencesHeader":"PDRjZjdlZDJjMDkxMDA2MDEyOWkxYTA4ZTY5NHBhYzhmY2UwZjkxN2NjN2JmQG1haWwuZ21haWwuY29tPgkgPGhhZmc5bittaWE3QGVHcm91cHMuY29tPg=="},"prevInTopic":13696,"nextInTopic":13700,"prevInTime":13698,"nextInTime":13700,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Hello William, On Tue, Oct 6, 2009 at 2:21 PM, William Martinez Pomares ","rawEmail":"Return-Path: &lt;al3xgr@...&gt;\r\nX-Sender: al3xgr@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 80313 invoked from network); 6 Oct 2009 14:24:06 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.re1.yahoo.com with QMQP; 6 Oct 2009 14:24:06 -0000\r\nX-Received: from unknown (HELO mail-fx0-f214.google.com) (209.85.220.214)\n  by mta3.grp.sp2.yahoo.com with SMTP; 6 Oct 2009 14:24:06 -0000\r\nX-Received: by fxm10 with SMTP id 10so3653342fxm.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 06 Oct 2009 07:24:05 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.204.160.86 with SMTP id m22mr841240bkx.82.1254839045037; Tue, \n\t06 Oct 2009 07:24:05 -0700 (PDT)\r\nIn-Reply-To: &lt;hafg9n+mia7@...&gt;\r\nReferences: &lt;4cf7ed2c0910060129i1a08e694pac8fce0f917cc7bf@...&gt;\n\t &lt;hafg9n+mia7@...&gt;\r\nDate: Tue, 6 Oct 2009 15:24:04 +0100\r\nMessage-ID: &lt;4cf7ed2c0910060724p34c2a440kd39d3f3270264ab8@...&gt;\r\nTo: William Martinez Pomares &lt;wmartinez@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0015175cac72879ef5047544fbaa\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alexandros Marinos &lt;al3xgr@...&gt;\r\nSubject: Re: [rest-discuss] Re: Application state\r\nX-Yahoo-Group-Post: member; u=253063886; y=YR9pmelT1ohA8SmysYDusf6aknEA5KeaWOhLfVb-DB-LBhLy-YrG\r\nX-Yahoo-Profile: trojector.rm\r\n\r\n\r\n--0015175cac72879ef5047544fbaa\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nHello William,\n\nOn Tue, Oct 6, 2009 at 2:21 PM, William Martinez Pomares &lt;\nwmartinez@...&gt; wrote:\n\n&gt; So, the client creates an order, which is then a resource, and it is given\n&gt; an ID for it (ID=URI). Then, it adds line items. At the end, it can get the\n&gt; order to verify and the server in turn will send back the header and all\n&gt; lines so far. The client then requests to place the order, which the other\n&gt; server that responds does.\n&gt;\n\n\n&gt; As you can see, no server has a state, and I don&#39;t need to keep sending\n&gt; back and forth all the data.\n&gt;\n\nThe issues I see with this are the following: If the client can GET the\norder resource, then any server has access to the state of the resource at\nany time and can return it to the client. If any server can access the state\nof the order at any time, then the server that receives the request to\npurchase all items will be able to as well. Which means there is a shared\ndatabase backend. Therefore, adding an extra roundtrip doesn&#39;t get you any\nadditional flexibility. What it costs you however is a possible consistency\nproblem. If there are multiple parties that can add items to the order, and\none commits this order by purchasing, if there is a new order item added in\nthe time it takes for the &#39;committer&#39; to GET and POST the order, then the\nlast item is lost. Additionally, since the server presumably does not know\nwhich order resource this purchase is related to, it can&#39;t change it&#39;s\nstatus to &#39;purchased&#39; or whatever. So items can keep being added in\nperpetuity. Clearly we need something better than this.\n\nAlexandros\n\r\n--0015175cac72879ef5047544fbaa\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello William,&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Oct 6, 2009 at 2:2=\r\n1 PM, William Martinez Pomares &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:wmar=\r\ntinez@...&quot;&gt;wmartinez@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockq=\r\nuote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 20=\r\n4); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=\r\n=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span&gt;&lt;/span&gt;So, the client crea=\r\ntes an order, which is then a resource, and it is given an ID for it (ID=3D=\r\nURI). Then, it adds line items. At the end, it can get the order to verify =\r\nand the server in turn will send back the header and all lines so far. The =\r\nclient then requests to place the order, which the other server that respon=\r\nds does. &lt;/div&gt;\n&lt;/blockquote&gt;&lt;div&gt;=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0=\r\n.8ex; padding-left: 1ex;&quot;&gt;&lt;div style=3D&quot;background-color: rgb(255, 255, 255=\r\n);&quot;&gt;As you can see, no server has a state, and I don&#39;t need to keep sen=\r\nding back and forth all the data. &lt;br&gt;\n&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;=A0&lt;/div&gt;The=\r\n issues I see with this are the following: If the client can GET the order =\r\nresource, then any server has access to the state of the resource at any ti=\r\nme and can return it to the client. If any server can access the state of t=\r\nhe order at any time, then the server that receives the request to purchase=\r\n all items will be able to as well. Which means there is a shared database =\r\nbackend. Therefore, adding an extra roundtrip doesn&#39;t get you any addit=\r\nional flexibility. What it costs you however is a possible consistency prob=\r\nlem. If there are multiple parties that can add items to the order, and one=\r\n commits this order by purchasing, if there is a new order item added in th=\r\ne time it takes for the &#39;committer&#39; to GET and POST the order, then=\r\n the last item is lost. Additionally, since the server presumably does not =\r\nknow which order resource this purchase is related to, it can&#39;t change =\r\nit&#39;s status to &#39;purchased&#39; or whatever. So items can keep being=\r\n added in perpetuity. Clearly we need something better than this. &lt;br&gt;\n&lt;br&gt;=\r\nAlexandros&lt;br&gt;&lt;/div&gt;\n\r\n--0015175cac72879ef5047544fbaa--\r\n\n"}}