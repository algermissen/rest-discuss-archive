{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":209043068,"authorName":"Solomon Duskis","from":"Solomon Duskis &lt;sduskis@...&gt;","profile":"sduskis","replyTo":"SENDER","senderId":"jF4KxFJd-H_4UguJayJO_C-7Z9sVBeJ-9vKkcO_gGlXLrSfMie7Wd3Ib0yUg6V5Ckvps86YXx66xOMPhKlN5W_ZH72_PCmrBsg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: HATEOAS: JSON-based examples?","postDate":"1239730237","msgId":12415,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU1YzYwZTM3MDkwNDE0MTAzMHQxNTk3YWIxZnViMjM5ZTc1YTI3NDIxOGQyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ1QzU0QzE0LTgzQjgtNERBMC1BRENCLUEwQUVFNzYyNjYwOEBzdWJidS5vcmc+","referencesHeader":"PDIwMDkwNDEyMDIzNi4wNzU1NS5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ5RTRBN0M1LjMwNDA0MDVAcmVkaGF0LmNvbT4gPDIwMDkwNDE0MTgwMy40MDgxNC5taWNoYWVsQHNjaHVlcmlnLmRlPgkgPDQ1QzU0QzE0LTgzQjgtNERBMC1BRENCLUEwQUVFNzYyNjYwOEBzdWJidS5vcmc+"},"prevInTopic":12414,"nextInTopic":12416,"prevInTime":12414,"nextInTime":12416,"topicId":12399,"numMessagesInTopic":66,"msgSnippet":"IMHO, HATEOAS techniques and tooling are a key aspect of success for REST in internal apps. I respectfully disagree on the following point: For internal apps,","rawEmail":"Return-Path: &lt;sduskis@...&gt;\r\nX-Sender: sduskis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 5480 invoked from network); 14 Apr 2009 17:31:38 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m5.grp.re1.yahoo.com with QMQP; 14 Apr 2009 17:31:38 -0000\r\nX-Received: from unknown (HELO mail-qy0-f126.google.com) (209.85.221.126)\n  by mta1.grp.re1.yahoo.com with SMTP; 14 Apr 2009 17:31:38 -0000\r\nX-Received: by qyk32 with SMTP id 32so4497104qyk.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 14 Apr 2009 10:30:38 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.84.196 with SMTP id k4mr2213969qcl.86.1239730238233; Tue, \n\t14 Apr 2009 10:30:38 -0700 (PDT)\r\nIn-Reply-To: &lt;45C54C14-83B8-4DA0-ADCB-A0AEE7626608@...&gt;\r\nReferences: &lt;200904120236.07555.michael@...&gt;\n\t &lt;49E4A7C5.3040405@...&gt; &lt;200904141803.40814.michael@...&gt;\n\t &lt;45C54C14-83B8-4DA0-ADCB-A0AEE7626608@...&gt;\r\nDate: Tue, 14 Apr 2009 13:30:37 -0400\r\nMessage-ID: &lt;55c60e370904141030t1597ab1fub239e75a274218d2@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Michael Schuerig &lt;michael@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001636427491779f6404678730ab\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Solomon Duskis &lt;sduskis@...&gt;\r\nSubject: Re: [rest-discuss] Re: HATEOAS: JSON-based examples?\r\nX-Yahoo-Group-Post: member; u=209043068; y=xVm29WIWTcw0b_DVxe1CDyCrTCaMTDorBxRkIvCzJMIJSg\r\nX-Yahoo-Profile: sduskis\r\n\r\n\r\n--001636427491779f6404678730ab\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n IMHO, HATEOAS techniques and tooling are a key aspect of success for REST\nin internal apps.\n\nI respectfully disagree on the following point:\n\nFor internal apps, IMO, there is less motivation to treat URIs as opaque as\n&gt; it is tempting to assume that clients know about URIs as well as all\n&gt; possible state transitions\n\n\nI&#39;m guessing that external APIs haven&#39;t delved into HATEOAS as deeply as\nthey could have specifically because they have different problems that\ninternal apps do.\n\nIf anything, I would suggest that internal apps have a bigger need for\nopaque URIs and possible state transitions.  Internal APIs tend to be more\nfine-grained and have a richer feature set than their external\ncounterparts.  Those fine-grained APIs are more prone to change over time.\nHATEOAS is meant help manage those kinds of changes .\n\n-Solomon\n\nOn Tue, Apr 14, 2009 at 12:38 PM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt;\n&gt;\n&gt;\n&gt; On Apr 14, 2009, at 9:03 AM, Michael Schuerig wrote:\n&gt;\n&gt; &gt; generalized linking[*] and there my reaction is the same: So what?\n&gt; &gt; All I\n&gt; &gt; see are proposals for expressing links among resources. What I haven&#39;t\n&gt; &gt; seen anywhere are examples of clients using these representations. In\n&gt; &gt; particular, I&#39;d like to see examples that demonstrate that and how\n&gt; &gt; HATEOAS results in better, more robust client code.\n&gt;\n&gt; Here is the problem. There are very few external facing and successful\n&gt; services that illustrate things like this. For internal apps, IMO,\n&gt; there is less motivation to treat URIs as opaque as it is tempting to\n&gt; assume that clients know about URIs as well as all possible state\n&gt; transitions. Under such assumptions, HATEOAS may seem like an\n&gt; unnecessary pedantic exercise.\n&gt;\n&gt; IMO, it is best to evaluate pros and costs of HATEOAS, or for that\n&gt; matter, any other idea, in the context of your own apps. If you are\n&gt; convinced that HATEOAS is beneficial for your apps, then the proposals\n&gt; that have been discussed so far can help.\n&gt;\n&gt; Lack of an IETF RFC or a W3C recommendation should not, IMHO, prevent\n&gt; anyone from doing the right things for their apps.\n&gt;\n&gt; Subbu\n&gt; ---\n&gt; http://subbu.org\n&gt;\n&gt;  \n&gt;\n\r\n--001636427491779f6404678730ab\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\nIMHO, HATEOAS techniques and tooling are a key aspect of success for REST =\r\nin internal apps.=A0 &lt;br&gt;\n&lt;br&gt;I respectfully disagree on the following poin=\r\nt:&lt;br&gt;&lt;br&gt;&lt;blockquote style=3D&quot;border-left: 1px solid rgb(204, 204, 204); m=\r\nargin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot; class=3D&quot;gmail_quote&quot;&gt; For in=\r\nternal apps, IMO,  \nthere is less motivation to treat URIs as opaque as it =\r\nis tempting to  \nassume that clients know about URIs as well as all possibl=\r\ne state  transitions&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;\nI&#39;m guessing that external A=\r\nPIs haven&#39;t delved into HATEOAS as deeply\nas they could have specifical=\r\nly because they have different problems\nthat internal apps do. &lt;br&gt;=A0&lt;br&gt;I=\r\nf anything, I would suggest that internal apps have a bigger need for opaqu=\r\ne URIs and possible state transitions.=A0 Internal APIs tend to be more fin=\r\ne-grained and have a richer feature set than their external counterparts.=\r\n=A0 Those fine-grained APIs are more prone to change over time.=A0 HATEOAS =\r\nis meant help manage those kinds of changes .&lt;br&gt;\n&lt;br&gt;-Solomon&lt;br&gt;&lt;br&gt;&lt;/div=\r\n&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Apr 14, 2009 at 12:38 PM, Subbu Allamar=\r\naju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;subbu@...=\r\ng&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;borde=\r\nr-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-le=\r\nft: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n=\r\n\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;\n&lt;div style=3D&quot;margin: 0pt; padding: 0pt 25p=\r\nx 0pt 0pt; width: 470px; float: left;&quot;&gt;\n\n\n    &lt;div&gt;\n            \n          =\r\n  &lt;br&gt;&lt;br&gt;\n      \n      &lt;p&gt;&lt;/p&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\nOn Apr 14, 2009, at 9=\r\n:03 AM, Michael Schuerig wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; generalized linking[*] and th=\r\nere my reaction is the same: So what?  &lt;br&gt;\n&gt; All I&lt;br&gt;\n&gt; see are pro=\r\nposals for expressing links among resources. What I haven&#39;t&lt;br&gt;\n&gt; se=\r\nen anywhere are examples of clients using these representations. In&lt;br&gt;\n&gt=\r\n; particular, I&#39;d like to see examples that demonstrate that and how&lt;br=\r\n&gt;\n&gt; HATEOAS results in better, more robust client code.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nH=\r\nere is the problem. There are very few external facing and successful  &lt;br&gt;=\r\n\nservices that illustrate things like this. For internal apps, IMO,  &lt;br&gt;\nt=\r\nhere is less motivation to treat URIs as opaque as it is tempting to  &lt;br&gt;\n=\r\nassume that clients know about URIs as well as all possible state  &lt;br&gt;\ntra=\r\nnsitions. Under such assumptions, HATEOAS may seem like an  &lt;br&gt;\nunnecessar=\r\ny pedantic exercise.&lt;br&gt;\n&lt;br&gt;\nIMO, it is best to evaluate pros and costs of=\r\n HATEOAS, or for that  &lt;br&gt;\nmatter, any other idea, in the context of your =\r\nown apps. If you are  &lt;br&gt;\nconvinced that HATEOAS is beneficial for your ap=\r\nps, then the proposals  &lt;br&gt;\nthat have been discussed so far can help.&lt;br&gt;\n=\r\n&lt;br&gt;\nLack of an IETF RFC or a W3C recommendation should not, IMHO, prevent =\r\n &lt;br&gt;\nanyone from doing the right things for their apps.&lt;br&gt;\n&lt;br&gt;\nSubbu&lt;br&gt;=\r\n\n---&lt;br&gt;\n&lt;a href=3D&quot;http://subbu.org&quot; target=3D&quot;_blank&quot;&gt;http://subbu.org&lt;/a=\r\n&gt;&lt;br&gt;\n&lt;br&gt;\n\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div width=3D&quot;1&quot; style=3D&quot;color: whit=\r\ne; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;=\r\nbr&gt;\n\r\n--001636427491779f6404678730ab--\r\n\n"}}