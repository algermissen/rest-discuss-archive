{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"tRqwg4wvifRrmrH-G0U7XqEhNO03Kwb-M8FrTcFgy0wcdAgBkcp4dX1-R-5mhYlU418CmsDFKTQ_vOGg0bj4_ENTMzNZ0ClVuABEgifHmvY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful M2M Systems and Resource Typing","postDate":"1260981415","msgId":14159,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM0MkYwNEE0LUFCNzYtNEY5Qy04Mjg1LTU2QUFBMDE2Q0I0MEBtYWMuY29tPg==","inReplyToHeader":"PGI1NDhkZjY1MDkxMjE2MDc1OHE0NjQzMDgwOHY4ODk4MzY5NDI4ZjVkOTE1QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PENCNEU1MkVDLTQ2RTktNDhFNC05QkY2LTVFNUVFMjg1NDM4OEBtYWMuY29tPiA8YjU0OGRmNjUwOTEyMTYwNzU4cTQ2NDMwODA4djg4OTgzNjk0MjhmNWQ5MTVAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14157,"nextInTopic":14160,"prevInTime":14158,"nextInTime":14160,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"... Yes. But it was really only meant as an example. The point is that the client makes assumptions about what comes back. It assumes it is e.g. a ticket (or","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86852 invoked from network); 16 Dec 2009 16:38:06 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 16 Dec 2009 16:38:06 -0000\r\nX-Received: from unknown (HELO asmtpout022.mac.com) (17.148.16.97)\n  by mta3.grp.re1.yahoo.com with SMTP; 16 Dec 2009 16:38:06 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.102] ([84.144.121.69])\n by asmtp022.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KUR000PV7HKY000@...&gt; for\n rest-discuss@yahoogroups.com; Wed, 16 Dec 2009 08:37:00 -0800 (PST)\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;342F04A4-AB76-4F9C-8285-56AAA016CB40@...&gt;\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nIn-reply-to: &lt;b548df650912160758q46430808v8898369428f5d915@...&gt;\r\nDate: Wed, 16 Dec 2009 17:36:55 +0100\r\nReferences: &lt;CB4E52EC-46E9-48E4-9BF6-5E5EE2854388@...&gt;\n &lt;b548df650912160758q46430808v8898369428f5d915@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=289191104; y=tx3FweZ6vDXvF2AdiHU4UZ_UJILTHhLGMX3VBkv8qR0lfJtCEAGiGJZZ\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Dec 16, 2009, at 4:58 PM, mike amundsen wrote:\n\n&gt; Jan:\n&gt;\n&gt; If I understand your description, you are talking about creating a\n&gt; client that can search for helpdesk tickets (at some known URI, I\n&gt; assume) and, if one or more tickets come back in the response\n&gt; representation, are then able to perform some action on the tickets\n&gt; (change status, etc).\n\nYes. But it was really only meant as an example. The point is that\nthe client makes assumptions about what comes back. It assumes it is\ne.g. a ticket (or an entry as in the case of AtomPub, or an order etc.).\nIOW: the client does not simply assume the items are resources.\n\n&gt;\n&gt; I think this can be done by documenting a media-type constraint that\n&gt; includes information to identify tickets.\n&gt; &lt;link href=&quot;....&quot; rel=&quot;http://www.example.org/rels/ticket&quot; /&gt;\n\nYes. But when coding the client, you need to make use of the  \nassumption that you should look for that rel and this comes down to  \nthe assumption that the items in the collection are &#39;tickets&#39; (and not  \njust resources). You cannot code the client without knowing that you  \nare going to &#39;interact with&#39; tickets.\n\n&gt;\n&gt; Alternately, a similar approach could be used when the response\n&gt; representation includes more than just links, but actual tickets.\n&gt; &lt;tickets&gt;\n&gt;  &lt;ticket&gt;\n&gt;     &lt;link href=&quot;...&quot; rel=&quot;edit&quot; /&gt;\n&gt;     ...\n&gt;  &lt;/ticket&gt;\n&gt; &lt;/tickets&gt;\n&gt;\n&gt; In both cases, the client can be coded to search the representation\n&gt; for the proper elements and act accordingly.\n\nYes. But (see above) you code based on the assumptions that such  \n&#39;kinds&#39; of resources exist on the server. When you have a human facing  \nclient it is different, because then you just turn the links etc.  \nfound in the representations into buttons (e.g. [edit]) and let the  \nhuman click on it. In these human driven interactions, the human makes  \nthe same kinds of assumptions (e.g. when I interact with Amazon I  \nassume I can select items and then order them) but the assumptions do  \nnot manifets themselves in code. For M2M clients they do and my point  \nis that coding based on such assumptions is inevitably based on the  \nserver describing what *kinds* of resource to expect. (The AtomPub  \nspec has a section &#39;Resource Classification&#39; that does axactly this).\n\n\n&gt;\n&gt; All this information can be documented the media-type used with the\n&gt; service including any special element names, rel values, etc. viable\n&gt; actions on these links, etc.\n&gt;\n&gt; &lt;snip&gt;\n&gt;&gt; Does anyone have an idea how to align this (IMHO fact) with the\n&gt;&gt; constraint that no information about resource types must be made\n&gt;&gt; available to clients in RESTful systems?\n&gt; &lt;/snip&gt;\n&gt;\n&gt; Not sure I understand this last statement. Do you mean media-types?\n\nNo, resource types (e.g. AtomPub&#39;s collection, member, media-entry...)\n\n\nAnother way to view this is to ask the question: Assuming we had a  \nbunch of media types for aonline shopping, could you code a machine  \nclient for an online shop without knowing that (or assuming that) from  \nthe representation of an item there will be a transition that you can  \nfollow to order the item and that this will somehow result in an order  \nyou can then modify or cancel?\n\nIn pseudo code\n\nGET /item/3\n\norderURI = ...find order link or form...\n\nPOST orderURI\n\n\nThe key issue is the &#39;...find order link or form...&#39; because it  \nmanifests the assumption that such a thing MAY/SHOULD/MUST be findable  \nand you cannot possibly base this assumption on knowing that /item/3  \nis a resource. You assme it is an orderable item. This assumption is  \nequivalent to a &#39;resource type&#39;\n\nJan\n\n\n\n\n\n\n\n\n\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Wed, Dec 16, 2009 at 10:21, Jan Algermissen &lt;algermissen1971@... \n&gt; &gt; wrote:\n&gt;&gt; I can&#39;t help it: I see no possible way to implement a non-human- \n&gt;&gt; driven\n&gt;&gt; client for a service without (in one way or another) classifying the\n&gt;&gt; resources the service provides.\n&gt;&gt;\n&gt;&gt; For example, consider a helpdesk ticket system: When writing a client\n&gt;&gt; that searches for tickets and then updates the foo:status of the\n&gt;&gt; individual tickets contained in the result set, I need to make the\n&gt;&gt; assumption that the result set contains tickets (and not just\n&gt;&gt; resources). In order to being able to make such an assumptions, the\n&gt;&gt; classification information must be made available by the service. In\n&gt;&gt; addition, when client developers should be enabled to develop clients\n&gt;&gt; before the services exist this information is needed as some form of\n&gt;&gt; service type description. The specification of application/atomsrv \n&gt;&gt; +xml\n&gt;&gt; is a good example of such a service type description.\n&gt;&gt;\n&gt;&gt; But however this is approached, it essentially comes down to telling\n&gt;&gt; the client what kinds of resources (IOW: kinds of application states)\n&gt;&gt; to expect on the server. I just cannot code to update the resource\n&gt;&gt; foo:status when I have now clue that this user goal is applicable to\n&gt;&gt; the resource in the first place.\n&gt;&gt;\n&gt;&gt; Does anyone have an idea how to align this (IMHO fact) with the\n&gt;&gt; constraint that no information about resource types must be made\n&gt;&gt; available to clients in RESTful systems?\n&gt;&gt;\n&gt;&gt; Jan\n&gt;&gt;\n&gt;&gt; P.S. In human driven interactions the situation is different: We  \n&gt;&gt; still\n&gt;&gt; have knowledge of the resource type iin general (we know a trouble\n&gt;&gt; ticket when we see one) but we are not dependent on knowing that the\n&gt;&gt; result of some interaction will be a trouble ticket. We can allways\n&gt;&gt; follow some human-targeted links and make a few hops to reach the\n&gt;&gt; trouble ticket resource we expect should be &#39;somwehere&#39;. M2M clients\n&gt;&gt; do not have that luxury (unless we apply some form of AI I guess).\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yahoo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n\n--------------------------------------\nJan Algermissen\n\nMail: algermissen@...\nBlog: http://algermissen.blogspot.com/\nHome: http://www.jalgermissen.com\n--------------------------------------\n\n\n\n\n"}}