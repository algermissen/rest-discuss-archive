{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"ygaOVF1gjzVtXWFY_sIelXXRfbiVp6st6VJTcp9tt_dlRZdqFUip0wyeTmii3Zp_Q2taKMPm-Fxl__SEi-dpRjZZqEE_Kw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Opacity Reconsidered","postDate":"1015474210","msgId":899,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODZFODIyLkI5MDM0NjJAcHJlc2NvZC5uZXQ+","referencesHeader":"PDNDODY5ODNGLjFDRkIxN0VBQGp1bXAubmV0PiA8M0M4NjlGMDQuNEJBNDk1MzRAcHJlc2NvZC5uZXQ+IDwzQzg2QTZDQy5CM0M3OUE1MUBqdW1wLm5ldD4gPDNDODZBQjA3LjhFRjlDNDMxQHByZXNjb2QubmV0PiA8M0M4NkFFMTUuNTEzRTA0MjJAanVtcC5uZXQ+IDwzQzg2QjJERC5ENERCMUYwOEBwcmVzY29kLm5ldD4gPDNDODZDQkM3LjUyQjU3RTM0QGp1bXAubmV0PiA8M0M4NkQxNEEuOEQwRkE5RTdAcHJlc2NvZC5uZXQ+IDwzQzg2REQ4RC5ENDQwOEI3NUBqdW1wLm5ldD4="},"prevInTopic":898,"nextInTopic":900,"prevInTime":898,"nextInTime":900,"topicId":864,"numMessagesInTopic":29,"msgSnippet":"... It isn t an issue of whether there is any single thing. If you want to apply the design criteria of another system then the basic architecture and","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 04:18:22 -0000\r\nReceived: (qmail 31351 invoked from network); 7 Mar 2002 04:12:54 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m2.grp.snv.yahoo.com with QMQP; 7 Mar 2002 04:12:54 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 7 Mar 2002 04:12:53 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g274Cmb03560\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 6 Mar 2002 20:12:48 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g274ClL16595\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed, 6 Mar 2002 20:12:47 -0800\r\nMessage-ID: &lt;3C86E822.B903462@...&gt;\r\nDate: Wed, 06 Mar 2002 20:10:10 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Opacity Reconsidered\r\nReferences: &lt;3C86983F.1CFB17EA@...&gt; &lt;3C869F04.4BA49534@...&gt; &lt;3C86A6CC.B3C79A51@...&gt; &lt;3C86AB07.8EF9C431@...&gt; &lt;3C86AE15.513E0422@...&gt; &lt;3C86B2DD.D4DB1F08@...&gt; &lt;3C86CBC7.52B57E34@...&gt; &lt;3C86D14A.8D0FA9E7@...&gt; &lt;3C86DD8D.D4408B75@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt; ... There&#39;s *no good reason* to believe that there&#39;s any single thing\n&gt; unique about the Web beyond its default and de facto hypermedia interface and the\n&gt; synthesis it achieves of all its features. \n\nIt isn&#39;t an issue of whether there is any single thing. If you want to\napply the design criteria of another system then the basic architecture\nand requirements have to be similar. That&#39;s clearly not true of SMB/CIFS\nso maybe we could stop talking about it.\n\n&gt; ...  Given the similarities, IMO it&#39;s fair to\n&gt; draw lessons from any / all filesystems which share some characteristic, goal, or what\n&gt; have you with the Web.  Categorically stating that lessons learned elsewhere aren&#39;t\n&gt; applicable to the Web because it&#39;s special (when it isn&#39;t) smacks of a kind of\n&gt; technological provincialism that&#39;s frustrating.  \n\nYou haven&#39;t actually presented any lessons learned. You&#39;ve said: &quot;smart\npeople made other choices so maybe they were right.&quot; And maybe they were\nwrong. The benefits you&#39;ve argued for non-opacity are quite small and\nyou&#39;re talking about erecting new schema languages, conventions and\ninterface definition systems to support it.\n\n&gt;...\n&gt; Let me be clear about my claims:  after a fair bit of thought, I&#39;ve concluded that the\n&gt; strictest statements and interpretations of the Opacity Axiom may be a mistake caused by\n&gt; overgeneralization from early historical problems in the Web&#39;s development.  \n\nAnd I think you&#39;re wrong. At the very least, the opacity axiom frees the\napplication to physically put its resources where-ever it wants without\nincurring the cost of an HTTP redirect. It also addresses Mark&#39;s issue\nabout standardization.\n\n&gt; ... To the\n&gt; extent that it has nothing to say contrary to my following assertions, then I&#39;m\n&gt; generally fine with it:\n&gt; \n&gt;   * URI should be constructable by human or machine\n&gt;   * URI should be meaningfully deconstructable by human or machine\n&gt;   * URI designers should be encouraged to build meaningful namespaces\n\nI disagree. Wherever possible, machines should be discouraged from\neither constructing or deconstructing them. Barring a few weird cases\n(like censorship proxies) they should be &quot;end-to-end&quot; so that only the\nproducing and consuming applications ever deconstruct them and\napplications that didn&#39;t produce them should not try to deconstruct\nthem.\n\n&gt; &gt; Yes, if you take the union of all features of all file systems and pick\n&gt; &gt; and choose then you may get something that looks like the Web. But if\n&gt; &gt; you want to claim that the Web should learn from the design decisions\n&gt; &gt; made in file systems then you have to choose one or two logically\n&gt; &gt; similar file systems and demonstrate that the problem domain is similar.\n&gt; \n&gt; Well, that&#39;s rather silly, isn&#39;t it?  That&#39;s like saying &quot;tell me everything you know\n&gt; about numbers.  You may only use the number 2.&quot;\n\nNo, it&#39;s saying lets restrict our conversation to systems that are\nrelevant.\n\n&gt; &gt; I&#39;ve not noticed that SMB/CIFS use semantically meaningful names much\n&gt; &gt; other than lpt1: so I don&#39;t see how they are relevant to your argument.\n&gt; \n&gt; If my CIFS home directory contains, say, &#92;&#92;someserver&#92;jbone&#92;mail&#92;archive&#92;FoRK&#92;1999 then\n&gt; that name is indeed semantically meaningful, and its possible that both humans and\n&gt; software might be able to make some deductions about what other names exist in that\n&gt; hierarchy.  \n\nNobody could prevent you from writing software that does that but it\nwould be poor software design. Of course using human meaningful names is\ngreat. But writing software that presumes, for example, that the mailing\narchive is going to be broken down by years and that the years will\nreside on the same disk would be poor software design. I already have\nthis problem when I want to move my massive trash folder to a different\ndisk than the other mail messages.\n\n&gt; ... Particularly if I give them some guidance on the semantics and generative\n&gt; grammar of that naming scheme as it relates to my information organizational structure.\n\nAnd how will I get around the fact that my 1999 and 2000 folders just\nwon&#39;t fit on the same disk and the &#92;&#92;someserver&#92; operating system\ndoesn&#39;t have a concept of symlinks?\n\n&gt; &gt; In fact, the Windows operating system encourages application designers\n&gt; &gt; to dereference names through the registry and ignore the actual file\n&gt; &gt; names.\n&gt; \n&gt; Yes, and what a good idea that turned out to be. ;-)  \n\nIt&#39;s an excellent idea. Thanks to it, I can take my home directory from\nmachine to machine with all of the magical windows setting in it. On one\nmachine its e:&#92;data&#92;profile on another its c:&#92;profile and in theory I\ncould even have one machine get its profile information over the net.\n\nGuess what: Unix does the same thing. It is typical to dereference your\nhome directory through one of ~, $HOME or /etc/passwd. Hypertext is the\nengine of application state. Unix just isn&#39;t consistent about it because\nnobody ever formulated it as an axiom. And because Unix is not\nconsistent about it, you get software that presumes that a particular\nfile is going to be in a particular place. There is no global root way\nto ask where the file should be so you just have to &quot;know&quot;.\n\nThe reason it can&#39;t be an axiom on Unix (or even Windows) is because\nindirection is annoying and people hate indirection in user interfaces.\nThe file system is a really important user interface in every operating\nsystem so people get annoyed if they can only navigate it through\nindirection. I don&#39;t dispute that the opacity principle has a price in\nsimplicity and to a certain extent usability. It compensates in\n*flexibility*.\n\n&gt; ... Contrast this with systems where\n&gt; installing an entire piece of software is simply a matter of unpacking a tarball in a\n&gt; directory.\n\nYou&#39;re talking about something totally different.\n\n Paul Prescod\n\n"}}