{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"MkzqGbR3mgoBfwKAuS8MVxWwRFwvx3U5L0_oh0kPvAHG6n2unkrztm78h59Agfb0XvDVn7BkGiBzdYoy3i2teKLiWMg2KSt0YTKbsJEnKg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Metaphors for REST Development on the Web","postDate":"1284502118","msgId":16602,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTE0MTYwODM4LjQ2MTQ4MGMxLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":0,"nextInTopic":16608,"prevInTime":16601,"nextInTime":16603,"topicId":16602,"numMessagesInTopic":5,"msgSnippet":"What is the difference between unbounded creativity and design by constraint?  The former is characterized by looking at the problem, then defining the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1222 invoked from network); 14 Sep 2010 22:08:35 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m13.grp.re1.yahoo.com with QMQP; 14 Sep 2010 22:08:35 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 14 Sep 2010 22:08:35 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 07423509D9\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 14 Sep 2010 18:08:34 -0400 (EDT)\r\nDate: Tue, 14 Sep 2010 16:08:38 -0600\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100914160838.461480c1.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Metaphors for REST Development on the Web\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nWhat is the difference between unbounded creativity and design by\nconstraint?  The former is characterized by looking at the problem,\nthen defining the parameters by which it is to be solved.  The latter\nis characterized by attempting to solve the problem within predefined\nparameters.  I have a few metaphors...\n\nTeam-building workshops and engineering-school challenges which involve\nsome goal (a standard variation on which is keeping an egg safe), to be\naccomplished within defined parameters (each team is given some paper-\ntowel-roll tubes, popsicle sticks and a dab of glue).  The problem\nisn&#39;t meant to be insoluble, so while the answer may be, &quot;Yes, it would\nbe easier with a roll of duct tape,&quot; you can&#39;t have one.  REST on the\nWeb says you can have duct tape, you just can&#39;t use it for at least a\nyear...\n\nThis sort of situation is standard fodder in the movies, think &quot;Apollo\n13&quot; or the last &quot;Star Trek&quot;.  In the former, you can&#39;t assume there&#39;s\nany more velcro than you&#39;ve been given to work with.  If you follow my\nlogic, I&#39;d have been more impressed with Captain Kirk&#39;s Kobayashi Maru\ncheat if he&#39;d changed the specification of a starship to include a\nKlingon-shield-negating-device and then ordered it activated.\nDiscovering such an imperative design goal could then inform the\nevolution of the starship specification.\n\nThe final stage of USMC boot camp is the &quot;crucible&quot; challenge, which\ninvolves squad-based solving of several problems, one or more of which\nis deliberately insoluble.  Insoluble problems are meant to be\ndetermined by first making an effort to solve the problem at hand\nwithin the given parameters.  Here, you can&#39;t have duct tape, ever.\nThe Marines won&#39;t let you cheat on the Kobayashi Maru.  This is more\nrigid than REST.\n\nhttp://memory-alpha.org/wiki/Kobayashi_Maru_scenario\n\nThe takeaway is that you don&#39;t always know that a problem is insoluble\nwithin the uniform interface without trying it first, because such\nfailure is what informs the design of any extension to the uniform\ninterface.  If you&#39;re using the public Internet, then standardization\nmeans you&#39;re contributing your solution to an otherwise-insoluble\nproblem (or just your idea for a better mousetrap) back to the public-\nnetwork-based uniform interface, for the purposes of general shared\nunderstanding, which is the mechanism for promoting uptake.\n\nREST isn&#39;t just encouraging re-use, it&#39;s encouraging re-sharing when\nyou can&#39;t re-use.  REST on the Web doesn&#39;t just encourage such behavior,\nit specifies it, which means there&#39;s a &quot;right way to cheat&quot; in the\nKobayashi Maru situation (re-spec the starship instead of defining-down\nparticipants to not have shields).  Cheating the right way makes a\ncontribution to the public commons of the Web, cheating the wrong way\njust fractures it.\n\nIANA registries are a curious thing, as they&#39;re a technically-required\nsocial contract.  But without such registries, evolution would be ad-\nhoc -- a social-contract choice which technically precludes a public-\nnetwork-based API.  So if you do create something for the Web, think of\nwhat you&#39;re doing in terms of extending the uniform interface, and\nunderstand standardization in those terms -- share it back, and you may\nbe rewarded with Internet scale, if it&#39;s a useful contribution.\n\nHaving a rationale, i.e. explaining why other solutions fail to solve\nyour problem, matters a great deal to your success -- which is why it&#39;s\nhelpful to prototype within the uniform interface, to determine what\nreal requirements you have which can&#39;t otherwise be met, in order to\nguide your extension of the uniform interface.\n\n-Eric\n\n"}}