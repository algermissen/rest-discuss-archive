{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"Mike Dierken","from":"&quot;Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"r4s7fvIgFCehioo7WWC4oBK3nQ4-5bI0Kb7RlAk5h_9EcG7EfwbIq6Lto77-EeRIo4S5lDuFhh6kcZX1C_Ajo_8PKqC3yeeFKyvqhg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] REST & Internal Integration","postDate":"1145424006","msgId":6006,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTEwMS1EQVYxMkJGMzREN0E4REE0QTIyMEMxRDFBRDhDNTBAcGh4LmdibD4=","inReplyToHeader":"PEQ0NEE2MzgyLUFEOTUtNEFDOS04MkFDLTA1RDFGOTM3RDhGM0BtYWMuY29tPg=="},"prevInTopic":5993,"nextInTopic":6024,"prevInTime":6005,"nextInTime":6007,"topicId":5992,"numMessagesInTopic":12,"msgSnippet":"I think all of those could be designed to have uniform interfaces and resource identifiers and exchange representations of state. You could build it yourself,","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 46342 invoked from network); 19 Apr 2006 05:20:39 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m28.grp.scd.yahoo.com with QMQP; 19 Apr 2006 05:20:39 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.56.84)\n  by mta10.grp.scd.yahoo.com with SMTP; 19 Apr 2006 05:20:39 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Tue, 18 Apr 2006 22:20:12 -0700\r\nMessage-ID: &lt;BAY101-DAV12BF34D7A8DA4A220C1D1AD8C50@...&gt;\r\nReceived: from 207.202.171.254 by BAY101-DAV12.phx.gbl with DAV;\n\tWed, 19 Apr 2006 05:20:08 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &lt;mherrick66@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Tue, 18 Apr 2006 22:20:06 -0700\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_01C3_01C66336.3EE4E590&quot;\r\nX-Mailer: Microsoft Office Outlook, Build 11.0.5510\r\nIn-Reply-To: &lt;D44A6382-AD95-4AC9-82AC-05D1F937D8F3@...&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2869\r\nThread-Index: AcZi3HV7jK68JNepSWepwDZzRnJRKQAjmTiQ\r\nX-OriginalArrivalTime: 19 Apr 2006 05:20:12.0572 (UTC) FILETIME=[EF1C15C0:01C66370]\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: RE: [rest-discuss] REST & Internal Integration\r\nX-Yahoo-Group-Post: member; u=87113616; y=FQ7OKNcqe3ObM3QiCmjOPbvOIeGB75_ctqTdcdVpNAEDQyk\r\nX-Yahoo-Profile: mdierken\r\n\r\n\r\n------=_NextPart_000_01C3_01C66336.3EE4E590\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\nI think all of those could be designed to have uniform interfaces and\nresource identifiers and exchange representations of state. You could build\nit yourself, and the limits of your integration would be as far as you care\nto push them. Or you could use existing technology - possibly placing extra\nconstraints to achieve the uniform interface, resource identifiers, etc. -\nand maybe do it cheaper with broader acceptance. The existing technologies\ncould be HTTP (for most of those), or something like JMS or a vendor\nspecific message publishing/queueing system.\n \n &gt; For example looking up existing customer information. It definitely\nwouldn&#39;t be my first choice, however, for something transactional like\ncreating an order. \n&gt; Not saying I&#39;d never do it, just wouldn&#39;t be my first choice.\nUsing HTTP for requests that must be transactional doesn&#39;t seem to be a\nproblem in my view. I&#39;m pretty sure there are several online retailers that\nuse HTTP to create and manage orders. It&#39;s even theoretically possible they\nuse HTTP within their firewall as well - but you can never know what&#39;s going\non in there...\nWhat is it about HTTP based request/response doesn&#39;t fit with\n&#39;transactional&#39; from your point of view?\n \n&gt; My problem with using Web Style at all for heavy integration is the\ncoupling and complexity that starts to add up \n&gt; when you have a lot of services all doing Request/Reply. Each client has\nto handle errors and retry logic.\nWhen you have a network, each client has to handle errors and retry logic.\nReally. The nifty part about REST is that with a uniform interface and a\nmessage oriented protocol, once you have it figure out, that software is\nre-usable across different services - whether it&#39;s creating an order,\nupdating inventory, changing prices or getting a list of things in a\nshopping cart.\n \n \n&gt;  Once you get to anything async, however, Web Style quickly falls down for\nme. Lets start with &quot;Async Request/Reply&quot;. \n&gt; [...] \n&gt; If you are writing one service, it is no big deal - its when there are\nmore then a few where you get a cumulative amount of complexity that \n&gt; starts to get your attention.\nComplexity doesn&#39;t accumulate when you have a uniform interface. Any\nasynchronous system has more complex interactions than synchronous, but if\nthe benefits outweigh the costs then it&#39;s a fine choice. I don&#39;t see how an\nasynchronous approach where the receiver returns a token to the sender is a\npoor approach or falls down - it&#39;s fairly common in many messaging systems,\nnot just Web style systems. Using a Web Style means to create a common way\nto do asynchronous interactions, likely using hyperlinks (that&#39;s the &quot;get an\nid back&quot; part) or registering a callback (again, a form of hyperlinking).\nThe Atom publishing protocol is doing just this - defining how document\nexchange can become asynchronous when building on top of synchronous\nrequest/reply messages.\n \n&gt; For &quot;Async 1:1&quot;, you can do that with Web Style like Request/Reply. You do\nhave to contend with error cases, however. \n&gt; And &quot;out of the box&quot; you don&#39;t get guaranteed delivery. You can&#39;t send the\nmessage persistently so that you know that the send being ack&#39;d means\nsomething.\nMost messaging systems I&#39;ve worked with that provide reliable or guaranteed\ndelivery have APIs that look suspiciously like &quot;post&quot;, and the API is a\nblocking call - quick, but still blocking. \n \n&gt; How would you do &quot;Async 1:M&quot;? This is classic pub/sub. A client sends 1\nmessage and N subscribers listen to the message. \n&gt; The client has no idea who is listening. I don&#39;t know of any way to do\nthis w/o writing a ton of code.\nI have a feeling you are talking about how to do this with HTTP, rather than\nhow to make pubsub more RESTful.\nYou could just acquire a decent messaging middleware product and put an HTTP\nserver in front in order to post messages to the topics, then define the\nHTTP requests for consumers to retrieve messages - the trick is to define\nhow the consuming applications maintain state as to which messages have been\nprocessed.\nHere is a sample app I wrote a while back that does what you are talking\nabout :\nhttp://www.searchalert.net:8080/dierken/events/chat.html?topic=rest-discuss\nThe underlying system holds messages here:\nhttp://www.searchalert.net:8080/xmlrouter/msgs/rest-discuss\nThis is a working example of using HTTP to send 1 message and having N\nsubscribers listen to the message. The publisher does not know what\napplications will consume the messages. In addition, this particular example\nalso shows two approaches to notification - polling for messages via\nfollowing the &#39;next&#39; link, and persistent connections for low latency\ndelivery to subscribers (when the &#39;next&#39; link falls off the end of the\nchain, the server holds onto the request and doesn&#39;t send a response until\nthere are messages ready). There is a client implemented via javascript\nwithin the HTML page, but any programming language that can talk HTTP and\nparse XML will do. This was written in just a few hours, but gives you the\nidea of what is possible.\n \n&gt;  How about &quot;Async 1:M Request/Reply&quot;? This is when you send one message\nand get N responses. This is pub/sub request reply.\nAre you sure you didn&#39;t mean N+1 responses?\n \n&gt;  Last one on my list is &quot;Async M:1&quot;. This is 1 service listening to N\ndestinations / Topics for events.\nThis is the flip side of 1-N pubsub. The service either is pro-actively\nnotified (via a post in some language or protocol) or polls. A middle-ware\nservice would allow this service to register &#39;routes&#39; between topics so that\nthe service only need to subscribe to one &#39;journal&#39; topic. There have been a\nfew companies and open-source projects in the past that did this with pure\nHTTP. \n \n \n\n\n  _____  \n\nFrom: rest-discuss@yahoogroups.com [mailto:rest-discuss@yahoogroups.com] On\nBehalf Of mherrick66@...\nSent: Monday, April 17, 2006 11:14 PM\nTo: rest-discuss@yahoogroups.com\nSubject: [rest-discuss] REST & Internal Integration\n\n\nHi, \n\nI am not a REST expert, but definitely prefer it to SOAP & WS-*. \n\nI am participating in some future state architecture planning and am trying\nto see where REST fits. I&#39;m trying to challenge some of my assumptions so I\nam sending this email to this list. While I certainly prefer REST to WS-*, I\nstill don&#39;t think its the best choice for internal integration within a\ncompany.\n\nAs part of this architecture planning we have identified some integration\ncategories that are common to us:\n\n\n1.\tSync Request/Reply \n\n2.\tAsync Request/Reply \n\n3.\tAsync 1:1 \n\n4.\tAsync 1:M \n\n5.\tAsync 1:M Request/Reply \n\n6.\tAsync M:1 \n\n7.\tBatch Feed\n\nI wrote a bit more on these and which ones I think can/should be done via\nREST and which ones shouldn&#39;t:\nhttp://fuzzypanic.blogspot.com/2006/04/just-how-much-rest-web-style-are-we.h\ntml\n\nPlease let me know what you think.\n\nThanks for your help,\n\nMike Herrick\nPortland, OR\n\n\nSPONSORED LINKS \nProtocol\n&lt;http://groups.yahoo.com/gads?t=ms&k=Protocol+analyzer&w1=Protocol+analyzer&\nw2=Ssl+protocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&w\n6=Protocol&c=6&s=120&.sig=-vNi0F9sGxz3wJiUypOlsA&gt; analyzer \tSsl\n&lt;http://groups.yahoo.com/gads?t=ms&k=Ssl+protocol&w1=Protocol+analyzer&w2=Ss\nl+protocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&w6=Pro\ntocol&c=6&s=120&.sig=QcUDWIbIdXkmz4QSFhqszw&gt; protocol \tProtocol\n&lt;http://groups.yahoo.com/gads?t=ms&k=Protocol+converter&w1=Protocol+analyzer\n&w2=Ssl+protocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&\nw6=Protocol&c=6&s=120&.sig=8MMcEvfzdk5saYSJv-2g3g&gt; converter \t\nSip\n&lt;http://groups.yahoo.com/gads?t=ms&k=Sip+protocol&w1=Protocol+analyzer&w2=Ss\nl+protocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&w6=Pro\ntocol&c=6&s=120&.sig=X7aZ6IACnEQUtAC57u829w&gt; protocol \tProtocol\n&lt;http://groups.yahoo.com/gads?t=ms&k=Protocol+analysis&w1=Protocol+analyzer&\nw2=Ssl+protocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&w\n6=Protocol&c=6&s=120&.sig=SI1LEHwb69y6gddZAv_Fuw&gt; analysis \tProtocol\n&lt;http://groups.yahoo.com/gads?t=ms&k=Protocol&w1=Protocol+analyzer&w2=Ssl+pr\notocol&w3=Protocol+converter&w4=Sip+protocol&w5=Protocol+analysis&w6=Protoco\nl&c=6&s=120&.sig=aCiMFP0b3kFn96wqrZacGA&gt;  \t\n\n  _____  \n\nYAHOO! GROUPS LINKS \n\n\n\t\n*\t Visit your group &quot;rest-discuss\n&lt;http://groups.yahoo.com/group/rest-discuss&gt; &quot; on the web.\n  \n\n*\t To unsubscribe from this group, send an email to:\n rest-discuss-unsubscribe@yahoogroups.com\n&lt;mailto:rest-discuss-unsubscribe@yahoogroups.com?subject=Unsubscribe&gt; \n  \n\n*\t Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service\n&lt;http://docs.yahoo.com/info/terms/&gt; . \n\n\n  _____  \n\n\n\r\n------=_NextPart_000_01C3_01C66336.3EE4E590\r\nContent-Type: text/html;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Dus-ascii&quot;&gt;=\r\n\n&lt;META content=3D&quot;MSHTML 6.00.2900.2873&quot; name=3DGENERATOR&gt;&lt;/HEAD&gt;\n&lt;BODY \nst=\r\nyle=3D&quot;WORD-WRAP: break-word; khtml-nbsp-mode: space; khtml-line-break: aft=\r\ner-white-space&quot;&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-190420=\r\n06&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;I think all of those could =\r\nbe designed to have uniform \ninterfaces and resource identifiers and exchan=\r\nge representations of state. You \ncould build it yourself, and the limits o=\r\nf your integration would be as far as \nyou care to push them. Or you could =\r\nuse existing technology - possibly placing \nextra constraints to achieve th=\r\ne uniform interface, resource identifiers, etc. - \nand maybe do it cheaper =\r\nwith broader acceptance. The existing technologies could \nbe HTTP (for most=\r\n of those), or something like JMS or a vendor specific message \npublishing/=\r\nqueueing system.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN clas=\r\ns=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;=\r\n&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-190=\r\n42006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&nbsp;&gt; &lt;FONT face=3D=\r\n&quot;Times New Roman&quot; color=3D#000000 \nsize=3D3&gt;For example looking up existing=\r\n customer information. It definitely \nwouldn&#39;t be my first choice, however,=\r\n for something transactional like creating \nan order. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=\r\n&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT f=\r\nace=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=\r\n=3D#000000 size=3D3&gt;&gt; Not \nsaying I&#39;d never do it, just wouldn&#39;t be my f=\r\nirst \nchoice.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT =\r\nface=3DArial&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff&gt;&lt;SPAN \nclass=3D925403604-=\r\n19042006&gt;Using HTTP for requests that must be transactional \ndoesn&#39;t seem t=\r\no be a problem in my view. &lt;/SPAN&gt;&lt;SPAN \nclass=3D925403604-19042006&gt;I&#39;m pre=\r\ntty sure there are several online retailers that \nuse HTTP to create and ma=\r\nnage orders. It&#39;s even theoretically possible they use \nHTTP within their f=\r\nirewall as well - but you can never know what&#39;s going on in \nthere...&lt;/SPAN=\r\n&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D9254=\r\n03604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;What is it abou=\r\nt HTTP based request/response doesn&#39;t fit \nwith &#39;transactional&#39; from your p=\r\noint of view?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;=\r\n/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-1904=\r\n2006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&gt; &lt;FONT face=3D&quot;Times =\r\nNew Roman&quot; color=3D#000000 size=3D3&gt;My \nproblem with using Web Style at all=\r\n for heavy integration is the coupling and \ncomplexity that starts to add u=\r\np &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925=\r\n403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT face=3D&quot;=\r\nTimes New Roman&quot; color=3D#000000 size=3D3&gt;&gt; when \nyou have a lot of serv=\r\nices all doing Request/Reply. Each client has to handle \nerrors and retry l=\r\nogic.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D=\r\n925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;When you ha=\r\nve a network, each client has to handle errors \nand retry logic. Really. Th=\r\ne nifty part about REST is that with a uniform \ninterface and a message ori=\r\nented protocol, once you have it figure out, that \nsoftware is re-usable ac=\r\nross different services - whether it&#39;s creating an \norder, updating invento=\r\nry, changing prices or getting a list of things in a \nshopping cart.&lt;/FONT&gt;=\r\n&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;=\r\n&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DI=\r\nV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DAria=\r\nl \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=\r\n=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000f=\r\nf size=3D2&gt;&gt;&nbsp;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D#000000 \nsize=\r\n=3D3&gt; Once you get to anything async, however, Web Style quickly falls down=\r\n \nfor me. Lets start with &quot;Async Request/Reply&quot;. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV=\r\n&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=\r\n=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D#=\r\n000000 size=3D3&gt;&gt; \n[...] &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr alig=\r\nn=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000=\r\nff size=3D2&gt;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D#000000 size=3D3&gt;&gt; If=\r\n \nyou are writing one service, it is no big deal - its when there are more =\r\nthen a \nfew where you get a cumulative amount of complexity that \n&lt;/FONT&gt;&lt;/=\r\nFONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-1904=\r\n2006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT face=3D&quot;Times New R=\r\noman&quot; color=3D#000000 size=3D3&gt;&gt; \nstarts to get your attention.&lt;/FONT&gt;&lt;/=\r\nFONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-1904=\r\n2006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;Complexity doesn&#39;t accumu=\r\nlate when you have a uniform \ninterface. Any asynchronous system has more c=\r\nomplex interactions than \nsynchronous, but if the benefits outweigh the cos=\r\nts then it&#39;s a fine choice. \n&lt;/FONT&gt;&lt;/SPAN&gt;&lt;SPAN class=3D925403604-19042006=\r\n&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;I don&#39;t see how an asynchrono=\r\nus approach where the receiver returns a \ntoken to the sender is a poor app=\r\nroach or falls down - it&#39;s fairly common in \nmany messaging systems, not ju=\r\nst Web style systems. Using a Web Style means to \ncreate a common way to do=\r\n asynchronous interactions, likely using hyperlinks \n(that&#39;s the &quot;get an id=\r\n back&quot; part) or registering a callback (again, a form of \nhyperlinking). Th=\r\ne Atom publishing protocol is doing just this - defining how \ndocument exch=\r\nange can become asynchronous when building on top of synchronous \nrequest/r=\r\neply messages.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;=\r\n/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-1904=\r\n2006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&gt; &lt;FONT face=3D&quot;Times =\r\nNew Roman&quot; color=3D#000000 size=3D3&gt;For \n&quot;Async 1:1&quot;, you can do that with =\r\nWeb Style like Request/Reply. You do have to \ncontend with error cases, how=\r\never. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT fa=\r\nce=3D&quot;Times New Roman&quot; color=3D#000000 size=3D3&gt;&gt; And \n&quot;out of the box&quot; =\r\nyou don&#39;t get guaranteed delivery. You can&#39;t send the message \npersistently=\r\n so that you know that the send being ack&#39;d means \nsomething.&lt;/FONT&gt;&lt;/FONT&gt;=\r\n&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;=\r\n&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;Most messaging systems I&#39;ve wo=\r\nrked with that provide \nreliable or guaranteed delivery have APIs that look=\r\n suspiciously like &quot;post&quot;, \nand the API is a blocking call - quick, but sti=\r\nll blocking.&lt;/FONT&gt; &lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;=\r\n/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-1904=\r\n2006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&gt; &lt;FONT face=3D&quot;Times =\r\nNew Roman&quot; color=3D#000000 size=3D3&gt;How \nwould you do &quot;Async 1:M&quot;? This is =\r\nclassic pub/sub. A client sends 1 message and \nN subscribers listen to the =\r\nmessage. &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN clas=\r\ns=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;FONT f=\r\nace=3D&quot;Times New Roman&quot; color=3D#000000 size=3D3&gt;&gt; The \nclient has no id=\r\nea who is listening. I don&#39;t know of any way to do this w/o \nwriting a ton =\r\nof code.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;I have a=\r\n feeling you are talking about how to do this with \nHTTP, rather than how t=\r\no make pubsub more RESTful.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft=\r\n&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=\r\n=3D2&gt;You could just acquire a decent messaging middleware \nproduct and put =\r\nan HTTP server in front in order to post messages to the topics, \nthen defi=\r\nne the HTTP requests for consumers to retrieve messages - the trick is \nto =\r\ndefine how the consuming applications maintain state as to which messages \n=\r\nhave been processed.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN =\r\nclass=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;Her=\r\ne is a sample app I wrote a while back that does what \nyou are talking abou=\r\nt : &lt;A \nhref=3D&quot;http://www.searchalert.net:8080/dierken/events/chat.html?to=\r\npic=3Drest-discuss&quot;&gt;http://www.searchalert.net:8080/dierken/events/chat.htm=\r\nl?topic=3Drest-discuss&lt;/A&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;=\r\n&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=\r\n=3D2&gt;The underlying system holds messages here: &lt;/FONT&gt;&lt;FONT \nface=3DArial&gt;=\r\n&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff&gt;&lt;A \nhref=3D&quot;http://www.searchalert.net=\r\n:8080/xmlrouter/msgs/rest-discuss&quot;&gt;http://www.searchalert.net:8080/xmlroute=\r\nr/msgs/rest-discuss&lt;/A&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;\n&lt;DIV dir=3Dltr al=\r\nign=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#00=\r\n00ff size=3D2&gt;This is a working example of using HTTP to send 1 message \nan=\r\nd having N subscribers listen to the message. The publisher does not know w=\r\nhat \napplications will consume the messages. In addition, this particular e=\r\nxample \nalso shows two approaches to notification - polling for messages vi=\r\na following \nthe &#39;next&#39; link, and persistent connections for low latency de=\r\nlivery to \nsubscribers (when the &#39;next&#39; link falls off the end of the chain=\r\n, the server \nholds onto the request and doesn&#39;t send a response until ther=\r\ne are messages \nready). There is a client implemented via javascript within=\r\n the HTML page, but \nany programming language that can talk HTTP and parse =\r\nXML will do.&nbsp;This was \nwritten in just a few hours, but gives you the =\r\nidea of what is \npossible.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;=\r\n&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=\r\n=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D9=\r\n25403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&gt;&nbsp;&lt;F=\r\nONT face=3D&quot;Times New Roman&quot; color=3D#000000 \nsize=3D3&gt; How about &quot;Async 1:=\r\nM Request/Reply&quot;? This is when you send one message \nand get N responses. T=\r\nhis is pub/sub request reply.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr ali=\r\ngn=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#000=\r\n0ff size=3D2&gt;Are you sure you didn&#39;t mean N+1 \nresponses?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DI=\r\nV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=\r\n=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dlt=\r\nr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=\r\n=3D#0000ff size=3D2&gt;&gt;&nbsp;&lt;FONT face=3D&quot;Times New Roman&quot; color=3D#00000=\r\n0 \nsize=3D3&gt; Last one on my list is &quot;Async M:1&quot;. This is 1 service listenin=\r\ng to N \ndestinations / Topics for events.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV d=\r\nir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \n=\r\ncolor=3D#0000ff size=3D2&gt;This is the flip side of 1-N pubsub. The service e=\r\nither is \npro-actively notified (via a post in some language or protocol) o=\r\nr polls. A \nmiddle-ware service would allow this service to register &#39;route=\r\ns&#39; between topics \nso that the service only need to subscribe to one &#39;journ=\r\nal&#39; topic. There have \nbeen a few companies and open-source projects in the=\r\n past that did this with \npure HTTP. &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr al=\r\nign=3Dleft&gt;&lt;SPAN class=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#00=\r\n00ff size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN =\r\nclass=3D925403604-19042006&gt;&lt;FONT face=3DArial \ncolor=3D#0000ff size=3D2&gt;&lt;/F=\r\nONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;&lt;BR&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-LEFT: 5px; MARGIN=\r\n-LEFT: 5px; BORDER-LEFT: #0000ff 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV clas=\r\ns=3DOutlookMessageHeader lang=3Den-us dir=3Dltr align=3Dleft&gt;\n  &lt;HR tabInde=\r\nx=3D-1&gt;\n  &lt;FONT face=3DTahoma size=3D2&gt;&lt;B&gt;From:&lt;/B&gt; rest-discuss@yahoogroup=\r\ns.com \n  [mailto:rest-discuss@yahoogroups.com] &lt;B&gt;On Behalf Of \n  &lt;/B&gt;mherr=\r\nick66@...&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; Monday, April 17, 2006 11:14 \n  PM&lt;BR&gt;&lt;B&gt;To:&lt;=\r\n/B&gt; rest-discuss@yahoogroups.com&lt;BR&gt;&lt;B&gt;Subject:&lt;/B&gt; \n  [rest-discuss] REST =\r\n&amp; Internal Integration&lt;BR&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;/DIV&gt;&lt;TT&gt;Hi,\n  &lt;DIV=\r\n&gt;&lt;BR class=3Dkhtml-block-placeholder&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;I am not a REST expert, =\r\nbut definitely prefer it to SOAP &amp; WS-*. \n  &lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR class=3Dk=\r\nhtml-block-placeholder&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;I am participating in some future stat=\r\ne architecture planning and am \n  trying to see where REST fits. I&#39;m trying=\r\n to challenge some of my assumptions \n  so I am sending this email to this =\r\nlist. While I certainly prefer REST to \n  WS-*, I still don&#39;t think its the=\r\n best choice for internal integration within \n  a company.&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR=\r\n class=3Dkhtml-block-placeholder&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;As part of this architecture=\r\n planning we have identified some integration \n  categories that are common=\r\n to us:&lt;SPAN class=3DApple-style-span \n  style=3D&quot;LINE-HEIGHT: 18px&quot;&gt;&lt;BR&gt;&lt;/=\r\nSPAN&gt;&lt;/DIV&gt;\n  &lt;OL&gt;\n    &lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple-style-=\r\nspan face=3D&quot;Trebuchet MS&quot; \n    size=3D3&gt;&lt;SPAN class=3DApple-style-span sty=\r\nle=3D&quot;FONT-SIZE: 12px&quot;&gt;Sync \n    Request/Reply&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI style=\r\n=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple-style-span face=3D&quot;Trebuchet MS&quot; \n    =\r\nsize=3D3&gt;&lt;SPAN class=3DApple-style-span style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async \n  =\r\n  Request/Reply&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DA=\r\npple-style-span face=3D&quot;Trebuchet MS&quot; \n    size=3D3&gt;&lt;SPAN class=3DApple-sty=\r\nle-span style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async \n    1:1&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI styl=\r\ne=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple-style-span face=3D&quot;Trebuchet MS&quot; \n   =\r\n size=3D3&gt;&lt;SPAN class=3DApple-style-span style=3D&quot;FONT-SIZE: 12px&quot;&gt;Async \n =\r\n   1:M&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple-styl=\r\ne-span face=3D&quot;Trebuchet MS&quot; \n    size=3D3&gt;&lt;SPAN class=3DApple-style-span s=\r\ntyle=3D&quot;FONT-SIZE: 12px&quot;&gt;Async 1:M \n    Request/Reply&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI=\r\n style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple-style-span face=3D&quot;Trebuchet MS&quot;=\r\n \n    size=3D3&gt;&lt;SPAN class=3DApple-style-span style=3D&quot;FONT-SIZE: 12px&quot;&gt;Asy=\r\nnc \n    M:1&lt;/SPAN&gt;&lt;/FONT&gt;\n    &lt;LI style=3D&quot;MARGIN: 0px&quot;&gt;&lt;FONT class=3DApple=\r\n-style-span face=3D&quot;Trebuchet MS&quot; \n    size=3D3&gt;&lt;SPAN class=3DApple-style-s=\r\npan style=3D&quot;FONT-SIZE: 12px&quot;&gt;Batch \n    Feed&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;\n  &lt;DI=\r\nV&gt;I wrote a bit more on these and which ones I think can/should be done via=\r\n \n  REST and which ones shouldn&#39;t:&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;A \n  href=3D&quot;http://fuzzyp=\r\nanic.blogspot.com/2006/04/just-how-much-rest-web-style-are-we.html&quot;&gt;http://=\r\nfuzzypanic.blogspot.com/2006/04/just-how-much-rest-web-style-are-we.html&lt;/A=\r\n&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR class=3Dkhtml-block-placeholder&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;Please let=\r\n me know what you think.&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR class=3Dkhtml-block-placeholder&gt;&lt;=\r\n/DIV&gt;\n  &lt;DIV&gt;Thanks for your help,&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR class=3Dkhtml-block-pla=\r\nceholder&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;Mike Herrick&lt;/DIV&gt;\n  &lt;DIV&gt;Portland, OR&lt;/DIV&gt;&lt;/TT&gt;&lt;/B=\r\nODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_01C3_01C66336.3EE4E590--\r\n\n"}}