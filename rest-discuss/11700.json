{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":364579677,"authorName":"Mike","from":"Mike &lt;mike@...&gt;","profile":"pleb1985","replyTo":"SENDER","senderId":"_wNcMorwyRF5koUGzZhn_IAYBb3GwG4UxFzdlvgN0MvRXLkpwIvOCwC9M_5XRi5yjXHzgJRbVe52eKnoYNFGZQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: URI Format","postDate":"1228475054","msgId":11700,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MzkwQUFFLjgwMTA2MDJAbXlrYW5qby5jby51az4=","inReplyToHeader":"PDgxMTYyQjk2LUYxRkMtNDJEMS1CMDlDLTRGRTEzQzdERkU4QUBzdWJidS5vcmc+","referencesHeader":"PE9GNzI3QzA5MUYuQkQ3NUU5NTQtT044NTI1NzUxNS4wMDVBRTUyQS04NTI1NzUxNS4wMDVCMENDMkB1cy5pYm0uY29tPiA8ODExNjJCOTYtRjFGQy00MkQxLUIwOUMtNEZFMTNDN0RGRThBQHN1YmJ1Lm9yZz4="},"prevInTopic":11687,"nextInTopic":11701,"prevInTime":11699,"nextInTime":11701,"topicId":11671,"numMessagesInTopic":20,"msgSnippet":"... The browser scenario, to me, isn t a legitimate scenario. If a user is opening a URI with an UA for rendering HTML (like a browser), it should be","rawEmail":"Return-Path: &lt;mike@...&gt;\r\nX-Sender: mike@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 32957 invoked from network); 5 Dec 2008 11:03:58 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m48.grp.scd.yahoo.com with QMQP; 5 Dec 2008 11:03:58 -0000\r\nX-Received: from unknown (HELO moutng.kundenserver.de) (212.227.126.187)\n  by mta17.grp.scd.yahoo.com with SMTP; 5 Dec 2008 11:03:58 -0000\r\nX-Received: from [192.168.10.13] (evojsyfw02.evolve-online.com [213.133.221.98])\n\tby mrelayeu.kundenserver.de (node=mrelayeu2) with ESMTP (Nemesis)\n\tid 0MKwtQ-1L8YTT2Ole-0004Ny; Fri, 05 Dec 2008 12:03:56 +0100\r\nMessage-ID: &lt;49390AAE.8010602@...&gt;\r\nDate: Fri, 05 Dec 2008 11:04:14 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (X11/20081125)\r\nMIME-Version: 1.0\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Todd W Lainhart &lt;lainhart@...&gt;, rest-discuss@yahoogroups.com\r\nReferences: &lt;OF727C091F.BD75E954-ON85257515.005AE52A-85257515.005B0CC2@...&gt; &lt;81162B96-F1FC-42D1-B09C-4FE13C7DFE8A@...&gt;\r\nIn-Reply-To: &lt;81162B96-F1FC-42D1-B09C-4FE13C7DFE8A@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Provags-ID: V01U2FsdGVkX19M/llXyg+ClpukEmmTFLOxOGyTNFySUAVcYRR\n jHtnkInKXkt+fglDtR4YLEySCC82vMPJt92u6duN5PwardJZ9t\n ogsyhhZjoKV3iSeZlb69ADYjr840ljc\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mike &lt;mike@...&gt;\r\nSubject: Re: [rest-discuss] Re: URI Format\r\nX-Yahoo-Group-Post: member; u=364579677; y=rPRFsmPnegLspinDhkmI5K0GXLLJ2B1Jm5fN0-l_9w73JJU\r\nX-Yahoo-Profile: pleb1985\r\n\r\nSubbu Allamaraju wrote:\n&gt; This topic was discussed extensively few months ago and possibly  \n&gt; several times before that. Here is my summary\n&gt;\n&gt; 1. Do server-driven negotiation, i.e. using Accept* headers, and don&#39;t  \n&gt; forget to include a Vary header.\n&gt;\n&gt; 2. If needed (e.g. for the browser scenario you mention), support  \n&gt; agent-driven negotiation, i.e., by publishing media type specific URIs\n&gt;   \n\nThe browser scenario, to me, isn&#39;t a legitimate scenario. If a user is \nopening a URI with an UA for rendering HTML (like a browser), it should \nbe retrieving the HTML representation (as specified by a browser&#39;s \ndefault Accept header).\nIf the user requires the pdf representation, they should be opening the \nURI in a pdf reading UA (which should also be specified in its default \nAccept header).\n\nWhy should every request a user makes to a URI have to go via the browser?\n\nHaving said that:\n\nThere could be cases where an HTML GUI might wish to link the user&#39;s \nbrowser to another representation (that is not HTML) at a given URI. \nThis would require over-riding the browser default Accept header for \nthat request; something that is not currently supported in markup. \nBecause this over-ride is not supported, the only way to prevent the \nbrowser inappropriately requesting the default HTML is to create a \nspecific URI for each representation - e.g . /foo.xml or \n/foo?type=application/xml\n\ni.e. &lt;a href=&quot;/foo.xml&quot;&gt;foo in xml&lt;/a&gt;\n\nCreating extra URIs for individual representations this way can be \navoided, and the distinction between resources and representations kept \nconsistent, if the markup were to provide a standardized way to specify \nthe appropriate Accept* headers  for a given hyperlink like so:\n\n&lt;a href=&quot;/foo&quot; accept=&quot;application/xml&quot;&gt;foo in xml&lt;/a&gt;\n\nWhy can&#39;t agent-driven negotiation leverage the Accept headers?\n\n&gt; 3. Be aware of caching implications of (2) when the resource is read- \n&gt; write.\n&gt;   \n\nThis seems to me to be a very good reason not address representations at \na different URI, because of these problems it creates.\nThat, of course, assumes that the document in question is correctly \nidentified as a representation and is not actually a separate resource.\nIf it is a separate resource then it definitely needs its own URI, and \ncaching should not be a concern here.\n\n\n&gt; 4. If you are supporting both (1) and (2), when a client submits a  \n&gt; request with negotiation headers as in (1), return a Content-Location  \n&gt; header with a value containing media-type specific URI (such http://blah.org/blahbhal?format=xml)\n&gt;   \n\nThis works but, as you have admitted in your third point, it creates an \nambiguous distinction between resources and representations, and \ntherefore the significance of a URI. This forces intermediaries to be \naware of your application/implementation; is that considered a kind of \ncoupling?\n\nWhat I mean by this is that it is not clear to intermediaries whether \n/foo and /foo.xml and /foo.doc are the same or separate resources, and \nthis can only be assumed once the intermediary is taught the specifics \nof your implementation.\nThere is also ambiguity in how this URI -based conneg is actually \nimplemented because xyz application may use this dot notation, but abc \napplication may use something like /foo?type=xml or \n/foo?accept=application/xml\n\n&gt; PS: Conneg may be overrated. Although I see APIs serving XML and JSON,  \n&gt; there is no reason to always support multiple formats. It all depends  \n&gt; on the use cases and clientele.\n&gt;   \n\nI don&#39;t agree that it&#39;s over rated, I think it&#39;s extremely important. \nHaving a design which minimizes the costs involved in extending the \nformats you support and keeping this out of the URI design gives you \noptimal flexibility.\n\nRegards,\nMike\n\n"}}