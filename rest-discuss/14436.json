{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":248248154,"authorName":"Bruno Harbulot","from":"Bruno Harbulot &lt;Bruno.Harbulot@...&gt;","profile":"bruno_harbulot","replyTo":"SENDER","senderId":"pUxI4qvRQOvXwbx5BBoIpOoWzf_bPSclrzN-DZnA7ws8wgIHDZ_jaCkyljcgPt4iGgAoyJSiA9Yp6zyFPJDGOH8tesPEXQ4n18sMQcz5DG3ZV0tOd0yZ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: RESTful claims-based authorization","postDate":"1262214767","msgId":14436,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhoZ21wZiQ5cWQkMUBnZXIuZ21hbmUub3JnPg==","inReplyToHeader":"PDlBOTUzMDlBOTU3NTQwMTJCQzg3RTFGMEE4MjFGNTVDQEpyblBDPg==","referencesHeader":"IDw5QTk1MzA5QTk1NzU0MDEyQkM4N0UxRjBBODIxRjU1Q0BKcm5QQz4="},"prevInTopic":14426,"nextInTopic":14437,"prevInTime":14435,"nextInTime":14437,"topicId":14426,"numMessagesInTopic":4,"msgSnippet":"Hello Jørn, You could in principle define your own headers (or try to standardise some headers) to propagate SAML assertions (or similar tokens) in a RESTful","rawEmail":"Return-Path: &lt;Bruno.Harbulot@...&gt;\r\nX-Sender: Bruno.Harbulot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 83744 invoked from network); 30 Dec 2009 23:13:15 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 30 Dec 2009 23:13:15 -0000\r\nX-Received: from unknown (HELO lo.gmane.org) (80.91.229.12)\n  by mta3.grp.sp2.yahoo.com with SMTP; 30 Dec 2009 23:13:14 -0000\r\nX-Received: from list by lo.gmane.org with local (Exim 4.50)\n\tid 1NQ7j5-0001ow-3Z\n\tfor rest-discuss@yahoogroups.com; Thu, 31 Dec 2009 00:13:11 +0100\r\nX-Received: from rain.gmane.org ([80.91.229.7])\n        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 31 Dec 2009 00:13:11 +0100\r\nX-Received: from Bruno.Harbulot by rain.gmane.org with local (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 31 Dec 2009 00:13:11 +0100\r\nX-Injected-Via-Gmane: http://gmane.org/\r\nTo: rest-discuss@yahoogroups.com\r\nDate:  Thu, 31 Dec 2009 00:12:47 +0100\r\nLines: 84\r\nMessage-ID: &lt;hhgmpf$9qd$1@...&gt;\r\nReferences:  &lt;9A95309A95754012BC87E1F0A821F55C@JrnPC&gt;\r\nMime-Version:  1.0\r\nContent-Type:  text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding:  8bit\r\nX-Complaints-To: usenet@...\r\nX-Gmane-NNTP-Posting-Host: rain.gmane.org\r\nUser-Agent: Thunderbird 2.0.0.21 (Macintosh/20090302)\r\nIn-Reply-To: &lt;9A95309A95754012BC87E1F0A821F55C@JrnPC&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bruno Harbulot &lt;Bruno.Harbulot@...&gt;\r\nSubject: Re: RESTful claims-based authorization\r\nX-Yahoo-Group-Post: member; u=248248154; y=KThwHfujyg68nLOA-GROgrzDcIEua_QBrrhRbZkW0I_qsyO__yxJTXs\r\nX-Yahoo-Profile: bruno_harbulot\r\n\r\nHello J�rn,\n\nYou could in principle define your own headers (or try to standardise \nsome headers) to propagate SAML assertions (or similar tokens) in a \nRESTful way. Unfortunately, that&#39;s unlikely to work in browsers.\n\nEven SAML&#39;s HTTP Redirect (GET) Binding is often only a one-off thing \nthat can only be used to log in (and thus get a cookie), otherwise you&#39;d \nhave to repeat this query for all URIs you want to use (and thus change \nthe URI, since the query is part of the URI, strictly speaking).\n\nWe&#39;ve been doing some work on FOAF+SSL whereby you avoid the non-RESTful \nauthentication issue by using a TLS/SSL client-certificate for the \nauthentication (which is under the HTTP level), but for servers that \ndon&#39;t support SSL (or even the settings required for FOAF+SSL), we&#39;ve \nalso had to use some SSO-like login mechanism via cookies.\nThis being said, discovering the identity in FOAF+SSL is really where \nthis system makes use of REST: your ID is a URI (a WebID) than can be \ndereferenced and about which things can be said using RDF/semantic web.\n\n\nThe issue of using cookies for authentication/authorisation comes from \nthe lack of browser support (and standardisation) for other headers.\nI sometimes wish there were &#39;WWW-Authenticate: transport&#39; (or something \nsimilar, to make handling tokens out of HTTP like SSL client-certificate \ncleaner, and thus avoid some problems related to the TLS renegotiation \nissue) or &#39;WWW-Authenticate: token&#39; (to have clear \nauthentication-dedicated tokens, rather than cookies that are also used \nfor sessions), but they just don&#39;t exist in browser.\nWould it be worth suggesting this approach to the HTTP WG? Perhaps, but \nthere&#39;s little point doing so if the major browser vendors are not on \nboard. I presume most people consider that cookies are an acceptable \npractical solution, even if it breaks the REST principles.\n\n\nBest wishes,\n\nBruno.\n\n\nJ�rn Wildt wrote:\n&gt;  \n&gt; \n&gt; Is there any standard RESTful way of doing claims based authorization a&#39;la\n&gt; SAML and CardSpace? The authorization schemes I have seen so far usually\n&gt; encodes a user reference and nothing more - there&#39;s no secure way to assert\n&gt; claims like email=xxx@... &lt;mailto:email%3Dxxx%40yyy.zz&gt; or \n&gt; employeenumber=12345 or age-below-twenty.\n&gt; \n&gt; I guess you can use SAML &quot;HTTP Redirect (GET) Binding&quot;, but that generates\n&gt; such a huge URL that it seems impractical to use (it&#39;s a base-64 \n&gt; encoding of\n&gt; a zip-encoding of a SAML XML document).\n&gt; \n&gt; As I understand it a RESTful authorization scheme must be stateless, so you\n&gt; cannot rely on any kind of session use. This means you have to transfer all\n&gt; the claims on each and every request which again means a potentially big\n&gt; overhead.\n&gt; \n&gt; What is needed is a standard way of encoding multiple claims in a compact,\n&gt; secure, trusted way such that they can be transferred on each request\n&gt; without too much overhead (including whatever crypto stuff is needed).\n&gt; \n&gt; Maybe you could create a temporary ressource somewhere with the claims, \n&gt; then\n&gt; at least you only had to transfer the claims URL, not all the claims, and\n&gt; the server could then cache these claims.\n&gt; \n&gt; Any ideas or references?\n&gt; \n&gt; It even occurs to me that claims could be more RESTful than\n&gt; username/password since they don&#39;t require any out-of-band setup of user\n&gt; accounts. All that is needed is a standard for claims and then everything\n&gt; should work if the claims are issued by an authority that the web service\n&gt; trusts. No need for any human interaction - the server just sends a\n&gt; challenge &quot;show me your claims (and I accept them from authority X, Y and\n&gt; Z)&quot; whereafter the client sends the claims. These claims can even be\n&gt; obtained without human interaction if the client and the claims server \n&gt; trust\n&gt; each other.\n&gt; \n&gt; Comments?\n&gt; \n&gt; Thanks, J�rn\n\n\n"}}