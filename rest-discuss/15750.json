{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":343278744,"authorName":"Subbu Allamaraju","from":"Subbu Allamaraju &lt;subbu@...&gt;","profile":"sallamar","replyTo":"SENDER","senderId":"RvI-Hu5AUOuSaLR_z7KsUn2OKSf9IO4GkfWpLEhG2oR1w1TfNIq9bt81TEOi-oJ_WV4TQLVxz1y9BjWn9VuIF7kaAYhZM7vQ_w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Decompose resource?","postDate":"1277320655","msgId":15750,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDlBREQzODAyLTNFOEQtNDI1RC05NkE5LTcwQTQzQkQ3QUJBMUBzdWJidS5vcmc+","inReplyToHeader":"PEFBTkxrVGluMVFFZjBUR0h1WDlMbExOc1Q1SjhBTVl5akhrWDQwcnB4Nnh6UUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGluMVFFZjBUR0h1WDlMbExOc1Q1SjhBTVl5akhrWDQwcnB4Nnh6UUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15749,"nextInTopic":15751,"prevInTime":15749,"nextInTime":15751,"topicId":15746,"numMessagesInTopic":10,"msgSnippet":"If the query is not supposed to be permanent, use POST. When the query is not permanent and not repeated often, cacheability is not going to be an issue. If","rawEmail":"Return-Path: &lt;subbu@...&gt;\r\nX-Sender: subbu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 74704 invoked from network); 23 Jun 2010 19:17:39 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 23 Jun 2010 19:17:39 -0000\r\nX-Received: from unknown (HELO mail-pz0-f51.google.com) (209.85.210.51)\n  by mta1.grp.sp2.yahoo.com with SMTP; 23 Jun 2010 19:17:39 -0000\r\nX-Received: by pzk26 with SMTP id 26so167823pzk.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 23 Jun 2010 12:17:38 -0700 (PDT)\r\nX-Received: by 10.142.201.19 with SMTP id y19mr7725728wff.297.1277320658826;\n        Wed, 23 Jun 2010 12:17:38 -0700 (PDT)\r\nReturn-Path: &lt;subbu@...&gt;\r\nX-Received: from [192.168.0.193] (nat-dip6.cfw-a-gci.corp.yahoo.com [209.131.62.115])\n        by mx.google.com with ESMTPS id h18sm2285700wfg.1.2010.06.23.12.17.36\n        (version=SSLv3 cipher=RC4-MD5);\n        Wed, 23 Jun 2010 12:17:37 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v1081)\r\nContent-Type: text/plain; charset=iso-8859-1\r\nIn-Reply-To: &lt;AANLkTin1QEf0TGHuX9LlLNsT5J8AMYyjHkX40rpx6xzQ@...&gt;\r\nDate: Wed, 23 Jun 2010 12:17:35 -0700\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;9ADD3802-3E8D-425D-96A9-70A43BD7ABA1@...&gt;\r\nReferences: &lt;AANLkTin1QEf0TGHuX9LlLNsT5J8AMYyjHkX40rpx6xzQ@...&gt;\r\nTo: =?iso-8859-1?Q?D=E1rio_Abdulrehman?= &lt;dario.rehman@...&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Subbu Allamaraju &lt;subbu@...&gt;\r\nSubject: Re: [rest-discuss] Decompose resource?\r\nX-Yahoo-Group-Post: member; u=343278744; y=q-YoGtnu4hFnhD653SdQ1RKOXBeEH1J0LVS1hbrBhVXERPw\r\nX-Yahoo-Profile: sallamar\r\n\r\nIf the query is not supposed to be permanent, use POST. When the query is n=\r\not permanent and not repeated often, cacheability is not going to be an iss=\r\nue. If indeed cacheability is desired, create a stored query (as illustrate=\r\nd in http://my.safaribooksonline.com/9780596809140/142).\n\nSubbu\n\nOn Jun 23,=\r\n 2010, at 8:35 AM, D=E1rio Abdulrehman wrote:\n\n&gt; \n&gt; \n&gt; I have one resource =\r\nwhich is an algorithm that can receive a potentially large input, say, a th=\r\nousand arguments.\n&gt; GET my-algorithm?x1=3D1&x2=3D2....\n&gt; \n&gt; I encountered s=\r\nome problems due to URI length limits imposed by Web servers, even though t=\r\nhe HTTP protocol does not set any limits on GET request length.\n&gt; \n&gt; The ea=\r\nsiest solution is to expose the resource using POST instead of GET but this=\r\n violates REST principles, and the semantics of POST (I am using POST when =\r\nI mean GET).\n&gt; \n&gt; The other alternative is to divide the interaction in 2 s=\r\nteps:\n&gt; \n&gt; 1 - POST my-algorithm/args x1=3D1&x2=3D2....\n&gt;      This creates=\r\n a resource that represents the algorithm&#39;s arguments we want to pass:\n&gt;   =\r\n   201 Created\n&gt;      location: /my-algorithm/args/args-resource-1\n&gt; \n&gt; 2 -=\r\n GET /my-algorithm/args/args-resource-1\n&gt; \n&gt; This solution seems to be more=\r\n RESTful but I fear it will complicate the interaction and potentially brea=\r\nk statelessness (how long should the server keep the arguments just posted?=\r\n).\n&gt; I am really tempted to follow the first solution even though it violat=\r\nes REST principles because I don&#39;t see any drawbacks and it simplifies inte=\r\nraction.\n&gt; \n&gt; I would appreciate some comments and suggestions.\n&gt; \n&gt; Thank =\r\nyou.\n&gt; \n&gt; \n&gt; \n\n\n"}}