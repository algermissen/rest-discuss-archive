{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272750603,"authorName":"Duncan","from":"&quot;Duncan&quot; &lt;rest-discuss@...&gt;","profile":"duncan_b_cragg","replyTo":"SENDER","senderId":"BXMf3Kf_bPlD8tDzy3IJlCm6bnK8YJqlgIlw4BtIyI8pzObiRfsgtMFi24Vu8TOL90T72uyvFPCUrBShtQSnDa5DNn4HBY7z","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: How to design &quot;A follows B&quot;","postDate":"1300704749","msgId":17408,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGltN2FsZCs3bWFsQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEFBTkxrVGk9M0REdzEtUVRxLTI3OWFkQmdGbnoyYlcwQko4ZTl2RUptdmk0PUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17405,"nextInTopic":17409,"prevInTime":17407,"nextInTime":17409,"topicId":17404,"numMessagesInTopic":6,"msgSnippet":"I m currently building a little REST interface to Twitter, so this is interesting to me. ... Presumably the situation is that a Twitter client, run by A, wants","rawEmail":"Return-Path: &lt;rest-discuss@...&gt;\r\nX-Sender: rest-discuss@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 61176 invoked from network); 21 Mar 2011 10:52:31 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.sp2.yahoo.com with QMQP; 21 Mar 2011 10:52:31 -0000\r\nX-Received: from unknown (HELO n4-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.100)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Mar 2011 10:52:31 -0000\r\nX-Received: from [67.195.134.239] by n4.bullet.mail.sp2.yahoo.com with NNFMP; 21 Mar 2011 10:52:31 -0000\r\nX-Received: from [69.147.65.147] by t4.bullet.mail.sp2.yahoo.com with NNFMP; 21 Mar 2011 10:52:31 -0000\r\nX-Received: from [98.137.34.35] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 21 Mar 2011 10:52:31 -0000\r\nDate: Mon, 21 Mar 2011 10:52:29 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;im7ald+7mal@...&gt;\r\nIn-Reply-To: &lt;AANLkTi=3DDw1-QTq-279adBgFnz2bW0BJ8e9vEJmvi4=@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Duncan&quot; &lt;rest-discuss@...&gt;\r\nSubject: Re: How to design &quot;A follows B&quot;\r\nX-Yahoo-Group-Post: member; u=272750603; y=KcTxh-JNG6ipQYsrvisWnnnw7SYa8ScsPjIcbVgbBmBJF_BhiEpXOjY\r\nX-Yahoo-Profile: duncan_b_cragg\r\n\r\n\n\nI&#39;m currently building a little REST interface to Twitter, so this is int=\r\neresting to me.\n\n&gt; Had a couple of quick doubts regarding REST API design. =\r\nConsider a\n&gt; micro-blogging application like twitter where there are two us=\r\ners A\n&gt; and B. A wants to follow B. I was wondering what is the right way t=\r\no\n&gt; design it?\n&gt;\n&gt; 1. POST /B/followers (Send A&#39;s userid in the body)\n&gt; 2. =\r\nPUT /B/followers/A\n&gt; 3. POST /A/friends (Send B&#39;s userid in the body)\n&gt; 4. =\r\nPUT /A/friends/B\n&gt; 5. POST /relationships (Send A and B&#39;s userid in the bod=\r\ny)\n&gt;\n\nPresumably the situation is that a Twitter client, run by A, wants to=\r\n tell a Twitter &quot;service/API&quot; to record A&#39;s desire to follow B. So this cli=\r\nent has &#39;authority&#39; over A stuff, but not anything else; not anything about=\r\n B.\n\nSo it looks like &quot;3. POST /A/friends (Send B&#39;s userid in the body)&quot; is=\r\n the closest to what you need. The A-driven client expresses an intention t=\r\no create a new friendship with B, via a resource it has some authority over=\r\n, at least logically. POST is most often used for create in &quot;REST APIs&quot;. Yo=\r\nu don&#39;t PUT to a URL you made up yourself, as the server manages all that, =\r\nand what data are you PUTting? &quot;true&quot;? This isn&#39;t a real resource - it&#39;s ar=\r\ntificial! Finally, /relationships seems over-engineered or too vague to be =\r\nimplemented cleanly.\n\n&gt; Q2. I also learnt that URI&#39;s should be completely o=\r\npaque from the\n&gt; client&#39;s perspective.\n\nYes: the client knows just that the=\r\n URL &#39;/A/friends&#39; is its own collection of friends - it doesn&#39;t construct t=\r\nhis URL, it GETted it from the server at some point, perhaps when cacheing =\r\nA-related structures. Here&#39;s a hugely sketchy interaction:\n\nGET /A\n\n{ .. fr=\r\niends: &quot;/A/friends&quot;, ..}\n\nGET /A/friends\n\n[ /M, /F, .. ]\n\nPOST /A/friends\n\n=\r\n/B\n\nGET /A/friends\n\n[ /B, /M, /F, .. ]\n\nNotice that the /A/friends list is =\r\na list of actual (opaque!) URLs representing those users, and we POSTed B&#39;s=\r\n URL, not B&#39;s userid - we presumably fetched /B before deciding they were w=\r\northy of our friendship.\n\nThis is better than &quot;PUT /A/friends [ /B, /M, /F,=\r\n .. ]&quot;, as it allows you later to parameterise your friendships - if Twitte=\r\nr supports that:\n\nPOST /A/friends\n\n{ user: /B, relationship: brother, ratin=\r\ng: 5, last-chat: Mon 15th, .. }\n\nCreated\nContent-Location: /A/B-friendship\n=\r\n\nGET /A/friends\n\n[ /A/B-friendship, /A/M-friendship, /A/F-friendship, .. ]\n=\r\n\nPUT /A/B-friendship\n\n:\n\netc.\n\nCheers!\n\nDuncan\n\n\n\n"}}