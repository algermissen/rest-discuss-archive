{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":277681928,"authorName":"Andrew S. Townley","from":"&quot;Andrew S. Townley&quot; &lt;ast@...&gt;","profile":"adz1092","replyTo":"SENDER","senderId":"vDM7OSUsXUCimwqemD6LFn9DRABYMTrLsLcY1nTLfwC14cPxtheIhg5wveWorVI80Ua-RWHTw-fEguR5VwNA6znm65Ma8V3icsvs_Fc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Why HATEOAS?","postDate":"1238579477","msgId":12364,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyMzg1Nzk0NzcuNjE3MS41MS5jYW1lbEBsaW5uYT4=","inReplyToHeader":"PGY4YjM5YWNlMDkwMzMxMTc1OWwzY2JjZGFmNWoyZDkwZWU5NzJhMjJmNGFiQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMzMxMTcwMXg0YWRhYzAyZG8zNjliNWQ4NjE3MDBmNmU2QG1haWwuZ21haWwuY29tPgkgPGY4YjM5YWNlMDkwMzMxMTc1OWwzY2JjZGFmNWoyZDkwZWU5NzJhMjJmNGFiQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12363,"nextInTopic":12365,"prevInTime":12363,"nextInTime":12365,"topicId":12357,"numMessagesInTopic":27,"msgSnippet":"... [snip] ... Hi Chris, This was a great post.  I m looking at doing something similar for an application as well, but, having looked at the API for the Sun","rawEmail":"Return-Path: &lt;ast@...&gt;\r\nX-Sender: ast@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 68123 invoked from network); 1 Apr 2009 09:52:13 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by 98.137.34.37 with QMQP; 1 Apr 2009 09:52:13 -0000\r\nX-Received: from unknown (HELO valleyforge.networkredux.net) (64.128.80.17)\n  by mta1.grp.re1.yahoo.com with SMTP; 1 Apr 2009 09:52:13 -0000\r\nX-Received: from [193.95.165.195] (port=51833 helo=[172.17.99.13])\n\tby valleyforge.networkredux.net with esmtpsa (SSLv3:AES256-SHA:256)\n\t(Exim 4.63)\n\t(envelope-from &lt;ast@...&gt;)\n\tid 1Lox6J-0008Ek-Gk; Wed, 01 Apr 2009 02:51:16 -0700\r\nTo: craigmcc@...\r\nCc: Solomon Duskis &lt;sduskis@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nReferences: &lt;55c60e370903311701x4adac02do369b5d861700f6e6@...&gt;\n\t &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nContent-Type: text/plain\r\nDate: Wed, 01 Apr 2009 10:51:17 +0100\r\nMessage-Id: &lt;1238579477.6171.51.camel@linna&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.22.3.1 \r\nContent-Transfer-Encoding: 7bit\r\nX-AntiAbuse: This header was added to track abuse, please include it with any abuse report\r\nX-AntiAbuse: Primary Hostname - valleyforge.networkredux.net\r\nX-AntiAbuse: Original Domain - yahoogroups.com\r\nX-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]\r\nX-AntiAbuse: Sender Address Domain - atownley.org\r\nX-Source: \r\nX-Source-Args: \r\nX-Source-Dir: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Andrew S. Townley&quot; &lt;ast@...&gt;\r\nSubject: Re: [rest-discuss] Why HATEOAS?\r\nX-Yahoo-Group-Post: member; u=277681928; y=wihEZp8Br8fcdzTLaMOCYF_rCAIksChOT6e8DzotUddeZA\r\nX-Yahoo-Profile: adz1092\r\n\r\nOn Tue, 2009-03-31 at 17:59 -0700, Craig McClanahan wrote:\n&gt; On Tue, Mar 31, 2009 at 5:01 PM, Solomon Duskis &lt;sduskis@...&gt;\n&gt; wrote:\n&gt; \n&gt; &gt; [snip]\n&gt; &gt; Assuming that the practical barriers of entry are removed, what\n&gt; practical\n&gt; &gt; benefits will we see?\n&gt; &gt;\n&gt; \n&gt; I know exactly where you are coming from with these questions ... \n\n[snip]\n\nKey advantages:\n\n&gt; * REDUCED CLIENT CODING ERRORS.\n&gt; \n&gt; * REDUCED INVALID STATE TRANSITION CALLS. \n&gt; \n&gt; * FINE GRAINED EVOLUTION WITHOUT (NECESSARILY) BREAKING OLD CLIENTS.\n\n&gt; Having drunk the HATEOAS koolaid now, I would have a really hard time\n&gt; going back :-).\n\nHi Chris,\n\nThis was a great post.  I&#39;m looking at doing something similar for an\napplication as well, but, having looked at the API for the Sun Cloud, I\nwas planning on taking it a bit further.\n\nOne thing that I see missing is &quot;full disclosure&quot; of the operations\n(verbs) to be used as well as differentiation between actions vs.\ninformation.\n\nDon&#39;t get me wrong, I think the API you have is pretty good! :)\n\nHowever, the only way that I could think of doing what I&#39;m talking about\nwas to define some kind of envelope, or at least a series of elements\nthat were influenced by or imported directly the XHTML forms (and/or\npossibly XForms) elements to identify what actions were possible for a\ngiven resource.  That way, you&#39;d have the full HATEOAS in the message\nand the clients wouldn&#39;t have to know anything except how to interpret\nthe markup.  I guess I should also say that I&#39;m looking at XML\nrepresentations here rather than JSON.\n\nI was planning on posting some thoughts on this anyway, but the timing\nof this post was too good to pass up.\n\nWhat I was thinking was something like:\n\n&lt;ActionEnvelope&gt;\n &lt;Header&gt;\n  &lt;ActionList&gt;\n   &lt;Action id=&quot;action1&quot; href=&quot;uri&quot; method=&quot;POST&quot;&gt;Human readable description of the action here&lt;/Action&gt;\n   &lt;Action id=&quot;delete&quot; href=&quot;uri&quot; method=&quot;DELETE&quot;&gt;Delete this resource&lt;/Action&gt;\n   ...\n  &lt;/ActionList&gt;\n &lt;/Header&gt;\n &lt;Body&gt;\n  &lt;!-- any content can go here, and client processing will be based on\neither the elements or the namespace URI(s) used in the root child\nelement --&gt;\n &lt;/Body&gt;\n&lt;/ActionEnvelope&gt;\n\nNow, before everyone gets all fussy and says it&#39;s too much like SOAP, it\ntruly isn&#39;t.  The only thing in common is that it uses an envelope.\n\nThe other thing to note is that the total transitions available to the\nclient are the sum of any in-lined (like FORM submissions, regular\nhyperlink traversal, etc.) and then any of the other, &quot;meta&quot; actions\npossible for the system as a whole defined in the envelope&#39;s header.\n\nI went through several iterations of putting them in in the &quot;real&quot;\nresource vs. in the header, but this is where I&#39;m thinking at the\nmoment, because it allows you to easily process the resource for both\nhuman and machine interaction (the action list becomes a menu, for\nexample, if the ultimate user agent wants (X)HTML -- this can be\naccomplished a number of different ways).\n\nI was wondering if you guys went through this line of thinking with your\nAPI design and discarded it, or if it was deemed either unnecessary or\ntoo complicated.\n\nOf course, with this approach your automated user agent still needs to\nunderstand the semantics of the action id&#39;s, but this would be published\nas part of the API specification, separate from the specification for\nthe underlying content schema(s), and the inputs required would be fully\nsupplied after making the request defined by the action.\n\nThis isn&#39;t terribly efficient, because an editing operation for the\nresource might look like:\n\nStep 1) Get the resource URI\n\nStep 2) Process the resource XML, recording the actions\n\nStep 3) If an action with ID &quot;edit&quot; exists in the header, but no form\nexists in the body, make request for &quot;edit&quot; resource\n\nStep 4) Process the resource XML looking for &quot;resource editing&quot; mark-up\n(defined by the API spec, probably a normal FORM in the envelope body)\n\nStep 5) Supply available form values to be changed (also prevents\nchanging of read-only resource properties)\n\nStep 6) Submit FORM\n\nStep 7) Process HTTP server response\n\nGranted, this certainly not as efficient as:\n\n PUT /vms/33333\n Host: example.com\n Authorization: Basic xxxxxxxxxxxxxxxxxxx\n Accept: application/vnd.com.sun.cloud.VM+json\n Content-Length: nnn\n Content-Type: application/vnd.com.sun.cloud.VM+json\n X-Cloud-Client-Specification-Version: 0.1\n \n {\n   &quot;description&quot; : &quot;This is the new description&quot;\n }\n\nBut how does the user agent know it can do this from the original\nresource?\n\n HTTP/1.1 200 OK\n Content-Type: application/vnd.com.sun.cloud.VM+json\n Content-Length: nnn\n \n {\n   &quot;name&quot; : &quot;web01&quot;,\n   &quot;uri&quot; : &quot;http://example.com/vms/33333&quot;\n   &quot;run_status&quot; : &quot;RUNNING&quot;,\n   &quot;model_status&quot; : &quot;DEPLOYED&quot;,\n   &quot;description&quot; : &quot;This is the old description&quot;\n   ...\n   &quot;back_up&quot; : &quot;http://example.com/back-up?vm=33333&quot;\n   &quot;attach&quot; : &quot;http://example.com/attach?vm=33333&quot;,\n   &quot;detach&quot; : &quot;http://example.com/detach-ip?vm=33333&quot;,\n   ...\n }\n\nI realize the propsal above isn&#39;t perfect either, but it&#39;s really still\nin the embryonic phases at the moment.  However, I plan on actually\nworking through much of the detail over the next few months, so any\nfeedback (good, bad or otherwise) is welcome.\n\nThe Sun Cloud API is one of the more interesting ones that I&#39;ve seen\nrecently, and I&#39;m sure there&#39;s lots to learn from it.\n\nNice work.\n\nast\n--\nAndrew S. Townley &lt;ast@...&gt;\nhttp://atownley.org\n\n\n"}}