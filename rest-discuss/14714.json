{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"2d7uVs0IT3Z2nQva_KGF4sBPiIrbZwK-IJm7FW5wIBxfDuytIr1RM5SOTwk92ZaNtEj-kNmy92t7boBvt_C314oxFSpqk3c","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: RESTful Captcha and Statelessness","postDate":"1265048239","msgId":14714,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMjAxMTAxN3U3OWFhNmNjcGIwMGUwYzcyZWYzYjAxODhAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGhrNzQ2OCs2NXJ0QGVHcm91cHMuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTMwMTYzMGk2NTAxZWQ2ZXJlOTI1MDliODRjNjA2NzM3QG1haWwuZ21haWwuY29tPgkgPGhrNzQ2OCs2NXJ0QGVHcm91cHMuY29tPg=="},"prevInTopic":14701,"nextInTopic":14749,"prevInTime":14713,"nextInTime":14715,"topicId":14698,"numMessagesInTopic":6,"msgSnippet":"Jorge: Assume: - You have on file several hundred photos of animals to use as captcha tests. - You have stored metadata about the image including the animal","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98582 invoked from network); 1 Feb 2010 18:17:21 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 1 Feb 2010 18:17:21 -0000\r\nX-Received: from unknown (HELO mail-fx0-f224.google.com) (209.85.220.224)\n  by mta1.grp.sp2.yahoo.com with SMTP; 1 Feb 2010 18:17:21 -0000\r\nX-Received: by fxm24 with SMTP id 24so956144fxm.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 01 Feb 2010 10:17:20 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.74.154 with SMTP id u26mr4775999faj.88.1265048239336; Mon, \n\t01 Feb 2010 10:17:19 -0800 (PST)\r\nIn-Reply-To: &lt;hk7468+65rt@...&gt;\r\nReferences: &lt;b548df651001301630i6501ed6ere92509b84c606737@...&gt;\n\t &lt;hk7468+65rt@...&gt;\r\nDate: Mon, 1 Feb 2010 13:17:19 -0500\r\nX-Google-Sender-Auth: 7cb1a2b75313b5eb\r\nMessage-ID: &lt;b548df651002011017u79aa6ccpb00e0c72ef3b0188@...&gt;\r\nTo: Jorge &lt;george.news@...&gt;, rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: RESTful Captcha and Statelessness\r\nX-Yahoo-Group-Post: member; u=69164307; y=xN7XTXZtOz3L3bI8y51mrgsZKGiyJI_rD2CcyRTvPsxq\r\nX-Yahoo-Profile: mamund\r\n\r\nJorge:\n\nAssume:\n- You have on file several hundred photos of animals to use=\r\n as captcha tests.\n- You have stored metadata about the image including the=\r\n &quot;animal name&quot;\n(kitten, dog, buffalo, etc.) possibly  as EXIF w/ the file o=\r\nr some\nother storage medium.\n- You and the user-agent both support the HTML=\r\n media-type (for this example).\n- Upon request your server can select one o=\r\nf the images at random and\nassign it a unique URI based on a hash of the fi=\r\nlename and the\nrequesting user-agent header\n\nYour server can then respond t=\r\no requests for /i-am-human.html with a\nrepresentation that includes the URI=\r\n of the image as both an &lt;img /&gt;\ntag and a hidden input to be returned by t=\r\nhe user-agent. When the HTML\nFORM is posted, the server can validate the ha=\r\nsh to see if that photo\nexists and the offered text matches the photo on fi=\r\nle and, if it does,\nvalidate the captcha.\n\nThe HTTP conversation could go l=\r\nike this:\n\n*** REQUEST\nGET /i-am-human.html HTTP/1.1\nHost: www.example.org\n=\r\nAccept: text/html\nUser-Agent: common-browser/1.0\n\n*** RESPONSE\nHTTP/1.1 200=\r\n OK\nDate: ...\nServer: smart-server/9.0\n...\nContent-Type: text/html\nContent-=\r\nLength: nnn\n\n....\n&lt;form method=3D&quot;post&quot; action=3D&quot;http://www.example.org/pr=\r\nove-it&quot;&gt;\n  &lt;input type=3D&quot;hidden&quot; name=3D&quot;captcha-image&quot;\nvalue=3D&quot;http://ww=\r\nw.example.org/captcha-images/a1s2d3f4g5.png&quot; /&gt;\n  User Name: &lt;input type=3D=\r\n&quot;text&quot; name=3D&quot;user-name&quot; value=3D&quot;&quot; /&gt;\n  Animal:   &lt;input type=3D&quot;text&quot; na=\r\nme=3D&quot;captcha-animal&quot; value=3D&quot;&quot; /&gt;\n  &lt;img src=3D&quot;http://www.example.org/ca=\r\nptcha-images/a1s2d3f4g5.png&quot;\ntitle=3D&quot;What animal appears in this photo?&quot; /=\r\n&gt;\n  &lt;input type=3D&quot;submit&quot; /&gt;\n&lt;/form&gt;\n...\n\n\n*** REQUEST\nPOST /prove-it HTTP=\r\n/1.1\nHost: www.example.org\nContent-Type: application/x-www-form-urlencoded\n=\r\nUser-Agent: common-browser/1.0\n\ncaptcha-image=3Dhttp%3A%2F%2Fwww.example.or=\r\ng%2Fcaptcha-images%2Fa1s2d3f4g5.png&user-name=3DMike&captcha-animal=3Dkitte=\r\nn\n\n*** RESPONSE\nHTTP/1.1 400 Bad Request\nDate: ...\nServer: smart-server/9.0=\r\n\n...\nContent-Type: text/html\nContent-Length: nnn\n\n...\n&lt;p class=3D&quot;error&quot;&gt;So=\r\nrry, that was not a photo of a kitten. You must not\nbe human.&lt;/p&gt;\n...\n\nTher=\r\ne are lots of possible variations on this approach.\n\nmca\nhttp://amundsen.co=\r\nm/blog/\n\n\n\n\nOn Mon, Feb 1, 2010 at 12:48, Jorge &lt;george.news@...&gt; wrote=\r\n:\n&gt; Hi\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, mike amundsen &lt;mamund@...&gt; =\r\nwrote:\n&gt;&gt;\n&gt;&gt; How about this:\n&gt;&gt;\n&gt;&gt; When a person requests the representatio=\r\nn to fill out (the one w/ the\n&gt;&gt; captcha rendering)\n&gt;&gt; - generate a captcha=\r\n image and create a new resource for it\n&gt;&gt; (/captchas/a1s2d3f3g4)\n&gt;&gt; - in t=\r\nhe response representation, include an embed link (&lt;img /&gt;) to the\n&gt;&gt; gener=\r\nated captcha resource _and_ a hidden input that contains the same URI\n&gt;&gt;\n&gt;&gt;=\r\n When the user POSTs the representation back, it can include a pointer to t=\r\nhe\n&gt;&gt; captcha resource (from the hidden input) as well as the user&#39;s input =\r\ntext.\n&gt;&gt; You can use that pointer to validate the input text passed by the =\r\nuser.\n&gt;&gt;\n&gt;&gt; The images could be generated ahead of time or on deamand. The =\r\nURIs could be\n&gt;&gt; completely random or a hash of the actual captcha text to =\r\nshort-cut the\n&gt;&gt; validation process. The captcha URIs can be marked as sing=\r\nle-use and even\n&gt;&gt; limited time-valid to cut down on flooding, etc.\n&gt;\n&gt;\n&gt; C=\r\nould you please put how do you foreseen the resources?\n&gt;\n&gt; =A0POST --&gt; /cap=\r\ntchas =A0 =A0return =A0 /captchas/a1s2d3f3g4 with representation\n&gt;\n&gt; Then, =\r\nhow is the validation resource? and is it a POST, PUT,...?\n&gt;\n&gt; TA\n&gt;\n&gt;&gt; mca\n=\r\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Sat, Jan 30, 2010 at 10:07, Ale=\r\nxandros Marinos &lt;al3xgr@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; Hi All,\n&gt;&gt; &gt;\n&gt;&gt; &gt; I w=\r\nas wondering how you would implement a RESTful CAPTCHA solution,\n&gt;&gt; &gt; espec=\r\nially in the context of the strict interpretation of &#39;statelessness&#39;\n&gt;&gt; &gt; m=\r\nany on this list use. I would assume the &#39;naive&#39; solution would be to send\n=\r\n&gt;&gt; &gt; a hash of the answer to the user and then use both the hash (which the=\r\n user\n&gt;&gt; &gt; returns to the server) and the answer on the server side to see =\r\nif they\n&gt;&gt; &gt; match. But that exposes the server to replay attacks. The appr=\r\noach I would\n&gt;&gt; &gt; take (which violates the &#39;strict interpretation&#39; of state=\r\nlessness) would be\n&gt;&gt; &gt; to create a new resource for the captcha on the ser=\r\nver and compare the\n&gt;&gt; &gt; incoming answer with that, destroying the resource=\r\n when done.\n&gt;&gt; &gt;\n&gt;&gt; &gt; I am unsure what approach would satisfy both requirem=\r\nents. My intention for\n&gt;&gt; &gt; starting this discussion is not to inflame, but=\r\n to better understand the\n&gt;&gt; &gt; &#39;strict&#39; statelessness POV.\n&gt;&gt; &gt;\n&gt;&gt; &gt; Thanks=\r\n,\n&gt;&gt; &gt; Alexandros.\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n\n"}}