{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"UTE7euTb9N8X-pv10z9NZM5KF42A6sLntFfNdMdPlosTISKkMPwybgPBdRlxgJcSYQsrEjNXt4_E24YTqYwzsAXgUTn25pI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] RESTful Composition","postDate":"1281629736","msgId":16281,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlucFQrMmZWR04xaHBydHp2VnB4bThOWG93RGZzUT1rU3Jkek5QWUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlrNVJYVys9V1pKSnVGaXlRWjUyd3hnRG9vNTFhalJ4cUtxMDBRTkBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDkyMzUwNC4xODU5OC5xbUB3ZWIxMTA3MDYubWFpbC5ncTEueWFob28uY29tPgk8QUFOTGtUaWs1UlhXKz1XWkpKdUZpeVFaNTJ3eGdEb281MWFqUnhxS3EwMFFOQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":16279,"nextInTopic":16284,"prevInTime":16280,"nextInTime":16282,"topicId":16266,"numMessagesInTopic":8,"msgSnippet":" For the latter, the client gets code-on-demand representation from a server, and code-on-demand manages to get the resources representations from the ","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 10413 invoked from network); 12 Aug 2010 16:15:56 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m2.grp.sp2.yahoo.com with QMQP; 12 Aug 2010 16:15:56 -0000\r\nX-Received: from unknown (HELO mail-pz0-f49.google.com) (209.85.210.49)\n  by mta1.grp.sp2.yahoo.com with SMTP; 12 Aug 2010 16:15:56 -0000\r\nX-Received: by pzk3 with SMTP id 3so509336pzk.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Aug 2010 09:15:37 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.114.74.7 with SMTP id w7mr340641waa.85.1281629736581; Thu, 12\n Aug 2010 09:15:36 -0700 (PDT)\r\nX-Received: by 10.114.254.2 with HTTP; Thu, 12 Aug 2010 09:15:36 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTik5RXW+=WZJJuFiyQZ52wxgDoo51ajRxqKq00QN@...&gt;\r\nReferences: &lt;923504.18598.qm@...&gt;\n\t&lt;AANLkTik5RXW+=WZJJuFiyQZ52wxgDoo51ajRxqKq00QN@...&gt;\r\nDate: Thu, 12 Aug 2010 12:15:36 -0400\r\nX-Google-Sender-Auth: tEfDWeRUXJ_y1VhUgdIBQErGXnQ\r\nMessage-ID: &lt;AANLkTinpT+2fVGN1hprtzvVpxm8NXowDfsQ=kSrdzNPY@...&gt;\r\nTo: Dong Liu &lt;edongliu@...&gt;\r\nCc: Bryan Taylor &lt;bryan_w_taylor@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016364179a52f0008048da2ad85\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] RESTful Composition\r\nX-Yahoo-Group-Post: member; u=69164307; y=OfardVONvh9m61Jz0dULa7Jl95kp3JfT13W5Ld6gZuZK\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--0016364179a52f0008048da2ad85\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\n&lt;snip&gt;\nFor the latter, the client gets code-on-demand representation from a server,\nand code-on-demand manages to get the resources&#39; representations from the\ntwo domains and generates a new representation.\n&lt;/snip&gt;\n\nI often implement desktop and console apps that do &quot;client-side&quot; resolution\nof the URIs. This ability is &quot;built-in&quot; for the client and requires no\ncode-on-demand implementation.\n\nWhen I&#39;m in a hurry (e.g. doing a simple one-off app) I employ x:include[1]\nin the client. If it&#39;s something more involved, I simply define a media type\nthat contains an element that mimics that &quot;Link Embed&quot; [2] pattern of\nx:include, HTML&#39;s IMG, IFRAME, etc.\n\nI&#39;ve even used this same approach w/ common Browsers by designing a custom\nhypermedia format for the XML media type and using XSLT + code-on-demand[3]\n(trivial example, view source). That way, the &quot;messy parts&quot; are out-of-sight\nfor most developers.\n\n[1] http://www.w3.org/TR/xinclude/\n[2] http://amundsen.com/hypermedia/hfactor/#le\n[3] http://amundsen.com/hypermedia/examples/doc.xml\n\nmca\nhttp://amundsen.com/blog/\nhttp://mamund.com/foaf.rdf#me\n\nJoin me at #RESTFest 2010 Sep 17 & 18\nhttp://restfest.org\nhttp://restfest.org/workshop\n\n\nOn Thu, Aug 12, 2010 at 12:05, Dong Liu &lt;edongliu@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; I would like to implement the composition to mashup in this context.\n&gt;\n&gt; So one would have two choice, a server-side mashup and a client-side\n&gt; mashup.\n&gt;\n&gt; For the former approach, the server hosting the mashup needs to retrieve\n&gt; two resources&#39; representations from the two domains and generates a new\n&gt; resource.\n&gt;\n&gt; For the latter, the client gets code-on-demand representation from a\n&gt; server, and code-on-demand manages to get the\n&gt; resources&#39; representations from the two domains and generates a new\n&gt; representation.\n&gt;\n&gt; Cheers,\n&gt;\n&gt; Dong\n&gt;\n&gt; On Wed, Aug 11, 2010 at 10:07 PM, Bryan Taylor &lt;bryan_w_taylor@...&gt;wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m trying to figure out a RESTful way to do compositions. I managed to\n&gt;&gt; tie my\n&gt;&gt; head in a knot. Please untangle me.\n&gt;&gt;\n&gt;&gt; Suppose that I am trying to supply my clients with a RESTful way to send\n&gt;&gt; Christmas cards. I have access to a RESTful service that catalogs my\n&gt;&gt; friends.\n&gt;&gt; It&#39;s at http://yourfriends.example.com . It gives me a way to GET a\n&gt;&gt; person\n&gt;&gt; document defined by a person.xsd XML schema by linking from a page that\n&gt;&gt; lists my\n&gt;&gt; friends. This unfortunately doesn&#39;t have addresses, and I need my client\n&gt;&gt; to pick\n&gt;&gt; one of the addresses on file to send the card to. Fortunately, I know of\n&gt;&gt; another\n&gt;&gt; RESTful web service that does supply addresses for a person. There&#39;s even\n&gt;&gt; a link\n&gt;&gt; to it in the person XML. The links point to address.xsd documents\n&gt;&gt; generally\n&gt;&gt; hosted by http://addresses-galore.example.com\n&gt;&gt;\n&gt;&gt; Here&#39;s some approaches (m namespace is mine, the two above are p and a\n&gt;&gt; respectively):\n&gt;&gt;\n&gt;&gt; 1) I create representation like that shown below in my own new schema\n&gt;&gt; person-with-address.xsd\n&gt;&gt; &lt;m:person-with-address&gt;\n&gt;&gt; &lt;p:person ...&gt;...&lt;/p:person&gt;\n&gt;&gt; &lt;m:addresses&gt;\n&gt;&gt; &lt;a:address ...&gt;...&lt;/a:address&gt;\n&gt;&gt; ...\n&gt;&gt; &lt;/m:addresses&gt;\n&gt;&gt; &lt;/m:person-with-address&gt;\n&gt;&gt;\n&gt;&gt; 2) I notice that person.xsd is extensible and so I create my own compliant\n&gt;&gt;\n&gt;&gt; person.xsd documents like so\n&gt;&gt; &lt;p:person ...&gt;\n&gt;&gt; ...\n&gt;&gt; &lt;m:addresses&gt;\n&gt;&gt; &lt;a:address ...&gt;...&lt;/a:address&gt;\n&gt;&gt; ...\n&gt;&gt; &lt;/m:addresses&gt;\n&gt;&gt; &lt;/p:person&gt;\n&gt;&gt;\n&gt;&gt; 3) Suppose I take approach #2 and yourfriends.example.com notices and\n&gt;&gt; decides to\n&gt;&gt; host them. They wish to offer both representations (their original and my\n&gt;&gt; extension). Are these representations of the same or different resources?\n&gt;&gt; Is it\n&gt;&gt; reasonable for them to try to let users choose the thin or fat version of\n&gt;&gt; a\n&gt;&gt; person using content negotiation? If so, how can you differentiate these\n&gt;&gt; by a\n&gt;&gt; media type?\n&gt;&gt;\n&gt;&gt; Is there any issue here in solution 1 or 2 because I&#39;m constructing an\n&gt;&gt; application state as (a client of yourfriends and addresses-galore) that\n&gt;&gt; wasn&#39;t\n&gt;&gt; hypertext driven?\n&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt; \n\r\n--0016364179a52f0008048da2ad85\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;snip&gt;&lt;div&gt;&lt;div&gt;For the latter, the client gets code-on-demand repres=\r\nentation from a server, and code-on-demand manages to get the resources&#39=\r\n;=A0representations=A0from the two domains and generates a new representati=\r\non.=A0&lt;/div&gt;\n&lt;div&gt;&lt;/snip&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I often implement =\r\ndesktop and console apps that do &quot;client-side&quot; resolution of the =\r\nURIs. This ability is &quot;built-in&quot; for the client and requires no c=\r\node-on-demand implementation. =A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;When I&#39;m in=\r\n a hurry (e.g. doing a simple one-off app) I employ x:include[1] in the cli=\r\nent. If it&#39;s something more involved, I simply define a media type that=\r\n contains an element that mimics that &quot;Link Embed&quot; [2] pattern of=\r\n x:include, HTML&#39;s IMG, IFRAME, etc.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&#39;ve=\r\n even used this same approach w/ common Browsers by designing a custom hype=\r\nrmedia format for the XML media type and using XSLT + code-on-demand[3] (tr=\r\nivial example, view source). That way, the &quot;messy parts&quot; are out-=\r\nof-sight for most developers.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;[1]=A0&lt;a href=3D&quot;ht=\r\ntp://www.w3.org/TR/xinclude/&quot;&gt;http://www.w3.org/TR/xinclude/&lt;/a&gt;=A0&lt;/div&gt;&lt;d=\r\niv&gt;[2]=A0&lt;a href=3D&quot;http://amundsen.com/hypermedia/hfactor/#le&quot;&gt;http://amun=\r\ndsen.com/hypermedia/hfactor/#le&lt;/a&gt;&lt;/div&gt;&lt;div&gt;\n[3]=A0&lt;a href=3D&quot;http://amun=\r\ndsen.com/hypermedia/examples/doc.xml&quot;&gt;http://amundsen.com/hypermedia/exampl=\r\nes/doc.xml&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;mca&lt;br&gt;&lt;a href=3D&quot;http://amundsen.com/bl=\r\nog/&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://mamund.com/foaf.rdf=\r\n#me&quot;&gt;http://mamund.com/foaf.rdf#me&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nJoin me at #RESTFest 2010 S=\r\nep 17 &amp; 18&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;http://restfest.org&quot;&gt;http://restfest.or=\r\ng&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;http://restfest.org/workshop&quot;&gt;http://restfest.or=\r\ng/workshop&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;\nOn Thu, Aug 12=\r\n, 2010 at 12:05, Dong Liu &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:edongliu@=\r\ngmail.com&quot;&gt;edongliu@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D=\r\n&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=\r\n-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n        \n\n\n\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\nI would like to im=\r\nplement the composition to mashup in this context.=A0&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So=\r\n one would have two choice, a server-side mashup and a client-side mashup.=\r\n=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For the former approach, the server hosting th=\r\ne mashup needs to retrieve two resources&#39; representations from the two =\r\ndomains and generates a new resource.=A0&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For the=\r\n latter, the client gets code-on-demand representation from a server, and c=\r\node-on-demand manages to get the resources&#39;=A0representations=A0from th=\r\ne two domains and generates a new representation.=A0&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font color=3D&quot;#888888&quot;&gt;&lt;div&gt;Dong=A0&lt;/div&gt;=\r\n&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote=\r\n&quot;&gt;On Wed, Aug 11, 2010 at 10:07 PM, Bryan Taylor &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a h=\r\nref=3D&quot;mailto:bryan_w_taylor@...&quot; target=3D&quot;_blank&quot;&gt;bryan_w_taylor@ya=\r\nhoo.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n\n\n\n\n=\r\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div=\r\n&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;I&#39;m trying to figure out a RESTful=\r\n way to do compositions. I managed to tie my &lt;br&gt;\nhead in a knot. Please un=\r\ntangle me.&lt;br&gt;\n&lt;br&gt;\nSuppose that I am trying to supply my clients with a RE=\r\nSTful way to send &lt;br&gt;\nChristmas cards. I have access to a RESTful service =\r\nthat catalogs my friends. &lt;br&gt;\nIt&#39;s at &lt;a href=3D&quot;http://yourfriends.ex=\r\nample.com&quot; target=3D&quot;_blank&quot;&gt;http://yourfriends.example.com&lt;/a&gt; . It gives =\r\nme a way to GET a person &lt;br&gt;\ndocument defined by a person.xsd XML schema b=\r\ny linking from a page that lists my &lt;br&gt;\nfriends. This unfortunately doesn&=\r\n#39;t have addresses, and I need my client to pick &lt;br&gt;\none of the addresse=\r\ns on file to send the card to. Fortunately, I know of another &lt;br&gt;\nRESTful =\r\nweb service that does supply addresses for a person. There&#39;s even a lin=\r\nk &lt;br&gt;\nto it in the person XML. The links point to address.xsd documents ge=\r\nnerally &lt;br&gt;\nhosted by &lt;a href=3D&quot;http://addresses-galore.example.com&quot; targ=\r\net=3D&quot;_blank&quot;&gt;http://addresses-galore.example.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nHere&#39;s s=\r\nome approaches (m namespace is mine, the two above are p and a &lt;br&gt;\nrespect=\r\nively):&lt;br&gt;\n&lt;br&gt;\n1) I create representation like that shown below in my own=\r\n new schema &lt;br&gt;\nperson-with-address.xsd&lt;br&gt;\n  &lt;m:person-with-address&gt=\r\n;&lt;br&gt;\n    &lt;p:person ...&gt;...&lt;/p:person&gt;&lt;br&gt;\n    &lt;m:addresses&=\r\ngt;&lt;br&gt;\n      &lt;a:address ...&gt;...&lt;/a:address&gt;&lt;br&gt;\n      ...&lt;br&gt;\n=\r\n    &lt;/m:addresses&gt;&lt;br&gt;\n  &lt;/m:person-with-address&gt;&lt;br&gt;\n&lt;br&gt;\n2) I=\r\n notice that person.xsd is extensible and so I create my own compliant &lt;br&gt;=\r\n\nperson.xsd documents like so&lt;br&gt;\n  &lt;p:person ...&gt;&lt;br&gt;\n    ...&lt;br&gt;\n  =\r\n  &lt;m:addresses&gt;&lt;br&gt;\n      &lt;a:address ...&gt;...&lt;/a:address&gt;&lt;=\r\nbr&gt;\n      ...&lt;br&gt;\n    &lt;/m:addresses&gt;&lt;br&gt;\n  &lt;/p:person&gt;&lt;br&gt;\n&lt;br&gt;=\r\n\n3) Suppose I take approach #2 and &lt;a href=3D&quot;http://yourfriends.example.co=\r\nm&quot; target=3D&quot;_blank&quot;&gt;yourfriends.example.com&lt;/a&gt; notices and decides to &lt;br=\r\n&gt;\nhost them. They wish to offer both representations (their original and my=\r\n &lt;br&gt;\nextension). Are these representations of the same or different resour=\r\nces? Is it &lt;br&gt;\nreasonable for them to try to let users choose the thin or =\r\nfat version of a &lt;br&gt;\nperson using content negotiation? If so, how can you =\r\ndifferentiate these by a &lt;br&gt;\nmedia type?&lt;br&gt;\n&lt;br&gt;\nIs there any issue here =\r\nin solution 1 or 2 because I&#39;m constructing an &lt;br&gt;\napplication state a=\r\ns (a client of yourfriends and addresses-galore) that wasn&#39;t &lt;br&gt;\nhyper=\r\ntext driven?&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:=\r\n#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;\n\n\n\n\n\n\n&lt;br&gt;\n\n    \n    \n&lt;br&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;colo=\r\nr:white;clear:both&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--0016364179a52f0008048da2ad85--\r\n\n"}}