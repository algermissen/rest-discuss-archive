{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"XtMTWUf3NToN8a4xFgyG61PIgDFOGsZ_njPcsduxZTmrDdnOSVhP3fC97F8yzWN6b81VzmKIeu3YDBZOj2J99kd9grL8z6Qm25kPlTypyw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: REST and HATEOAS in the context of native applications?","postDate":"1311890027","msgId":17639,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwNzI4MTU1MzQ3LjRiYmYwNmIyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PENBK0NFNllWRUJoeW9xPXArbjdFZGpIWFFnMkpUVGp4OE5pTDFWMFVSYz04TnJ0YVNlUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPgk8ajBzNXR2K2Q1am9AZUdyb3Vwcy5jb20+CTwyMDExMDcyODEyMzYzOS45NzRjMTFlOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxDQStDRTZZVkVCaHlvcT1wK243RWRqSFhRZzJKVFRqeDhOaUwxVjBVUmM9OE5ydGFTZVFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":17638,"nextInTopic":17640,"prevInTime":17638,"nextInTime":17640,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"... I ve found the semantics of HTML quite useful in a variety of contexts; for example,  and  are universally understood methods of presenting lists","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 8638 invoked from network); 28 Jul 2011 21:53:58 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.sp2.yahoo.com with QMQP; 28 Jul 2011 21:53:58 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 28 Jul 2011 21:53:58 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id A469E50A64;\n\tThu, 28 Jul 2011 17:53:57 -0400 (EDT)\r\nDate: Thu, 28 Jul 2011 15:53:47 -0600\r\nTo: Daniel Roussel &lt;daniel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20110728155347.4bbf06b2.eric@...&gt;\r\nIn-Reply-To: &lt;CA+CE6YVEBhyoq=p+n7EdjHXQg2JTTjx8NiL1V0URc=8NrtaSeQ@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt;\n\t&lt;j0s5tv+d5jo@...&gt;\n\t&lt;20110728123639.974c11e8.eric@...&gt;\n\t&lt;CA+CE6YVEBhyoq=p+n7EdjHXQg2JTTjx8NiL1V0URc=8NrtaSeQ@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: REST and HATEOAS in the context of native\n applications?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nDaniel Roussel wrote:\n&gt;\n&gt; No offense, sincerely, but I disagree.  HTML is a content-type meant\n&gt; to be rendered by a web browser and its semantics are of (almost) no\n&gt; use for any application other then a web browser.\n&gt;\n\nI&#39;ve found the semantics of HTML quite useful in a variety of contexts;\nfor example, &lt;ul&gt; and &lt;ol&gt; are universally understood methods of\npresenting lists of &#39;stuff&#39; with specific semantics (whether or not\ntheir order is important); &lt;table&gt; is quite useful for serializing\narrays.  So I can model many custom data types using HTML media types,\nand have it understood perfectly well by non-browser consumers using\nstandard libraries commonly found all over the Web.\n\n&gt;\n&gt; Parsing web pages to drive a native iPhone or Android app is not a\n&gt; sensible choice at all.\n&gt; \n\nOTOH, what I see as not sensible, is for these native apps to re-invent\nvarious wheels like buttons, which could just as easily have been\nimplemented using standard markup.  As I am unfamiliar with such apps,\nI don&#39;t know whether they&#39;re REST or anti-REST, though.\n\n&gt;\n&gt; And the choice of html, json or xml is only an issue of resource\n&gt; representation.\n&gt;\n\nNot really.  I know how to make hyperlinks universally understood in\nHTML media types, as every component out there groks the semantics of\n&lt;a&gt; and &lt;link/&gt;, but I don&#39;t know of any universally understood linking\nsemantics for JSON; XML supports XInclude and XLink but not &lt;a&gt; or\n&lt;link/&gt;, so I choose a media type with semantics which match my needs.\n\n&gt;\n&gt; A resource can have many different representation, that for sure is\n&gt; permitted.  There is nothing about renting a room which can&#39;t be\n&gt; expressed in english, but I would not send a wav file either.\n&gt;\n\nFor exactly the same reasons that sending it as JSON makes no sense --\nlack of semantics in the representation.  REST&#39;s hypertext constraint\nis all about those semantics -- .wav files have no hypertext semantics,\nwhich is why they&#39;re a poor choice for driving application state.  I&#39;m\nnot saying JSON has no place in REST, only that at the present time,\nit&#39;s a poor choice for driving application state.\n\n&gt;\n&gt; Even more, using mime-type is necessary because we are using HTTP as\n&gt; our protocol, I&#39;m sure we could create a brand new protocol and a\n&gt; different way of defining messages and it could still be RESTful.\n&gt; \n\nActually, the use of Internet Media Types is required by REST regardless\nof protocol; this doesn&#39;t mean the syntax of the identifier has to be\nthe same as it appears in the IANA registry, but HTML should still be\nHTML regardless of what protocol it&#39;s served with.\n\n&gt;\n&gt; As for cacheability, the constraint is that resource must be\n&gt; cacheable by the client.\n&gt;\n\nREST requires the cacheability of representations to be explicitly\nstated, says nothing about client-cacheable=REST.  The difference is\nbetween having a library-based API (where intermediaries cannot\nparticipate in the communication) and a network-based API (where\nintermediaries can and do participate), with the latter being the whole\npoint of REST as a style; if no intermediaries grok the representation\nand most won&#39;t cache it since the media type is unknown, the essence of\nREST is missing.\n\n&gt;\n&gt; The way I interpret this, is that my application should be able to\n&gt; cache a room representation if marked as being cacheable.  REST is an\n&gt; architectural style, it does not mandate the use of any protocol or\n&gt; data type, merely how to model a system.\n&gt; \n\nAs a network-based API, meaning intermediaries must also be able to\nparticipate, which they can&#39;t do if they&#39;re unfamiliar with the\nsemantics of the representation.  Shoe-horning things into HTML, Atom\netc. brings about benefits which offset the awkwardness of such\nimplementations, such benefits do not accrue when using library-based\nAPIs.\n\n-Eric\n\n"}}