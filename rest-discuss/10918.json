{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":248248154,"authorName":"Bruno Harbulot","from":"Bruno Harbulot &lt;Bruno.Harbulot@...&gt;","profile":"bruno_harbulot","replyTo":"SENDER","senderId":"wDBA9_f7A3bs3T0bNQEXDxuZh_op31jYxVKprKkodEzdjaYHmNtWhpBlXOAAaO8gFLtNfLN1fwBMRW6M0zRWEMqcfIuqiXzN0Iz__X8NxuHt_yY9g9Nf","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Pretty URLs, sessions, and no cookies","postDate":"1213177874","msgId":10918,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGcybzc2aSRra2okMUBnZXIuZ21hbmUub3JnPg==","inReplyToHeader":"PDIwMDgwNjExMDkzNi4yNTczMS5taWNoYWVsQHNjaHVlcmlnLmRlPg==","referencesHeader":"IDwyMDA4MDYxMDE1MDMuNDc3NTMubWljaGFlbEBzY2h1ZXJpZy5kZT4gPDIwMDgwNjExMDIyNi40NzUyNS5taWNoYWVsQHNjaHVlcmlnLmRlPiA8MjAwODA2MTEwNjI2MzEuR1QyNTQzM0BrbGFuZ3JhdW0ucGxhc21hc3R1cm0ub3JnPiA8MjAwODA2MTEwOTM2LjI1NzMxLm1pY2hhZWxAc2NodWVyaWcuZGU+"},"prevInTopic":10917,"nextInTopic":10919,"prevInTime":10917,"nextInTime":10919,"topicId":10886,"numMessagesInTopic":28,"msgSnippet":"... I m not sure why you re so against cookies. They usually conflict with the stateless interactions principle, but in this case you have little choice. ... ","rawEmail":"Return-Path: &lt;Bruno.Harbulot@...&gt;\r\nX-Sender: Bruno.Harbulot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63549 invoked from network); 11 Jun 2008 09:51:33 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m46.grp.scd.yahoo.com with QMQP; 11 Jun 2008 09:51:33 -0000\r\nX-Received: from unknown (HELO ciao.gmane.org) (80.91.229.2)\n  by mta15.grp.scd.yahoo.com with SMTP; 11 Jun 2008 09:51:33 -0000\r\nX-Received: from list by ciao.gmane.org with local (Exim 4.43)\n\tid 1K6MzE-0003Zq-EK\n\tfor rest-discuss@yahoogroups.com; Wed, 11 Jun 2008 09:51:24 +0000\r\nX-Received: from rain.gmane.org ([80.91.229.7])\n        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 11 Jun 2008 09:51:24 +0000\r\nX-Received: from Bruno.Harbulot by rain.gmane.org with local (Gmexim 0.1 (Debian))\n        id 1AlnuQ-0007hv-00\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 11 Jun 2008 09:51:24 +0000\r\nX-Injected-Via-Gmane: http://gmane.org/\r\nTo: rest-discuss@yahoogroups.com\r\nDate:  Wed, 11 Jun 2008 10:51:14 +0100\r\nLines: 117\r\nMessage-ID: &lt;g2o76i$kkj$1@...&gt;\r\nReferences:  &lt;200806101503.47753.michael@...&gt; &lt;200806110226.47525.michael@...&gt; &lt;20080611062631.GT25433@...&gt; &lt;200806110936.25731.michael@...&gt;\r\nMime-Version:  1.0\r\nContent-Type:  text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding:  8bit\r\nX-Complaints-To: usenet@...\r\nX-Gmane-NNTP-Posting-Host: rain.gmane.org\r\nUser-Agent: Thunderbird 2.0.0.14 (Macintosh/20080421)\r\nIn-Reply-To: &lt;200806110936.25731.michael@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Bruno Harbulot &lt;Bruno.Harbulot@...&gt;\r\nSubject: Re: Pretty URLs, sessions, and no cookies\r\nX-Yahoo-Group-Post: member; u=248248154; y=ugLCpGaJeC1I6Tq2pJe-i-2TKeHAW6tJeopLbw2K3g4rMdZcR1LBj7w\r\nX-Yahoo-Profile: bruno_harbulot\r\n\r\n\n\nMichael Schuerig wrote:\n&gt; \n&gt; \n&gt; On Wednesday 11 June 2008, Aristotle Pagaltzis wrote:\n&gt;  &gt; &gt; Authentication information is usually enough.\n&gt;  &gt;\n&gt;  &gt; Then you donâ€™t need to store anything on the server. There is no\n&gt;  &gt; need for a session at all. Either use HTTP Auth or, in case you\n&gt;  &gt; are talking to a browser, use a cookie like this:\n&gt; \n&gt; I don&#39;t want to use a cookie, that&#39;s more or less the whole point of my\n&gt; original message. I know how to get what I want with a cookie, my\n&gt; question is, whether I can get the same result without a cookie.\n\nI&#39;m not sure why you&#39;re so against cookies. They usually conflict with \nthe stateless interactions principle, but in this case you have little \nchoice.\n\n\nTo quote your original message:\n&gt; I&#39;m looking for a way to have my cake and eat it: pretty and public\n&gt; URLs, no cookies or javascript required, and sessions nevertheless.\n\nI&#39;m assuming, with all this, that you want it to work from most major \nbrowsers, without any plugin.\n\n\nObviously, authentication requires that you be able to send some \ninformation as part of your request.\n\nAs it&#39;s been said before, you get 3 ways to do it: in the URI, in HTTP \nAuth or in a cookie.\n\n1. As part of the URI.\n\nYou could in principle send representations that contain URI specially \ncrafted for the authenticated user (using a token in the query for \nexample). Somehow, this would probably be the most RESTful but have a \nnumber of downsides and change the meaning of your application. You \nwould no longer interact with resource &quot;X&quot; identified by URI &quot;http://x&quot;, \nbut with resource &quot;X when authenticated using A&quot; identified by URI \n&quot;http://x?auth=a&quot; (or some other way to put &#39;a&#39; in the URI). There&#39;s a \nnumber of downsides with that, mainly because you would have to make \nthese URIs (with an authentication token) short-lived to enforce some \nsort of security (which would be limited anyway). What you could do, \nhowever, is to change the state of resource &quot;http://x?auth=a&quot; when the \nuser authentication token has expired so that its returns a \nrepresentation it returns a representation that invites the user to log in.\nThis wouldn&#39;t be my favourite solution, since it is likely to imply so \ntangling of the application code with the authentication code on the \nserver and also make the representations the client obtains only usable \nfor a limited amount of time.\n\n\n2. Using HTTP authentication (WWW-Authenticate/Authorization headers).\n\nThis would be the cleanest way. Unfortunately, you don&#39;t seem to want it \nbecause you don&#39;t like the dialog box that would appear. I&#39;m yet to find \nany user critically injured by such a box, but there are reasons indeed \nfor not wanting them:\n- corporate identity and style of the web-site: this could potentially \nbe overcome by leading your user to the protected pages via a \nnon-protected page that would have the pretty background and logos you \nwant and that would say: &quot;you&#39;re going to be prompted for your \npassword&quot;. It&#39;s really cosmetic, but it may matter.\n- offering the user the possibility to reset their password: nothing \nprevents you from putting a link to such a page in the representation \nreturned with a &quot;401 Unauthorized&quot; or &quot;403 Forbidden&quot; if they&#39;ve \ncancelled the dialog box or used a wrong password.\n\nYou could also use something like SPNEGO instead of Basic/Digest \nauthentication, but that requires some control over the environment in \nwhich the browser runs, to set up Kerberos/Active Directory.\n\nAs far as I know, these are the only mechanisms that are supported \nacross a wide range of browsers. There are other HTTP Auth mechanisms, \nunfortunately, they&#39;re unlikely to be supported out of the box by most \nbrowsers. You could potentially emulate them via Ajax tricks, but you \nsaid you didn&#39;t want any JavaScript.\n\n\n3. Using a cookie.\n\nThe only way most browsers support the addition of custom metadata \n(authentication is metadata, whether using HTTP Auth or cookie or \nanother header) is via cookies. You seem to say from another message \nthat the main reason against it is that users don&#39;t want to allow cookies.\n\nI&#39;m a bit lost on that last point, and how it seems to conflict with not \nusing dialog authentication boxes:\n   a) If your users insist on the prettiness/corporate identity of the \nwebsite to have authentication forms because that&#39;s what everyone does \nand it looks trendy, that&#39;s fair enough. However, users who are used to \nthis certainly allow cookies on a regular basis (knowingly or not).\n   b) If your users have been taught how to deal with cookies (perhaps \nnot appropriately, cookies are not necessarily &quot;evil&quot;), surely they&#39;ll \nbe able to understand how a Basic/Digest authentication dialog box works.\n\n\nAnother way, which is supported by most browsers, would be to use \nclient-side certificates for SSL authentication. This works well, but \ndeploying a PKI is not trivial and also requires to train users to \nhandle their private keys and certificates with appropriate care.\n\n\n\nI&#39;d use cookies in the short term and try to lobby browser vendors and \ntalk with organisations like IETF to support other HTTP authentication \nschemes (perhaps something like &quot;WWW-Authenticate: Form ...&quot;) in the \nlong term, if you have some spare time...\n\n\nBest wishes,\n\nBruno.\n\n\n"}}