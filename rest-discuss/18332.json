{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211647110,"authorName":"Alexander Johannesen","from":"Alexander Johannesen &lt;alexander.johannesen@...&gt;","profile":"shelterit","replyTo":"SENDER","senderId":"GU-7nwCm6tTJkSVTDXCWFGGWuqiz7XlodW_4AY6RYsRBGAdS5p3BxLF9kns_x4wrVPcBc9UGleHSuuIFy0VlU8mUcw9zheEWw73QhcceR6Fmks5GiCYnMn33ZtI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme","postDate":"1325598230","msgId":18332,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRjg5YkNBVHpOSFNhVTExPWliT05CN3RIcFUtRHloY0F1dDJqdlV2bkZyZEdHMFd5d0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBTnFpWkpZVTlkPTJxaytaNmhNOW45SGdKdERFdzhkUVpYcVpwQm90bjJRdnZIdHYxd0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBRjg5YkNBTmJaRmM5eHduckF4OHJ0NEY3NT1PU3VRVm9XSmZZMWRlSnIrdUpGejBEZ0BtYWlsLmdtYWlsLmNvbT4JPENBTnFpWkpZVTlkPTJxaytaNmhNOW45SGdKdERFdzhkUVpYcVpwQm90bjJRdnZIdHYxd0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18331,"nextInTopic":18333,"prevInTime":18331,"nextInTime":18333,"topicId":18183,"numMessagesInTopic":245,"msgSnippet":"... Ahem, I think you re responding a bit fast. :)  My point was exactly this; in REST, there are no semantics to specific requests any more than to generic","rawEmail":"Return-Path: &lt;alexander.johannesen@...&gt;\r\nX-Sender: alexander.johannesen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21482 invoked from network); 3 Jan 2012 13:44:17 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 3 Jan 2012 13:44:17 -0000\r\nX-Received: from unknown (HELO mail-ee0-f46.google.com) (74.125.83.46)\n  by mta3.grp.sp2.yahoo.com with SMTP; 3 Jan 2012 13:44:17 -0000\r\nX-Received: by eekc4 with SMTP id c4so15895662eek.19\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 03 Jan 2012 05:43:50 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.213.32.202 with SMTP id e10mr6386710ebd.25.1325598230577; Tue,\n 03 Jan 2012 05:43:50 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Tue, 3 Jan 2012 05:43:50 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Tue, 3 Jan 2012 05:43:50 -0800 (PST)\r\nIn-Reply-To: &lt;CANqiZJYU9d=2qk+Z6hM9n9HgJtDEw8dQZXqZpBotn2QvvHtv1w@...&gt;\r\nReferences: &lt;CAF89bCANbZFc9xwnrAx8rt4F75=OSuQVoWJfY1deJr+uJFz0Dg@...&gt;\n\t&lt;CANqiZJYU9d=2qk+Z6hM9n9HgJtDEw8dQZXqZpBotn2QvvHtv1w@...&gt;\r\nDate: Wed, 4 Jan 2012 00:43:50 +1100\r\nMessage-ID: &lt;CAF89bCATzNHSaU11=ibONB7tHpU-DyhcAut2jvUvnFrdGG0Wyw@...&gt;\r\nTo: Mike Kelly &lt;mikekelly321@...&gt;\r\nCc: Nina Jeliazkova &lt;jeliazkova.nina@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;, \n\tJan Algermissen &lt;jan.algermissen@...&gt;\r\nContent-Type: multipart/alternative; boundary=0015174c1660a6034b04b59fe3b6\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alexander Johannesen &lt;alexander.johannesen@...&gt;\r\nSubject: Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme\r\nX-Yahoo-Group-Post: member; u=211647110; y=1z3jJ1-7tc9xcGEn-7xLoFuJhBCABori2z345miA-ApDnNyd\r\nX-Yahoo-Profile: shelterit\r\n\r\n\r\n--0015174c1660a6034b04b59fe3b6\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\n&gt; &gt; The semantics of *what* about POST, exactly?\n\n&quot;Mike Kelly&quot; &lt;mikekelly321@...&gt; wrote:\n&gt; No, no - this is about the semantics of *specific requests* that use\n&gt; the POST method. Not about the semantics of POST itself.\n\nAhem, I think you&#39;re responding a bit fast. :)  My point was exactly this;\nin REST, there are no semantics to specific requests any more than to\ngeneric ones. Every POST is &quot;process this&quot; to the server, the payload is\ninterpreted and processed, but the POST is still the ambigous, context-free\n(apart from the URI and content-type) request. All POSTs are the same to\nREST, and that IS ITS SECRET WEAPON!\n\n&gt; There are more semantics in\n&gt; a given request than those that HTTP gives us. HTTP gives us\n&gt; network-visible semantics, that is its purpose. The additional\n&gt; semantics in a given request are not network-visible (but,\n&gt; importantly, so what?).\n\nWell, I think we agree on the statement that there&#39;s more to the POST than\nwhat REST / HTTP gives us ... most of the time, however to make the point a\nbit more concrete, here&#39;s an example ;\n\n   POST /458745485 &quot;46&quot;\n\nFor some people here, this lack of specifics looks like a problem. To me,\nit looked like a problem for a very long time, until, like Jan, I dived in\nand embraced HATEOAS. It&#39;s *there* that semantics exists, not in the POST,\nnot in the request itself. The focus should be on the model, never on the\nconversation, so to speak.\n\nI find that until one grasps HATEOAS, you tend to treat things as clients\nand servers. After a little while you realize that those roles flip back\nand forth depending on your data, that client and server are less carved in\nstone. Another thing is also that you stop treating this client / server\ndivide as a mostly one way communication, like with a more traditional API.\n\n&gt; Unless you have a distinct media type identifier to cover every single\n&gt; semantic in your application (or intent, etc.), then those semantics\n&gt; will not be visible and can only be determined by the client and\n&gt; server (via a contextual, shared understanding about the resource in\n&gt; question) - whether that shared understanding is buried within the\n&gt; semantics of a media type or a preceding link relation does not change\n&gt; this.\n\nIf I request a generic resource and get back a map of FORMs with RDFa, what\nmore do I need?\n\n&gt; The actually important consideration (which I have tried to bring up\n&gt; several times now and had no response on) is whether or not this loss\n&gt; in network visibility of intended semantics in the request is actually\n&gt; a concern.\n\nYou have been answered, but I don&#39;t think you agree with them, so you keep\nfighting the good fight, I assume. :)\n\n&gt; The argument in favour of using new specific types seems to\n&gt; imply that making the intent visible on the network is both possible\n&gt; and desirable.\n\nI think we all agree that no one solution is fit for all, and that one\nshould try to balance out the degree to which you split your semantics into\nprotocol vs. application. New content types makes sense if there isn&#39;t one\nthat adresses what you&#39;re doing. I mentioned earlier that the more specific\nyou can be, the less resources you will need to process them, but I won&#39;t\ngive you a clear binary answer here. Reach out with your feelings, Mike.\n\n&gt; I don&#39;t think either of those assumptions holds true:\n&gt;\n&gt; 1. network visibility is valuable because it facilitates intermediate\n&gt; processing (stuff like caching, ESI, etc.)  all of these mechanisms\n&gt; are generic and non-specific.\n\nHmm, I think I&#39;ve lost you there. How does the content-type mean any HTTP\nrequest is treated as a special case (or, non-specific)?\n\n&gt; 2. as I argued above; unless you have a specific media type for every\n&gt; individual semantic, there is still ambiguity in the message and you\n&gt; won&#39;t get more &#39;visibility&#39; anyway.\n\nSurely you don&#39;t think a black and white answer could possibly be correct?\nThe job of the good architect is to find the right balance between the\nambiguity of network transparancy and the specificy of application\nsemantics. Yes?\n\nRegards,\n\nAlex\n\r\n--0015174c1660a6034b04b59fe3b6\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;p&gt;&lt;br&gt;\n&gt; &gt; The semantics of *what* about POST, exactly?&lt;/p&gt;\n&lt;p&gt;&quot=\r\n;Mike Kelly&quot; &lt;&lt;a href=3D&quot;mailto:mikekelly321@...&quot;&gt;mikekelly32=\r\n1@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt; No, no - this is about the semantics of=\r\n *specific requests* that use&lt;br&gt;\n&gt; the POST method. Not about the seman=\r\ntics of POST itself.&lt;/p&gt;\n&lt;p&gt;Ahem, I think you&#39;re responding a bit fast.=\r\n :)=A0 My point was exactly this; in REST, there are no semantics to specif=\r\nic requests any more than to generic ones. Every POST is &quot;process this=\r\n&quot; to the server, the payload is interpreted and processed, but the POS=\r\nT is still the ambigous, context-free (apart from the URI and content-type)=\r\n request. All POSTs are the same to REST, and that IS ITS SECRET WEAPON!&lt;/p=\r\n&gt;\n\n&lt;p&gt;&gt; There are more semantics in&lt;br&gt;\n&gt; a given request than those =\r\nthat HTTP gives us. HTTP gives us&lt;br&gt;\n&gt; network-visible semantics, that =\r\nis its purpose. The additional&lt;br&gt;\n&gt; semantics in a given request are no=\r\nt network-visible (but,&lt;br&gt;\n&gt; importantly, so what?).&lt;/p&gt;\n&lt;p&gt;Well, I thi=\r\nnk we agree on the statement that there&#39;s more to the POST than what RE=\r\nST / HTTP gives us ... most of the time, however to make the point a bit mo=\r\nre concrete, here&#39;s an example ;&lt;/p&gt;\n&lt;p&gt;=A0=A0 POST /458745485 &quot;46=\r\n&quot;&lt;/p&gt;\n&lt;p&gt;For some people here, this lack of specifics looks like a pro=\r\nblem. To me, it looked like a problem for a very long time, until, like Jan=\r\n, I dived in and embraced HATEOAS. It&#39;s *there* that semantics exists, =\r\nnot in the POST, not in the request itself. The focus should be on the mode=\r\nl, never on the conversation, so to speak.&lt;/p&gt;\n\n&lt;p&gt;I find that until one gr=\r\nasps HATEOAS, you tend to treat things as clients and servers. After a litt=\r\nle while you realize that those roles flip back and forth depending on your=\r\n data, that client and server are less carved in stone. Another thing is al=\r\nso that you stop treating this client / server divide as a mostly one way c=\r\nommunication, like with a more traditional API.&lt;/p&gt;\n\n&lt;p&gt;&gt; Unless you hav=\r\ne a distinct media type identifier to cover every single&lt;br&gt;\n&gt; semantic =\r\nin your application (or intent, etc.), then those semantics&lt;br&gt;\n&gt; will n=\r\not be visible and can only be determined by the client and&lt;br&gt;\n&gt; server =\r\n(via a contextual, shared understanding about the resource in&lt;br&gt;\n&gt; ques=\r\ntion) - whether that shared understanding is buried within the&lt;br&gt;\n&gt; sem=\r\nantics of a media type or a preceding link relation does not change&lt;br&gt;\n&gt=\r\n; this.&lt;/p&gt;\n&lt;p&gt;If I request a generic resource and get back a map of FORMs =\r\nwith RDFa, what more do I need?&lt;/p&gt;\n&lt;p&gt;&gt; The actually important consider=\r\nation (which I have tried to bring up&lt;br&gt;\n&gt; several times now and had no=\r\n response on) is whether or not this loss&lt;br&gt;\n&gt; in network visibility of=\r\n intended semantics in the request is actually&lt;br&gt;\n&gt; a concern.&lt;/p&gt;\n&lt;p&gt;Y=\r\nou have been answered, but I don&#39;t think you agree with them, so you ke=\r\nep fighting the good fight, I assume. :) &lt;/p&gt;\n&lt;p&gt;&gt; The argument in favou=\r\nr of using new specific types seems to&lt;br&gt;\n&gt; imply that making the inten=\r\nt visible on the network is both possible&lt;br&gt;\n&gt; and desirable. &lt;/p&gt;\n&lt;p&gt;I=\r\n think we all agree that no one solution is fit for all, and that one shoul=\r\nd try to balance out the degree to which you split your semantics into prot=\r\nocol vs. application. New content types makes sense if there isn&#39;t one =\r\nthat adresses what you&#39;re doing. I mentioned earlier that the more spec=\r\nific you can be, the less resources you will need to process them, but I wo=\r\nn&#39;t give you a clear binary answer here. Reach out with your feelings, =\r\nMike.&lt;/p&gt;\n\n&lt;p&gt;&gt; I don&#39;t think either of those assumptions holds true=\r\n:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 1. network visibility is valuable because it facilitate=\r\ns intermediate&lt;br&gt;\n&gt; processing (stuff like caching, ESI, etc.) =A0all o=\r\nf these mechanisms&lt;br&gt;\n&gt; are generic and non-specific.&lt;/p&gt;\n&lt;p&gt;Hmm, I thi=\r\nnk I&#39;ve lost you there. How does the content-type mean any HTTP request=\r\n is treated as a special case (or, non-specific)?&lt;/p&gt;\n&lt;p&gt;&gt; 2. as I argue=\r\nd above; unless you have a specific media type for every&lt;br&gt;\n&gt; individua=\r\nl semantic, there is still ambiguity in the message and you&lt;br&gt;\n&gt; won&#3=\r\n9;t get more &#39;visibility&#39; anyway.&lt;/p&gt;\n&lt;p&gt;Surely you don&#39;t think=\r\n a black and white answer could possibly be correct? The job of the good ar=\r\nchitect is to find the right balance between the ambiguity of network trans=\r\nparancy and the specificy of application semantics. Yes?&lt;br&gt;\n&lt;/p&gt;\n&lt;p&gt;Regard=\r\ns,&lt;/p&gt;\n&lt;p&gt;Alex&lt;/p&gt;\n\r\n--0015174c1660a6034b04b59fe3b6--\r\n\n"}}