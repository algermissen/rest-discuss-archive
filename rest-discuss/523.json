{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"VfFhPARn2ls5QFLWqiP4huiYzd_doEYjcgOQC7dVh4JGHrs-_WDQOEoAizu_NZOOQ4mu6c66vYKsmAQqOI01dZUzkwrj6w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Comments on latest rev of the HttpEvents spec","postDate":"1012558139","msgId":523,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNUE2OTNCLkE1QjkxNjA0QHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMjAxMDQzOTEwMC4xNTU2LTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":522,"nextInTopic":525,"prevInTime":522,"nextInTime":524,"topicId":511,"numMessagesInTopic":12,"msgSnippet":"... If the application has meaningful notification bodies then it might prefer to queue and retry. ... All I ask is that you know ONE of your URIs. i.e. that","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 1 Feb 2002 10:10:11 -0000\r\nReceived: (qmail 53046 invoked from network); 1 Feb 2002 10:10:10 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m10.grp.snv.yahoo.com with QMQP; 1 Feb 2002 10:10:10 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 1 Feb 2002 10:10:10 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g11AA6N23245;\n\tFri, 1 Feb 2002 02:10:06 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g11AA6e03814;\n\tFri, 1 Feb 2002 02:10:06 -0800\r\nMessage-ID: &lt;3C5A693B.A5B91604@...&gt;\r\nDate: Fri, 01 Feb 2002 02:08:59 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Comments on latest rev of the HttpEvents spec\r\nReferences: &lt;Pine.WNT.4.43.0202010439100.1556-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt; \n&gt;...\n&gt; \n&gt; OK.  But if notification bodies are optional, then\n&gt; you don&#39;t need to accumulate a queue of update\n&gt; messages for the client.  You just need to send\n&gt; the last one.\n\nIf the application has meaningful notification bodies then it might\nprefer to queue and retry.\n\n\n&gt;...\n&gt; It is harder because then server implementations\n&gt; MUST know what their URI is.  I&#39;ve seen too many\n&gt; server environments where you don&#39;t.\n\nAll I ask is that you know ONE of your URIs. i.e. that you can generate\na URI for yourself. \n\nAnyhow, I&#39;ll keep thinking about this.\n\n&gt;...\n&gt; Note in reading the spec. again I think the big\n&gt; gap is actually in acquiring the subscription\n&gt; resource!\n\nYou don&#39;t need to get a subscription resource if you already know of a\nserver that provides that service. The Subscription: URI is for when you\nDON&#39;T know of one and you DO want to ask the server whether it can do it\nfor you.\n\n&gt; For example, you might want a polling server to\n&gt; notify you of changes to a resource even if the\n&gt; underlying resource server is not implementing\n&gt; this protocol (and therefore doesn&#39;t send a\n&gt; Subscriptions: header).\n\nNo problem. If you now how to generate a Subscriptions resource just by\npasting together uris then you can do that.\n\n&gt; Rather than having a resource issue a\n&gt; Subsriptions: header, it makes much more sense for\n&gt; a subscription to issue a &quot;location:&quot; header\n&gt; pointing to the underlying subscribed resource.\n\nI think this is an orthogonal issue. But yes, I do want subscription\nresources to be self-describing about what they are watching,  what\ntheir expiry policy is, etc. There will be standard headers for that\nstuff.\n\n&gt; Even better, it should issue a location-regex:\n&gt; header.  That way you could watch collections of\n&gt; urls that match a particular regex or set of\n&gt; regexes.\n\nHow would you implement that as a polling proxy? I think that this is\nway into the domain of the application now. If it wants to provide it\nthen it could do so by providing you with a WATCH on a regex URI query\nthat generates a container object...like watching your vanity search on\nGoogle.\n\n Paul Prescod\n\n"}}