{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"BAZ-c6FOHTNc7x96yCfMJVjZ4NUjSDBMBRsW336Fz-e8dtX8PFgQoOFSgoOmCTZqPFlglGJfNR_T4GMx11uxgrcSQTBv3bkUQnlFbm-VRw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Homework on DELETE and Caching control and questions","postDate":"1237701921","msgId":12313,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzIyMDAwNTIxLjcyNGUyMzJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPg==","referencesHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPg=="},"prevInTopic":12307,"nextInTopic":12314,"prevInTime":12312,"nextInTime":12314,"topicId":12307,"numMessagesInTopic":8,"msgSnippet":"... Because those cached representations all have the same URI as the URI of the DELETE request.  They may have different Content-Locations. ... Of course.  If","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 48963 invoked from network); 22 Mar 2009 06:04:54 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.re1.yahoo.com with QMQP; 22 Mar 2009 06:04:54 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.re1.yahoo.com with SMTP; 22 Mar 2009 06:04:54 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id A8558D0500;\n\tSun, 22 Mar 2009 02:04:53 -0400 (EDT)\r\nDate: Sun, 22 Mar 2009 00:05:21 -0600\r\nTo: &quot;Dong Liu&quot; &lt;edongliu@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20090322000521.724e232f.eric@...&gt;\r\nIn-Reply-To: &lt;gq3uni+cc9q@...&gt;\r\nReferences: &lt;gq3uni+cc9q@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Homework on DELETE and Caching control and\n questions\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nDong Liu wrote:\n\n&gt; \n&gt; On page 56, section 9.7, it reads\n&gt; &quot;If the request passes through a cache and the Request-URI identifies\n&gt; one or more currently cached entities, those entries SHOULD be\n&gt; treated as stale.&quot;\n&gt; \n&gt; So how can the intermediary figure out the currently cached entities\n&gt; identified by the Request-URI? \n&gt; \n\nBecause those cached representations all have the same URI as the URI\nof the DELETE request.  They may have different Content-Locations.\n\n&gt;\n&gt; On page 97, section 13.10, it reads\n&gt; &quot;The effect of certain methods performed on a resource at the origin\n&gt; server might cause one or more existing cache entries to become non-\n&gt; transparently invalid. That is, although they might continue to be\n&gt; &quot;fresh,&quot; they do not accurately reflect what the origin server would\n&gt; return for a new request on that resource.&quot;\n&gt; \n&gt; I think this means it is common for an update or delete request\n&gt; yields &quot;non-transparently&quot; invalidation of one or more existing cache\n&gt; entries. \n&gt; \n\nOf course.  If I send a DELETE request to my server, the only caches\nthat should stale that resource are the ones between me and my server.\nThe rest of the Internet is oblivious to the DELETE.  Eventually, the\ndeleted resource will expire.  If this is a problem, set stricter\ncache-control headers.\n\n&gt;\n&gt; Further on page 98 \n&gt; &quot;There is no way for the HTTP protocol to guarantee that all such\n&gt; cache entries are marked invalid.&quot;\n&gt; \n\nCaches aren&#39;t always connected to the Internet, or may have very\nexpensive Internet connections (the hotspot on Mt. Everest), or some\nother reason not to check with the origin server at all before serving\na cached representation.  So no, there is no way to guarantee\nexpiration, this is the essence of &quot;anarchic scalability&quot; -- you cede a\nbit of control over your resources to the world-at-large with zero\ncontrol over what happens as a result.\n\n&gt; \n&gt; &quot;Some HTTP methods MUST cause a cache to invalidate an entity. This\n&gt; is either the entity referred to by the Request-URI, or by the\n&gt; Location or Content-Location headers (if present).&quot;\n&gt; \n&gt; Can we put many Content-Location headers in a DELETE request? \n&gt;\n\nA Content-Location header indicates content negotiation.  It is not a\nmechanism for piggybacking additional actions in one client request.\nIf I have a resource /image which serves image.gif or image.png\ndepending on client capability, and I PUT a new image.gif to /image,\nwhat a cache should expire is image.gif not /image.\n\nA Location header indicates a redirect.  It instructs the client to re-\ntry its request at a different URI.  You can&#39;t, by virtue of PUT or\nDELETE, remove that redirection -- the PUT or DELETE request itself gets\nredirected to the proper location.  So the invalidation must affect the\nresource identified by the Location header, NOT the redirect itself.\n\n&gt; \n&gt; &quot;In order to prevent denial of service attacks, an invalidation based\n&gt; on the URI in a Location or Content-Location header MUST only be\n&gt; performed if the host part is the same as in the Request-URI. &quot;\n&gt; \n\nThis is just common sense, sending a DELETE request to one host in\nhopes of deleting a resource on some other host would be a real\nproblem, due to the number of malicious deviant savages out there.\n\n&gt;\n&gt; Then how about invalidating the caches after a &quot;batch DELETE&quot; as this\n&gt; &quot;off-the-wall&quot; approach?\n&gt; http://tech.groups.yahoo.com/group/rest-discuss/message/12280\n&gt; \n\nI&#39;ll come back and answer this part later, I&#39;ve been getting this from\nYahoo:\n\n&quot;The group rest-discuss is temporarily unavailable&quot;\n\nWhich comes as no surprise, since in recent days my posts to this list\nhave been taking hours to show up on the web or in my inbox.  -1\n\n&gt;\n&gt; Suppose we have a URI that identifies a collection of resources\n&gt; \n&gt; 1. the client sends DELETE URI to the server. The client knows what\n&gt; the URI refers to. \n&gt; \n&gt; 2. the server reply with a 200 or 202 with a representation that will\n&gt; send several DELETE&#39;s to the server each of which is for a member in\n&gt; the collection. \n&gt; \n\nThen your first DELETE has the exact same semantics as GET, instead of\nmeaning deletion.  There is nothing wrong with a server sending an\nXforms representation to the client with a bunch of URIs the user can\nselect for deletion, whereupon the client will send a discrete DELETE\nrequest to each URI at the touch of a button.  But, you must GET that\nform.\n\n-Eric\n\n"}}