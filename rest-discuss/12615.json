{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":83951433,"authorName":"Michael Schuerig","from":"Michael Schuerig &lt;michael@...&gt;","profile":"mschuerig","replyTo":"SENDER","senderId":"70-Ev0JgbliEKvzGPTbnOh-Zd-N5KbUYzw0UTCKJ5_6ged7xkhC7M1DgV4Yn4uImm5tFf-GU6_3qsTisGgoFw4iljX-yLO76rjv4NHE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Giving the UI a REST","postDate":"1242649154","msgId":12615,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwNTE4MTQxOS4xNTExNi5taWNoYWVsQHNjaHVlcmlnLmRlPg==","inReplyToHeader":"PDRBMTEzRkVBLjUwMzA1MDNAbXlrYW5qby5jby51az4=","referencesHeader":"PDIwMDkwNTE4MDAzNi41NzkwNC5taWNoYWVsQHNjaHVlcmlnLmRlPiA8NEExMTNGRUEuNTAzMDUwM0BteWthbmpvLmNvLnVrPg=="},"prevInTopic":12614,"nextInTopic":12616,"prevInTime":12614,"nextInTime":12616,"topicId":12608,"numMessagesInTopic":35,"msgSnippet":"... My client is based on HTML and JavaScript, but that is just an incidental aspect. I could put as much logic there as I want, but the architecturally","rawEmail":"Return-Path: &lt;michael@...&gt;\r\nX-Sender: michael@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21113 invoked from network); 18 May 2009 12:20:57 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 18 May 2009 12:20:57 -0000\r\nX-Received: from unknown (HELO mo-p00-ob.rzone.de) (81.169.146.162)\n  by mta1.grp.sp2.yahoo.com with SMTP; 18 May 2009 12:20:57 -0000\r\nX-RZG-AUTH: :IWUHfUGtd9+vBOPSU2tipXsK9ccDFFfW1WHk1q7FaEbep/oL5XvzwcVB8cOgo82tWQ==\r\nX-RZG-CLASS-ID: mo00\r\nX-Received: from debby.localnet\n\t(xdsl-81-173-181-223.netcologne.de [81.173.181.223])\n\tby post.strato.de (mrclete mo21) (RZmta 18.34)\n\twith ESMTP id 60404cl4IBmiY2 for &lt;rest-discuss@yahoogroups.com&gt;;\n\tMon, 18 May 2009 14:19:09 +0200 (MEST)\r\nTo: rest-discuss@yahoogroups.com\r\nDate: Mon, 18 May 2009 14:19:14 +0200\r\nUser-Agent: KMail/1.11.2 (Linux/2.6.29-2-686; KDE/4.2.2; i686; ; )\r\nReferences: &lt;200905180036.57904.michael@...&gt; &lt;4A113FEA.5030503@...&gt;\r\nIn-Reply-To: &lt;4A113FEA.5030503@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: Text/Plain;\n  charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nMessage-Id: &lt;200905181419.15116.michael@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Michael Schuerig &lt;michael@...&gt;\r\nSubject: Re: Giving the UI a REST\r\nX-Yahoo-Group-Post: member; u=83951433; y=7pxNdA_FTxgjXjIwYbX3krMz_Req777runX0C7BYn7SQMLhl\r\nX-Yahoo-Profile: mschuerig\r\n\r\nOn Monday 18 May 2009, Mike Kelly wrote:\n&gt; It sounds like a &#39;thicker&#39; client leveraging object orientation of\n&gt; some kind would be a good solution. The thick client logic can be\n&gt; served as OO code-on-demand (e.g. Javascript) that augments your\n&gt; basic hypermedia formats to provide the functionality you are looking\n&gt; for (this would be the best thick client approach if you want to stay\n&gt; &#39;crawl-able&#39;). When the user performs an object/resource interaction\n&gt; which the client-side code allows; the object/resource(s) can be\n&gt; submitted to your REST interface for final validation and\n&gt; persistence. Modular & OO code-on-demand would allow for relatively\n&gt; easy changes to the logic over time.\n\nMy client is based on HTML and JavaScript, but that is just an \nincidental aspect. I could put as much logic there as I want, but the \narchitecturally relevant question is whether this would be a good idea. \nFinal validation lies with the server as always, but that is just too \nlate to ensure a pleasant user experience. It&#39;s not nice to withhold \ntelling a user that an action is not possible when the app could have \nkept him unobtrusively from even trying.\n\n&gt; I don&#39;t think much is lost by keeping these user actions (aside: are\n&gt; they application states?) away from the server; since they&#39;re very\n&gt; unlikely to be entry  points to the application - plus, valid changes\n&gt; are eventually submitted to the server for persistence anyway.\n\nAs far as the conversation between client and server is concerned, I&#39;m \nafter a look-before-you-leap query. There are, say, 100 state \ntransitions that might or might not be possible, as far as the client \nknows. So the client wants to get advice from the server, which of these \ntransitions are likely(!) to be possible. Based on this advice, the \nclient offers only the likely actions/transitions to the user.\n\nBecause at any one time there is a large number of potential \nactions/transitions, it is not possible to ask the server about each of \nthem individually. Also, the entire state space is much too large to \ncopy it to the client, and because the landscape is changed by other \nusers, caching isn&#39;t much use either.\n\nMichael\n\n-- \nMichael Schuerig\nmailto:michael@...\nhttp://www.schuerig.de/michael/\n\n\n"}}