{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":148737865,"authorName":"Hugh Winkler","from":"&quot;Hugh Winkler&quot; &lt;hughw@...&gt;","profile":"hwinkler99","replyTo":"SENDER","senderId":"p-PLxYxm1FnEbcs3GNwWhy5YG0B-y0uHLAv0PEcga8CaYUlUKgPPl6YBlWQ93ROxXDTGmW0zTc5Mq4SEYHz2MSmZaXs0pwg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atompub missed opportunity","postDate":"1167762677","msgId":7384,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDkyNzQ0MWIzMDcwMTAyMTAzMWozYTQwZGY3MWc0MTRhNjVhN2VhNWIxZTAwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDExNjc2MDgxOTYuNTE1Ny4xNS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","referencesHeader":"PDkyNzQ0MWIzMDYxMjI4MTI1N2w3ZTc4MjQyYnM5NTYyMjBiZTFjNTFmZTQ2QG1haWwuZ21haWwuY29tPgkgPDExNjc1MTg3MjQuNDYzNy4xMi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+CSA8OTI3NDQxYjMwNjEyMzAxNzA4aTIwYTlhYzJlb2Y5N2IwYTliODBjOTQ2ZGRAbWFpbC5nbWFpbC5jb20+CSA8MTE2NzYwODE5Ni41MTU3LjE1LmNhbWVsQGxvY2FsaG9zdC5sb2NhbGRvbWFpbj4="},"prevInTopic":7354,"nextInTopic":7404,"prevInTime":7383,"nextInTime":7385,"topicId":7295,"numMessagesInTopic":25,"msgSnippet":"... That s the problem --- ahead of time rather than dynamically at run time. ... Not sure how you would know it understands a useful subset. You won t have","rawEmail":"Return-Path: &lt;hwinkler@...&gt;\r\nX-Sender: hwinkler@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 87790 invoked from network); 2 Jan 2007 18:41:22 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m40.grp.scd.yahoo.com with QMQP; 2 Jan 2007 18:41:22 -0000\r\nReceived: from unknown (HELO nf-out-0910.google.com) (64.233.182.187)\n  by mta2.grp.scd.yahoo.com with SMTP; 2 Jan 2007 18:41:20 -0000\r\nReceived: by nf-out-0910.google.com with SMTP id n15so6389327nfc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 02 Jan 2007 10:41:20 -0800 (PST)\r\nReceived: by 10.82.113.6 with SMTP id l6mr1708514buc.1167762678006;\n        Tue, 02 Jan 2007 10:31:18 -0800 (PST)\r\nReceived: by 10.82.116.19 with HTTP; Tue, 2 Jan 2007 10:31:17 -0800 (PST)\r\nMessage-ID: &lt;927441b30701021031j3a40df71g414a65a7ea5b1e00@...&gt;\r\nDate: Tue, 2 Jan 2007 12:31:17 -0600\r\nTo: &quot;Benjamin Carlyle&quot; &lt;benjamincarlyle@...&gt;\r\nCc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;1167608196.5157.15.camel@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;927441b30612281257l7e78242bs956220be1c51fe46@...&gt;\n\t &lt;1167518724.4637.12.camel@...&gt;\n\t &lt;927441b30612301708i20a9ac2eof97b0a9b80c946dd@...&gt;\n\t &lt;1167608196.5157.15.camel@...&gt;\r\nX-Google-Sender-Auth: f766d40150c0e5fb\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nX-eGroups-From: &quot;Hugh Winkler&quot; &lt;hughw@...&gt;\r\nFrom: &quot;Hugh Winkler&quot; &lt;hughw@...&gt;\r\nSubject: Re: [rest-discuss] Atompub missed opportunity\r\nX-Yahoo-Group-Post: member; u=148737865; y=54C6Kvlb_jYcE69q2MFrQxQcnXJ6qvmvibnOoF5g5hKw-1U3HQ\r\nX-Yahoo-Profile: hwinkler99\r\n\r\nOn 12/31/06, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n&gt; On Sat, 2006-12-30 at 19:08 -0600, Hugh Winkler wrote:\n&gt; &gt; On 12/30/06, Benjamin Carlyle &lt;benjamincarlyle@...&gt; wrote:\n&gt; &gt; &gt; I&#39;m not sure who you think will interpret this form on the client\n&gt; &gt; side.\n&gt; &gt; &gt; You see, the thing is that the atom document format is already a\n&gt; &gt; form. A\n&gt; &gt; &gt; client has already received the form by being programmed in a\n&gt; &gt; particular\n&gt; &gt; &gt; way, and is now submitting the form. It knows what information\n&gt; &gt; should be\n&gt; &gt; &gt; placed in each of the named fields. It knows how to construct the\n&gt; &gt; end\n&gt; &gt; &gt; document.\n&gt; &gt; Ah, but it is a standard form for all servers -- not for my particular\n&gt; &gt; server app. And to know what kind of form to submit, you read a spec\n&gt; &gt; -- you did not GET the description from the server. It&#39;s all baked in\n&gt; &gt; at design time.\n&gt;\n&gt; Exactly. It has been agreed ahead of time.\n\nThat&#39;s the problem --- &quot;ahead of time&quot; rather than dynamically at run time.\n\n&gt;Now, I can just send my POST\n&gt; request and know that the server understands a useful subset of what I\n&gt; am sending them.\n\nNot sure how you would know it understands a useful subset. You won&#39;t\nhave the slightest idea what parts of your document it understands, or\ndoesn&#39;t. doesn&#39;t handle multiple authors? Can only accept text/plain\nfor &lt;title&gt;?\n\n&gt;\n&gt; What you are suggesting is that I first need to obtain a schema document\n&gt; (which you are calling a form)\n\nA schema document is not a form. Maybe we should stay away from XML\nfor a moment. Think HTML form...  which is a little &quot;program&quot; telling\nthe UA how to serialize a submission.\n\nI didn&#39;t mention RDF forms[1]... but I should have.\n\n&gt; to see if the server is actually\n&gt; understanding only a subset of the atom vocabulary.\n\nNot a subset... could be a superset.\n\n&gt; Then I need to\n&gt; customize my content to conform to this subset. As a machine, I don&#39;t\n&gt; have any good way of doing that.\n\nSee, you have this problem anyway. If you are sending a server stuff\nit doesn&#39;t understand, or not enough stuff, your application will\nfail.\n\nWith forms, at least, your application knows &quot;Hey, I don&#39;t know how to\nfill out this required field&quot;. Same as a human would using an HTML\nform. Your client can report that to a human for correction.\n\nAtom (and any application protocol based on exchanging known document\ntypes) has to trade off between exhaustively specifying application\nbehavior and exhaustively specifying failure handling.\n\n&gt;If I come up to a server that has\n&gt; support for an unexpectedly small subset of atom, I then have to\n&gt; customize my content in an unexpected way.\n\nIt is better for you to do the customizing. TTake the example of a\nserver that simply cannot honor text/html or application/xhtml+xml in\nthe title field. It can only handle text/plain. Atom protocol says\nnothing at the moment about this situation, except that the server can\nchange your POSted data as it needs to. So presently my server either\na) rejects your submission or b) stores it as text/plain.  Better\nwould be for your client to receive an Xform with a constraint\nspecifiying &quot;text/plain&quot; only -- then, if the user had any imprtant\nrich content they wanted to put in the title, they can at least try to\ncompensate.\n\n\n&gt;That is to say, I way that\n&gt; noone programmed me to customise my content in :)\n&gt;\nWell, you would have programmed it from this pov, so you would have\nhandled these exceptional situations.\n\n&gt; The server, on the other hand, is in a good position to customise the\n&gt; content. It knows which subset of atom it understands, and it knows what\n&gt; atom is generally. It knows multiple authors might be required, so is in\n&gt; a position to either model those multiple authors or use an algorithm to\n&gt; select an author for its model from the available list.\n\n\nSee above. Yes, you are describing the undesirable behavior the\ncurrent APP forces you into.\n\n&gt;\n&gt; &gt; What I proposed is that the form delivered by a server have just the\n&gt; &gt; elements that make sense for the server. My server might not know what\n&gt; &gt; to do with a &lt;source&gt; element. Using the standard &quot;form&quot;, my server\n&gt; &gt; has to have handling in place if you submit a &lt;source&gt; element, and it\n&gt; &gt; has to describe to you the problem if you do submit &lt;source&gt; and my\n&gt; &gt; server rejects it.\n&gt;\n&gt; All atom elements make sense to the server, even if they don&#39;t fit the\n&gt; server&#39;s internal model.\n&gt; The server implements atom, after all.\n\nnot so -- the client may submit extgension elements the server isn&#39;t aware of.\n\n&gt; What you\n&gt; are suggesting is adding an extra message exchange to move the\n&gt; complexity of fitting atom into the server&#39;s model back to the client.\n\nYes.\n\n&gt; Neither side is going to be great at solving a model mismatch problem,\n&gt; but the client is likely to be downright incapable.\n\nAs above: The client is in the best position to take corrective\naction, so as to best fulfill its intent.\n\n&gt;If you really want\n&gt; to be able to sensibly deal with this class of server you need to encode\n&gt; how that class of server behaves into the atom specifications (as you\n&gt; suggested was already being done). Then the server will use a\n&gt; generally-accepted algorithm to select which author it will use from the\n&gt; ones available, and the client will know to put the most important\n&gt; author first.\n&gt;\n\nYes... app is prescribing server behavior, not message semantics.\n\n&gt; &gt; &gt; One might argue that the client and server should communicate online\n&gt; &gt; &gt; before the client submits data that the server might not accept. In\n&gt; &gt; one\n&gt; &gt; &gt; of the examples you mentioned earlier the server might not support\n&gt; &gt; the\n&gt; &gt; &gt; full atom protocol, in that multiple authors may not be supported.\n&gt; &gt; To be clear -- whether a server has a model supporting multiple\n&gt; &gt; authors is a modeling, not a message exchange protocol, issue.\n&gt;\n&gt; The server&#39;s model doesn&#39;t allow for a full fidelity translation of the\n&gt; atom protocol. The model doesn&#39;t allow the full protocol to be\n&gt; understood.\n&gt;\n&gt; &gt; &gt; As\n&gt; &gt; &gt; such, the server might be able to publish a document that indicated\n&gt; &gt; a\n&gt; &gt; &gt; subset of the atom format that is usable.\n&gt; &gt; &gt;I suggest that while a\n&gt; &gt; &gt; document format could be produced to communicate which subset is\n&gt; &gt; &gt; important, the cost would likely outweigh the value. Certainly,\n&gt; &gt; allowing\n&gt; &gt; &gt; for additional elements in the form would not be meaningful to a\n&gt; &gt; client\n&gt; &gt; &gt; without further specificaiton as to what those elements mean. Any\n&gt; &gt; &gt; additions of this kind would likely require code changes to the\n&gt; &gt; client.\n&gt; &gt;\n&gt; &gt; Well I was focusing on what clients POST to servers, but it seemed\n&gt; &gt; like you began that para talking about what servers publish?\n&gt; &gt;\n&gt; &gt; In the case of servers describing what clients can send to them, that\n&gt; &gt; would just be the Xform, so I&#39;m not clear how the cost outweighs the\n&gt; &gt; value -- it seems simple enough in this case.\n&gt;\n&gt; Hrrm... why not xml schema? Why not relax ng? Why not another format?\n&gt;\n\nSchema != Form, but yeah, another kind of form ... RDF form...\n\n\n&gt; Naming a particular specification doesn&#39;t really help. A standardisation\n&gt; process still has to take place to achieve widespread acceptance.\n&gt;\n\nIt&#39;s already in place. Programs understand the meanings of Atom XML\nelements. So when presented with an Xform model specifying those\nelements, the client app kknows how to populate those fields.\n\n&gt; Your server can still offer an xform or a HTML form to allow new atom\n&gt; entries to be created by humans. That needs no further standardisation\n&gt; to occur. However, machine to machine communications is best and\n&gt; simplest when the specification can be treated as the form that needs to\n&gt; be filled out and understood.\n\nWell heck... if you believe that, then RPC is a good approach... it&#39;s\nall spelled out for the client programmers at design time.\n\n&gt;Additional negotiation between client and\n&gt; server reduces the value of the standard and increases complexity\n&gt; everwhere.\n&gt;\n\nForms made the web adaptive. Go to any airline reservation web site.\nThey&#39;re all the same, but different too. They mostly do the same\nthings, but Orbitz offers packages with hotels and cars, while Delta\noffers connections with partner airlines, and  Priceline won&#39;t let you\nsee the itinerary. There&#39;s some shared vocabulary among all those\nsites but varying behavior. If the airlines standardize their\nvocabulary for forms, you could program a client to interact,\nadaptively, with all those sites. But you could not constrain\nPriceline&#39;s app to squeeze into the same behavior model as Delta&#39;s.\nAnd you shouldn&#39;t -- you should encourage diversity among web apps, as\nhas been successful on the web to date.\n\n\nHugh\n[1] http://www.markbaker.ca/2003/05/RDF-Forms/\n\n"}}