{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":1070305,"authorName":"David Orchard","from":"&quot;David Orchard&quot; &lt;orchard@...&gt;","profile":"dorchard100","replyTo":"SENDER","senderId":"YoLPkmKvOi_Le66rccXwlFBY8VhR-ArOdyB8AKz7wSjeEbVndFRtf1T-kdz8rR84lmS6J5p1q3Jul3ZS7epJyYd--MOgEHQ3M3yCx2MhOg4NdA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re-using information fields for queries in REST","postDate":"1086138618","msgId":4426,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDMyRDU4NDVBNzQ1QkZCNDI5Q0JEQkFEQTU3Q0Q0MUFGMDdFNjZDNzBAdXNzamV4MDEuYW1lci5iZWEuY29tPg=="},"prevInTopic":4425,"nextInTopic":4427,"prevInTime":4425,"nextInTime":4427,"topicId":4417,"numMessagesInTopic":23,"msgSnippet":"I don t like the idea of keeping the URI construction opaque from the client because I don t want the extra round trip to get the list.  And I think it s too","rawEmail":"Return-Path: &lt;dorchard@...&gt;\r\nX-Sender: dorchard@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 80608 invoked from network); 2 Jun 2004 01:10:22 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m25.grp.scd.yahoo.com with QMQP; 2 Jun 2004 01:10:22 -0000\r\nReceived: from unknown (HELO ussjmh01.bea.com) (63.96.162.5)\n  by mta1.grp.scd.yahoo.com with SMTP; 2 Jun 2004 01:10:22 -0000\r\nReceived: from ussjfe01.amer.bea.com (ussjfe01.bea.com [172.16.120.53])\n\tby ussjmh01.bea.com (Switch-3.0.5/Switch-3.0.0) with ESMTP id i521AK8F029453;\n\tTue, 1 Jun 2004 18:10:20 -0700\r\nReceived: from ussjex01.amer.bea.com ([172.16.120.50]) by ussjfe01.amer.bea.com with Microsoft SMTPSVC(5.0.2195.6713);\n\t Tue, 1 Jun 2004 18:10:20 -0700\r\nX-MimeOLE: Produced By Microsoft Exchange V6.0.6487.1\r\ncontent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----_=_NextPart_001_01C4483E.5EAE65C4&quot;\r\nDate: Tue, 1 Jun 2004 18:10:18 -0700\r\nMessage-ID: &lt;32D5845A745BFB429CBDBADA57CD41AF07E66C70@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] Re-using information fields for queries in REST\r\nThread-Index: AcRIPfHe92bCuzMFT02lmSyLkoViBg==\r\nTo: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;,\n   &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nX-OriginalArrivalTime: 02 Jun 2004 01:10:20.0297 (UTC) FILETIME=[5FA3F790:01C4483E]\r\nX-eGroups-Remote-IP: 63.96.162.5\r\nX-eGroups-From: &quot;David Orchard&quot; &lt;dorchard@...&gt;\r\nFrom: &quot;David Orchard&quot; &lt;orchard@...&gt;\r\nSubject: RE: [rest-discuss] Re-using information fields for queries in REST\r\nX-Yahoo-Group-Post: member; u=1070305\r\nX-Yahoo-Profile: dorchard100\r\n\r\n\r\n------_=_NextPart_001_01C4483E.5EAE65C4\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI don&#39;t like the idea of keeping the URI construction opaque from the\nclien=\r\nt because I don&#39;t want the extra round trip to get the list.  And I\nthink i=\r\nt&#39;s too network/compute intensive to get a complete list at the\nclient and =\r\nthen apply the filter/query to get the right matches.  \n \nAnd your solution=\r\n doesn&#39;t help the version problem.  If the URI changes,\nit doesn&#39;t matter w=\r\nhether the algorithm changes or not, backwards compat\nstill has to either b=\r\ne granted or lost.  If there isn&#39;t backwards\ncompat, the client either has =\r\nto get the new URI list or the new\nalgorithm, and I think propagating the a=\r\nlgorithm is fine.  Just like\ngetting a new form page if somebody happens to=\r\n be editing a form and the\nURI construction changes right in the middle.\n \n=\r\nI have not a problem at all with relative URIs being not portable across\nau=\r\nthorities.  It&#39;s up to each authority to define and describe it&#39;s URI\nconst=\r\nruction algorithm if it wants to expose one to a client.  Re-use of\nrelativ=\r\ne URIs across domains falls way outside the 80/20 point for the\napp I&#39;ve be=\r\nen talking about.\n \nCheers,\nDave\n\n-----Original Message-----\nFrom: Seairth =\r\nJacobs [mailto:seairth@...]\nSent: Tuesday, June 01, 2004 4:54 PM\nTo=\r\n: rest-discuss\nSubject: Re: [rest-discuss] Re-using information fields for =\r\nqueries in\nREST\n\n\n&quot;David Orchard&quot; wrote: \n\n-----Original Message-----\n\nFrom=\r\n: Walden Mathews [ mailto:walden@...]\n\n\n\nThat looks more like a co=\r\nllection or subset to me.  A single\n\nartist resource might be more like /Ar=\r\ntist/123.  An important\n\nquestion is: how does the client discover that URI=\r\n?  The &quot;hyptertext\n\nengine&quot; constraint of REST really wants it to be discov=\r\nered, not\n\nfabricated by client as a parameter list.\n\n    \n\n\n\nWhy is discov=\r\nery of a particular URI &quot;better&quot; than discovery of the\nconstruction techniq=\r\nue for a URI?  This argues that HTML FORM GETs are a\nbad way of creating UR=\r\nIs because they are fabricated.\n\n  \n\nSuppose you defined the semantics of t=\r\nhe query response format to\nprovide such constraints/rules necessary to con=\r\nstruct URIs.  As long as\nthe client understands the semantics of the format=\r\n, you are basically\nwhere HTML forms are.  However, just listing the URIs t=\r\nhemselves would\nbe much more straight forward.  The URI is an opaque identi=\r\nfier.  As\nsuch, the client can stay dumb and loosely coupled.  If, at some =\r\nlater\ntime, you should choose to change the URI construction (say from\n/art=\r\nist/123 to /artist/tu123 or /a23423992359652), the client continues\nworking=\r\n unchanged.  The constructed URI approach, on the other hand,\nwould be brit=\r\ntle.  You would either need to construct your URIs in a\nbackward-compatible=\r\n manner or require the clients to learn the new\nconstruction rules, neither=\r\n of which are a very desirable choice.\n\nSuppose you want to reference artis=\r\nts on another site that uses an\nentirely different URI format.  Are you goi=\r\nng to reverse-engineer those\nURIs and add yet more semantics to the query r=\r\nesponse format for those\nURIs?\n\nAlso, there&#39;s a propensity for humans to se=\r\ne patterns in structures.\nURIs are often such a structure.  I agree that a =\r\nperson seeing\n/artist/123 may be inclined to try artist/124.  However, I th=\r\nink people\nare more inclined to see /artist?id=3D123 and try /artist?id=3D1=\r\n24.  The\nmoment you tell people that there is a pattern, they expect the pa=\r\nttern.\nYou can&#39;t stop people from seeing patterns where there may not be an=\r\ny,\nbut you can certainly stop from telling people there is a pattern where\n=\r\nyou know there is not one.\n\n--\nSeairth Jacobs\n\n\n\nYahoo! Groups Sponsor\t\n\nAD=\r\nVERTISEMENT\n \n&lt;http://rd.yahoo.com/SIG=3D129q66tlr/M=3D295196.4901138.60713=\r\n05.3001176/D=3Dgr\noups/S=3D1705701014:HM/EXP=3D1086220475/A=3D2128215/R=3D0=\r\n/SIG=3D10se96mf6/*http://\ncompanion.yahoo.com&gt; click here\t\n \n&lt;http://us.ads=\r\nerver.yahoo.com/l?M=3D295196.4901138.6071305.3001176/D=3Dgroup\ns/S=3D:HM/A=\r\n=3D2128215/rand=3D594699565&gt; \t\n\n\n  _____  \n\nYahoo! Groups Links\n\n\n*\tTo visi=\r\nt your group on the web, go to:\nhttp://groups.yahoo.com/group/rest-discuss/=\r\n\n  \n\n*\tTo unsubscribe from this group, send an email to:\nrest-discuss-unsub=\r\nscribe@yahoogroups.com\n&lt;mailto:rest-discuss-unsubscribe@yahoogroups.com?sub=\r\nject=3DUnsubscribe&gt; \n  \n\n*\tYour use of Yahoo! Groups is subject to the Yaho=\r\no! Terms of\nService &lt;http://docs.yahoo.com/info/terms/&gt; . \n\n\n\r\n------_=_NextPart_001_01C4483E.5EAE65C4\r\nContent-Type: text/html;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META HTTP-EQUIV=3D&quot;Content-Type&quot; CONTENT=3D&quot;text/html; charset=3Dus-ascii=\r\n&quot;&gt;\n&lt;TITLE&gt;&lt;/TITLE&gt;\n\n&lt;META content=3D&quot;MSHTML 6.00.2800.1400&quot; name=3DGENERATO=\r\nR&gt;&lt;/HEAD&gt;\n&lt;BODY text=3D#000000 bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535=\r\n200-02062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;I \ndon&#39;t like the =\r\nidea of keeping the URI construction opaque from the client \nbecause I don&#39;=\r\nt want the extra round trip to get the list.&nbsp; And I think \nit&#39;s too ne=\r\ntwork/compute intensive to get a complete list at the client and then \nappl=\r\ny the filter/query&nbsp;to get the right matches.&nbsp; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV=\r\n&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200-02062004&gt;&lt;FONT face=3DArial color=3D#0000ff =\r\n\nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200-02062004&gt;=\r\n&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;And \nyour solution doesn&#39;t help=\r\n the version problem.&nbsp; If the URI changes, it \ndoesn&#39;t matter whether =\r\nthe algorithm changes or not, backwards compat still has \nto either be gran=\r\nted or lost.&nbsp; If there isn&#39;t backwards compat, the client \neither has =\r\nto get the new URI list or the new algorithm, and I think propagating \nthe =\r\nalgorithm is fine.&nbsp; Just like getting a new form page if somebody \nhap=\r\npens to be editing a form and the URI construction changes right in the \nmi=\r\nddle.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200-02062004&gt;&lt;FONT face=\r\n=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN cl=\r\nass=3D209535200-02062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;I have=\r\n \nnot a problem at all with relative URIs being not portable across \nauthor=\r\nities.&nbsp; It&#39;s up to each authority to define and describe it&#39;s URI \ncon=\r\nstruction algorithm if it wants to expose one to a client.&nbsp; Re-use of =\r\n\nrelative URIs across domains falls way outside the 80/20 point for the app=\r\n I&#39;ve \nbeen talking about.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200=\r\n-02062004&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200-02062004&gt;&lt;FONT face=3DArial color=3D#00=\r\n00ff \nsize=3D2&gt;Cheers,&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D209535200-020=\r\n62004&gt;&lt;FONT face=3DArial color=3D#0000ff \nsize=3D2&gt;Dave&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;=\r\n\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #0=\r\n000ff 2px solid&quot;&gt;\n  &lt;DIV class=3DOutlookMessageHeader dir=3Dltr align=3Dlef=\r\nt&gt;&lt;FONT face=3DTahoma \n  size=3D2&gt;-----Original Message-----&lt;BR&gt;&lt;B&gt;From:&lt;/B=\r\n&gt; Seairth Jacobs \n  [mailto:seairth@...]&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; Tuesday, J=\r\nune 01, 2004 4:54 \n  PM&lt;BR&gt;&lt;B&gt;To:&lt;/B&gt; rest-discuss&lt;BR&gt;&lt;B&gt;Subject:&lt;/B&gt; Re: [=\r\nrest-discuss] Re-using \n  information fields for queries in REST&lt;BR&gt;&lt;BR&gt;&lt;/F=\r\nONT&gt;&lt;/DIV&gt;&quot;David Orchard&quot; \n  wrote: \n  &lt;BLOCKQUOTE \n  cite=3Dmid32D5845A745=\r\nBFB429CBDBADA57CD41AF07E669D4@... \n  type=3D&quot;cite&quot;&gt;\n    &lt;=\r\nBLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;PRE wrap=3D&quot;&quot;&gt;-----Original Message-----\nFrom: Wa=\r\nlden Mathews [&lt;A class=3Dmoz-txt-link-freetext href=3D&quot;mailto:walden@eqwali=\r\nty.com&quot;&gt;mailto:walden@...&lt;/A&gt;]\n\nThat looks more like a collection =\r\nor subset to me.  A single\nartist resource might be more like /Artist/123. =\r\n An important\nquestion is: how does the client discover that URI?  The &quot;hyp=\r\ntertext\nengine&quot; constraint of REST really wants it to be discovered, not\nfa=\r\nbricated by client as a parameter list.\n    &lt;/PRE&gt;&lt;/BLOCKQUOTE&gt;&lt;PRE wrap=3D=\r\n&quot;&quot;&gt;&lt;!----&gt;\nWhy is discovery of a particular URI &quot;better&quot; than discovery of =\r\nthe construction technique for a URI?  This argues that HTML FORM GETs are =\r\na bad way of creating URIs because they are fabricated.\n  &lt;/PRE&gt;&lt;/BLOCKQUOT=\r\nE&gt;Suppose you defined the semantics of the query response \n  format to prov=\r\nide such constraints/rules necessary to construct URIs.&nbsp; As \n  long as=\r\n the client understands the semantics of the format, you are basically \n  w=\r\nhere HTML forms are.&nbsp; However, just listing the URIs themselves would =\r\nbe \n  much more straight forward.&nbsp; The URI is an opaque identifier.&nb=\r\nsp; As \n  such, the client can stay dumb and loosely coupled.&nbsp; If, at =\r\nsome later \n  time, you should choose to change the URI construction (say f=\r\nrom /artist/123 \n  to /artist/tu123 or /a23423992359652), the client contin=\r\nues working \n  unchanged.&nbsp; The constructed URI approach, on the other =\r\nhand, would be \n  brittle.&nbsp; You would either need to construct your UR=\r\nIs in a \n  backward-compatible manner or require the clients to learn the n=\r\new \n  construction rules, neither of which are a very desirable \n  choice.&lt;=\r\nBR&gt;&lt;BR&gt;Suppose you want to reference artists on another site that uses \n  a=\r\nn entirely different URI format.&nbsp; Are you going to reverse-engineer \n =\r\n those URIs and add yet more semantics to the query response format for tho=\r\nse \n  URIs?&lt;BR&gt;&lt;BR&gt;Also, there&#39;s a propensity for humans to see patterns in=\r\n \n  structures.&nbsp; URIs are often such a structure.&nbsp; I agree that a=\r\n person \n  seeing /artist/123 may be inclined to try artist/124.&nbsp; Howe=\r\nver, I think \n  people are more inclined to see /artist?id=3D123 and try /a=\r\nrtist?id=3D124.&nbsp; \n  The moment you tell people that there is a pattern=\r\n, they expect the \n  pattern.&nbsp; You can&#39;t stop people from seeing patte=\r\nrns where there may not \n  be any, but you can certainly stop from telling =\r\npeople there is a pattern \n  where you know there is not one.&lt;BR&gt;&lt;BR&gt;--&lt;BR&gt;=\r\nSeairth Jacobs&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------_=_NextPart_001_01C4483E.5EAE65C4--\r\n\n"}}