{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":454665725,"authorName":"Juergen Brendel","from":"Juergen Brendel &lt;juergen.brendel@...&gt;","profile":"brendel.juergen","replyTo":"SENDER","senderId":"p1MMCAOc50kdQGL3UF0SfxwMYFOcP5KYzLno8rM_A9eE-94O9K1bHiThcD3bULBwZf5mjxtxCpTWg7hDxlTo2lj5f-g-uPGoWIST7eyWzw4dPh73Hg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1294096711","msgId":17179,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyOTQwOTY3MTEuMzcyMy45Ni5jYW1lbEBiYWNrcGFjaz4=","inReplyToHeader":"PEFBTkxrVGk9UTEwMW9QWU4ta0hjWVh6R0RxLWJFekJSUVFkbVQ4RUZPaWdCOEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPgkgPDREMTlDREQzLjQwODA1QHdlYnIzLm9yZz4gPDcyMDA1RkNFNDdDRDRFMUE4QUUxNTc3QzlERjk2QUM1QEpyblBDPgkgPDREMTlERDczLjkwMTAyMDdAd2VicjMub3JnPgkgPEFBTkxrVGluaEJ3dW90dmhiNTdHM3gyQV9xbj10RUhLZFRIamZlRThfWVk1VEBtYWlsLmdtYWlsLmNvbT4JIDw0RDFBMkZEMS43MDEwNTAyQHdlYnIzLm9yZz4gPDBCRjVGOEJBLTQ3RTAtNDcwMy04MzkwLTYxMEI0RjRDREY5MUBtYWMuY29tPgkgPDEyOTM1Njk5NzYuMTU1ODkuNTAuY2FtZWxAYmFja3BhY2s+CSA8MjAxMDEyMjkwMDQwMjkuZjE0OTM3ZWUuZXJpY0BiaXNvbnN5c3RlbXMubmV0PgkgPDEyOTM2NDMxMjQuMTU1ODkuNzIuY2FtZWxAYmFja3BhY2s+CSA8MjAxMDEyMjkxMzUxNDUuYmFhNTQzZDQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PgkgPDEyOTM2NTc3NjQuMTYyMzcuMy5jYW1lbEBiYWNrcGFjaz4JIDwyMDEwMTIyOTE5MjYxNi5jZjk1M2JjZS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CSA8MTI5NDA4NzM3MC4zNzIzLjUuY2FtZWxAYmFja3BhY2s+CSA8QUFOTGtUaW1YLVpHNjEwN0ZwRFdrdjAwWlBjQmZZRFpXa0c0Q0FUSzI4aThFQG1haWwuZ21haWwuY29tPgkgPEFBTkxrVGk9UTEwMW9QWU4ta0hjWVh6R0RxLWJFekJSUVFkbVQ4RUZPaWdCOEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17178,"nextInTopic":17180,"prevInTime":17178,"nextInTime":17180,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"Hello! ... Right, that was actually one of my other questions: Often it seems that it would be nice to indicate in the link itself what media type and HTTP ","rawEmail":"Return-Path: &lt;juergen.brendel@...&gt;\r\nX-Sender: juergen.brendel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 80178 invoked from network); 3 Jan 2011 23:18:39 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m13.grp.re1.yahoo.com with QMQP; 3 Jan 2011 23:18:39 -0000\r\nX-Received: from unknown (HELO mail-pv0-f179.google.com) (74.125.83.179)\n  by mta3.grp.re1.yahoo.com with SMTP; 3 Jan 2011 23:18:39 -0000\r\nX-Received: by pvg13 with SMTP id 13so3698410pvg.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 03 Jan 2011 15:18:38 -0800 (PST)\r\nX-Received: by 10.142.81.3 with SMTP id e3mr17207638wfb.131.1294096718286;\n        Mon, 03 Jan 2011 15:18:38 -0800 (PST)\r\nReturn-Path: &lt;juergen.brendel@...&gt;\r\nX-Received: from [10.1.1.4] (ip-118-90-122-137.xdsl.xnet.co.nz [118.90.122.137])\n        by mx.google.com with ESMTPS id b11sm29941616wff.9.2011.01.03.15.18.35\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Mon, 03 Jan 2011 15:18:37 -0800 (PST)\r\nTo: mike amundsen &lt;mamund@...&gt;\r\nCc: Randy Fischer &lt;fischer@...&gt;, Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;AANLkTi=Q101oPYN-kHcYXzGDq-bEzBRQQdmT8EFOigB8@...&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\n\t &lt;4D19CDD3.40805@...&gt; &lt;72005FCE47CD4E1A8AE1577C9DF96AC5@JrnPC&gt;\n\t &lt;4D19DD73.9010207@...&gt;\n\t &lt;AANLkTinhBwuotvhb57G3x2A_qn=tEHKdTHjfeE8_YY5T@...&gt;\n\t &lt;4D1A2FD1.7010502@...&gt; &lt;0BF5F8BA-47E0-4703-8390-610B4F4CDF91@...&gt;\n\t &lt;1293569976.15589.50.camel@backpack&gt;\n\t &lt;20101229004029.f14937ee.eric@...&gt;\n\t &lt;1293643124.15589.72.camel@backpack&gt;\n\t &lt;20101229135145.baa543d4.eric@...&gt;\n\t &lt;1293657764.16237.3.camel@backpack&gt;\n\t &lt;20101229192616.cf953bce.eric@...&gt;\n\t &lt;1294087370.3723.5.camel@backpack&gt;\n\t &lt;AANLkTimX-ZG6107FpDWkv00ZPcBfYDZWkG4CATK28i8E@...&gt;\n\t &lt;AANLkTi=Q101oPYN-kHcYXzGDq-bEzBRQQdmT8EFOigB8@...&gt;\r\nContent-Type: text/plain; charset=&quot;UTF-8&quot;\r\nOrganization: MuleSoft\r\nDate: Tue, 04 Jan 2011 12:18:31 +1300\r\nMessage-ID: &lt;1294096711.3723.96.camel@backpack&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.28.1 \r\nContent-Transfer-Encoding: 7bit\r\nFrom: Juergen Brendel &lt;juergen.brendel@...&gt;\r\nReply-To: juergen.brendel@...\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=454665725; y=UC9Cn-e5X3QT_0iZBOhzhfXfNxRmp6legFw8HVPB11G8xTTBz472Hcho\r\nX-Yahoo-Profile: brendel.juergen\r\n\r\n\nHello!\n\nOn Mon, 2011-01-03 at 16:27 -0500, mike amundsen wrote:\n&gt; I currently use @rels for application-level semantics. IOW, they don&#39;t\n&gt; indicate any protocol details (HTTP methods, content-types, etc.) \n\nRight, that was actually one of my other questions: Often it seems that\nit would be nice to indicate in the link itself what media type and HTTP\nmethod is supported. Something like:\n\n        &quot;links&quot; : [ {\n                                  &quot;href&quot;       : &quot;/foo/bar&quot;,\n                                  &quot;rel&quot;        : &quot;self&quot;,\n                                  &quot;method&quot;     : &quot;GET&quot;\n                            },\n                            {\n                              &quot;href&quot;       : &quot;/foo/bar&quot;,\n                              &quot;rel&quot;        : &quot;edit&quot;,\n                              &quot;method&quot;     : &quot;PUT&quot;,\n                              &quot;media-type&quot; : &quot;application/something&quot;\n                            }\n                          ]\n\nOr something thereabouts (this was JSON-like, but that shouldn&#39;t\ndistract). I admit that if your media type is specified/standardized\nsomewhere then most of this information isn&#39;t required right here at\nthis point, since the method and media type (for POST/PUT) could be\ndefined there. On the other hand, I would actually love to see this sort\nof information in the control links of a RESTful API, since it means I\ndon&#39;t have to jump back and forth between type spec and the stuff\npresented to me in the API, instead I can just look right here and see\n(almost) everything I need.\n\nIt seems an API that you can just look at without having to read much of\na spec is more user friendly and - all else being equal - should see\nbetter/easier adoption.\n\nIt also allows you to evolve your API independently of the exact media\ntype definition, since as you are adding more control links over time,\nthey can just be presented, carrying all the information you need to\nenjoy them.\n\nFor example, the &#39;image&#39; property of a personal profile or bio could\nadvertise (in the link description) the image media types it can accept.\nMore can be added over time, without needing to update the media type\ndescription.\n\n&gt; \n&gt; I currently implement this app-level support using @rel in two\n&gt; different ways.\n\n&gt; *** app-level semantics are &quot;native&quot; to a custom media-type. \n&gt; In this case, the rel values are &quot;baked&quot; into the media type support\n&gt; (e.g. HTML does this w/ rel=&quot;stylesheet&quot;). I design a very narrow\n&gt; media type that is targeted for a collection of related work and use\n&gt; @rel to hold app-level details that can be used by client apps to\n&gt; perform their own processing. This works well for my current round of\n&gt; &quot;m2m-style&quot; clients.\n\nHm. But then you design application specific media types, which we are\nsupposed to avoid now, don&#39;t you?\n\n\n&gt; *** app-level semantics are &quot;adjunct&quot; to a generic media type.\n&gt; In this case, the rel values are documented &quot;out-of-band&quot; (e.g. within\n&gt; the generic media type[1], IANA Link Relations[2], RelExtensions[3],\n&gt; ParamsRUs [4], or my own implementation-specific documentation). Then\n&gt; code-on-demand is sent to the client to help the client &quot;sort out&quot; the\n&gt; meaning and use of these real values. This is done a a case-by-case\n&gt; basis; offers the most flexibility, but is non-standard for each\n&gt; implementation (including supporting more than one client type\n&gt; (browser, command-line, desktop, etc.).\n&gt; \nI also think it&#39;s useful to design a very generic type (such as XML with\nlinks or JSON with links) along with a decent set of generally useful\nrel values. Once that&#39;s done, this might be enough for some applications\nalready, while other apps can define their custom media types merely by\ndefining additional &#39;rel&#39; values for that generic type, rather than a\nbrand new type from scratch? Maybe that&#39;s what this whole discussion\nabout micro-types is about.\n\nOver time, I can imagine that a set of &#39;non generic&#39; rel values would\nemerge as generally useful and could thus be added to the media type\nspec which as a result could evolve.\n\nJuergen\n\n\n\n-- \nJuergen Brendel\nMuleSoft\n\n\n"}}