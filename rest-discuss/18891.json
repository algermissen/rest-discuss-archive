{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":523150837,"authorName":"Rushforth, Peter","from":"&quot;Rushforth, Peter&quot; &lt;peter.rushforth@...&gt;","profile":"prushfor","replyTo":"SENDER","senderId":"5akwWasiMuV5VnizHfmo0RVGMjjEdvEhg_iH_3s-QP-2Ray85dp8eSX0P_BpYD_lycgM3h7uoavRel_QAXcy72aGIkmQTcx7gmC7Np9HZlGHW1pApHJVhSoa8rxb","spamInfo":{"isSpam":false,"reason":"12"},"subject":"@xml:href, @xml:tref,@xml:src, @xml:type, @xml:hreflang, @xml:method","postDate":"1340237270","msgId":18891,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDFDRDU1RjA0NTM4REVBNEY4NUYzQURGNzc0NTQ2NEFGMUFEREYzOTlAUy1CU0MtTUJYNC5ucm4ubnJjYW4uZ2MuY2E+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":18890,"nextInTime":18892,"topicId":18891,"numMessagesInTopic":1,"msgSnippet":"Hi, As a long-time XML user, I was slightly shocked when I first read in REST In Practice [1] that XML as a hypermedia format is a non-starter.  When I read","rawEmail":"Return-Path: &lt;Peter.Rushforth@...&gt;\r\nX-Sender: Peter.Rushforth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 45391 invoked from network); 21 Jun 2012 00:07:52 -0000\r\nX-Received: from unknown (98.137.35.162)\n  by m9.grp.sp2.yahoo.com with QMQP; 21 Jun 2012 00:07:52 -0000\r\nX-Received: from unknown (HELO nrcan.gc.ca) (132.156.238.13)\n  by mta6.grp.sp2.yahoo.com with SMTP; 21 Jun 2012 00:07:52 -0000\r\nX-Received: from S-BSC-CAS2.nrn.nrcan.gc.ca (132.156.238.12) by\n S-BSC-EDGE1.nrcan.gc.ca (132.156.238.13) with Microsoft SMTP Server (TLS) id\n 14.2.283.3; Wed, 20 Jun 2012 20:07:51 -0400\r\nX-Received: from S-BSC-MBX4.nrn.nrcan.gc.ca ([169.254.4.38]) by\n S-BSC-CAS2.nrn.nrcan.gc.ca ([fe80::48d4:f168:78ba:d4e8%19]) with mapi id\n 14.02.0283.003; Wed, 20 Jun 2012 20:07:51 -0400\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nThread-Topic: @xml:href, @xml:tref,@xml:src, @xml:type, @xml:hreflang,\n @xml:method\r\nThread-Index: Ac1PP1SSIPcjbx9DT6yc4Rr+4QaGSQ==\r\nDate: Thu, 21 Jun 2012 00:07:50 +0000\r\nMessage-ID: &lt;1CD55F04538DEA4F85F3ADF7745464AF1ADDF399@...&gt;\r\nAccept-Language: en-CA, en-US\r\nContent-Language: en-US\r\nX-MS-Has-Attach:\r\nX-MS-TNEF-Correlator:\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nMIME-Version: 1.0\r\nReturn-Path: Peter.Rushforth@...\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Rushforth, Peter&quot; &lt;peter.rushforth@...&gt;\r\nSubject: @xml:href, @xml:tref,@xml:src, @xml:type, @xml:hreflang, @xml:method\r\nX-Yahoo-Group-Post: member; u=523150837; y=8gHjNg9kPGFo5UGu37ALtywCk6pyOaQLRWETVsTfehQ5Z9mc55i0Ay77eKqTCvOZgYssbKyX_ZhZ4JM\r\nX-Yahoo-Profile: prushfor\r\n\r\nHi,\n\nAs a long-time XML user, I was slightly shocked when I first read in &quot;=\r\nREST In Practice&quot; [1] that XML as a hypermedia format is a non-starter.  Wh=\r\nen I read it a second time, in &quot;Hypermedia APIs in HTML5 and Node.js&quot; [2], =\r\nI was stirred!  How could it be that such a flexible tool (my hammer!) had =\r\nnot incorporated a concept so fundamental to the web and especially REST??\n=\r\n\nUpon further reflection, I determined that something must be done!   But w=\r\nhat?  XLink had tried, and failed.  Atom had extensively consulted the comm=\r\nunity resulting in a nicely generic hypermedia format that may yet hit the =\r\nbig time: the open Web.\n\nWhy had XML, whose charter states, &quot;Its goal is to=\r\n ... be served, received, and processed on the Web in the way that is now p=\r\nossible with HTML.&quot; [3], failed to achieve that goal?\n\nI have come to think=\r\n that the problem lies in the very flexibility which gives XML its power; i=\r\nt may also be that flexibility which has prevented it from achieving its nu=\r\nmber one goal.\n\nTo that end, I pondered what (that was easy, mostly copy fr=\r\nom html), and how, to &quot;cast in stone&quot; hypermedia affordances in XML.  Why? =\r\n So they could be relied upon as hypermedia affordances, across all XML-bas=\r\ned media types.  So that potentially, browsers which already supported, for=\r\n example application/xml, could further recognize those affordances and all=\r\now users to leverage the power of REST through media types apart from text/=\r\nhtml.\n\nI&#39;ve speculated about these ideas in the past [4],[5] got some suppo=\r\nrt from some very smart people ;-), and was also referred to the discussion=\r\n of the classification of hypermedia affordances in Mike Amundsen&#39;s book [2=\r\n].  I&#39;ve used that classification to refine the scope of a set of XML-based=\r\n hypermedia affordances which could be shared across all XML media types, e=\r\nspecially application/xml, I think in a backwards-compatible way.  I would =\r\nlove to hear your comments, good, bad or indifferent, and questions, about =\r\nthis proposal, especially if you develop browsers or related devices for a =\r\nliving.\n\nI include an XML Schema which I wrote, which contains some comment=\r\ns explaining these core affordance components.   There are now, and hopeful=\r\nly &#39;forever&#39;, seven core attributes: xml:href, xml:tref, xml:src, xml:rel, =\r\nxml:type, xml:hreflang and xml:method.  The idea behind using attributes is=\r\n that they can be re-combined as appropriate to the situation, as illustrat=\r\ned by the Amundsen&#39;s hypermedia affordance classification.  It seems to me =\r\nthat the only thing preventing their use is, well, nothing, and everything.=\r\n  In order to be useful, they need acceptance, and probably a place among t=\r\nhese other specifications [6],[7],[8].  The latter won&#39;t happen unless ther=\r\ne is a significant degree of the former [9].\n\nYou might ask, why not just @=\r\nhref, etc?  The trouble is, in XML, attributes are in no namespace.  They b=\r\norrow their context from the element they sit on.  @href means whatever the=\r\n schema designer says it means, which means it can&#39;t be relied upon across =\r\nmedia types.  The XML namespace, in contrast is fixed, always present, even=\r\n when not declared, and very very static (appropriately so).  Once defined,=\r\n these attributes are &quot;cast in stone&quot;, so to speak, which is a good (essent=\r\nial) thing for hypermedia affordances.\n\n[1] http://restinpractice.com\n[2] h=\r\nttp://www.amazon.ca/Building-Hypermedia-APIs-HTML5-Node/dp/1449306578\n[3] h=\r\nttp://www.w3.org/TR/2004/REC-xml11-20040204/\n[4] http://lists.xml.org/archi=\r\nves/xml-dev/201204/msg00023.html\n[5] https://groups.google.com/group/hyperm=\r\nedia-web/browse_thread/thread/5d4a3782cfbeb568\n[6] http://www.w3.org/TR/xml=\r\nbase/\n[7] http://www.w3.org/TR/REC-xml/\n[8] http://www.w3.org/TR/xml-id/\n[9=\r\n] http://lists.w3.org/Archives/Public/xml-editor/2012AprJun/0001.html\n\nHere=\r\n is the schema.  It is not directly necessary, except to the extent that it=\r\n documents the &quot;known&quot; combinations of affordances defined. \n\nSo, what do y=\r\nou think?\n\n&lt;?xml version=3D&quot;1.0&quot; encoding=3D&quot;UTF-8&quot;?&gt;\n&lt;xs:schema xmlns:xs=\r\n=3D&quot;http://www.w3.org/2001/XMLSchema&quot; elementFormDefault=3D&quot;qualified&quot; targ=\r\netNamespace=3D&quot;http://www.w3.org/XML/1998/namespace&quot; xmlns:xml=3D&quot;http://ww=\r\nw.w3.org/XML/1998/namespace&quot;&gt;\n    &lt;xs:attribute name=3D&quot;href&quot; type=3D&quot;xs:an=\r\nyURI&quot;&gt;\n        &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;Almost self ex=\r\nplanatory.  That&#39;s a standard at its shared understanding best.  Legal valu=\r\nes according to  RFC 3986.&lt;/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n    =\r\n&lt;/xs:attribute&gt;\n    &lt;xs:attribute name=3D&quot;tref&quot; type=3D&quot;xs:string&quot;&gt;\n       =\r\n &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;The tref attribute is a &quot;tem=\r\nplated link&quot;.  The reason that a separate attribute is required is because =\r\nthe value of an href is expected to be a legal URI, which excludes template=\r\nd links which follow RFC 6570 because of the use of non-URI characters. In =\r\nreflecting on templated links, it is likely a good idea to use URI template=\r\ns in a tref attribute anyway, as this will maximize the possibility of a ca=\r\ncheable response due to the encoding of the order of parameters, as well as=\r\n their case. In &quot;Building Hypermedia APIs with HTML5 and Node. Building Hyp=\r\nermedia APIs with HTML5 and Node&quot;, by M Amundsen, ISBN: 9781449309497, p16,=\r\n an HTML FORM is used to describe the LT H-Factor.   FORMs do not leverage =\r\nthe URI Templates RFC 6570, so it may be possible that URIs composed by app=\r\nlication of FORM elements don&#39;t follow a predictable parameter order (say t=\r\nhis is managed differently by different user agents(?)) hence, may result i=\r\nn less than optimal cacheability of responses. Once processed by a link tem=\r\nplate processor, value would be a legal URI per RFC 3986.&lt;/xs:documentation=\r\n&gt;\n        &lt;/xs:annotation&gt;\n    &lt;/xs:attribute&gt;\n    &lt;xs:attribute name=3D&quot;sr=\r\nc&quot; type=3D&quot;xs:anyURI&quot;&gt;\n        &lt;xs:annotation&gt;\n            &lt;xs:documentatio=\r\nn&gt;The src attribute is a URI per RFC 3986, to a resource which is meant to =\r\nbe part of the current resource.  So it combines href with @rel=3D&quot;partof&quot; =\r\nor something like that.  This has been the subject of much debate since the=\r\n beginning of time.  In any case, it has a specific composition semantic ar=\r\nound the URI it contains.  Since it exists, it might be necessary to also h=\r\nave tsrc attribute to match the tref attribute, but this seems to me to be =\r\ntaking a path similar to what was the subject of the debates above.  So, no=\r\nt going there, just use tref if you need to and once the link is composed, =\r\nuse a @rel associated with the tref to define if it&#39;s a composition or not =\r\n(in your media type definition).&lt;/xs:documentation&gt;\n        &lt;/xs:annotation=\r\n&gt;\n    &lt;/xs:attribute&gt;\n    &lt;xs:attribute name=3D&quot;rel&quot;&gt;\n        &lt;xs:annotatio=\r\nn&gt;\n            &lt;xs:documentation&gt;What is the meaning of a rel value?  I bel=\r\nieve the intention is to communicate the relation of the linked-to resource=\r\n to the current representation. RFC 5988 allows a rel to have &gt; 1 token,=\r\n whereas atom limits it to 1.  What is the effect/meaning of &gt; 1 value?&lt;=\r\n/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n        &lt;xs:simpleType&gt;\n       =\r\n     &lt;xs:union memberTypes=3D&quot;xs:anyURI xs:token&quot;/&gt;\n        &lt;/xs:simpleType=\r\n&gt;\n    &lt;/xs:attribute&gt;\n    &lt;xs:attribute name=3D&quot;type&quot; type=3D&quot;xs:string&quot;&gt;\n =\r\n       &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;A media type, per RFC =\r\n2046.&lt;/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n    &lt;/xs:attribute&gt;\n    &lt;=\r\nxs:attribute name=3D&quot;hreflang&quot; type=3D&quot;xs:language&quot;&gt;\n        &lt;xs:annotation=\r\n&gt;\n            &lt;xs:documentation&gt;See xml:lang for acceptable content specifi=\r\ncation.&lt;/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n    &lt;/xs:attribute&gt;\n   =\r\n &lt;xs:attribute name=3D&quot;method&quot; type=3D&quot;xs:token&quot;&gt;\n        &lt;xs:annotation&gt;\n =\r\n           &lt;xs:documentation&gt;An HTTP method, per RFC 2616 section 9.&lt;/xs:do=\r\ncumentation&gt;\n        &lt;/xs:annotation&gt;\n    &lt;/xs:attribute&gt;\n    &lt;xs:attribute=\r\nGroup name=3D&quot;LinkOutboundAttGroup&quot;&gt;\n        &lt;xs:attribute ref=3D&quot;xml:href&quot;=\r\n/&gt;\n        &lt;xs:attributeGroup ref=3D&quot;xml:LinkAnnotationControls&quot;&gt;\n         =\r\n   &lt;xs:annotation&gt;\n                &lt;xs:documentation&gt;The set of LinkAnnotat=\r\nionControls in this media type specification includes only a &#39;core&#39; group w=\r\nhich are needed for RESTful interactions on the Web.&lt;/xs:documentation&gt;\n   =\r\n         &lt;/xs:annotation&gt;\n        &lt;/xs:attributeGroup&gt;\n    &lt;/xs:attributeGr=\r\noup&gt;\n    &lt;xs:attributeGroup name=3D&quot;LinkEmbeddedAttGroup&quot;&gt;\n        &lt;xs:attr=\r\nibute ref=3D&quot;xml:src&quot;/&gt;\n        &lt;xs:attributeGroup ref=3D&quot;xml:LinkAnnotatio=\r\nnControls&quot;&gt;\n            &lt;xs:annotation&gt;\n                &lt;xs:documentation&gt;O=\r\nne of the reasons to *have* a @src attribute is to avoid having to decorate=\r\n the link because the @src name implies the rel, type and language.  But si=\r\nnce they are optional here: if you need them, then use them.&lt;/xs:documentat=\r\nion&gt;\n            &lt;/xs:annotation&gt;\n        &lt;/xs:attributeGroup&gt;\n    &lt;/xs:att=\r\nributeGroup&gt;\n    &lt;xs:attributeGroup name=3D&quot;LinkTemplateAttGroup&quot;&gt;\n        =\r\n&lt;xs:attribute ref=3D&quot;xml:tref&quot;/&gt;\n        &lt;xs:attributeGroup ref=3D&quot;xml:Link=\r\nAnnotationControls&quot;/&gt;\n    &lt;/xs:attributeGroup&gt;\n    &lt;xs:attributeGroup name=\r\n=3D&quot;LinkIdempotentAttGroup&quot;&gt;\n        &lt;xs:attribute ref=3D&quot;xml:href&quot;/&gt;\n     =\r\n   &lt;xs:attributeGroup ref=3D&quot;xml:LinkAnnotationControls&quot;/&gt;\n    &lt;/xs:attribu=\r\nteGroup&gt;\n    &lt;xs:attributeGroup name=3D&quot;LinkNonIdempotentAttGroup&quot;&gt;\n       =\r\n &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;Examples of Non idempotent h=\r\nypermedia affordances are certain configurations of the html form element, =\r\nand the atom publishing protocol collection element, which also acts like a=\r\n form.  In short, non-idempotent links seem to require more elaborate hyper=\r\nmedia affordances to correctly interact with them.  So recommended practice=\r\n would be to re-use the hypermedia affordances defined in this specificatio=\r\nn, and combine them with markup specific to the media type, and document th=\r\ne completed affordance appropriately in the media type documentation.  This=\r\n is similar to what is recommended in &quot;Building Hypermedia APIs with HTML5 =\r\nand Node. Building Hypermedia APIs with HTML5 and Node&quot;, ISBN: 978144930949=\r\n7, on page 17.&lt;/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n        &lt;xs:attr=\r\nibute ref=3D&quot;xml:href&quot;/&gt;\n        &lt;xs:attribute ref=3D&quot;xml:tref&quot;/&gt;\n        &lt;=\r\nxs:attributeGroup ref=3D&quot;xml:LinkAnnotationControls&quot;/&gt;\n    &lt;/xs:attributeGr=\r\noup&gt;\n    &lt;xs:attributeGroup name=3D&quot;LinkAnnotationControls&quot;&gt;\n        &lt;xs:an=\r\nnotation&gt;\n            &lt;xs:documentation&gt;According to &quot;Building Hypermedia A=\r\nPIs with HTML5 and Node. Building Hypermedia APIs with HTML5 and Node&quot;, ISB=\r\nN: 9781449309497, a CL, or Link Annotation Control, provides inline metadat=\r\na for the links themselves.  The data allows clients to locate and understa=\r\nnd the meaning of links themselves. The best example is that defined by RFC=\r\n 5023, link@rel=3D&quot;...&quot;, where the @rel decorates the uri and indicates to =\r\nthe recipient that the URL has a defined meaning (defined by the media type=\r\n specification) in the context of the containing response. Curiously, RFC 5=\r\n988 Web Linking allows a link to contain multiple @rel values, whereas RFC =\r\n4287 The Atom Syndication Format allows only a single @rel value.  I believ=\r\ne there was a bit of debate in the atom working group as to whether this sh=\r\nould be a &quot;one or more&quot; construct or simply an &quot;only one&quot;; the latter is th=\r\ne final outcome.  This begs the question: what is a @rel value?  What is th=\r\ne effect on the URI? While any given mime type may decide to add other cont=\r\nrols beyond @rel, it is the most common example that is useful.  Other exam=\r\nples of the CL factor include XLink&#39;s extended set of attributes, which are=\r\n widely not understood because of their complexity.&lt;/xs:documentation&gt;\n    =\r\n    &lt;/xs:annotation&gt;\n        &lt;xs:attribute ref=3D&quot;xml:rel&quot;/&gt;\n        &lt;xs:at=\r\ntribute ref=3D&quot;xml:type&quot;&gt; &lt;/xs:attribute&gt;\n        &lt;xs:attribute ref=3D&quot;xml:=\r\nhreflang&quot;/&gt;\n    &lt;/xs:attributeGroup&gt;\n    &lt;xs:attributeGroup name=3D&quot;MethodC=\r\nontrols&quot;&gt;\n        &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;The last bu=\r\nt not least hypermedia affordance is the method attribute, which comes from=\r\n the most successful hypermedia format on the planet.  So, xml will unasham=\r\nedly follow the lead of HTML on this attribute.  Use sparingly, otherwise y=\r\nour hypermedia may get so complex as to be unimplementable!&lt;/xs:documentati=\r\non&gt;\n        &lt;/xs:annotation&gt;\n        &lt;xs:attribute ref=3D&quot;xml:method&quot;/&gt;\n   =\r\n &lt;/xs:attributeGroup&gt;\n    &lt;xs:complexType name=3D&quot;ProtocolControls&quot;&gt;\n      =\r\n  &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;These hypermedia affordance=\r\ns contain &#39;hints&#39; eg @type as to what values to use in protocol headers and=\r\n methods.&lt;/xs:documentation&gt;\n        &lt;/xs:annotation&gt;\n        &lt;xs:attribute=\r\nGroup ref=3D&quot;xml:LinkAnnotationControls&quot;&gt;\n            &lt;xs:annotation&gt;\n     =\r\n           &lt;xs:documentation&gt;This group contains ReadControls and UpdateCon=\r\ntrols as desribed in Building Hypermedia APIs with HTML5 and Node. Building=\r\n Hypermedia APIs with HTML5 and Node, ISBN: 9781449309497 on p18.  They can=\r\n not be represented when they both have the same content model, since xml s=\r\nchema thinks they conflict, but obviously a read can`t be a write so if we =\r\nsimply represent both with the LinkAnnotationControl we achieve the same go=\r\nal, which is to allow authors to mark up their elements to designate them a=\r\ns read or write hypermedia affordances as required.&lt;/xs:documentation&gt;\n    =\r\n        &lt;/xs:annotation&gt;\n        &lt;/xs:attributeGroup&gt;\n        &lt;xs:attribute=\r\nGroup ref=3D&quot;xml:MethodControls&quot;&gt;\n            &lt;xs:annotation&gt;\n             =\r\n   &lt;xs:documentation/&gt;\n            &lt;/xs:annotation&gt;\n        &lt;/xs:attributeG=\r\nroup&gt;\n    &lt;/xs:complexType&gt;\n    &lt;xs:attributeGroup name=3D&quot;ReadControls&quot;&gt;\n =\r\n       &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;See documentation for =\r\nthe ProtocolControls complex type.&lt;/xs:documentation&gt;\n        &lt;/xs:annotati=\r\non&gt;\n    &lt;/xs:attributeGroup&gt;\n    &lt;xs:attributeGroup name=3D&quot;UpdateControls&quot;=\r\n&gt;\n        &lt;xs:annotation&gt;\n            &lt;xs:documentation&gt;See documentation f=\r\nor the ProtocolControls complex type.&lt;/xs:documentation&gt;\n        &lt;/xs:annot=\r\nation&gt;\n    &lt;/xs:attributeGroup&gt;\n&lt;/xs:schema&gt;\n\n"}}