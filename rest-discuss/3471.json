{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119744001,"authorName":"Chuck Hinson","from":"Chuck Hinson &lt;cmhinson@...&gt;","replyTo":"SENDER","senderId":"t0lQ8Kvgf6oAgye2OAXcl4nFq38ofXtg31VrdfRkP3j_LFfEV2ARYc8dmxNu_zUVyI47A9ujT6FXsE2jOJUQSsTijf0h0Xw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements","postDate":"1046757127","msgId":3471,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNFNjQzRjA3LjgwMDA4MDVAcG9uZC5jb20+","inReplyToHeader":"PEUxOHEzN3QtMDAwMnM3LTAwQGNhbnRlZW4+","referencesHeader":"PFBpbmUuTE5YLjQuNDAuMDMwMzAzMTYyODEyMC4yODgzLTEwMDAwMEBjb2xvc3N1cy5pMng+IDxFMThweXd4LTAwMDJvUC0wMEBjYW50ZWVuPiA8M0U2M0ZBNkUuMzA5MDEwM0Bwb25kLmNvbT4gPEUxOHEzN3QtMDAwMnM3LTAwQGNhbnRlZW4+"},"prevInTopic":3470,"nextInTopic":3472,"prevInTime":3470,"nextInTime":3472,"topicId":3351,"numMessagesInTopic":49,"msgSnippet":"... Which isn t surprising since its HTTP _Authentication_.  But that s neither here nor there. ... I ll take your word on the security bit.  I m not convinced","rawEmail":"Return-Path: &lt;cmhinson@...&gt;\r\nX-Sender: cmhinson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_4); 4 Mar 2003 05:52:08 -0000\r\nReceived: (qmail 81737 invoked from network); 4 Mar 2003 05:52:08 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m8.grp.scd.yahoo.com with QMQP; 4 Mar 2003 05:52:08 -0000\r\nReceived: from unknown (HELO smtp.comcast.net) (24.153.64.2)\n  by mta3.grp.scd.yahoo.com with SMTP; 4 Mar 2003 05:52:08 -0000\r\nReceived: from pond.com (pcp01418644pcs.umrion01.pa.comcast.net [68.80.15.97])\n by mtaout03.icomcast.net\n (iPlanet Messaging Server 5.2 HotFix 1.12 (built Feb 13 2003))\n with ESMTP id &lt;0HB700M1VMYV6Z@...&gt; for\n rest-discuss@yahoogroups.com; Tue, 04 Mar 2003 00:52:07 -0500 (EST)\r\nDate: Tue, 04 Mar 2003 00:52:07 -0500\r\nSubject: Re: [rest-discuss] W3C Note - User Agent Authentication FORM elements\r\nIn-reply-to: &lt;E18q37t-0002s7-00@canteen&gt;\r\nTo: Tyler Close &lt;tyler@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;3E643F07.8000805@...&gt;\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-transfer-encoding: 7BIT\r\nX-Accept-Language: en-us, en\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.2.1)\n Gecko/20021130\r\nReferences: &lt;Pine.LNX.4.40.0303031628120.2883-100000@colossus.i2x&gt;\n &lt;E18pywx-0002oP-00@canteen&gt; &lt;3E63FA6E.3090103@...&gt;\n &lt;E18q37t-0002s7-00@canteen&gt;\r\nFrom: Chuck Hinson &lt;cmhinson@...&gt;\r\nX-Yahoo-Group-Post: member; u=119744001\r\n\r\n\n\nTyler Close wrote:\n\n&gt;On Monday 03 March 2003 20:59, Chuck Hinson wrote:\n&gt;  \n&gt;\n&gt;&gt;I should note first, that I&#39;m a bit confused where this thread is going.\n&gt;&gt; It seems to me that we started by bitching about how browsers aren&#39;t\n&gt;&gt;terribly helpful with HTTP authentication.  Somehow, we&#39;ve ending up\n&gt;&gt;talking about capabilities-based security,\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;The link between the two topics is that HTTP Authentication is\n&gt;also not terribly helpful for implementing access control.\n&gt;\nWhich isn&#39;t surprising since its HTTP _Authentication_.  But that&#39;s \nneither here nor there.\n\n&gt;Switching to capabilities improves your GUI, your application\n&gt;design and your security.\n&gt;  \n&gt;\nI&#39;ll take your word on the security bit.  I&#39;m not convinced of the other \ntwo.  I get the feeling that you&#39;d just end up trading one set of \nproblems for another.  But again, that&#39;s neither here nor there.\n\n&gt;  \n&gt;\n&gt;&gt;which you have already\n&gt;&gt;indicated isn&#39;t really the best choice for the majority of what&#39;s on the\n&gt;&gt;web today.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;That is not the impression I intended to convey. Capability-based\n&gt;security is the best choice for implementing access control. Both\n&gt;capabilities *and* ACLs fail to implement DRM, so you might as\n&gt;well stick with ACLs for DRM hacks. (More on this at the end of\n&gt;the message.)\n&gt;  \n&gt;\nSo then, I don&#39;t understand your comment from an earlier message:\n&lt;quote&gt;... you&#39;re right, you wouldn&#39;t use this model to give everyone \ntheir own URI to a single, shared, read-only resource. &lt;/quote&gt;\n\nAs far as I am able to observe, an awful lot of the web consists of \nshared, read-only resources.  Are you saying that access control isn&#39;t \nnecessary for shared, read-only resources?\n\n&gt;  \n&gt;\n&gt;&gt;I think part of the problem I have is that with a capability model, it\n&gt;&gt;seems that you end up with everyone having their own private web of\n&gt;&gt;resources rather than having a public web of resources that are sharable\n&gt;&gt;with others.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Well, that&#39;s kinda the whole point of access control isn&#39;t it? Do\n&gt;you want your bank account to be part of the public web of\n&gt;resources?  If so, please send me the first link. ;)\n&gt;  \n&gt;\nhttps://www.accountlink.pncbank.com/index.html  :-)  \n\nUnfortunately, its not a good example because the frame that actually \nshows my account info has a URL that simply has a session id encoded in \nit.  Besides, I&#39;m really not interested in sharing my bank account info.\n\nA more useful example would be something like\n\nhttps://www.bank.com/myaccounts/savings/register\n\nWith http auth, I can give this URL to everyone who has an account at \nthe bank, and that URI means the same thing to all of them - the page \nthat shows the viewer the last 20 entries in their savings account register.\n\nI can put that link in a set of help pages that are not protected by any \naccess controls (and that don&#39;t need to be dynamically rendered).  I can \nbookmark that page and always go straight to it (modulo a login \n prompt).  I can send that link to a friend who also has an account at \nthe same bank (to tell him how to get to his saving account register). \n I can distribute a tool that somehow processes the info from a savings \naccount register at my bank without requiring each user configure the \ntool with their private URI.\n\nNote that I&#39;m not suggesting that this is a good solution for accessing \nbank accounts - it just illustrates the idea of a public, sharable URI. \n My understanding of the capability model leads me to conclude that I \ncan&#39;t do anything like the above because every user would have to have \ntheir own URI.\n\n&gt;The point of access control is to create private webs of\n&gt;resources, with finely controlled links between them. Capabilities\n&gt;are an excellent tool for implementing this.\n&gt;  \n&gt;\nI dont disagree.  But it appears to me that the private web that is \ncreated is only useful to one individual.  What about groups of people? \n If the answer is that everyone in the group shares the same, private \nURI, then how do I revoke access to just one member of the group. (I \nsuspect your answer to this is going show that I don&#39;t understand the \ncapability model after all.)\n\n&gt;  \n&gt;\n&gt;&gt;As a result, you&#39;ve lost the ability for people to connect\n&gt;&gt;those resources together in new ways to create new things on the web.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Exactly the opposite.  What you&#39;ve done is empowered people to\n&gt;securely connect those resource that they want connected. The ACL\n&gt;model prevents this.\n&gt;\n&gt;Just as an example, why don&#39;t you post to this list a link to a\n&gt;withdrawal record from your online bank account. With the current\n&gt;interface, this is not possible: you can&#39;t do it without also\n&gt;posting the password for your entire account. If your bank account\n&gt;was implemented with a capability-based security model, posting\n&gt;the withdrawal record link would be no problem.  Capabilities\n&gt;enable you to create links.  ACLs prevent you from creating links.\n&gt;  \n&gt;\nI&#39;m not sure why.  Assuming the withdrawal record has a URI, I dont see \nwhy I couldn&#39;t do that using a non-capability-based solution.  (I&#39;ve \nalso just realized that we&#39;re probably using the word _link_ differently.)\n\n&gt;  \n&gt;\n&gt;&gt;&gt;There are solutions to this, but first I&#39;ll point out that this\n&gt;&gt;&gt;issue doesn&#39;t apply to software programs.  &quot;Web services&quot; address\n&gt;&gt;&gt;program to program communication. Programs have a stack and a heap\n&gt;&gt;&gt;to help them keep track of what they&#39;ve got and what they&#39;re\n&gt;&gt;&gt;doing. A program doesn&#39;t &quot;navigate back&quot;, it just dereferences a\n&gt;&gt;&gt;variable.\n&gt;&gt;&gt;      \n&gt;&gt;&gt;\n&gt;&gt;I&#39;m not sure I&#39;d agree that &quot;web services&quot; is about program to program\n&gt;&gt;communication.  I&#39;m sure there are a lot of &quot;web services&quot; where there&#39;s\n&gt;&gt;only a program at one end and some things that look like documents or\n&gt;&gt;document processors at the other end.  &quot;Program-to-program\n&gt;&gt;communication&quot; the way you  seem to be using it sounds a lot like an RPC\n&gt;&gt;model to me, and in my mind REST and RPC don&#39;t mix.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Is it your contention that program to program communication is RPC\n&gt;and therefore not REST? If so, this has grave implications for any\n&gt;thoughts of business integration with REST.\n&gt;  \n&gt;\nNo, that is not my contention - but only because I don&#39;t know what form \nthat program-to-program communications takes.  If it is RPC, then no, it \nis not REST.  And yes, that does have implications for business \nintegration with REST, but I wouldn&#39;t call them grave.\n\n&gt;My only point from the quoted paragraph is that browser GUI issues\n&gt;do not apply to software integration through REST.\n&gt;  \n&gt;\nI agree.\n\n&gt;&gt;So how do you establish an initial context (or whatever its called) in a\n&gt;&gt;capability-based system without doing authentication?\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Your initial context is whatever set of URIs you start with. If\n&gt;your program is an XSLT stylesheet, your initial context is the\n&gt;set of URIs in the input XML document.\n&gt;\nBut how do I (as a client) get that initial set of URIs without \nparticipating in some kind of authentication process?  What do I click \non (or reference) to get started?\n\n&gt;  \n&gt;\n&gt;&gt;&gt;&gt;If I am the WSJ, how do I restrict access while\n&gt;&gt;&gt;&gt;at the same time allow users to refer to the same\n&gt;&gt;&gt;&gt;document?\n&gt;&gt;&gt;&gt;        \n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;You were the one who suggested this design, not me. This is now\n&gt;&gt;&gt;the third time that I have said that this is a bad idea. You would\n&gt;&gt;&gt;not use the capability model to solve this problem.\n&gt;&gt;&gt;      \n&gt;&gt;&gt;\n&gt;&gt;I&#39;m not disagreeing, but how about giving an example of something\n&gt;&gt;(web-based) that you would use a capability model to solve.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;I did. Your web-based bank account.\n&gt;\nOk - I guess I meant an example of how you would solve it.  What does \nthe URI namespace look like?  How do you navigate among the various \nresources?\n\n&gt;&gt;&gt;There&#39;s a long explanation that I could go into on this, but I&#39;ll\n&gt;&gt;&gt;just give you the punch line. The WSJ scenario is *not* an access\n&gt;&gt;&gt;control problem, it is a DRM (Digital Restrictions Management)\n&gt;&gt;&gt;problem. The capability model is used for solving access control\n&gt;&gt;&gt;problems, not DRM problems.\n&gt;&gt;&gt;      \n&gt;&gt;&gt;\n&gt;&gt;Well, you may just have go into your long explanation, because if DRM\n&gt;&gt;isn&#39;t about controlling access, then I&#39;m pretty confused.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Access control is about controlling what authority you hand out.\n&gt;DRM is about controlling how people use authority they have\n&gt;already been given.\n&gt;  \n&gt;\nI wont contest your definition, but my impression is that most people \ndont use that definition (rightly or wrongly).  Controlling access to a \nResource (the R in URI) is about determining whether or not you are \nallowed to perform an operation on that resource - are you allowed to \nperform a GET/PUT/POST/DELETE.  \n\nWhich brings me to another question.  I understand that you control who \ncan access a URI by controlling to whom you give the URI, but how do you \ncontrol how they access the named resource.  That is, how do you control \nwhether or not they can POST vs GET?\n\n&gt;In the WSJ scenario, a subscribed user is given the authority to\n&gt;read WSJ articles. The read authority implicitly carries with it\n&gt;the authority to pass-on the article to others. If you can read\n&gt;bits, you can copy bits. Neither capabilities nor ACLs can prevent\n&gt;you from giving a WSJ article to someone who is not a WSJ\n&gt;subscriber. The best you can do is make it less convenient to\n&gt;share the article. That is all the WSJ ACL does. It is just a\n&gt;feeble DRM measure.\n&gt;\nI don&#39;t even think they&#39;re attempting DRM - its not necessary.  But \nthat&#39;s a different discussion (one that I&#39;m not interested in having \neither).\n\n--Chuck\n\n\n"}}