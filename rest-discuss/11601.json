{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"GS8yzENM2Kddw_xGlwRdEVKaPDUjVQ4x_hST2NbuaP_l5Hd7biBTkrgfHzJ59tW7ubiI4J1sitdeUhbgiaGLdBtLSeo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and RESTful HTTP in browsers","postDate":"1227530351","msgId":11601,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MkFBMDZGLjgwMjAxMDdAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDQ5MkE5MURCLjcwMTA0MDdAbXlrYW5qby5jby51az4=","referencesHeader":"PDIwMTUxMDEwLjIzNjg3MTIyNjkxOTk1NDUzMi5KYXZhTWFpbC5zZXJ2bGV0QGt1bmRlbnNlcnZlcj4JPDQ5MjJCMzZBLjMwOTA4MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMjc3YmllTFkwMDAwMTYwMUBFWC5VQ09QLkVEVT4JPDQ5MjVDMjAzLjgwNzA0MDFAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmEycjhnUEEwMDAwMTdmN0BFWC5VQ09QLkVEVT4JPDQ5MjYwNjI5LjgwNjA4MDVAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMnhUanRScGUwMDAwMTk5NUBFWC5VQ09QLkVEVT4JPDQ5MjY4MkU4LjgwNjA2MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmFOZ0VwVFgwMDAwMWJjZEBFWC5VQ09QLkVEVT4JPDQ5MjZGMzQ3LjUwNTA4MDBAbXlrYW5qby5jby51az4JPGVjZjM1YTFiMDgxMTIxMTAwMHExZTMxMzM3Y3VhMGQ3YWRhMmIyMDI3NjJhQG1haWwuZ21haWwuY29tPgk8NDkyNzA2MDEuNjA4MDcwNEBteWthbmpvLmNvLnVrPiA8MjAwODExMjIwNzA4MjAuZDkxMWU5NjQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiA8NDkyQThDMzguOTA3MDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkE5MURCLjcwMTA0MDdAbXlrYW5qby5jby51az4="},"prevInTopic":11600,"nextInTopic":11602,"prevInTime":11600,"nextInTime":11602,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... If we put this into links it becomes an identifier. We now have a sort of resource (though different to a HTTP resource, as currently defined) identified","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 49787 invoked from network); 24 Nov 2008 12:39:39 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m52.grp.scd.yahoo.com with QMQP; 24 Nov 2008 12:39:39 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta17.grp.scd.yahoo.com with SMTP; 24 Nov 2008 12:39:38 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Mon, 24 Nov 2008 07:39:17 -0500\r\nMessage-ID: &lt;492AA06F.8020107@...&gt;\r\nDate: Mon, 24 Nov 2008 12:39:11 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (Windows/20081105)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20151010.236871226919954532.JavaMail.servlet@kundenserver&gt;\t&lt;4922B36A.3090804@...&gt;\t&lt;P-IRC-EXBE0277bieLY00001601@...&gt;\t&lt;4925C203.8070401@...&gt;\t&lt;P-IRC-EXBE02a2r8gPA000017f7@...&gt;\t&lt;49260629.8060805@...&gt;\t&lt;P-IRC-EXBE02xTjtRpe00001995@...&gt;\t&lt;492682E8.8060604@...&gt;\t&lt;P-IRC-EXBE02aNgEpTX00001bcd@...&gt;\t&lt;4926F347.5050800@...&gt;\t&lt;ecf35a1b0811211000q1e31337cua0d7ada2b202762a@...&gt;\t&lt;49270601.6080704@...&gt; &lt;20081122070820.d911e964.eric@...&gt; &lt;492A8C38.90701@...&gt; &lt;492A91DB.7010407@...&gt;\r\nIn-Reply-To: &lt;492A91DB.7010407@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: -1783862029507.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 07:39:26 on 24 Nov 2008\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and RESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=164939419; y=KNJkloSl9Qyi3ne2NTbLAri6vp3_rWrPdTzJLQjHszYxP2F9\r\nX-Yahoo-Profile: hack_poet\r\n\r\nMike wrote:\n&gt; One single accept header can indicate all of the appropriate \n&gt; content-types and their preferences for a given link. I would not use \n&gt; the markup to achieve a complete listing of the types available at a \n&gt; given URI, just the appropriate types for a given link in that \n&gt; particular state of the application.\n\nIf we put this into links it becomes an identifier. We now have a sort \nof resource (though different to a HTTP resource, as currently defined) \nidentified by an identifier (though not a URI as in HTTP as currently \ndefined, but rather a tuple containing a URI and a [possibly null] \nmime-type).\n\nNow, lets say we want to build a RESTful system out of this new design \nstyle. It&#39;s likely that some people here would, since we&#39;re all \nsubscribed to a list called &quot;Rest-Discuss&quot;.\n\nIn order to do this we will want to have a way to distinguish different \nrepresentations of the new types of resources identified by the new \ntypes of identifiers.\n\nHowever. Since the proposal here is to replace REST with an un-RESTful \nsystem in which the accept header becomes part of the identifier, we can \nassume that once we&#39;ve managed to fix it to be RESTful HTML6 will make \nthat part of the identifier too. Anyone wanting to build a RESTful \nsystem that is fully compatible with HTML6 will need to add a further \nlevel of representation identification.\n\nA mechanism for an infinite number of accept identifiers will presumably \narrive sometime between HTML7 and HTMLâˆž.\n\n&gt; Being able to query a URI for a list of available content-types would be \n&gt; nice;\n\nIt is nice. That&#39;s why its already possible.\n\n&gt; but this would be better at the protocol level, I think.\n\nYes, it&#39;s in HTTP/1.1.\n\n&gt; That way \n&gt; if someone sends me an email with a link to example.com/report - I can \n&gt; right click the link and be provided with a resource-specific &#39;Open \n&gt; As..&#39; menu with a list of all the UAs on my OS that can be served with \n&gt; an appropriate content-type.\n\nThis is perfectly possible with existing technology.\n\n&gt; For now, it is most likely that the link will be opened in a web \n&gt; browser; so the practical solution in the short term would be HTML \n&gt; representations which provide links to all the other content-types \n&gt; available.\n\nThat is a good way of implementing the representation sent with 406, yes.\n\n&gt; Unfortunately, unless you have separate URI&#39;s for each \n&gt; representation this is not possible with HTML as it stands\n\nAnd?\n\nIf you are pushing the choice of representations above the protocol \nlevel (which you are if you are letting the user choose) then those \nrepresentations have become resources*. In a RESTful system there is a \nuniform way of identifying all resources. In HTTP this is URIs.\n\nAny proposal to have a means of identifying resources beyond URIs is a \nproposal to make HTTP no longer RESTful. Means to say things about \nresources could certainly be useful parts of hypermedia formats, and \nhence the type attribute on the &lt;a&gt; element in HTML4.0 and later can be \nuseful, but moving from describing resources to partially identifying \nthem is not just unRESTful but anti-RESTful. You are proposing that we \nmake HTML violate one of the core constraints of REST.\n\nYour proposal solves a &quot;problem&quot; that does not exist. If a client wishes \nto deal with the scenario you describe, the solution is as follows:\n\n1. Client sends GET to URI with empty Accept header.\n2a. Server ignores empty get and sends default (possibly sole) \nrepresentation, as it is not willing to assist content negotiation on \nthe basis of content-types.\n2b. Server sends 406 Not Acceptable response with entity being a \nhypertext document linking to resources which are representations of \nthat resource.\n3a. Client handles download and/or display of representation based on \ncontent-type and other metadata.\n3b. Client handles choice of representations either computationally or \nby offering choice to user.\n4b. Client handles download and/or display of representation based on \ncontent-type and other metadata.\n\n* There is nothing to say a representation of a given resource cannot \nitself be a resource. The two rival definitions of just what a web \nresource are that they can be anything at all, or (the W3C TAG finding) \nthat they are &quot;informational resources&quot;. A representation of a resource \nis clearly an informational resource in its own right, and is also \nclearly within a subset of &quot;anything at all&quot;. There are further cases \nwhere a resource really is one and the same as its representation; the \nmost obvious case being a software batch, since in such cases it really \nis the bunch of 1s and 0s that we care about.\n\n\n"}}