{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"qUGcbMHTnrF_m6SHWgiOw_NGLWIsIBTPJw7faqRa3hlfV03SyEbcFGtagrC6J5qXOs97ArTopNlz6WPFHnGiNIcZd7cLZ3m3rbjxEBH_qQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Re: Rails 3.2 and PATCH","postDate":"1324139461","msgId":18077,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTExMjE3MDkzMTAxLmY1NzIyYjYyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDlCRDAzRTdBQTFEODE1NDNBRTNBRDY3Q0I2RkFERkVDMTM4QjlDNDhAUEFDRENFWE1CMDMuY2FibGUuY29tY2FzdC5jb20+","referencesHeader":"PEEyQUQxMjUyLTY2N0QtNDRBNS1BNDg0LUIyMTREQzA2ODkxREBub3Jkc2MuY29tPgk8Q0IxMEY5NTEuMjcxMTklSm9uYXRoYW5fTW9vcmVAQ29tY2FzdC5jb20+CTwyMDExMTIxNjE1MzQzMS45ZDQxMmNjNS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTwxQjE2QTU5QS1BNzkzLTQxQjktODRFMC03QzVEQTM1N0Y2MzBAQ29tY2FzdC5jb20+CTwyMDExMTIxNjE2MjI1OC43NzI4NzcyZi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw5QkQwM0U3QUExRDgxNTQzQUUzQUQ2N0NCNkZBREZFQzEzOEI5QzQ4QFBBQ0RDRVhNQjAzLmNhYmxlLmNvbWNhc3QuY29tPg=="},"prevInTopic":18076,"nextInTopic":18078,"prevInTime":18076,"nextInTime":18078,"topicId":18011,"numMessagesInTopic":86,"msgSnippet":"... They are with PATCH, or by making them sub-resources and using PUT, I hope is your takeaway... ... Sure, REST applications may just use GET, and for","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 29110 invoked from network); 17 Dec 2011 16:31:07 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m4.grp.sp2.yahoo.com with QMQP; 17 Dec 2011 16:31:07 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 17 Dec 2011 16:31:06 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id BCB1B50A5D;\n\tSat, 17 Dec 2011 11:31:04 -0500 (EST)\r\nDate: Sat, 17 Dec 2011 09:31:01 -0700\r\nTo: &quot;Moore, Jonathan (CIM)&quot; &lt;Jonathan_Moore@...&gt;\r\nCc: Jan Algermissen &lt;jan.algermissen@...&gt;, Mike Kelly\n &lt;mike@...&gt;, Sebastien Lambla &lt;seb@...&gt;, Jakob Strauch\n &lt;jakob.strauch@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20111217093101.f5722b62.eric@...&gt;\r\nIn-Reply-To: &lt;9BD03E7AA1D81543AE3AD67CB6FADFEC138B9C48@...&gt;\r\nReferences: &lt;A2AD1252-667D-44A5-A484-B214DC06891D@...&gt;\n\t&lt;CB10F951.27119%Jonathan_Moore@...&gt;\n\t&lt;20111216153431.9d412cc5.eric@...&gt;\n\t&lt;1B16A59A-A793-41B9-84E0-7C5DA357F630@...&gt;\n\t&lt;20111216162258.7728772f.eric@...&gt;\n\t&lt;9BD03E7AA1D81543AE3AD67CB6FADFEC138B9C48@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Rails 3.2 and PATCH\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Moore, Jonathan (CIM)&quot; wrote:\n&gt;\n&gt; I just didn&#39;t know if partial updates were HTTP-compliant or not\n&gt; (until this thread).\n&gt; \n\nThey are with PATCH, or by making them sub-resources and using PUT, I\nhope is your takeaway...\n\n&gt; \n&gt; &gt; The sender&#39;s intent is not &quot;idempotency&quot;, it&#39;s either\n&gt; &gt; full or partial update -- not both, so a method can&#39;t mean both.\n&gt; \n&gt; I disagree. POST can mean these, for example, and lots of other\n&gt; things too. Roy has written that GET and POST are sufficient methods\n&gt; for a RESTful system (cf. the browser-based HTML web)[1].\n&gt;\n\nSure, REST applications may just use GET, and for interactivity don&#39;t\neven need to use POST let alone HTTP -- a form&#39;s target may be a\nmailto: URI.  But that doesn&#39;t mean a RESTful protocol, like HTTP,\nshould have as few methods as possible, or not be based on interaction\nsemanctics.  REST doesn&#39;t care what those methods are, but does care\nthat protocols have methods.  HTTP&#39;s method choice is (quite RESTfully)\nderived by the principle of generality, those standardized methods\nresult in a generic interface because they are so derived.\n\nThat GET and POST are sufficient for a RESTful system doesn&#39;t mean a\nsystem isn&#39;t less RESTful which uses POST instead of a more appropriate\nmethod, see below.\n\n&gt;\n&gt; What&#39;s wrong with a hypothetical method whose semantics are &quot;an\n&gt; idempotent partial update&quot; (where a partial update that happens to\n&gt; describe everything can be used for a full update)? We&#39;ve established\n&gt; that PUT (as defined in httpbis) is not that method.\n&gt; \n\nBecause now you&#39;d have two methods describing the same sender intent of\npartial update.  That some partial-update interactions may be idempotent\nis interesting, but it&#39;s an edge case, so I don&#39;t understand the need to\noptimize for it.  I believe that sender intent stops at partial update,\nwithout considering idempotency, and I see no advantage in adding\ncomplexity to the protocol to take that into account -- especially not\nif there&#39;s already a RESTful solution to the problem...\n\nMore important is the question of why not, if idempotency is important\nin a partial update scenario, do what Roy and most everyone else always\nsays by making it a subresource with its own URL and using PUT?  Since\nthis design pattern is such a standard part of REST development, I&#39;m\nnot seeing any problem which needs solving with a new method, any more\nthan I saw a problem which needed solving by redefining an existing\nmethod.\n\n&gt; \n&gt; I think the crux of the argument here is more like (with apologies to\n&gt; the Princess Bride): &quot;I do not think PUT means what you think it\n&gt; means.&quot; \n&gt; \n\nI don&#39;t think Roy&#39;s blog means what you think it means.  ;-)\n\n&gt; \n&gt; &quot;Specific method definitions (aside from the retrieval:resource\n&gt; duality of GET) simply don’t matter to the REST architectural style,\n&gt; so it is difficult to have a style discussion about them. The only\n&gt; thing REST requires of methods is that they be uniformly defined for\n&gt; all resources (i.e., so that intermediaries don’t have to know the\n&gt; resource type in order to understand the meaning of the request). As\n&gt; long as the method is being used according to its own definition,\n&gt; REST doesn’t have much to say about it.&quot;\n&gt; \n\nI&#39;ve never been guilty of the paper tiger of &quot;don&#39;t use POST&quot; Roy\nadmonishes against; what I have said is don&#39;t use POST to do things we\nalready have discrete methods for (refactor to use as many methods as\nwe do have to choose from, i.e. solve the partial-update problem by\nmaking it a replacement of a subresource if PATCH isn&#39;t your bag).\nFrom the same post:\n\n&quot;POST only becomes an issue when it is used in a situation for which\nsome other method is ideally suited: e.g., retrieval of information\nthat should be a representation of some resource (GET), complete\nreplacement of a representation (PUT), or any of the other standardized\nmethods that tell intermediaries something more valuable than &#39;this may\nchange something.&#39; The other methods are more valuable to\nintermediaries because they say something about how failures can be\nautomatically handled and how intermediate caches can optimize their\nbehavior.&quot;\n\nRoy&#39;s saying it&#39;s also an error to use POST to PATCH.  It is less\nvaluable to intermediaries to use POST when a standardized method\nexists which describes the semantics of the interaction, e.g. PATCH.\nI don&#39;t know how it is that I&#39;m confused about PUT when I say it has\nreplacement semantics; is Roy also confused?\n\nIf it&#39;s important to intermediaries that your partial update be\nconsidered idempotent, then mint a URI for a subresource and use PUT.\nI should think that approach needs to be falsified before lobbying for\na new method.\n\n-Eric\n\n"}}