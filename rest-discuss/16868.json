{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"nnLZ54yqXDMhtmltWZp4RaW09gWFAh5ie-lvMqy3vxcaDz8IxcoN9UYEL9wI4jTTz0b0ZQl13NYwoiwboyyVlKYDmZT7sTw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Partial PUT debate","postDate":"1289410396","msgId":16868,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGltWFYya0h1cHNHdXBpTVJYZCtyam1RNXF1SDk2NW9fSkV5eDFaaEBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGliZWhlcStoMjcyQGVHcm91cHMuY29tPg==","referencesHeader":"PEFBTkxrVGk9RmZrYWMycG9TcUxOVmc0R3Z1Q3RxR25reEJzMUFZSzBzcHR2ZUBtYWlsLmdtYWlsLmNvbT4JPGliZWhlcStoMjcyQGVHcm91cHMuY29tPg=="},"prevInTopic":16867,"nextInTopic":16869,"prevInTime":16867,"nextInTime":16869,"topicId":16839,"numMessagesInTopic":40,"msgSnippet":"William:  ...  From my POV, there are two things to keep in mind here: - The affect the PATCH RFC has on how we view|use PUT - The affect the","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 43071 invoked from network); 10 Nov 2010 17:33:18 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 10 Nov 2010 17:33:18 -0000\r\nX-Received: from unknown (HELO mail-yx0-f176.google.com) (209.85.213.176)\n  by mta3.grp.re1.yahoo.com with SMTP; 10 Nov 2010 17:33:18 -0000\r\nX-Received: by yxm8 with SMTP id 8so7484yxm.35\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 10 Nov 2010 09:33:17 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.204.122.212 with SMTP id m20mr7150546bkr.196.1289410396388;\n Wed, 10 Nov 2010 09:33:16 -0800 (PST)\r\nX-Received: by 10.223.122.147 with HTTP; Wed, 10 Nov 2010 09:33:16 -0800 (PST)\r\nIn-Reply-To: &lt;ibeheq+h272@...&gt;\r\nReferences: &lt;AANLkTi=Ffkac2poSqLNVg4GvuCtqGnkxBs1AYK0sptve@...&gt;\n\t&lt;ibeheq+h272@...&gt;\r\nDate: Wed, 10 Nov 2010 12:33:16 -0500\r\nX-Google-Sender-Auth: I8Tuag23yU5BlJiTv0C7BWRhAX0\r\nMessage-ID: &lt;AANLkTimXV2kHupsGupiMRXd+rjmQ5quH965o_JEyx1Zh@...&gt;\r\nTo: William Martinez Pomares &lt;wmartinez@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Re: Partial PUT debate\r\nX-Yahoo-Group-Post: member; u=69164307; y=Rm_4mknrtB3xKeGXcph7DCVXZ0rM3tT0aj228dyYq0qv\r\nX-Yahoo-Profile: mamund\r\n\r\nWilliam:\n\n&lt;snip&gt;\n&gt; So, PATCH may work, but I feel still it is not the full =\r\nsolution. At the end, as you say, we may need to go back and use POST.\n&gt; Wh=\r\nat do you think?\n&lt;/snip&gt;\n\nFrom my POV, there are two things to keep in mind=\r\n here:\n- The affect the PATCH RFC has on how we view|use PUT\n- The affect t=\r\nhe PATCH RFC has on how we view|use POST\n\nPATCH AND PUT\nOne of the things t=\r\nhat sets PATCH apart from PUT is that the RFC[1]\ndescribes the PATCH payloa=\r\nd as &quot;a set of instructions...&quot;\n&lt;quote&gt;\nThe difference between the PUT and =\r\nPATCH requests is reflected in the\n   way the server processes the enclosed=\r\n entity to modify the resource\n   identified by the Request-URI.  In a PUT =\r\nrequest, the enclosed entity\n   is considered to be a modified version of t=\r\nhe resource stored on the\n   origin server, and the client is requesting th=\r\nat the stored version\n   be replaced.  With PATCH, however, the enclosed en=\r\ntity contains a set\n   of instructions describing how a resource currently =\r\nresiding on the\n   origin server should be modified to produce a new versio=\r\nn.  The PATCH\n   method affects the resource identified by the Request-URI,=\r\n and it\n   also MAY have side effects on other resources; i.e., new resourc=\r\nes\n   may be created, or existing ones modified, by the application of a\n  =\r\n PATCH.\n&lt;/quote&gt;\n\nThere are no details on what that set of instructions loo=\r\nks like; that\ndetail is left open for implementors to work out. It is also\n=\r\ninteresting to note that the PATCH RFC makes allowances for the\npossibility=\r\n that the results of a PATCH request MAY be the creation of\na new resource.=\r\n\n\nPATCH AND POST\nIn the past, I used the basic approach described in PATCH =\r\n( a set of\ninstructions delineated by a media type) but used the existing P=\r\nOST\nmethod to complete the task. Usually that meant I minted a URI for\nhand=\r\nling &quot;change instructions&quot; (e.g. /my-customers/1;patch or\n/my-customers/1/p=\r\natch/, or /patches/my-customer/1, etc.).\n\nNow, with this new method, I don&#39;=\r\nt need to mint a new URI to handle\n&quot;change instructions.&quot; I only need to te=\r\nll clients that a new method\n(PATCH) is valid for an existing resource (e.g=\r\n. /my-customers/1) and\nthat any execution of PATCH against a resource needs=\r\n to use the proper\nmedia-type (e.g. application/vnd.amundsen.patch, etc.).\n=\r\n\nTo me this is a major improvement in both the visibility and accuracy\nof m=\r\ny HTTP interactions. No more overloading POST using a special\n&quot;patch URI.&quot; =\r\nMy documentation can be clearer and my client can learn\nthe details of a ta=\r\nrget media type and apply that to multiple\nresources safely.\n\nThat&#39;s my vie=\r\nwpoint, anyway.\n\n[1] http://tools.ietf.org/html/rfc5789\n\nmca\nhttp://amundse=\r\nn.com/blog/\nhttp://twitter.com@mamund\nhttp://mamund.com/foaf.rdf#me\n\n\n#REST=\r\nFest 2010\nhttp://rest-fest.googlecode.com\n\n\n\n\nOn Wed, Nov 10, 2010 at 11:32=\r\n, William Martinez Pomares\n&lt;wmartinez@...&gt; wrote:\n&gt; Hi Mike!\n&gt; Sor=\r\nry, I&#39;m posting in this discussion although I prefer to avoid HTTP related =\r\nones. Not my level of detail.\n&gt;\n&gt; Still, this is interesting.\n&gt; I dislike a=\r\n little bit PATCH. There are several reasons, these are just a couple:\n&gt;\n&gt; =\r\n1. One of important part of PATCH is the payload, as it defines the changes=\r\n. And that payload is not standardized.\n&gt;\n&gt; 2. As Payload is important, it =\r\nmakes the resource update much more representational oriented. That is, lik=\r\ne patching a source code file. Also, it makes the resource expose its attri=\r\nbutes, avoiding data hiding\n&gt;\n&gt; 3. Although it may be generic, adjusting th=\r\ne alpha channel of an image may not be as intuitive. In this case, the PATC=\r\nH Payload should request the change of the alpha channel. Metadata?\n&gt;\n&gt; 4. =\r\nNot all resources are just a bunch of fields, some can be more complex and =\r\nthe update should be done by the server based on certain conditions or requ=\r\nests.\n&gt;\n&gt; So, PATCH may work, but I feel still it is not the full solution.=\r\n At the end, as you say, we may need to go back and use POST.\n&gt; What do you=\r\n think?\n&gt;\n&gt; William Martinez Pomares.\n&gt; --- In rest-discuss@yahoogroups.com=\r\n, mike amundsen &lt;mamund@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Partial updates should be done us=\r\ning PATCH [1]\n&gt;&gt; Complete updates should be done using PUT.\n&gt;&gt; When those m=\r\nethods are not practical, POST can be used instead.\n&gt;&gt;\n&gt;&gt; Subbu&#39;s &quot;RESTful =\r\nWeb Services Cookbook&quot; has a very good chapter (&quot;11.\n&gt;&gt; Miscellaneous Write=\r\ns&quot;) [2] that includes more than one section\n&gt;&gt; covering strategies for part=\r\nial updates, too.\n&gt;&gt;\n&gt;&gt; [1] http://tools.ietf.org/html/rfc5789\n&gt;&gt; [2] http:=\r\n//bit.ly/bRCwGj\n&gt;&gt;\n&gt;&gt; mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt; http://twitter.co=\r\nm@mamund\n&gt;&gt; http://mamund.com/foaf.rdf#me\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; #RESTFest 2010\n&gt;&gt; http:/=\r\n/rest-fest.googlecode.com\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------=\r\n\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}