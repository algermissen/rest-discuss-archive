{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":120885465,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"ZLxEgPgL4BACUalDvQIa1ak-KzQJhFbRUcsNzAF-kVsK9eZ3sblx8PIfS4tXsHo-rsLUE2JyZ7w0He6iyj_TpPZ4GPme","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Documenting REST resource models","postDate":"1053459046","msgId":3689,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDhERkNFMzc0LThBRjktMTFENy05MTFCLTAwMDM5MzY2QjM2QUBkZWVwZmlsZS5jb20+","inReplyToHeader":"PDEwNTM0NTEzOTUuM2VjYTY0ODMwMTc5NEB3d3cubW5vdC5uZXQ+"},"prevInTopic":3688,"nextInTopic":3690,"prevInTime":3688,"nextInTime":3690,"topicId":3682,"numMessagesInTopic":10,"msgSnippet":"... This is cool, Mark! I think you might have it backwards, though --- wouldn t it be cool to be able to generate Tarawa Resource subclasses from declarative ","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_6_6); 20 May 2003 19:31:06 -0000\r\nReceived: (qmail 41316 invoked from network); 20 May 2003 19:31:04 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m14.grp.scd.yahoo.com with QMQP; 20 May 2003 19:31:04 -0000\r\nReceived: from unknown (HELO blanco.deepfile.com) (24.242.137.237)\n  by mta3.grp.scd.yahoo.com with SMTP; 20 May 2003 19:31:02 -0000\r\nReceived: from deepfile.com ([192.168.123.167])\n\t(authenticated)\n\tby blanco.deepfile.com (8.11.6/8.11.6) with ESMTP id h4KKRZb27860;\n\tTue, 20 May 2003 15:27:35 -0500\r\nDate: Tue, 20 May 2003 14:30:46 -0500\r\nSubject: Re: [rest-discuss] Documenting REST resource models\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMime-Version: 1.0 (Apple Message framework v552)\r\nCc: rest-discuss@yahoogroups.com\r\nTo: Mark Nottingham &lt;mnot@...&gt;\r\nIn-Reply-To: &lt;1053451395.3eca648301794@...&gt;\r\nMessage-Id: &lt;8DFCE374-8AF9-11D7-911B-00039366B36A@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Apple Mail (2.552)\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: member; u=120885465\r\n\r\n\nOn Tuesday, May 20, 2003, at 12:23 US/Central, Mark Nottingham wrote:\n\n&gt;\n&gt; I&#39;m interested in this as well; I&#39;ve been considering coming up with \n&gt; such\n&gt; a format for use with Tarawa[1] so that machine-readable documentation \n&gt; can\n&gt; automagically be generated from the annotated code. The list that you\n&gt; describe seems about right.\n&gt;\n&gt; 1. http://www.mnot.net/tarawa/\n\nThis is cool, Mark!\n\nI think you might have it backwards, though --- wouldn&#39;t it be cool to \nbe able to generate Tarawa Resource subclasses from declarative \ndescriptions?  Instead of extracting the documentation from the code, \ngenerate the code (and possibly its glue to persistent storage, ORM, \npresentation layer stuff, etc.) from the documentation?\n\nMy current short-term holy grail is the following:  Deepfile&#39;s \nmanagement interface is currently a (not-very-RESTful, unfortunately) \nWeb app but the juicy bits are the metadata repository we create over a \nset of filesystems.  I&#39;ve got four eventual goals:  (1) I&#39;d like for my \ndev team to be less in the Web app business and more in the filesystem \nmanagement domain business.  (2) In pursuit of that, I&#39;d like to be \nable to describe MVC declaratively and focus on modeling and \nspecification rather than gluing abstraction layers together w/ code.  \nWe&#39;re already 60% of the way to automating the model piece of things \nfrom a formal declarative spec / description;  I&#39;d like to do the same \nthing on the UI state flow, presentation, etc. fronts.  (3) I&#39;d like to \nexpose the underlying domain object model in a RESTful fashion, to ease \nintegration friction down the road.  (4) There are several kinds of \nmodels that need to be mapped in my problem space:  the &quot;hierarchical&quot; \n(really network) database model of networked filesystems, the \nunderlying relational storage for the metadata repository, the object \nmodel inside the application server, and (eventually) a semantic model \nthat unifies these, probably RDF-based.  Right now all that mapping is \nimpedance mismatch;  simplifying, unifying, or even eliminating some of \nthose models and mappings is highly desirable.\n\nThings like sqlREST, Tarawa, Dan&#39;s work, and so forth are conceptual \npuzzle pieces in a kind of generic solution to the problems I (and many \nothers in lots of application domains!) am struggling with today.  I \nmay end up having to fabricate many if not most of the pieces myself, \nbut I think we&#39;re all driving towards some very similar goals or, even \nwhen the goals differ, there&#39;s a lot of overlap in the paths. :-)\n\njb\n\n\n"}}