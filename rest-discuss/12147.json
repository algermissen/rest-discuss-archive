{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":167611926,"authorName":"Adolfo Perez","from":"Adolfo Perez &lt;apd486@...&gt;","profile":"apd486","replyTo":"SENDER","senderId":"nHyKFuIdpaNsgwgJ86oRnqpuGCb-SIxjL2_Ws7_RGvPiEDxkrQI85OGUo5Oi6g6le__bIRoqnkX7QCEuoDAmSHTWUjllYQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] &quot;Asynchronous&quot; RESTful application","postDate":"1235423384","msgId":12147,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE0NjkyMC43NTUyMC5xbUB3ZWI1MzkwMy5tYWlsLnJlMi55YWhvby5jb20+","inReplyToHeader":"PGU3OGJkYmMwMDkwMjIzMTAyN240ODRmZmJiNmc2MWM2NmRlMWEzY2FmYTEwQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12146,"nextInTopic":0,"prevInTime":12146,"nextInTime":12148,"topicId":12142,"numMessagesInTopic":6,"msgSnippet":"Dong, Your suggestion regarding integration patterns makes a lot of sense and it confirms my original intention of checking Apache Camel + Jetty endpoints. I","rawEmail":"Return-Path: &lt;apd486@...&gt;\r\nX-Sender: apd486@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 75386 invoked from network); 23 Feb 2009 21:09:45 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m35.grp.scd.yahoo.com with QMQP; 23 Feb 2009 21:09:45 -0000\r\nX-Received: from unknown (HELO web53903.mail.re2.yahoo.com) (206.190.36.126)\n  by mta18.grp.scd.yahoo.com with SMTP; 23 Feb 2009 21:09:45 -0000\r\nX-Received: (qmail 77862 invoked by uid 60001); 23 Feb 2009 21:09:45 -0000\r\nX-YMail-OSG: OUDfn4MVM1lx3oNmkq8krN2rZohB2C8lZGhgcm_6pjnDfDEWJ20VOUHggKySk3A1niwuHZ6pv0FX7eQ35YhbAk0OEJMEuYjF.t4l8FA3f6Ggfdbu4igRwarHtRhQPbd1GiUpLsqLI87opVxwm7fLE70W1ONRnn1ywUW8Z2MXsX_izg_S1tzdL0GA76XWdbCU5Wp4v606plPo3o14Kj.D_TuRHG90\r\nX-Received: from [198.152.13.67] by web53903.mail.re2.yahoo.com via HTTP; Mon, 23 Feb 2009 13:09:44 PST\r\nX-Mailer: YahooMailWebService/0.7.260.1\r\nDate: Mon, 23 Feb 2009 13:09:44 -0800 (PST)\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;, Dong Liu &lt;edongliu@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;\r\nIn-Reply-To: &lt;e78bdbc00902231027n484ffbb6g61c66de1a3cafa10@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nMessage-ID: &lt;146920.75520.qm@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Adolfo Perez &lt;apd486@...&gt;\r\nReply-To: apd486@...\r\nSubject: Re: [rest-discuss] &quot;Asynchronous&quot; RESTful application\r\nX-Yahoo-Group-Post: member; u=167611926; y=jAIuTsYN-Tta13YreCJ-wErZG447DFGTaQVvW6yKRbCf\r\nX-Yahoo-Profile: apd486\r\n\r\nDong,\n\nYour suggestion regarding integration patterns makes a lot of sense and it confirms my original intention of checking Apache Camel + Jetty endpoints.\n\nI will also explore Stefan&#39;s suggestion (Grizzly).\n\nThank you all very much,\n\n+Adolfo\n\n\n--- On Mon, 2/23/09, Dong Liu &lt;edongliu@...&gt; wrote:\n\n&gt; From: Dong Liu &lt;edongliu@...&gt;\n&gt; Subject: Re: [rest-discuss] &quot;Asynchronous&quot; RESTful application\n&gt; To: &quot;Rest List&quot; &lt;rest-discuss@yahoogroups.com&gt;\n&gt; Cc: apd486@..., &quot;Jan Algermissen&quot; &lt;algermissen1971@...&gt;\n&gt; Date: Monday, February 23, 2009, 11:27 AM\n&gt; As Jan said, the connection can be closed any time between\n&gt; request-reply pairs in a conversation. This\n&gt; can be done by specify client request Connection: close\n&gt; header or\n&gt; server specific configurations.\n&gt; \n&gt; From the message exchange pattern point of view, what you\n&gt; mean is an\n&gt; async conversation.\n&gt; See\n&gt; http://www.enterpriseintegrationpatterns.com/ramblings/09_correlation.html\n&gt; by Gregor for details.\n&gt; \n&gt; In implementation, if you do not need a connection for\n&gt; maintaining\n&gt; conversation state,\n&gt; then the connection can be closed. However, if you do not\n&gt; want to\n&gt; close that connection for saving open\n&gt; connection time of later messages then you need to use NIO\n&gt; of java in\n&gt; general to handle the large number\n&gt; of concurrent connections. Grizzly mentioned by Stefan is\n&gt; one option,\n&gt; and Jetty is also a good candidate.\n&gt; You can also turn the system&#39;s parameter of max idle\n&gt; time for a TCP\n&gt; connection to limit the number of\n&gt; opened connections.\n&gt; \n&gt; Nice to see someone else doing similar stuff as I am\n&gt; currently working on.\n&gt; \n&gt; Cheers,\n&gt; \n&gt; Dong\n&gt; \n&gt; \n&gt; On Mon, Feb 23, 2009 at 6:57 AM, Jan Algermissen\n&gt; &lt;algermissen1971@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi Adolfo,\n&gt; &gt;\n&gt; &gt; I am also not entirely sure I completely understand\n&gt; what you ask, but I think you are asking whether the\n&gt; client-server HTTP connection persists after a 202 Response?\n&gt; &gt;\n&gt; &gt; The HTTP Interaction regarding 202 would be something\n&gt; like this:\n&gt; &gt;\n&gt; &gt; -&gt; POST /orders\n&gt; &gt; &lt;order&gt;&lt;item\n&gt; id=&quot;10&quot;/&gt;&lt;/order&gt;\n&gt; &gt;\n&gt; &gt; &lt;- 202 Accepted\n&gt; &gt; Location /pending-orders/19\n&gt; &gt; &lt;order processingStatus=&quot;pending&quot;/&gt;\n&gt; &gt;\n&gt; &gt; Client then periodically polls /pending-orders/19:\n&gt; &gt;\n&gt; &gt; -&gt; GET /pending-orders/19\n&gt; &gt;\n&gt; &gt; &lt;- 200 Ok\n&gt; &gt; &lt;order processingStatus=&quot;pending&quot;/&gt;\n&gt; &gt;\n&gt; &gt; [wait]\n&gt; &gt;\n&gt; &gt; -&gt; GET /pending-orders/19\n&gt; &gt;\n&gt; &gt; &lt;- 200 Ok\n&gt; &gt; &lt;order processingStatus=&quot;pending&quot;/&gt;\n&gt; &gt;\n&gt; &gt; [wait]\n&gt; &gt;\n&gt; &gt; &gt; GET /pending-orders/19\n&gt; &gt;\n&gt; &gt; &lt;- 301 Moved Permanently\n&gt; &gt; Location: /orders/188\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; -&gt; GET /orders/188\n&gt; &gt;\n&gt; &gt; &lt;- 200 Ok\n&gt; &gt; &lt;order id=&quot;188&quot;&gt;&lt;item\n&gt; id=&quot;10&quot;/&gt;&lt;/order&gt;\n&gt; &gt;\n&gt; &gt; The client or server can close the TCP connection\n&gt; between any of these requests.\n&gt; &gt;\n&gt; &gt; Does that help?\n&gt; &gt;\n&gt; &gt; Jan\n&gt; &gt;\n&gt; &gt; On Monday, February 23, 2009, at 11:39AM, &quot;Stefan\n&gt; Tilkov&quot; &lt;stefan.tilkov@...&gt; wrote:\n&gt; &gt; &gt;I&#39;m not entirely sure I understand what\n&gt; you&#39;re asking for, but you\n&gt; &gt; &gt;might want to check out Grizzly:\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;http://weblogs.java.net/blog/jfarcand/archive/2006/02/grizzly_part_ii.html\n&gt; &gt; &gt;\n&gt; &gt; &gt;Stefan\n&gt; &gt; &gt;--\n&gt; &gt; &gt;Stefan Tilkov, http://www.innoq.com/blog/st/\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;On 21.02.2009, at 18:23, Adolfo Perez wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt;&gt; OK, I&#39;m abusing the term\n&gt; &quot;asynchronous&quot; here but it seems I need to\n&gt; &gt; &gt;&gt; in order to describe my problem :).\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; We have a set of Java applications that take\n&gt; anywhere from 5 min to\n&gt; &gt; &gt;&gt; 60 min to execute.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; One of the solutions we implemented had the\n&gt; server write the request\n&gt; &gt; &gt;&gt; to a database, send a 202 to the client and\n&gt; work the request later\n&gt; &gt; &gt;&gt; on a different thread.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; The constraint we have is that we are using\n&gt; Jersey and we need to\n&gt; &gt; &gt;&gt; take advantage of the load balancing features\n&gt; provided by Apache and\n&gt; &gt; &gt;&gt; Tomcat/Jetty, so we end up with a large\n&gt; number of long lasting\n&gt; &gt; &gt;&gt; simultaneous connections.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; &quot;Asynchronous&quot; approaches I have\n&gt; found are trying to solve a\n&gt; &gt; &gt;&gt; different problem. Since a servlet is\n&gt; blocking, a request makes the\n&gt; &gt; &gt;&gt; thread wait. The proposed solutions look to\n&gt; release threads back\n&gt; &gt; &gt;&gt; into the pool and be made available for other\n&gt; requests not to keep\n&gt; &gt; &gt;&gt; it running for a long time.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; How do you, in a RESTful way and using\n&gt; standard load balancing\n&gt; &gt; &gt;&gt; techniques (i.e. those provided by Apache +\n&gt; Tomcat/Jetty), work\n&gt; &gt; &gt;&gt; requests &quot;asynchronously&quot; so that\n&gt; you can release client connections?\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; +Adolfo\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;------------------------------------\n&gt; &gt; &gt;\n&gt; &gt; &gt;Yahoo! Groups Links\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n\n\n      \n\n"}}