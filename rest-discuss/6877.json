{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"UVOBYIdrNGn3DaEu8zFwB0h9fLVDLsaGH7habNA9KfGLG5EL92o2ZyGKyMbbjNTiauxSml4sqvAjwQOK7ooRM9LDpL0PIGRYdLsMziyH6A","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [rest-discuss] REST design question","postDate":"1163342097","msgId":6877,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFczOTAyNTI3MzMxMTUwMDExNjMzNDIwOTdAbWFpbC5tYWlsc25hcmUubmV0Pg=="},"prevInTopic":6876,"nextInTopic":6879,"prevInTime":6876,"nextInTime":6878,"topicId":6804,"numMessagesInTopic":134,"msgSnippet":"... Not at all.  I m saying that application logic is beyond the scope of REST, which is concerned with pretty much everything else _but_ when it comes to ","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 98176 invoked from network); 12 Nov 2006 14:35:10 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m37.grp.scd.yahoo.com with QMQP; 12 Nov 2006 14:35:10 -0000\r\nReceived: from unknown (HELO mail.mailsnare.net) (206.246.200.187)\n  by mta5.grp.scd.yahoo.com with SMTP; 12 Nov 2006 14:35:04 -0000\r\nReceived: from mail.mailsnare.net (v167.mailsnare.net [206.246.200.167])\n\tby mail.mailsnare.net (Postfix) with ESMTP id A3EE92D022;\n\tSun, 12 Nov 2006 14:34:57 +0000 (UTC)\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W390252733115001163342097@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Sun, 12 Nov 2006 14:34:57 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: RE: [rest-discuss] REST design question\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;&gt;\n&gt;&gt; REST does not care about your server logic, i.e. it&#39;s only the state \n&gt;&gt; transfer which matters to REST, not the actual state transition within\n&gt;&gt; your app.\n&gt;&gt;\n&gt;\n&gt; Are you saying that if there is server logic, it is not RESTful?\n&gt;\n\nNot at all.  I&#39;m saying that application logic is beyond the scope of REST, \nwhich is concerned with pretty much everything else _but_ when it comes to \ndistributed application design.\n\n&gt;\n&gt; Does anyone know where I can get a definitive definition of &quot;architectural \n&gt; style&quot; as in &quot;REST is an architectural style?&quot;\n&gt;\n\nBooks have been written about architectural styles, Roy&#39;s thesis is actually \na nice concise rundown of the relevant styles which make up REST, like client-\nserver, code-on-demand and layered systems.  Client-server architecture is \n(mostly) WAN related, layered systems are (mostly) LAN related while code-on-\ndemand is definitely application related.\n\nBut there&#39;s a very clear line drawn by REST in that it does not consider the \napplication logic at all.  For example, 32-bit vs. 64-bit, threaded vs. not \nthreaded, procedural vs. object-oriented are all beyond the scope of the REST \narchitectural style.  Which, I think, is why there is no &quot;implementation&quot; of \nREST possible.  As soon as you start talking about the nuts and bolts of any \nimplementation your examples go beyond the scope of the architectural style.\n\nREST is specifically concerned with constraining the interactions between \ncomponents in a system, exhibit A being the limited number of verbs.  REST is \nalso specifically concerned with the payload of those interactions.  Does the \npayload describe a resource, or does the payload contain server instructions?\n\n[1] http://technorati.com/developers/ping/\n\nWhat is the payload of the POST operation described?  A representation of a \nresource, or a stored procedure?  If it&#39;s a procedure, then the payload of \nthe transfer is not a representation of application state, but instead \nrepresents the state transition itself.\n\nIt doesn&#39;t matter if the application logic is based on the server or the \nclient.  What does matter is that state transition remain within the \napplication logic without being transferred between components.  In REST, \nonly a representation may be transferred.  If &lt;person&gt;bob&lt;/person&gt; is removed \nfrom /maryland, the server logic is based on a DIFF between the old and new \nversion when the PUT occurs.\n\nThe server can take any number of actions based on the fact that there&#39;s a \n&quot;missing person&quot; in maryland, so long as those actions are inherent in the \napplication logic and not encapsulated within the message payload like in \nXML-RPC.\n\n-Eric\n\n\n\n\n"}}