{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":121832671,"authorName":"inthedarkplace","from":"&quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;","profile":"inthedarkplace","replyTo":"SENDER","senderId":"-U85a_fK2Ll6ZjULPI3jpYNuDB4MAV3_zZWr_PWb3wKLMx2_DgvXE9ITFWY16VSMgL7eXTGACzOxATITlpiC221qMS0UcVLizpvq4_35pleijQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: session stuff (again)","postDate":"1030121359","msgId":2212,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFrNXAyZithbWduQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDAwMDcwMWMyNGFiMCRkMmUzZjcxMCQ2NDAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":2202,"nextInTopic":2214,"prevInTime":2211,"nextInTime":2213,"topicId":2202,"numMessagesInTopic":3,"msgSnippet":"Seairth, Personally, I ve never heard of different versions of digest authentication between the browsers. Plus I don t really see how PHP can not support","rawEmail":"Return-Path: &lt;inthedarkplace@...&gt;\r\nX-Sender: inthedarkplace@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 23 Aug 2002 16:49:20 -0000\r\nReceived: (qmail 21373 invoked from network); 23 Aug 2002 16:49:19 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 23 Aug 2002 16:49:19 -0000\r\nReceived: from unknown (HELO n24.grp.scd.yahoo.com) (66.218.66.80)\n  by mta2.grp.scd.yahoo.com with SMTP; 23 Aug 2002 16:49:21 -0000\r\nReceived: from [66.218.67.147] by n24.grp.scd.yahoo.com with NNFMP; 23 Aug 2002 16:49:21 -0000\r\nDate: Fri, 23 Aug 2002 16:49:19 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: session stuff (again)\r\nMessage-ID: &lt;ak5p2f+amgn@...&gt;\r\nIn-Reply-To: &lt;000701c24ab0$d2e3f710$6400a8c0@seairthlaptop&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3372\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;\r\nX-Yahoo-Group-Post: member; u=121832671\r\nX-Yahoo-Profile: inthedarkplace\r\n\r\nSeairth,\n\nPersonally, I&#39;ve never heard of different versions of digest \nauthentication between the browsers. Plus I don&#39;t really see how PHP \ncan not support digest authentication. Digest authentication just \ninvolves parsing the &#39;Authorization&#39; header and generating the &#39;WWW-\nAuthenticate&#39; header. \n\nI&#39;d suggest you look at: \nhttp://www.rassoc.com/gregr/weblog/stories/2002/07/09/webServicesSecur\nityHttpDigestAuthenticationWithoutActiveDirectory.html\n\nThat is a &#39;native&#39; implementation of digest authentication. It \ndoesn&#39;t matter on the browser or container.\n\n- inthedarkplace\n\n--- In rest-discuss@y..., &quot;Seairth Jacobs&quot; &lt;seairth@s...&gt; wrote:\n&gt; Okay, a few threads back, I asked what was the preferred way to \nhandle\n&gt; sessions.  The most popular response was &quot;http authentication&quot;.  \nSince I am\n&gt; working on this project in PHP, I asked php.net&#39;s newsgroups where \nI might\n&gt; find code for digest authentication (basic authentication is easy \nenough).\n&gt; What I got back was that PHP currently does not support digest\n&gt; authentication (though I would have thought I could code around that\n&gt; problem).  And to make things worse, it seems not a lot of browsers \nsupport\n&gt; digest authentication in a compatible manner.  For instance, I came \nacross\n&gt; one article that says:\n&gt; \n&gt;     Opera and Amaya both support Apache&#39;s version of digest \nauthentication\n&gt;     IE5+ both support IIS&#39;s version of digest authentication\n&gt;     Opera and Amays do not work with IIS and IE does not work with \nApache\n&gt; \n&gt; Now, this may have changed with IE6, but I have not been able to \nfind\n&gt; anything to substanciate that.\n&gt; \n&gt; So, this leaves me with using basic authentication.  However, I am \nnot crazy\n&gt; about using it for two reasons:\n&gt; \n&gt; 1) Repeatedly sending login information over the wire in \nplaintext.  Now, I\n&gt; realize that I could use SSL, but that would be both expensive and \nslow the\n&gt; site down.\n&gt; \n&gt; 2) I don&#39;t see a way to &quot;expire&quot; the login information.  But maybe \nthere is\n&gt; a method that I am just not aware of...\n&gt; \n&gt; \n&gt; \n&gt; So, this brings me to session cookies.  Some time back, I recall \nreading the\n&gt; statement that &quot;cookies are not RESTful&quot;.  Now, is this all use of \ncookies\n&gt; or just persistant cookies?  Is it okay to use a single session \ncookie?  I\n&gt; would see this as no different from using http authentication (i.e. \nthe\n&gt; client resending identifying [set of] values over and over again), \nexcept\n&gt; that I can occasionally change the cookie&#39;s value to limit replay \nattacks\n&gt; and limit the possibility of stealing the password to only one \nrequest\n&gt; instead of every request (assuming basic authentication).\n&gt; \n&gt; \n&gt; There is one other thing I do like about http authentication:  it \ndoesn&#39;t\n&gt; &quot;interfere&quot; with the application process.  In other words, the \nbrowser just\n&gt; resubmits the last request with additional headers.  To implement \nhtml login\n&gt; forms and cookies, I have to take on the responsibility of keeping \ntrack of\n&gt; the submitted data in the last request.  It also means that the \nbrowser\n&gt; caches the login page in it&#39;s history (which does not happen with \nhttp\n&gt; authentication).\n&gt; \n&gt; \n&gt; So, how do you deal with the security issues of http authentication \nvs. html\n&gt; form/cookie authentication when you are running over a unsecure \nconneciton?\n&gt; And how do you do this and keep it all RESTful?\n&gt; \n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@s...\n\n\n"}}