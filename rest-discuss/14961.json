{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"g0Nq_yYlC9HkLqreWQ-A0j6HWtl8TdTrtxYhpPkxy9fKyMiBygAOzOSL6FNDN-TXl-nyTxkBRk7ZZST4GqCvDYlIzxxH3fSNTgoMdGjqIg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Hard-coded state machine not REST?","postDate":"1267534109","msgId":14961,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwMzAyMDU0ODI5LjA2ODYwNmI0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGhtaXRubCtkdHVlQGVHcm91cHMuY29tPg==","referencesHeader":"PGhtaXRubCtkdHVlQGVHcm91cHMuY29tPg=="},"prevInTopic":14953,"nextInTopic":14963,"prevInTime":14960,"nextInTime":14962,"topicId":14953,"numMessagesInTopic":7,"msgSnippet":"... Exactly.  My example is an Atom Protocol client s delete function. Unless you re using a forms language that supports DELETE, to instruct the client how","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86484 invoked from network); 2 Mar 2010 12:49:13 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m13.grp.re1.yahoo.com with QMQP; 2 Mar 2010 12:49:13 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 2 Mar 2010 12:49:13 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 6ECB7509DD;\n\tTue,  2 Mar 2010 07:48:36 -0500 (EST)\r\nDate: Tue, 2 Mar 2010 05:48:29 -0700\r\nTo: &quot;amaeze77&quot; &lt;amaeze@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100302054829.068606b4.eric@...&gt;\r\nIn-Reply-To: &lt;hmitnl+dtue@...&gt;\r\nReferences: &lt;hmitnl+dtue@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Hard-coded state machine not REST?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nEb wrote:\n&gt; \n&gt; Would an automated load tester (client) for a web application that\n&gt; uses hypermedia to traverse the application and execution not be\n&gt; considered RESTful because the state-machine for the application is\n&gt; hard-coded to some degree?\n&gt; \n\nExactly.  My example is an Atom Protocol client&#39;s delete function.\nUnless you&#39;re using a forms language that supports DELETE, to instruct\nthe client how that function works using hypertext, then the delete\nfunction must be hard-coded in the client chrome.\n\nThis works well for deleting members, which is well specified -- but\ndeleting collections is not.  An Atom Protocol client which hard-codes\na collection-delete function has its interoperability limited to those\nsystems which interpret collection-delete behavior the same way, i.e.\ncoupling.\n\nI don&#39;t actually care if a collection-delete button is in the client\nchrome, so long as its behavior is dictated by received hypertext.\nThis decoupling allows the server&#39;s interpretation of the unspecified\ncollection-delete function to change, without breaking clients, i.e.\ndecoupling.\n\nThe hypertext constraint is the line between this coupling/decoupling,\nand this holds true for a load-tester as well*.  An Atom-Protocol-\ncentric system with a load-testing REST client that incorporates\ncollection delete, does not need re-coding in the event of the system\nchanging.  If it does need re-coding, then it cannot be a REST client,\nby definition.\n\nA tightly-coupled client of any sort, even an implementation-specific\nload tester, fails to achieve REST if the collection-delete is hard-\ncoded within.  Xforms for example, allows the server to simply define a\nnew &lt;model&gt;, within hypertext, dynamically updating all clients when\nthey next refresh -- without changing the UI (machine or human).\n\nSo a load-testing REST client would just be driving an Xforms interface\ndynamically.  Refreshing the Xform can reflect the reconfiguration of\nthe system, without the load-tester needing to care.  It&#39;s driving the\nsame form, which now happens to have a different &lt;model&gt;.\n\nHard-coding within the client defeats the purpose of the hypertext\nconstraint, so the result is not a Uniform REST Interface.\n\n-Eric\n\n* I wouldn&#39;t necessarily consider a load tester to be a valid use-case\nfor REST.  I&#39;d hard-code it, since that hard-coding amounts to unit\ntests.  REST trades off the efficiencies that a protocol-exercising\nclient likely requires.\n\n"}}