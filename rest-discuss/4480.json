{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"0R3q4LlwhzgmQWyCzttA3yRitK9z6RrdlkvV12CYBzWfDo6SWCE9IiC4m5N0R9wR6ZuR4taMj-wlzDpdC2YIA90FS2G10KGxlpP7OZnzsg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Identifiers: higher precedence than other fields?","postDate":"1087755606","msgId":4480,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTE2LURBVjUwQ2pLMjdJbDkwMDA0ODIyOEBob3RtYWlsLmNvbT4=","referencesHeader":"PDMyRDU4NDVBNzQ1QkZCNDI5Q0JEQkFEQTU3Q0Q0MUFGMDg1NDRFRUFAdXNzamV4MDEuYW1lci5iZWEuY29tPg=="},"prevInTopic":4478,"nextInTopic":0,"prevInTime":4479,"nextInTime":4481,"topicId":4433,"numMessagesInTopic":18,"msgSnippet":"... Ouch. ... I wasn t following that bit of standards work - does this imply no documented standard for using the stuff after the # character in URIs to","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 69393 invoked from network); 20 Jun 2004 18:31:42 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m11.grp.scd.yahoo.com with QMQP; 20 Jun 2004 18:31:42 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.186.230)\n  by mta6.grp.scd.yahoo.com with SMTP; 20 Jun 2004 18:31:42 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Sun, 20 Jun 2004 11:31:42 -0700\r\nReceived: from 207.202.171.254 by bay16-dav50.bay16.hotmail.com with DAV;\n\tSun, 20 Jun 2004 18:31:42 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;David Orchard&quot; &lt;orchard@...&gt;\r\nReferences: &lt;32D5845A745BFB429CBDBADA57CD41AF08544EEA@...&gt;\r\nDate: Sun, 20 Jun 2004 11:20:06 -0700\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_001D_01C456B8.8A5DA2A0&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nMessage-ID: &lt;BAY16-DAV50CjK27Il900048228@...&gt;\r\nX-OriginalArrivalTime: 20 Jun 2004 18:31:42.0325 (UTC) FILETIME=[D5445250:01C456F4]\r\nX-eGroups-Remote-IP: 65.54.186.230\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: Re: [rest-discuss] Identifiers: higher precedence than other fields?\r\nX-Yahoo-Group-Post: member; u=87113616\r\nX-Yahoo-Profile: mdierken\r\n\r\n\r\n------=_NextPart_000_001D_01C456B8.8A5DA2A0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&gt; I laughed, I cried, when I got told to check out XPointer as to my regres=\r\nt I was on the XPointer WG.  \nOuch.\n\n&gt; That we didn&#39;t get an official frag =\r\nid syntax for XML because we got railroaded into using Ranges still fills m=\r\ne with rage.\nI wasn&#39;t following that bit of standards work - does this impl=\r\ny no documented standard for using the stuff after the &#39;#&#39; character in URI=\r\ns to locate data inside the returned XML representation? Or were you shooti=\r\nng for sending the stuff after the &#39;#&#39; character up to the server?\n\n&gt; Ideas=\r\n: default is no namespace name, xml element names are URI path components, =\r\nidentifier is in the URI path, \n&gt; xml identifier is the &quot;name&quot; attribute, U=\r\nRI query is never used for identifiers only queries, \n&gt; retrievals always r=\r\neturn the lowest element in the hierarchy (artist or artist/bio instead of =\r\nArtistList/Artist..) etc.\nSome of this sounds familiar... I did a project (=\r\nwound up on xml.apache.org, except it&#39;s derelict and abandoned) that used U=\r\nRIs to address into an XML document resident on the server. The &#39;document&#39; =\r\nwas in fact a &#39;virtual document&#39; and not just a single text file.\n\nCouple q=\r\nuestions\n&gt; default is no namespace name, \nNo arguments here.\n\n&gt; xml element=\r\n names are URI path components, \nDoes this mean to put tag names in the pat=\r\nh segments of a URI?\nIs this intended to have similar meaning as XPath sele=\r\nction?\nThis implies that the request is to retrieve a resource that happens=\r\n to be contained wholly within an XML document (or a synthesized, larger &#39;v=\r\nirtual&#39; document), rather than retrieve a stored XML document identified by=\r\n the URI. (I realize that from the client&#39;s perspective there is no way to =\r\ntell these two apart, but I&#39;m trying to figure out the intent through talki=\r\nng about expected implementation)\nLet&#39;s see a concrete example. Pick a well=\r\n known schema (something with at least three levels of element nesting - pe=\r\nrhaps one of the numerous RSS formats or Atom - ignoring namespaces) and cr=\r\naft what some &#39;best practices&#39; URI would look like.\n\n&gt; identifier is in the=\r\n URI path, \n&gt; xml identifier is the &quot;name&quot; attribute, \nAre these two a sugg=\r\nested alternative to putting xml element names in the path segments mention=\r\ned previously?\nThis particular approach is the same as what I used in the X=\r\nang project (up on xml.apache.org - only look at the source if you are morb=\r\nidly curious about servlet technologies from five years ago...). Very conve=\r\nnient and doesn&#39;t make the clients overly aware that the storage is in XML =\r\nformat or supports the XML data model. For \n\n\n&gt; URI query is never used for=\r\n identifiers only queries, \nThere&#39;s a fine line between identifier and quer=\r\ny. Again - I&#39;m curious as to what the problem you are trying to solve is. A=\r\nre you trying to come up with a reasonable 80/20 solution for addresing int=\r\no XML data models (or infosets or what have you)? Or are you trying to come=\r\n up with an approach for accessing any resource that supports returning XML=\r\n representations?\n\n&gt; retrievals always return the lowest element in the hie=\r\nrarchy (artist or artist/bio instead of ArtistList/Artist..) etc.\nNot sure =\r\nwhat this means - need to see an example.\n\n\n  ----- Original Message ----- =\r\n\n  From: David Orchard \n  To: neil_j_k@... ; rest-discuss@yahoogroups=\r\n.com \n  Sent: Thursday, June 17, 2004 3:06 PM\n  Subject: RE: [rest-discuss]=\r\n Identifiers: higher precedence than other fields?\n\n\n  I laughed, I cried, =\r\nwhen I got told to check out XPointer as to my regrest I was on the XPointe=\r\nr WG.  I still haven&#39;t recovered from the agony and scars of that schmozzle=\r\n.  That we didn&#39;t get an official frag id syntax for XML because we got rai=\r\nlroaded into using Ranges still fills me with rage.  However, attempting to=\r\n move on...\n\n  You might be right in that I&#39;m doing darned object thinking =\r\nfirst rather than interface, but I&#39;m trying...\n\n  My problem is actually fa=\r\nirly simple in the abstract: I want to figure out the 80/20 point for unify=\r\ning XML and the Web, hopefully hitting the &#39;make simple things simple and h=\r\nard things possible&#39; and then provide an effective and useful description f=\r\normat.\n\n  From an architecture perspective, I see that we have 2 hierachica=\r\nl data structures (URI, infoset), 2+ identifier mechanisms (URI, ID, name),=\r\n etc.  I roughly think that the Web and XML architecture are orthogonal.  \n=\r\n\n  Now, what can we do to make integration of URIs and XML and XML Schema e=\r\nasier?  What kind of constraints can we adopt that makes it possible to eas=\r\nily create XML web applications?\n  Ideas: default is no namespace name, xml=\r\n element names are URI path components, identifier is in the URI path, xml =\r\nidentifier is the &quot;name&quot; attribute, URI query is never used for identifiers=\r\n only queries, retrievals always return the lowest element in the hierarchy=\r\n (artist or artist/bio instead of ArtistList/Artist..) etc.\n\n  I&#39;m not sure=\r\n that the current WSDL 2.0 HTTP binding meets this point, and I&#39;m trying to=\r\n help fix that.  And if WSDL 2.0 isn&#39;t the right way to describe Web/XML co=\r\nmponents, then maybe some other format should be looked at in the w3c (or e=\r\nlsewhere).\n\n  Cheers,\n  Dave\n    -----Original Message-----\n    From: Neil =\r\nKandalgaonkar [mailto:neil_j_k@...]\n    Sent: Friday, June 04, 2004 1=\r\n0:22 AM\n    To: rest-discuss@yahoogroups.com\n    Subject: Re: [rest-discuss=\r\n] Identifiers: higher precedence than other fields?\n\n\n\n    --- David Orchar=\r\nd &lt;orchard@...&gt; wrote:\n    &gt; It seems that any XML identifier=\r\n is problematic to algorithmically\n    &gt; map to a URI.\n\n    Yes. As you&#39;ve =\r\nnoticed, this is impossible with just simple\n    directory-style slashes.\n\n=\r\n    But can I suggest that you step back and ask what problem you&#39;re\n    tr=\r\nying to solve?\n\n    If your problem is &quot;I have settled on XML, the document=\r\ns will be\n    entirely freeform, and I want a uniform way of identifying an=\r\ny random\n    node so I can stuff them into URIs&quot; then I guess you want XPat=\r\nh or\n    XPointer. Check them out. The expressions are very complex though.=\r\n\n\n    However, if that *isn&#39;t* your problem, then perhaps you should think\n=\r\n    about the URI interface first.  It seems to me that you really just\n   =\r\n want:\n\n    http://host/artist/Thievery%20Corporation\n    http://host/artis=\r\nt/Thievery%20Corporation/bio\n    http://host/artist/Thievery%20Corporation/=\r\ngenre\n    http://host/artist/Thievery%20Corporation/website\n\n    You may pr=\r\notest that you have to write different get/set methods for\n    each one of =\r\nthose URIs! And what if your underlying data structure\n    changes?\n\n    Ho=\r\nwever, some would say this is the beauty of REST. It forces you to\n    thin=\r\nk about the consumers of your interfaces. Hiding the details is\n    good. T=\r\nhis means you can change your underlying data structure at\n    will.\n\n\n    =\r\n=3D=3D=3D=3D=3D\n    --\n    Neil Kandalgaonkar\n    neil_j_k@...\n\n\n    =\r\n      Yahoo! Groups Sponsor \n                ADVERTISEMENT\n               \n=\r\n         \n         \n\n\n-----------------------------------------------------=\r\n-----------------------\n    Yahoo! Groups Links\n\n      a.. To visit your gr=\r\noup on the web, go to:\n      http://groups.yahoo.com/group/rest-discuss/\n  =\r\n      \n      b.. To unsubscribe from this group, send an email to:\n      re=\r\nst-discuss-unsubscribe@yahoogroups.com\n        \n      c.. Your use of Yahoo=\r\n! Groups is subject to the Yahoo! Terms of Service. \n\n\r\n------=_NextPart_000_001D_01C456B8.8A5DA2A0\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2800.1400&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE=\r\n&gt;\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&gt; &lt;S=\r\nPAN class=3D048350320-17062004&gt;&lt;FONT \nface=3DArial color=3D#0000ff size=3D2=\r\n&gt;I laughed, I cried,&nbsp;when I got told to \ncheck out XPointer as to my r=\r\negrest I was on the XPointer WG.&nbsp; \n&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;F=\r\nONT face=3DArial size=3D2&gt;&lt;SPAN \nclass=3D048350320-17062004&gt;Ouch.&lt;/SPAN&gt;&lt;/F=\r\nONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D=\r\n048350320-17062004&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff size=3D2&gt;&lt;SPAN class=3D048350320-17062004&gt;&gt; \nThat we didn&#39;t g=\r\net an official frag id syntax for XML because we got railroaded \ninto using=\r\n Ranges still fills me with rage.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAri=\r\nal size=3D2&gt;&lt;SPAN class=3D048350320-17062004&gt;I wasn&#39;t following \nthat bit o=\r\nf standards work - does this imply no documented standard for using \nthe st=\r\nuff after the &#39;#&#39; character in URIs to locate data inside the returned XML =\r\n\nrepresentation? Or were you shooting for sending the stuff after the &#39;#&#39; \n=\r\ncharacter up to the server?&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial col=\r\nor=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D048350320-17062004&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp=\r\n;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN class=3D0483=\r\n50320-17062004&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial co=\r\nlor=3D#0000ff size=3D2&gt;&gt; \nIdeas: default is no namespace name, xml eleme=\r\nnt names are URI path components, \nidentifier is in the URI path, &lt;/FONT&gt;&lt;/=\r\nSPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff size=3D2&gt;&gt; \nxml identifier is the &quot;name&quot; attribute, URI query=\r\n is never used for identifiers \nonly queries, &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&=\r\ngt; \nretrievals always return the lowest element in the hierarchy (artist o=\r\nr \nartist/bio instead of ArtistList/Artist..) etc.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV=\r\n&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;Some of this sounds=\r\n \nfamiliar... I did a project (wound up on xml.apache.org, except it&#39;s dere=\r\nlict \nand abandoned) that used URIs to address into an XML&nbsp;document re=\r\nsident on \nthe server. The &#39;document&#39; was in fact a &#39;virtual document&#39; and =\r\nnot just a \nsingle text file.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350=\r\n320-17062004&gt;&lt;FONT \ncolor=3D#000000&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN c=\r\nlass=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;Couple \nquestions&lt;/FONT&gt;&lt;/S=\r\nPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;&lt;FON=\r\nT color=3D#0000ff&gt;&gt; \ndefault is no namespace name, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;No argum=\r\nents \nhere.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT=\r\n \ncolor=3D#000000&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-1=\r\n7062004&gt;&lt;FONT color=3D#000000&gt;&lt;FONT color=3D#0000ff&gt;&gt; \nxml element names=\r\n are URI path components, &lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D04=\r\n8350320-17062004&gt;&lt;FONT color=3D#000000&gt;Does this mean to put \ntag names in =\r\nthe path segments of a URI?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D04835032=\r\n0-17062004&gt;&lt;FONT color=3D#000000&gt;Is this intended to have \nsimilar meaning =\r\nas XPath selection?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-170620=\r\n04&gt;&lt;FONT color=3D#000000&gt;This implies that the \nrequest is to retrieve&nbsp=\r\n;a resource that happens to be contained wholly \nwithin an XML document (or=\r\n a synthesized, larger &#39;virtual&#39; document), rather \nthan retrieve a stored&=\r\nnbsp;XML document identified by the URI. (I realize that \nfrom the client&#39;s=\r\n perspective there is no way to tell these two apart, but I&#39;m \ntrying to fi=\r\ngure out the intent through talking about expected \nimplementation)&lt;/FONT&gt;&lt;=\r\n/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;/SPAN&gt;&lt;SPAN class=3D048=\r\n350320-17062004&gt;&lt;FONT \ncolor=3D#000000&gt;Let&#39;s see a concrete example. Pick a=\r\n well known schema (something \nwith at least three levels of element nestin=\r\ng - perhaps one of the numerous RSS \nformats or Atom - ignoring namespaces)=\r\n and craft what some &#39;best practices&#39; URI \nwould look like.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT \ncolor=3D#000000&gt;&lt;/FONT&gt;&lt;/=\r\nSPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#0000=\r\n00&gt;&lt;FONT color=3D#0000ff&gt;&gt; \nidentifier is in the URI path, &lt;/FONT&gt;&lt;/FONT=\r\n&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;=\r\n&lt;SPAN \nclass=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=\r\n=3D2&gt;&gt; xml \nidentifier is the &quot;name&quot; attribute, &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/S=\r\nPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;&lt;SPA=\r\nN \nclass=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;Are these two a \nsugges=\r\nted&nbsp;alternative to putting xml element names in the path segments \nmen=\r\ntioned previously?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048=\r\n350320-17062004&gt;&lt;FONT color=3D#000000&gt;&lt;SPAN \nclass=3D048350320-17062004&gt;Thi=\r\ns particular approach is the same as what I used in \nthe Xang project (up o=\r\nn xml.apache.org - only look at the source if you are \nmorbidly curious abo=\r\nut servlet technologies from five years ago...). Very \nconvenient and doesn=\r\n&#39;t make the clients overly aware that the storage is in XML \nformat or supp=\r\norts the XML data model. For &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=\r\n=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;&lt;SPAN \nclass=3D048350320-170620=\r\n04&gt;&lt;FONT \ncolor=3D#000000&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SP=\r\nAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;&lt;SPAN \nclass=3D04835032=\r\n0-17062004&gt;&lt;FONT color=3D#0000ff&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN clas=\r\ns=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&gt; \nUR=\r\nI query is never used for identifiers only queries, &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;D=\r\nIV&gt;&lt;SPAN class=3D048350320-17062004&gt;There&#39;s a fine line between identifier =\r\nand \nquery. Again - I&#39;m curious as to what the problem you are trying to so=\r\nlve is. \nAre you trying to come up with a reasonable 80/20 solution for add=\r\nresing into \nXML data models (or infosets or what have you)? Or are you try=\r\ning to come up \nwith an approach for accessing any resource that supports r=\r\neturning XML \nrepresentations?&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17=\r\n062004&gt;&lt;/SPAN&gt;&lt;SPAN \nclass=3D048350320-17062004&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;S=\r\nPAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;=\r\n&gt; \nretrievals always return the lowest element in the hierarchy (artist =\r\nor \nartist/bio instead of ArtistList/Artist..) \netc.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/F=\r\nONT&gt;&lt;/SPAN&gt;\n&lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT color=3D#000000&gt;Not=\r\n sure what this means \n- need to see an example.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;=\r\nSPAN class=3D048350320-17062004&gt;&lt;FONT \ncolor=3D#000000&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;=\r\n&lt;/DIV&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2=\r\n&gt;&lt;SPAN \nclass=3D048350320-17062004&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOCKQUOTE d=\r\nir=3Dltr \nstyle=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px;=\r\n BORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=3D&quot;FONT: =\r\n10pt arial&quot;&gt;----- Original Message ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=3D&quot;BACKGROU=\r\nND: #e4e4e4; FONT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n  &lt;A title=\r\n=3Dorchard@... \n  href=3D&quot;mailto:orchard@...&quot;&gt;D=\r\navid Orchard&lt;/A&gt; &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A tit=\r\nle=3Dneil_j_k@... \n  href=3D&quot;mailto:neil_j_k@...&quot;&gt;neil_j_k@yaho=\r\no.com&lt;/A&gt; ; &lt;A \n  title=3Drest-discuss@yahoogroups.com \n  href=3D&quot;mailto:re=\r\nst-discuss@yahoogroups.com&quot;&gt;rest-discuss@yahoogroups.com&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;D=\r\nIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Thursday, June 17, 2004 3:06 \n  =\r\nPM&lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; RE: [rest-discus=\r\ns] Identifiers: \n  higher precedence than other fields?&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR&gt;&lt;/=\r\nDIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#00=\r\n00ff size=3D2&gt;I \n  laughed, I cried,&nbsp;when I got told to check out XPoi=\r\nnter as to my regrest \n  I was on the XPointer WG.&nbsp; I still haven&#39;t re=\r\ncovered from the agony and \n  scars of that schmozzle.&nbsp; That we didn&#39;t=\r\n get an official frag id syntax \n  for XML because we got railroaded into u=\r\nsing Ranges still fills me with \n  rage.&nbsp; However, attempting to move =\r\non...&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT fac=\r\ne=3DArial color=3D#0000ff \n  size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SP=\r\nAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;Y=\r\nou \n  might be right in that I&#39;m doing darned object thinking first rather =\r\nthan \n  interface, but I&#39;m trying...&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=\r\n=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff \n  size=3D2&gt;&lt;/FONT=\r\n&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DA=\r\nrial color=3D#0000ff size=3D2&gt;My \n  problem is actually fairly simple in th=\r\ne abstract: I want to figure out the \n  80/20 point for unifying XML and th=\r\ne Web, hopefully hitting the &#39;make simple \n  things simple and hard things =\r\npossible&#39; and then provide an effective and \n  useful description format.&lt;/=\r\nFONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DAri=\r\nal color=3D#0000ff \n  size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN clas=\r\ns=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;From \n  =\r\nan architecture perspective, I see that we have 2 hierachical data structur=\r\nes \n  (URI, infoset), 2+ identifier mechanisms (URI, ID, name), etc.&nbsp; =\r\nI roughly \n  think that the Web and XML architecture are orthogonal.&nbsp; =\r\n\n  &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=\r\n=3DArial color=3D#0000ff \n  size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPA=\r\nN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;No=\r\nw, \n  what can we do to make integration of URIs and XML and XML Schema \n  =\r\neasier?&nbsp; What kind of constraints&nbsp;can we adopt that makes it \n  p=\r\nossible to easily create XML web applications?&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;=\r\nSPAN class=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff \n  size=\r\n=3D2&gt;Ideas: default is no namespace name, xml element names are URI path \n =\r\n components, identifier is in the URI path, xml identifier is the &quot;name&quot; \n =\r\n attribute, URI query is never used for identifiers only queries, retrieval=\r\ns \n  always return the lowest element in the hierarchy (artist or artist/bi=\r\no \n  instead of ArtistList/Artist..) etc.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN =\r\nclass=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff \n  size=3D2&gt;&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT fac=\r\ne=3DArial color=3D#0000ff size=3D2&gt;I&#39;m \n  not sure that the current WSDL 2.=\r\n0 HTTP binding meets this point, and I&#39;m \n  trying to help fix that.&nbsp; =\r\nAnd if WSDL 2.0 isn&#39;t the right way to describe \n  Web/XML components, then=\r\n maybe some other format should be looked at in the \n  w3c (or elsewhere).&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=3DAr=\r\nial color=3D#0000ff \n  size=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN cla=\r\nss=3D048350320-17062004&gt;&lt;FONT face=3DArial color=3D#0000ff \n  size=3D2&gt;Chee=\r\nrs,&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;SPAN class=3D048350320-17062004&gt;&lt;FONT face=\r\n=3DArial color=3D#0000ff \n  size=3D2&gt;Dave&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n  &lt;BLOCKQUOTE=\r\n \n  style=3D&quot;PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #0000ff 2px =\r\nsolid&quot;&gt;\n    &lt;DIV class=3DOutlookMessageHeader dir=3Dltr align=3Dleft&gt;&lt;FONT =\r\nface=3DTahoma \n    size=3D2&gt;-----Original Message-----&lt;BR&gt;&lt;B&gt;From:&lt;/B&gt; Neil=\r\n Kandalgaonkar \n    [mailto:neil_j_k@...]&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; Friday, Jun=\r\ne 04, 2004 10:22 \n    AM&lt;BR&gt;&lt;B&gt;To:&lt;/B&gt; rest-discuss@yahoogroups.com&lt;BR&gt;&lt;B&gt;S=\r\nubject:&lt;/B&gt; Re: \n    [rest-discuss] Identifiers: higher precedence than oth=\r\ner \n    fields?&lt;BR&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;TT&gt;&lt;BR&gt;--- David Orchard \n    &lt;orch=\r\nard@...&gt; wrote:&lt;BR&gt;&gt; It seems that any XML \n    identif=\r\nier is problematic to algorithmically&lt;BR&gt;&gt; map to a \n    URI.&lt;BR&gt;&lt;BR&gt;Yes=\r\n. As you&#39;ve noticed, this is impossible with just \n    simple&lt;BR&gt;directory-=\r\nstyle slashes.&lt;BR&gt;&lt;BR&gt;But can I suggest that you step \n    back and ask wha=\r\nt problem you&#39;re&lt;BR&gt;trying to solve?&lt;BR&gt;&lt;BR&gt;If your problem \n    is &quot;I have=\r\n settled on XML, the documents will be&lt;BR&gt;entirely freeform, and I \n    wan=\r\nt a uniform way of identifying any random&lt;BR&gt;node so I can stuff them \n    =\r\ninto URIs&quot; then I guess you want XPath or&lt;BR&gt;XPointer. Check them out. The =\r\n\n    expressions are very complex though.&lt;BR&gt;&lt;BR&gt;However, if that *isn&#39;t* y=\r\nour \n    problem, then perhaps you should think&lt;BR&gt;about the URI interface =\r\n\n    first.&nbsp; It seems to me that you really just&lt;BR&gt;want:&lt;BR&gt;&lt;BR&gt;&lt;A \n =\r\n   href=3D&quot;http://host/artist/Thievery%20Corporation&quot;&gt;http://host/artist/Th=\r\nievery%20Corporation&lt;/A&gt;&lt;BR&gt;&lt;A \n    href=3D&quot;http://host/artist/Thievery%20C=\r\norporation/bio&quot;&gt;http://host/artist/Thievery%20Corporation/bio&lt;/A&gt;&lt;BR&gt;&lt;A \n  =\r\n  href=3D&quot;http://host/artist/Thievery%20Corporation/genre&quot;&gt;http://host/arti=\r\nst/Thievery%20Corporation/genre&lt;/A&gt;&lt;BR&gt;&lt;A \n    href=3D&quot;http://host/artist/T=\r\nhievery%20Corporation/website&quot;&gt;http://host/artist/Thievery%20Corporation/we=\r\nbsite&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;You \n    may protest that you have to write different get/=\r\nset methods for&lt;BR&gt;each one \n    of those URIs! And what if your underlying=\r\n data \n    structure&lt;BR&gt;changes?&lt;BR&gt;&lt;BR&gt;However, some would say this is the=\r\n beauty of \n    REST. It forces you to&lt;BR&gt;think about the consumers of your=\r\n interfaces. \n    Hiding the details is&lt;BR&gt;good. This means you can change =\r\nyour underlying \n    data structure at&lt;BR&gt;will.&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;=3D=3D=3D=3D=3D&lt;=\r\nBR&gt;--&lt;BR&gt;Neil \n    Kandalgaonkar&lt;BR&gt;neil_j_k@...&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;/BL=\r\nOCKQUOTE&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_001D_01C456B8.8A5DA2A0--\r\n\n"}}