{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":135166739,"authorName":"Jeffrey Winter","from":"&quot;Jeffrey Winter&quot; &lt;JeffreyWinter@...&gt;","profile":"kimberliewinter","replyTo":"SENDER","senderId":"Jkvb0K3o9TYAs8e_6AbBZ4bxAl8yXwz0jiWNjpjAzqqejHCZCxaIZWAQNziomqcdEkZL1X6gsWxq07L1stpFxp7CNeGwGNNIAzZMk-r__w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)","postDate":"1043266677","msgId":3310,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNBOTkzM0I1NjhBMjQ1NDNCNkFEOUUwMkM3RTZBREEwQzE1QzY4QG1vZS5jcmQuY29tPg=="},"prevInTopic":3307,"nextInTopic":3311,"prevInTime":3309,"nextInTime":3311,"topicId":3300,"numMessagesInTopic":7,"msgSnippet":"Your already talking about introducing custom header formats, and OPTIONS methods can contain an entity body. Perhaps a better way of dealing with this is to","rawEmail":"Return-Path: &lt;JeffreyWinter@...&gt;\r\nX-Sender: JeffreyWinter@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 22 Jan 2003 20:17:59 -0000\r\nReceived: (qmail 77338 invoked from network); 22 Jan 2003 20:17:59 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 22 Jan 2003 20:17:59 -0000\r\nReceived: from unknown (HELO moe.crd.com) (209.51.250.33)\n  by mta2.grp.scd.yahoo.com with SMTP; 22 Jan 2003 20:17:58 -0000\r\ncontent-class: urn:content-classes:message\r\nSubject: RE: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)\r\nDate: Wed, 22 Jan 2003 15:17:57 -0500\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-ID: &lt;3A9933B568A24543B6AD9E02C7E6ADA0C15C68@...&gt;\r\nX-MS-Has-Attach: \r\nX-MimeOLE: Produced By Microsoft Exchange V6.0.6249.0\r\nX-MS-TNEF-Correlator: \r\nThread-Topic: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)\r\nThread-Index: AcLCT7/wCTunTq2ERo+/38UTa1UUWQAAtBzw\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;,\n\t&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nCc: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nFrom: &quot;Jeffrey Winter&quot; &lt;JeffreyWinter@...&gt;\r\nX-Yahoo-Group-Post: member; u=135166739\r\nX-Yahoo-Profile: kimberliewinter\r\n\r\n\nYour already talking about introducing custom header formats, and \nOPTIONS=\r\n methods can contain an entity body. Perhaps a better way \nof dealing with =\r\nthis is to include a message body in the OPTIONS\nrequest that is just the m=\r\nethod you&#39;re interested in:\n\n\t&lt;method&gt;PUT&lt;/method&gt;\n\n(Make it XML just to be=\r\n fancy :)).  The response could then be \na standard set of headers and/or m=\r\netadata about just that method.\n\nA OPTIONS call without the &lt;method/&gt; entit=\r\ny could respond with \nthe information that a &lt;method/&gt; element is require f=\r\nor OPTIONS\ncalls to that service.\n\n- Jeff \n\n\n\n-----Original Message-----\nFr=\r\nom: S. Alexander Jacobson [mailto:alex@...] \nSent: Wednesday, January 22=\r\n, 2003 2:47 PM\nTo: Seairth Jacobs\nCc: rest-discuss\nSubject: Re: OPTIONS res=\r\nponse (was Re: [rest-discuss] REST Resource\nDiscovery)\n\n\nI like your versio=\r\nn of the format quite a lot.\nThe only thing I&#39;d like to see in it that is\nm=\r\nissing is some way of finding out what\ncontent-types are available via\ncont=\r\nent-negotiation.\n\nContent-Types: &lt;same format as accept&gt;\nEncodings: &lt;same f=\r\normat as accept-encodings&gt;\n\nRegarding the options header on GET, I like tha=\r\nt\nas a concept, but the practice makes me nervous.\nI&#39;d like to avoid a prol=\r\niferation of file formats\nfor this sort of thing.\n\n-Alex-\n\n________________=\r\n___________________________________________________\nS. Alexander Jacobson  =\r\n                 i2x Media\n1-212-787-1914 voice                    1-603-28=\r\n8-1280 fax\n\n\nOn Wed, 22 Jan 2003, Seairth Jacobs wrote:\n\n&gt; Another feature =\r\nthat would be good would be to have a new HTTP\nresponse\n&gt; header called &quot;op=\r\ntions&quot;, which would give a comma-separated list of\n&gt; content-types a given =\r\nURI can return for an OPTIONS request.  For\ninstance,\n&gt; suppose you did a G=\r\nET on a URI.  You get back a response, including\nthe\n&gt; following line:\n&gt;\n&gt; =\r\noptions: text/http-request-options, application/rdf+xml,\n&gt; application/myfo=\r\nrmat+xml, text/html\n&gt;\n&gt; (note: &quot;text/http-request-options&quot; is a bogus mime =\r\ntype for my format\n&gt; described below.)\n&gt;\n&gt; This would tell the client that =\r\nit could issue an OPTIONS request with\nsome\n&gt; or all of the types and the s=\r\nerver would return the appropriate one\n&gt; (presumably the first one if it wa=\r\ns from that list).\n&gt;\n&gt; This would also allow Google to do some neat stuff. =\r\n First it would\nGET the\n&gt; resource.  Once received, it would see that there=\r\n were options\navailable for\n&gt; that resource.  It could then turn around and=\r\n selectively query with\nOPTIONS\n&gt; to find out all sorts of useful informati=\r\non (such as the details of a\nweb\n&gt; service interface).  Without the header,=\r\n Google wouldn&#39;t even bother,\neven\n&gt; if there were OPTIONS to query...\n&gt;\n&gt; =\r\nThoughts?\n&gt;\n&gt; ---\n&gt; Seairth Jacobs\n&gt; seairth@...\n&gt;\n&gt;\n&gt; From: &quot;Seair=\r\nth Jacobs&quot; &lt;seairth@...&gt;\n&gt; &gt;\n&gt; &gt; verb request-header:value\n&gt; &gt;\n&gt; &gt; =\r\nwhere:\n&gt; &gt;\n&gt; &gt; verb: GET, PUT, POST, etc., and &quot;*&quot; which means any verb (fo=\r\nr which\nthe\n&gt; &gt; following request-header is allowed)\n&gt; &gt; request-header: th=\r\nese are headers that it recognizes (e.g.\ncontent-type,\n&gt; &gt; user-agent, etc.=\r\n)\n&gt; &gt; value: indicates an allowable value (following the same rules for\nthe=\r\n\n&gt; actual\n&gt; &gt; request-header).\n&gt; &gt;\n&gt; &gt; Any combination that is not explicit=\r\nly defined means that the\nresource\n&gt; &gt; doesn&#39;t care about those headers.\n&gt; =\r\n&gt;\n&gt; &gt; So, suppose you encountered a response like:\n&gt; &gt;\n&gt; &gt; PUT content-type=\r\n:text/html\n&gt; &gt; * content-type: application/xml+rss\n&gt; &gt; GET user-agent:Mozil=\r\nla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; In this case, thi=\r\ns is saying that PUT only allows a content-type of\n&gt; &gt; text/html or applica=\r\ntion/xml+rss, while all other verbs (in this\ncase\n&gt; POST)\n&gt; &gt; allow only ap=\r\nplication/xml+rss.  Also, the resource is only GETable\nby IE6\n&gt; &gt; (or a cli=\r\nent that says it&#39;s IE6).  Note that no other combination is\n&gt; defined\n&gt; &gt; f=\r\nor user-agent, so it implies that any client can issue a POST, PUT,\netc.\n&gt; =\r\n&gt;\n&gt; &gt; It might even do to extend this format slightly to allow the server\nt=\r\no\n&gt; &gt; explicitly indicate that it understands a given header name, thereby\n=\r\n&gt; &gt; allowing new clients to query a server to see if the server can\nhandle =\r\nthe\n&gt; &gt; added features of the client.  I&#39;m not sure how this format would\nb=\r\ne.\n&gt; Maybe\n&gt; &gt; just leave the value out of the above string.  Are there any=\r\n\nexisting\n&gt; &gt; headers where an empty string is a valid value?  If so, we co=\r\nuld\npossibly\n&gt; &gt; leave the colon off.  For instance, suppose there was a ne=\r\nw request\nheader\n&gt; &gt; called &quot;my-feature&quot;.  The server could return:\n&gt; &gt;\n&gt; &gt;=\r\n * my-feature:  (or without the colon)\n&gt; &gt;\n&gt; &gt; to indicate that it knows ab=\r\nout this field and handles it according\nto\n&gt; &gt; whatever semantics it has.\n&gt;=\r\n\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsub=\r\nscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to\nhttp=\r\n://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n\n\nYahoo! Groups Sponsor\nADVERTISEMENT\n\n=\r\n\n\n\nTo unsubscribe from this group, send an email to:\nrest-discuss-unsubscri=\r\nbe@yahoogroups.com\n\n\n\nYour use of Yahoo! Groups is subject to the Yahoo! Te=\r\nrms of Service. \n\n"}}