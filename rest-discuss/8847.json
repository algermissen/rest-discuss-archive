{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292691042,"authorName":"Steve Bjorg","from":"Steve Bjorg &lt;steveb@...&gt;","profile":"steve_bjorg","replyTo":"SENDER","senderId":"f9myHbJSVsXJEL2djS_htPww9z7trLWkKSQOEiHXFXFbF84lA2IoJdLKKRYWL6ZNuwfchy3tFo65rVZ_4Ol9FNcPc9QFGO-eNA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: WADL pushback","postDate":"1181140558","msgId":8847,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDVBOUFDNURGLTQ5MDYtNEMxQi1CM0ExLTJFQUM2OTlEQTA2N0BtaW5kdG91Y2guY29tPg==","inReplyToHeader":"PDg3b2RqdDZ1cDMuZnNmQHBob2VuaXguYXN5bmNocm9ub3VzLm9yZz4=","referencesHeader":"PGY0NDdxbCQ2bGUkMUBzZWEuZ21hbmUub3JnPiA8ZjQ0OXZvK2wwY3NAZUdyb3Vwcy5jb20+IDxmNDRjOWIkb2pmJDFAc2VhLmdtYW5lLm9yZz4gPDU4NkVDRjRELTY4RTUtNDhGRS05NkM4LTMxQkVDMDQ1RkIxRUBtaW5kdG91Y2guY29tPiA8ZjQ0dGttJGliaCQxQHNlYS5nbWFuZS5vcmc+IDw3MTFhNzNkZjA3MDYwNjAwMDVwNmI0MTc4MGNtZTVhZTRlMWQwMjUyYzEzZkBtYWlsLmdtYWlsLmNvbT4gPDg3b2RqdDZ1cDMuZnNmQHBob2VuaXguYXN5bmNocm9ub3VzLm9yZz4="},"prevInTopic":8844,"nextInTopic":8848,"prevInTime":8846,"nextInTime":8848,"topicId":8794,"numMessagesInTopic":108,"msgSnippet":"... I would argue that the type is defined by the observer, not the emitter.  For instance, if I had the following XML:  John Doe ","rawEmail":"Return-Path: &lt;steveb@...&gt;\r\nX-Sender: steveb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 92081 invoked from network); 6 Jun 2007 14:43:12 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m48.grp.scd.yahoo.com with QMQP; 6 Jun 2007 14:43:12 -0000\r\nReceived: from unknown (HELO tp.mindtouch.com) (70.87.49.83)\n  by mta8.grp.scd.yahoo.com with SMTP; 6 Jun 2007 14:43:12 -0000\r\nReceived: (qmail 19127 invoked from network); 6 Jun 2007 14:36:10 -0000\r\nReceived: from ip68-107-88-60.sd.sd.cox.net (HELO ?192.168.1.185?) (steveb@...@68.107.88.60)\n  by tp.mindtouch.com with ESMTPA; 6 Jun 2007 14:36:10 -0000\r\nIn-Reply-To: &lt;87odjt6up3.fsf@...&gt;\r\nReferences: &lt;f447ql$6le$1@...&gt; &lt;f449vo+l0cs@...&gt; &lt;f44c9b$ojf$1@...&gt; &lt;586ECF4D-68E5-48FE-96C8-31BEC045FB1E@...&gt; &lt;f44tkm$ibh$1@...&gt; &lt;711a73df0706060005p6b41780cme5ae4e1d0252c13f@...&gt; &lt;87odjt6up3.fsf@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;5A9AC5DF-4906-4C1B-B3A1-2EAC699DA067@...&gt;\r\nCc: &quot;Dave Pawson&quot; &lt;dave.pawson@...&gt;,\n &quot;Patrick Mueller&quot; &lt;pmuellr@...&gt;,\n rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Wed, 6 Jun 2007 07:35:58 -0700\r\nTo: Josh Sled &lt;jsled@...&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Steve Bjorg &lt;steveb@...&gt;\r\nSubject: Re: [rest-discuss] Re: WADL pushback\r\nX-Yahoo-Group-Post: member; u=292691042; y=-rxQSskB5-1jP3F2wEJ6gc4wu3hBPJTSJAnwqGd-_yNvCgdI8VY\r\nX-Yahoo-Profile: steve_bjorg\r\n\r\nOn Jun 6, 2007, at 7:09 AM, Josh Sled wrote:\n\n&gt; &quot;Dave Pawson&quot; &lt;dave.pawson@...&gt; writes:\n&gt;&gt; A schema aware XML could provide the data types, far more so than  \n&gt;&gt; json.\n&gt;&gt; As for self descriptive? Nothing to choose, it&#39;s personal preference.\n&gt;\n&gt; But in the example given, using just the defined semantics of XML  \n&gt; and JSON,\n&gt; there&#39;s 2 things specified in the JSON that aren&#39;t in the XML:\n&gt;\n&gt; - &#39;quantity&#39; is an integer.\n&gt; - &#39;author&#39; is a list.\n\nI would argue that the type is defined by the observer, not the  \nemitter.  For instance, if I had the following XML:\n\t&lt;book&gt;\n\t\t&lt;author&gt;John Doe&lt;/author&gt;\n\t\t&lt;author&gt;Jane Doe&lt;/author&gt;\n\t\t&lt;quantity&gt;1&lt;/quantity&gt;\n\t&lt;/book&gt;\n\nThe observer might not be aware of the fact that there can be  \nmultiple &lt;author&gt; elements.  It will read just the first one with:\n\tstring author = doc[&quot;author&quot;].AsText;\nSimilarly, the &lt;quantity&gt; might have been emitted as a string, but is  \nread as an integer by the observer with a default quantity of 0 if it  \ncould find a matching element:\n\tint quantity = doc[&quot;quantity&quot;].AsInt ?? 0;\n\nBy pushing the typing to the observer, we further decouple  \nparticipants in a communication.  Said differently: strings and  \nstructure are good enough for all cases.  XML gives you exactly that  \n(and a bit more like xpath, xquery, xslt, etc.).\n\n&gt;\n&gt; As for the larger point, I think JSON&#39;s great for moving structs  \n&gt; around.\n&gt; Every programming language has the same basic data types: string, int,\n&gt; double, boolean, map, list.  Having a way to simply (concisely,  \n&gt; readably,\n&gt; &c.) exchange them is nifty.  And, no, it&#39;s not limited to javascript\n&gt; ... I&#39;ve a Java system emitting JSON-serialized datapoints,  \n&gt; consumed by\n&gt; python into RRD databases, and (if interesting) handed to another  \n&gt; simple\n&gt; HTML-and-javascript UI for formatting and display.\n\nBut JSON is more brittle to changes than XML.  The simple example of  \none or more authors demonstrates that.  Otherwise to protect yourself  \nyou would have to always do the following for all key-value pairs:\n\t{ &quot;author&quot; : [ &quot;#text&quot; : &quot;John Doe&quot; ] }\nIf you don&#39;t do this on the encoding side, you&#39;ll push the problem  \nout to all the decoders, which is exactly the case in JSON.\n\nThat said, I think JSON rules in the browser.  But webservices should  \nemit serialized PHP for PHP clients and microformat when embedding  \ndata in HTML.  So, I need one format to can be freely converted to  \nany of these and has good processing options.  That&#39;s XML for me.\n\n- Steve\n\n--------------\nSteve G. Bjorg\nhttp://www.mindtouch.com\nhttp://www.opengarden.org\n\n\n"}}