{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"2bKVqgs4ziBe4J4XJkgIObFdYAqEdplyAnJLTSDUY8eu98uca2UWP3VDu9tlzETp5r3DJxE7z1RaYH84bJ4OCvA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Plan 9 explanation for Alex","postDate":"1012070976","msgId":340,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTJGQTNGLjU1QzkyRUJGQGp1bXAubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI1MTgwMDU1MC4xNDAwLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":0,"nextInTopic":396,"prevInTime":339,"nextInTime":341,"topicId":340,"numMessagesInTopic":6,"msgSnippet":"... The point of the Plan 9 anecdote is that it stands as an existance proof invalidating your claim that parameter passing to a procedure cannot be modeled as","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 26 Jan 2002 18:52:09 -0000\r\nReceived: (qmail 16924 invoked from network); 26 Jan 2002 18:52:07 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m2.grp.snv.yahoo.com with QMQP; 26 Jan 2002 18:52:07 -0000\r\nReceived: from unknown (HELO blanco.clickfeed.com) (207.8.92.96)\n  by mta2.grp.snv.yahoo.com with SMTP; 26 Jan 2002 18:52:07 -0000\r\nReceived: from jump.net (cust-92-97.customer.jump.net [207.8.92.97])\n\tby blanco.clickfeed.com (8.10.0/8.10.0) with ESMTP id g0QIq1K22742;\n\tSat, 26 Jan 2002 12:52:01 -0600\r\nMessage-ID: &lt;3C52FA3F.55C92EBF@...&gt;\r\nDate: Sat, 26 Jan 2002 12:49:36 -0600\r\nX-Mailer: Mozilla 4.7 [en]C-CCK-MCD {Sony}  (Win98; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nCc: jbone@..., Paul Prescod &lt;paul@...&gt;,\n   rest-discuss@yahoogroups.com\r\nSubject: Plan 9 explanation for Alex\r\nReferences: &lt;Pine.WNT.4.43.0201251800550.1400-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\n\n&quot;S. Alexander Jacobson&quot; wrote:\n\n&gt; I&#39;m not sure what Plan9 has to do with anything,\n\nThe point of the Plan 9 anecdote is that it stands as an existance proof\ninvalidating your claim that parameter passing to a procedure cannot be modeled as\nfile IO.  Certainly almost anything --- and maybe *anything* --- that can be modeled\nas parameter passing to a procedure can be modeled as generic stream IO on a file /\nresource.\n\nPlan 9 an example of making various things --- including active &quot;data producing\nprocesses&quot; --- look like files.  The original idea of UNIX, broken by the\nintroduction of sockets, was to make everything look like a file.  Plan 9 was an\nattempt by most of the original authors of UNIX to go back and push that concept to\nthe limit, unifying everything as resources (files) in a single namespace sharing a\nsingle generic stream IO interface.\n\nI bring it up because it&#39;s a great example of how to do the *kind* of thing we&#39;re\ntalking about here, albeit in a different namespace with a different generic\ninterface.  It&#39;s a *great* case study, though;  I didn&#39;t really &quot;get&quot; REST until I\nstarted thinking about how things are modeled in Plan 9 as an analogy.  (Side note:\nin a private e-mail with Roy Fielding around the time I had my REST gestalt, I\npointed out the Plan9 analogy;  he claimed that he&#39;d wished he&#39;d been more familiar\nwith / had some citations for it a while back --- he apparently agreed with me and\nthought the analogy useful and appropriate.)\n\n&gt; but I am curious how resource synchornization\n&gt; works.  What happens when two apps try to\n&gt; write/read the /net/cs file?  Is it locked?\n\nIn Plan 9, every process has a private view of the namespace.  For example:  8 1/2,\nthe Plan 9 window system, represents the mouse as /dev/mouse, IIRC.  8 1/2 itself\nhandles synchronization and acts as the multiplexer / demultiplexer for events\ngenerated by this device;  each process sees its own private version of /dev/mouse;\na process which opens and reads this file will read a stream of only those events\ngenerated in the window in which the process is running.  In other words, mux and\nsync are generally handled in Plan 9 by whatever &quot;server&quot; presents a given service\nas a resource, in whatever manner is appropriate for that service.\n\n$0.02,\n\njb\n\n\n\n"}}