{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"tqd63Gz2N2FO53rBpe5pa04gFVo4Q2QR8SbDM1Y036ecFcsjLZJV6K2zlfJMhXouI470bCiV7l2sVxhlGc-iKBkMz7j8pA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Implementing RESTful Queue with HTTP","postDate":"1026713367","msgId":1865,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMzI2NzE3LjE2RENEMTFBQHByZXNjb2QubmV0Pg==","referencesHeader":"PEI5NTNCQkM5LjNERkMlamJvbmVAZGVlcGZpbGUuY29tPiA8MDBjODAxYzIyOWI3JGEwN2YwYzcwJDJhMDExNGFjQE5JVEVPLkNPTT4gPE9FMzN3UlBRSVdETzNoUkRUNlowMDAwMDUzM0Bob3RtYWlsLmNvbT4gPE9FNjQ2TUxyMUtYekN3NnFxRlQwMDAwYjRlZUBob3RtYWlsLmNvbT4="},"prevInTopic":1863,"nextInTopic":1866,"prevInTime":1864,"nextInTime":1866,"topicId":1853,"numMessagesInTopic":10,"msgSnippet":"... That s my favorite. Perhaps combined with WebDAV LOCK. ... I don t think this is safe. Two clients could DELETE at the same time and both of the return","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 15 Jul 2002 06:09:46 -0000\r\nReceived: (qmail 17891 invoked from network); 15 Jul 2002 06:09:46 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m7.grp.scd.yahoo.com with QMQP; 15 Jul 2002 06:09:46 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.scd.yahoo.com with SMTP; 15 Jul 2002 06:09:46 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6F69iW27596;\n\tSun, 14 Jul 2002 23:09:44 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g6F69h203802;\n\tSun, 14 Jul 2002 23:09:43 -0700\r\nMessage-ID: &lt;3D326717.16DCD11A@...&gt;\r\nDate: Sun, 14 Jul 2002 23:09:27 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;,\n   rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Implementing RESTful Queue with HTTP\r\nReferences: &lt;B953BBC9.3DFC%jbone@...&gt; &lt;00c801c229b7$a07f0c70$2a0114ac@...&gt; &lt;OE33wRPQIWDO3hRDT6Z00000533@...&gt; &lt;OE646MLr1KXzCw6qqFT0000b4ee@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\n\n&quot;S. Mike Dierken&quot; wrote:\n&gt;...\n&gt; 2 lock a message with PUT\n&gt; The listing of pending messages includes a URI for each message and a URI\n&gt; for a &#39;lock&#39; for a message. The client does a conditional PUT that succeeds\n&gt; only if the lock resource doesn&#39;t already exist (something like\n&gt; if-none-match: * or maybe if-not-modified-since)\n\nThat&#39;s my favorite. Perhaps combined with WebDAV LOCK.\n\n&gt; 3 remove message from queue with DELETE\n&gt; The listing provides URIs which represent /links/ to messages which have\n&gt; URIs independent of being part of a queue. The client removed the message\n&gt; from the queue by doing a DELETE on the URI for the &#39;message in outbox&#39;\n&gt; resource. It then is free to get the message (as is anybody else, like for\n&gt; audits, referencing, etc.).\n\nI don&#39;t think this is safe. Two clients could DELETE at the same time\nand both of the return messages could be lost. Then nobody knows who is\nresponsible for dealing with that message. A conditional PUT or POST\nallows clients to &quot;mark&quot; the message (e.g. with a UUID or signature) to\nsay: &quot;I&#39;m in charge of this.&quot; Then they can deal with it at their\nleisure. The conditionality can allow the server to ensure that there is\nno race condition.\n-- \nCome discuss XML and REST web services at:\n  Open Source Conference: July 22-26, 2002, conferences.oreillynet.com\n  Extreme Markup: Aug 4-9, 2002,  www.extrememarkup.com/extreme/\n\n"}}