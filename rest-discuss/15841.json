{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":400961812,"authorName":"Suresh Kumar","from":"Suresh Kumar &lt;sureshkk@...&gt;","profile":"suresh_blore","replyTo":"SENDER","senderId":"ICfGgfpMmntQw2Ilr18xDGaIcKGRbCg6ep9Ehhhq5bUKJcTjjZQLvaXB6r2bqOLmQaZ9_a-S86ebC6W2NMFnBobExtOc_APL","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Connectedness (HATEOAS)","postDate":"1279160687","msgId":15841,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlsTlItSEp5MEZ6bnE3ejFLaEx1cDduSDVmdE9OOXNpd2VEOUp3Y0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlrWmxTcHhWcjJpVG04MXBCYWEzTC1maGxRaS01WEoxaFVsSjZkM0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGkxam9iNit2YzFlQGVHcm91cHMuY29tPgk8QUFOTGtUaWtabFNweFZyMmlUbTgxcEJhYTNMLWZobFFpLTVYSjFoVWxKNmQzQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":15840,"nextInTopic":15843,"prevInTime":15840,"nextInTime":15842,"topicId":15834,"numMessagesInTopic":7,"msgSnippet":"So it is essentially up to me to decide on the REST API based on the client needs rather than strictly following the *Client only need to know the root URI* .","rawEmail":"Return-Path: &lt;sureshkk@...&gt;\r\nX-Sender: sureshkk@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 62620 invoked from network); 15 Jul 2010 02:24:49 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m13.grp.re1.yahoo.com with QMQP; 15 Jul 2010 02:24:49 -0000\r\nX-Received: from unknown (HELO mail-gw0-f45.google.com) (74.125.83.45)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Jul 2010 02:24:48 -0000\r\nX-Received: by gwj21 with SMTP id 21so223917gwj.18\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 14 Jul 2010 19:24:48 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.90.103.13 with SMTP id a13mr11474934agc.117.1279160687957; \n\tWed, 14 Jul 2010 19:24:47 -0700 (PDT)\r\nX-Received: by 10.90.72.11 with HTTP; Wed, 14 Jul 2010 19:24:47 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTikZlSpxVr2iTm81pBaa3L-fhlQi-5XJ1hUlJ6d3@...&gt;\r\nReferences: &lt;i1job6+vc1e@...&gt;\n\t&lt;AANLkTikZlSpxVr2iTm81pBaa3L-fhlQi-5XJ1hUlJ6d3@...&gt;\r\nDate: Thu, 15 Jul 2010 07:54:47 +0530\r\nMessage-ID: &lt;AANLkTilNR-HJy0Fznq7z1KhLup7nH5ftON9siweD9Jwc@...&gt;\r\nTo: Will Hartung &lt;willh@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016364ede866a9654048b63ceae\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Suresh Kumar &lt;sureshkk@...&gt;\r\nSubject: Re: [rest-discuss] Connectedness (HATEOAS)\r\nX-Yahoo-Group-Post: member; u=400961812; y=g054msFA7SKDoogklMKQTXs6fMPMDQ5gbQfPxRgqpwk_5wY0jF9-\r\nX-Yahoo-Profile: suresh_blore\r\n\r\n\r\n--0016364ede866a9654048b63ceae\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nSo it is essentially up to me to decide on the REST API based on the client\nneeds rather than strictly following the &quot;*Client only need to know the root\nURI*&quot;.\n\nThanks everybody for helping me understand this confusing part of REST to\nme.\n\nBest regards,\nSuresh\n\nOn Wed, Jul 14, 2010 at 11:04 PM, Will Hartung &lt;willh@...&gt; wrote:\n\n&gt; On Wed, Jul 14, 2010 at 12:17 AM, Suresh &lt;sureshkk@...&gt; wrote:\n&gt;\n&gt; &gt; It is said that in a well defined RESTful system, the clients only\n&gt; &gt; need to know the root URI or few well known URIs and the client\n&gt; &gt; shall discover all other links through these initial URIs. I do\n&gt; &gt; understand the benefits (decoupled clients) from this approach\n&gt; &gt; but the downside for me is that the client needs to discover\n&gt; &gt; the links each time it tries access something i.e given the\n&gt; &gt; following hierarchy of resources:\n&gt;\n&gt; One of the premises behind this is that the server need only COMMIT to\n&gt; supporting the entry point URIs. Ideally, these entry point URIs are\n&gt; the long term API that the server supports.\n&gt;\n&gt; Anything that&#39;s not a long term API entry point in to the service is\n&gt; more easily changed by the server. Consider the long term APIs the\n&gt; subroutine calls, while the internal links the guts of the code. It&#39;s\n&gt; abstraction method that promotes change and reduces rigidity.\n&gt;\n&gt; Obviously a single entry point is the &quot;most flexible&quot;, but it has the\n&gt; execution costs that you mentioned -- fine grained, constant\n&gt; dereferencing in order to get things accomplished.\n&gt;\n&gt; Adding more entry points, gives finer grained access to the system.\n&gt; But at the same time, you have more of an obligation to maintain those\n&gt; endpoints.\n&gt;\n&gt; So clearly one endpoint is probably too few. But having zillions\n&gt; becomes an issue as well.\n&gt;\n&gt; Obviously you can do whatever you want. You don&#39;t have to maintain any\n&gt; endpoints and can change the willy nilly if you like.\n&gt;\n&gt; But consider a real world example. Say, the DMV. Around here, you go\n&gt; to a single kiosk, tell them what you want, they give you the form or\n&gt; forms and redirect you to the proper station. As a DMV user, you only\n&gt; need to know how to fill out the forms properly, and how to hit the\n&gt; kiosk. The internal mapping of resources (clerks, capabilities, etc.)\n&gt; is handled by the DMV, and they guide you through the process (Now\n&gt; serving 123, please go to window 4).\n&gt;\n&gt; What you can&#39;t do at the DMV is walk straight up to Sally at window 3\n&gt; when you come back, just because you worked with her last time (you\n&gt; cached her URI). Sally may not be there, someone else may be at window\n&gt; 3, or the task for which window 3 may have changed (now they do\n&gt; registrations instead of licensing). Keeping the entry point at the\n&gt; greeting kiosk lets the DMV reallocate it internal resources as it\n&gt; feels is best.\n&gt;\n&gt; Now, consider going to the County Hall of Records. You walk in, go to\n&gt; the Information Kiosk, and ask  for the Birth Certificate Office, and\n&gt; the greeter sends you to the second floor, office 210. You head down\n&gt; there and proceed to work your transaction. Next time you come, you\n&gt; skip the info desk and go straight to the second floor, office 210. It\n&gt; was pretty clear that this is a long term entry point to the Hall of\n&gt; Records system that they maintain, and you get to be more efficient\n&gt; because you can skip the Information kiosk step.\n&gt;\n&gt; But this time you have a problem, and the clerk is kind and says &quot;go\n&gt; do this and call me directly&quot;, giving you the ability to go directly\n&gt; to the clerk. But, you wait to long, things happen, and 6 months later\n&gt; try to call the clerk, and he&#39;s gone. While the system was able to\n&gt; provide you with a direct link to a resource, it didn&#39;t commit that\n&gt; this was a long term interface to be maintained. Since the clerk is\n&gt; gone, you have to go back to the beginning and restart your\n&gt; transaction.\n&gt;\n&gt; So, basically, you expose as much of your system as you&#39;re comfortable\n&gt; supporting, and that you&#39;re comfortable having clients rely upon.\n&gt; Small systems get tightly coupled because the same people write both\n&gt; sides of the system, and have intimate knowledge.\n&gt;\n&gt; But when the systems audience grows larger, you have more of an\n&gt; obligation of commitment to stability and long term use. Others are\n&gt; making investments in to your system so the API can&#39;t be a shifting\n&gt; sand beneath their feet.\n&gt;\n&gt; So, think of it simply as a bureaucracy that grows over time.\n&gt;\n&gt; Regards,\n&gt;\n&gt; Will Hartung\n&gt; (willh@...)\n&gt;\n\n\n\n-- \nWhen the facts change, I change my mind. What do you do, sir?\n\r\n--0016364ede866a9654048b63ceae\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nSo it is essentially up to me to decide on the REST API based on the client=\r\n needs rather than strictly following the &quot;&lt;span class=3D&quot;Apple-style-=\r\nspan&quot; style=3D&quot;font-family: Arial, &#39;Liberation Sans&#39;, &#39;DejaVu S=\r\nans&#39;, sans-serif; font-size: 14px; border-collapse: collapse; line-heig=\r\nht: 18px; &quot;&gt;&lt;em style=3D&quot;margin-top: 0px; margin-right: 0px; margin-bottom:=\r\n 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-botto=\r\nm: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; =\r\nborder-bottom-width: 0px; border-left-width: 0px; border-style: initial; bo=\r\nrder-color: initial; font-size: 14px; vertical-align: baseline; background-=\r\nimage: initial; background-attachment: initial; background-origin: initial;=\r\n background-clip: initial; background-color: transparent; font-style: itali=\r\nc; background-position: initial initial; background-repeat: initial initial=\r\n; &quot;&gt;Client only need to know the root URI&lt;/em&gt;&lt;/span&gt;&quot;.=A0&lt;div&gt;\n&lt;br&gt;&lt;/=\r\ndiv&gt;&lt;div&gt;Thanks everybody for helping me understand this confusing part of =\r\nREST to me.=A0&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Best regards,&lt;/div&gt;&lt;div&gt;Suresh&lt;br&gt;&lt;br&gt;&lt;di=\r\nv class=3D&quot;gmail_quote&quot;&gt;On Wed, Jul 14, 2010 at 11:04 PM, Will Hartung &lt;spa=\r\nn dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:willh@...&quot;&gt;willh@...=\r\nm&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;marg=\r\nin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;&lt;div class=3D&quot;i=\r\nm&quot;&gt;On Wed, Jul 14, 2010 at 12:17 AM, Suresh &lt;&lt;a href=3D&quot;mailto:sureshkk@=\r\ngmail.com&quot;&gt;sureshkk@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n\n&lt;br&gt;\n&gt; It is said that=\r\n in a well defined RESTful system, the clients only&lt;br&gt;\n&gt; need to know t=\r\nhe root URI or few well known URIs and the client&lt;br&gt;\n&gt; shall discover a=\r\nll other links through these initial URIs. I do&lt;br&gt;\n&gt; understand the ben=\r\nefits (decoupled clients) from this approach&lt;br&gt;\n&gt; but the downside for =\r\nme is that the client needs to discover&lt;br&gt;\n&gt; the links each time it tri=\r\nes access something i.e given the&lt;br&gt;\n&gt; following hierarchy of resources=\r\n:&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;One of the premises behind this is that the server need on=\r\nly COMMIT to&lt;br&gt;\nsupporting the entry point URIs. Ideally, these entry poin=\r\nt URIs are&lt;br&gt;\nthe long term API that the server supports.&lt;br&gt;\n&lt;br&gt;\nAnythin=\r\ng that&#39;s not a long term API entry point in to the service is&lt;br&gt;\nmore =\r\neasily changed by the server. Consider the long term APIs the&lt;br&gt;\nsubroutin=\r\ne calls, while the internal links the guts of the code. It&#39;s&lt;br&gt;\nabstra=\r\nction method that promotes change and reduces rigidity.&lt;br&gt;\n&lt;br&gt;\nObviously =\r\na single entry point is the &quot;most flexible&quot;, but it has the&lt;br&gt;\ne=\r\nxecution costs that you mentioned -- fine grained, constant&lt;br&gt;\ndereferenci=\r\nng in order to get things accomplished.&lt;br&gt;\n&lt;br&gt;\nAdding more entry points, =\r\ngives finer grained access to the system.&lt;br&gt;\nBut at the same time, you hav=\r\ne more of an obligation to maintain those&lt;br&gt;\nendpoints.&lt;br&gt;\n&lt;br&gt;\nSo clearl=\r\ny one endpoint is probably too few. But having zillions&lt;br&gt;\nbecomes an issu=\r\ne as well.&lt;br&gt;\n&lt;br&gt;\nObviously you can do whatever you want. You don&#39;t h=\r\nave to maintain any&lt;br&gt;\nendpoints and can change the willy nilly if you lik=\r\ne.&lt;br&gt;\n&lt;br&gt;\nBut consider a real world example. Say, the DMV. Around here, y=\r\nou go&lt;br&gt;\nto a single kiosk, tell them what you want, they give you the for=\r\nm or&lt;br&gt;\nforms and redirect you to the proper station. As a DMV user, you o=\r\nnly&lt;br&gt;\nneed to know how to fill out the forms properly, and how to hit the=\r\n&lt;br&gt;\nkiosk. The internal mapping of resources (clerks, capabilities, etc.)&lt;=\r\nbr&gt;\nis handled by the DMV, and they guide you through the process (Now&lt;br&gt;\n=\r\nserving 123, please go to window 4).&lt;br&gt;\n&lt;br&gt;\nWhat you can&#39;t do at the =\r\nDMV is walk straight up to Sally at window 3&lt;br&gt;\nwhen you come back, just b=\r\necause you worked with her last time (you&lt;br&gt;\ncached her URI). Sally may no=\r\nt be there, someone else may be at window&lt;br&gt;\n3, or the task for which wind=\r\now 3 may have changed (now they do&lt;br&gt;\nregistrations instead of licensing).=\r\n Keeping the entry point at the&lt;br&gt;\ngreeting kiosk lets the DMV reallocate =\r\nit internal resources as it&lt;br&gt;\nfeels is best.&lt;br&gt;\n&lt;br&gt;\nNow, consider going=\r\n to the County Hall of Records. You walk in, go to&lt;br&gt;\nthe Information Kios=\r\nk, and ask =A0for the Birth Certificate Office, and&lt;br&gt;\nthe greeter sends y=\r\nou to the second floor, office 210. You head down&lt;br&gt;\nthere and proceed to =\r\nwork your transaction. Next time you come, you&lt;br&gt;\nskip the info desk and g=\r\no straight to the second floor, office 210. It&lt;br&gt;\nwas pretty clear that th=\r\nis is a long term entry point to the Hall of&lt;br&gt;\nRecords system that they m=\r\naintain, and you get to be more efficient&lt;br&gt;\nbecause you can skip the Info=\r\nrmation kiosk step.&lt;br&gt;\n&lt;br&gt;\nBut this time you have a problem, and the cler=\r\nk is kind and says &quot;go&lt;br&gt;\ndo this and call me directly&quot;, giving =\r\nyou the ability to go directly&lt;br&gt;\nto the clerk. But, you wait to long, thi=\r\nngs happen, and 6 months later&lt;br&gt;\ntry to call the clerk, and he&#39;s gone=\r\n. While the system was able to&lt;br&gt;\nprovide you with a direct link to a reso=\r\nurce, it didn&#39;t commit that&lt;br&gt;\nthis was a long term interface to be ma=\r\nintained. Since the clerk is&lt;br&gt;\ngone, you have to go back to the beginning=\r\n and restart your&lt;br&gt;\ntransaction.&lt;br&gt;\n&lt;br&gt;\nSo, basically, you expose as mu=\r\nch of your system as you&#39;re comfortable&lt;br&gt;\nsupporting, and that you&#3=\r\n9;re comfortable having clients rely upon.&lt;br&gt;\nSmall systems get tightly co=\r\nupled because the same people write both&lt;br&gt;\nsides of the system, and have =\r\nintimate knowledge.&lt;br&gt;\n&lt;br&gt;\nBut when the systems audience grows larger, yo=\r\nu have more of an&lt;br&gt;\nobligation of commitment to stability and long term u=\r\nse. Others are&lt;br&gt;\nmaking investments in to your system so the API can&#39;=\r\nt be a shifting&lt;br&gt;\nsand beneath their feet.&lt;br&gt;\n&lt;br&gt;\nSo, think of it simpl=\r\ny as a bureaucracy that grows over time.&lt;br&gt;\n&lt;br&gt;\nRegards,&lt;br&gt;\n&lt;font color=\r\n=3D&quot;#888888&quot;&gt;&lt;br&gt;\nWill Hartung&lt;br&gt;\n(&lt;a href=3D&quot;mailto:willh@...&quot;&gt;=\r\nwillh@...&lt;/a&gt;)&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br clear=3D&quot;all=\r\n&quot;&gt;&lt;br&gt;-- &lt;br&gt;When the facts change, I change my mind. What do you do, sir?&lt;=\r\nbr&gt;\n&lt;/div&gt;&lt;/div&gt;\n\r\n--0016364ede866a9654048b63ceae--\r\n\n"}}