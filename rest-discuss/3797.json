{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4849001,"authorName":"Alex Jacobson","from":"Alex Jacobson &lt;alex@...&gt;","profile":"shop2it","replyTo":"SENDER","senderId":"Bniv8sw_ocPMkpU1_tmZvM0vz4WmENILDzqGW5ijX2Y4ut2ypcT66iVBJzbXd0bBBlz81kTllQr8-O5Q3UpT70N6","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Pure-REST Wiki experiment","postDate":"1059413246","msgId":3797,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE2Mjg3NTkxNzEuMTA1OTM5ODg0NkBsb2NhbGhvc3Q+","inReplyToHeader":"PGJnMDdwNCthZWg5QGVHcm91cHMuY29tPg==","referencesHeader":"IDxiZzA3cDQrYWVoOUBlR3JvdXBzLmNvbT4="},"prevInTopic":3794,"nextInTopic":3798,"prevInTime":3796,"nextInTime":3798,"topicId":3793,"numMessagesInTopic":23,"msgSnippet":"Very cool.  Its too bad it works only in IE. Rather than implementing rending in javascript, you could use conneg on the server to differentiate between","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 39852 invoked from network); 28 Jul 2003 18:05:40 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m8.grp.scd.yahoo.com with QMQP; 28 Jul 2003 18:05:40 -0000\r\nReceived: from unknown (HELO mailgate.vo.com) (208.45.6.97)\n  by mta2.grp.scd.yahoo.com with SMTP; 28 Jul 2003 18:05:40 -0000\r\nReceived: from [10.255.218.171] (m6a8d36d0.tmodns.net [208.54.141.106])\n\t(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))\n\t(No client certificate requested)\n\tby mailgate.vo.com (Postfix) with ESMTP\n\tid 7204189D4D; Mon, 28 Jul 2003 14:05:39 -0400 (EDT)\r\nDate: Mon, 28 Jul 2003 13:27:26 -0400\r\nTo: justin_t_sampson &lt;justin.sampson@...&gt;,\n\trest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Pure-REST Wiki experiment\r\nMessage-ID: &lt;1628759171.1059398846@localhost&gt;\r\nIn-Reply-To: &lt;bg07p4+aeh9@...&gt;\r\nReferences:  &lt;bg07p4+aeh9@...&gt;\r\nX-Mailer: Mulberry/3.0.3 (Win32)\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-From: Alex Jacobson &lt;alex@...&gt;\r\nFrom: Alex Jacobson &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: member; u=4849001\r\nX-Yahoo-Profile: shop2it\r\n\r\nVery cool.  Its too bad it works only in IE.\n\nRather than implementing rending in javascript, you could use conneg on the \nserver to differentiate between retrieving rendered pages and the source. A \nGET with a &quot;accept: text/plain&quot; would retrieve the source.  A GET with an \n&quot;accept: text/html&quot; would retrieve the rendered page.\n\nQuestion for the group: Suppose that the wiki also rendered into ASCII.  Is \nthere some convention for retrieving the source rather than the output \nbeyond a slight hack involving coercing them to have different \ncontent-types?\n\n-Alex-\n\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n--On Sunday, July 27, 2003 9:59 AM +0000 justin_t_sampson \n&lt;justin.sampson@...&gt; wrote:\n\n&gt; Trying to reconcile some of the ideas I&#39;ve been reading here,\n&gt; last night I threw together the beginnings of a pure-REST Wiki.\n&gt; The client and server are both included at the end of this\n&gt; message.\n&gt;\n&gt; The resources are Wiki topics, with URIs like &lt;/wiki/HomePage&gt;,\n&gt; with GET returning the Wiki-text representation of a topic, PUT\n&gt; supplying a new Wiki-text representation to create or modify a\n&gt; topic, and DELETE deleting a topic. POST is not accepted for any\n&gt; resource in this application. This is all implemented by a single\n&gt; Java servlet.\n&gt;\n&gt; The user interface is implemented completely on the client side\n&gt; using HTML and JavaScript. It uses the XmlHttpRequest object to\n&gt; make requests to the server. User interaction is done through\n&gt; form elements, but the form never gets submitted anywhere; it&#39;s\n&gt; just accessed by the JavaScript. The GET, PUT, and DELETE\n&gt; commands are shown as buttons, and the name of the current topic\n&gt; is shown in an editable text field. All the commands construct\n&gt; the URI from the topic name. GET displays the Wiki-text of the\n&gt; topic in a large textarea; and PUT transfers the contents of that\n&gt; textarea back to the server, allowing editing of a topic\n&gt; retrieved by GET. PUT and DELETE both clear the contents of that\n&gt; textarea. The status code of each response is displayed in a\n&gt; small non-editable text field.\n&gt;\n&gt; What I really had in mind was to implement the HTML rendering of\n&gt; the Wiki text in the JavaScript client as well, including links\n&gt; between topics as JavaScript onClick handlers, but I didn&#39;t get\n&gt; that far yet.\n&gt;\n&gt; Some issues:\n&gt;\n&gt; 1. IE caches the GET responses, which is kind of cool. However,\n&gt; it doesn&#39;t invalidate the cache after a PUT or DELETE! So doing a\n&gt; GET, editing the text, doing a PUT, and then doing a GET again\n&gt; gives the original text. I had to turn off caching in IE while\n&gt; playing with it; I guess the GET responses could carry a no-cache\n&gt; directive instead...\n&gt;\n&gt; 2. At first I returned 204 from PUT if the resource already\n&gt; existed (201 otherwise), but it seemed that the JavaScript send()\n&gt; call was never returning. Simply changing it to 205 avoided this\n&gt; problem.\n&gt;\n&gt; 3. As it is, the user interface is really a browser-in-the-\n&gt; browser. It has its own location bar, and manages navigation\n&gt; among Wiki topics entirely within one browser &quot;page&quot;.  That\n&gt; implies a couple of problems -- for one, the browser&#39;s history\n&gt; buttons don&#39;t work.\n&gt;\n&gt; 4. Every topic has a URI, but if that URI is typed directly in\n&gt; the browser, the user will be able to view the Wiki-text\n&gt; representation of the topic, but won&#39;t see any of the UI.\n&gt;\n&gt; Altogether a successful experiment, demonstrating how to deploy a\n&gt; potentially-fancy JavaScript-driven UI for a pure-REST\n&gt; application. I wonder how to resolve the 4 issues above...\n&gt;\n&gt; Any reactions?\n&gt;\n&gt; Justin Sampson\n&gt;\n&gt; P.S. Here&#39;s the code:\n&gt;\n&gt; --- client.html\n&gt; &lt;HTML&gt;\n&gt;     &lt;HEAD&gt;\n&gt;         &lt;TITLE&gt;REST Wiki&lt;/TITLE&gt;\n&gt;         &lt;DEFANGED_SCRIPT&gt;\n&gt;             function wikiGet()\n&gt;             {\n&gt;                 document.client.status.value = &quot;---&quot;;\n&gt;                 var http = new ActiveXObject(&quot;MSXML2.XMLHTTP&quot;);\n&gt;                 var page = document.client.page.value;\n&gt;                 var url = &quot;http://localhost:8080/wiki/&quot; + page;\n&gt;                 http.open(&quot;GET&quot;, url, false);\n&gt;                 http.send(null);\n&gt;                 if (http.status == 200)\n&gt;                 {\n&gt;                     document.client.content.value =\n&gt;                         http.responseText;\n&gt;                 }\n&gt;                 else\n&gt;                 {\n&gt;                     document.client.content.value = &quot;&quot;;\n&gt;                 }\n&gt;                 document.client.status.value = http.status;\n&gt;             }\n&gt;             function wikiPut()\n&gt;             {\n&gt;                 document.client.status.value = &quot;---&quot;;\n&gt;                 var http = new ActiveXObject(&quot;MSXML2.XMLHTTP&quot;);\n&gt;                 var page = document.client.page.value;\n&gt;                 var url = &quot;http://localhost:8080/wiki/&quot; + page;\n&gt;                 http.open(&quot;PUT&quot;, url, false);\n&gt;                 http.setRequestHeader(&quot;Content-Type&quot;,\n&gt;                     &quot;text/x-wiki; charset=UTF-8&quot;);\n&gt;                 http.send(document.client.content.value);\n&gt;                 document.client.content.value = &quot;&quot;;\n&gt;                 document.client.status.value = http.status;\n&gt;             }\n&gt;             function wikiDelete()\n&gt;             {\n&gt;                 document.client.status.value = &quot;---&quot;;\n&gt;                 var http = new ActiveXObject(&quot;MSXML2.XMLHTTP&quot;);\n&gt;                 var page = document.client.page.value;\n&gt;                 var url = &quot;http://localhost:8080/wiki/&quot; + page;\n&gt;                 http.open(&quot;DELETE&quot;, url, false);\n&gt;                 http.send(null);\n&gt;                 document.client.content.value = &quot;&quot;;\n&gt;                 document.client.status.value = http.status;\n&gt;             }\n&gt;         &lt;/SCRIPT&gt;\n&gt;     &lt;/HEAD&gt;\n&gt;     &lt;BODY DEFANGED_OnLoad=&quot;wikiGet()&quot;&gt;\n&gt;         &lt;FORM name=&quot;client&quot;&gt;\n&gt;             &lt;INPUT type=&quot;text&quot; name=&quot;page&quot; value=&quot;HomePage&quot;&gt;\n&gt;             &lt;INPUT type=&quot;button&quot; value=&quot;Get&quot; DEFANGED_OnClick=&quot;wikiGet()&quot;&gt;\n&gt;             &lt;INPUT type=&quot;button&quot; value=&quot;Put&quot; DEFANGED_OnClick=&quot;wikiPut()&quot;&gt;\n&gt;             &lt;INPUT type=&quot;button&quot; value=&quot;Delete&quot;\n&gt; DEFANGED_OnClick=&quot;wikiDelete()&quot;&gt;\n&gt;             &lt;INPUT type=&quot;text&quot; name=&quot;status&quot; disabled&gt;\n&gt;             &lt;BR&gt;\n&gt;             &lt;TEXTAREA name=&quot;content&quot; cols=&quot;80&quot; rows=&quot;25&quot;&gt;\n&gt;             &lt;/TEXTAREA&gt;\n&gt;         &lt;/FORM&gt;\n&gt;     &lt;/BODY&gt;\n&gt; &lt;/HTML&gt;\n&gt;\n&gt; --- RestWikiServlet.java\n&gt; package restwiki;\n&gt;\n&gt; import java.io.File;\n&gt; import java.io.FileInputStream;\n&gt; import java.io.FileOutputStream;\n&gt; import java.io.IOException;\n&gt; import java.io.InputStream;\n&gt; import java.io.OutputStream;\n&gt;\n&gt; import javax.servlet.ServletException;\n&gt; import javax.servlet.http.HttpServlet;\n&gt; import javax.servlet.http.HttpServletRequest;\n&gt; import javax.servlet.http.HttpServletResponse;\n&gt;\n&gt; public class RestWikiServlet extends HttpServlet\n&gt; {\n&gt;\n&gt;     private File root;\n&gt;\n&gt;     public void init() throws ServletException\n&gt;     {\n&gt;         root = new File(getInitParameter(&quot;root&quot;));\n&gt;     }\n&gt;\n&gt;     private boolean validWikiName(String wikiName)\n&gt;     {\n&gt;         return wikiName != null\n&gt;             && wikiName.matches(&quot;([A-Z][a-z]+){2,}&quot;);\n&gt;     }\n&gt;\n&gt;     private File pageFile(String wikiName)\n&gt;     {\n&gt;         return new File(root, wikiName);\n&gt;     }\n&gt;\n&gt;     private String wikiName(HttpServletRequest request)\n&gt;     {\n&gt;         String pathInfo = request.getPathInfo();\n&gt;\n&gt;         if (pathInfo != null && pathInfo.startsWith(&quot;/&quot;))\n&gt;         {\n&gt;             return pathInfo.substring(1);\n&gt;         }\n&gt;         else\n&gt;         {\n&gt;             return pathInfo;\n&gt;         }\n&gt;     }\n&gt;\n&gt;     protected synchronized void doGet(\n&gt;         HttpServletRequest request,\n&gt;         HttpServletResponse response)\n&gt;         throws ServletException, IOException\n&gt;     {\n&gt;         String wikiName = wikiName(request);\n&gt;\n&gt;         if (!validWikiName(wikiName))\n&gt;         {\n&gt;             response.setStatus(404);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         File pageFile = pageFile(wikiName);\n&gt;\n&gt;         if (!pageFile.exists())\n&gt;         {\n&gt;             response.setStatus(404);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         InputStream input = new FileInputStream(pageFile);\n&gt;         try\n&gt;         {\n&gt;             response.setContentType(\n&gt;                 &quot;text/x-wiki; charset=UTF-8&quot;);\n&gt;             response.setStatus(200);\n&gt;             OutputStream output = response.getOutputStream();\n&gt;             byte[] buffer = new byte[1024];\n&gt;             int n;\n&gt;             while ((n = input.read(buffer)) != -1)\n&gt;             {\n&gt;                 output.write(buffer, 0, n);\n&gt;             }\n&gt;         }\n&gt;         finally\n&gt;         {\n&gt;             input.close();\n&gt;         }\n&gt;     }\n&gt;\n&gt;     protected synchronized void doPut(\n&gt;         HttpServletRequest request,\n&gt;         HttpServletResponse response)\n&gt;         throws ServletException, IOException\n&gt;     {\n&gt;         String wikiName = wikiName(request);\n&gt;\n&gt;         if (!validWikiName(wikiName))\n&gt;         {\n&gt;             response.setStatus(403);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         if (!&quot;text/x-wiki; charset=UTF-8&quot;.equals(\n&gt;             request.getContentType()))\n&gt;         {\n&gt;             response.setStatus(415);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         File pageFile = pageFile(wikiName);\n&gt;\n&gt;         boolean created = !pageFile.exists();\n&gt;\n&gt;         OutputStream output = new FileOutputStream(pageFile);\n&gt;         try\n&gt;         {\n&gt;             InputStream input = request.getInputStream();\n&gt;             byte[] buffer = new byte[1024];\n&gt;             int n;\n&gt;             while ((n = input.read(buffer)) != -1)\n&gt;             {\n&gt;                 output.write(buffer, 0, n);\n&gt;             }\n&gt;             input.close();\n&gt;         }\n&gt;         finally\n&gt;         {\n&gt;             output.close();\n&gt;         }\n&gt;\n&gt;         response.setStatus(created ? 201 : 205);\n&gt;     }\n&gt;\n&gt;     protected synchronized void doDelete(\n&gt;         HttpServletRequest request,\n&gt;         HttpServletResponse response)\n&gt;         throws ServletException, IOException\n&gt;     {\n&gt;         String wikiName = wikiName(request);\n&gt;\n&gt;         if (!validWikiName(wikiName))\n&gt;         {\n&gt;             response.setStatus(404);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         File pageFile = pageFile(wikiName);\n&gt;\n&gt;         if (!pageFile.exists())\n&gt;         {\n&gt;             response.setStatus(404);\n&gt;             return;\n&gt;         }\n&gt;\n&gt;         response.setStatus(205);\n&gt;         pageFile.delete();\n&gt;     }\n&gt;\n&gt; }\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; rest-discuss-unsubscribe@yahoogroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n\n\n\n\n"}}