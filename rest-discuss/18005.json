{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"YLQpR8cCNEpRy7pdHaUY0762A_sqBSqdo76u6-X3tdJJizt2k8kBDIwkeFRf44pdKPG0q60vXXnN29mMs-w0wWUfCAVdAIU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] weighting and boundaries of evolvability and loose coupling?","postDate":"1322880136","msgId":18005,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBUFdfOG00clVtN1k3NndMRW1ocjE4NXJtY282ZThiRGtHZ21GeUFqeFJYalh2U1RNQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDRFRDk4OTg3LjMwMjA1MDJAYmVya2VsZXkuZWR1Pg==","referencesHeader":"PGpiYWR1MStnaHJwQGVHcm91cHMuY29tPgk8Q0FQV184bTQySitQbUZXZnJmcTBHU2ZzTWs0X250Q0g2TUVrMXpXRGJWY3pPTWpXeldnQG1haWwuZ21haWwuY29tPgk8NEVEOTdBQjAuNzA5MDIwNUBiZXJrZWxleS5lZHU+CTxDQVBXXzhtNWJmWVV5QkVpOGNZOVN0NmVOSlNDPUFhTVRyUXd1X1BKNTZaVytyMkFLLWdAbWFpbC5nbWFpbC5jb20+CTw0RUQ5ODBDOS42MDcwOEBiZXJrZWxleS5lZHU+CTxDQVBXXzhtN3FRa2ZxWGZHYS1fRjlzZmZobzV2cnVmUmhRSk1xU1MtSlFnajlBcVg3endAbWFpbC5nbWFpbC5jb20+CTw0RUQ5ODk4Ny4zMDIwNTAyQGJlcmtlbGV5LmVkdT4="},"prevInTopic":18004,"nextInTopic":18006,"prevInTime":18004,"nextInTime":18006,"topicId":17994,"numMessagesInTopic":15,"msgSnippet":"Erik: to-date, my approach for handling modifying media type designs (over time) has been as follows: - Extend (compatible w/ existing implementations) no","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 45587 invoked from network); 3 Dec 2011 02:42:16 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m16.grp.sp2.yahoo.com with QMQP; 3 Dec 2011 02:42:16 -0000\r\nX-Received: from unknown (HELO mail-pz0-f51.google.com) (209.85.210.51)\n  by mta5.grp.sp2.yahoo.com with SMTP; 3 Dec 2011 02:42:16 -0000\r\nX-Received: by dadi2 with SMTP id i2so2114960dad.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 02 Dec 2011 18:42:16 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.68.36.1 with SMTP id m1mr1985585pbj.3.1322880136317; Fri, 02\n Dec 2011 18:42:16 -0800 (PST)\r\nX-Received: by 10.142.196.20 with HTTP; Fri, 2 Dec 2011 18:42:16 -0800 (PST)\r\nIn-Reply-To: &lt;4ED98987.3020502@...&gt;\r\nReferences: &lt;jbadu1+ghrp@...&gt;\n\t&lt;CAPW_8m42J+PmFWfrfq0GSfsMk4_ntCH6MEk1zWDbVczOMjWzWg@...&gt;\n\t&lt;4ED97AB0.7090205@...&gt;\n\t&lt;CAPW_8m5bfYUyBEi8cY9St6eNJSC=AaMTrQwu_PJ56ZW+r2AK-g@...&gt;\n\t&lt;4ED980C9.60708@...&gt;\n\t&lt;CAPW_8m7qQkfqXfGa-_F9sffho5vrufRhQJMqSS-JQgj9AqX7zw@...&gt;\n\t&lt;4ED98987.3020502@...&gt;\r\nDate: Fri, 2 Dec 2011 21:42:16 -0500\r\nX-Google-Sender-Auth: XJgQksp_5CeEEKNT43s7vQbDdXQ\r\nMessage-ID: &lt;CAPW_8m4rUm7Y76wLEmhr185rmco6e8bDkGgmFyAjxRXjXvSTMA@...&gt;\r\nTo: Erik Wilde &lt;dret@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Jakob Strauch &lt;jakob.strauch@...&gt;\r\nContent-Type: multipart/alternative; boundary=bcaec51f96999b0c5204b32708f6\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] weighting and boundaries of evolvability and loose coupling?\r\nX-Yahoo-Group-Post: member; u=69164307; y=4pogHeJCWZyc248599Tp3PekakleRQuE5DukUmG00VO_\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--bcaec51f96999b0c5204b32708f6\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nErik:\n\nto-date, my approach for handling modifying media type designs (over time)\nhas been as follows:\n\n- Extend (compatible w/ existing implementations)\nno changes to existing features (appearance, required/optional, processing,\nor meaning)\nall new features are optional\n* optionally add &quot;schema&quot; identifiers to show which extension(s) you are\nusing\n\n-Version (incompatible w/ existing implementations)\ncan change existing features\ncan add new required elements\n* required to use new media type identifier\n\nthis has allowed me a great deal of flexibility and stability on projects\nthat have evolved over several years.\n\nmca\nhttp://amundsen.com/blog/\nhttp://twitter.com@mamund\nhttp://mamund.com/foaf.rdf#me\n\n\n\n\nOn Fri, Dec 2, 2011 at 21:29, Erik Wilde &lt;dret@...&gt; wrote:\n\n&gt; hello again...\n&gt;\n&gt;\n&gt; On 2011-12-02 18:00 , mike amundsen wrote:\n&gt;\n&gt;&gt; Ok, i think i understand your POV. you&#39;re saying that a media type\n&gt;&gt; designer can, for example, &quot;bake in&quot; a design element (which all\n&gt;&gt; clients/servers must support) that signals a &quot;MustUnderstand&quot; rule.\n&gt;&gt;\n&gt;\n&gt; as a corollary to what i just said: i was thinking about, let&#39;s say in\n&gt; XML/XSD terms, a global attribute you can put on elements to signal that.\n&gt; but oftentimes, a version attribute somewhere does this for all of the\n&gt; representation, effectively disallowing a client to continue to proceed if\n&gt; it encounters an unknown version. the big disadvantage of this\n&gt; &quot;document-level attribute&quot; is that it disallows the use of *everything*,\n&gt; including old stuff that still might be safe to use for the client. which\n&gt; is the reason why version attributes often are a bit too disruptive in a\n&gt; loosely coupled scenario.\n&gt;\n&gt; another approach to this would be to remove this from representation\n&gt; design altogether and use relations to communicate extensions, something\n&gt; that has been discussed by mark nottingham in his recent blog post\n&gt; http://www.mnot.net/blog/2011/**10/25/web_api_versioning_**smackdown&lt;http://www.mnot.net/blog/2011/10/25/web_api_versioning_smackdown&gt;. you could possibly extend his method to also qualify those links as being\n&gt; mandatory or not. the link-based extension mark proposes is an interesting\n&gt; approach, but doesn&#39;t work too well in cases where extensions need to be\n&gt; put in certain places in existing representations (think documents instead\n&gt; of data), instead of just being a bag of additional data clients can get\n&gt; to, if they want to get it.\n&gt;\n&gt;\n&gt; cheers,\n&gt;\n&gt; dret.\n&gt;\n&gt; --\n&gt; erik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n&gt;           | UC Berkeley  -  School of Information (ISchool) |\n&gt;           | http://dret.net/netdret http://twitter.com/dret |\n&gt;\n\r\n--bcaec51f96999b0c5204b32708f6\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nErik:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;to-date, my approach for handling modifying media =\r\ntype designs (over time) has been as follows:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Ex=\r\ntend (compatible w/ existing implementations)&lt;/div&gt;&lt;div&gt;no changes to exist=\r\ning features (appearance, required/optional, processing, or meaning)&lt;/div&gt;\n=\r\n&lt;div&gt;all new features are optional&lt;/div&gt;&lt;div&gt;* optionally add &quot;schema&=\r\nquot;=A0identifiers=A0to show which extension(s) you are using&lt;/div&gt;&lt;div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;&lt;div&gt;-Version (incompatible w/ existing implementations)&lt;/div&gt;&lt;div&gt;=\r\n\ncan change existing features&lt;/div&gt;&lt;div&gt;can add new required elements&lt;/div&gt;=\r\n&lt;div&gt;* required to use new media type identifier&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;t=\r\nhis has allowed me a great deal of flexibility and stability on projects th=\r\nat have evolved over several years.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;mca&lt;br&gt;&lt;a hre=\r\nf=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/=\r\n&lt;/a&gt;&lt;br&gt;&lt;a href=3D&quot;http://twitter.com&quot; target=3D&quot;_blank&quot;&gt;http://twitter.com=\r\n&lt;/a&gt;@mamund&lt;br&gt;&lt;a href=3D&quot;http://mamund.com/foaf.rdf#me&quot; target=3D&quot;_blank&quot;&gt;=\r\nhttp://mamund.com/foaf.rdf#me&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_=\r\nquote&quot;&gt;On Fri, Dec 2, 2011 at 21:29, Erik Wilde &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a hr=\r\nef=3D&quot;mailto:dret@...&quot;&gt;dret@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;=\r\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1p=\r\nx #ccc solid;padding-left:1ex;&quot;&gt;\nhello again...&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n=\r\nOn 2011-12-02 18:00 , mike amundsen wrote:&lt;br&gt;\n&lt;/div&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;blo=\r\nckquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #c=\r\ncc solid;padding-left:1ex&quot;&gt;\nOk, i think i understand your POV. you&#39;re s=\r\naying that a media type&lt;br&gt;\ndesigner can, for example, &quot;bake in&quot; =\r\na design element (which all&lt;br&gt;\nclients/servers must support) that signals =\r\na &quot;MustUnderstand&quot; rule.&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nas a coroll=\r\nary to what i just said: i was thinking about, let&#39;s say in XML/XSD ter=\r\nms, a global attribute you can put on elements to signal that. but oftentim=\r\nes, a version attribute somewhere does this for all of the representation, =\r\neffectively disallowing a client to continue to proceed if it encounters an=\r\n unknown version. the big disadvantage of this &quot;document-level attribu=\r\nte&quot; is that it disallows the use of *everything*, including old stuff =\r\nthat still might be safe to use for the client. which is the reason why ver=\r\nsion attributes often are a bit too disruptive in a loosely coupled scenari=\r\no.&lt;br&gt;\n\n&lt;br&gt;\nanother approach to this would be to remove this from represen=\r\ntation design altogether and use relations to communicate extensions, somet=\r\nhing that has been discussed by mark nottingham in his recent blog post &lt;a =\r\nhref=3D&quot;http://www.mnot.net/blog/2011/10/25/web_api_versioning_smackdown&quot; t=\r\narget=3D&quot;_blank&quot;&gt;http://www.mnot.net/blog/2011/&lt;u&gt;&lt;/u&gt;10/25/web_api_version=\r\ning_&lt;u&gt;&lt;/u&gt;smackdown&lt;/a&gt; . you could possibly extend his method to also qua=\r\nlify those links as being mandatory or not. the link-based extension mark p=\r\nroposes is an interesting approach, but doesn&#39;t work too well in cases =\r\nwhere extensions need to be put in certain places in existing representatio=\r\nns (think documents instead of data), instead of just being a bag of additi=\r\nonal data clients can get to, if they want to get it.&lt;div class=3D&quot;HOEnZb&quot;&gt;=\r\n\n&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;\ncheers,&lt;br&gt;\n&lt;br&gt;\ndret.&lt;br&gt;\n&lt;br&gt;\n-- &lt;br&gt;\nerik w=\r\nilde | mailto:&lt;a href=3D&quot;mailto:dret@...&quot; target=3D&quot;_blank&quot;&gt;dret@b=\r\nerkeley.edu&lt;/a&gt; =A0- =A0tel:&lt;a href=3D&quot;tel:%2B1-510-2061079&quot; value=3D&quot;+1510=\r\n2061079&quot; target=3D&quot;_blank&quot;&gt;+1-510-2061079&lt;/a&gt; |&lt;br&gt;\n =A0 =A0 =A0 =A0 =A0 | =\r\nUC Berkeley =A0- =A0School of Information (ISchool) |&lt;br&gt;\n =A0 =A0 =A0 =A0 =\r\n=A0 | &lt;a href=3D&quot;http://dret.net/netdret&quot; target=3D&quot;_blank&quot;&gt;http://dret.net=\r\n/netdret&lt;/a&gt; &lt;a href=3D&quot;http://twitter.com/dret&quot; target=3D&quot;_blank&quot;&gt;http://t=\r\nwitter.com/dret&lt;/a&gt; |&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--bcaec51f96999b0c5204b32708f6--\r\n\n"}}