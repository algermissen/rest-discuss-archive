{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"vV_z9NqwC9qtjk4FFZ3784kTByY0blcwMJp-miNLPekXcOabAe6AVStVFvQQp7p9Ahpmt3jPOOhFp44qTITuXjj99Bh3PXGxWGVkzek","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)","postDate":"1043263713","msgId":3306,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjAwMWMyYzI0YyQ3M2VkMjZhMCRhODAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDMwMTIxMTUzODA5MC4xMTg0LTEwMDAwMEBmYW5hdGljPiA8MDAzMDAxYzJjMjJkJGIwYTg2Y2UwJGE4MDBhOGMwQFNlYWlydGhBMzE+"},"prevInTopic":3300,"nextInTopic":3307,"prevInTime":3305,"nextInTime":3307,"topicId":3300,"numMessagesInTopic":7,"msgSnippet":"Another feature that would be good would be to have a new HTTP response header called options , which would give a comma-separated list of content-types a","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 22 Jan 2003 19:28:35 -0000\r\nReceived: (qmail 76121 invoked from network); 22 Jan 2003 19:28:35 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m4.grp.scd.yahoo.com with QMQP; 22 Jan 2003 19:28:35 -0000\r\nReceived: from unknown (HELO lakemtao03.cox.net) (68.1.17.242)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Jan 2003 19:28:34 -0000\r\nReceived: from SeairthA31 ([68.96.198.43]) by lakemtao03.cox.net\n          (InterMail vM.5.01.04.05 201-253-122-122-105-20011231) with SMTP\n          id &lt;20030122192835.CQKQ8666.lakemtao03.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Wed, 22 Jan 2003 14:28:35 -0500\r\nMessage-ID: &lt;006001c2c24c$73ed26a0$a800a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;Pine.WNT.4.43.0301211538090.1184-100000@fanatic&gt; &lt;003001c2c22d$b0a86ce0$a800a8c0@SeairthA31&gt;\r\nSubject: Re: OPTIONS response (was Re: [rest-discuss] REST Resource Discovery)\r\nDate: Wed, 22 Jan 2003 14:28:33 -0500\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1106\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nAnother feature that would be good would be to have a new HTTP response\nheader called &quot;options&quot;, which would give a comma-separated list of\ncontent-types a given URI can return for an OPTIONS request.  For instance,\nsuppose you did a GET on a URI.  You get back a response, including the\nfollowing line:\n\noptions: text/http-request-options, application/rdf+xml,\napplication/myformat+xml, text/html\n\n(note: &quot;text/http-request-options&quot; is a bogus mime type for my format\ndescribed below.)\n\nThis would tell the client that it could issue an OPTIONS request with some\nor all of the types and the server would return the appropriate one\n(presumably the first one if it was from that list).\n\nThis would also allow Google to do some neat stuff.  First it would GET the\nresource.  Once received, it would see that there were options available for\nthat resource.  It could then turn around and selectively query with OPTIONS\nto find out all sorts of useful information (such as the details of a web\nservice interface).  Without the header, Google wouldn&#39;t even bother, even\nif there were OPTIONS to query...\n\nThoughts?\n\n---\nSeairth Jacobs\nseairth@...\n\n\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\n&gt;\n&gt; verb request-header:value\n&gt;\n&gt; where:\n&gt;\n&gt; verb: GET, PUT, POST, etc., and &quot;*&quot; which means any verb (for which the\n&gt; following request-header is allowed)\n&gt; request-header: these are headers that it recognizes (e.g. content-type,\n&gt; user-agent, etc.)\n&gt; value: indicates an allowable value (following the same rules for the\nactual\n&gt; request-header).\n&gt;\n&gt; Any combination that is not explicitly defined means that the resource\n&gt; doesn&#39;t care about those headers.\n&gt;\n&gt; So, suppose you encountered a response like:\n&gt;\n&gt; PUT content-type:text/html\n&gt; * content-type: application/xml+rss\n&gt; GET user-agent:Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\n&gt;\n&gt;\n&gt; In this case, this is saying that PUT only allows a content-type of\n&gt; text/html or application/xml+rss, while all other verbs (in this case\nPOST)\n&gt; allow only application/xml+rss.  Also, the resource is only GETable by IE6\n&gt; (or a client that says it&#39;s IE6).  Note that no other combination is\ndefined\n&gt; for user-agent, so it implies that any client can issue a POST, PUT, etc.\n&gt;\n&gt; It might even do to extend this format slightly to allow the server to\n&gt; explicitly indicate that it understands a given header name, thereby\n&gt; allowing new clients to query a server to see if the server can handle the\n&gt; added features of the client.  I&#39;m not sure how this format would be.\nMaybe\n&gt; just leave the value out of the above string.  Are there any existing\n&gt; headers where an empty string is a valid value?  If so, we could possibly\n&gt; leave the colon off.  For instance, suppose there was a new request header\n&gt; called &quot;my-feature&quot;.  The server could return:\n&gt;\n&gt; * my-feature:  (or without the colon)\n&gt;\n&gt; to indicate that it knows about this field and handles it according to\n&gt; whatever semantics it has.\n\n\n"}}