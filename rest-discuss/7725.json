{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"qL06Z9aY-fsSuwzs9Kn9NVIKF9ObGfSJV2SV7EIPbg9xUacNA56QD5w3tAbrpsyJjAf9elwAeB29dyiTVaz0Nikt4tVTE6MNvs5v1ReQ_g8KEZM_45v5Jrc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Safe but secret","postDate":"1169735241","msgId":7725,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNjk3MzUyNDEuNjI0Ny44OS5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PDQ1QjM5QjcwLjcwMDAxMDRAbWV0YWxhYi51bmMuZWR1Pg==","referencesHeader":"PDQ1QjBCRjA0LjMwMjA2MDRAbWV0YWxhYi51bmMuZWR1PgkgPDFjODNhM2E4MDcwMTIwMDg1NHg0NmI2MzY1NmdhOGQ0MWU5NGQ5YjAxNTJAbWFpbC5nbWFpbC5jb20+CSA8NDVCMkIxMjIuODAwMDMwNkBtZXRhbGFiLnVuYy5lZHU+IDwyMDA3MDEyMTA5MDkzNy5HQTkxMEBibHVlem9vLm9yZz4JIDw0NUIzNjQ4RC42MDgwOTA0QG1ldGFsYWIudW5jLmVkdT4gPDg3bXo0Y21tbXIuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPgkgPDQ1QjM5QjcwLjcwMDAxMDRAbWV0YWxhYi51bmMuZWR1Pg=="},"prevInTopic":7675,"nextInTopic":0,"prevInTime":7724,"nextInTime":7726,"topicId":7635,"numMessagesInTopic":35,"msgSnippet":"... No, it is not reasonable. You lose your caching potential, which is one thing... but the main practical thing is that the browser will need a button every","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 25742 invoked from network); 25 Jan 2007 14:28:29 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m30.grp.scd.yahoo.com with QMQP; 25 Jan 2007 14:28:29 -0000\r\nReceived: from unknown (HELO mail09.syd.optusnet.com.au) (211.29.132.190)\n  by mta6.grp.scd.yahoo.com with SMTP; 25 Jan 2007 14:28:27 -0000\r\nReceived: from c210-49-93-69.rochd2.qld.optusnet.com.au (c210-49-93-69.rochd2.qld.optusnet.com.au [210.49.93.69])\n\tby mail09.syd.optusnet.com.au (8.13.1/8.13.1) with ESMTP id l0PERL5S002929;\n\tFri, 26 Jan 2007 01:27:22 +1100\r\nTo: Elliotte Harold &lt;elharo@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;45B39B70.7000104@...&gt;\r\nReferences: &lt;45B0BF04.3020604@...&gt;\n\t &lt;1c83a3a80701200854x46b63656ga8d41e94d9b0152@...&gt;\n\t &lt;45B2B122.8000306@...&gt; &lt;20070121090937.GA910@...&gt;\n\t &lt;45B3648D.6080904@...&gt; &lt;87mz4cmmmr.fsf@...&gt;\n\t &lt;45B39B70.7000104@...&gt;\r\nContent-Type: text/plain\r\nDate: Fri, 26 Jan 2007 00:27:21 +1000\r\nMessage-Id: &lt;1169735241.6247.89.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.3 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] Safe but secret\r\nX-Yahoo-Group-Post: member; u=184797058; y=6jt2jrplOTtyLd74VFnhAemlumPYTNnI9PS52Q8wgGV-isw\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Sun, 2007-01-21 at 11:57 -0500, Elliotte Harold wrote:\n&gt; Is it reasonable to use POST for a safe operation that transmits \n&gt; confidential data in the query string?\n\nNo, it is not reasonable. You lose your caching potential, which is one\nthing... but the main practical thing is that the browser will need a\nbutton every time it navigates from one page to another. Surely you\nwon&#39;t just have one page with the secret credit card as part of the url.\nThere are bound to be dozens of urls that contain that information if\nonly to look through historical records. Using POST with currently\ntechnology limits your ability to use simple recognisable hyperlinks.\n\nOn a pure architectural level secrets don&#39;t really matter too much. You\ncan do what you want with them. If they are secret they aren&#39;t known by\nmany people and are less likely to be frequently fetched than other\nkinds of data. They don&#39;t beneifit as much as other resources from\ncaching and other architectural niceties.\n\nOn the other hand, I hold POST to mean &quot;append the data I provide&quot; which\nis clearly not what is meant in this case. Using methods inconsistently\nis recipe for mismatch and confusion everywhere.\n\nSo... no. Don&#39;t use POST. It will cause you headaches, and is not\nnecessary at all.\n\n&gt; So far I think the two or three folks who&#39;ve actually addressed the \n&gt; question square on have come down in favor of using POST despite the \n&gt; safety of the operation.\n\nI think you have missed the discussion about safe hashes for secret\ndata. If the data is secret it isn&#39;t just shoulder surfing you have to\nworry about. Using that secret data in an identifier anywhere in your\napplication is a no no. Even if you trust your employees, you have a\nduty of care to keep what your customers consider secrets secret as much\nas possible. You should have a table that maps this secret data to a\nnon-secret hash. An examples:\n\nCredit card to non-secret hash table\n1234 4567 78 -&gt; 001\n4567 1234 90 -&gt; 002\n\nNow instead of visiting &lt;http://example.com/12345678&gt; your user visits\n&lt;http://example.com/001&gt;, which is the URL you told him to visit. You\nmight have done this by sending him the URL in the mail. You might have\ndone it by asking him to fill in a form with his credit card number in\nit that returned or redirected to this url. You might have simply\nhyperlinked to this url from the user&#39;s personalised main page.\n\nThe point is that whenever you put secret data in identifiers you\nguarantee that everyone in the company will be able to access the\ninformation. Don&#39;t do that. Use a hash instead. Then you at least have\nsome hope of being able to expose the secrets to as small a subset of\nyour employee community as possible. Naturally, this also solves the\nshoulder surfing problem... so long as the user doesn&#39;t type their\ncredit card number in to that form while someone is watching.\n\nBenjamin.\n\n\n\n"}}