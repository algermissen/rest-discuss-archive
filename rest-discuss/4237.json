{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":154469508,"authorName":"Justin Sampson","from":"&quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;","profile":"justin_t_sampson","replyTo":"SENDER","senderId":"6eLtOs_z6m2XUF6Gb3-yAd5roxTmUZZRgPbpSBg32dltTj4T4EAkWxHHaFOk_c4VU97TbBxgp7u3B7y_iSyGU3dVYOdyLsC-49Q6PlCq8mECfutkhCZgCZ9T","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: REST Transaction Process","postDate":"1077242065","msgId":4237,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQ0ODlCNzcxMUNFN0I4NDI4NjE4RUE2QkVERjA4NEY5MUJCMzAzQG1haWwtMDEuc3Bva2Vzb2Z0d2FyZS5jb20+"},"prevInTopic":4236,"nextInTopic":4238,"prevInTime":4236,"nextInTime":4238,"topicId":4141,"numMessagesInTopic":67,"msgSnippet":"... Heheh. ... If the transaction-as-a-whole is to have ACID semantics, and the client sends some POST, PUT, or DELETE requests based on the responses to some","rawEmail":"Return-Path: &lt;Justin.Sampson@...&gt;\r\nX-Sender: Justin.Sampson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 5448 invoked from network); 20 Feb 2004 02:23:16 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m20.grp.scd.yahoo.com with QMQP; 20 Feb 2004 02:23:16 -0000\r\nReceived: from unknown (HELO mail-01.spokesoftware.com) (209.213.222.38)\n  by mta1.grp.scd.yahoo.com with SMTP; 20 Feb 2004 02:23:16 -0000\r\ncontent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nDate: Thu, 19 Feb 2004 17:54:25 -0800\r\nX-MimeOLE: Produced By Microsoft Exchange V6.0.6487.1\r\nMessage-ID: &lt;D489B7711CE7B8428618EA6BEDF084F91BB303@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] Re: REST Transaction Process\r\nThread-Index: AcP3T6GZ6TpRw8UkTpKp4Ghr8SU9rAAAf4Jw\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nX-eGroups-Remote-IP: 209.213.222.38\r\nFrom: &quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;\r\nSubject: RE: [rest-discuss] Re: REST Transaction Process\r\nX-Yahoo-Group-Post: member; u=154469508\r\nX-Yahoo-Profile: justin_t_sampson\r\n\r\nRoy T. Fielding wrote:\n\n&gt; On Wednesday, February 18, 2004, at 10:40  PM, S.=\r\n Alexander\n&gt; Jacobson wrote:\n&gt;\n&gt; &gt; If you have isolation, GET on a public r=\r\nesource (within the\n&gt; &gt; scope of the transaction) changes the state of the\n=\r\n&gt; &gt; transaction because whether the transaction closes now\n&gt; &gt; depends on w=\r\nhether the GET resource is modified before the\n&gt; &gt; subsequent COMMIT.\n&gt;\n&gt; N=\r\nope.\n\nHeheh.\n\n&gt; &gt; For example:\n&gt; &gt;\n&gt; &gt;   GET URI1\n&gt; &gt;   OPEN TRANSACTION\n&gt; =\r\n&gt;   GET URI1\n&gt; &gt;   PUT URI2 VALUE\n&gt; &gt;   PUT URI3 VALUE\n&gt; &gt;   COMMIT\n&gt; &gt;\n&gt; &gt;=\r\n The first GET has no effect on the outcome of the transtion.\n&gt; &gt; The secon=\r\nd GET changes the state of the transaction. In\n&gt; &gt; particular, the result o=\r\nf the GET is that the transaction may\n&gt; &gt; fail may cause the subsequent seq=\r\nuence of actions to fail (if\n&gt; &gt; URI1 changes before the second PUT).\n&gt;\n&gt; N=\r\nope. As far as I can tell, you are just inventing transaction\n&gt; semantics t=\r\nhat don&#39;t exist. Transaction success or failure\n&gt; depends on whether the se=\r\nrver can cause the combined state\n&gt; change requested by those requests, as =\r\na whole, to take effect\n&gt; on the server as a result of the commit. The only=\r\n requests that\n&gt; matter to the transaction processor are the ones that veri=\r\nfy\n&gt; preconditions and those that change state. If the client places\n&gt; a pr=\r\necondition on the GET request, then that is what they want.\n\nIf the transac=\r\ntion-as-a-whole is to have ACID semantics, and the\nclient sends some POST, =\r\nPUT, or DELETE requests based on the\nresponses to some GET requests, such t=\r\nhat the client would not\nhave performed the same sequence of POST, PUT, or =\r\nDELETE requests\ngiven different responses to those GET requests, then the f=\r\nact of\nhaving sent those GET requests is an important part of the\ntransacti=\r\non&#39;s state. If another client in another transaction\nsends some sequence of=\r\n POST, PUT, or DELETE requests such that\nthe GET requests sent by the first=\r\n client would have resulted in\ndifferent responses, then those two client t=\r\nransactions are in\nconflict: If both transactions commit, the state of all =\r\nthe\nresources together will not be what either transaction intended.\n\nSuch =\r\nconflicts are commonly prevented by acquiring non-exclusive\nlocks on querie=\r\nd data or detected by remembering what data was\nqueried and verifying that =\r\nit has not changed at commit time.\nStandard stuff, and stateful either way.=\r\n\n\nJustin\n\n"}}