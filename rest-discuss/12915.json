{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"Sebastien Lambla &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"E0CdWFT85lY9pgz75XunLodRpQA4p4m8uPSCS6BiDsohqSovBwPLXRAEgpowtTvHDQEE1RjdeJjXZerMWhJyxFGmVmaRynmd6hv4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Re: Google kills the question mark?","postDate":"1245627561","msgId":12915,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJMVTEwMi1XMTNDMThFNzVCRThFQzNBNUU4NzczMEI1MzgwQHBoeC5nYmw+","inReplyToHeader":"PGgxbHBkYytocDhvQGVHcm91cHMuY29tPg==","referencesHeader":"PDRBM0JCNjJDLjgwMTA4MDlAZGVob3JhLm5ldD4gPGgxbHBkYytocDhvQGVHcm91cHMuY29tPg=="},"prevInTopic":12912,"nextInTopic":0,"prevInTime":12914,"nextInTime":12916,"topicId":12891,"numMessagesInTopic":15,"msgSnippet":"There s too much content to reply inline, mixing ideas and rants, so I ll just make a fresh start instead with points that seem relevant to this conversation. ","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 61775 invoked from network); 21 Jun 2009 23:39:42 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m5.grp.sp2.yahoo.com with QMQP; 21 Jun 2009 23:39:42 -0000\r\nX-Received: from unknown (HELO blu0-omc3-s19.blu0.hotmail.com) (65.55.116.94)\n  by mta2.grp.re1.yahoo.com with SMTP; 21 Jun 2009 23:39:42 -0000\r\nX-Received: from BLU102-W13 ([65.55.116.74]) by blu0-omc3-s19.blu0.hotmail.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Sun, 21 Jun 2009 16:39:21 -0700\r\nMessage-ID: &lt;BLU102-W13C18E75BE8EC3A5E87730B5380@...&gt;\r\nReturn-Path: seb@...\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;_145f1113-0444-457e-95cb-35c5c76f0302_&quot;\r\nTo: &lt;johnzabroski@...&gt;, &quot;rest-discuss@yahoogroups.com&quot;\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Sun, 21 Jun 2009 23:39:21 +0000\r\nImportance: Normal\r\nIn-Reply-To: &lt;h1lpdc+hp8o@...&gt;\r\nReferences: &lt;4A3BB62C.8010809@...&gt; &lt;h1lpdc+hp8o@...&gt;\r\nMIME-Version: 1.0\r\nX-OriginalArrivalTime: 21 Jun 2009 23:39:21.0803 (UTC) FILETIME=[80AE61B0:01C9F2C9]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Sebastien Lambla &lt;seb@...&gt;\r\nSubject: RE: [rest-discuss] Re: Google kills the question mark?\r\nX-Yahoo-Group-Post: member; u=331949899; y=TPRunFSuPJSbNM88iGaXa5tlSeHZq1tt907x33vyqYNXrG_L\r\nX-Yahoo-Profile: serialseb\r\n\r\n\r\n--_145f1113-0444-457e-95cb-35c5c76f0302_\r\nContent-Type: text/plain; charset=&quot;Windows-1252&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\nThere&#39;s too much content to reply inline, mixing ideas and rants, so I&#39;ll =\r\njust make a fresh start instead with points that seem relevant to this conv=\r\nersation.\n\n \n\nThe fact that the hash is used by google video to fast forwar=\r\nd the video hosted in flash at a certain point in time is perfectly within =\r\nthe constraints defined by the layering between media type and protocol, as=\r\n you rightly point out. The hash is used by the media type in whatever it s=\r\nees fit. In html used in composite scenarios, it is often used as both stor=\r\nage and navigation clue. Nothing, absolutely nothing prevents the owner of =\r\nthe media type for wmv or flash video to define that the hash fragment is t=\r\no be used to denotate a time within the video. And indeed, if it was the ca=\r\nse, the flash content could simply delegate the navigation hash value to th=\r\ne secondary media type without resorting to scripting.\n\n\nAs such, I really =\r\ndo not understand where the comparison between the query of a URI, which is=\r\n a server concern, has any relationship with the hash part, which is intend=\r\ned for use by the media type. This is the foundation of the layered approac=\r\nh in WebArch.\n\n\nI&#39;ll propose that there is confusion in this discussion bet=\r\nween the hash fragment used as intra-mediatype navigation (as in google vid=\r\neo, xml identifier in xml, etc), hash fragment used as local storage (due t=\r\no the lack of local persistence supported across browsers) and hash fragmen=\r\nt used as additional navigation information (due to the lack of ability by =\r\nbrowsers to update the address bar upon ajax calls). Each can be discussed =\r\nindependently, but they don&#39;t have any impact in the separation between med=\r\nia type hash fragment and query string.\n\n \n\nNow on the subject of silverlig=\r\nht (or flash for that matter), they are fundamentally mobile code, but are =\r\nopaque to intermediaries. Look at how good google can crawl flash movies to=\r\n see the kind of issues arise when you start doing mobile code.\n\n \n\nThe not=\r\nion that object-orientation would solve a problem (and I&#39;m still *very* unc=\r\nlear as to what the problem under discussion is) is quite fallacious. Just =\r\nlike you need a browser understanding DOM2 and HTML4 to process a document,=\r\n you will require version 2 of the silverlight runtime to run your package.=\r\n\n\n \n\nWhat you&#39;re arguing here would be that a specific document could enfor=\r\nce a specific rendering engine &quot;version&quot; and all the problems in the world =\r\nwould be solved. I believe that idea has been tried and failed. Remember th=\r\ne &quot;only on IE&quot; buttons 15 years ago? I do. It doesn&#39;t work. Unless you ship=\r\n everything side by side. Like IE7 mode in IE8 I suppose?\n\n \n\nA declarative=\r\n choice of dependencies and runtimes (a strong version binding) *has nothin=\r\ng to do with OO*. At all. Versioning existed before and will exist after OO=\r\n. A discussion that has nothing to do with either WebArch or REST.\n\n \n\nBut =\r\nwhat is completely relevant to REST is that the agent is only responsible f=\r\nor manipulating resource representations, displaying, modifying, or sending=\r\n them back. The workflow picture is hidden away from the client for good re=\r\nason that have been documented on this list and on the web ad-nauseum. And =\r\nthe only way to achieve the same attributes in an architecture based on a s=\r\nilverlight agent (or any other http agent for that matter) will end up with=\r\n you redesigning the browser on a lesser-used media type with much higher p=\r\narsing requirements. I don&#39;t see a mono-vendor (pun intended) format mixing=\r\n document and behavior, developed in a closed fashion and not particularly =\r\na great http citizen (wcf duplex is a prime example) being fundamentally be=\r\ntter than what WebArch is today.\n\n \n\nI&#39;d be glad to continue that conversat=\r\nion if you can highlight exactly what you think is wrong in the web archite=\r\ncture. As long as you don&#39;t mind debating with a law school uni drop-out th=\r\nat didn&#39;t chair a board at microsoft or got employed by sun, but does belie=\r\nve that there is more to open architectures than contract and competitive i=\r\nssues.\n\n \n\nSeb\n\n \n&gt; To: rest-discuss@yahoogroups.com\n&gt; From: johnzabroski@y=\r\nahoo.com\n&gt; Date: Sun, 21 Jun 2009 17:07:56 +0000\n&gt; Subject: [rest-discuss] =\r\nRe: Google kills the question mark?\n&gt; \n&gt; --- In rest-discuss@...=\r\nm, Bill de hOra &lt;bill@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; johnzabroski wrote:\n&gt; &gt; \n&gt; &gt; &gt; &gt; =\r\nFragment identifiers are broken as designed in the web architecture. As\n&gt; &gt;=\r\n &gt; &gt; we say in Ireland, I wouldn&#39;t start from there.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Then wher=\r\ne would you start from? Maybe I am missing a completely obvious \n&gt; &gt; &gt; prac=\r\ntical or even theoretical alternative to this. I&#39;ve said in the past \n&gt; &gt; &gt;=\r\n that fragment identifiers are broken, because they are not \n&gt; &gt; &gt; object-o=\r\nriented and do not lend themselves well to representing \n&gt; &gt; &gt; object-orien=\r\nted hypermedia. I am not sure where you or anyone else \n&gt; &gt; &gt; stands on &quot;fr=\r\nagment identifiers are broken&quot;. I don&#39;t know of any RFC or \n&gt; &gt; &gt; any IETF =\r\ndocument that says this, anywhere.\n&gt; &gt; \n&gt; &gt; They&#39;re broken because they cou=\r\nple URIs to media representations. My \n&gt; &gt; stance fwiw, is not to design th=\r\nem into my systems.\n&gt; \n&gt; \n&gt; Sorry, you provide commentary on a design posit=\r\nion, but give me no examples. I am not sure what that looks like. You don&#39;t=\r\n have any ID tags anywhere in your XML documents??? I think you are fooling=\r\n me, or talking past me.\n&gt; \n&gt; Fragment identifiers are supposed to be indep=\r\nendent of URI media type. I personally think full independence is a little =\r\ncrazy. That&#39;s tantamount to saying &quot;ah, yes, we can run our enterprise&#39;s mi=\r\nssion-critical data processing on a network database and don&#39;t need a SQL D=\r\nBMS.&quot; There is a minimum sanity level in the design of any system. It is kn=\r\nown in the engineering trades as &quot;margin of safety&quot;.\n&gt; \n&gt; If your media typ=\r\ne does not support fragment identifiers directly, then you can usually perf=\r\norm what compiler writers call a &quot;worker/wrapper transformation&quot;. This is h=\r\now Google Video brilliantly &quot;just works&quot;. Google Video lets you fragment id=\r\nentify a particular second in a video you are watching, along with other op=\r\ntions (I forget how to do this, though, since it is not exposed anywhere in=\r\n the GUI.) It can do this because Google Video is not presenting you WMF or=\r\n whatever. Instead, it wraps that content in a media player in a Flash cont=\r\nainer and wraps that Flash container in an HTML document, and the DOM model=\r\n allows the user to manipulate the opaque media type via a DOM bridge.\n&gt; \n&gt;=\r\n Some media types need this level of virtualization to &quot;just work&quot;, and it =\r\nis not tightly coupling anything to anything. It is simply good design. If =\r\nyou note, we&#39;ve put in two extra degrees of freedom from the underlying med=\r\nia type (WMF) just to gain access to WMF&#39;s discrete time abilities.\n&gt; \n&gt; No=\r\nw, one thing I dislike, and I think you probably do too, is that we use # i=\r\nn place of ?, mainly due to how much web browser&#39;s navigation services suck=\r\n today. I&#39;ll talk more about this below - and explain my Platonic ideal.\n&gt; =\r\n\n&gt; &gt; &gt; No, you have it wrong, in my humble opinion. Today, the user agent w=\r\ne \n&gt; &gt; &gt; all use, The Web Browser Model, is too tightly coupled to the medi=\r\na \n&gt; &gt; &gt; type. \n&gt; &gt; \n&gt; &gt; What I said was that the problem of understanding =\r\nformats and objects \n&gt; &gt; will be pushed up to application developers. This =\r\nis what happens \n&gt; &gt; already today with JSON (but not so much with Atom and=\r\n hardly at all \n&gt; &gt; with HTML). If I&#39;m wrong, please explain how.\n&gt; \n&gt; \n&gt; M=\r\ny initial guess is you are &quot;not even wrong&quot;. I don&#39;t understand how people =\r\ncome up with circular arguments like this one. Why on earth would applicati=\r\non developers be responsible for building media type interpreters??? That j=\r\nust puts you back in the EDI world, and will bring about another round of d=\r\numb COBOL/VSAM-esque ideas like Netron Fusion frame-oriented programming.\n&gt;=\r\n \n&gt; I will not comment on your JSON concerns, because I need a particular e=\r\nxample. It is too aloof for me to wrap my head around. Could you illustrate=\r\n by comparing JSON vs. Atom vs. HTML? I understand what all these are, but =\r\nsometimes the differences people see in good design are remarkably subtle. =\r\nThere is a good chance you can simply see a subtlety I cannot without the h=\r\nelp of your magnifying glass.\n&gt; \n&gt; \n&gt; &gt; &gt; The Web Browser is a program that=\r\n has to know how to render the \n&gt; &gt; &gt; media formats it receives. It has to =\r\nbe way too smart. I am arguing for \n&gt; &gt; &gt; the dumbing down of this and retu=\r\nrning to a more reasonable \n&gt; &gt; &gt; Object-Oriented approach where &quot;you don&#39;t=\r\n need a browser&quot;, where your \n&gt; &gt; &gt; code and data go together.\n&gt; &gt; \n&gt; &gt; The=\r\nre are systems that do that already and have attempted to do that, \n&gt; &gt; inc=\r\nluding the goal of &quot;fixing the web&quot; - they haven&#39;t been adopted even \n&gt; &gt; w=\r\nith massive industry backing. Distributed OO is a niche compared to the \n&gt; =\r\n&gt; Web.\n&gt; \n&gt; \n&gt; Sorry. Distributed OO could mean a lot of things. Could you =\r\nplease explain to me in what sense you are using it? I don&#39;t enjoy hearing =\r\na buzzword and &quot;there are systems that do that already&quot;, because I can&#39;t fi=\r\ngure out what that means. I much prefer examples in place of buzzwords. I a=\r\nm a firm believer that this sort of assumption -- that other technical peop=\r\nle know what other technical people are talking about -- is why software is=\r\n so complex.\n&gt; \n&gt; Here is my take on things... let&#39;s study the evolution of=\r\n a user and his/her user agent (the legacy model of a web browser). This is=\r\n a somewhat philosophical A Discourse by Three Drunkards on Web Browsers...=\r\n.\n&gt; \n&gt; 1. User installs Operating System, or buys appliance with Operating =\r\nSystem, or downloads a VM that is an OS Appliance.\n&gt; \n&gt; 2. They either have=\r\n a web browser shipped with the OS, or they don&#39;t. If they don&#39;t, then they=\r\n have to download it or install it. Downloading is tricky, because how do y=\r\nou bootstrap the process? Ah, at some point you need something to *lead* th=\r\ne bootstrap. We&#39;ll call that leader the browser. At this step, the first bo=\r\notstrap on the user&#39;s machine ever, the browser could be a user or a user a=\r\ngent.\n&gt; \n&gt; 3. The browser is now automagically installed. The browser also =\r\nautomagically knows how to update itself from the Internet, using its own b=\r\nrowser networking stack, which is abstracted away from the underlying OS. (=\r\nThis is the way FireFox works today. It gets the latest bits from an author=\r\nitative repository, and the next time you cycle FireFox, you get the versio=\r\nn it downloaded/installed. You also get a page that says &quot;You&#39;ve just been =\r\nupgraded.&quot;)\n&gt; \n&gt; 4. Your browser has a somewhat insidious but seemingly inn=\r\nocuous design flaw... it cannot automagically substitute rendering engines =\r\nfor HTML, the major media type on the Web. As a consequence, your mission-c=\r\nritical Enterprise web app starts behaving weird after some upgrade, becaus=\r\ne the upgrade included a change to CSS and now all of a sudden that weird C=\r\nSS hack the webmaster put in is breaking everyone&#39;s dashboards. Bar graphs =\r\nthat were normally zeroes are now 100%s, and everyone knows something is ho=\r\nrribly wrong, and right about now nobody gives a shit that &quot;FireFox 2020&quot; j=\r\nust passed the Acid6 test by the W3C... and the DotCOM CEO is about to comm=\r\nit Hudsucker Proxy-style boardroom meeting suicide.\n&gt; \n&gt; So, basically, to =\r\nre-cap, if web browsers were more object-oriented, and supported &quot;versionab=\r\nle objects&quot;, then we could stabilize such problems by saying we only suppor=\r\nt rendering engine COMPONENTs. This is the way .NET works. Your appmanifest=\r\n.xml can be used to select which version of a DLL your application should r=\r\nun against. This is called virtualization and component-oriented software. =\r\nThe former buzzword is really sexy right now and the other is just &quot;meh&quot; to=\r\n most people.\n&gt; \n&gt; If you look at what Microsoft is doing with Silverlight,=\r\n they are basically trying to replace the Browser with something more objec=\r\nt-oriented. For the most part, it is vastly superior, except for the fact t=\r\nhat by default it is still hosted inside this monolithic, poorly architecte=\r\nd notion of a Browser. The bad design of browsers is codified into the DHTM=\r\nL model of DOM. JavaScript&#39;s notion of a window is wrong. When you change t=\r\nhe URL, using JavaScript, the browser should not automagically fetch the ne=\r\nw URL. That&#39;s what is wrong with browsers today, that Silverlight and objec=\r\nt-oriented stuff like it can&#39;t fix. The Web Browser today has no notion of =\r\ninterstitial concepts that good object-oriented design uses by default. The=\r\n Browser&#39;s URI navigation bar is very direct, and not controllable by the a=\r\npplication. Somehow, the Browser has this completely _jacked up_ idea that =\r\nit knows more about how to dispatch a URI than the application itself. The =\r\nBrowser should really only provide the ability for the application to use H=\r\nREF-style GOTO behavior as a HELPER function- not as a hardcoded non-modula=\r\nr mechanism. And if you don&#39;t see this hardcodedness and how it ties back i=\r\nnto the original topic of ? and #, and why people even use # in the first p=\r\nlace, well... it&#39;s because the browser&#39;s navigation bar uses the HREF GOTO =\r\nmodel of navigation. The browser is really this phony hypermedia container =\r\nwannabe, because nothing about the browser has ever been hypermedia-centric=\r\n or object-oriented, and certainly not &quot;Object-Oriented Hypermedia&quot;-centric=\r\n nirvana. That&#39;s why the browser is continuously taken by surprise with ide=\r\nas like XMLHTTPRequest, because the browser is non-modular and people conti=\r\nnuously hijack media types (like ActiveX) to provide correct, object-orient=\r\ned features like XMLHTTPRequest! THINK ABOUT IT.\n&gt; \n&gt; Silverlight is basica=\r\nlly a Virtual Machine-based web browser, done mostly right, but still havin=\r\ng to deal with browser interop problems such as (a) the browser networking =\r\nstack (b) the browser navigation model\n&gt; \n&gt; If my Silverlight/Moonlight exa=\r\nmple frightens you, just s/Silverlight/GWT and Google Gears/ and we&#39;re now =\r\ntalking about supposedly &quot;do no evil&quot; technology everybody loves right now.=\r\n Except, GWT is fundamentally stupider than Silverlight, b/c it does not fi=\r\nx the fundamental problem that the browser is not object-oriented and does =\r\nnot use components. The legacy web browser is not a good model for mission-=\r\ncritical applications, regardless of what Google wants you to believe to pu=\r\nmp-up their AdSense/AdWords revenue. Gears cannot fix this. Ever. (Gears is=\r\n seriously cool, by the way, and I think Silverlight+++Gears is even cooler=\r\n! But most people talk about Microsoft/Google in an unholy war sense, so th=\r\ney could never dream of Silverlight and Gears being used in conjunction to =\r\nfix the browser networking stack problems and browser navigation model prob=\r\nlems. However, Gears CANNOT fix the component problem. Again, I&#39;ll just poi=\r\nnt to Joel Spolsky&#39;s Martian Headsets blog entry for the best explanation o=\r\nf how messed up this thing is.)\n&gt; \n&gt; \n&gt; \n&gt; &gt; &gt; The idea that a browser shou=\r\nld know how to \n&gt; &gt; &gt; render HTML is backwards. Notice that I am saying the=\r\n Browser should \n&gt; &gt; &gt; simply be a gateway, and that inside the browser we =\r\ncan embed \n&gt; &gt; &gt; application-specific gateways. \n&gt; &gt; \n&gt; &gt; Gateways already =\r\nexist in the form of CGI. They&#39;re called gateways for \n&gt; &gt; reason, as they&#39;=\r\nre not part of the web architecture.\n&gt; \n&gt; \n&gt; Are you snowing me? Your first=\r\n sentence is spot-on, but your statement that &quot;they&#39;re not part of the web =\r\narchitecture&quot; overlooks how page-centric web applications operate today. Lo=\r\nok at the DISGUSTING hacks JBoss does with continuations to solve the fact =\r\nthat the browser has no GOOD way to allow the application to define gateway=\r\ns.\n&gt; \n&gt; In theory, you are right. The Web Architecture doesn&#39;t know about g=\r\nateways.\n&gt; \n&gt; In practice, you are &quot;not even wrong&quot;, by being closed-minded=\r\n to a set of design criteria you prefer. Understand that the way web browse=\r\nrs work today is just a _talking point_ for what they should look like in t=\r\nhe future. The Web -- and The Web Browser Model -- did not have any concept=\r\n of XMLHTTPRequest or anything like that. \n&gt; \n&gt; \n&gt; &gt; &gt; I think of the Brows=\r\ner of the future as a software configuration \n&gt; &gt; &gt; management tool, with a=\r\nbility to get out of the way of user \n&gt; &gt; &gt; accessibility issues and the li=\r\nke. The Browser should give you a \n&gt; &gt; &gt; flexible, scalable, distributed mo=\r\ndel for accessing content like \n&gt; &gt; &gt; object-oriented programs.\n&gt; &gt; \n&gt; &gt; I =\r\nthink they already do. Was there a specific &quot;not-browser&quot; application \n&gt; &gt; =\r\nyou had in mind?\n&gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; You could certainly argue that HTML/XHTM=\r\nL decouples interface from \n&gt; &gt; &gt; implementation, but that is a ridiculous =\r\nargument -- we all know from \n&gt; &gt; &gt; just looking at the gold standard for r=\r\nendering pages, the Acid Test, \n&gt; &gt; &gt; that nobody can even correctly implem=\r\nent these interfaces. \n&gt; &gt; \n&gt; &gt; That&#39;s ok, I didn&#39;t argue that.\n&gt; &gt; \n&gt; &gt; I =\r\nthink you&#39;ll find that most of the wildly successful formats are not \n&gt; &gt; c=\r\nonsistently implemented. There&#39;s nothing exceptional about HTML, except \n&gt; =\r\n&gt; that &quot;wildly successful&quot; is an understatement.\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; &gt; So it make=\r\ns \n&gt; &gt; &gt; more sense to talk about shipping a working versionable object, a =\r\n\n&gt; &gt; &gt; component, that has code+data. \n&gt; &gt; \n&gt; &gt; Why does it make more sense=\r\n? Code on demand is part of REST, but the \n&gt; &gt; history of distributed objec=\r\nts is dismal. SOAP has failed for Web scale \n&gt; &gt; delivery. Even JavaScript =\r\ngets reduced down to JSON.\n&gt; &gt; \n&gt; &gt; If there&#39;s something beyond the syntax =\r\nrelated stuff we do today, I \n&gt; &gt; suspect it&#39;s likely to be data that has m=\r\nore precise semantics (eg \n&gt; &gt; KIF/RDF/OWL) and in the interim, formats lik=\r\ne atom, microformats and \n&gt; &gt; rdfa, maybe json based vocabularies.\n&gt; &gt; \n&gt; &gt;=\r\n Developers like their objects so I guess people will keep trying to go \n&gt; =\r\n&gt; down that path, and you seem happy to do so. Otherwise this debate is \n&gt; =\r\n&gt; years old, and I&#39;ve seen nothing in over a decade that suggests we&#39;ll \n&gt; =\r\n&gt; move off the current web to something approaching OO, not matter how \n&gt; &gt;=\r\n stupid it seems to be each generation of programmers that discover the \n&gt; =\r\n&gt; web and immediately wonder how to fix it.\n&gt; \n&gt; \n&gt; I don&#39;t know what KIF i=\r\ns. I don&#39;t know what RDFA is. I know the others. I think the thing you are =\r\nmissing here is that I am not against any of these ideas, and actually see =\r\nmy vision of the browser as complementary to Tim Berners-Lee&#39;s vision of th=\r\ne Semantic Web and even Google&#39;s vision of the semantic web. This is hard f=\r\nor me to confess, because my greatest weakness is being so visionary and cl=\r\nosed-minded. Yet, ya know, these semantic people know what they&#39;re talking =\r\nabout. I am not trying to &quot;fix&quot; anything there. I&#39;m just waiting for them t=\r\no bring me results so I can take advantage of it.\n&gt; \n&gt; As an aside, more pr=\r\nagmatically, you can&#39;t OWL everything and you don&#39;t want to. This is the sa=\r\nme reason why Microsoft doesn&#39;t make .NET more modular. OWL means all your =\r\ncontent on the web is totally modular, fully exposed semantics. For a lot o=\r\nf companies, this means that they are inviting competition. For example, wh=\r\nere I work a company currently complements our product by providing rich hy=\r\npermedia like videos to our clients, while we provide highly structured and=\r\n organized content that is optimized for stereotyped workflows. If all our =\r\ncontent was &quot;out there&quot;, then the rich hypermedia competitor could just sip=\r\nhon us. At that point, they can go to our clients and say, &quot;we have all the=\r\n data you care about, and will charge you half the price.&quot; Basically, they =\r\nwould be copying our specification (the hardest thing in software to build)=\r\n.\n&gt; \n&gt; \n&gt; &gt; &gt; I guess I am reading your sentence as &quot;Unfortunately this is =\r\na detail we \n&gt; &gt; &gt; do not talk about, even though it needs improvement.&quot; Pe=\r\nrhaps not fair, \n&gt; &gt; &gt; but where else are you leading me? It sounds like wh=\r\nat I need to hear \n&gt; &gt; &gt; then is &quot;stop going down this direction, you need =\r\nto re-crystallize, \n&gt; &gt; &gt; here is what you need to go and where you need to=\r\n go.&quot;\n&gt; &gt; \n&gt; &gt; I would say distributed objects in the way you&#39;re talking ab=\r\nout them are \n&gt; &gt; a dead end, yes.\n&gt; \n&gt; \n&gt; \n&gt; I never used the phrase &quot;dist=\r\nributed objects&quot;, anywhere. You put that word in my mouth. I am spitting it=\r\n out. I don&#39;t even know what the heck you mean by &quot;distributed objects&quot;. Yo=\r\nu are really being basically the ultimate buzzkill -- using buzzwords with =\r\nconnotative meanings and slapping them onto what I am discussing.\n&gt; \n&gt; This=\r\n is why we have a thread about re-acronymizing everything under the sun. An=\r\nd exactly why that thread is one of the longest discussions on here in a lo=\r\nng time.\n&gt; \n&gt; I think I am personally too closed-minded and visionary to be=\r\n brought down by anyone who wants to buzzkill me. I know exactly what I wan=\r\nt, and despite being an average programmer, I am a very great API designer.=\r\n Amazingly, I didn&#39;t go to Stanford and I didn&#39;t get hired by Sun to create=\r\n a super-complicated J2EE EJB 1.0 specification or get hired by Microsoft t=\r\no chair a steering committee for ATL or DCOM. I know, my credentials suck!\n=\r\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Li=\r\nnks\n&gt; \n&gt; \n&gt; \n\n_____________________________________________________________=\r\n____\nShare your photos with Windows Live Photos =96 Free.\nhttp://clk.atdmt.=\r\ncom/UKM/go/134665338/direct/01/\r\n--_145f1113-0444-457e-95cb-35c5c76f0302_\r\nContent-Type: text/html; charset=&quot;Windows-1252&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n.hmmessage P\n{\nmargin:0px;\npadding:0px\n}\nbody.hmmessa=\r\nge\n{\nfont-size: 10pt;\nfont-family:Verdana\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body class=3D=\r\n&#39;hmmessage&#39;&gt;\nThere&#39;s too much content to reply inline, mixing ideas and ran=\r\nts, so I&#39;ll just make a fresh start instead with points that seem relevant =\r\nto this conversation.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nThe&nbsp;fact that the hash is used by=\r\n google video to fast forward the video hosted in flash at a certain point =\r\nin time is&nbsp;perfectly within the constraints defined by the layering be=\r\ntween media type and protocol, as you rightly point out. The hash is used b=\r\ny the media type in whatever it sees fit. In html used in composite scenari=\r\nos, it&nbsp;is often used as both storage and navigation clue. Nothing, abs=\r\nolutely nothing prevents&nbsp;the owner of the media type for&nbsp;wmv or f=\r\nlash video to define that&nbsp;the hash fragment is to be used to denotate =\r\na time within the video. And indeed,&nbsp;if it was the case, the flash con=\r\ntent could simply delegate the navigation hash value to the secondary media=\r\n type without resorting to scripting.&lt;BR&gt;\n&lt;BR&gt;As such,&nbsp;I really do not=\r\n understand where the comparison between the query of a URI, which is a ser=\r\nver concern, has any relationship with the hash part, which is intended&nbs=\r\np;for use by the media type. This is the foundation of the layered approach=\r\n in WebArch.&lt;BR&gt;\n&lt;BR&gt;I&#39;ll propose that there is confusion in this discussio=\r\nn between the hash fragment used as&nbsp;intra-mediatype navigation (as in =\r\ngoogle video, xml identifier in xml, etc), hash fragment used as local stor=\r\nage (due to the lack of local persistence supported&nbsp;across browsers) a=\r\nnd hash fragment used as additional navigation information&nbsp;(due to the=\r\n lack of ability by browsers to update the address bar upon ajax calls). Ea=\r\nch can be discussed independently, but they don&#39;t have any impact in the se=\r\nparation between media type hash fragment and query string.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\n=\r\nNow on the subject of silverlight (or flash for that matter), they are fund=\r\namentally mobile code, but are opaque to intermediaries. Look at how good g=\r\noogle can crawl flash movies to see the kind of issues arise when you start=\r\n doing mobile code.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nThe notion that object-orientation would=\r\n solve a problem (and I&#39;m still *very* unclear as to what the problem under=\r\n discussion is) is quite fallacious. Just like you need a browser understan=\r\nding DOM2 and HTML4 to process a document, you will require version 2 of th=\r\ne silverlight runtime to run your package.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nWhat you&#39;re argui=\r\nng here would be that a specific document could enforce a specific renderin=\r\ng engine &quot;version&quot; and all the problems in the world would be solved. I bel=\r\nieve that idea has been tried and failed. Remember the &quot;only on IE&quot; buttons=\r\n 15 years ago? I do. It doesn&#39;t work. Unless you ship everything side by si=\r\nde. Like IE7 mode in IE8 I suppose?&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nA&nbsp;declarative choic=\r\ne of dependencies and runtimes (a strong version binding) *has nothing to d=\r\no with OO*.&nbsp;At all. Versioning existed before and will exist after OO.=\r\n A discussion that has nothing to do with either&nbsp;WebArch or&nbsp;REST.=\r\n&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nBut what is completely relevant to REST is that the agent i=\r\ns only responsible for manipulating resource representations, displaying, m=\r\nodifying, or sending them back. The workflow picture is hidden away from th=\r\ne client for good reason that have been documented on this list and on the =\r\nweb ad-nauseum. And the only way to achieve the same attributes in an archi=\r\ntecture based on a silverlight agent (or any other http agent for that matt=\r\ner) will end up with you redesigning the browser on a lesser-used media typ=\r\ne with much higher parsing requirements. I don&#39;t see a mono-vendor (pun int=\r\nended) format mixing document and behavior, developed in a closed fashion a=\r\nnd not particularly a great http citizen (wcf duplex is a prime example) be=\r\ning fundamentally better than what WebArch is today.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nI&#39;d be =\r\nglad to continue that conversation if you can highlight exactly what you th=\r\nink is wrong in the web architecture. As long as you don&#39;t mind debating wi=\r\nth a law school uni drop-out that didn&#39;t chair a board at microsoft or got =\r\nemployed by sun, but does believe that there is more to open architectures =\r\nthan contract and competitive issues.&lt;BR&gt;\n&nbsp;&lt;BR&gt;\nSeb&lt;BR&gt;\n&nbsp;&lt;BR&gt;&gt;=\r\n To: rest-discuss@yahoogroups.com&lt;BR&gt;&gt; From: johnzabroski@...&lt;BR&gt;&=\r\ngt; Date: Sun, 21 Jun 2009 17:07:56 +0000&lt;BR&gt;&gt; Subject: [rest-discuss] R=\r\ne: Google kills the question mark?&lt;BR&gt;&gt; &lt;BR&gt;&gt; --- In rest-discuss@yah=\r\noogroups.com, Bill de hOra &lt;bill@...&gt; wrote:&lt;BR&gt;&gt; &gt;&lt;BR&gt;&gt; &gt=\r\n; johnzabroski wrote:&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; &gt; &gt; Fragment identif=\r\niers are broken as designed in the web architecture. As&lt;BR&gt;&gt; &gt; &gt; &=\r\ngt; we say in Ireland, I wouldn&#39;t start from there.&lt;BR&gt;&gt; &gt; &gt; &lt;BR&gt;&=\r\ngt; &gt; &gt; Then where would you start from? Maybe I am missing a complet=\r\nely obvious &lt;BR&gt;&gt; &gt; &gt; practical or even theoretical alternative to=\r\n this. I&#39;ve said in the past &lt;BR&gt;&gt; &gt; &gt; that fragment identifiers a=\r\nre broken, because they are not &lt;BR&gt;&gt; &gt; &gt; object-oriented and do n=\r\not lend themselves well to representing &lt;BR&gt;&gt; &gt; &gt; object-oriented =\r\nhypermedia. I am not sure where you or anyone else &lt;BR&gt;&gt; &gt; &gt; stand=\r\ns on &quot;fragment identifiers are broken&quot;. I don&#39;t know of any RFC or &lt;BR&gt;&gt;=\r\n &gt; &gt; any IETF document that says this, anywhere.&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt=\r\n; &gt; They&#39;re broken because they couple URIs to media representations. My=\r\n &lt;BR&gt;&gt; &gt; stance fwiw, is not to design them into my systems.&lt;BR&gt;&gt; =\r\n&lt;BR&gt;&gt; &lt;BR&gt;&gt; Sorry, you provide commentary on a design position, but g=\r\nive me no examples. I am not sure what that looks like. You don&#39;t have any =\r\nID tags anywhere in your XML documents??? I think you are fooling me, or ta=\r\nlking past me.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Fragment identifiers are supposed to be ind=\r\nependent of URI media type. I personally think full independence is a littl=\r\ne crazy. That&#39;s tantamount to saying &quot;ah, yes, we can run our enterprise&#39;s =\r\nmission-critical data processing on a network database and don&#39;t need a SQL=\r\n DBMS.&quot; There is a minimum sanity level in the design of any system. It is =\r\nknown in the engineering trades as &quot;margin of safety&quot;.&lt;BR&gt;&gt; &lt;BR&gt;&gt; If =\r\nyour media type does not support fragment identifiers directly, then you ca=\r\nn usually perform what compiler writers call a &quot;worker/wrapper transformati=\r\non&quot;. This is how Google Video brilliantly &quot;just works&quot;. Google Video lets y=\r\nou fragment identify a particular second in a video you are watching, along=\r\n with other options (I forget how to do this, though, since it is not expos=\r\ned anywhere in the GUI.) It can do this because Google Video is not present=\r\ning you WMF or whatever. Instead, it wraps that content in a media player i=\r\nn a Flash container and wraps that Flash container in an HTML document, and=\r\n the DOM model allows the user to manipulate the opaque media type via a DO=\r\nM bridge.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Some media types need this level of virtualizati=\r\non to &quot;just work&quot;, and it is not tightly coupling anything to anything. It =\r\nis simply good design. If you note, we&#39;ve put in two extra degrees of freed=\r\nom from the underlying media type (WMF) just to gain access to WMF&#39;s discre=\r\nte time abilities.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Now, one thing I dislike, and I think y=\r\nou probably do too, is that we use # in place of ?, mainly due to how much =\r\nweb browser&#39;s navigation services suck today. I&#39;ll talk more about this bel=\r\now - and explain my Platonic ideal.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &gt; &gt; No, you have=\r\n it wrong, in my humble opinion. Today, the user agent we &lt;BR&gt;&gt; &gt; &gt=\r\n; all use, The Web Browser Model, is too tightly coupled to the media &lt;BR&gt;&=\r\ngt; &gt; &gt; type. &lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; What I said was that the pr=\r\noblem of understanding formats and objects &lt;BR&gt;&gt; &gt; will be pushed up =\r\nto application developers. This is what happens &lt;BR&gt;&gt; &gt; already today=\r\n with JSON (but not so much with Atom and hardly at all &lt;BR&gt;&gt; &gt; with =\r\nHTML). If I&#39;m wrong, please explain how.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; My initi=\r\nal guess is you are &quot;not even wrong&quot;. I don&#39;t understand how people come up=\r\n with circular arguments like this one. Why on earth would application deve=\r\nlopers be responsible for building media type interpreters??? That just put=\r\ns you back in the EDI world, and will bring about another round of dumb COB=\r\nOL/VSAM-esque ideas like Netron Fusion frame-oriented programming.&lt;BR&gt;&gt; =\r\n&lt;BR&gt;&gt; I will not comment on your JSON concerns, because I need a particu=\r\nlar example. It is too aloof for me to wrap my head around. Could you illus=\r\ntrate by comparing JSON vs. Atom vs. HTML? I understand what all these are,=\r\n but sometimes the differences people see in good design are remarkably sub=\r\ntle. There is a good chance you can simply see a subtlety I cannot without =\r\nthe help of your magnifying glass.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &gt; &gt; The =\r\nWeb Browser is a program that has to know how to render the &lt;BR&gt;&gt; &gt; &=\r\ngt; media formats it receives. It has to be way too smart. I am arguing for=\r\n &lt;BR&gt;&gt; &gt; &gt; the dumbing down of this and returning to a more reason=\r\nable &lt;BR&gt;&gt; &gt; &gt; Object-Oriented approach where &quot;you don&#39;t need a br=\r\nowser&quot;, where your &lt;BR&gt;&gt; &gt; &gt; code and data go together.&lt;BR&gt;&gt; &g=\r\nt; &lt;BR&gt;&gt; &gt; There are systems that do that already and have attempted =\r\nto do that, &lt;BR&gt;&gt; &gt; including the goal of &quot;fixing the web&quot; - they hav=\r\nen&#39;t been adopted even &lt;BR&gt;&gt; &gt; with massive industry backing. Distrib=\r\nuted OO is a niche compared to the &lt;BR&gt;&gt; &gt; Web.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;=\r\n&gt; Sorry. Distributed OO could mean a lot of things. Could you please exp=\r\nlain to me in what sense you are using it? I don&#39;t enjoy hearing a buzzword=\r\n and &quot;there are systems that do that already&quot;, because I can&#39;t figure out w=\r\nhat that means. I much prefer examples in place of buzzwords. I am a firm b=\r\neliever that this sort of assumption -- that other technical people know wh=\r\nat other technical people are talking about -- is why software is so comple=\r\nx.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Here is my take on things... let&#39;s study the evolution =\r\nof a user and his/her user agent (the legacy model of a web browser). This =\r\nis a somewhat philosophical A Discourse by Three Drunkards on Web Browsers.=\r\n...&lt;BR&gt;&gt; &lt;BR&gt;&gt; 1. User installs Operating System, or buys appliance w=\r\nith Operating System, or downloads a VM that is an OS Appliance.&lt;BR&gt;&gt; &lt;B=\r\nR&gt;&gt; 2. They either have a web browser shipped with the OS, or they don&#39;t=\r\n. If they don&#39;t, then they have to download it or install it. Downloading i=\r\ns tricky, because how do you bootstrap the process? Ah, at some point you n=\r\need something to *lead* the bootstrap. We&#39;ll call that leader the browser. =\r\nAt this step, the first bootstrap on the user&#39;s machine ever, the browser c=\r\nould be a user or a user agent.&lt;BR&gt;&gt; &lt;BR&gt;&gt; 3. The browser is now auto=\r\nmagically installed. The browser also automagically knows how to update its=\r\nelf from the Internet, using its own browser networking stack, which is abs=\r\ntracted away from the underlying OS. (This is the way FireFox works today. =\r\nIt gets the latest bits from an authoritative repository, and the next time=\r\n you cycle FireFox, you get the version it downloaded/installed. You also g=\r\net a page that says &quot;You&#39;ve just been upgraded.&quot;)&lt;BR&gt;&gt; &lt;BR&gt;&gt; 4. Your =\r\nbrowser has a somewhat insidious but seemingly innocuous design flaw... it =\r\ncannot automagically substitute rendering engines for HTML, the major media=\r\n type on the Web. As a consequence, your mission-critical Enterprise web ap=\r\np starts behaving weird after some upgrade, because the upgrade included a =\r\nchange to CSS and now all of a sudden that weird CSS hack the webmaster put=\r\n in is breaking everyone&#39;s dashboards. Bar graphs that were normally zeroes=\r\n are now 100%s, and everyone knows something is horribly wrong, and right a=\r\nbout now nobody gives a shit that &quot;FireFox 2020&quot; just passed the Acid6 test=\r\n by the W3C... and the DotCOM CEO is about to commit Hudsucker Proxy-style =\r\nboardroom meeting suicide.&lt;BR&gt;&gt; &lt;BR&gt;&gt; So, basically, to re-cap, if we=\r\nb browsers were more object-oriented, and supported &quot;versionable objects&quot;, =\r\nthen we could stabilize such problems by saying we only support rendering e=\r\nngine COMPONENTs. This is the way .NET works. Your appmanifest.xml can be u=\r\nsed to select which version of a DLL your application should run against. T=\r\nhis is called virtualization and component-oriented software. The former bu=\r\nzzword is really sexy right now and the other is just &quot;meh&quot; to most people.=\r\n&lt;BR&gt;&gt; &lt;BR&gt;&gt; If you look at what Microsoft is doing with Silverlight, =\r\nthey are basically trying to replace the Browser with something more object=\r\n-oriented. For the most part, it is vastly superior, except for the fact th=\r\nat by default it is still hosted inside this monolithic, poorly architected=\r\n notion of a Browser. The bad design of browsers is codified into the DHTML=\r\n model of DOM. JavaScript&#39;s notion of a window is wrong. When you change th=\r\ne URL, using JavaScript, the browser should not automagically fetch the new=\r\n URL. That&#39;s what is wrong with browsers today, that Silverlight and object=\r\n-oriented stuff like it can&#39;t fix. The Web Browser today has no notion of i=\r\nnterstitial concepts that good object-oriented design uses by default. The =\r\nBrowser&#39;s URI navigation bar is very direct, and not controllable by the ap=\r\nplication. Somehow, the Browser has this completely _jacked up_ idea that i=\r\nt knows more about how to dispatch a URI than the application itself. The B=\r\nrowser should really only provide the ability for the application to use HR=\r\nEF-style GOTO behavior as a HELPER function- not as a hardcoded non-modular=\r\n mechanism. And if you don&#39;t see this hardcodedness and how it ties back in=\r\nto the original topic of ? and #, and why people even use # in the first pl=\r\nace, well... it&#39;s because the browser&#39;s navigation bar uses the HREF GOTO m=\r\nodel of navigation. The browser is really this phony hypermedia container w=\r\nannabe, because nothing about the browser has ever been hypermedia-centric =\r\nor object-oriented, and certainly not &quot;Object-Oriented Hypermedia&quot;-centric =\r\nnirvana. That&#39;s why the browser is continuously taken by surprise with idea=\r\ns like XMLHTTPRequest, because the browser is non-modular and people contin=\r\nuously hijack media types (like ActiveX) to provide correct, object-oriente=\r\nd features like XMLHTTPRequest! THINK ABOUT IT.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Silverligh=\r\nt is basically a Virtual Machine-based web browser, done mostly right, but =\r\nstill having to deal with browser interop problems such as (a) the browser =\r\nnetworking stack (b) the browser navigation model&lt;BR&gt;&gt; &lt;BR&gt;&gt; If my Si=\r\nlverlight/Moonlight example frightens you, just s/Silverlight/GWT and Googl=\r\ne Gears/ and we&#39;re now talking about supposedly &quot;do no evil&quot; technology eve=\r\nrybody loves right now. Except, GWT is fundamentally stupider than Silverli=\r\nght, b/c it does not fix the fundamental problem that the browser is not ob=\r\nject-oriented and does not use components. The legacy web browser is not a =\r\ngood model for mission-critical applications, regardless of what Google wan=\r\nts you to believe to pump-up their AdSense/AdWords revenue. Gears cannot fi=\r\nx this. Ever. (Gears is seriously cool, by the way, and I think Silverlight=\r\n+++Gears is even cooler! But most people talk about Microsoft/Google in an =\r\nunholy war sense, so they could never dream of Silverlight and Gears being =\r\nused in conjunction to fix the browser networking stack problems and browse=\r\nr navigation model problems. However, Gears CANNOT fix the component proble=\r\nm. Again, I&#39;ll just point to Joel Spolsky&#39;s Martian Headsets blog entry for=\r\n the best explanation of how messed up this thing is.)&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR=\r\n&gt;&gt; &lt;BR&gt;&gt; &gt; &gt; The idea that a browser should know how to &lt;BR&gt;&gt=\r\n; &gt; &gt; render HTML is backwards. Notice that I am saying the Browser s=\r\nhould &lt;BR&gt;&gt; &gt; &gt; simply be a gateway, and that inside the browser w=\r\ne can embed &lt;BR&gt;&gt; &gt; &gt; application-specific gateways. &lt;BR&gt;&gt; &gt;=\r\n &lt;BR&gt;&gt; &gt; Gateways already exist in the form of CGI. They&#39;re called ga=\r\nteways for &lt;BR&gt;&gt; &gt; reason, as they&#39;re not part of the web architectur=\r\ne.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; Are you snowing me? Your first sentence is spo=\r\nt-on, but your statement that &quot;they&#39;re not part of the web architecture&quot; ov=\r\nerlooks how page-centric web applications operate today. Look at the DISGUS=\r\nTING hacks JBoss does with continuations to solve the fact that the browser=\r\n has no GOOD way to allow the application to define gateways.&lt;BR&gt;&gt; &lt;BR&gt;&=\r\ngt; In theory, you are right. The Web Architecture doesn&#39;t know about gatew=\r\nays.&lt;BR&gt;&gt; &lt;BR&gt;&gt; In practice, you are &quot;not even wrong&quot;, by being close=\r\nd-minded to a set of design criteria you prefer. Understand that the way we=\r\nb browsers work today is just a _talking point_ for what they should look l=\r\nike in the future. The Web -- and The Web Browser Model -- did not have any=\r\n concept of XMLHTTPRequest or anything like that. &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt=\r\n; &gt; &gt; I think of the Browser of the future as a software configuratio=\r\nn &lt;BR&gt;&gt; &gt; &gt; management tool, with ability to get out of the way of=\r\n user &lt;BR&gt;&gt; &gt; &gt; accessibility issues and the like. The Browser sho=\r\nuld give you a &lt;BR&gt;&gt; &gt; &gt; flexible, scalable, distributed model for=\r\n accessing content like &lt;BR&gt;&gt; &gt; &gt; object-oriented programs.&lt;BR&gt;&gt=\r\n; &gt; &lt;BR&gt;&gt; &gt; I think they already do. Was there a specific &quot;not-bro=\r\nwser&quot; application &lt;BR&gt;&gt; &gt; you had in mind?&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt;=\r\n &gt; &lt;BR&gt;&gt; &gt; &gt; You could certainly argue that HTML/XHTML decouple=\r\ns interface from &lt;BR&gt;&gt; &gt; &gt; implementation, but that is a ridiculou=\r\ns argument -- we all know from &lt;BR&gt;&gt; &gt; &gt; just looking at the gold =\r\nstandard for rendering pages, the Acid Test, &lt;BR&gt;&gt; &gt; &gt; that nobody=\r\n can even correctly implement these interfaces. &lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt;=\r\n That&#39;s ok, I didn&#39;t argue that.&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; I think you&#39;ll =\r\nfind that most of the wildly successful formats are not &lt;BR&gt;&gt; &gt; consi=\r\nstently implemented. There&#39;s nothing exceptional about HTML, except &lt;BR&gt;&gt=\r\n; &gt; that &quot;wildly successful&quot; is an understatement.&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt;=\r\n &gt; &lt;BR&gt;&gt; &gt; &gt; So it makes &lt;BR&gt;&gt; &gt; &gt; more sense to talk =\r\nabout shipping a working versionable object, a &lt;BR&gt;&gt; &gt; &gt; component=\r\n, that has code+data. &lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; Why does it make more sen=\r\nse? Code on demand is part of REST, but the &lt;BR&gt;&gt; &gt; history of distri=\r\nbuted objects is dismal. SOAP has failed for Web scale &lt;BR&gt;&gt; &gt; delive=\r\nry. Even JavaScript gets reduced down to JSON.&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; I=\r\nf there&#39;s something beyond the syntax related stuff we do today, I &lt;BR&gt;&gt;=\r\n &gt; suspect it&#39;s likely to be data that has more precise semantics (eg &lt;B=\r\nR&gt;&gt; &gt; KIF/RDF/OWL) and in the interim, formats like atom, microformat=\r\ns and &lt;BR&gt;&gt; &gt; rdfa, maybe json based vocabularies.&lt;BR&gt;&gt; &gt; &lt;BR&gt;&=\r\ngt; &gt; Developers like their objects so I guess people will keep trying t=\r\no go &lt;BR&gt;&gt; &gt; down that path, and you seem happy to do so. Otherwise t=\r\nhis debate is &lt;BR&gt;&gt; &gt; years old, and I&#39;ve seen nothing in over a deca=\r\nde that suggests we&#39;ll &lt;BR&gt;&gt; &gt; move off the current web to something =\r\napproaching OO, not matter how &lt;BR&gt;&gt; &gt; stupid it seems to be each gen=\r\neration of programmers that discover the &lt;BR&gt;&gt; &gt; web and immediately =\r\nwonder how to fix it.&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; I don&#39;t know what KIF is. I=\r\n don&#39;t know what RDFA is. I know the others. I think the thing you are miss=\r\ning here is that I am not against any of these ideas, and actually see my v=\r\nision of the browser as complementary to Tim Berners-Lee&#39;s vision of the Se=\r\nmantic Web and even Google&#39;s vision of the semantic web. This is hard for m=\r\ne to confess, because my greatest weakness is being so visionary and closed=\r\n-minded. Yet, ya know, these semantic people know what they&#39;re talking abou=\r\nt. I am not trying to &quot;fix&quot; anything there. I&#39;m just waiting for them to br=\r\ning me results so I can take advantage of it.&lt;BR&gt;&gt; &lt;BR&gt;&gt; As an aside,=\r\n more pragmatically, you can&#39;t OWL everything and you don&#39;t want to. This i=\r\ns the same reason why Microsoft doesn&#39;t make .NET more modular. OWL means a=\r\nll your content on the web is totally modular, fully exposed semantics. For=\r\n a lot of companies, this means that they are inviting competition. For exa=\r\nmple, where I work a company currently complements our product by providing=\r\n rich hypermedia like videos to our clients, while we provide highly struct=\r\nured and organized content that is optimized for stereotyped workflows. If =\r\nall our content was &quot;out there&quot;, then the rich hypermedia competitor could =\r\njust siphon us. At that point, they can go to our clients and say, &quot;we have=\r\n all the data you care about, and will charge you half the price.&quot; Basicall=\r\ny, they would be copying our specification (the hardest thing in software t=\r\no build).&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &gt; &gt; I guess I am reading your sen=\r\ntence as &quot;Unfortunately this is a detail we &lt;BR&gt;&gt; &gt; &gt; do not talk =\r\nabout, even though it needs improvement.&quot; Perhaps not fair, &lt;BR&gt;&gt; &gt; &=\r\ngt; but where else are you leading me? It sounds like what I need to hear &lt;=\r\nBR&gt;&gt; &gt; &gt; then is &quot;stop going down this direction, you need to re-c=\r\nrystallize, &lt;BR&gt;&gt; &gt; &gt; here is what you need to go and where you ne=\r\ned to go.&quot;&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; I would say distributed objects in th=\r\ne way you&#39;re talking about them are &lt;BR&gt;&gt; &gt; a dead end, yes.&lt;BR&gt;&gt; =\r\n&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; I never used the phrase &quot;distributed objects&quot;, a=\r\nnywhere. You put that word in my mouth. I am spitting it out. I don&#39;t even =\r\nknow what the heck you mean by &quot;distributed objects&quot;. You are really being =\r\nbasically the ultimate buzzkill -- using buzzwords with connotative meaning=\r\ns and slapping them onto what I am discussing.&lt;BR&gt;&gt; &lt;BR&gt;&gt; This is why=\r\n we have a thread about re-acronymizing everything under the sun. And exact=\r\nly why that thread is one of the longest discussions on here in a long time=\r\n.&lt;BR&gt;&gt; &lt;BR&gt;&gt; I think I am personally too closed-minded and visionary =\r\nto be brought down by anyone who wants to buzzkill me. I know exactly what =\r\nI want, and despite being an average programmer, I am a very great API desi=\r\ngner. Amazingly, I didn&#39;t go to Stanford and I didn&#39;t get hired by Sun to c=\r\nreate a super-complicated J2EE EJB 1.0 specification or get hired by Micros=\r\noft to chair a steering committee for ATL or DCOM. I know, my credentials s=\r\nuck!&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; -----------------=\r\n-------------------&lt;BR&gt;&gt; &lt;BR&gt;&gt; Yahoo! Groups Links&lt;BR&gt;&gt; &lt;BR&gt;&gt; &=\r\nlt;*&gt; To visit your group on the web, go to:&lt;BR&gt;&gt; http://groups.yahoo=\r\n.com/group/rest-discuss/&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;*&gt; Your email settings:&lt;BR=\r\n&gt;&gt; Individual Email | Traditional&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;*&gt; To change s=\r\nettings online go to:&lt;BR&gt;&gt; http://groups.yahoo.com/group/rest-discuss/jo=\r\nin&lt;BR&gt;&gt; (Yahoo! ID required)&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;*&gt; To change settin=\r\ngs via email:&lt;BR&gt;&gt; mailto:rest-discuss-digest@yahoogroups.com &lt;BR&gt;&gt; m=\r\nailto:rest-discuss-fullfeatured@yahoogroups.com&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;*&gt; =\r\nTo unsubscribe from this group, send an email to:&lt;BR&gt;&gt; rest-discuss-unsu=\r\nbscribe@yahoogroups.com&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;*&gt; Your use of Yahoo! Group=\r\ns is subject to:&lt;BR&gt;&gt; http://docs.yahoo.com/info/terms/&lt;BR&gt;&gt; &lt;BR&gt;&lt;br =\r\n/&gt;&lt;hr /&gt;View your Twitter and Flickr updates from one place =96 &lt;a href=3D&#39;=\r\nhttp://clk.atdmt.com/UKM/go/137984870/direct/01/&#39; target=3D&#39;_new&#39;&gt;Learn mor=\r\ne!&lt;/a&gt;&lt;/body&gt;\n&lt;/html&gt;\r\n--_145f1113-0444-457e-95cb-35c5c76f0302_--\r\n\n"}}