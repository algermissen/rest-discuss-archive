{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"5xiNnP3Lh45DHh9MnKKPLDxBfkF79Z71f96iMzqP2fGYEO6P_4gGxLMALBKlmdB7-v5Xtqc9iyOlV9JQuMdfgJWEUQEocb2zm6xTFT5aVA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] calling options before put","postDate":"1264181076","msgId":14635,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwMTIyMTAyNDM2LmM2NTM4OWQ3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwMTIyMTAyMDU0LjU3MjRjZGRkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDRCNTlENkQ0LjgwMTAyMDZAZGVob3JhLm5ldD4JPDIwMTAwMTIyMTAyMDU0LjU3MjRjZGRkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":14633,"nextInTopic":14637,"prevInTime":14634,"nextInTime":14636,"topicId":14630,"numMessagesInTopic":10,"msgSnippet":"As a server implementer, why should I have to implement OPTIONS just to support PUT for clients which incorrectly treat the Allow header as authoritative?  I","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20392 invoked from network); 22 Jan 2010 17:24:31 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m13.grp.re1.yahoo.com with QMQP; 22 Jan 2010 17:24:31 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 22 Jan 2010 17:24:31 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 6455F509DB;\n\tFri, 22 Jan 2010 12:24:30 -0500 (EST)\r\nDate: Fri, 22 Jan 2010 10:24:36 -0700\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Bill de hOra &lt;bill@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100122102436.c65389d7.eric@...&gt;\r\nIn-Reply-To: &lt;20100122102054.5724cddd.eric@...&gt;\r\nReferences: &lt;4B59D6D4.8010206@...&gt;\n\t&lt;20100122102054.5724cddd.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] calling options before put\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nAs a server implementer, why should I have to implement OPTIONS just to\nsupport PUT for clients which incorrectly treat the Allow header as\nauthoritative?  I have enough on my plate...\n\n-Eric\n\n&quot;Eric J. Bowman&quot; wrote:\n&gt;\n&gt; Bill de hOra wrote:\n&gt; &gt; \n&gt; &gt; I&#39;m hearing that before issuing a HTTP PUT request from JavaScript,\n&gt; &gt; more recent browsers are sending out HTTP OPTIONS on the request\n&gt; &gt; resource to verify that the PUT method is supported. If the OPTIONS\n&gt; &gt; request returns with a 200 OK and specifies that PUT is allowed\n&gt; &gt; everything is alright. If not the browser will not execute the PUT\n&gt; &gt; (whether or not the resource supports it). Is this sane behavior\n&gt; &gt; from a UA, to check for just one method?\n&gt; &gt; \n&gt; \n&gt; I think it&#39;s incorrect behavior.  Many httpds are hard-coded to\n&gt; respond to OPTIONS requests by sending the Allow header.  But,\n&gt; there&#39;s no reason not to make Allow available in response to HEAD\n&gt; requests.  Otherwise you get into the issue of what sort of entity to\n&gt; return with OPTIONS, and that&#39;s undefined territory.\n&gt; \n&gt; Whereas, if the request simply intends to check a resource header, no\n&gt; entity is needed.  So I send Allow in response to both GET and HEAD,\n&gt; and keep OPTIONS unimplemented until I&#39;ve figured out what to do with\n&gt; it (a backend management interface, perhaps).\n&gt; \n&gt; IMO, what a UA SHOULD do, is to see if a HEAD request generates an\n&gt; Allow response header before falling back to the less-desirable\n&gt; OPTIONS. Do it right, instead of hard-coding an archaic and\n&gt; inefficient solution to retrieving Allow headers.\n&gt; \n&gt; -Eric\n&gt; \n\n"}}