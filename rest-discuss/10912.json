{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":83951433,"authorName":"Michael Schuerig","from":"Michael Schuerig &lt;michael@...&gt;","profile":"mschuerig","replyTo":"SENDER","senderId":"LJQF_1qwsnkWLhnBPWQEqbAxt_07CYCLpwcydq-xGQnHmEGf7HBZ3sFrkVloqTAUZSxRyLB--f2o0oeaWxtyq_dBemGmMgz9822mgZM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Pretty URLs, sessions, and no cookies","postDate":"1213171316","msgId":10912,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwNjExMTAwMS41Nzg1OS5taWNoYWVsQHNjaHVlcmlnLmRlPg==","inReplyToHeader":"PGI1NDhkZjY1MDgwNjEwMTgyMnE2NDU2ZmRhNW1mYTQ2ZjMwNDgzNTNjYTRlQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIwMDgwNjEwMTYyNTMzLmFhOWEzZmIzNTViZDc2NzM1MjY4OGM2MjE1MDRkZjI0LjkwYzBjNmRkODkud2JlQGVtYWlsLnNlY3VyZXNlcnZlci5uZXQ+IDwyMDA4MDYxMTAyNTguMTQzMzMubWljaGFlbEBzY2h1ZXJpZy5kZT4gPGI1NDhkZjY1MDgwNjEwMTgyMnE2NDU2ZmRhNW1mYTQ2ZjMwNDgzNTNjYTRlQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":10911,"nextInTopic":10913,"prevInTime":10911,"nextInTime":10913,"topicId":10886,"numMessagesInTopic":28,"msgSnippet":"... Unfortunately, because they are what they are, they are not acceptable. I see your point regarding non-human interaction, but that s a different issue. ...","rawEmail":"Return-Path: &lt;michael@...&gt;\r\nX-Sender: michael@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11126 invoked from network); 11 Jun 2008 08:02:00 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m53.grp.scd.yahoo.com with QMQP; 11 Jun 2008 08:02:00 -0000\r\nX-Received: from unknown (HELO mo-p00-ob.rzone.de) (81.169.146.161)\n  by mta17.grp.scd.yahoo.com with SMTP; 11 Jun 2008 08:02:00 -0000\r\nX-RZG-CLASS-ID: mo00\r\nX-RZG-AUTH: j/CSQHCfRQKvW4G46JZwzEZ54bg5diTyswTEkEe1vk+mLRvp5/UBhEiSt2/lwAZt\r\nX-Received: from noname (xdsl-81-173-152-59.netcologne.de [81.173.152.59])\n\tby post.webmailer.de (klopstock mo56) (RZmta 16.42)\n\twith ESMTP id 500bb7k5B60QlU for &lt;rest-discuss@yahoogroups.com&gt;;\n\tWed, 11 Jun 2008 10:01:58 +0200 (MEST)\n\t(envelope-from: &lt;michael@...&gt;)\r\nTo: rest-discuss@yahoogroups.com\r\nDate: Wed, 11 Jun 2008 10:01:56 +0200\r\nUser-Agent: KMail/1.9.9\r\nReferences: &lt;20080610162533.aa9a3fb355bd767352688c621504df24.90c0c6dd89.wbe@...&gt; &lt;200806110258.14333.michael@...&gt; &lt;b548df650806101822q6456fda5mfa46f3048353ca4e@...&gt;\r\nIn-Reply-To: &lt;b548df650806101822q6456fda5mfa46f3048353ca4e@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n  charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nMessage-Id: &lt;200806111001.57859.michael@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Michael Schuerig &lt;michael@...&gt;\r\nSubject: Re: Pretty URLs, sessions, and no cookies\r\nX-Yahoo-Group-Post: member; u=83951433; y=EaYp3Fpzzekyri_VcWnlnd0e-5a_pwBLLTrBRegDSfa0qfe7\r\nX-Yahoo-Profile: mschuerig\r\n\r\nOn Wednesday 11 June 2008, mike amundsen wrote:\n&gt; Michael:\n&gt;\n&gt; Some comments on the HTTP Auth issue:\n&gt; First, HTTP Auth is your best (safest, easiest, most portable) way to\n&gt; identify your users. This is especially true when you start\n&gt; supporting non-human interaction with your applications.  While the\n&gt; dialogs offered by common browsers are disappointing, they are what\n&gt; they are.\n\nUnfortunately, because they are what they are, they are not acceptable. \nI see your point regarding non-human interaction, but that&#39;s a \ndifferent issue.\n\n&gt; Second, I found that I *want* authentication to be &#39;out-of-band.&#39;  I\n&gt; don&#39;t want to write code in my application to present these dialogs,\n&gt; accept, validate, and process the inputs. I just want the\n&gt; authentication to be done and the results handed off to me.  I also\n&gt; do not want to &#39;carry&#39; lots of (possibly dangerous) metadata around\n&gt; or store it in disk or memory on the server. HTTP Auth handles all\n&gt; this quite nicely.\n\nI agree with the general point, but the practical problem really is how \nthe HTTP Auth header gets populated, i.e., the out-of-band dialog. Just \nimagine any major site switching to this kind of authentication dialog. \nI wouldn&#39;t expect users to be pleased.\n\n&gt; Thrid, there are a number of &#39;work-arounds&#39; to the browser dialog if\n&gt; you really want to try to hide this. Paul James has posted some fine\n&gt; material on the subject. There are others, too.\n\nI&#39;ve skimmed some of &lt;http://www.peej.co.uk/&gt; and tried \n&lt;http://www.peej.co.uk/articles/http-auth-with-html-forms.html&gt;. It \ndidn&#39;t work in my browser (Konqueror). \n\n&gt; Now about the the URLs:\n&gt; I&#39;ve come to think that URLs are cheap and you can mint lots of them.\n&gt; I see no reason to *not* present users w/ &#39;personalized&#39; URLs\n&gt; (/recent-updates/mike/). That doesn&#39;t mean you need to always pass\n&gt; these personalized URIs to the client. For example, a call to\n&gt; /recent-updates/ might get the server to check the credentials and\n&gt; then forward the request to the &#39;personalized&#39; URL. If the client has\n&gt; not authenticated, then the server will not forward to the custom URL\n&gt; and just present the &#39;public&#39; document that lives at /recent-updates/\n&gt; (which might include a link to login).\n&gt;\n&gt; Another reason to consider URLs that include identifying data is that\n&gt; they are rather easy to secure. For example, if your personalized\n&gt; URLs all contain ../users/&lt;user-id&gt;/.. you can write server code that\n&gt; validates the requested URL against the login credentails and rejects\n&gt; improperly authenticated requests.\n\nI really want to avoid personalized URLs. Most of all, because users \npass URLs to other users. As you say, a personalized URL can be secured \nnonetheless, but the effect is that the receiver can&#39;t really get at \nthe resource they were pointed to. Better to give them a URL that they \ncan retrieve.\n\n&gt; Caching comes into play, too. If you present a document from\n&gt; /my-data/ that has been built up on the server using metadata (user\n&gt; id, session-id, etc.), it&#39;s possible that some server will cache that\n&gt; page. If another user comes along (an un-authed user) and requests\n&gt; the same URL, they might get the wrong data. Of course, you can mark\n&gt; all your content as non-cacheable, but is that what you want?\n\nYes, I think making authorized content non-cacheable is what I want.\n\n\nI&#39;d like to point out that I appreciate all the replies I&#39;ve received. \nMy fussyness about the proposed solutions is mainly due to the fact \nthat I&#39;m already quite happy with my current approach using cookies. \nIt&#39;s just that I&#39;d like to make that further step of getting rid of the \ncookies.\n\nMichael\n\n-- \nMichael Schuerig\nmailto:michael@...\nhttp://www.schuerig.de/michael/\n\n"}}