{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":490985547,"authorName":"Daniel Roussel","from":"Daniel Roussel &lt;daniel@...&gt;","profile":"manichelo","replyTo":"SENDER","senderId":"ZywJs6NwgdcKUDlpN7_lfZ6bmUqNC8l26lEUxTvd88Fcgnl7TQp0aFv6JPDnf-z5uVxEtXPwXSherOrX2DmWZQjz-OIlW_7EURXT","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: REST and HATEOAS in the context of native applications?","postDate":"1311879579","msgId":17628,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBK0NFNllWRUJoeW9xPXArbjdFZGpIWFFnMkpUVGp4OE5pTDFWMFVSYz04TnJ0YVNlUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTEwNzI4MTIzNjM5Ljk3NGMxMWU4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPgk8ajBzNXR2K2Q1am9AZUdyb3Vwcy5jb20+CTwyMDExMDcyODEyMzYzOS45NzRjMTFlOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":17627,"nextInTopic":17629,"prevInTime":17627,"nextInTime":17629,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"No offense, sincerely, but I disagree.  HTML is a content-type meant to be rendered by a web browser and its semantics are of (almost) no use for any ","rawEmail":"Return-Path: &lt;daniel@...&gt;\r\nX-Sender: daniel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 4542 invoked from network); 28 Jul 2011 18:59:40 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 28 Jul 2011 18:59:40 -0000\r\nX-Received: from unknown (HELO mail-vx0-f169.google.com) (209.85.220.169)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Jul 2011 18:59:40 -0000\r\nX-Received: by vxg38 with SMTP id 38so3115904vxg.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 28 Jul 2011 11:59:40 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.52.155.173 with SMTP id vx13mr391096vdb.411.1311879579916;\n Thu, 28 Jul 2011 11:59:39 -0700 (PDT)\r\nX-Received: by 10.52.164.193 with HTTP; Thu, 28 Jul 2011 11:59:39 -0700 (PDT)\r\nIn-Reply-To: &lt;20110728123639.974c11e8.eric@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt;\n\t&lt;j0s5tv+d5jo@...&gt;\n\t&lt;20110728123639.974c11e8.eric@...&gt;\r\nDate: Thu, 28 Jul 2011 14:59:39 -0400\r\nMessage-ID: &lt;CA+CE6YVEBhyoq=p+n7EdjHXQg2JTTjx8NiL1V0URc=8NrtaSeQ@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=bcaec5395efc59598704a925c4be\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Daniel Roussel &lt;daniel@...&gt;\r\nSubject: Re: [rest-discuss] Re: REST and HATEOAS in the context of native applications?\r\nX-Yahoo-Group-Post: member; u=490985547; y=ZVxojcL57KJyavofi5byzzZF94iKdlkPFzt6cJcURp4IXErE\r\nX-Yahoo-Profile: manichelo\r\n\r\n\r\n--bcaec5395efc59598704a925c4be\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nNo offense, sincerely, but I disagree.  HTML is a content-type meant to be\nrendered by a web browser and its semantics are of (almost) no use for any\napplication other then a web browser.  Parsing web pages to drive a native\niPhone or Android app is not a sensible choice at all.\n\nAnd the choice of html, json or xml is only an issue of resource\nrepresentation.  A resource can have many different representation, that for\nsure is permitted.  There is nothing about renting a room which can&#39;t be\nexpressed in english, but I would not send a wav file either.  Even more,\nusing mime-type is necessary because we are using HTTP as our protocol, I&#39;m\nsure we could create a brand new protocol and a different way of defining\nmessages and it could still be RESTful.\n\nAs for cacheability, the constraint is that resource must be cacheable by\nthe client.  The way I interpret this, is that my application should be able\nto cache a room representation if marked as being cacheable.  REST is an\narchitectural style, it does not mandate the use of any protocol or data\ntype, merely how to model a system.  Note that I understand the benefit of\nreusing existing technologies as much as possible, but only when it make\nsense.\n\nDaniel\n\nP.S.:  Thanks for the media type correction, in my case, the x-perimental\nones would be more appropriate.\n\n\nOn Thu, Jul 28, 2011 at 2:36 PM, Eric J. Bowman &lt;eric@...&gt;wrote:\n\n&gt; &quot;Daniel Roussel&quot; wrote:\n&gt; &gt;\n&gt; &gt; Now, my understanding of it is that what MUST be known a priori are\n&gt; &gt; the Media Types which will be exchanged along with the possible\n&gt; &gt; relationship.  A particular client would obviously be coded to\n&gt; &gt; support this/those media types.  Just as a browser understands a\n&gt; &gt; resource of type text/html, image/jpeg, etc, my app would understand\n&gt; &gt; resources of type application/rent-a-room+xml for example.\n&gt; &gt;\n&gt;\n&gt; My usual caveats still apply -- this isn&#39;t quite REST, because\n&gt; intermediaries won&#39;t understand the media type (which should be\n&gt; registered as application/vnd.rent-a-room+xml as your syntax is reserved\n&gt; for registered, standards-track media types; or, use application/x.rent-\n&gt; a-room+xml if you don&#39;t intend to register your media type).  On\n&gt; the Web, the desired property of scalability is achieved by re-using\n&gt; ubiquitous media types. There is nothing about renting a room which\n&gt; can&#39;t be expressed as HTML, so why not re-use HTML?  That way, all the\n&gt; vast-and-sundry components which do interesting things with ubiquitous\n&gt; media types like text/html can participate in the communication.\n&gt;\n&gt; When you send unknowns in Content-Type, you limit yourself to caching,\n&gt; and maybe not even that as many caches are configured to only cache a\n&gt; handful of ubiquitous media types which cover the bulk of the traffic\n&gt; they encounter.  Why waste cache resources on media types nobody uses?\n&gt; What do links look like in application/vnd.rent-a-room+xml, and how are\n&gt; intermediaries supposed to recognize them as links?\n&gt;\n&gt; Various other desired properties of REST are impacted as well, like\n&gt; maintainability -- better to re-use standard libraries most developers\n&gt; understand, than custom libraries code maintainers have to be trained\n&gt; on.  Most HTTP components out there have a-priori knowledge of &lt;a&gt; in\n&gt; multiple media types, which is why they can follow links.  REST is\n&gt; about playing to the capabilities of the deployed Web infrastructure,\n&gt; rather than bucking them.\n&gt;\n&gt; -Eric\n&gt;\n\r\n--bcaec5395efc59598704a925c4be\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nNo offense, sincerely, but I disagree. =A0HTML is a content-type meant to b=\r\ne rendered by a web browser and its semantics are of (almost) no use for an=\r\ny application other then a web browser. =A0Parsing web pages to drive a nat=\r\nive iPhone or Android app is not a sensible choice at all. =A0&lt;div&gt;\n&lt;br&gt;&lt;/d=\r\niv&gt;&lt;div&gt;And the choice of html, json or xml is only an issue of resource re=\r\npresentation. =A0A resource can have many different representation, that fo=\r\nr sure is permitted. =A0There is nothing about renting a room which can&#39=\r\n;t be expressed in english, but I would not send a wav file either. =A0Even=\r\n more, using mime-type is necessary because we are using HTTP as our protoc=\r\nol, I&#39;m sure we could create a brand new protocol and a different way o=\r\nf defining messages and it could still be RESTful.=A0&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;A=\r\ns for cacheability, the constraint is that resource must be cacheable by th=\r\ne client. =A0The way I interpret this, is that my application should be abl=\r\ne to cache a room representation if marked as being cacheable. =A0REST is a=\r\nn architectural style, it does not mandate the use of any protocol or data =\r\ntype, merely how to model a system. =A0Note that I understand the benefit o=\r\nf reusing existing technologies as much as possible, but only when it make =\r\nsense.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Daniel&lt;br&gt;&lt;div&gt;&lt;br&gt;P.S.: =A0Thanks for the=\r\n media type correction, in my case, the x-perimental ones would be more app=\r\nropriate.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, J=\r\nul 28, 2011 at 2:36 PM, Eric J. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mai=\r\nlto:eric@...&quot;&gt;eric@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n=\r\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1p=\r\nx #ccc solid;padding-left:1ex;&quot;&gt;&lt;div class=3D&quot;im&quot;&gt;&quot;Daniel Roussel&quot=\r\n; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Now, my understanding of it is that what MUST be=\r\n known a priori are&lt;br&gt;\n&gt; the Media Types which will be exchanged along =\r\nwith the possible&lt;br&gt;\n&gt; relationship. =A0A particular client would obvio=\r\nusly be coded to&lt;br&gt;\n&gt; support this/those media types. =A0Just as a brow=\r\nser understands a&lt;br&gt;\n&gt; resource of type text/html, image/jpeg, etc, my =\r\napp would understand&lt;br&gt;\n&gt; resources of type application/rent-a-room+xml=\r\n for example.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;My usual caveats still apply -- this =\r\nisn&#39;t quite REST, because&lt;br&gt;\nintermediaries won&#39;t understand the m=\r\nedia type (which should be&lt;br&gt;\nregistered as application/vnd.rent-a-room+xm=\r\nl as your syntax is reserved&lt;br&gt;\nfor registered, standards-track media type=\r\ns; or, use application/x.rent-&lt;br&gt;\na-room+xml if you don&#39;t intend to re=\r\ngister your media type). =A0On&lt;br&gt;\nthe Web, the desired property of scalabi=\r\nlity is achieved by re-using&lt;br&gt;\nubiquitous media types. There is nothing a=\r\nbout renting a room which&lt;br&gt;\ncan&#39;t be expressed as HTML, so why not re=\r\n-use HTML? =A0That way, all the&lt;br&gt;\nvast-and-sundry components which do int=\r\neresting things with ubiquitous&lt;br&gt;\nmedia types like text/html can particip=\r\nate in the communication.&lt;br&gt;\n&lt;br&gt;\nWhen you send unknowns in Content-Type, =\r\nyou limit yourself to caching,&lt;br&gt;\nand maybe not even that as many caches a=\r\nre configured to only cache a&lt;br&gt;\nhandful of ubiquitous media types which c=\r\nover the bulk of the traffic&lt;br&gt;\nthey encounter. =A0Why waste cache resourc=\r\nes on media types nobody uses?&lt;br&gt;\nWhat do links look like in application/v=\r\nnd.rent-a-room+xml, and how are&lt;br&gt;\nintermediaries supposed to recognize th=\r\nem as links?&lt;br&gt;\n&lt;br&gt;\nVarious other desired properties of REST are impacted=\r\n as well, like&lt;br&gt;\nmaintainability -- better to re-use standard libraries m=\r\nost developers&lt;br&gt;\nunderstand, than custom libraries code maintainers have =\r\nto be trained&lt;br&gt;\non. =A0Most HTTP components out there have a-priori knowl=\r\nedge of &lt;a&gt; in&lt;br&gt;\nmultiple media types, which is why they can follow=\r\n links. =A0REST is&lt;br&gt;\nabout playing to the capabilities of the deployed We=\r\nb infrastructure,&lt;br&gt;\nrather than bucking them.&lt;br&gt;\n&lt;font color=3D&quot;#888888&quot;=\r\n&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--bcaec5395efc59598704a925c4be--\r\n\n"}}