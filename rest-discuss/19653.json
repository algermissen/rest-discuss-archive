{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":323709912,"authorName":"Erik Wilde","from":"Erik Wilde &lt;dret@...&gt;","profile":"drethoo","replyTo":"SENDER","senderId":"zUGA7lGu2JuBMhGeKUYKkPqy_oXvCF0ZxTL5SjaOSGvYbZ0_uxJiZCEoGdQt8wzJpGI6nVWCwD4VDlg73FUXIayi0LgA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400625209","msgId":19653,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUzN0JEODM5LjMwMTA5MDBAYmVya2VsZXkuZWR1Pg==","inReplyToHeader":"PDIwOTA3NDY1LmFPWjJqMDNwVHNAZnVjaHNpYT4=","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPiA8NDM3NjcyMTEudGd1TWJqcHJ1aUBmdWNoc2lhPiA8NTM3ODA5QTEuMTA2MDMwN0BiZXJrZWxleS5lZHU+IDwyMDkwNzQ2NS5hT1oyajAzcFRzQGZ1Y2hzaWE+"},"prevInTopic":19652,"nextInTopic":19654,"prevInTime":19652,"nextInTime":19654,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"hello michael. On 2014-05-18, 8:02 , Michael Schuerig michael.lists@schuerig.de ... HTTP has persistent connections and that s perfectly fine. because it s ","rawEmail":"Return-Path: &lt;dret@...&gt;\r\nX-Sender: dret@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 67449 invoked by uid 102); 20 May 2014 22:33:32 -0000\r\nX-Received: from unknown (HELO mtaq6.grp.bf1.yahoo.com) (10.193.84.37)\n  by m16.grp.bf1.yahoo.com with SMTP; 20 May 2014 22:33:32 -0000\r\nX-Received: (qmail 16660 invoked from network); 20 May 2014 22:33:31 -0000\r\nX-Received: from unknown (HELO cm03fe.IST.Berkeley.EDU) (169.229.218.144)\n  by mtaq6.grp.bf1.yahoo.com with SMTP; 20 May 2014 22:33:31 -0000\r\nX-Received: from airbears-136-152-7-105.airbears.berkeley.edu ([136.152.7.105] helo=dretpro.local)\n\tby cm03fe.ist.berkeley.edu with esmtpsa (TLSv1:AES128-SHA:128)\n\t(Exim 4.76)\n\t(auth plain:dret@...)\n\t(envelope-from &lt;dret@...&gt;)\n\tid 1WmsbB-0006Ab-Cg; Tue, 20 May 2014 15:33:31 -0700\r\nMessage-ID: &lt;537BD839.3010900@...&gt;\r\nDate: Tue, 20 May 2014 15:33:29 -0700\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Thunderbird/24.4.0\r\nMIME-Version: 1.0\r\nTo: Michael Schuerig &lt;michael.lists@...&gt;, \n rest-discuss@yahoogroups.com\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt; &lt;43767211.tguMbjprui@fuchsia&gt; &lt;537809A1.1060307@...&gt; &lt;20907465.aOZ2j03pTs@fuchsia&gt;\r\nIn-Reply-To: &lt;20907465.aOZ2j03pTs@fuchsia&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=323709912; y=hY4uyMKs9HMJW7Ia9zyXcZaLAxx8k-zxqGEGYmptaAFomQ\r\nX-Yahoo-Profile: drethoo\r\nFrom: Erik Wilde &lt;dret@...&gt;\r\n\r\nhello michael.\n\nOn 2014-05-18, 8:02 , Michael Schuerig michael.lists@... \n[rest-discuss] wrote:\n&gt; On Saturday 17 May 2014 18:15:13 Erik Wilde dret@... [rest-\n&gt; discuss] wrote:\n&gt; My understanding may be wrong and I&#39;m perfectly willing to tone down the\n&gt; RESTful ideal for practical purposes. The point I&#39;m trying to make is\n&gt; purely a matter of classification, ie that I think persistent\n&gt; connections are not RESTful.\n\nHTTP has persistent connections and that&#39;s perfectly fine. because it&#39;s \northogonal to the *interactions*. what would be bad would be if the \npersistent connection established some context that was necessary for \nthe individual interactions. what is not a problem at all is to keep the \nTCP connection open and have multiple HTTP interactions across it, \nbecause that saves networking resources, and reusing the TCP connection \nis just an optimization.\n\nhow connections are managed really is not so much a concern for the \nHTTP/REST perspective. it just has to be done in a way that system \ndesign does not depend on established session state.\n\n&gt;&gt; but it is entirely possible to envisage that HTTP pull is like UPS\n&gt;&gt; ground and free, whereas there may be UPS overnight which costs a bit\n&gt;&gt; but is faster. if you do that, you get to specify your identifier, and\n&gt;&gt; then (and this is why i call this &quot;reverse REST&quot;) you become the\n&gt;&gt; resource to be pushed to, i.e. your resource needs to be known by the\n&gt;&gt; event source. there are tons of PubSub approaches out there, only\n&gt;&gt; that coming up with one that works robustly and in a scalable at web\n&gt;&gt; scale so far hasn&#39;t worked. the main reason is that for pull, sources\n&gt;&gt; don&#39;t need to know the consumers, whereas for push that state needs\n&gt;&gt; to be maintained, which is expensive.\n&gt; So, is &quot;reverse REST&quot; still RESTful? Yes, the individual push request\n&gt; from server to client probably qualifies. The architecture as a whole\n&gt; probably doesn&#39;t. As you write, state needs to be maintained which\n&gt; hinders scalability.\n\nit just makes things more expensive, and depending on what you&#39;re trying \nto achieve, you might be willing to pay this cost, or not. introducing \nsubscribers as resources certainly changes the picture and affects \nscalability quite a bit, but that does not mean that the resulting \ndesign is not RESTful anymore. as long as interactions are \nresource-oriented and stateless, and resource representations are using \nhypermedia, all is well.\n\n&gt; A truly RESTful solution would have to do without such state. *I* don&#39;t\n&gt; see how that is possible, but that&#39;s why I started this discussion.\n\nhttp://roy.gbiv.com/untangled/2008/paper-tigers-and-hidden-dragons might \nbe interesting to read, and looks at similar issues. but it also makes \nsome assumptions, such as that the service compiling this &quot;here is what \nchanged&quot; list access to this information somehow.\n\n&gt; Also, I&#39;d like to repeat that I don&#39;t mean not being RESTful, or not\n&gt; being reactive, as some kind of condemnation. Both approaches offer very\n&gt; sensible advice in general, I&#39;m interested in seeing how well they fit\n&gt; together.\n\nit&#39;s a good question and one that probably will become increasingly \nimportant, the more real-time information sources (such as sensors) we \nhave, and the more we have apps that want to consume this information. \npersonally, i don&#39;t think there&#39;s an easy answer here, it all depends on \nthe scenario.\n\nfor example, on http://tiledfeeds.yimingliu.com/ we propose an \narchitecture where we aggregate resources spatially, and then build a \n(pull-oriented) delivery architecture on top of that. that works well if \nand only if your resources are spatially distributed. and if you feel \nlike it, you could still PuSH-enable those tiled feeds, but then you&#39;d \nrun into the &quot;subscriber management cost&quot; issue mentioned above.\n\nif you don&#39;t want/need push, you can simply start reading \nhttp://geofeeds.org/earthquakes/02301021.xml, refresh your copy \noccasionally, and you&#39;ll get all the information about major earthquakes \nin california (which right now will never change, because this is a \nstatic demo and not connected to a live feed of earthquake data).\n\ncheers,\n\ndret.\n\n"}}