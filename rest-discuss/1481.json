{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"897x5FfDFvmpGLz6x-Ul7iKmlutj_uhVPUysLgPF2H9ZkPQWC3VlXYmEs9P0kGOstnNCklIlS5B9zOvz4VVQmYezueIKcg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] a RESTful architecture?","postDate":"1023922395","msgId":1481,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMDdEMERCLkQyNUMwOTczQHByZXNjb2QubmV0Pg==","referencesHeader":"PDAxNjAwMWMyMTFiNiQ2MmYzMDkxMCQ4YTI2NWZhNkBDQVJMU0IxSkFESUFNTz4gPDUuMS4wLjE0LjAuMjAwMjA2MTIyMDQxMDguMDFhZWUyZThAMTkyLjE2OC4wLjU+"},"prevInTopic":1480,"nextInTopic":1482,"prevInTime":1480,"nextInTime":1482,"topicId":1457,"numMessagesInTopic":27,"msgSnippet":"... I m not sure why both of your designs includes a link instead of just inlining the schema or form . Think of it like an HTML page with a form at the","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 12 Jun 2002 22:52:58 -0000\r\nReceived: (qmail 22135 invoked from network); 12 Jun 2002 22:52:56 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m11.grp.scd.yahoo.com with QMQP; 12 Jun 2002 22:52:56 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.scd.yahoo.com with SMTP; 12 Jun 2002 22:52:56 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5CMqm727552;\n\tWed, 12 Jun 2002 15:52:48 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5CMqme09498;\n\tWed, 12 Jun 2002 15:52:48 -0700\r\nMessage-ID: &lt;3D07D0DB.D25C0973@...&gt;\r\nDate: Wed, 12 Jun 2002 15:53:15 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nCc: Jason Diamond &lt;jason@...&gt;\r\nSubject: Re: [rest-discuss] a RESTful architecture?\r\nReferences: &lt;016001c211b6$62f30910$8a265fa6@CARLSB1JADIAMO&gt; &lt;5.1.0.14.0.20020612204108.01aee2e8@192.168.0.5&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nRobert Leftwich wrote:\n&gt; \n&gt;...\n&gt; \n&gt; I&#39;m not sure about the /new as it looks suspiciously like a verb \n&gt; and REST resources should be nouns. I&#39;d be tempted to \n&gt; use /patients/schema or /patients/structure on which a GET will \n&gt; return the required fields list (alternatively the list returned from \n&gt; a GET to /patients could include a link to the patients \n&gt; required field structure, see also my ps below). \n\nI&#39;m not sure why both of your designs includes a link instead of just\ninlining the &quot;schema&quot; or &quot;form&quot;. Think of it like an HTML page with a\nform at the bottom that says: &quot;add a patient by clicking here.&quot;\n\nBut the analogy breaks down because if there is no human being on the\nother end then who interprets the schema and figures out where to get\nthe information to shove into each field? At best I can see the schema\nbeing useful as a filter over named fields that are known at design\ntime. &quot;I don&#39;t need that field right now so don&#39;t bother sending it.&quot;\nBut then that&#39;s just a performance optimization to avoid sending extra\ninformation.\n\n&gt;...\n&gt; PS One thing that has been bothering me in the REST examples I \n&gt; have seen - how are the required formats/structures discovered \n&gt; by the user? For example, in the case of REST-ifying the \n&gt; UserLand XML storage api (http://internet.conveyor.com/RESTwiki/moin.cgi/RestifyingUserlandsXmlStorageSystem) it says:\n&gt; &quot;xmlStorageSystem.registerUser()\n&gt; This method creates a new user account, or updates an existing \n&gt; one on the server. This could quite easily have been done with either \n&gt; an XML document containing this information...&quot;\n&gt; \n&gt; How do I as a user or a system find out what structure the XML document should be?\n\nHow did you figure out the existing Userland API? Either through a prose\ndocument or perhaps through a design-time specification like WSDL. The\nsame holds for REST. What REST changes is that it separates the globally\nstandardized stuff (methods, URIs) from the must-be-negotiated stuff\n(representations) which simplifies the negotiations and improves partial\nunderstanding. For instance if you define a &quot;UserLandUserML&quot; you&#39;ll find\nyou can much more easily reuse that across different content management\nsystems and parts of the UserLand API than the &quot;RegisterUserLandUser&quot;\noperation.\n\n Paul Prescod\n\n"}}