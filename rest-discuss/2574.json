{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":121832671,"authorName":"inthedarkplace","from":"&quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;","profile":"inthedarkplace","replyTo":"SENDER","senderId":"WfHDGg1iC224qPxrOVMplj2raqfsOTfMeLXho5pd1PHzyORsDtorsUAAQ_yCzpB1t_684p8pfBrGkeVtW1Mug_qJXjEGckJUutXCbCie_ygiig","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Client-composed URI","postDate":"1032213386","msgId":2574,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFtNWsyYSs3czlwQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNEODYwRTQ2LjMwMjA4MDdAcHJlc2NvZC5uZXQ+"},"prevInTopic":2573,"nextInTopic":2575,"prevInTime":2573,"nextInTime":2575,"topicId":2566,"numMessagesInTopic":22,"msgSnippet":"Walden, The way I usually solve this problem is to do as paul says except: - Use the HTTP 302 Found status code to redirect the client. In other words, the","rawEmail":"Return-Path: &lt;inthedarkplace@...&gt;\r\nX-Sender: inthedarkplace@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 16 Sep 2002 21:56:28 -0000\r\nReceived: (qmail 20491 invoked from network); 16 Sep 2002 21:56:28 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m1.grp.scd.yahoo.com with QMQP; 16 Sep 2002 21:56:28 -0000\r\nReceived: from unknown (HELO n8.grp.scd.yahoo.com) (66.218.66.92)\n  by mta3.grp.scd.yahoo.com with SMTP; 16 Sep 2002 21:56:28 -0000\r\nReceived: from [66.218.67.142] by n8.grp.scd.yahoo.com with NNFMP; 16 Sep 2002 21:56:27 -0000\r\nDate: Mon, 16 Sep 2002 21:56:26 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: Client-composed URI\r\nMessage-ID: &lt;am5k2a+7s9p@...&gt;\r\nIn-Reply-To: &lt;3D860E46.3020807@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 4206\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;inthedarkplace&quot; &lt;inthedarkplace@...&gt;\r\nX-Yahoo-Group-Post: member; u=121832671\r\nX-Yahoo-Profile: inthedarkplace\r\n\r\nWalden,\n\nThe way I usually solve this problem is to do as paul says except:\n\n- Use the HTTP 302 Found status code to redirect the client. In \nother words, the client queries the portfolio resource by saying \nGET /Portfolio/?asof=2343232 and the server responds with HTTP 302 \nFound and in the Location header put the URL of the resource. If you \nhave multiple resources that might be returned then do the same \nthing with the vanillar 200 OK.\n\n- itdp\n\n--- In rest-discuss@y..., Paul Prescod &lt;paul@p...&gt; wrote:\n&gt; Mathews, Walden wrote:\n&gt; &gt; Paul,\n&gt; &gt; \n&gt; &gt; In your &quot;first principles&quot; posting of last Friday, there was\n&gt; &gt; an interesting bit on queries and how the client can, by \nfollowing\n&gt; &gt; instructions from the server, participate in the composition of\n&gt; &gt; query-extended URI.\n&gt; &gt; \n&gt; &gt; I want to ask a general question about how this should work, \nindependent\n&gt; &gt; of HTML and current browser technology, where I understand its\n&gt; &gt; working well enough.\n&gt; &gt; \n&gt; &gt; Making no assumptions about the format of the entities, what can\n&gt; &gt; be said about a standard for providing (server) and following \n(client)\n&gt; &gt; instructions for extending URI with query parameters?\n&gt; \n&gt; WSDL and WRDL both have facilities to allow this.\n&gt; \n&gt; &gt; Here&#39;s my real-life example from a current project.  A Portfolio\n&gt; &gt; resource (let&#39;s say it&#39;s at URI: &quot;/Portfolio&quot;) undergoes \nchanges, but\n&gt; &gt; can be retrieved via &quot;as of&quot; snapshots.  The client does not care\n&gt; &gt; exactly when the Portfolio changed; it only needs to know &quot;what \nwas\n&gt; &gt; my Portfolio as-of 2002-09-16 end-of-business?&quot;.  The server may\n&gt; &gt; choose to impose the convention of appending a simple yyyymmdd\n&gt; &gt; encoding of the &#39;as-is&#39; parameter, thusly: &quot;/Portfolio/20020916&quot;.\n&gt; &gt; How does it encode instructions for the client to do this in some\n&gt; &gt; standard way, barring HTML as a specific solution?  Does Xforms\n&gt; &gt; address this problem?\n&gt; \n&gt; Yes, XForms supports query construction. WSDL and WRDL are design-\ntime \n&gt; standards. XForms is a runtime standard. So it depends on which \nyou \n&gt; want. But if you are doing it at runtime, then consider using a \n&gt; hyperlink instead. It requires less client-side knowledge to \nnavigate a \n&gt; hyperlink.\n&gt; \n&gt; &gt; Would there be any particular reason to prefer\n&gt; &gt; &quot;/Portfolio?asof=20020916&quot; or some other encoding over the one\n&gt; &gt; above?\n&gt; \n&gt; There are two resources:\n&gt; \n&gt; /Portfolio\n&gt; /Portfolio/20020916\n&gt; \n&gt; Common wisdom (Jeff Bone would say &quot;dogma&quot;) in the Web \narchitecture \n&gt; world is that the client should not construct the URI for latter \nfrom \n&gt; the former. Basically if you tell the client to do that, then you \nare \n&gt; committing to that exact naming scheme forever. For instance \nsomeone \n&gt; could make a hyperlink today to a document that will come into \nexistence \n&gt; in 2003. On the other hand, if you put in a level of indirection \nbetween \n&gt; the resources then the client is told that you reserve the right \nto \n&gt; change your naming convention any time. Here&#39;s how you do that:\n&gt; \n&gt; --&gt;\n&gt; GET /Portfolio?asof=20020916\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; &lt;resource asof=&quot;20020916&quot; href=&quot;/Portfolio/20020916&quot;/&gt;\n&gt; \n&gt; Then client applications dereference through that query to get at \nthe \n&gt; concrete resource associated with a particular date. The query \nlanguage \n&gt; could be arbitrarily complex. As in:\n&gt; \n&gt; --&gt;\n&gt; GET /Portfolio?from=20020913;to=20020918\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; &lt;resources&gt;\n&gt; &lt;resource asof=&quot;20020913&quot; href=&quot;/Portfolio/20020913&quot;/&gt;\n&gt; &lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020914&quot;/&gt;\n&gt; &lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020915&quot;/&gt;\n&gt; &lt;resource asof=&quot;20020914&quot; href=&quot;/Portfolio/20020916&quot;/&gt;\n&gt; &lt;/resources&gt;\n&gt; \n&gt; Admittedly the indirection has costs. But essentially \nyour &quot;contract&quot; is \n&gt; now only to maintain the indirection service, not to keep the same \nURI \n&gt; naming scheme forever. Your successor might appreciate the \nfreedom. The \n&gt; same might go for anyone implementing duplicates of your service \n&gt; elsewhere in the world. Maybe they want to serve portfolio \nsnapshots \n&gt; through ftp: or from a seperate server @....\n&gt; \n&gt; That said, you can achieve a similar effect using redirect status \ncodes. \n&gt;   I think that the difference is in the contract you are signing \nup for.\n&gt; \n&gt;   Paul Prescod\n\n\n"}}