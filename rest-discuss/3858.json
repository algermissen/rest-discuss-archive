{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":29059672,"authorName":"Yannick Loiseau","from":"Yannick Loiseau &lt;yloiseau@...&gt;","profile":"pioupiougroups","replyTo":"SENDER","senderId":"p_c8srzXCTwrklbCWlLr2qfkatDGgMbV_bX3niLPIgme2K5JcncFSiLwjjfaWB9HUx2Ug17_MaJh0jICuKOPJfxfSuDzOiopUA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"ReST vs MoST","postDate":"1060153851","msgId":3858,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNjAxNTM4NTAuOTA5Mi4yMi5jYW1lbEBwaW91cGlvdT4=","inReplyToHeader":"PDAwOWYwMWMzNWI4YSQ2MzVhZGVlMCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDAwMWMwMWMzNTc2NSQzZTExOTk0MCRhMDAwYThjMEBTZWFpcnRoQTMxPgkgPDIwMDMwODAxMTUzMDU4Lko2Nzc0QHd3dy5tYXJrYmFrZXIuY2E+CSA8MDAxNzAxYzM1ODY4JDg3MmM4MjMwJGEwMDBhOGMwQFNlYWlydGhBMzE+CSA8MjIzNjMyMDM1OC4xMDYwMDA2Mzc3QGxvY2FsaG9zdD4gPDNGMkZFN0MwLjYwOTAyMDNAYml0d29ya2luZy5vcmc+CSA8UGluZS5XTlQuNC41My4wMzA4MDUxMzE5MTgwLjM4MDBAcGhpbG8+CSA8MDA5ZjAxYzM1YjhhJDYzNWFkZWUwJGEwMDBhOGMwQFNlYWlydGhBMzE+"},"prevInTopic":3857,"nextInTopic":3859,"prevInTime":3857,"nextInTime":3859,"topicId":3846,"numMessagesInTopic":32,"msgSnippet":"As I understand it, MoST is a data driven standardised interface. Stuck to xml. But I ve allway understood ReST in this way. if you get a uri, you receive a","rawEmail":"Return-Path: &lt;yloiseau@...&gt;\r\nX-Sender: yloiseau@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 27789 invoked from network); 6 Aug 2003 07:07:40 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m18.grp.scd.yahoo.com with QMQP; 6 Aug 2003 07:07:40 -0000\r\nReceived: from unknown (HELO mwinf0203.wanadoo.fr) (193.252.22.29)\n  by mta3.grp.scd.yahoo.com with SMTP; 6 Aug 2003 07:07:40 -0000\r\nReceived: from AToulouse-204-1-3-183.w80-14.abo.wanadoo.fr (AToulouse-204-1-3-183.w80-14.abo.wanadoo.fr [80.14.186.183])\n\tby mwinf0203.wanadoo.fr (SMTP Server) with ESMTP id 4E1D610001C8\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed,  6 Aug 2003 09:07:39 +0200 (CEST)\r\nSubject: ReST vs MoST\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;009f01c35b8a$635adee0$a000a8c0@SeairthA31&gt;\r\nReferences: &lt;001c01c35765$3e119940$a000a8c0@SeairthA31&gt;\n\t &lt;20030801153058.J6774@...&gt;\n\t &lt;001701c35868$872c8230$a000a8c0@SeairthA31&gt;\n\t &lt;2236320358.1060006377@localhost&gt; &lt;3F2FE7C0.6090203@...&gt;\n\t &lt;Pine.WNT.4.53.0308051319180.3800@philo&gt;\n\t &lt;009f01c35b8a$635adee0$a000a8c0@SeairthA31&gt;\r\nContent-Type: text/plain\r\nOrganization: \r\nMessage-Id: &lt;1060153850.9092.22.camel@pioupiou&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.2.4-1.1mdk \r\nDate: 06 Aug 2003 09:10:51 +0200\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Yannick Loiseau &lt;yloiseau@...&gt;\r\nX-Yahoo-Group-Post: member; u=29059672\r\nX-Yahoo-Profile: pioupiougroups\r\n\r\nAs I understand it, MoST is a data driven standardised interface. Stuck\nto xml. But I&#39;ve allway understood ReST in this way. if you get a uri,\nyou receive a representation (that you can unmarshall/deserialize,\nhowever you&#39;re doing it), if you put a serialized/marshalled resource to\na uri, you update it (however the server deals with this\nrepressentation). if you post to a container uri, you append a resource\nwhatever it can mean in the server logic. \nas an example, a messaging service can be modeled as \nGET /my/inbox/ : return a list of messages&#39; uri , in any format that is\nunderstandable by server and client.\nGET &lt;message uri&gt; : return a message, in any format...\nPOST /your/inbox/\nmessage           : send a message ...\nDELETE &lt;message uri&gt; : delete the message... this can just delete it\nfrom the list, or delete the mapping of the uri, of delete the file, or\ndelete the DB record .... I don&#39;t have to know how the server understand\nthe representation, as long as the message uri become unreachable .\n\nformats can be just mime for messages and a list of plain text \n&quot;subject : uri &quot; for inbox, as long as both client and server can\nunderstand (i.e. parse/(de)serialize/(un)marshall) it. All you need to\nknow are these format (i.e. schemas, in a wide sense). but that is true\nin any client/server system. \n\nThis is a simple service, but it helps to understand.\nHow do you model this in MoST ??\n\n\n"}}