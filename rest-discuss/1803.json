{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7519858,"authorName":"Mark Baker","from":"Mark Baker &lt;distobj@...&gt;","profile":"gonga_thrash","replyTo":"SENDER","senderId":"CKzWBhnh04yFP6v78DNNGd-xLpDsZm3J239NIb_8jt5GEFvA8nR3tzT4I2FGwxtcT8WfpXylEi7HorwqKaoBGu3EQQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] socket-level mods","postDate":"1026390824","msgId":1803,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwNzExMDgzMzQ0LkE4MDIwQHd3dy5tYXJrYmFrZXIuY2E+","inReplyToHeader":"PFBpbmUuTE5YLjQuNDQuMDIwNzEwMTU0NTM5MC4zMTI5Ni0xMDAwMDBAbG9jYWxob3N0LmxvY2FsZG9tYWluPjsgZnJvbSBsZ29uemVAcGFuaXguY29tIG9uIFdlZCwgSnVsIDEwLCAyMDAyIGF0IDA0OjM3OjM5UE0gLTA0MDA=","referencesHeader":"PEI5NTFGODI1LjNEN0ElamJvbmVAZGVlcGZpbGUuY29tPiA8UGluZS5MTlguNC40NC4wMjA3MTAxNTQ1MzkwLjMxMjk2LTEwMDAwMEBsb2NhbGhvc3QubG9jYWxkb21haW4+"},"prevInTopic":1800,"nextInTopic":1805,"prevInTime":1802,"nextInTime":1804,"topicId":1733,"numMessagesInTopic":74,"msgSnippet":"... HTTP supports ongoing streams , as you describe them.  Entities can be streams in HTTP. ... Ok. ... Not sure I follow - I think you said server once too","rawEmail":"Return-Path: &lt;mark.baker@...&gt;\r\nX-Sender: mark.baker@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 11 Jul 2002 12:22:20 -0000\r\nReceived: (qmail 47809 invoked from network); 11 Jul 2002 12:22:20 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m2.grp.scd.yahoo.com with QMQP; 11 Jul 2002 12:22:20 -0000\r\nReceived: from unknown (HELO markbaker.ca) (207.236.3.141)\n  by mta3.grp.scd.yahoo.com with SMTP; 11 Jul 2002 12:22:19 -0000\r\nReceived: (from mbaker@localhost)\n\tby markbaker.ca (8.9.3/8.8.7) id IAA08084;\n\tThu, 11 Jul 2002 08:33:44 -0400\r\nDate: Thu, 11 Jul 2002 08:33:44 -0400\r\nTo: Lucas Gonze &lt;lgonze@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] socket-level mods\r\nMessage-ID: &lt;20020711083344.A8020@...&gt;\r\nReferences: &lt;B951F825.3D7A%jbone@...&gt; &lt;Pine.LNX.4.44.0207101545390.31296-100000@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-Mailer: Mutt 1.0.1i\r\nIn-Reply-To: &lt;Pine.LNX.4.44.0207101545390.31296-100000@...&gt;; from lgonze@... on Wed, Jul 10, 2002 at 04:37:39PM -0400\r\nFrom: Mark Baker &lt;distobj@...&gt;\r\nX-Yahoo-Group-Post: member; u=7519858\r\nX-Yahoo-Profile: gonga_thrash\r\n\r\nOn Wed, Jul 10, 2002 at 04:37:39PM -0400, Lucas Gonze wrote:\n&gt; * long lasting connections.  HTTP is designed around one-shot connections\n&gt; to pick up some hypertext.  Mechanisms to get a bunch of files keep the\n&gt; connection open, but only until a batch of related resources have been\n&gt; transferred.  P2P often uses an ongoing stream.  Now, maybe you can argue\n&gt; that ongoing streams make no sense, but that&#39;s swimming upstream.  You\n&gt; could argue that P2P designs should be rebuilt to use hypertext, but\n&gt; that&#39;s also swimming upstream.  P2P has gotten a huge amount of thought\n&gt; put into it and it uses ongoing connections so often for a reason.\n\nHTTP supports &quot;ongoing streams&quot;, as you describe them.  Entities can\nbe streams in HTTP.\n\n&gt; * efficiency.  Using two sockets instead of one, plus the cost of \n&gt; maintaining open connections, is a brutual efficiency hit.\n\nOk.\n\n&gt; * firewall transgression.  being able to able to establish a server\n&gt; connection to a node behind a firewall, by having the server create the\n&gt; TCP connection but otherwise act as a server, is a critical tool.  few p2p\n&gt; apps could live without it.\n\nNot sure I follow - I think you said &quot;server&quot; once too many times. 8-)\n\n&gt; * event mechanisms.  given a single unidirectional connection there is no\n&gt; way for a server to initiate an event, short of the knownow hack of\n&gt; running events along the backstream to the client.\n\nRight, but I wouldn&#39;t call it a hack.  It seems a fundamental feature\nof the generic interface that a client can request events with GET, as\nlong as those events stop when the connection drops.\n\n&gt; I&#39;ve done enough preliminary hacking in Tomcat to know that I can munge\n&gt; the socket layer -- exclusively stuff below HTTP -- to support long\n&gt; lasting connections where both parties can act as a client, server or\n&gt; both.  But I am queasy about how this interacts with REST design.\n&gt; \n&gt; The new design would still work by resource modelling.  However it would \n&gt; not be oriented towards hypertext, so stuff related to connection keep \n&gt; alive would be hairy.  It would not work with existing proxies, but that&#39;s \n&gt; not a REST issue IMO.  \n&gt; \n&gt; On the other hand, the new design would be HTTP to the letter, because\n&gt; HTTP doesn&#39;t say anyting about the socket layer.\n\nI&#39;m a bit wary of the above description.  IMO, not working with existing\nproxies is definitely an issue.\n\nHave you considered an HTTP extension method similar to SMTP TURN/ETRN\nfor turning the connection around?  I guess that might not be sufficient,\nsince it just flips it, it doesn&#39;t permit bi-directional comms over the\nsame socket simultaneously - but I don&#39;t know for sure until I see some\nuse cases.\n\nAnd FWIW, you could specify this as a new protocol, but it would be a\nnew protocol, not HTTP, though you could reuse lots of HTTP.  But if you\nread through Section 8 of 2616 while thinking about true 2-way over a\nsingle connection, you&#39;d see that the complexity of both specification\nand implementation (i.e. wouldn&#39;t be able to reuse any existing HTTP\nlibrary) would probably be nasty.  *Much* simpler extensions, such as\ndraft-mogul-http-ooo-01.txt (out of order responses in pipelining), had\nthis same problem with existing libraries.\n\nAlternately, you could use CONNECT to create a tunnel, and then the\nserver could tunnel HTTP back through.  That would probably be simpler,\nbut firewalls don&#39;t typically honour CONNECT, IIRC.\n\nMB\n-- \nMark Baker, CTO, Idokorro Mobile (formerly Planetfred)\nOttawa, Ontario, CANADA.               distobj@...\nhttp://www.markbaker.ca        http://www.idokorro.com\n\n"}}