{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"pUD0CHcdGXppY2IXpm9zKuO2VAcKgOgs9Rl_3xeM2FP88Y120YGu_KWJimhX3kiQE2LVWl-dEcT4ug-2dU9He3MjjWmJOf_hyiEZIw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Media Type for resource archives","postDate":"1389405563","msgId":19579,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBTmdrbUxDVndIOUtPMXMzdG8zekVVbkNoS0VXMFdSTFlvdktPT1hNUz05dC1IU3ZwQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENDMEM1OUJGLUQ5N0QtNDA0MC04QzA4LThBNUQxMTc4NTI2OEBub3Jkc2MuY29tPg==","referencesHeader":"PENDMEM1OUJGLUQ5N0QtNDA0MC04QzA4LThBNUQxMTc4NTI2OEBub3Jkc2MuY29tPg=="},"prevInTopic":19578,"nextInTopic":19580,"prevInTime":19578,"nextInTime":19580,"topicId":19578,"numMessagesInTopic":7,"msgSnippet":"We (Jive) use the multipart/form-data in lots of use cases, such as uploading a document (with a well defined JSON format) plus some associated attachments.","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25263 invoked by uid 102); 11 Jan 2014 01:59:25 -0000\r\nX-Received: from unknown (HELO mtaq1.grp.bf1.yahoo.com) (10.193.84.32)\n  by m2.grp.bf1.yahoo.com with SMTP; 11 Jan 2014 01:59:25 -0000\r\nX-Received: (qmail 4469 invoked from network); 11 Jan 2014 01:59:24 -0000\r\nX-Received: from unknown (HELO mail-la0-f48.google.com) (209.85.215.48)\n  by mtaq1.grp.bf1.yahoo.com with SMTP; 11 Jan 2014 01:59:24 -0000\r\nX-Received: by mail-la0-f48.google.com with SMTP id n7so3722168lam.21\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 10 Jan 2014 17:59:24 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.152.5.8 with SMTP id o8mr21222lao.89.1389405564062; Fri, 10\n Jan 2014 17:59:24 -0800 (PST)\r\nX-Received: by 10.114.255.4 with HTTP; Fri, 10 Jan 2014 17:59:23 -0800 (PST)\r\nIn-Reply-To: &lt;CC0C59BF-D97D-4040-8C08-8A5D11785268@...&gt;\r\nReferences: &lt;CC0C59BF-D97D-4040-8C08-8A5D11785268@...&gt;\r\nDate: Fri, 10 Jan 2014 17:59:23 -0800\r\nMessage-ID: &lt;CANgkmLCVwH9KO1s3to3zEUnChKEW0WRLYovKOOXMS=9t-HSvpA@...&gt;\r\nTo: Jan Algermissen &lt;jan.algermissen@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=089e01419b0618522a04efa831b6\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Media Type for resource archives\r\nX-Yahoo-Group-Post: member; u=352334505; y=M1meRYlIJjt9IinZ90aJ6JNf_Nkk_BcuByijlQAmVNtl6N-bkmisdIwZAw\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\n\r\n--089e01419b0618522a04efa831b6\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nWe (Jive) use the multipart/form-data in lots of use cases, such as\nuploadi=\r\nng a document (with a well defined JSON format) plus some associated\nattach=\r\nments.  However, we don&#39;t enforce a requirement that the JSON data be\nthe f=\r\nirst body part -- instead, we search through the available body parts\nfor i=\r\nt with some well-defined heuristics, and treat all the other body\nparts as =\r\nattachments.\n\nCraig McClanahan\n\n\nOn Fri, Jan 10, 2014 at 2:35 PM, Jan Alger=\r\nmissen &lt;jan.algermissen@...\n&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hi,\n&gt;\n&gt; I am thinking ab=\r\nout a media type for bundling together a bunch of\n&gt; resources[1] into a sin=\r\ngle file. With these files I want to store a\n&gt; manifest file.\n&gt;\n&gt; One optio=\r\nn would be to just use a zip-based format and an manifest file\n&gt; with a wel=\r\nl known name.\n&gt;\n&gt; The problem with this is that useful stream processing of=\r\n such a file can\n&gt; only be done by ensuring that the manifest is the first =\r\nentry when\n&gt; unzipping. Apparently it requires some stunts to control the o=\r\nrdering of\n&gt; the zip entries and who knows whether the other end uses a com=\r\npatible\n&gt; implementation.\n&gt;\n&gt; Solution would be to unpack to disk first and=\r\n go from there. Not nice.\n&gt;\n&gt; A possible alternative would be to use a mult=\r\nipart format where I can\n&gt; simply require the manifest to be the first part=\r\n. Then just zip that file\n&gt; or rely on transfer encoding to reduce the byte=\r\ns on the wire.\n&gt;\n&gt; Nice things about that:\n&gt; - Ordering is guaranteed\n&gt; - F=\r\null support for per-part MIME headers\n&gt; - Content-Length enables fast split=\r\nting of the parts\n&gt; - cid: URIs make for natural, standard URI-references i=\r\nnside the file\n&gt; - stream processing without temporary storage\n&gt;\n&gt; I am int=\r\nerested in reactions to the two alternatives or any ideas beyond\n&gt; that.\n&gt;\n=\r\n&gt; Jan\n&gt;\n&gt; [1] Well, obviously their entities at some point in time\n&gt;  \n&gt;\n\r\n--089e01419b0618522a04efa831b6\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;div&gt;We (Jive) use the multipart/form-data in lots of use =\r\ncases, such as uploading a document (with a well defined JSON format) plus =\r\nsome associated attachments.=A0 However, we don&#39;t enforce a requirement=\r\n that the JSON data be the first body part -- instead, we search through th=\r\ne available body parts for it with some well-defined heuristics, and treat =\r\nall the other body parts as attachments.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;Craig McClana=\r\nhan&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;=\r\nOn Fri, Jan 10, 2014 at 2:35 PM, Jan Algermissen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a h=\r\nref=3D&quot;mailto:jan.algermissen@...&quot; target=3D&quot;_blank&quot;&gt;jan.algermissen=\r\n@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; sty=\r\nle=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n&lt;u&gt;=\r\n&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n   =\r\n   \n      \n      &lt;p&gt;Hi,&lt;br&gt;\n&lt;br&gt;\nI am thinking about a media type for bundl=\r\ning together a bunch of resources[1] into a single file. With these files I=\r\n want to store a manifest file.&lt;br&gt;\n&lt;br&gt;\nOne option would be to just use a =\r\nzip-based format and an manifest file with a well known name.&lt;br&gt;\n&lt;br&gt;\nThe =\r\nproblem with this is that useful stream processing of such a file can only =\r\nbe done by ensuring that the manifest is the first entry when unzipping. Ap=\r\nparently it requires some stunts to control the ordering of the zip entries=\r\n and who knows whether the other end uses a compatible implementation.&lt;br&gt;\n=\r\n\n&lt;br&gt;\nSolution would be to unpack to disk first and go from there. Not nice=\r\n.&lt;br&gt;\n&lt;br&gt;\nA possible alternative would be to use a multipart format where =\r\nI can simply require the manifest to be the first part. Then just zip that =\r\nfile or rely on transfer encoding to reduce the bytes on the wire.&lt;br&gt;\n&lt;br&gt;=\r\n\nNice things about that:&lt;br&gt;\n- Ordering is guaranteed&lt;br&gt;\n- Full support fo=\r\nr per-part MIME headers&lt;br&gt;\n- Content-Length enables fast splitting of the =\r\nparts&lt;br&gt;\n- cid: URIs make for natural, standard URI-references inside the =\r\nfile&lt;br&gt;\n- stream processing without temporary storage&lt;br&gt;\n&lt;br&gt;\nI am intere=\r\nsted in reactions to the two alternatives or any ideas beyond that.&lt;br&gt;\n&lt;br=\r\n&gt;\nJan&lt;br&gt;\n&lt;br&gt;\n[1] Well, obviously their entities at some point in time&lt;/p&gt;=\r\n\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n=\r\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--089e01419b0618522a04efa831b6--\r\n\n"}}