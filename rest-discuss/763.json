{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"4Iz2kQznBHAalj1Mx103Ye1OxRWNG1h7skfuhWWB6nuVh5RdMn1EpfLU2Mu71umvPwY5IEJRSuaBvIH76gQBbhZn2XsmHA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST applied to provisioning","postDate":"1014253276","msgId":763,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNzQ0NkRDLjM3MDZFOTQ1QHByZXNjb2QubmV0Pg==","referencesHeader":"PEVGRTAwMzNGNDE2QkQ1MTFCN0Q4MDA5MDI3RDBEMzkzQTAwQTgxQGd3aGRlbW50czAyLnNlcnZlci5kZW1vbi5uZXQ+"},"prevInTopic":762,"nextInTopic":767,"prevInTime":762,"nextInTime":764,"topicId":762,"numMessagesInTopic":5,"msgSnippet":"... If client applications are supposed to care about the structure of the URI then you should use query parameters. The /s/s/s/s/ part of the URI is supposed","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 21 Feb 2002 01:03:40 -0000\r\nReceived: (qmail 17149 invoked from network); 21 Feb 2002 01:03:40 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m11.grp.snv.yahoo.com with QMQP; 21 Feb 2002 01:03:40 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 21 Feb 2002 01:03:39 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1L13ap09935;\n\tWed, 20 Feb 2002 17:03:36 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1L13ZL06719;\n\tWed, 20 Feb 2002 17:03:35 -0800\r\nMessage-ID: &lt;3C7446DC.3706E945@...&gt;\r\nDate: Wed, 20 Feb 2002 17:01:16 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;Inggs, Andrew&quot; &lt;andrew.inggs@...&gt;,\n   &quot;&#39;rest-discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] REST applied to provisioning\r\nReferences: &lt;EFE0033F416BD511B7D8009027D0D393A00A81@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;Inggs, Andrew&quot; wrote:\n&gt; \n&gt;...\n&gt; URIs have the form:\n&gt; \n&gt;     http://server/visp/serviceid/vispid/identifier\n&gt; \n&gt; That&#39;s a little difficult to understand, so here&#39;s an example:\n&gt; \n&gt;     http://server/visp/website/xyz/user1\n&gt;     ^^^^^^^^^^^^^^^^^^\n&gt;     Fixed\n&gt; \n&gt; In this case the serviceid is website, the vispid is xyz, and\n&gt; the identifier is user1.  The idea is that you can make the\n&gt; identifier more complex to drill down to only one component of\n&gt; the profile, e.g., to refer to the alias in the example above:\n&gt; \n&gt;     http://server/visp/email-alias/xyz/user1/customer.com/me/myself\n\nIf client applications are supposed to care about the structure of the\nURI then you should use query parameters. The /s/s/s/s/ part of the URI\nis supposed to be opaque to client software. Only the server knows or\ncares what the slashes mean.\n\nThe best way to establish hierarchy is through XML documents where the\nparent has hyperlinks to the children and they have hyperlinks to their\nchildren and so forth. Consider, for example, how easy it becomes to\nwrite a spider that slurps up the structre and moves it. (if you\nconsider that a good thing...otherwise forget I said it. ;)\n\n&gt; Now when the XYZ client wants to provision some services for a\n&gt; new user who&#39;s signed up, they need to create the services.\n&gt; At the moment, for the above example, this would mean doing\n&gt; the following PUTs with the given data:\n&gt; \n&gt; PUT /visp/website/xyz/user1/www.customer.com\n&gt; \n&gt; &lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;\n&gt; &lt;!DOCTYPE viml SYSTEM &quot;viml.dtd&quot;&gt;\n&gt; &lt;viml&gt;\n&gt;   &lt;website domain=&quot;www.customer.com&quot;&gt;\n&gt;     &lt;path&gt;/&lt;/path&gt;\n&gt;     &lt;password&gt;secret1&lt;/password&gt;\n&gt;     &lt;storage-space&gt;15&lt;/storage-space&gt;\n&gt;     &lt;bandwidth&gt;50&lt;/bandwidth&gt;\n&gt;   &lt;/website&gt;\n&gt; &lt;/viml&gt;\n\nI would use a POST for two reasons. First, uses of PUTs to brand new\nURIs that the client creates are not opaque. Second, you don&#39;t have to\nduplicate the data, as you noticed.\n\nPUTs are okay for creating new things when there is a good reason for\nthe client to &quot;own&quot; the namespace as in a content management situation. \n\n&gt;...\n&gt; Problems I have with my own design:\n&gt; \n&gt;  - If I were a client I would expect to be able to send a\n&gt;    whole profile and have everything provisioned at once.\n&gt;    This is not insurmountable, just more effort (and some\n&gt;    thinking about transactional guarantees, if any).\n\nPOST can handle that.\n\n&gt;  - There is redundant data in each request that is already in\n&gt;    the URI.  This means extra processing on both sides, and an\n&gt;    extra check on my side -- and what do I do if there&#39;s a\n&gt;    mismatch?\n\nPOST can handle that.\n\n&gt;  - For an update (POST) it&#39;s not always clear what can and\n&gt;    can&#39;t change.  For example, when updating a website you can\n&gt;    change the password but not the path.  In the case of an alias\n&gt;    you can&#39;t even do an update.  I see problems ahead.\n\nActually, you should use *PUT* for updates and POST for creating new\nstuff. It&#39;s helpful to read the definitions of the major methods here:\n\nhttp://www.w3.org/Protocols/rfc2068/rfc2068\n\nAnyhow, are your update problems really any different than validation\nproblems? Trying to update a password is logically impermissable so you\nreturn an error, just like if you tried to put an integer where a phone\nnumber should go.\n\nHope those ideas help.\n\n Paul Prescod\n\n"}}