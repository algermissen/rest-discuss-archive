{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":465410965,"authorName":"Nathan","from":"Nathan &lt;nathan@...&gt;","profile":"nathanrixham","replyTo":"SENDER","senderId":"q29rAJrZHvAmdFMLtmNiCcNxSwSrGnvfohbX_Pyd940m6SabXY7PvwPAN8mHdj_1p7V4PDPXxvlzAoYlp0UX1w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How to identify existing resource in a POST(a) request","postDate":"1351550059","msgId":19166,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwOEYwNDZCLjIwNjA2MDVAd2VicjMub3JnPg==","inReplyToHeader":"PDYwNTg1OUY0LTEzRUItNDU1OC1CODQ5LUVGRDIxQjI3OUVDRkBsaW5lb25lLm5ldD4=","referencesHeader":"PDJBMzdCNkIwLTgzMzUtNDQzRS1BM0ZFLTU4ODBGNDU4NkYzN0BsaW5lb25lLm5ldD4gPDUwOEJFMkU3LjkwMDAzMDRAd2VicjMub3JnPiA8NjA1ODU5RjQtMTNFQi00NTU4LUI4NDktRUZEMjFCMjc5RUNGQGxpbmVvbmUubmV0Pg=="},"prevInTopic":19165,"nextInTopic":0,"prevInTime":19165,"nextInTime":19167,"topicId":19156,"numMessagesInTopic":10,"msgSnippet":"... JSON-LD can help you there, or the JSON encoding of microformats :) ... Exactly. ... It does have it s uses, especially rel= canonical for several ","rawEmail":"Return-Path: &lt;nathan@...&gt;\r\nX-Sender: nathan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 6972 invoked from network); 29 Oct 2012 22:34:52 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m4.grp.sp2.yahoo.com with QMQP; 29 Oct 2012 22:34:52 -0000\r\nX-Received: from unknown (HELO mail-wg0-f53.google.com) (74.125.82.53)\n  by mta5.grp.sp2.yahoo.com with SMTP; 29 Oct 2012 22:34:52 -0000\r\nX-Received: by mail-wg0-f53.google.com with SMTP id dr1so3224304wgb.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 29 Oct 2012 15:34:51 -0700 (PDT)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=google.com; s=20120113;\n        h=message-id:date:from:reply-to:organization:user-agent:mime-version\n         :to:cc:subject:references:in-reply-to:content-type\n         :content-transfer-encoding:x-gm-message-state;\n        bh=eplxU6oivv0/ub7FdX9i8s3AvqEop7txm41CVfgpxZE=;\n        b=c5i8Z+OxAcGjf/jZjlmk7HFPZkgmi6JgEP+SdoMpEoQVdw8DJVIoT6MNc1TK6Kux1x\n         AmBi2hZDOzeySFUJrXStTleQcRjmxH+JBWP/RpmcoMuwt5S+Pt7mFjOABHIGBO/9fIHI\n         oWMVuyeaRjfLXAUPCvmQphNyU8cst/Cess9zDt4zTGiKHPuqUVFyqFw/1a9id5KQAyyT\n         0gQJASFuV7Sq8ShaXeD/9XGVy9hO3tuccnyl5OmGKYKw+c8qkhyOlHio3ghXG87Kgcvm\n         l521ocWqCslsZIBOISx29iEjyZD/siiRDexH6MLSeemClJjunCpDFPfP3xYwUGwucCW6\n         cM7w==\r\nX-Received: by 10.181.11.167 with SMTP id ej7mr17360892wid.11.1351550091677;\n        Mon, 29 Oct 2012 15:34:51 -0700 (PDT)\r\nReturn-Path: &lt;nathan@...&gt;\r\nX-Received: from [192.168.1.69] (host86-141-249-153.range86-141.btcentralplus.com. [86.141.249.153])\n        by mx.google.com with ESMTPS id a10sm13363315wiz.4.2012.10.29.15.34.49\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Mon, 29 Oct 2012 15:34:50 -0700 (PDT)\r\nMessage-ID: &lt;508F046B.2060605@...&gt;\r\nDate: Mon, 29 Oct 2012 22:34:19 +0000\r\nOrganization: webr3\r\nUser-Agent: Thunderbird 2.0.0.24 (Windows/20100228)\r\nMIME-Version: 1.0\r\nTo: Paul Moore &lt;paul.k.moore@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Andrei Sambra &lt;andrei@...&gt;\r\nReferences: &lt;2A37B6B0-8335-443E-A3FE-5880F4586F37@...&gt; &lt;508BE2E7.9000304@...&gt; &lt;605859F4-13EB-4558-B849-EFD21B279ECF@...&gt;\r\nIn-Reply-To: &lt;605859F4-13EB-4558-B849-EFD21B279ECF@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Gm-Message-State: ALoCoQnJSMjhuooqPC8EnoPLFM/WHzUPLMJcE4nnsERTPKcoWx0TQUbAKZqsMtOeh6Bnqrm3zjyF\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nathan &lt;nathan@...&gt;\r\nReply-To: nathan@...\r\nSubject: Re: [rest-discuss] How to identify existing resource in a POST(a)\n request\r\nX-Yahoo-Group-Post: member; u=465410965; y=AjPV25bukyP0qJyWWKuWdeg8rvvWJQg994WR5f7n77Y-MR1sLpw-\r\nX-Yahoo-Profile: nathanrixham\r\n\r\nPaul Moore wrote:\n&gt; Nathan,\n&gt; \n&gt; Firstly, thanks for the response.\n&gt; \n&gt; I&#39;ve taken a look at the myprofile-project.org and it looks promising.  From what I can deduce it&#39;s based on the FOAF work, which in turn is built on RDF.  As we&#39;re currently a bit of a JSON shop, it&#39;s somewhat tricky to directly translate this, but I&#39;ll pick this up with Andrei directly.\n\nJSON-LD can help you there, or the JSON encoding of microformats :)\n\n&gt; I think your Option A is the most palatable, as frankly instead of a &quot;friend-request&quot; representation, this can just be a &quot;friend&quot; representation which then links to a person.  This nicely separates the relationship semantic from the entity semantic, and thus (as with all &#39;resource-parititioning&quot;) the cache concerns can be independently handled / optimised.\n\nExactly.\n\n&gt; I&#39;m still somewhat sceptical of the use of the &quot;self link&quot; as in most cases (all cases for my current usage) it&#39;s just a restatement of the Request-URI (or redirection thereof), but, the separate representation simplifies the problem.  Perhaps I had over-collapsed the representation design and just needed to back-away a little.\n\nIt does have it&#39;s uses, especially rel=&quot;canonical&quot; for several \nsimilar/identical resources.\n\nHowever, it&#39;s also useful to consider the messages, and look to those. \nAfter all you can model the state of a resource within a protocol as a \nfunction of all the messages to date - or -  the current state (Sn) as a \nfunction of a message M and a previous state (Sn-1), and time T. That is \nto say, it&#39;s the messages which change the state of a resource. So any \nresource which changes it&#39;s state by way of messages, would do well to \nconsider those messages, especially the effective-request-URI for the \nresource currently being interacted with / requested. I know HTTP is \noften &quot;black-boxed&quot; by components to hide the implementation details \n(especially request lines and headers), but they&#39;re pretty vital to \nbuilding RESTful services!\n\nBest,\n\nNathan\n\n&gt; Anyway, thanks for the thinking.\n&gt; \n&gt; Best regards\n&gt; \n&gt; Paul\n&gt; \n&gt; \n&gt; On 27 Oct 2012, at 14:34, Nathan wrote:\n&gt; \n&gt;&gt; Hi Paul,\n&gt;&gt;\n&gt;&gt; Uniform Resource Identifiers (URIs) are certainly the best choice for identifiers on the Web.\n&gt;&gt;\n&gt;&gt; It appears that you want to POST a representation of a person to /friends in order to have the person described by the representation added as a friend of the currently authenticated user.\n&gt;&gt;\n&gt;&gt; If this is correct, then I&#39;d encourage you to:\n&gt;&gt;\n&gt;&gt; A) describe the action you want performed with a representation (friend request) and POST that instead.\n&gt;&gt;\n&gt;&gt; B) refactor things such that either:\n&gt;&gt;\n&gt;&gt; B1) the representation at example.com/persons/1 contains a list of that persons friends, a list which you update by POSTing annotations (friend requests) to, or update by PATCHing it, or by PUTting a new representation.\n&gt;&gt;\n&gt;&gt; B2) create a resource example.com/persons/{local-identifier}/friends which is a list of for each person, and again POST, PATCH or PUT to update it.\n&gt;&gt;\n&gt;&gt; In all honesty though, your best bet here is most likely to take a look at myprofile-project.org and speak to Andrei Sambra &lt;andrei@...&gt; as they&#39;ve nailed exactly what you want to do. Identification of agents making request, and open profiles of them are provided by WebID and Linked Data. This really appear to be what you need for this scenario (and probably all scenario&#39;s you can think of).\n&gt;&gt;\n&gt;&gt; As a side note, you can identify who is making a request by requiring auth* when the person makes it, or by using the From header in the request (although this is rather limited as it only takes identifiers of the formuser@..., which then leads you down the road of needing WebFinger to lookup users).\n&gt;&gt;\n&gt;&gt; Ultimately, the exact method on how you implement this depends on which mediatype(s) you end up using, at an abstract level it&#39;s just a simple three-tuple truth statement you want to send though &quot;&lt;example.com/persons/1&gt; friend &lt;example.com/persons/2&gt;&quot;, via auth* you can find out whether it&#39;s &#39;&lt;example.com/persons/1&gt;&#39; updating their profile, or &lt;example.com/persons/2&gt; making a friend request.\n&gt;&gt;\n&gt;&gt; Best,\n&gt;&gt;\n&gt;&gt; Nathan\n&gt; \n&gt; \n\n\n"}}