{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":81035509,"authorName":"Vincent D Murphy","from":"&quot;Vincent D Murphy&quot; &lt;vdm@...&gt;","profile":"johnfoobar1","replyTo":"SENDER","senderId":"7oP1NLi33gBWZcmUldjbvy3cdHBzj5lQi-41AREeQuFTeBrg8D-o0bQXw5KVCcN8nRVNU5H93rvcM9CKUtmGht_eGw6WqA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Principles for designing RESTful systems to back-up   choices?","postDate":"1125584122","msgId":5201,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMjU1ODQxMjIuMTkwMzEuMjQxOTY1MTYwQHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4=","inReplyToHeader":"PDgxQjE3QzkzLTJGN0QtNEQ3RC1CNEFGLTc2QjE0MzJBQzYzOUB0b3BpY21hcHBpbmcuY29tPg==","referencesHeader":"PEJBRDY5MzRFLTM0NjQtNDg3Ny04QzU0LUYxNzJCRTBENUVGRUB0b3BpY21hcHBpbmcuY29tPiAgIDwxMTI1NTEzMDcxLjQ4NjguMjQxODk5NzA0QHdlYm1haWwubWVzc2FnaW5nZW5naW5lLmNvbT4gICA8ODFCMTdDOTMtMkY3RC00RDdELUI0QUYtNzZCMTQzMkFDNjM5QHRvcGljbWFwcGluZy5jb20+"},"prevInTopic":5200,"nextInTopic":5202,"prevInTime":5200,"nextInTime":5202,"topicId":5196,"numMessagesInTopic":8,"msgSnippet":"On Wed, 31 Aug 2005 20:59:43 +0200, Jan Algermissen  said: [snip] ... Shouldn t those manual additions be in the host","rawEmail":"Return-Path: &lt;vdm@...&gt;\r\nX-Sender: vdm@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 6344 invoked from network); 1 Sep 2005 14:15:23 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m27.grp.scd.yahoo.com with QMQP; 1 Sep 2005 14:15:23 -0000\r\nReceived: from unknown (HELO out4.smtp.messagingengine.com) (66.111.4.28)\n  by mta6.grp.scd.yahoo.com with SMTP; 1 Sep 2005 14:15:23 -0000\r\nReceived: from frontend1.internal (mysql-sessions.internal [10.202.2.149])\n\tby frontend1.messagingengine.com (Postfix) with ESMTP id 3AC33CCC2B7;\n\tThu,  1 Sep 2005 10:15:22 -0400 (EDT)\r\nReceived: from web1.messagingengine.com ([10.202.2.210])\n  by frontend1.internal (MEProxy); Thu, 01 Sep 2005 10:15:22 -0400\r\nReceived: by web1.messagingengine.com (Postfix, from userid 99)\n\tid A34F19741; Thu,  1 Sep 2005 10:15:22 -0400 (EDT)\r\nMessage-Id: &lt;1125584122.19031.241965160@...&gt;\r\nX-Sasl-Enc: 9OZ7JxXGz5FQTKuQMOQX1JguzCT6v86zGD+XxaFB+23h 1125584122\r\nTo: &quot;Jan Algermissen&quot; &lt;jalgermissen@...&gt;\r\nCc: &quot;rest discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Disposition: inline\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nMIME-Version: 1.0\r\nX-Mailer: MIME::Lite 1.5  (F2.73; T1.001; A1.64; B3.05; Q3.03)\r\nReferences: &lt;BAD6934E-3464-4877-8C54-F172BE0D5EFE@...&gt;\n   &lt;1125513071.4868.241899704@...&gt;\n   &lt;81B17C93-2F7D-4D7D-B4AF-76B1432AC639@...&gt;\r\nIn-Reply-To: &lt;81B17C93-2F7D-4D7D-B4AF-76B1432AC639@...&gt;\r\nDate: Thu, 01 Sep 2005 15:15:22 +0100\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;Vincent D Murphy&quot; &lt;vdm@...&gt;\r\nSubject: Re: [rest-discuss] Principles for designing RESTful systems to back-up\n   choices?\r\nX-Yahoo-Group-Post: member; u=81035509; y=2J27gGMj2TdqeAFhs24lc3Fz9fa0vZeJPxYd8tqN1fYdxi56cZo\r\nX-Yahoo-Profile: johnfoobar1\r\n\r\nOn Wed, 31 Aug 2005 20:59:43 +0200, &quot;Jan Algermissen&quot;\n&lt;jalgermissen@...&gt; said:\n[snip]\n&gt; &gt; Why does an intermediate &#39;config file&#39; have\n&gt; &gt; to be generated?\n&gt; \n&gt; Well, mostly because\n&gt; \n&gt; - there will need to be manual additions\n\nShouldn&#39;t those manual additions be in the host database? Imagine\na host database which can be exposed as a http server AND as a\nDHCP server. Two different processes, which speak the different\nprotocols, but share the underlying state.\n\nIs there a need to explicitly repeat this state in the monitoring\nprocess? Surely it can download a copy on demand.\n\n&gt; - nagios just needs that file and there is likely no chance to install\n&gt;    a modified (with REST interface) nagios\n\nThis reason has little to do with the architecture you know, and is more\nof an design or implementation detail.\n\nThat said, you could have a startup script for nagios, which GETs the\nhost database and generates a config file from it, and then starts\nnagios.\nPerhaps this script could run on HUP/restart as well. This could be\nsupplemented with a trigger mechanism which sends nagios a SIGHUP on\nupdates to the host database.\n\n&gt; &gt; I have imagined doing this with a DHCP server and nagios or similar.\n&gt; \n&gt; You mean adding a REST interface?\n&gt; \n&gt; And....what role does the DHCP server play? (sorry to be slow...but this\n&gt; sounds interesting)\n\nI imagine the network as having abstract elements. I mean abstract in\nthe\nsense that what application protocol they use is not relevant. So rather\nthan a DHCP server, you have a &#39;host database&#39; which manages all the\nrelevant\nstate. If you want to modify or read the state you can use a HTTP\ninterface,\na host can configure itself from the same database using DHCP or BOOTP\nor\nwhatever. In effect DHCP is a special-purpose/legacy &#39;read&#39; application\nprotocol. Of course it works with layer 2 (broadcast) addresses, so it\nhas\nits place alongside HTTP. The important thing is how you manage the\nstate.\nIf its in one place, other processes can use it, such as:\n\n- A logging process, like syslog can be just a HTTP server that gets\nPUTs\n  or POSTs from other elements on the network, perhaps after subscribing\n  to\n  them.\n\n- A monitoring/watchdog process, like nagios, could just do GETs of\ndifferent\n  URIs if they were exposed on the elements it is interested in. For\n  example\n  UNIX/windows machines could expose http://whatever/interfaces, which\n  is the\n  equivalent of the output of ifconfig. Same for routing tables,\n  firewall rules\n  etc.\n\n- Now imagine exposing these same resources as PUTable. Now this is\nstarting to\n  smell like SNMP. Rather than\n\nssh whatever\nifconfig eth0 up\n\n  or the SNMP way, you do\n\nPUT http://whatever/interfaces/eth0/status\n\nup\n\nMaybe we could start a wiki and start brainstorming other ideas if you\nlike\nwhere this is going.\n\n&gt; &gt; It would be nice if all networking hardware and software was exposed\n&gt; &gt; as resources over HTTP with RDF representations.\n&gt; \n&gt; Yes, it would. OTH, I am working in an environment where sometimes  \n&gt; all you\n&gt; have is bash (do not even think of an HTTP server) and no chance to  \n&gt; install\n&gt; any libraries that are not already on the hosts.\n\nMost machines have perl. HTTP::Daemon should be enough to get started.\nIn my experience you will end up exposing the resources anyway, through\nad-hoc ssh tunnels or whatever, so might as well have a little bit of\nstructure in there from the beginning.\n\n&gt; Hell...I am even facing the need to sort of &#39;tunnel&#39; HTTP through  \n&gt; email+someone\n&gt; using a floppy to get data from one network to the other due to  \n&gt; restrictive\n&gt; policies. (not sure whether this is doable at all with clever caching).\n\nThis may be more difficult than normal HTTP but not impossible. Even if\nyou are using a sneakernet, you are still doing\nREpresentational-State-Transfer.\nRemember, you can use the REST style to guide your choices.\n\nRFC822 bodies, or files on a filesystem are just as much a\nrepresentation\nas the entity body of a HTTP message. Sometimes its tougher to link them\nwith their URIs or metadata though (mail messages have headers, files\ncan be\ntar&#39;d with their metadata).\n\n"}}