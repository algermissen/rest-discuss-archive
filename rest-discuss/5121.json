{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":87113616,"authorName":"S. Mike Dierken","from":"&quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"W7o9D9rgb-UhkkWt2MkYrlIgys8KZwLQ4KS9MoORkFdxieonKYw1xDQiMLzMoQ1rv3Qil4M82MlswJvnLuzMIctVbYxY0A1X3rB-N7CgUw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] OO REST Client Help","postDate":"1119581905","msgId":5121,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTEwMS1EQVYxNEIwRjdBOTk2Q0U2REQwNzRGN0NDRDhFRDBAcGh4LmdibD4=","referencesHeader":"PGQ5ZTFvMitkMTN1QGVHcm91cHMuY29tPg=="},"prevInTopic":5119,"nextInTopic":5123,"prevInTime":5120,"nextInTime":5122,"topicId":5119,"numMessagesInTopic":3,"msgSnippet":"... Do you intend to transfer this serialized object to/from the resource? Or do you just mean an object instance for each identified resource? ... What s a","rawEmail":"Return-Path: &lt;mdierken@...&gt;\r\nX-Sender: mdierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 81556 invoked from network); 24 Jun 2005 02:58:23 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m28.grp.scd.yahoo.com with QMQP; 24 Jun 2005 02:58:23 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.56.86)\n  by mta4.grp.scd.yahoo.com with SMTP; 24 Jun 2005 02:58:23 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 23 Jun 2005 19:58:23 -0700\r\nMessage-ID: &lt;BAY101-DAV14B0F7A996CE6DD074F7CCD8ED0@...&gt;\r\nReceived: from 64.4.56.200 by BAY101-DAV14.phx.gbl with DAV;\n\tFri, 24 Jun 2005 02:58:22 +0000\r\nX-Originating-Email: [mdierken@...]\r\nX-Sender: mdierken@...\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;pnruelle&quot; &lt;Philip.Ruelle@...&gt;\r\nReferences: &lt;d9e1o2+d13u@...&gt;\r\nDate: Thu, 23 Jun 2005 19:58:25 -0700\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1437\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441\r\nX-OriginalArrivalTime: 24 Jun 2005 02:58:23.0255 (UTC) FILETIME=[95A61A70:01C57868]\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nSubject: Re: [rest-discuss] OO REST Client Help\r\nX-Yahoo-Group-Post: member; u=87113616; y=iQsuV1zH4aXm-y4-mh-VRoM3elOyrw8JfY6RmjQ8yUJIxj4\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n&gt; Can anyone give me some pointers as to how a REST client might be\n&gt; implemented in an OO language.\n&gt; To my mind there are two elements:\n&gt; 1) a collection of serializable classes which represent the resources\nDo you intend to transfer this serialized object to/from the resource?\nOr do you just mean an object instance for each identified resource?\n\n&gt; 2) a class which maps a given resource type to an URL\nWhat&#39;s a &#39;resource type&#39;? Do you mean a class like StreetMap, and it would\nhave a &#39;constructURI&#39; method that accepted an arbitrary set of parameters?\nOr maybe a strongly typed &#39;constructURI&#39; method like:\nclass StreetMap\n{\n    String constructURI(String country,String state, String street);\n    String constructURI(String latitude, String longitude);\n    String constructURI(String dunsIdentifier);\n}\n\n\n&gt;\n&gt; There is an example on the web (http://ociweb.com/jnb/jnbNov2004.html)\n&gt; which works along these lines.\n&gt;\n&gt; However I have a few issues with this approach:\n&gt; 1)Is it valid to map a resource type to a single URL or in practice\n&gt; would multiple URLs handle the same resource type?\nIf &#39;resource type&#39; is something like &#39;Employee&#39; or &#39;StreetMap&#39; or &#39;Product&#39;,\nthen multiple URIs would be used - one URI for each instance of that\nresource type. For example, each of these resources are of type &#39;Product&#39;\nhttp://www.amazon.com/exec/obidos/asin/B00003CXCT\nhttp://www.amazon.com/exec/obidos/asin/B0000AQS0F\nhttp://www.amazon.com/exec/obidos/asin/0940183218\n\n\n&gt; 2) How could non-trivial GETs be specified? The example only shows\n&gt; GETs with a single valued key, but what about &#39;searches&#39; on several\n&gt; non-key elements.\nYou would just add those into the resource identifier - either as path\nsegments or as query terms.\n\n\n&gt; What about searches using values of parent elements\n&gt; (in the example the &#39;owner&#39; is effectively a parent value but it has\n&gt; been included in the child thereby circumventing this problem but I\n&gt; don&#39;t think that scales where you have deep hierarchies).\nI&#39;m not sure what you mean.\n\n&gt; 3) Is there an application here for using &quot;hypermedia as the engine of\n&gt; application state&quot;. Should there be a single entry point into the\n&gt; &#39;application&#39; and that then returns a list of valid links that can be\n&gt; called. This is the area of REST that I struggle with most and judging\n&gt; by the large number of articles that focus on resource exposure and\n&gt; addressing and the tiny number that cover this aspect of REST I guess\n&gt; other people do to.\nYes, my opinion is that this works for small scale lists (1-10K elements),\nbut larger ones may need &#39;chunking&#39; via something like &#39;next&#39; and &#39;prev&#39;\nlinks in each resource representation.\n\n&gt;\n&gt; My approach is built on trying to keep the uniform interface within\n&gt; the OO client via the use of ResourceManager class which contains the\n&gt; 4 CRUD operations and maps the resource types (specified by the class\n&gt; types) to URLs but perhaps that&#39;s not &#39;right&#39;. We are talking about an\n&gt; OO client so maybe it is valid to wrap the REST interface into a SOAP\n&gt; style GetCollectionByOwner() interface even if it &#39;feels&#39; wrong.\nThere&#39;s nothing wrong with a GetCollectionByOwner() utility method within\nyour client - but you&#39;ll end up with multiple implementations if you need to\nintegrate with multiple providers. This will lead you to standardize on a\n&#39;resource description language&#39; in order to construct the URIs specific to\neach provider. Or, you may look into using the &#39;hypermedia&#39; approach which\nhas a &#39;GetCollections&#39; utility method that returns a list of indivual\nCollection elements with an Owner attribute.\n\n\n\n\n"}}