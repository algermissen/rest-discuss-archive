{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"DFEtj9TsA8oA4L_OKJNdPi_WK0LdAqeNuB10s6YuRWN2vO9f7TCL_KlwisXcatFsT4x5kxKaWNGTlEoLHNjac0nj3Hk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Digest Authentication related","postDate":"1290135250","msgId":16917,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRDRTVFNkQyLjQwNzA0MDhAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDE0NjM1My42MzYzMy5xbUB3ZWI1NTkwNC5tYWlsLnJlMy55YWhvby5jb20+","referencesHeader":"PDE0NjM1My42MzYzMy5xbUB3ZWI1NTkwNC5tYWlsLnJlMy55YWhvby5jb20+"},"prevInTopic":16916,"nextInTopic":16922,"prevInTime":16916,"nextInTime":16918,"topicId":16912,"numMessagesInTopic":7,"msgSnippet":"... Digest is one way of dealing with the question of how you pass that token back to the server. The simplest method is Basic. With basic you pass the same","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 42840 invoked from network); 19 Nov 2010 02:54:12 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m17.grp.re1.yahoo.com with QMQP; 19 Nov 2010 02:54:12 -0000\r\nX-Received: from unknown (HELO mail.smorgasblog.ie) (78.137.159.78)\n  by mta1.grp.re1.yahoo.com with SMTP; 19 Nov 2010 02:54:12 -0000\r\nX-Received: from [192.168.0.99] ([89.234.81.124])\n\tby mail.smorgasblog.ie\n\t; Fri, 19 Nov 2010 02:50:35 +0000\r\nMessage-ID: &lt;4CE5E6D2.4070408@...&gt;\r\nDate: Fri, 19 Nov 2010 02:54:10 +0000\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-GB; rv:1.9.2.12) Gecko/20101027 Thunderbird/3.1.6\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;146353.63633.qm@...&gt;\r\nIn-Reply-To: &lt;146353.63633.qm@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] Digest Authentication related\r\nX-Yahoo-Group-Post: member; u=164939419; y=8u5GA_s_OVAAN3Khtw4p094wqyRVaTud0OU07_eB_COVGn1h\r\nX-Yahoo-Profile: hack_poet\r\n\r\nOn 2010-11-19 02:25, Kevin Duffey wrote:\n&gt; This is an interesting issue.. I always thought that for my public REST\n&gt; api, I would write up an SDK doc that would explain to consumers that\n&gt; they will need to register at my site for an authentication key of some\n&gt; sort. I think many APIs do this now. You sign up, give some info, a\n&gt; generated token of some sort is sent out via email, you then use this to\n&gt; access that API.\n\nDigest is one way of dealing with the question of how you pass that \ntoken back to the server.\n\nThe simplest method is Basic. With basic you pass the same thing every time.\n\nHowever, since an eavesdropper could also send that same thing, there is \nno security built into the system. You can add it by using HTTPS, but \nunless you are going to use HTTPS anyway (because other data sent is \nalso sensitive to eavesdroppers), then this is wasteful (more \nprocessing, more bandwidth, less caching).\n\nWith digest you prove you have the token without sending it.\n\nOther methods include OAuth, HTTPS with client certificates, and \ncookie-based sessions.\n\nCookie-based sessions tend to be frowned upon in terms of REST, but it&#39;s \nworth noting that they also involve *something* being sent with each \nrequest.\n\nIt&#39;s worth noting, that with the use of digest (as with basic) the \npractical restriction on the client is merely to put pass a user-pass \ncombination to whatever API they are using. Usually, at one single point \nin the application.\n\nMeanwhile, on the server it can be as simple as adding their details to \na list of allowed users. One only needs to get involved in the \nmechanisms if rolling your own user-management. Even then, its pretty \nsimple and affects only one piece of code.\n\n\n"}}