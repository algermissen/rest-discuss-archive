{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"ecKbF85n9forfItk4yxyvL4Mh-wKmEX5B3T0ZmnR1Uv_E8Vy1gmkxshsegLdIoNuw0n_7PG9gTI52uiSqPgMrWXjScSV5DiEb37bjT4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] ReST vs MoST Messaging","postDate":"1060796381","msgId":3903,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjgwMWMzNjFjMSRlMDFlYzA4MCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDM1NDIxMTUyOS4xMDYwNzE5NDYyQGxvY2FsaG9zdD4gPDAwMDAwMWMzNjE5NyRhNDNiNDZkMCRhMDAwYThjMEBTZWFpcnRoQTMxPiA8NDEwMTE1NDQ0LjEwNjA3NzUzMzZAbG9jYWxob3N0Pg=="},"prevInTopic":3902,"nextInTopic":3904,"prevInTime":3902,"nextInTime":3904,"topicId":3880,"numMessagesInTopic":23,"msgSnippet":"From: Alex Jacobson  ... Its nothing more than a way for one party to notify another party of a resource. ... is ... What are you talking about?","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 23610 invoked from network); 13 Aug 2003 17:39:56 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m1.grp.scd.yahoo.com with QMQP; 13 Aug 2003 17:39:56 -0000\r\nReceived: from unknown (HELO lakemtao02.cox.net) (68.1.17.243)\n  by mta1.grp.scd.yahoo.com with SMTP; 13 Aug 2003 17:39:56 -0000\r\nReceived: from SeairthA31 ([68.96.198.4]) by lakemtao02.cox.net\n          (InterMail vM.5.01.04.05 201-253-122-122-105-20011231) with SMTP\n          id &lt;20030813173955.KLBY24359.lakemtao02.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Wed, 13 Aug 2003 13:39:55 -0400\r\nMessage-ID: &lt;006801c361c1$e01ec080$a000a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;354211529.1060719462@localhost&gt; &lt;000001c36197$a43b46d0$a000a8c0@SeairthA31&gt; &lt;410115444.1060775336@localhost&gt;\r\nSubject: Re: [rest-discuss] ReST vs MoST Messaging\r\nDate: Wed, 13 Aug 2003 13:39:41 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nFrom: &quot;Alex Jacobson&quot; &lt;alex@...&gt;\n&gt; &gt; RNA is *not* a mail\n&gt; &gt; protocol and &quot;Inbox&quot; does *not* mean a mail inbox.  Viewing RNA in this\n&gt; &gt; manner would definitely cause the misunderstanding you seem to have.\n&gt;\n&gt; OK, what is the purpose of RNA?\n\nIts nothing more than a way for one party to notify another party of a\nresource.\n\n&gt; &gt; Having said that, let&#39;s try another approach.  It may even be that this\nis\n&gt; &gt; the sort of modeling you are talking about.  I&#39;m making this up as I go,\n&gt; &gt; so bear with me...\n&gt; &gt;\n&gt; &gt; 1. resources: Identity, Inbox\n&gt; &gt; 2. content-types: application/x.rna.agreement+xml,\n&gt; &gt; application/x.rna.notification+xml\n&gt; &gt; 3. map(Identity): POST application/x.rna.agreement+xml =&gt;\n&gt; &gt; 200(application/x.rna.agreement+xml), GET =&gt; (200(*/*), 302())\n&gt; &gt; 4. map(Inbox): POST application/x.rna.notification+xml =&gt; 202()\n&gt;\n&gt; Nope.  You still don&#39;t have a content-type for identity or inbox.\n\nWhat are you talking about?  Resources dont have content-types!  Only the\nrepresentations of them do.  For instance, suppose you have a resource that\nis an image of me.  Either through conneg or through different URIs, a GET\nmay return a jpg, gif, png, svg, bmp, wmf, pdf, mix, pcx, or even ascii art.\nEach of those representations have a content-type.  The resource itself is\nnot any one of those content-types and should not be expressed as such.  It\n*may* be that the actual bits on the server are stored as svg (and converted\nfor all other content-type representations), but that doesn&#39;t mean that a\nclient should think of the resource as being an svg resource.  That is an\nimplementation detail that has nothing to do with the client-server\nrelationship. Likewise, neither the Identity or Inbox resources should have\na content-type.\n\n&gt; &gt; 1. Two resources are involved: an Identity resource and an Inbox\nresource.\n&gt; &gt; In order to write a client, the programmer will have to understand what\n&gt; &gt; these resources are.  This understanding comes from documentation that\n&gt; &gt; describes them.\n&gt;\n&gt; But since you don&#39;t provide content-type for the resources, the programmer\n&gt; has no way to understand what they are.\n&gt;\n&gt; Instead you are providing documentation that describes how they respond to\n&gt; various HTTP method names.  The programmer still has no idea what they\n&gt; *are*.\n&gt;\n&gt; What they *are* constrains how they interact via HTTP.  Defining a custom\n&gt; interface via HTTP is defining a custom interface and loses all the\n&gt; advantages of genericity/visibility/transparency etc.  It is NOT\n&gt; discoverable.\n&gt; Given the arbitrariness of your interface, why not define a new HTTP\nmethod?\n\nAll that needs knowing is what the resource does with the associated\ncontent-type (3 and 4 above).  Beyond that, the client shouldn&#39;t care what\nthe resource is.\n\n&gt; &gt; 2. Two content-types are involved: application/x.rna.agreement+xml and\n&gt; &gt; application/x.rna.notification+xml [1].  As with the resources, the\n&gt; &gt; programmer must understand the content-types to write the client.  Here,\n&gt; &gt; however, it would at least be possible to plug in existing code (written\n&gt; &gt; by another programmer).\n&gt;\n&gt; NOTHING motivates these content-types unless you specify the content-type\n&gt; of the resource itself.  They are completely arbitrary.  Why not just\n&gt; define a new HTTP method that requires these content-types?  Then, at\n&gt; least, you would know whether the resource supports it.\n\nHuh?\n\n&gt; &gt; 3. An Identity resource allows two methods: POST and GET.  For POST, the\n&gt; &gt; request entity&#39;s content-type must be application/x.rna.agreement+xml.\n&gt; &gt; The possible response [2] to a POST is 200, where the only returnable\n&gt; &gt; content-type is also application/x.rna.agreement+xml.  For GET, the\n&gt; &gt; possible responses can be 200, where the returnable content-type can be\n&gt; &gt; anything, and 302, where no response entity is given.\n&gt;\n&gt; If the returned content-type is undefined, you are violating HTTP and\n&gt; describing NOTHING.\n\nIf you are talking about the bit concerning GET and the 200 response, I am\nnot saying it&#39;s undefined.  I am saying its the set of all possible\ncontent-types.  But let&#39;s not get hung up on this detail.  It is only there\nbecause most humans want to plug URIs into web browsers with the expectation\nof getting something back.  Unlike URIs pointing to Inbox resource, URIs\npointing to Identity resources are highly visible.  Now, as we discuss this,\nI do think this function is outside the scope of RNA, esp. given the\nrewording in my prior post.  As I said, though, let&#39;s not get stuck on this\nminor point.  It isn&#39;t central to RNA.\n\n&gt; &gt; 4. An Inbox resource allows one method: POST.  For POST, the request\n&gt; &gt; entity&#39;s content-type must be application/x.rna.notification+xml.  The\n&gt; &gt; possible response to a POST is 202, where no response entity is given.\n&gt;\n&gt; 202 implies ABSOLUTELY NOTHING about the behavior of the system.  You are\n&gt; describing entirely arbitrary interfaces.  Why not define a new method?\n\nWould you like 204 instead?  To me, 202 means &quot;the request was valid and\nthere is nothing more to say&quot;.  If you know what\napplication/x.rna.notification+xml is and what its relationship to an Inbox\nresource is, then I think it means all that it needs to mean.\n\n&gt; A resource that accepts POSTs of ANY content-type and returns random\n&gt; content in response to a GET implements RNA.  What is the point?\n&gt; At least if you created a new method, the fact that RNA is supported would\n&gt; be visible.\n\nWhat?  Where did this come from?\n\n&gt; &gt; Notes:\n&gt; &gt; [2] 4xx and 5xx responses are alway implicitly supported, but can be\n&gt; &gt; explicitly named above if special criteria need to be given (such as a\n&gt; &gt; specific returnable content-type).\n&gt;\n&gt; Your spec says that an RNA inbox accepts any POST of the content-type you\n&gt; specify.  Stuff that is not that content-type is not covered by your spec.\n&gt; Again, your spec defines ABSOLUTELY NO visible behavior by an HTTP server.\n\nSorry, you&#39;ve lost me here as well.  What do you mean by that last sentance?\n\n&gt; &gt; Identity Resource\n&gt; &gt; This resource represents a user&#39;s (person, program, machine, etc.)\n&gt; &gt; identity. Currently, it has only two functions:  negotiate RNA Agreement\n&gt; &gt; documents (content-type of application/x.rna.agreement+xml), and to\n&gt; &gt; return something (such as an html document) what queried. Upon\nsuccessful\n&gt; &gt; negotiation of an RNA Agreement document, the client has either been\n&gt; &gt; given access to an Inbox Resource, or has been given validation of the\n&gt; &gt; current RNA Agreement.\n&gt;\n&gt; If resources have &quot;functions&quot; you are implementing a custom interface.\nWhy\n&gt; not give these functions explicit method names?\n\nBecause POST is sufficient.  I don&#39;t see that creating a new method would be\nany more helpful.\n\n&gt; &gt; It is expected that servers will act as\n&gt; &gt; clients when using RNA between each other (as opposed to having a\n&gt; &gt; dedicated client program).  I am currently working on a set of &quot;private&quot;\n&gt; &gt; server interfaces that allows a user to view received notifications,\n&gt; &gt; define agreement negotiation criteria, send notifications, etc.  This\n&gt; &gt; specification is being kept separate from RNA on purpose.  This allows\n&gt; &gt; other to define their own specifications for dealing with the back-end\n&gt; &gt; stuff as is appropriate for their own uses of RNA.  For instance, one\n&gt; &gt; such set of interfaces may be used to implement a mail-like usage of\nRNA.\n&gt; &gt; Another such set of interfaces may be used to implement a peer\n&gt; &gt; file-sharing network.  Yet another may be used to implement an &quot;instant\n&gt; &gt; messaging&quot; function.\n&gt;\n&gt; If you want to define customer interfaces, that is fine.  Its just not\n&gt; using HTTP.  Why not use IDL?\n\nI only mentioned this to make clear that this was not part of the RNA\nspecification. As with that bit above, let&#39;s not dwell on this, as it\ndoesn&#39;t directly have to do with the RNA specification and this\nconversation.\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}