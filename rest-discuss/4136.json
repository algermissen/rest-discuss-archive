{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":154469508,"authorName":"Justin Sampson","from":"&quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;","profile":"justin_t_sampson","replyTo":"SENDER","senderId":"1oVErQdkSbc5i2CnEsMLOKcIHEV9HH3zFUFqdUilBb8lhV4H4DwQZ7PYDVlnBv4jxR_I1sb2z-vf1GglpyTAZXlXs9dv3j_uXAv5EbCjUfgIbbaC1KnZPncD","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Restful URIs","postDate":"1076459296","msgId":4136,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNCQjNGOTNDODBCOTA1NEQ4NTM2RDUxQTNENzEzMDEzMThDMTAxQG1haWwtMDEuc3Bva2Vzb2Z0d2FyZS5jb20+"},"prevInTopic":4135,"nextInTopic":4137,"prevInTime":4135,"nextInTime":4137,"topicId":4098,"numMessagesInTopic":32,"msgSnippet":"Funny, I was just thinking about that over lunch myself. One solution is simply to define more complex queries as views inside the database itself. Most","rawEmail":"Return-Path: &lt;Justin.Sampson@...&gt;\r\nX-Sender: Justin.Sampson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67647 invoked from network); 11 Feb 2004 00:27:29 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m5.grp.scd.yahoo.com with QMQP; 11 Feb 2004 00:27:29 -0000\r\nReceived: from unknown (HELO mail-01.spokesoftware.com) (209.213.222.38)\n  by mta6.grp.scd.yahoo.com with SMTP; 11 Feb 2004 00:27:29 -0000\r\nX-MimeOLE: Produced By Microsoft Exchange V6.0.6249.0\r\ncontent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nDate: Tue, 10 Feb 2004 16:28:16 -0800\r\nMessage-ID: &lt;3BB3F93C80B9054D8536D51A3D71301318C101@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] Restful URIs\r\nThread-Index: AcPwNAcwi8tkmyVwRSuiThFwmtXzfgAAKwuA\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nX-eGroups-Remote-IP: 209.213.222.38\r\nFrom: &quot;Justin Sampson&quot; &lt;justin.sampson@...&gt;\r\nSubject: RE: [rest-discuss] Restful URIs\r\nX-Yahoo-Group-Post: member; u=154469508\r\nX-Yahoo-Profile: justin_t_sampson\r\n\r\nFunny, I was just thinking about that over lunch myself. One\nsolution is si=\r\nmply to define more complex queries as views inside\nthe database itself. Mo=\r\nst applications have a handful of commonly\nused queries. Then you can furth=\r\ner refine such queries with the\nURL query string just as for normal tables.=\r\n\n\nBeyond that of course it really depends on what you&#39;re trying to\naccompli=\r\nsh... sqlREST started as an experiment; if it turns out\nto be useful for yo=\r\nur application presumably you&#39;ll know what\nmakes sense for what you want to=\r\n do.\n\nJustin\n\n&gt; -----Original Message-----\n&gt; From: S. Alexander Jacobson [m=\r\nailto:alex@...]\n&gt; Sent: Tuesday, February 10, 2004 4:11 PM\n&gt; To: Donald =\r\nStrong\n&gt; Cc: rest-discuss\n&gt; Subject: RE: [rest-discuss] Restful URIs\n&gt;\n&gt; On=\r\n Tue, 10 Feb 2004, Donald Strong wrote:\n&gt;\n&gt; &gt; I have, for some time, been c=\r\nonsidering how sqlrest could be\n&gt; &gt; modified to handle composite keys.\n&gt; &gt;\n=\r\n&gt; &gt; http://sqlrest.sourceforge.net/\n&gt;\n&gt; Looks really interesting, but how d=\r\no you handle joins?\n&gt;\n&gt; Real life SQL databases provide joins because gener=\r\nally you\n&gt; don&#39;t want to have to download the entirety of multiple tables\n&gt;=\r\n to make a computation.\n&gt;\n&gt; To execute a join, REST seems to require that y=\r\nou download at\n&gt; least one entire table and then either:\n&gt;\n&gt; * for each rec=\r\nord in the downloaded table, make a request for a\n&gt; matching record in the =\r\nother table\n&gt;\n&gt; * make an HTTP request that includes all of the downloaded\n=\r\n&gt; table with a lot of ORs (OR operator not visibly supported by\n&gt; sqlREST)\n=\r\n&gt;\n&gt; * download the entirety of the other table and process client\n&gt; side\n&gt;\n=\r\n&gt; None of these seems particularly elegant and choosing among\n&gt; them depend=\r\ns on information to which you may or may not have\n&gt; access.\n&gt;\n&gt; -Alex-\n\n"}}