{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":231097723,"authorName":"Dr. Ernie Prabhakar","from":"&quot;Dr. Ernie Prabhakar&quot; &lt;drernie@...&gt;","profile":"sandhyaprabhakar2000","replyTo":"SENDER","senderId":"ju48KbD-7eFC6vfoUSiki6mNBUPoAA5NxsUElpES4uhiZ-SHINbglJk6s3aStlLrjM8NJaPDQrhVl5IfE-y0AgBxuZlV23IgpM8bEWQSWhc5Jm8Y8Q","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] REST application model fragments from 1994","postDate":"1149790867","msgId":6304,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjhFNDEyLTJERkQtNDZGNS1CRDdFLThEQUJFRUY4ODU0MEBvcGVuZGFyd2luLm9yZz4=","inReplyToHeader":"PEMzNTY5NDg5LTU5RTItNDg4MC04RDU4LUFDRjEyMDU0OTQ0OUB0b3BpY21hcHBpbmcuY29tPg==","referencesHeader":"PEMzNTY5NDg5LTU5RTItNDg4MC04RDU4LUFDRjEyMDU0OTQ0OUB0b3BpY21hcHBpbmcuY29tPg=="},"prevInTopic":6302,"nextInTopic":0,"prevInTime":6303,"nextInTime":6305,"topicId":6302,"numMessagesInTopic":2,"msgSnippet":"Hmm.  This looks (at least to me) vaguely similar to Rails functional ... I wonder if there s an underlying design model one could abstract into a generic DSL","rawEmail":"Return-Path: &lt;drernie@...&gt;\r\nX-Sender: drernie@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 23061 invoked from network); 8 Jun 2006 18:21:24 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m21.grp.scd.yahoo.com with QMQP; 8 Jun 2006 18:21:24 -0000\r\nReceived: from unknown (HELO mail-out3.apple.com) (17.254.13.22)\n  by mta1.grp.scd.yahoo.com with SMTP; 8 Jun 2006 18:21:24 -0000\r\nReceived: from relay5.apple.com (a17-128-113-35.apple.com [17.128.113.35])\n\tby mail-out3.apple.com (8.12.11/8.12.11) with ESMTP id k58IL2eQ018179;\n\tThu, 8 Jun 2006 11:21:02 -0700 (PDT)\r\nReceived: from [17.203.46.232] (unknown [17.203.46.232])\n\tby relay5.apple.com (Apple SCV relay) with ESMTP id EFC71324002;\n\tThu,  8 Jun 2006 11:21:01 -0700 (PDT)\r\nIn-Reply-To: &lt;C3569489-59E2-4880-8D58-ACF120549449@...&gt;\r\nReferences: &lt;C3569489-59E2-4880-8D58-ACF120549449@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752)\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-19--315024692\r\nMessage-Id: &lt;0068E412-2DFD-46F5-BD7E-8DABEEF88540@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nDate: Thu, 8 Jun 2006 11:21:07 -0700\r\nTo: Jan Algermissen &lt;jalgermissen@...&gt;\r\nX-Mailer: Apple Mail (2.752)\r\nX-Brightmail-Tracker: AAAAAA==\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Dr. Ernie Prabhakar&quot; &lt;drernie@...&gt;\r\nSubject: Re: [rest-discuss] REST application model fragments from 1994\r\nX-Yahoo-Group-Post: member; u=231097723; y=zVTy3WTKk0gJ8xXq_1ebb4hjVl02-YfnuvFpdCeFxkYpMi2TmNXUM_suI075NPE\r\nX-Yahoo-Profile: sandhyaprabhakar2000\r\n\r\n\r\n--Apple-Mail-19--315024692\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\nHmm.  This looks (at least to me) vaguely similar to Rails functional  \ntests:\n\n&gt;   def test_show\n&gt;     get :show, :id =&gt; 1\n&gt;\n&gt;     assert_response :success\n&gt;     assert_template &#39;show&#39;\n&gt;\n&gt;     assert_not_nil assigns(:thing)\n&gt;     assert assigns(:thing).valid?\n&gt;   end\n\nI wonder if there&#39;s an underlying design model one could abstract  \ninto a generic DSL for this sort of thing...\n\n-- Ernie P.\n\nOn Jun 8, 2006, at 6:33 AM, Jan Algermissen wrote:\n\n&gt; Hi,\n&gt;\n&gt; in a recent blog entry &quot;EAI DSL&quot;, Gergor Hohpe mentions that back in\n&gt; 1994 he wrote a little domain specific language to aid screen\n&gt; scraping based integration. Essentially the intention of the language\n&gt; was to simplify reacting to changes in the scraped UI.\n&gt;\n&gt; Here is a code fragment:\n&gt;\n&gt; ;---- scrape XYZ screen ----\n&gt; LABEL SCREEN_ABC\n&gt;\n&gt; FIND &quot;ADDRESS&quot;\n&gt; EXTRACT &quot;Street&quot;\n&gt; POSITION 653\n&gt; EXTRACT &quot;City&quot;\n&gt; EXTRACT &quot;State&quot;\n&gt; EXTRACT &quot;ZIP&quot;\n&gt;\n&gt; FIND &quot;INACT DT&quot;\n&gt; EXTRACT &quot;InactiveDate&quot;\n&gt; NEXT\n&gt; EXTRACT &quot;Inactive&quot;\n&gt;\n&gt; I find it interesting, that this looks a lot like what one would\n&gt; write to resemble the browsing and drilling-down patterns of REST&#39;s\n&gt; application model. Imagine an RDF enabled user agent - &#39;FIND\n&gt; &quot;ADDRESS&quot;&#39; (properly redone for RDF of course) could well mean: go do\n&gt; a GET, traverse the hypermdia links until you find something that can\n&gt; be inferred to be an address and &quot;EXTRACT CITY&quot; would then give us\n&gt; the foo:city of that address.\n&gt;\n&gt; Making use of this programatically would remove the need for a\n&gt; document-type based coupling (e.g. this GET has to respond with an\n&gt; address) between client and server and instead emphasize traversal of\n&gt; hyperlinks until some stated information need is satisfied.\n&gt;\n&gt; Back in 94...how smart!\n&gt;\n&gt; Jan\n&gt;\n&gt; [1] http://www.enterpriseintegrationpatterns.com/ramblings/\n&gt; 42_eaidsl.html\n&gt;\n&gt; \n\n\r\n--Apple-Mail-19--315024692\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=ISO-8859-1\r\n\r\n&lt;HTML&gt;&lt;BODY style=3D&quot;word-wrap: break-word; -khtml-nbsp-mode: space; -khtml=\r\n-line-break: after-white-space; &quot;&gt;Hmm.=A0 This looks (at least to me) vague=\r\nly similar to Rails functional tests:&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placehol=\r\nder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;DIV&gt;=A0 def test_show&lt;/DIV&gt;&lt;DIV&gt;=\r\n=A0 =A0 get :show, :id =3D&gt; 1&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeho=\r\nlder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;=A0 =A0 assert_response :success&lt;/DIV&gt;&lt;DIV&gt;=A0 =A0 assert_=\r\ntemplate &#39;show&#39;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;=\r\n=A0 =A0 assert_not_nil assigns(:thing)&lt;/DIV&gt;&lt;DIV&gt;=A0 =A0 assert assigns(:th=\r\ning).valid?&lt;/DIV&gt;&lt;DIV&gt;=A0 end&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;kht=\r\nml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;I wonder if there&#39;s an underlying design m=\r\nodel one could abstract into a generic DSL for this sort of thing...&lt;/DIV&gt;&lt;=\r\nDIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;-- Ernie P.&lt;/DIV&gt;&lt;DIV&gt;=\r\n&lt;BR&gt;&lt;DIV&gt;&lt;DIV&gt;On Jun 8, 2006, at 6:33 AM, Jan Algermissen wrote:&lt;/DIV&gt;&lt;BR c=\r\nlass=3D&quot;Apple-interchange-newline&quot;&gt;&lt;BLOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;SPAN class=3D=\r\n&quot;Apple-style-span&quot; style=3D&quot;border-collapse: separate; border-spacing: 0px =\r\n0px; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-sty=\r\nle: normal; font-variant: normal; font-weight: normal; letter-spacing: norm=\r\nal; line-height: normal; text-align: auto; -khtml-text-decorations-in-effec=\r\nt: none; text-indent: 0px; -apple-text-size-adjust: auto; text-transform: n=\r\none; orphans: 2; white-space: normal; widows: 2; word-spacing: 0px; &quot;&gt;&lt;DIV =\r\nid=3D&quot;ygrp-mlmsg&quot;&gt;&lt;DIV id=3D&quot;ygrp-msg&quot; style=3D&quot;width: 530px; padding: 0 20=\r\npx 0 0; float:left; position:relative; z-index:1; ; font-family: arial; fon=\r\nt-size: 10.14px; line-height: 12px; &quot;&gt;&lt;DIV id=3D&quot;ygrp-text&quot;&gt;&lt;P style=3D&quot;fon=\r\nt-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;=\r\nApple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-h=\r\neight: 12px; &quot;&gt;Hi,&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.1=\r\n4px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.=\r\n14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-f=\r\namily: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;in a recent blog e=\r\nntry &quot;EAI DSL&quot;, Gergor Hohpe mentions that back in &lt;/SPAN&gt;&lt;BR style=3D&quot;font=\r\n-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;A=\r\npple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-he=\r\night: 12px; &quot;&gt;1994 he wrote a little domain specific language to aid screen=\r\n &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height:=\r\n 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; fo=\r\nnt-size: 10.14px; line-height: 12px; &quot;&gt;scraping based integration. Essentia=\r\nlly the intention of the language &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia;=\r\n font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; =\r\nstyle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;was=\r\n to simplify reacting to changes in the scraped UI.&lt;/SPAN&gt;&lt;BR style=3D&quot;font=\r\n-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;fon=\r\nt-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;=\r\nApple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-h=\r\neight: 12px; &quot;&gt;Here is a code fragment:&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Geo=\r\nrgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Ge=\r\norgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-=\r\nspan&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px;=\r\n &quot;&gt;;---- scrape XYZ screen ----&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; fo=\r\nnt-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; sty=\r\nle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;LABEL =\r\nSCREEN_ABC&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; lin=\r\ne-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; li=\r\nne-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: G=\r\neorgia; font-size: 10.14px; line-height: 12px; &quot;&gt;FIND &quot;ADDRESS&quot;&lt;/SPAN&gt;&lt;BR s=\r\ntyle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPA=\r\nN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.1=\r\n4px; line-height: 12px; &quot;&gt;EXTRACT &quot;Street&quot;&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: =\r\nGeorgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-styl=\r\ne-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12p=\r\nx; &quot;&gt;POSITION 653&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14=\r\npx; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-fam=\r\nily: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;EXTRACT &quot;City&quot;&lt;/SPAN=\r\n&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; =\r\n&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size=\r\n: 10.14px; line-height: 12px; &quot;&gt;EXTRACT &quot;State&quot;&lt;/SPAN&gt;&lt;BR style=3D&quot;font-fam=\r\nily: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple=\r\n-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height=\r\n: 12px; &quot;&gt;EXTRACT &quot;ZIP&quot;&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size:=\r\n 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size=\r\n: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;f=\r\nont-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;FIND &quot;INACT D=\r\nT&quot;&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height=\r\n: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; f=\r\nont-size: 10.14px; line-height: 12px; &quot;&gt;EXTRACT &quot;InactiveDate&quot;&lt;/SPAN&gt;&lt;BR st=\r\nyle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN=\r\n class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14=\r\npx; line-height: 12px; &quot;&gt;NEXT&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font=\r\n-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;EXTRACT =\r\n&quot;Inactive&quot;&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; lin=\r\ne-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; li=\r\nne-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: G=\r\neorgia; font-size: 10.14px; line-height: 12px; &quot;&gt;I find it interesting, tha=\r\nt this looks a lot like what one would &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Geo=\r\nrgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-s=\r\npan&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; =\r\n&quot;&gt;write to resemble the browsing and drilling-down patterns of REST&#39;s &lt;/SPA=\r\nN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px;=\r\n &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-siz=\r\ne: 10.14px; line-height: 12px; &quot;&gt;application model. Imagine an RDF enabled =\r\nuser agent - &#39;FIND &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.=\r\n14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-f=\r\namily: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&quot;ADDRESS&quot;&#39; (proper=\r\nly redone for RDF of course) could well mean: go do &lt;/SPAN&gt;&lt;BR style=3D&quot;fon=\r\nt-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;=\r\nApple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-h=\r\neight: 12px; &quot;&gt;a GET, traverse the hypermdia links until you find something=\r\n that can &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; lin=\r\ne-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Ge=\r\norgia; font-size: 10.14px; line-height: 12px; &quot;&gt;be inferred to be an addres=\r\ns and &quot;EXTRACT CITY&quot; would then give us &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Ge=\r\norgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-=\r\nspan&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px;=\r\n &quot;&gt;the foo:city of that address.&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; f=\r\nont-size: 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; =\r\nfont-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; s=\r\ntyle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;Maki=\r\nng use of this programatically would remove the need for a &lt;/SPAN&gt;&lt;BR style=\r\n=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN cl=\r\nass=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px;=\r\n line-height: 12px; &quot;&gt;document-type based coupling (e.g. this GET has to re=\r\nspond with an &lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px;=\r\n line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family=\r\n: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;address) between client=\r\n and server and instead emphasize traversal of &lt;/SPAN&gt;&lt;BR style=3D&quot;font-fam=\r\nily: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple=\r\n-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height=\r\n: 12px; &quot;&gt;hyperlinks until some stated information need is satisfied.&lt;/SPAN=\r\n&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; =\r\n&quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px;=\r\n &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-siz=\r\ne: 10.14px; line-height: 12px; &quot;&gt;Back in 94...how smart!&lt;/SPAN&gt;&lt;BR style=3D=\r\n&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=\r\n=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN cl=\r\nass=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.14px;=\r\n line-height: 12px; &quot;&gt;Jan&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; font-siz=\r\ne: 10.14px; line-height: 12px; &quot;&gt;&lt;BR style=3D&quot;font-family: Georgia; font-si=\r\nze: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D=\r\n&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;[1] &lt;/SPAN&gt;=\r\n&lt;A href=3D&quot;http://www.enterpriseintegrationpatterns.com/ramblings/&quot;&gt;&lt;SPAN c=\r\nlass=3D&quot;Apple-style-span&quot; style=3D&quot;color: rgb(0, 0, 238); font-family: Geor=\r\ngia; font-size: 10.14px; line-height: 12px; -khtml-text-decorations-in-effe=\r\nct: underline; &quot;&gt;http://www.enterpri&lt;/SPAN&gt;&lt;WBR style=3D&quot;color: rgb(0, 0, 2=\r\n38); font-family: Georgia; font-size: 10.14px; line-height: 12px; -khtml-te=\r\nxt-decorations-in-effect: underline; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; sty=\r\nle=3D&quot;color: rgb(0, 0, 238); font-family: Georgia; font-size: 10.14px; line=\r\n-height: 12px; -khtml-text-decorations-in-effect: underline; &quot;&gt;seintegratio=\r\nnpat&lt;/SPAN&gt;&lt;/WBR&gt;&lt;WBR style=3D&quot;color: rgb(0, 0, 238); font-family: Georgia;=\r\n font-size: 10.14px; line-height: 12px; -khtml-text-decorations-in-effect: =\r\nunderline; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;color: rgb(0, 0, 238=\r\n); font-family: Georgia; font-size: 10.14px; line-height: 12px; -khtml-text=\r\n-decorations-in-effect: underline; &quot;&gt;terns.com/&lt;/SPAN&gt;&lt;/WBR&gt;&lt;WBR style=3D&quot;c=\r\nolor: rgb(0, 0, 238); font-family: Georgia; font-size: 10.14px; line-height=\r\n: 12px; -khtml-text-decorations-in-effect: underline; &quot;&gt;&lt;SPAN class=3D&quot;Appl=\r\ne-style-span&quot; style=3D&quot;color: rgb(0, 0, 238); font-family: Georgia; font-si=\r\nze: 10.14px; line-height: 12px; -khtml-text-decorations-in-effect: underlin=\r\ne; &quot;&gt;ramblings/&lt;/SPAN&gt;&lt;/WBR&gt;&lt;/A&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;f=\r\nont-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt; &lt;/SPAN&gt;&lt;BR s=\r\ntyle=3D&quot;font-family: Georgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPA=\r\nN class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10.1=\r\n4px; line-height: 12px; &quot;&gt;42_eaidsl.html&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Ge=\r\norgia; font-size: 10.14px; line-height: 12px; &quot;&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;SPAN width=3D&quot;1&quot;=\r\n style=3D&quot;color: white;; color: rgb(255, 255, 255); font-family: arial; fon=\r\nt-size: 10.14px; line-height: 12px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; styl=\r\ne=3D&quot;color: rgb(255, 255, 255); font-family: arial; font-size: 10.14px; lin=\r\ne-height: 12px; &quot;&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/BLOCKQUOTE&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;/BODY&gt;=\r\n&lt;/HTML&gt;\r\n--Apple-Mail-19--315024692--\r\n\n"}}