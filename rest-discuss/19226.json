{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"4Be8BJaRjNep_62IuUIU2Bb_Pfl1uU8R2n1aQ--h41ELIco7wWhKlxkvjvv5tQ9icRfiHZO9MLj_PtN3Ic5NtNw_IoToKtKgLcpprQD0mA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Authorization and Statelessness","postDate":"1355210689","msgId":19226,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTIxMjExMDAyNDQ5LjYxODYyOGY3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDUwQzY0NkNBLjYwNDA3MDdAc2hlYWxldnkuY29tPg==","referencesHeader":"PDUwQzY0NkNBLjYwNDA3MDdAc2hlYWxldnkuY29tPg=="},"prevInTopic":19225,"nextInTopic":19227,"prevInTime":19225,"nextInTime":19227,"topicId":19224,"numMessagesInTopic":4,"msgSnippet":"... There s nothing inherently unRESTful about personalization.  Basing it on digest auth gives us caching advantages over both cookies, and tying it to","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 59125 invoked from network); 11 Dec 2012 07:24:59 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m7.grp.sp2.yahoo.com with QMQP; 11 Dec 2012 07:24:59 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta4.grp.sp2.yahoo.com with SMTP; 11 Dec 2012 07:24:59 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 114DC509B7;\n\tTue, 11 Dec 2012 02:24:58 -0500 (EST)\r\nDate: Tue, 11 Dec 2012 00:24:49 -0700\r\nTo: Shea Levy &lt;shea@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20121211002449.618628f7.eric@...&gt;\r\nIn-Reply-To: &lt;50C646CA.6040707@...&gt;\r\nReferences: &lt;50C646CA.6040707@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Authorization and Statelessness\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nShea Levy wrote:\n&gt; \n&gt; What makes this different from, say, personalizing a response based\n&gt; on the client&#39;s username?\n&gt; \n\nThere&#39;s nothing inherently unRESTful about personalization.  Basing it\non digest auth gives us caching advantages over both cookies, and tying\nit to /{username}/ URI allocation schemes.  What we&#39;re after in REST is\noptimizing the hell out of GET, remember...\n\nSay I have a resource called &quot;newsletter&quot; I want all guests to be able\nto read, personalized for registered members using client-side XSLT to\nhandle the mail-merge. The HTML representation of the newsletter must\nbe the same for all users so we can set cache-control: public.  It\ncontains code which calls an XSLT transformation residing in an\nexternal .xsl file, whose URL must not vary for the sake of caching.\n\nBut, that .xsl resource doesn&#39;t need to return the same representation\nfor all users.  The personal.xsl resource sets Vary: Authorization and\nhas no 401 or 403 response.  It has a 200 OK response which sets cache-\ncontrol: public for unauthorized users, personalizing the newsletter for\n&quot;Guest&quot; (as opposed to, say, &quot;Dave&quot;) which functions as a login link;\nwhereas Dave would be linked to his control-panel UI.  For example.\n\nAuthenticated users GET a 303 redirection to the personal.xsl file in\ntheir user directory, which has cache-control: private set.  Note that\nthe personal.xsl files in this example apply to all newsletters, so\nit&#39;s useful to cache them.  Note also that this is all invisible to the\nuser, dereferencing the newsletter resource results in a personalized\nnewsletter application steady-state -- which is a representation of the\nnewsletter resource the user dereferenced.\n\nActually, the HTML representation should be personalized for Guest by\ndefault, with the guest personal.xsl file containing an identity\ntransform (does nothing).  Also, the 303 redirects are cache-control:\nprivate.\n\nWe can expand the example to only work this way for user-agents which\nAccept: application/xhtml+xml (which all do client-side XSLT 1 nowadays)\nwhile performing the XSLT transformation server-side and sending the\npersonalized 200 OK response as text/html with cache-control: private\nfor other user-agents (public, if not logged in).  What this does is\nexpand the set of representations such that each user now has two\npossible 200 OK responses, HTML and XHTML.  Don&#39;t forget Vary: Accept.\n\nThis isn&#39;t &quot;the&quot; RESTful way to do personalization, merely my attempt\nat a very simple example of basic mail-merge functionality in the REST\nidiom, to help answer your questions...\n\n&gt; \n&gt; Why doesn&#39;t authorization violate the statelessness constraint of\n&gt; REST?\n&gt;\n\nI&#39;m going to turn that around on you, and ask what is it about my\nexample you find stateful, specifically?\n\n&gt;\n&gt; It seems to reduce visibility (monitoring systems need to know\n&gt; both the request datum AND the user&#39;s access rights to understand a\n&gt; request)\n&gt;\n\nNot really; intermediaries just need to know a user *has* access rights.\nAs to visibility, if my example didn&#39;t have that property, it wouldn&#39;t\nhave graceful degradation from highly-cacheable client-side merging\ndown to cache-miss server-side merging.\n\n&gt;\n&gt; and scalability (server needs to store access-control metadata across\n&gt; requests).\n&gt; \n\nSorry, not seeing it.  The access-control metadata is part of the\nrequest, which leads to scalability.  That a cookie is being used as\naccess-control metadata is not apparent from such a request.  It seems\nto me that the worst-case scenarios in my example, in terms of\nscalability vis-a-vis cache-hit ratio, are the best-case scenarios of\nnon-RESTful approaches to personalization.\n\nIOW, that most requests cause processing on the server is what&#39;s\nexpected with cookies, while REST gives me the means to avoid even\ncontacting the server in many if not most cases, for the given example.\nThe more millions of users, the greater the likelihood the newsletter&#39;s\nalready cached closer to the user than the origin server, meaning\nserver resource utilization per-user decreases as users increase, which\nis the real payoff to REST.\n\n-Eric\n\n"}}