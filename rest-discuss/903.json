{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"CJml2CdcD1UPK_ZqG-l7tlu3-acTOeDOwyM7i9KST3QdJ2vo4nZXsXjF4gZbsDdiuCfwhJNhftqJy7ywEZLRmkY","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Teaching Paul about Filesystems ;-) was re: Opacity Reconsidered","postDate":"1015483303","msgId":903,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDODcwQkE3LjlDQzlCNkIxQGp1bXAubmV0Pg==","referencesHeader":"PDNDODY5ODNGLjFDRkIxN0VBQGp1bXAubmV0PiA8M0M4NjlGMDQuNEJBNDk1MzRAcHJlc2NvZC5uZXQ+IDwzQzg2QTZDQy5CM0M3OUE1MUBqdW1wLm5ldD4gPDNDODZBQjA3LjhFRjlDNDMxQHByZXNjb2QubmV0PiA8M0M4NkFFMTUuNTEzRTA0MjJAanVtcC5uZXQ+IDwzQzg2QjJERC5ENERCMUYwOEBwcmVzY29kLm5ldD4gPDNDODZDQkM3LjUyQjU3RTM0QGp1bXAubmV0PiA8M0M4NkQxNEEuOEQwRkE5RTdAcHJlc2NvZC5uZXQ+IDwzQzg2REQ4RC5ENDQwOEI3NUBqdW1wLm5ldD4gPDNDODZFODIyLkI5MDM0NjJAcHJlc2NvZC5uZXQ+"},"prevInTopic":0,"nextInTopic":926,"prevInTime":902,"nextInTime":904,"topicId":903,"numMessagesInTopic":24,"msgSnippet":"... The amazing thing about SMB/CIFS vis-a-vis the Web isn t that its basic architecture (whatever that means, we re talking about names, here) is similar,","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: unknown); 7 Mar 2002 06:44:56 -0000\r\nReceived: (qmail 79566 invoked from network); 7 Mar 2002 06:44:45 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m8.grp.snv.yahoo.com with QMQP; 7 Mar 2002 06:44:45 -0000\r\nReceived: from unknown (HELO blanco.clickfeed.com) (207.8.92.96)\n  by mta1.grp.snv.yahoo.com with SMTP; 7 Mar 2002 06:44:44 -0000\r\nReceived: from jump.net (cust-92-97.customer.jump.net [207.8.92.97])\n\tby blanco.clickfeed.com (8.10.0/8.10.0) with ESMTP id g276ieO23781;\n\tThu, 7 Mar 2002 00:44:40 -0600\r\nMessage-ID: &lt;3C870BA7.9CC9B6B1@...&gt;\r\nDate: Thu, 07 Mar 2002 00:41:43 -0600\r\nX-Mailer: Mozilla 4.7 [en]C-CCK-MCD {Sony}  (Win98; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Paul Prescod &lt;paul@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Teaching Paul about Filesystems ;-) was re: Opacity Reconsidered\r\nReferences: &lt;3C86983F.1CFB17EA@...&gt; &lt;3C869F04.4BA49534@...&gt; &lt;3C86A6CC.B3C79A51@...&gt; &lt;3C86AB07.8EF9C431@...&gt; &lt;3C86AE15.513E0422@...&gt; &lt;3C86B2DD.D4DB1F08@...&gt; &lt;3C86CBC7.52B57E34@...&gt; &lt;3C86D14A.8D0FA9E7@...&gt; &lt;3C86DD8D.D4408B75@...&gt; &lt;3C86E822.B903462@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\n\nPaul Prescod wrote:\n\n&gt; It isn&#39;t an issue of whether there is any single thing. If you want to\n&gt; apply the design criteria of another system then the basic architecture\n&gt; and requirements have to be similar. That&#39;s clearly not true of SMB/CIFS\n&gt; so maybe we could stop talking about it.\n\nThe amazing thing about SMB/CIFS vis-a-vis the Web isn&#39;t that its &quot;basic architecture&quot;\n(whatever that means, we&#39;re talking about names, here) is similar, and I have no visibility to\nits requirements a priori.  The amazing thing about SMB/CIFS is the *almost identical to HTTP\nURI* naming scheme it employs.  It doesn&#39;t take much head-scratching to realize that the same\nproblems yield the same solutions, and indeed, the similarity of the two is a rather striking\nexample of the ToII.\n\n&gt; You haven&#39;t actually presented any lessons learned.\n\nThen you haven&#39;t read what I&#39;ve written. ;-)  But if you&#39;d prefer to hear it them from other\npotentially more authoritative sources, go spend a fraction of the amount of time prowling the\nreferences I&#39;ve posted that you (and I, and all of us on this list) have spent studying The\nOfficial Cannon. :-)\n\n&gt; The benefits you&#39;ve argued for non-opacity are quite small and\n&gt; you&#39;re talking about erecting new schema languages, conventions and\n&gt; interface definition systems to support it.\n\nWell, there&#39;s no reason to believe that the benefits or small, large, or otherwise in the\nabsence of a more detailed investigation of relaxing the opacity axiom.  But without such an\ninvestigation --- substituting dogma for research --- one can&#39;t really speak authoritatively\nabout such things.  It seems to me that the Opacity Axiom is overstated and overapplied, and\nI&#39;ve documented some few of the many reasons why embedding information in names is in fact\nuseful, not anathema as the dogma states.\n\nAs for the horrors of new schema languages, conventions, and interface definition systems...\nWRDL?  I rest my case.  If you&#39;re going to argue, you should at least try not to argue with\nyourself. ;-)  (Sometimes, that&#39;s hard --- trust me, I know. ;-)\n\n&gt; And I think you&#39;re wrong. At the very least, the opacity axiom frees the\n&gt; application to physically put its resources where-ever it wants without\n&gt; incurring the cost of an HTTP redirect. It also addresses Mark&#39;s issue\n&gt; about standardization.\n\n(a) The redirect issue is a complete red herring, as I&#39;ve already illustrated.  Name opacity\nhas *nothing at all* to do with redirection and relocation.\n\n(b)  The &quot;standardization&quot; issue is also a red herring, as I&#39;ve already illustrated.  It\nhardly matters whether what&#39;s being &quot;standardized&quot; (let&#39;s be more clear, specified by any and\nall who want to specify such things, independent of any central authority) is N3 notation for\nontologies of resources or some other mechanism for specifying generative grammars for names\nand information organizational conventions.\n\n&gt; &gt;   * URI should be constructable by human or machine\n&gt; &gt;   * URI should be meaningfully deconstructable by human or machine\n&gt; &gt;   * URI designers should be encouraged to build meaningful namespaces\n&gt;\n&gt; I disagree. Wherever possible, machines should be discouraged from\n&gt; either constructing or deconstructing them.\n\nWhy?  I&#39;ve heard all the reasons you and others have brought up.  They aren&#39;t compelling.\nThere are clear existance proofs of the power and utility of semantically meaningful names.\nThe counter-arguments are mostly apocryphal horror stories of certain bad choices made early\nin the Web&#39;s lifecycle.\n\n&gt; Barring a few weird cases\n&gt; (like censorship proxies) they should be &quot;end-to-end&quot; so that only the\n&gt; producing and consuming applications ever deconstruct them\n\nI agree.  Proper operation of intermediaries requires that it be possible to treat URI\nopaquely.  This doesn&#39;t mean that URI need be absolutely opaque, and says nothing about the\nproducers, consumers, etc.\n\n&gt; No, it&#39;s saying lets restrict our conversation to systems that are\n&gt; relevant.\n\nI&#39;m not going to argue with you about how to argue, Paul.  If you&#39;re offended by the plethora\nof potential learning opportunities I&#39;m providing you, I&#39;m truly sorry.\n\n&gt; Nobody could prevent you from writing software that does that but it\n&gt; would be poor software design.\n\nWell, you are in essence asserting that all attempts to embed semantics and use meaningful\nnames to structure systems of resources --- including such incredibly powerful and yet\nincredibly misunderstood efforts like Plan 9 --- is poor software design.  You make this\nassertion with very little backup, and contrary to the prevailing opinion of some of the\nworld&#39;s most influential computer scientists.\n\n&gt; Of course using human meaningful names is\n&gt; great. But writing software that presumes, for example, that the mailing\n&gt; archive is going to be broken down by years and that the years will\n&gt; reside on the same disk would be poor software design.\n\nIt does nothing of the sort.  It poses an abstract organization of resources in a\nquasi-hierarchical namespace.  It doesn&#39;t at all necessarily assume that the breakdown by\nyears is the only possible naming structure (others might simultaneously exist) or that the\nobjects are going to &quot;reside on the same disk.&quot;  (Check out NTDFS, AT&T 3DFS, Sun&#39;s\nTranslucent File System, the FiST stackable filesystem toolkit, and other filesystems to see\nwhy you&#39;re wrong in your presumption.)  It might be a bad software design if those\npresumptions were true, but the fact that you make those presumptions simply illustrates a\nlack of understanding of the flexibility and utility of the filesystem namespace in many\nmodern filesystems.\n\n&gt; I already have\n&gt; this problem when I want to move my massive trash folder to a different\n&gt; disk than the other mail messages.\n\nYes, no doubt, this is a huge problem.  Most workday local filesystems couple the namespace to\nthe underlying storage space in unpleasantly tight ways.  This is one of the problems we&#39;re\naddressing at Deepfile.\n\n&gt; And how will I get around the fact that my 1999 and 2000 folders just\n&gt; won&#39;t fit on the same disk and the &#92;&#92;someserver&#92; operating system\n&gt; doesn&#39;t have a concept of symlinks?\n\nSimple --- you layer on a stackable filesystem.  You then mount up the 1999 filesystem from\none place and the 2000 folder from another place into a single virtual parent directory.\nVoila!  It looks like they&#39;re in the same place, but they aren&#39;t.\n\n&gt; &gt; Yes, and what a good idea that turned out to be. ;-)\n&gt;\n&gt; It&#39;s an excellent idea.\n\nNow I know you&#39;re broken.  ;-)  The Windows registry is the worst idea ever, hands down, end\nof story.  It&#39;s such a bad idea that getting away from the registry and from &quot;DLL Hell&quot; ---\ni.e., enabling plug-and-go installation of software just by writing directories and files ---\nwas supposedly one of the original motivations of the research effort that became .NET.\n\n&gt; I don&#39;t dispute that the opacity principle has a price in\n&gt; simplicity and to a certain extent usability.\n\nNow we&#39;re getting somewhere.\n\n&gt; It compensates in\n&gt; *flexibility*.\n\nYes, by *losing* it.\n\n&gt; &gt; ... Contrast this with systems where\n&gt; &gt; installing an entire piece of software is simply a matter of unpacking a tarball in a\n&gt; &gt; directory.\n&gt;\n&gt; You&#39;re talking about something totally different.\n\nIt&#39;s part-and-parcel of the same thing.  Squint, you can see it.\n\njb\n\n\n\n"}}