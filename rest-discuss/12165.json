{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":383005568,"authorName":"Cameron, Scott","from":"&quot;Cameron, Scott&quot; &lt;scott.cameron@...&gt;","profile":"scameron02","replyTo":"SENDER","senderId":"BBocs592X88JwvNFCJ9yDKCQ_BE_LchnEssH_TngpoOpTSWJwdurO__eZ_SMm7d_i7J6jFAuwBqty553OVbX66KVWOij7agjdVqnvkemhg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Complex representation updates","postDate":"1235583981","msgId":12165,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDY5RUVBM0RFQjUyNDMyNEE4MkE2RUVBMjQ4MkFGNzdEMDM1QzEzNDlAdXNwaGxlMWEucGhsLnNhcC5jb3JwPg==","inReplyToHeader":"PDU1YzYwZTM3MDkwMjI0MTc0N242ZTk5YzlhM2o4NTk4ODhmYTBjNmJjNjY3QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDY5RUVBM0RFQjUyNDMyNEE4MkE2RUVBMjQ4MkFGNzdEMDM1QzBDMEZAdXNwaGxlMWEucGhsLnNhcC5jb3JwPiA8MTc4NDMzN0QtOTAwRC00MUQzLTg1NTYtRjIzNkJBNUM5N0U3QGlubm9xLmNvbT4gPDY5RUVBM0RFQjUyNDMyNEE4MkE2RUVBMjQ4MkFGNzdEMDM1QzBFNjdAdXNwaGxlMWEucGhsLnNhcC5jb3JwPiA8NTVjNjBlMzcwOTAyMjQxNzQ3bjZlOTljOWEzajg1OTg4OGZhMGM2YmM2NjdAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12163,"nextInTopic":12166,"prevInTime":12164,"nextInTime":12166,"topicId":12155,"numMessagesInTopic":12,"msgSnippet":"That s a good point.  I suppose I shouldn t phrase language-agnosticism as a REST requirement, but rather a requirement of the system I m working on.  It is,","rawEmail":"Return-Path: &lt;scott.cameron@...&gt;\r\nX-Sender: scott.cameron@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 99177 invoked from network); 25 Feb 2009 17:47:18 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m1.grp.re1.yahoo.com with QMQP; 25 Feb 2009 17:47:18 -0000\r\nX-Received: from unknown (HELO smtpde01.sap-ag.de) (155.56.68.171)\n  by mta17.grp.scd.yahoo.com with SMTP; 25 Feb 2009 17:47:17 -0000\r\nX-Received: from mail.sap.corp\n\tby smtpde01.sap-ag.de (26) with ESMTP id n1PHlERT017602\n\t(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);\n\tWed, 25 Feb 2009 18:47:14 +0100 (MET)\r\nX-MimeOLE: Produced By Microsoft Exchange V6.5\r\nContent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----_=_NextPart_001_01C99770.F7C71B8A&quot;\r\nDate: Wed, 25 Feb 2009 12:46:21 -0500\r\nMessage-ID: &lt;69EEA3DEB524324A82A6EEA2482AF77D035C1349@...&gt;\r\nIn-Reply-To: &lt;55c60e370902241747n6e99c9a3j859888fa0c6bc667@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] Complex representation updates\r\nThread-Index: AcmW6xYgajAhWh8ESrCt2z4rOwk+fwAgd08g\r\nReferences: &lt;69EEA3DEB524324A82A6EEA2482AF77D035C0C0F@...&gt; &lt;1784337D-900D-41D3-8556-F236BA5C97E7@...&gt; &lt;69EEA3DEB524324A82A6EEA2482AF77D035C0E67@...&gt; &lt;55c60e370902241747n6e99c9a3j859888fa0c6bc667@...&gt;\r\nTo: &quot;Solomon Duskis&quot; &lt;sduskis@...&gt;\r\nCc: &quot;Stefan Tilkov&quot; &lt;stefan.tilkov@...&gt;, &lt;rest-discuss@yahoogroups.com&gt;\r\nX-OriginalArrivalTime: 25 Feb 2009 17:47:11.0011 (UTC) FILETIME=[15D46730:01C99771]\r\nX-Scanner: Virus Scanner virwal06\r\nX-SAP: out\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Cameron, Scott&quot; &lt;scott.cameron@...&gt;\r\nSubject: RE: [rest-discuss] Complex representation updates\r\nX-Yahoo-Group-Post: member; u=383005568; y=leMFT4eIuvacNe1kCrUoO7kQ2A1m0Ar45UHUTkyfGCvuTw4xLA\r\nX-Yahoo-Profile: scameron02\r\n\r\n\r\n------_=_NextPart_001_01C99770.F7C71B8A\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThat&#39;s a good point.  I suppose I shouldn&#39;t phrase language-agnosticism\nas =\r\na REST requirement, but rather a requirement of the system I&#39;m\nworking on. =\r\n It is, however, something that feels much more naturally\nachievable with R=\r\nEST (or maybe more precisely, with ROA as defined by\nthe RESTful Web Servic=\r\ne book) than with an alternative approach (such as\nWSDL/SOAP) because of th=\r\ne tendency to use very well-understood\nlower-level standards like HTTP, URI=\r\n, XML and so on.  This seems to\nincrease the chances of interoperating acro=\r\nss languages significantly as\ncompared with higher-level standards that rel=\r\ny on toolkits to work with.\n\n\n \n\nKeith&#39;s comment about XSLT sounded like a =\r\ncool idea but I wanted to read\na little bit more about it before responding=\r\n.  However, almost\neverything I found about using XSLT with REST talks abou=\r\nt transforming\nGET results, not about returning code-on-demand for assistin=\r\ng with\nupdate logic.  Are there any public examples of this that you know o=\r\nf?\n\n \n\nOur clients will definitely not be running in a browser - most likel=\r\ny in\na server-side web application or a thick client - so I eliminated\nsome=\r\nthing like JavaScript right off the bat.  Your comments about\nrunning Ruby =\r\nscripts inside Java or CLR clients is interesting.  I\ndidn&#39;t know you could=\r\n do that.  I&#39;ll have to read up on how many of the\nlanguages we care about =\r\nsupport that kind of thing.  That sounds like it\nmight be cleaner for clien=\r\nts to interact with than XSLT.\n\n \n\nAnyway, thanks for the great information=\r\n.  It definitely sparked some\nnew things for me look into.\n\n \n\nFrom: Solomo=\r\nn Duskis [mailto:sduskis@...] \nSent: February-24-09 5:48 PM\nTo: Camer=\r\non, Scott\nCc: Stefan Tilkov; rest-discuss@yahoogroups.com\nSubject: Re: [res=\r\nt-discuss] Complex representation updates\n\n \n\nI&#39;m just not sure if REST has=\r\n the premise of language-agnostic services.\nSure, it&#39;s a worthwhile goal, b=\r\nut IMHO, it&#39;s not a REST requirement.\nREST principles come down to: client-=\r\nServer interaction, statelessness,\ncaching, uniform interfaces, layered sys=\r\ntems and code-on-demand. That&#39;s\nstraight form the dissertation.  There&#39;s no=\r\n discussion of language\nagnosticism in the REST bible.\n\nYou CAN implement l=\r\nogic on the client side, and the constraints are that\nthe client has to dow=\r\nnload the code through a uniform interface.\nBrowsers implement this via Jav=\r\naScript, and Keith Guaghan does it via\nXSLT (as you can see earlier in this=\r\n thread).\n\nTheoretically, you can send a script written in Ruby (or Perl, o=\r\nr\nPython) from the server and execute it on the client side (Java,\nMicrosof=\r\nt CLR, browser with plugin or some other platform).  That would\nstill be RE=\r\nSTful, and could work for you as long as all of the clients\nunderstand how =\r\ninvoke the downloaded scripts.\n\nCode-on-demand not orthogonal to REST (in t=\r\nhe Roy Fielding sense). It&#39;s\nhow a whole bunch of RESTFul Web 2.0 applicati=\r\nons effective balance the\ntension between communication performance and pro=\r\nduct management.  Roy\nFielding promises that good things like implicit vers=\r\nion management and\nnew feature roll out will happen when you follow REST an=\r\nd specifically\nuses code-on-demand as a means to that end.  &quot;the client&#39;s k=\r\nnowledge of\nmedia types and resource communication mechanisms, &lt;snip&gt; may b=\r\ne\nimproved on-the-fly (e.g., code-on-demand)&quot; --\nhttp://roy.gbiv.com/untang=\r\nled/2008/rest-apis-must-be-hypertext-driven.\n\nWith all of that said, I&#39;ve b=\r\neen looking for wars to RESTfully solve the\nsame tension myself.  I haven&#39;t=\r\n implemented a solution like this.  I\njust wrote a client that hard codes t=\r\nhe type of logic that you describe\nfor the sake of performance, and therefo=\r\nre fundamentally made my\napplication non-RESTful :).\n\n-Solomon\n\nOn Tue, Feb=\r\n 24, 2009 at 5:03 PM, Cameron, Scott &lt;scott.cameron@...&gt;\nwrote:\n\nNo, I =\r\ndefinitely don&#39;t want a language-specific client library.  Part of\nthe reas=\r\non we&#39;re considering a RESTful approach in the first place is\nthe promise o=\r\nf a language-agnostic service.\n\n \n\nImplementing it on the server side is de=\r\nfinitely an option, but I do\nhave performance concerns with cases that requ=\r\nire a large number of\nproperty changes per update.\n\n \n\nI&#39;m not sure it&#39;s pu=\r\nrely orthogonal to REST.  It definitely isn&#39;t\ncentral to the style but it f=\r\neels like it&#39;s difficult to work around the\nperformance concerns without br=\r\neaking the RESTful design constraints.\nPushing everything to the server on =\r\na property-by-property basis doesn&#39;t\nseem feasible, although it is obvious =\r\nthat this would keep the design\nRESTful.\n\n \n\nFeels like there is tension he=\r\nre in applications with more complicated\nstate modification requirements...=\r\n\n\n \n\nscott\n\n \n\nFrom: Stefan Tilkov [mailto:stefan.tilkov@...] \nSent: =\r\nFebruary-24-09 1:15 PM\n\n\nTo: Cameron, Scott\nCc: rest-discuss@...=\r\nm\nSubject: Re: [rest-discuss] Complex representation updates\n\n \n\nOn 24.02.2=\r\n009, at 20:19, Cameron, Scott wrote:\n\n \n\n       PropertyA contains a value =\r\nthat can be updated by incrementing\nthe current value by1 if PropertyB cont=\r\nains a &quot;true&quot; or 5 if PropertyB\ncontains a &quot;false&quot;.\n\n \n\nIn a local API libr=\r\nary, this would normally be implemented behind a\nprocedure callinterface. \n=\r\n\n \n\nIf that&#39;s the way you want it, you can do the same thing with the clien=\r\nt\nlibrary for your REST API. Or you might want to implement this on the\nser=\r\nver side so that the client doesn&#39;t have to care (which seems more\nreasonab=\r\nle to me) .\n\n \n\nSo this all seems very orthogonal to REST in my view.\n\n \n\nS=\r\ntefan\n\n--\n\nStefan Tilkov, http://www.innoq.com/blog/st/\n\n\n\n \n\n\r\n------_=_NextPart_001_01C99770.F7C71B8A\r\nContent-Type: text/html;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html xmlns:v=3D&quot;urn:schemas-microsoft-com:vml&quot; xmlns:o=3D&quot;urn:schemas-micr=\r\nosoft-com:office:office&quot; xmlns:w=3D&quot;urn:schemas-microsoft-com:office:word&quot; =\r\nxmlns:m=3D&quot;http://schemas.microsoft.com/office/2004/12/omml&quot; xmlns=3D&quot;http:=\r\n//www.w3.org/TR/REC-html40&quot;&gt;\n\n&lt;head&gt;\n&lt;meta http-equiv=3DContent-Type conten=\r\nt=3D&quot;text/html; charset=3Dus-ascii&quot;&gt;\n&lt;meta name=3DGenerator content=3D&quot;Micr=\r\nosoft Word 12 (filtered medium)&quot;&gt;\n&lt;!--[if !mso]&gt;\n&lt;style&gt;\nv&#92;:* {behavior:url=\r\n(#default#VML);}\no&#92;:* {behavior:url(#default#VML);}\nw&#92;:* {behavior:url(#def=\r\nault#VML);}\n.shape {behavior:url(#default#VML);}\n&lt;/style&gt;\n&lt;![endif]--&gt;\n&lt;sty=\r\nle&gt;\n&lt;!--\n /* Font Definitions */\n @font-face\n\t{font-family:Wingdings;\n\tpano=\r\nse-1:5 0 0 0 0 0 0 0 0 0;}\n@font-face\n\t{font-family:&quot;Cambria Math&quot;;\n\tpanose=\r\n-1:2 4 5 3 5 4 6 3 2 4;}\n@font-face\n\t{font-family:Calibri;\n\tpanose-1:2 15 5=\r\n 2 2 2 4 3 2 4;}\n@font-face\n\t{font-family:Tahoma;\n\tpanose-1:2 11 6 4 3 5 4 =\r\n4 2 4;}\n@font-face\n\t{font-family:Verdana;\n\tpanose-1:2 11 6 4 3 5 4 4 2 4;}\n=\r\n@font-face\n\t{font-family:Georgia;\n\tpanose-1:2 4 5 2 5 4 5 2 3 3;}\n /* Style=\r\n Definitions */\n p.MsoNormal, li.MsoNormal, div.MsoNormal\n\t{margin:0cm;\n\tma=\r\nrgin-bottom:.0001pt;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;ser=\r\nif&quot;;}\na:link, span.MsoHyperlink\n\t{mso-style-priority:99;\n\tcolor:blue;\n\ttext=\r\n-decoration:underline;}\na:visited, span.MsoHyperlinkFollowed\n\t{mso-style-pr=\r\niority:99;\n\tcolor:purple;\n\ttext-decoration:underline;}\np\n\t{mso-style-priori=\r\nty:99;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-bottom-alt:=\r\nauto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;=\r\nserif&quot;;}\nspan.EmailStyle18\n\t{mso-style-type:personal-reply;\n\tfont-family:&quot;V=\r\nerdana&quot;,&quot;sans-serif&quot;;\n\tcolor:windowtext;}\n.MsoChpDefault\n\t{mso-style-type:e=\r\nxport-only;}\n@page Section1\n\t{size:612.0pt 792.0pt;\n\tmargin:72.0pt 72.0pt 7=\r\n2.0pt 72.0pt;}\ndiv.Section1\n\t{page:Section1;}\n /* List Definitions */\n @lis=\r\nt l0\n\t{mso-list-id:887885370;\n\tmso-list-template-ids:360881674;}\n@list l0:l=\r\nevel1\n\t{mso-level-number-format:bullet;\n\tmso-level-text:&#92;F0B7;\n\tmso-level-t=\r\nab-stop:36.0pt;\n\tmso-level-number-position:left;\n\ttext-indent:-18.0pt;\n\tmso=\r\n-ansi-font-size:10.0pt;\n\tfont-family:Symbol;}\nol\n\t{margin-bottom:0cm;}\nul\n\t=\r\n{margin-bottom:0cm;}\n--&gt;\n&lt;/style&gt;\n&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\n &lt;o:shapedefault=\r\ns v:ext=3D&quot;edit&quot; spidmax=3D&quot;1026&quot; /&gt;\n&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;=\r\nxml&gt;\n &lt;o:shapelayout v:ext=3D&quot;edit&quot;&gt;\n  &lt;o:idmap v:ext=3D&quot;edit&quot; data=3D&quot;1&quot; /=\r\n&gt;\n &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;\n&lt;/head&gt;\n\n&lt;body lang=3DEN-CA link=3Dbl=\r\nue vlink=3Dpurple&gt;\n\n&lt;div class=3DSection1&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span styl=\r\ne=3D&#39;font-size:10.0pt;font-family:&quot;Georgia&quot;,&quot;serif&quot;&#39;&gt;That&#8217;s\na good po=\r\nint.&nbsp; I suppose I shouldn&#8217;t phrase language-agnosticism as\na RES=\r\nT requirement, but rather a requirement of the system I&#8217;m working on.=\r\n&nbsp;\nIt is, however, something that feels much more naturally achievable =\r\nwith REST\n(or maybe more precisely, with ROA as defined by the RESTful Web =\r\nService book)\nthan with an alternative approach (such as WSDL/SOAP) because=\r\n of the tendency\nto use very well-understood lower-level standards like HTT=\r\nP, URI, XML and so\non.&nbsp; This seems to increase the chances of interope=\r\nrating across languages\nsignificantly as compared with higher-level standar=\r\nds that rely on toolkits to work\nwith. &lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DM=\r\nsoNormal&gt;&lt;span style=3D&#39;font-size:10.0pt;font-family:&quot;Georgia&quot;,&quot;serif&quot;&#39;&gt;&lt;o:=\r\np&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:10=\r\n.0pt;font-family:&quot;Georgia&quot;,&quot;serif&quot;&#39;&gt;Keith&#8217;s\ncomment about XSLT sounde=\r\nd like a cool idea but I wanted to read a little bit\nmore about it before r=\r\nesponding.&nbsp; However, almost everything I found about\nusing XSLT with R=\r\nEST talks about transforming GET results, not about returning\ncode-on-deman=\r\nd for assisting with update logic.&nbsp; Are there any public\nexamples of t=\r\nhis that you know of?&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span sty=\r\nle=3D&#39;font-size:10.0pt;font-family:&quot;Georgia&quot;,&quot;serif&quot;&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/sp=\r\nan&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:10.0pt;font-family:&quot;=\r\nGeorgia&quot;,&quot;serif&quot;&#39;&gt;Our\nclients will definitely not be running in a browser &=\r\n#8211; most likely in a\nserver-side web application or a thick client &#821=\r\n1; so I eliminated something\nlike JavaScript right off the bat.&nbsp; Your =\r\ncomments about running Ruby\nscripts inside Java or CLR clients is interesti=\r\nng.&nbsp; I didn&#8217;t know\nyou could do that.&nbsp; I&#8217;ll have to r=\r\nead up on how many of the\nlanguages we care about support that kind of thin=\r\ng.&nbsp; That sounds like it\nmight be cleaner for clients to interact with =\r\nthan XSLT.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-=\r\nsize:10.0pt;font-family:&quot;Georgia&quot;,&quot;serif&quot;&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p=\r\n class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:10.0pt;font-family:&quot;Georgia&quot;,&quot;s=\r\nerif&quot;&#39;&gt;Anyway,\nthanks for the great information.&nbsp; It definitely sparke=\r\nd some new things for\nme look into.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNo=\r\nrmal&gt;&lt;span style=3D&#39;font-size:9.0pt;font-family:&quot;Verdana&quot;,&quot;sans-serif&quot;&#39;&gt;&lt;o:=\r\np&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;div style=3D&#39;border:none;border-top:solid #B5C4=\r\nDF 1.0pt;padding:3.0pt 0cm 0cm 0cm&#39;&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;b&gt;&lt;span lang=3D=\r\nEN-US style=3D&#39;font-size:10.0pt;font-family:\n&quot;Tahoma&quot;,&quot;sans-serif&quot;&#39;&gt;From:&lt;/=\r\nspan&gt;&lt;/b&gt;&lt;span lang=3DEN-US style=3D&#39;font-size:10.0pt;\nfont-family:&quot;Tahoma&quot;=\r\n,&quot;sans-serif&quot;&#39;&gt; Solomon Duskis [mailto:sduskis@...] &lt;br&gt;\n&lt;b&gt;Sent:&lt;/b&gt;=\r\n February-24-09 5:48 PM&lt;br&gt;\n&lt;b&gt;To:&lt;/b&gt; Cameron, Scott&lt;br&gt;\n&lt;b&gt;Cc:&lt;/b&gt; Stefan=\r\n Tilkov; rest-discuss@yahoogroups.com&lt;br&gt;\n&lt;b&gt;Subject:&lt;/b&gt; Re: [rest-discuss=\r\n] Complex representation updates&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;p class=3D=\r\nMsoNormal&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal style=3D&#39;margin-botto=\r\nm:12.0pt&#39;&gt;I&#39;m just not sure if REST has\nthe premise of language-agnostic se=\r\nrvices.&nbsp; Sure, it&#39;s a worthwhile goal,\nbut IMHO, it&#39;s not a REST requi=\r\nrement.&nbsp; REST principles come down to:\nclient-Server interaction, stat=\r\nelessness, caching, uniform interfaces, layered\nsystems and code-on-demand.=\r\n That&#39;s straight form the dissertation.&nbsp;\nThere&#39;s no discussion of lang=\r\nuage agnosticism in the REST bible.&lt;br&gt;\n&lt;br&gt;\nYou CAN implement logic on the=\r\n client side, and the constraints are that the\nclient has to download the c=\r\node through a uniform interface.&nbsp; Browsers\nimplement this via JavaScri=\r\npt, and Keith Guaghan does it via XSLT (as you can\nsee earlier in this thre=\r\nad).&lt;br&gt;\n&lt;br&gt;\nTheoretically, you can send a script written in Ruby (or Perl=\r\n, or Python) from\nthe server and execute it on the client side (Java, Micro=\r\nsoft CLR, browser with\nplugin or some other platform).&nbsp; That would sti=\r\nll be RESTful, and could\nwork for you as long as all of the clients underst=\r\nand how invoke the downloaded\nscripts.&lt;br&gt;\n&lt;br&gt;\nCode-on-demand not orthogon=\r\nal to REST (in the Roy Fielding sense). It&#39;s how a\nwhole bunch of RESTFul W=\r\neb 2.0 applications effective balance the tension\nbetween communication per=\r\nformance and product management.&nbsp; Roy Fielding\npromises that good thin=\r\ngs like implicit version management and new feature roll\nout will happen wh=\r\nen you follow REST and specifically uses code-on-demand as a\nmeans to that =\r\nend.&nbsp; &quot;the client&#8217;s knowledge of media types and\nresource c=\r\nommunication mechanisms, &lt;snip&gt; may be improved on-the-fly\n(e.g., cod=\r\ne-on-demand)&quot; -- &lt;a\nhref=3D&quot;http://roy.gbiv.com/untangled/2008/rest-ap=\r\nis-must-be-hypertext-driven&quot;&gt;http://roy.gbiv.com/untangled/2008/rest-apis-m=\r\nust-be-hypertext-driven&lt;/a&gt;.&lt;br&gt;\n&lt;br&gt;\nWith all of that said, I&#39;ve been look=\r\ning for wars to RESTfully solve the same\ntension myself.&nbsp; I haven&#39;t im=\r\nplemented a solution like this.&nbsp; I just\nwrote a client that hard codes=\r\n the type of logic that you describe for the sake\nof performance, and there=\r\nfore fundamentally made my application non-RESTful :).&lt;br&gt;\n&lt;br&gt;\n-Solomon&lt;o:=\r\np&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;p class=3DMsoNormal&gt;On Tue, Feb 24, 2009 at 5:03 PM, =\r\nCameron, Scott &lt;&lt;a\nhref=3D&quot;mailto:scott.cameron@...&quot;&gt;scott.cameron@s=\r\nap.com&lt;/a&gt;&gt; wrote:&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;p=\r\n style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;No, I definitel=\r\ny\ndon&#8217;t want a language-specific client library.&nbsp; Part of the re=\r\nason\nwe&#8217;re considering a RESTful approach in the first place is the p=\r\nromise of\na language-agnostic service.&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;b=\r\nackground:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;&nbsp;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/=\r\np&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;Implement=\r\ning it on\nthe server side is definitely an option, but I do have performanc=\r\ne concerns\nwith cases that require a large number of property changes per u=\r\npdate.&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;=\r\nfont-size:9.0pt&#39;&gt;&nbsp;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white=\r\n&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;I&#8217;m not sure\nit&#8217;s purely orth=\r\nogonal to REST.&nbsp; It definitely isn&#8217;t central\nto the style but it=\r\n feels like it&#8217;s difficult to work around the\nperformance concerns wi=\r\nthout breaking the RESTful design constraints.&nbsp;\nPushing everything to =\r\nthe server on a property-by-property basis doesn&#8217;t\nseem feasible, alt=\r\nhough it is obvious that this would keep the design RESTful.&lt;/span&gt;&lt;o:p&gt;&lt;/o=\r\n:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;&nbs=\r\np;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font=\r\n-size:9.0pt&#39;&gt;Feels like there is\ntension here in applications with more com=\r\nplicated state modification\nrequirements&#8230;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p s=\r\ntyle=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;&nbsp;&lt;/span&gt;&lt;o:p=\r\n&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;font-size:9.0pt&#39;&gt;=\r\nscott&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;f=\r\nont-size:9.0pt&#39;&gt;&nbsp;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;div style=3D&#39;border:n=\r\none;border-top:solid #B5C4DF 1.0pt;padding:0cm 0cm 0cm 0cm&#39;&gt;\n\n&lt;p style=3D&#39;b=\r\nackground:white&#39;&gt;&lt;b&gt;&lt;span lang=3DEN-US style=3D&#39;font-size:10.0pt&#39;&gt;From:&lt;/sp=\r\nan&gt;&lt;/b&gt;&lt;span\nlang=3DEN-US style=3D&#39;font-size:10.0pt&#39;&gt; Stefan Tilkov [mailto=\r\n:&lt;a\nhref=3D&quot;mailto:stefan.tilkov@...&quot; target=3D&quot;_blank&quot;&gt;stefan.tilkov=\r\n@...&lt;/a&gt;]\n&lt;br&gt;\n&lt;b&gt;Sent:&lt;/b&gt; February-24-09 1:15 PM&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;=\r\n/p&gt;\n\n&lt;div&gt;\n\n&lt;p class=3DMsoNormal style=3D&#39;background:white&#39;&gt;&lt;span lang=3DEN=\r\n-US style=3D&#39;font-size:\n10.0pt&#39;&gt;&lt;br&gt;\n&lt;b&gt;To:&lt;/b&gt; Cameron, Scott&lt;br&gt;\n&lt;b&gt;Cc:&lt;/=\r\nb&gt; &lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-d=\r\niscuss@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;b&gt;Subject:&lt;/b&gt; Re: [rest-discuss] Complex r=\r\nepresentation updates&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;p sty=\r\nle=3D&#39;background:white&#39;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;ba=\r\nckground:white&#39;&gt;On 24.02.2009, at 20:19, Cameron, Scott wrote:&lt;o:p&gt;&lt;/o:p&gt;&lt;/=\r\np&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;margin-bottom:12.0pt;background:white&#39;&gt;&lt;o:p&gt;=\r\n&nbsp;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&lt;b&gt;&lt;span lang=3DEN-US style=\r\n=3D&#39;font-size:10.0pt;\nfont-family:&quot;Georgia&quot;,&quot;serif&quot;;color:#1E66AE&#39;&gt;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PropertyA&nbsp;contains\na value that&nbsp=\r\n;can be updated by incrementing the current\nvalue&nbsp;by1&nbsp;if Property=\r\nB contains\na&nbsp;&#8220;true&#8221;&nbsp;or&nbsp;5 if PropertyB contains\na=\r\n&nbsp;&#8220;false&#8221;.&lt;/span&gt;&lt;/b&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;ba=\r\nckground:white&#39;&gt;&lt;span style=3D&#39;font-size:10.0pt;font-family:&quot;Georgia&quot;,&quot;seri=\r\nf&quot;;\ncolor:black&#39;&gt;&nbsp;&lt;/span&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;p style=3D&#39;backgrou=\r\nnd:white&#39;&gt;&lt;b&gt;&lt;span lang=3DEN-US style=3D&#39;font-size:10.0pt;\nfont-family:&quot;Geo=\r\nrgia&quot;,&quot;serif&quot;;color:#1E66AE&#39;&gt;In a local API library, this would\nnormally be=\r\n implemented behind a procedure callinterface.&nbsp;&lt;/span&gt;&lt;/b&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;=\r\n/p&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;=\r\n&lt;/p&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;If that&#39;s the way you want it, y=\r\nou can do the same\nthing with the client library for your REST API.&nbsp;Or=\r\n you might want to\nimplement this on the server side so that the client doe=\r\nsn&#39;t have to care\n(which seems more reasonable to me) .&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/d=\r\niv&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;d=\r\niv&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;So this all seems very orthogonal to RES=\r\nT in my\nview.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;=\r\n&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;Stefan&lt;=\r\no:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;--&lt;o:p&gt;=\r\n&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;\n\n&lt;p style=3D&#39;background:white&#39;&gt;Stefan Tilkov, &lt;a\n=\r\nhref=3D&quot;http://www.innoq.com/blog/st/&quot; target=3D&quot;_blank&quot;&gt;http://www.innoq.c=\r\nom/blog/st/&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;di=\r\nv&gt;\n\n&lt;p class=3DMsoNormal style=3D&#39;background:white&#39;&gt;&lt;span style=3D&#39;color:wh=\r\nite&#39;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;=\r\no:p&gt;&nbsp;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n\r\n------_=_NextPart_001_01C99770.F7C71B8A--\r\n\n"}}