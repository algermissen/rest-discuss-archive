{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"5cgdd8rTlj-kV9S0WXPmfZp7CExC-QFE-9cGkJz2ZzKqzOZ4iZtcb9fceTWvY43KRtOW_w1L8G6-e_ujT9-zKXy2rBgowqBaD0ZHy9PtMA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Re: Thoughts about URLs for a REST driven website","postDate":"1267703467","msgId":14981,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwMzA0MDQ1MTA3LjgwM2ZlMzMwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGhtbnVmZytsb3F1QGVHcm91cHMuY29tPg==","referencesHeader":"PDIwMTAwMzA0MDE0ODAwLjY0YTE5YWI3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPGhtbnVmZytsb3F1QGVHcm91cHMuY29tPg=="},"prevInTopic":14980,"nextInTopic":14982,"prevInTime":14980,"nextInTime":14982,"topicId":14978,"numMessagesInTopic":41,"msgSnippet":"... Doesn t matter.  What matters is *that* URIs appear in link relations, not *what* URIs you are using. ... By using hypertext and link relations. ... OK, if","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25065 invoked from network); 4 Mar 2010 11:51:51 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m4.grp.sp2.yahoo.com with QMQP; 4 Mar 2010 11:51:51 -0000\r\nX-Received: from unknown (HELO fallback-in1.mxes.net) (216.86.168.180)\n  by mta3.grp.re1.yahoo.com with SMTP; 4 Mar 2010 11:51:51 -0000\r\nX-Received: from mxout-08.mxes.net (mxout-08.mxes.net [216.86.168.183])\n\tby fallback-in1.mxes.net (Postfix) with ESMTP id 27CA386481\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu,  4 Mar 2010 06:51:51 -0500 (EST)\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 27419509DA;\n\tThu,  4 Mar 2010 06:51:18 -0500 (EST)\r\nDate: Thu, 4 Mar 2010 04:51:07 -0700\r\nTo: &quot;Jorn Wildt&quot; &lt;jw@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100304045107.803fe330.eric@...&gt;\r\nIn-Reply-To: &lt;hmnufg+loqu@...&gt;\r\nReferences: &lt;20100304014800.64a19ab7.eric@...&gt;\n\t&lt;hmnufg+loqu@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Re: Thoughts about URLs for a REST driven\n website\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Jorn Wildt&quot; wrote:\n&gt; \n&gt; &gt; Your resource, http://www.mysite.com/blogs/peter, can return\n&gt; &gt; anything you need it to return, regardless of any back-end API.\n&gt; \n&gt; Yes. But I have to point out that www.mysite.com is not the same as\n&gt; my backend rest.mysite.com. The www site has no database in it.\n&gt; \n\nDoesn&#39;t matter.  What matters is *that* URIs appear in link relations,\nnot *what* URIs you are using.\n\n&gt; \n&gt; The interesting point is: how does my www site find the correct ATOM\n&gt; resouce when the only thing it has in it&#39;s URL is &quot;peter&quot;, as in\n&gt; http://www.mysite.com/blogs/peter.\n&gt; \n\nBy using hypertext and link relations.\n\n&gt; \n&gt; 1) The www site have apriori knowledge of how to transform &quot;peter&quot;\n&gt; into the backend resource http://rest.mysite.com/feeds/peter\n&gt; \n\nOK, if you mean transform _from_ the backend resource.  That&#39;s the sort\nof implementation detail in REST that&#39;s opaque behind the interface.\n\nBTW, your website must have this a priori knowledge of the relationship,\notherwise it can&#39;t instruct the client about it.\n\n&gt;\n&gt; 2) The complete resource reference is included in the URL, as in\n&gt; http://www.mysite.com/blogs/http%3a2f%2frest.mysite.com%2ffeeds%2fpeter\n&gt; \n&gt; &gt; There&#39;s really no need to put the URI of a &quot;REST\n&gt; &gt; resource&quot; into the URI of a request.\n&gt; \n&gt; But this is exactly my problem: if I do not want to use apriori\n&gt; information about the REST resource&#39;s URL format, then I must include\n&gt; the complete REST URL into my www URL. \n&gt; \n\nOK, you don&#39;t want to use 1), gotcha.  So use hypertext.  What my demo\nshows is an XHTML file which calls an XSLT transformation.  The XSLT\ncode knows what source file to tranform by reading it from the XHTML\nfile&#39;s &lt;link rel=&#39;source&#39;/&gt; href (actually from @data, same diff).  For\nclient-side XSLT like my demo, this has to be from the same domain due\nto cross-site restrictions.\n\nA server-side transformation works the same way, though.  REST only\nrequires that the source file is linked to.  Your &lt;link rel=&#39;source&#39;/&gt;\nwill point to a different domain, is all.  No need to put it in the URI.\n\n&gt;\n&gt; Either I get a very tight integration with my backend REST API, by\n&gt; utilizing apriori information, or I must include complete resource\n&gt; URLs in my www URL.\n&gt; \n\nI&#39;m obviously not agreeing with that &#39;must include&#39; bit.  You can also\nemploy headers, including Link.  My demo includes my /date translation\nservice, which has a different domain.  Due to cross-site restrictions,\nI must proxy it from the demo domain.  I just do this using libcurl:\n\nhttp://charger.bisonsystems.net/date?iso=2010-03-04 simply loads:\nhttp://en.wiski.org/date?iso=2010-03-04 while adding some headers.\n\nThere will eventually be language negotiation there, for a multilingual\nservice.  The headers on charger aren&#39;t right, but they do include a\n&#39;Content-Location: http://en.wiski.org/date?iso=2010-03-04&#39; header.\nThat&#39;s your 1), there, except what I&#39;ve done is identify the cross-\ndomain source in a header -- which is completely RESTful.\n\n&gt;\n&gt; Consider a situation where the owner of the website merges with\n&gt; another company, leading to a situation where we have two backend\n&gt; REST APIs - the original one, and one for the new company. We want to\n&gt; present both backend datasets on the same www site. Which URL\n&gt; template should I use to convert &quot;peter&quot; into a resource? The\n&gt; original or the new? What if both datasets has a &quot;peter&quot; blog? Now it\n&gt; becomes clearer that putting the full resource URL into my www URL\n&gt; can be nice.\n&gt; \n\nIf both datasets have a &quot;peter&quot; blog, they should still have different\natom:id&#39;s, so it&#39;s easy to create &quot;peter_a&quot; and &quot;peter_b&quot; resources.\nI&#39;m still not seeing any problem that requires URIs within URIs here.\nWhichever API is used, is reflected in hypertext link relations, inside\nmarkup and/or inside headers.\n\nDisclaimer:  Again, REST has nothing to do with URI design, so my\nsolution vs. yours has nothing to do with degrees of REST or any such\nthing.  The reason I post counter-examples is to steer you away from the\nnotion that putting URIs in your URIs is somehow required by, or amounts\nto following, REST.  What matters is that you&#39;re providing the standard\nlink relations, what (mostly) doesn&#39;t matter is the syntax of the URIs\nin those link relations (the URIs themselves are opaque, including\ndomain name).\n\nA &quot;hypertext link relation&quot; can be a &lt;link/&gt; element, a Link: header,\nor in my example a Content-Location header.  You can check with RFC\n2616bis for current practice on Content-Location, I&#39;m not sure if it&#39;s\nnow allowed as a general response instead of just as a conneg response.\n\n-Eric\n\n"}}