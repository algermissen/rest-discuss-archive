{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":403399802,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"fbkbcL2132x9_lKRb165iAuW8uycIWGWbvK00hkDIaY_QyTgO03gyLYMrAm8vFugNcSy-syNfXFDAv_T4uIHJYvsKkUBor-sf10LWVc-TVFnrdUk3BTMnv3idA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?","postDate":"1253593089","msgId":13487,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU0NDhjZmQ5MDkwOTIxMjExOG42YzBmYmU1aGFhZDMzMDE0NGJiNGRmNGVAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDQxM0RGM0I0LTlDODctNEE0Qi1BQUQzLUFDOUE5Qzk2QzVGM0BtYWMuY29tPg==","referencesHeader":"PDc3RTlCQTVBLTBCRkItNDJGQi04NjQzLTRCMzhERUU3OTYwREBpbm5vcS5jb20+CSA8NjQ1NkVDNzAtOUYzQy00RTZBLTkyMTMtODRDQTg0REQyNkY4QG1hYy5jb20+CSA8NTQ0OGNmZDkwOTA4MjgxOTI1eTIzM2U4Yjd1NWNkYzIxZjQxYjU2MmQ2OEBtYWlsLmdtYWlsLmNvbT4JIDwxQzA4OEQyMS02MUIzLTRENDUtQkFCOS1DQjRENDcxMjFBMzNAbWFjLmNvbT4JIDw1NDQ4Y2ZkOTA5MDkyMDA3MTZvMThkNmVlYjltMTJhM2Q4NjI2OTZiYTNjYkBtYWlsLmdtYWlsLmNvbT4JIDw0MTNERjNCNC05Qzg3LTRBNEItQUFEMy1BQzlBOUM5NkM1RjNAbWFjLmNvbT4="},"prevInTopic":13423,"nextInTopic":13572,"prevInTime":13486,"nextInTime":13488,"topicId":11221,"numMessagesInTopic":44,"msgSnippet":"Heh, I have been practising my SOA-speak. Let me rephrase a few things. ... Each REST architecture has a uniform interface consisting of three parts: resource","rawEmail":"Return-Path: &lt;fuzzybsc@...&gt;\r\nX-Sender: fuzzybsc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73525 invoked from network); 22 Sep 2009 04:18:10 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.re1.yahoo.com with QMQP; 22 Sep 2009 04:18:10 -0000\r\nX-Received: from unknown (HELO mail-pz0-f202.google.com) (209.85.222.202)\n  by mta1.grp.sp2.yahoo.com with SMTP; 22 Sep 2009 04:18:10 -0000\r\nX-Received: by mail-pz0-f202.google.com with SMTP id 40so3012842pzk.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 21 Sep 2009 21:18:10 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.9.29 with SMTP id 29mr33612wfi.131.1253593089954; Mon, 21 \n\tSep 2009 21:18:09 -0700 (PDT)\r\nIn-Reply-To: &lt;413DF3B4-9C87-4A4B-AAD3-AC9A9C96C5F3@...&gt;\r\nReferences: &lt;77E9BA5A-0BFB-42FB-8643-4B38DEE7960D@...&gt;\n\t &lt;6456EC70-9F3C-4E6A-9213-84CA84DD26F8@...&gt;\n\t &lt;5448cfd90908281925y233e8b7u5cdc21f41b562d68@...&gt;\n\t &lt;1C088D21-61B3-4D45-BAB9-CB4D47121A33@...&gt;\n\t &lt;5448cfd90909200716o18d6eeb9m12a3d862696ba3cb@...&gt;\n\t &lt;413DF3B4-9C87-4A4B-AAD3-AC9A9C96C5F3@...&gt;\r\nDate: Tue, 22 Sep 2009 14:18:09 +1000\r\nX-Google-Sender-Auth: 564f04614cabd6ce\r\nMessage-ID: &lt;5448cfd90909212118n6c0fbe5haad330144bb4df4e@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=UTF-8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] Terminology: &quot;Resource Types&quot;?\r\nX-Yahoo-Group-Post: member; u=403399802; y=QFj-XWErARRXSY6lSZbaPAFt5r6KZjXwVtjYm1iWRgs9ZKE\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nHeh, I have been practising my SOA-speak. Let me rephrase a few things.\n\n2009/9/21 Jan Algermissen &lt;algermissen1971@...&gt;:\n&gt; On Sep 20, 2009, at 4:16 PM, Benjamin Carlyle wrote:\n&gt;&gt; 2009/8/31 Jan Algermissen &lt;algermissen1971@...&gt;:\n&gt;&gt;&gt; When viewing a REST API as essentially a set of link semantics how\n&gt;&gt;&gt; can we version such APIs? And do we need to version them at all?\n&gt;&gt; Governance of a REST architecture is applied at a uniform contract\n&gt;&gt; level and at a service interface description level.\n&gt; Can you explain what you mean by &quot;uniform contract level&quot; and &quot;service\n&gt; interface description level&quot; and how governance is applied to them?\n\nEach REST architecture has a uniform interface consisting of three\nparts: resource identifier syntax, connectors (ie methods), and media\ntypes. Each server (aka service) exposes a set of resources that are\nidentified in compliance with the resource identifier syntax, exchange\nmessages in compliance with uniform interface connector semantics, and\nencode and process information in compliance with uniform interface\nmedia types.\n\nGovernance of a REST architecture governs:\n1. The Resource Identifier syntax\n2. The set of connectors\n3. The set of media types\n4. The set of resources exposed by a server\n\nThese elements tend to be controlled independently, and may be\ncontrolled by different people and organisations. Each level of\ngovernance seeks to ensure compliance with REST constraints and with\nprinciples of good design.\n\n&gt;&gt; 3. A set of media types, which will almost certainly have\n&gt;&gt; corresponding individually versioned specifications\n&gt;&gt; Each service itself has a description of its interface in terms of a\n&gt;&gt; set of resources and methods on those resources that correspond to the\n&gt;&gt; capabilities of the service.\n&gt; But in REST you do not describe that but let the client discover it. Or am I\n&gt; misunderstanding you?\n\nExactly, a client should be coupled to the uniform interface expressed\nby all resources. They should not be coupled to any particular\nresource or server. A particular client beginning some kind of\nbusiness process or application will be given a set of starting URLs\nto work from, and will imbue these resources with some predefined\nsemantics. However, any resources outside this set should be\ndiscovered by following hyperlinks. The semantics imbued on discovered\nresources depend on the context and type of the link. The link types\nand to a significant degree the context of the link are specified as\npart of the uniform interface within the set of media type\nspecifications.\n\n&gt;&gt; The outcome is a high level of integration maturity. One URL can be\n&gt;&gt; substituted for another in the architecture at runtime. Regardless of\n&gt;&gt; the specific URL or service the consumer knows what kind of message to\n&gt;&gt; construct. The service knows how to interpret the request and how to\n&gt;&gt; return an appropriate response in a form the consumer understands. The\n&gt;&gt; uniform interface of each resource enables communication and then gets\n&gt;&gt; out of the way, permitting dynamic reconfiguration to occur as\n&gt;&gt; required.\n&gt; Hmmm - and how does all that adsress the problem of versioning the set of\n&gt; semantics that make up a certain RESTful API?\n\nThe resource identifier syntax is change-managed under one specification.\nThe set of connectors is change-managed as either one or several specifications.\nThe set of media types is change-managed as individual specifications,\ngenerally one per media type but possibly including some common\nelements that are reused between media types.\nCollectively these form the uniform interface specification. The\nuniform interface as a whole could be assigned a particular version\nnumber, but is generally evolving quickly enough that doing so adds\nlittle benefit.\n\nIt is possible that the set of connectors themselves include link\ntypes and content-like information. For example, HTTP can include a\n&quot;link&quot; header with a variety of possible relationship types. These\ntypes would be version-controlled effectively as part of the media\ntype set, in whatever configuration of specifications is deemed\nappropriate by the appropriate governance body.\n\nEach server (i.e. service) should have a written description of the\nresources it exposes to enable governance of itself, form\nimplementation, and to inform maintenance and support activities. The\nspecification for each server/service should be version-controlled\nseparately to those of other servers. This document captures the\nspecific capabilities of the service in the same way as a\nservice-specific contract would have done in a SOA, but uses messages\nto invoke and respond to these capabilities that are highly abstract,\nreusable, and demonstrate a high degree of integration maturity.\n\nBenjamin.\n\n"}}