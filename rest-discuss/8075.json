{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":237604743,"authorName":"Bill de hOra","from":"Bill de hOra &lt;bill@...&gt;","profile":"bdehora","replyTo":"SENDER","senderId":"DFMJH62ekG_dECImgXPU-jfewEFU0vZLAOvHizxYu_OJ3IK3C5Hp77k7iYHjJ3yqYWcBdb-I1Ya5zWiffxQrUFQathT8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Acceptable Responses","postDate":"1173102027","msgId":8075,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1RUMxRENCLjEwNDA5MDFAZGVob3JhLm5ldD4=","inReplyToHeader":"PGVzaDEybCs3Z3R0QGVHcm91cHMuY29tPg==","referencesHeader":"PGVzaDEybCs3Z3R0QGVHcm91cHMuY29tPg=="},"prevInTopic":8074,"nextInTopic":8076,"prevInTime":8074,"nextInTime":8076,"topicId":8074,"numMessagesInTopic":13,"msgSnippet":"... Just because the data is more semantically precise, doesn t mean a client will know what to do with it. If a client can t handle RDF it s in no better","rawEmail":"Return-Path: &lt;bill@...&gt;\r\nX-Sender: bill@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67959 invoked from network); 5 Mar 2007 13:40:57 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m36.grp.scd.yahoo.com with QMQP; 5 Mar 2007 13:40:57 -0000\r\nReceived: from unknown (HELO chilco.textdrive.com) (207.7.108.242)\n  by mta11.grp.scd.yahoo.com with SMTP; 5 Mar 2007 13:40:56 -0000\r\nReceived: from [192.168.213.120] (unknown [193.120.101.26])\n\tby chilco.textdrive.com (Postfix) with ESMTP id 65FDEDCBC8\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon,  5 Mar 2007 13:40:31 +0000 (UTC)\r\nMessage-ID: &lt;45EC1DCB.1040901@...&gt;\r\nDate: Mon, 05 Mar 2007 13:40:27 +0000\r\nUser-Agent: Thunderbird 1.5.0.9 (X11/20070103)\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nReferences: &lt;esh12l+7gtt@...&gt;\r\nIn-Reply-To: &lt;esh12l+7gtt@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Bill de hOra &lt;bill@...&gt;\r\nSubject: Re: [rest-discuss] Acceptable Responses\r\nX-Yahoo-Group-Post: member; u=237604743; y=L6cRIjdkwuDPWddrmVJCaUP2C0cuDfDQZ_TcB4sXcDdiow\r\nX-Yahoo-Profile: bdehora\r\n\r\nAlan Dean wrote:\n\n&gt; I would like some feedback on something that I&#39;ve been thinking hard\n&gt; about recently: &quot;acceptable responses&quot;.\n&gt; \n&gt; What do I mean by this? Well, we all know that one of the strengths\n&gt; of REST is that the interface is &#39;well-known&#39; so we don&#39;t need to use\n&gt; WSDL (or equivalent) to bind to a RESTful endpoint - we just need a\n&gt; URL.\n&gt; \n&gt; As an example, we can quite happily have the following\n&gt; Request/Response to do a directory listing:\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; Content-Type: text/html\n&gt; \n&gt; &lt;html&gt;\n&gt; &lt;body&gt;\n&gt; &lt;a href=&quot;dir1/&quot;&gt;dir1&lt;/a&gt;\n&gt; &lt;a href=&quot;dir2/&quot;&gt;dir2&lt;/a&gt;\n&gt; &lt;a href=&quot;file.txt/&quot;&gt;Text File&lt;/a&gt;\n&gt; &lt;a href=&quot;file.html/&quot;&gt;HTML File&lt;/a&gt;\n&gt; &lt;/body&gt;\n&gt; &lt;/html&gt;\n&gt; \n&gt; [...]\n&gt; \n&gt; What if the client is a robot?\n&gt; \n&gt; The above example text/html representation will probably be fine for\n&gt; most robots, such as search crawlers. But I wonder if this is really\n&gt; nothing more clever than screen-scraping. (Note that this approach\n&gt; would treat all href URLs the same)\n&gt; \n&gt; [...]\n&gt; \n&gt; &lt;?xml version=&quot;1.0&quot;?&gt;\n&gt; &lt;rdf:RDF&gt;\n&gt; ...\n&gt; &lt;rdf:RDF&gt;\n&gt; \n&gt; Now the robot has obtained an RDF/XML representation of the directory\n&gt; contents. This is no longer simple screen-scraping, but semantically\n&gt; meaningful data.\n\nJust because the data is more semantically precise, doesn&#39;t mean a \nclient will know what to do with it. If a client can&#39;t handle RDF it&#39;s \nin no better shape than the one that can&#39;t handle the html. . And if the \nhtml used a documented xdmp+microformat combo, it&#39;s more or less the \nsame work (structurally).\n\n &gt; I wonder if the answer to the dilemna outlined above is that we need\n &gt; an equivalent HTTP header for Content-Types? Consider the following:\n\nI think the world is moving towards providing different URLs for \ndifferent formats:\n\n  /foo/export.rdf\n  /foo/export.html\n  /foo/export.csv\n\nI&#39;m not really sure if this is a good idea. It has the &quot;advantage&quot; of \nfixing your issue by avoiding all conneg machinery altogether - I \nsuspect this is why it&#39;s popular. I haven&#39;t heard an architectural \nargument presented as to why it&#39;s a bad idea.\n\ncheers\nBill\n\n\n\n&gt; \n&gt; Again, this isn&#39;t terribly controversial. But note that we now have\n&gt; two alternate representations of the some resource and we have\n&gt; decided which is the default. Furthermore, there could be many other\n&gt; alternate representation formats - each as equally &#39;standard&#39; as\n&gt; text/html or application/rdf+xml - such as text/plain or text/csv and\n&gt; so on.\n&gt; \n&gt; This means that any of the following requests might be acceptable:\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; Accept: text/plain\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; Accept: text/csv\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; Accept: text/html\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; Accept: application/rdf+xml\n&gt; \n&gt; This now draws me towards the crux of my question.\n&gt; \n&gt; How does a client discover the supported representations?\n&gt; \n&gt; The client might ping the resource with each known (to the client)\n&gt; Content-Type, in the following manner:\n&gt; \n&gt; --&gt;\n&gt; HEAD /foo/\n&gt; Accept: application/xml\n&gt; \n&gt; &lt;--\n&gt; 406 Not Acceptable\n&gt; \n&gt; --&gt;\n&gt; HEAD /foo/\n&gt; Accept: text/html\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; Content-Type: application/rdf+xml\n&gt; \n&gt; This has several drawbacks to it (latency and inefficiency both jump\n&gt; to mind).\n&gt; \n&gt; Some of you may be thinking that 300 Multiple Choices is the answer.\n&gt; But I suspect that, for this issue, the problem becomes circular at\n&gt; this point (what format should the 300 response representation itself\n&gt; use?).\n&gt; \n&gt; Furthermore, this issue is implicit in many requests. Consider what\n&gt; the representation format should be for any of the following:\n&gt; \n&gt; 1. An OPTIONS request (what are the supported representation formats?)\n&gt; 2. A 406 Not Acceptable response (what are acceptable representation\n&gt; formats?)\n&gt; 3. A 300 Multiple Choices response\n&gt; \n&gt; At first blush, we might decide that what we need is a standard\n&gt; representation. I thought about that and decided that it makes little\n&gt; sense - mostly for pragmatic and practical reasons, but also because\n&gt; it seems to fall foul of the same anti-pattern as WSDL.\n&gt; \n&gt; Then ... I thought about how allowed methods are communicated:\n&gt; \n&gt; --&gt;\n&gt; OPTIONS /foo/\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; Allow: GET, HEAD, POST, PUT, DELETE\n&gt; \n&gt; I wonder if the answer to the dilemna outlined above is that we need\n&gt; an equivalent HTTP header for Content-Types? Consider the following:\n&gt; \n&gt; --&gt;\n&gt; OPTIONS /foo/\n&gt; \n&gt; &lt;--\n&gt; 200 OK\n&gt; Allow: GET, HEAD, POST, PUT, DELETE\n&gt; Acceptable: text/plain, text/html, application/rdf+xml\n&gt; \n&gt; --&gt;\n&gt; GET /foo/\n&gt; Accept: model/*\n&gt; \n&gt; &lt;--\n&gt; 406 Not Acceptable\n&gt; Acceptable: text/plain, text/html, application/rdf+xml\n&gt; \n&gt; This seems clean and elegant to me. What do you all think?\n&gt; \n&gt; Regards,\n&gt; Alan Dean\n&gt; http://thoughtpad.net/who/alan-dean/ &lt;http://thoughtpad.net/who/alan-dean/&gt;\n&gt; \n&gt; \n\n\n"}}