{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"V19oXFQfTuNPy9uvEt7kmEBkOjhaEh4JpCqUUpqsKMpm5_5vLRca0aKab-Sapr73XcAqrzmS-2PFoDGQmsPbBG9nCDFG9N0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Benefits of Canonical URLs (was Request for feedback: REST for the Rest of Us)","postDate":"1168452327","msgId":7568,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDhBMTRBRjlCLTVDNDMtNDlGNy04RDBCLTk5MzdBM0EwMDI5MkBhcnRpbWEuY29tPg==","inReplyToHeader":"PDAwM2QwMWM3MzRjMyQ2Nzc2MWYxMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PDAwM2QwMWM3MzRjMyQ2Nzc2MWYxMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+"},"prevInTopic":7567,"nextInTopic":7570,"prevInTime":7567,"nextInTime":7569,"topicId":7355,"numMessagesInTopic":134,"msgSnippet":"Hi Mike, ... That s a good point. Caching is valuable too from a usability perspective and a business one, because it will make the site seem faster to users.","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 51487 invoked from network); 10 Jan 2007 18:04:14 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m26.grp.scd.yahoo.com with QMQP; 10 Jan 2007 18:04:14 -0000\r\nReceived: from unknown (HELO mail.artima.com) (63.246.23.132)\n  by mta4.grp.scd.yahoo.com with SMTP; 10 Jan 2007 18:04:14 -0000\r\nReceived: (qmail 23453 invoked by uid 89); 10 Jan 2007 18:04:11 -0000\r\nReceived: by simscan 1.1.0 ppid: 23445, pid: 23451, t: 0.1986s\n         scanners: regex: 1.1.0\r\nReceived: from unknown (HELO ?192.168.1.6?) (bv@...@71.131.189.133)\n  by mail.artima.com with ESMTPA; 10 Jan 2007 18:04:11 -0000\r\nIn-Reply-To: &lt;003d01c734c3$67761f10$0702a8c0@...&gt;\r\nReferences: &lt;003d01c734c3$67761f10$0702a8c0@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;8A14AF9B-5C43-49F7-8D0B-9937A3A00292@...&gt;\r\nCc: &quot;&#39;REST Discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Wed, 10 Jan 2007 10:05:27 -0800\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Benefits of Canonical URLs (was Request for feedback: REST for the Rest of Us)\r\nX-Yahoo-Group-Post: member; u=198693287; y=yOWZPREAFK6nZFPJoeBRsQFwx-vXQXn3wjB-WTgDoJYWY5f6uHg\r\nX-Yahoo-Profile: billvenners\r\n\r\nHi Mike,\n\nOn Jan 10, 2007, at 6:27 AM, Mike Schinkel wrote:\n\n&gt; Bill Venners wrote:\n&gt;&gt; In observing my own behavior while using other people&#39;s web\n&gt;&gt; sites, I noticed I occasionally find myself hacking off\n&gt;&gt; pieces of a URI in the hopes of finding something\n&gt;&gt; conceptually higher up in the hierarchy.\n&gt;&gt; It usually didn&#39;t work, but I tried. I did not add things to\n&gt;&gt; URIs, but I did try to subtract things. I want URI hacking\n&gt;&gt; that to always work at the websites whose URIs and\n&gt;&gt; information architecture I design. Where I depart from Mike&#39;s\n&gt;&gt; approach is that I would still pick one hierarchy from his\n&gt;&gt; many possibilities, and have one canonical URI for each resource.\n&gt;\n&gt; I&#39;m starting to come to the conclusion that the resources I think  \n&gt; are the\n&gt; same are actually different. Yes, they may have mostly the same  \n&gt; content but\n&gt; they have different breadcrumbs which mean one can&#39;t be cached and  \n&gt; served\n&gt; for the other. Of course someone might argue that because the  \n&gt; content on the\n&gt; different pages is so similar I should not create different  \n&gt; resources; I\n&gt; should only have one. But I think that would be being pedantic in  \n&gt; trying to\n&gt; optimize the caching benefit in exchange to the detriment of  \n&gt; usability.\n&gt;\nThat&#39;s a good point. Caching is valuable too from a usability  \nperspective and a business one, because it will make the site seem  \nfaster to users. I can think of a few options in that case.\n\nOne is to let go of the breadcrumbs. Users can use the back button to  \nback up. On Firefox if I hold down the back button I get essentially  \nbreadcrumbs of page titles, so you could consider dropping them from  \nthe page itself to enable you to have a canonical URI for each concept.\n\nBut breadcrumbs can be nice too, and if you don&#39;t want to drop them,  \nanother thing you could do since you probably only have a few  \nvariations of breadcrumbs is try to have a canonical URI and send a  \ndifferent ETag for each variation. I don&#39;t know that this would work,  \nbecause you&#39;d have to figure out what breadcrumbs to show on that  \ncanonical URI based on which URI they came from. I&#39;m not sure how  \nconsistently browsers will indicate the URI from which they were  \nredirected in the canonical URI request. And even if that does work  \nwell enough, you don&#39;t get as good caching because proxies can&#39;t do  \ncontent negotiation for you. So the proxies would have to ask the  \nserver each time if the appropriate representation is one of the ones  \nit has cached. If so, your server wouldn&#39;t have to send the data to  \nthe proxy. But that&#39;s the only real speedup, and it isn&#39;t as good  \ncaching as having different URIs for each.\n\nAnother thing you could do is only redirect to a canonical URI for  \nselected search engine robots. Search engines warn you not to do  \nthis. You aren&#39;t supposed to do something different for a search  \nengine robot than for non-search engine robots. But they are mainly  \nconcerned about you having a page about poker that when a search  \nengine robot shows up, you switch to a page about the representative  \nof your district. Canonicalizing URIs would help search engines  \nprovide better results. So in this approach you get good caching and  \ngood search results, but at the risk of getting penalized for  \nbreaking the search engine&#39;s guidelines by being removed entirely  \nfrom their index.\n\nOr, you could just not have canonical URIs for each concept and  \naccept the likelihood of reduced traffic from search engines. I  \nwouldn&#39;t do that in my situation, but all design decisions depend on  \ncontext. Maybe in your case being found via search engines isn&#39;t as  \nimportant as being super cache-friendly and having breadcrumbs. You  \nhave to decide what tradeoffs to make, and it isn&#39;t easy. I have  \nstruggled a lot with balancing these things due to variation on pages  \ncoming from customization based on whether a user is logged in or  \nnot, and if so, who they are. One of the rules of thumb is to  \nminimize variation as much as possible, and that&#39;s one reason I never  \nshow breadcrumbs on pages.\n\nBill\n----\nBill Venners\nPresident\nArtima, Inc.\nhttp://www.artima.com\n\n\n\n\n"}}