{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"IbGcPpDvByYxF9mCPX4rPlgJn1fSRwOM2o6YPm10HEnjVJcMzsAjmcmnoFjtxG38kGRdOP4NHLwa9mS6Xore_Cjys0I57MIHvYxeWUKm2w","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Application state","postDate":"1254603621","msgId":13647,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMDAzMTUwMDIxLjM0MDdjMjcyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGU5ZGZmZDY0MDkxMDAyMTAxM3M3OTE5ZGVjN2k1N2MzNTFhODJkNmI3NzFhQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGU5ZGZmZDY0MDkxMDAyMTAxM3M3OTE5ZGVjN2k1N2MzNTFhODJkNmI3NzFhQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":13646,"nextInTopic":13648,"prevInTime":13646,"nextInTime":13648,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"... Sure, if you mean steady state .  The application is what the user is trying to do.  I intend to open my browser, select my news bookmark, browse the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 25519 invoked from network); 3 Oct 2009 21:01:51 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 3 Oct 2009 21:01:51 -0000\r\nX-Received: from unknown (HELO fallback-in2.mxes.net) (216.86.168.191)\n  by mta3.grp.sp2.yahoo.com with SMTP; 3 Oct 2009 21:01:51 -0000\r\nX-Received: from mxout-08.mxes.net (mxout-08.mxes.net [216.86.168.183])\n\tby fallback-in1.mxes.net (Postfix) with ESMTP id 49C932FD7A8\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat,  3 Oct 2009 17:00:52 -0400 (EDT)\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id D765B509DA;\n\tSat,  3 Oct 2009 17:00:19 -0400 (EDT)\r\nDate: Sat, 3 Oct 2009 15:00:21 -0600\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nCc: Kristian Nordal &lt;kristian.nordal@...&gt;, Bediako George\n &lt;bediakogeorge@...&gt;, Benjamin Carlyle\n &lt;benjamincarlyle@...&gt;, Bill Burke &lt;bburke@...&gt;,\n REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20091003150021.3407c272.eric@...&gt;\r\nIn-Reply-To: &lt;e9dffd640910021013s7919dec7i57c351a82d6b771a@...&gt;\r\nReferences: &lt;e9dffd640910021013s7919dec7i57c351a82d6b771a@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Application state\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMark Baker wrote:\n&gt;\n&gt; Kristian Nordal wrote:\n&gt; \n&gt; &gt; I&#39;m also struggling with the difference between application state\n&gt; &gt; and server state (which I assume is the same as &quot;resource state&quot;).\n&gt; &gt; Can someone point me to a good definition of &quot;application state&quot;?\n&gt; \n&gt; It&#39;s literally the *state* of the *application*.  If you&#39;re looking at\n&gt; your bank balance, that&#39;s a different state than if you were preparing\n&gt; to submit a bill payment, and once you&#39;ve submitted the payment,\n&gt; you&#39;re in yet another state in the application state machine.\n&gt; \n\nSure, if you mean &quot;steady state&quot;.  The application is what the user is\ntrying to do.  I intend to open my browser, select my news bookmark,\nbrowse the headlines, and close the browser.  That application, from a\nREST perspective, is &quot;following a link&quot;.  The application is complete\nwhen the transition to the next steady-state has completed, regardless\nof how long it takes me to browse the headlines before closing my\nbrowser.\n\nAssume my browser has no cache, connects to an accelerator component at\nmy ISP, there&#39;s nothing between the accelerator and the origin server\ncomponent, and that I&#39;ve read REST section 5.3.\n\nWhen I select the bookmark in my client component (browser), I see a\nWeb page begin to incrementally render.  Let&#39;s take a snapshot of that\nmoment in time, for further analysis.  We see the client connector has\ntwo connections open to the ISP accelerator&#39;s server connector.  One\nconnection is streaming the HTML representation to the client.  The\nclient has parsed the &lt;head&gt; section, and the second connection is\nstreaming a linked CSS file to the client.\n\nThe accelerator component has also parsed the HTML representation it is\nserving (after receiving a 304 response from the origin server,\napparently someone else beat me to the news this morning).  But it\ndoesn&#39;t have the weather map cached, so we see the accelerator&#39;s client\ncomponent has connected to the origin server to prefetch the inline\nimage it isn&#39;t supposed to cache (even though it&#39;s going to for a\nmoment).\n\nFollowing the trail across the wire to the server connector on the\norigin server, we see it&#39;s waiting for the server to generate the image\nof the current weather map, which it will then send to the accelerator,\nwhich will in turn send it on to me when my browser gets around to\nrequesting it.  During this transition between steady-states, the\napplication state consists of the state of all three components\ninvolved at the frozen instant in time that I analyzed.\n\nSo if we analyze steady-states only, the scope of the application is\nentirely within the client component.  In my example snapshot, the\nscope of the application encompasses three separate components:\nclient, accelerator, origin server.  Notice that the origin server\nknows nothing about the client, only the accelerator, yet its state is\n(at that moment) part of the application state perceived by the user\nattempting to &quot;follow a link&quot;.\n\nHope this helps,\nEric\n\n"}}