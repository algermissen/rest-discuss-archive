{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211647110,"authorName":"Alexander Johannesen","from":"Alexander Johannesen &lt;alexander.johannesen@...&gt;","profile":"shelterit","replyTo":"SENDER","senderId":"YEJ8tiqGPihxGcvHWhPOE9eD8WjOep69NHj03MLOug5_2Ts4-RiQwnH9YatosbU1xXJUaD0Ez44sUs0lXktnALFxOV8J30z8owpsHilbzA66EW6Pm8u2F2Um5Cc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme","postDate":"1325657204","msgId":18352,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRjg5YkNEQ2M9Vk9RTDFnSjVjdndtTGs4NjBfek09LStPdTQwdF8wZGlnWVJtWnlTUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18351,"nextInTopic":18353,"prevInTime":18351,"nextInTime":18353,"topicId":18183,"numMessagesInTopic":245,"msgSnippet":"Hola, ... Yes, but you are the one who has decided well in advance that there is some specific semantics required for this, something that is missing from REST","rawEmail":"Return-Path: &lt;alexander.johannesen@...&gt;\r\nX-Sender: alexander.johannesen@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 99035 invoked from network); 4 Jan 2012 06:06:46 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m11.grp.sp2.yahoo.com with QMQP; 4 Jan 2012 06:06:46 -0000\r\nX-Received: from unknown (HELO mail-ee0-f41.google.com) (74.125.83.41)\n  by mta2.grp.sp2.yahoo.com with SMTP; 4 Jan 2012 06:06:46 -0000\r\nX-Received: by eekc41 with SMTP id c41so18880014eek.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 03 Jan 2012 22:06:44 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.213.32.202 with SMTP id e10mr6967284ebd.25.1325657204232; Tue,\n 03 Jan 2012 22:06:44 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Tue, 3 Jan 2012 22:06:44 -0800 (PST)\r\nX-Received: by 10.14.99.78 with HTTP; Tue, 3 Jan 2012 22:06:44 -0800 (PST)\r\nDate: Wed, 4 Jan 2012 17:06:44 +1100\r\nMessage-ID: &lt;CAF89bCDCc=VOQL1gJ5cvwmLk860_zM=-+Ou40t_0digYRmZySQ@...&gt;\r\nTo: Mike Kelly &lt;mikekelly321@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;, \n\tNina Jeliazkova &lt;jeliazkova.nina@...&gt;, Jan Algermissen &lt;jan.algermissen@...&gt;\r\nContent-Type: multipart/alternative; boundary=0015174c1660c090eb04b5ad9efb\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Alexander Johannesen &lt;alexander.johannesen@...&gt;\r\nSubject: Re: [rest-discuss] Re: The &quot;new media types are evil&quot; meme\r\nX-Yahoo-Group-Post: member; u=211647110; y=OEfDFNAIoWIHnHNAHyh18mA0ssiDpk0t-L6tpGJkRza9EpNA\r\nX-Yahoo-Profile: shelterit\r\n\r\n\r\n--0015174c1660c090eb04b5ad9efb\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nHola,\n\n&quot;Mike Kelly&quot; &lt;mikekelly321@...&gt; wrote:\n&gt; There are also server and client perspectives of the\n&gt; interaction which *do* include these semantics - *established for a\n&gt; URI by the server and shared with the client via some hypertext\n&gt; control*.\n\nYes, but you are the one who has decided well in advance that there is some\nspecific semantics required for this, something that is missing from REST\nitself and the generic interface. Maybe you could provide a more concrete\nexample?\n\n&gt; One of the major issues I have with the RDF model is that it&#39;s\n&gt; objective seems to be to make every resource a possible &#39;starting\n&gt; point&#39; - i.e. it tries to provide a model for &#39;bootstrapping&#39; a\n&gt; machine client into a context for any &#39;generic&#39; resource on the web.\n\nOh, don&#39;t get me wrong; I hate RDF myself, a bunch of sissy triplets\n(triplets! Hah!) and anonymous nodes trying to act all-encompassing and\nshareable, but with deep fundamental problems (persistent identifiers, and\nthe aboutness of resources) ... :)\n\nHowever. RDF&#39;s heart is in the right place; ontology. And it is through a\nseparate ontology you get your semantics.\n\n&gt; We don&#39;t have this in REST, instead we have a limited set of entry\n&gt; points and from then on discovery/traversal of an application at run\n&gt; time. This means there&#39;s a tonne of features (read: bloat) and\n&gt; assumptions that are inherent to implementations like RDFa which, from\n&gt; a REST pov, are at best distracting and at worst actually corrosive to\n&gt; the kinds of behaviours we are trying to invoke when designing RESTful\n&gt; hypertext applications.\n\nHmm, big words. Sure, the HTTP payload can be vexing, but far from hard to\nsolve (caching, being a big one) using a multitude of ways; cached maps,\ncached resource mapping, cached vocabulary mappings, cached result-sets (of\ngenerics), and so on.\n\nI tend to say; create a crap HTTP client, and you&#39;ll get a crap HTTP\nsystem. There is no need to create a crap HTTP client.\n\n&gt; REST&#39;s perspective on semantics seems to be based on a relational\n&gt; theory (http://en.wikipedia.org/wiki/Relational_theory) whereas RDF&#39;s\n&gt; perspective seems to be based on more of an absolute theory\n&gt; (http://en.wikipedia.org/wiki/Absolute_theory). I believe this\n&gt; difference  is at the root of the apparent schism between REST and RDF\n&gt; and I can&#39;t find a way to reconcile this, so I avoid RDF.\n\nIt now depends on what you mean by RDF; the model (triplets, namespaces,\netc.), the RDF ontology, the RDFS, OWL (any of the three levels), or some\nmodel that uses the RDF family model to create something else (possibly\nmeta). I can map RDF to Topic Maps just dandy, and create full-blown frames\ntheory graphs (named or otherwise) with cumulative histographical node\nhopping just fine, so for me there is no limitation that RDF itself is a\nfaulty model. (And, truth be told, I don&#39;t use an RDF inferencer, I use\nTopic Maps all the way down, including plural persistent identification\nmanagement and separation of concerns between ontology, meta-data and data)\nI don&#39;t shun RDF (or, more specifically, RDFa) as it&#39;s a well-known, often\nused (well, more these days) method of creating key-value pairs attached to\nan ontology, and so just map those to whatever you need it for. I seriously\nfear that bringing these kinds of semantics anywhere near REST will be the\nend of all that is good on the web.\n\n&gt; I still wanted a generic media type but without the RDF baggage, so\n&gt; that&#39;s why I created HAL. Some other people seem to prefer it too.\n\nTooling, mostly.\n\nKind regards,\n\nAlex\n\r\n--0015174c1660c090eb04b5ad9efb\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;p&gt;Hola,&lt;/p&gt;\n&lt;p&gt;&quot;Mike Kelly&quot; &lt;&lt;a href=3D&quot;mailto:mikekelly321@g=\r\nmail.com&quot;&gt;mikekelly321@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt; There are also ser=\r\nver and client perspectives of the&lt;br&gt;\n&gt; interaction which *do* include =\r\nthese semantics - *established for a&lt;br&gt;\n&gt; URI by the server and shared =\r\nwith the client via some hypertext&lt;br&gt;\n&gt; control*. &lt;/p&gt;\n&lt;p&gt;Yes, but you =\r\nare the one who has decided well in advance that there is some specific sem=\r\nantics required for this, something that is missing from REST itself and th=\r\ne generic interface. Maybe you could provide a more concrete example?&lt;/p&gt;\n\n=\r\n&lt;p&gt;&gt; One of the major issues I have with the RDF model is that it&#39;s&lt;=\r\nbr&gt;\n&gt; objective seems to be to make every resource a possible &#39;start=\r\ning&lt;br&gt;\n&gt; point&#39; - i.e. it tries to provide a model for &#39;bootstr=\r\napping&#39; a&lt;br&gt;\n&gt; machine client into a context for any &#39;generic&#=\r\n39; resource on the web.&lt;/p&gt;\n&lt;p&gt;Oh, don&#39;t get me wrong; I hate RDF myse=\r\nlf, a bunch of sissy triplets (triplets! Hah!) and anonymous nodes trying t=\r\no act all-encompassing and shareable, but with deep fundamental problems (p=\r\nersistent identifiers, and the aboutness of resources) ... :)&lt;/p&gt;\n\n&lt;p&gt;Howev=\r\ner. RDF&#39;s heart is in the right place; ontology. And it is through a se=\r\nparate ontology you get your semantics. &lt;/p&gt;\n&lt;p&gt;&gt; We don&#39;t have this=\r\n in REST, instead we have a limited set of entry&lt;br&gt;\n&gt; points and from t=\r\nhen on discovery/traversal of an application at run&lt;br&gt;\n&gt; time. This mea=\r\nns there&#39;s a tonne of features (read: bloat) and&lt;br&gt;\n&gt; assumptions t=\r\nhat are inherent to implementations like RDFa which, from&lt;br&gt;\n&gt; a REST p=\r\nov, are at best distracting and at worst actually corrosive to&lt;br&gt;\n&gt; the=\r\n kinds of behaviours we are trying to invoke when designing RESTful&lt;br&gt;\n&gt=\r\n; hypertext applications.&lt;/p&gt;\n&lt;p&gt;Hmm, big words. Sure, the HTTP payload can=\r\n be vexing, but far from hard to solve (caching, being a big one) using a m=\r\nultitude of ways; cached maps, cached resource mapping, cached vocabulary m=\r\nappings, cached result-sets (of generics), and so on. &lt;/p&gt;\n\n&lt;p&gt;I tend to sa=\r\ny; create a crap HTTP client, and you&#39;ll get a crap HTTP system. There =\r\nis no need to create a crap HTTP client.&lt;/p&gt;\n&lt;p&gt;&gt; REST&#39;s perspective=\r\n on semantics seems to be based on a relational&lt;br&gt;\n&gt; theory (&lt;a href=3D=\r\n&quot;http://en.wikipedia.org/wiki/Relational_theory&quot;&gt;http://en.wikipedia.org/wi=\r\nki/Relational_theory&lt;/a&gt;) whereas RDF&#39;s&lt;br&gt;\n&gt; perspective seems to b=\r\ne based on more of an absolute theory&lt;br&gt;\n&gt; (&lt;a href=3D&quot;http://en.wikipe=\r\ndia.org/wiki/Absolute_theory&quot;&gt;http://en.wikipedia.org/wiki/Absolute_theory&lt;=\r\n/a&gt;). I believe this&lt;br&gt;\n&gt; difference =A0is at the root of the apparent =\r\nschism between REST and RDF&lt;br&gt;\n&gt; and I can&#39;t find a way to reconcil=\r\ne this, so I avoid RDF.&lt;/p&gt;\n&lt;p&gt;It now depends on what you mean by RDF; the =\r\nmodel (triplets, namespaces, etc.), the RDF ontology, the RDFS, OWL (any of=\r\n the three levels), or some model that uses the RDF family model to create =\r\nsomething else (possibly meta). I can map RDF to Topic Maps just dandy, and=\r\n create full-blown frames theory graphs (named or otherwise) with cumulativ=\r\ne histographical node hopping just fine, so for me there is no limitation t=\r\nhat RDF itself is a faulty model. (And, truth be told, I don&#39;t use an R=\r\nDF inferencer, I use Topic Maps all the way down, including plural persiste=\r\nnt identification management and separation of concerns between ontology, m=\r\neta-data and data) I don&#39;t shun RDF (or, more specifically, RDFa) as it=\r\n&#39;s a well-known, often used (well, more these days) method of creating =\r\nkey-value pairs attached to an ontology, and so just map those to whatever =\r\nyou need it for. I seriously fear that bringing these kinds of semantics an=\r\nywhere near REST will be the end of all that is good on the web.&lt;br&gt;\n\n &lt;br&gt;=\r\n\n&gt; I still wanted a generic media type but without the RDF baggage, so&lt;b=\r\nr&gt;\n&gt; that&#39;s why I created HAL. Some other people seem to prefer it t=\r\noo.&lt;/p&gt;\n&lt;p&gt;Tooling, mostly.&lt;br&gt;&lt;/p&gt;\n&lt;p&gt;Kind regards,&lt;/p&gt;\n&lt;p&gt;Alex&lt;/p&gt;\n\r\n--0015174c1660c090eb04b5ad9efb--\r\n\n"}}