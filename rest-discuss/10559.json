{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"QRd80uqDhemBM7T-AQp-IhYmHUT0gSHdON08LFbf6nBHaURkWmP6jVFiS4eMtogMEe4oZjDKw2bbtMWcOyPMPQbcSvKITkzj4D651-GYrA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] More Fun with DELETE","postDate":"1206858596","msgId":10559,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgwMzMwMDAyOTU2LjQ3OTcxMmQyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEJMVTEwMi1EUzM4RUI2N0Y2MTUwQTJCM0VGM0RGOUI1RjkwQHBoeC5nYmw+","referencesHeader":"PDIwMDgwMzI4MDEyMTI4LmUzNGQ5NmJiLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMDgwMzI4MDI1NzA0LjgzZDE3MDY0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDIwMDgwMzI4MDY1ODI5LmZiYzRhMGQ5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEJMVTEwMi1EUzE2RjBFRjBCNDI5Q0Y1MTJGNDU2OEI1RjkwQHBoeC5nYmw+CTwyMDA4MDMyODA5MzU0NC43YmIyNWYxNC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxCTFUxMDItRFMzOEVCNjdGNjE1MEEyQjNFRjNERjlCNUY5MEBwaHguZ2JsPg=="},"prevInTopic":10555,"nextInTopic":10560,"prevInTime":10558,"nextInTime":10560,"topicId":10545,"numMessagesInTopic":21,"msgSnippet":"... I disagree that my method somehow makes the 202 response synchronous. To be more RESTful and more in-line with RFC 2616, I suppose my mechanism should","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73698 invoked from network); 30 Mar 2008 06:31:25 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m45.grp.scd.yahoo.com with QMQP; 30 Mar 2008 06:31:25 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta17.grp.scd.yahoo.com with SMTP; 30 Mar 2008 06:31:24 -0000\r\nX-Received: from BigBison (unknown [66.250.152.171])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTP id D5ADB23E3EF;\n\tSun, 30 Mar 2008 02:31:23 -0400 (EDT)\r\nDate: Sun, 30 Mar 2008 00:29:56 -0600\r\nTo: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20080330002956.479712d2.eric@...&gt;\r\nIn-Reply-To: &lt;BLU102-DS38EB67F6150A2B3EF3DF9B5F90@...&gt;\r\nReferences: &lt;20080328012128.e34d96bb.eric@...&gt;\n\t&lt;20080328025704.83d17064.eric@...&gt;\n\t&lt;20080328065829.fbc4a0d9.eric@...&gt;\n\t&lt;BLU102-DS16F0EF0B429CF512F4568B5F90@...&gt;\n\t&lt;20080328093544.7bb25f14.eric@...&gt;\n\t&lt;BLU102-DS38EB67F6150A2B3EF3DF9B5F90@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] More Fun with DELETE\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&quot;Sebastien Lambla&quot; wrote:\n&gt;\n&gt; &gt; Not really.  The 202 response indicates that the request was\n&gt; &gt; received and processed.  Since it *might* be successful, it would be\n&gt; &gt; inappropriate to send a 4xx failure response code.\n&gt; \n&gt; I&#39;ve always considered a 202 to be an asynchronous mechanism because\n&gt; it doesn&#39;t carry an intent on further action required, which the\n&gt; meaning you put behind it would suggest.\n&gt; \n\nI disagree that my method somehow makes the 202 response synchronous.\nTo be more RESTful and more in-line with RFC 2616, I suppose my\nmechanism should allow 15 minutes to cancel out of a DELETE before it&#39;s\nirrevocable.  The reason I&#39;ve switched that around is usability, I\nthink people are more used to being asked to confirm a delete, than to\ncancel or else.\n\nFor the majority of my use cases, I can&#39;t consider using a 3xx response\nto a DELETE, because there is no reason to rule out the 202 response.\nIf there isn&#39;t a compelling reason to disregard that SHOULD regarding\n200 - 202 - 204 responses to DELETE, I think I SHOULD use a 202.  Re-\nreading 10.3 RFC 2616 with your example in mind, though, did enlighten\nme about how to handle a DELETE issued against a resource which would\nbe a redirect on GET.\n\n&gt; \n&gt; 302 seem to imply same http method for a redirect with confirmation\n&gt; from the user.\n&gt; \n\nThe way I read 10.3 RFC 2616, concerning DELETE, is that the user is\nbeing asked to confirm or reject the redirect.  Meaning, the user is\nbeing asked to DELETE the target or the source of the redirect.\nPresumably, if the target is chosen, the source URL would also be\nremoved since there&#39;s nothing left to redirect *to*.  If the user\nrejects the DELETE redirect, only the source URL is removed -- the\nredirect mapping is DELETEd.\n\nI would handle a DELETE request on a 303 the same as a 301, 302, or a\n307, as inferred by the spec, and issue a confirmation form with a 202\nresponse after the user had worked out their intentions.  I would not\nuse a 300 response, like I was saying yesterday.  The only use-case I&#39;m\nleft with for a 300 response to a DELETE request, is if the DELETE\nrefers to a negotiated URI.  Even then, the user should DELETE variants\ndirectly, and only DELETE the negotiated URI when they want to remove\nthe whole works.  So I&#39;m back to always responding 200 - 202 - 204 to\nDELETE request... sorry.\n\n&gt; \n&gt; I was suggesting redirecting to a confirmation resource, not moving\n&gt; the *resource* itself. This forces two requests from the server, one\n&gt; is a delete, with a resulting redirect to a resource evaluating to a\n&gt; delete cookie, upon which you can send a delete operation (or a post\n&gt; for that matter) that will confirm the operation.\n&gt; \n\nThis gives me the willies, a bit.  In REST, of course, the server may\ntake action beyond what the request calls for.  For example, a POST may\ncreate multiple resources.  This gives me no queasy feeling because\neach created resource is still obeying the semantics of the user\nrequest method.  When a DELETE is used to create a resource, I&#39;m not so\nsure.\n\n&gt; \n&gt; DELETE /a -&gt; 302: go check /a?deletecookie\n&gt; ** USER CONFIRMATION REQUIRED TO CONTINUE, THROUGH ANY MEAN THE UA CAN\n&gt; DISPLAY **\n&gt; DELETE /a?deletecookie -&gt; 204\n&gt; \n\nOr, did you create /a?deletecookie when you created /a ?  If you did,\nthen why not just DELETE /a?deletecookie, and have that also\nDELETE /a ?  If /a is DELETEd directly, make subsequent GETs for /a\nreturn 410, if /a?deletecookie is DELETEd, subsequent GETs for /a\nreturn 404.  If /a?deletecookie is there all along, then it seems to me\nthat it ought to be independently DELETEable.\n\nUsing this mechanism to confirm a DELETE by using a DELETE to create a\nresource doesn&#39;t feel right, though.  If you want to do that, I think\nit&#39;s a complex enough interaction to be application-level, not protocol-\nlevel.  I understand that you don&#39;t want to depend on the content-type\nof the message body, like I&#39;m doing with my 204 method, but I don&#39;t\nthink what you&#39;re describing works at the protocol level.  Mine does,\ngranted with the limitation of requiring HTML on the client.\n\n&gt;\n&gt; You&#39;re suggesting the following\n&gt; DELETE /a -&gt; 202: Accepted\n&gt; ** USER CONFIRMATION THROUGH HTML **\n&gt; _do somehow confirm the delete_\n&gt; \n\nNo, like I said, the entity body can be anything, based on content\nnegotiation.  However, for my purposes HTML will do, most clients I\nenvision using the application at least use HTML to display error-\nmessage text from the server and most also grok HTML forms.  So this \njust isn&#39;t that big a deal.  As I mention above, the DELETE could also\nbe time-delayed, giving the user a chance to opt out.  This is more\nRESTful based on the notion of not fighting how things *are*, but it\nisn&#39;t breaking any actual constraint to use opt-in confirmation, so the\nease-of-use concern trumps.\n\n-Eric\n\n"}}