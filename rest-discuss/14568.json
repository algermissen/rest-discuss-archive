{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"bc6KwmAZhbJLYbhCLI3hBwcaUSi8rvCSSRexhJmEwyWjGESzD4OUimBA5pL6irO1NrmFY7UdQtZ_yl-2ALiXPzqr4WiJV7Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How can a framework/library encourage REST-ful \tdevelopment?","postDate":"1263596352","msgId":14568,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MTAwMTE1MTQ1OW02NGE5OWU1ZWc0MzIwYjc3NzViYjgzYTg4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGI1NDhkZjY1MTAwMTE1MTM0OGw1MmViN2Q4OXY2N2JjZGViNmM5MTczYWNkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI1NDhkZjY1MTAwMTE1MTIyN3I2ZmNmMjI0NGsxY2ViZDIyYTI0M2QwMTg0QG1haWwuZ21haWwuY29tPgkgPDgxNThhZDc1MTAwMTE1MTMzM2lkOTE5NDZjcmE0MzNhMTUxNGExMjY1YjVAbWFpbC5nbWFpbC5jb20+CSA8YjU0OGRmNjUxMDAxMTUxMzQ4bDUyZWI3ZDg5djY3YmNkZWI2YzkxNzNhY2RAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14567,"nextInTopic":14569,"prevInTime":14567,"nextInTime":14569,"topicId":14561,"numMessagesInTopic":28,"msgSnippet":"Thanks for the feedback on my initial thoughts about the REST style and programming frameworks. In order to explore this more w/o cluttering up this list, I","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63807 invoked from network); 15 Jan 2010 22:59:14 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 15 Jan 2010 22:59:14 -0000\r\nX-Received: from unknown (HELO mail-fx0-f209.google.com) (209.85.220.209)\n  by mta2.grp.sp2.yahoo.com with SMTP; 15 Jan 2010 22:59:14 -0000\r\nX-Received: by fxm1 with SMTP id 1so684225fxm.16\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 15 Jan 2010 14:59:13 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.3.81 with SMTP id 17mr3230598fam.102.1263596352566; Fri, \n\t15 Jan 2010 14:59:12 -0800 (PST)\r\nIn-Reply-To: &lt;b548df651001151348l52eb7d89v67bcdeb6c9173acd@...&gt;\r\nReferences: &lt;b548df651001151227r6fcf2244k1cebd22a243d0184@...&gt;\n\t &lt;8158ad751001151333id91946cra433a1514a1265b5@...&gt;\n\t &lt;b548df651001151348l52eb7d89v67bcdeb6c9173acd@...&gt;\r\nDate: Fri, 15 Jan 2010 17:59:12 -0500\r\nX-Google-Sender-Auth: f72fe4ec97d71284\r\nMessage-ID: &lt;b548df651001151459m64a99e5eg4320b7775bb83a88@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=00151747c366bbf6ff047d3bf3f0\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] How can a framework/library encourage REST-ful \n\tdevelopment?\r\nX-Yahoo-Group-Post: member; u=69164307; y=gFqnwBEiu-1hrj4U4Xjf3nxZSVn4VCcdW_ggXKict-FT\r\nX-Yahoo-Profile: mamund\r\n\r\n\r\n--00151747c366bbf6ff047d3bf3f0\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThanks for the feedback on my initial thoughts about the REST style and\npro=\r\ngramming frameworks.\n\nIn order to explore this more w/o cluttering up this =\r\nlist, I started a\ngooglecode project/wiki [1] and related group [2]. I&#39;d be=\r\n happy to grant\nanyone interested in participating contributor permissions =\r\nto the project.\nJust ping me offline (mamund AT yahoo DOT com) and I&#39;ll add=\r\n you to the\nproject and group.\n\n[1] http://code.google.com/p/implementing-r=\r\nest/\n[2] http://groups.google.com/group/implementing-rest\n\nmca\nhttp://amund=\r\nsen.com/blog/\n\n\n\nOn Fri, Jan 15, 2010 at 16:48, mike amundsen &lt;mamund@yahoo=\r\n.com&gt; wrote:\n\n&gt; &lt;snip&gt;\n&gt; You might check out this post from Erik Wilde:\n&gt; &lt;=\r\n/snip&gt;\n&gt; yep, i commented there already.\n&gt;\n&gt; The list of features you provi=\r\nde are pretty close to those mentioned in a\n&gt; few threads here and on the w=\r\neb.   Seems that many of these lists focus on\n&gt; the day-to-day details of w=\r\norking with HTTP and being REST-ful along the\n&gt; way. That&#39;s cool.\n&gt;\n&gt; I nee=\r\nd to do more thinking about _why_ these are listed in the context of\n&gt; REST=\r\n and what, if anything can be said about the style itself apart from the\n&gt; =\r\nprotocol in use. I&#39;ve found a handful of papers on matching software\n&gt; arch=\r\nitecture to programming, but nothing yet on _network_ architecture and\n&gt; pr=\r\nogramming. I&#39;m still digging.\n&gt;\n&gt; mca\n&gt; http://amundsen.com/blog/\n&gt;\n&gt;\n&gt;\n&gt; O=\r\nn Fri, Jan 15, 2010 at 16:33, Peter Keane &lt;pkeane@...&gt; wrote:\n&gt;=\r\n\n&gt;&gt; You might check out this post from Erik Wilde:\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; http://dret.typ=\r\nepad.com/dretblog/2009/05/rest-programming-toolbox-requirements.html\n&gt;&gt;\n&gt;&gt; =\r\nFor me, the bare minimum includes:\n&gt;&gt;\n&gt;&gt; - support for GET,PUT,POST, DELETE=\r\n http methods (at least ... HEAD,\n&gt;&gt; OPTIONS nice, too).\n&gt;&gt; - for GET reque=\r\nsts, I want to know what media type is preferred\n&gt;&gt; (combination of looking=\r\n at Accept header and/or file extension, etc.)\n&gt;&gt; - for PUT/POST I want to =\r\nbe able to quickly and easily now the incoming\n&gt;&gt; Content-type\n&gt;&gt; - an easy=\r\n way to parse the requested URL (w/ regex or named sections,\n&gt;&gt; etc.)\n&gt;&gt; - =\r\nthe ability to dispatch to a handler function by any combination of the\n&gt;&gt; =\r\nabove\n&gt;&gt; - tools for creating representations in the most common media type=\r\ns: HTML\n&gt;&gt; (a template language), JSON, Atom, RDF, etc. and serving the pro=\r\nper one\n&gt;&gt; based on requested type.\n&gt;&gt;\n&gt;&gt; In PHP, I don&#39;t think there is an=\r\n obvious option (we&#39;ve built our own\n&gt;&gt; RESTful classes for Zend Framework:=\r\n http://github.com/pkeane/cola-zend),\n&gt;&gt; what I know of RoR seems to meet c=\r\nriteria, Django seems pretty nicely\n&gt;&gt; RESTful, as does the Google App Engi=\r\nne &quot;WebApp.&quot;\n&gt;&gt;\n&gt;&gt; --peter\n&gt;&gt;\n&gt;&gt; On Fri, Jan 15, 2010 at 2:27 PM, mike amun=\r\ndsen &lt;mamund@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Recently, I&#39;ve been thinking =\r\nabout how a coding framework or library\n&gt;&gt;&gt; can influence the way developer=\r\ns implement applications. What would a\n&gt;&gt;&gt; coding environment look like if =\r\nit was meant to encourage results that\n&gt;&gt;&gt; followed a particular _architect=\r\nural_ style (not programming style).\n&gt;&gt;&gt;\n&gt;&gt;&gt; IOW, is there a way to craft a=\r\n framework that constrains developers in\n&gt;&gt;&gt; ways that results in a REST-fu=\r\nl implementation of the application?\n&gt;&gt;&gt;\n&gt;&gt;&gt; I did some digging, but have y=\r\net to find any writing on this topic.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Here are some &quot;off-the-top-of=\r\n-my-head&quot; items:\n&gt;&gt;&gt;\n&gt;&gt;&gt; For example, a framework might exhibit these REST-=\r\nlike traits:\n&gt;&gt;&gt; - there is a clear separation of concerns between resource=\r\n\n&gt;&gt;&gt; identifiers, resources, and representations\n&gt;&gt;&gt; - developers must defi=\r\nne a resource as the public application interface\n&gt;&gt;&gt; - the Uniform Interfa=\r\nce is enforced (e.g. those methods are the only\n&gt;&gt;&gt; public members exposed =\r\nfor a resource)\n&gt;&gt;&gt; - developers must always associate one or more represen=\r\ntation formats\n&gt;&gt;&gt; with a resource and/or resource method before the implem=\r\nentation is\n&gt;&gt;&gt; valid\n&gt;&gt;&gt; - there is no way to define and use server-side s=\r\nession state objects\n&gt;&gt;&gt;\n&gt;&gt;&gt; Some HTTP-specific traits might be:\n&gt;&gt;&gt; - supp=\r\nort for content negotiation is &quot;baked-in&quot;\n&gt;&gt;&gt; - support for conditional req=\r\nuests is &quot;baked-in&quot; and automatic\n&gt;&gt;&gt; - RPC-like implementation patterns (e=\r\n.g. gateway URIs) are somehow\n&gt;&gt;&gt; difficult to implement or are flagged as =\r\ninvalid\n&gt;&gt;&gt;\n&gt;&gt;&gt; Any comments? Is this line of thinking pure folly? old hat?=\r\n already\n&gt;&gt;&gt; resolved sufficiently?\n&gt;&gt;&gt;\n&gt;&gt;&gt; mca\n&gt;&gt;&gt; http://amundsen.com/blo=\r\ng/\n&gt;&gt;&gt;  \n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;\n\r\n--00151747c366bbf6ff047d3bf3f0\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThanks for the feedback on my initial thoughts about the REST style and pro=\r\ngramming frameworks.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;In order to explore this more w/o c=\r\nluttering up this list, I started a googlecode project/wiki [1] and related=\r\n group [2]. I&#39;d be happy to grant anyone interested in participating co=\r\nntributor permissions to the project. Just ping me=A0offline (mamund AT yah=\r\noo DOT com) and I&#39;ll add you to the project and group.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div&gt;[1]=A0&lt;a href=3D&quot;http://code.google.com/p/implementing-rest/&quot;&gt;htt=\r\np://code.google.com/p/implementing-rest/&lt;/a&gt;&lt;/div&gt;&lt;div&gt;[2]=A0&lt;a href=3D&quot;htt=\r\np://groups.google.com/group/implementing-rest&quot;&gt;http://groups.google.com/gro=\r\nup/implementing-rest&lt;/a&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;mca&lt;br&gt;&lt;a href=3D&quot;http:/=\r\n/amundsen.com/blog/&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div cla=\r\nss=3D&quot;gmail_quote&quot;&gt;On Fri, Jan 15, 2010 at 16:48, mike amundsen &lt;span dir=\r\n=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mamund@...&quot;&gt;mamund@...&lt;/a&gt;&gt;&lt;/=\r\nspan&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8e=\r\nx;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\n&lt;snip&gt;&lt;div&gt;&lt;div clas=\r\ns=3D&quot;im&quot;&gt;You might check out this post from Erik Wilde:&lt;br&gt;&lt;/div&gt;&lt;/snip&=\r\ngt;&lt;/div&gt;&lt;div&gt;yep, i commented there already.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The =\r\nlist of features you provide are pretty close to those mentioned in a few t=\r\nhreads here and on the web. =A0 Seems that many of these lists focus on the=\r\n day-to-day details of working with HTTP and being REST-ful along the way. =\r\nThat&#39;s cool.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I need to do more thinking abou=\r\nt _why_ these are listed in the context of REST and what, if anything can b=\r\ne said about the style itself apart from the protocol in use. I&#39;ve foun=\r\nd a handful of papers on matching software architecture to programming, but=\r\n nothing yet on _network_ architecture and programming. I&#39;m still diggi=\r\nng.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=3D&quot;im&quot;&gt;mca&lt;br&gt;&lt;a href=3D&quot;http://a=\r\nmundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amundsen.com/blog/&lt;/a&gt;&lt;br&gt;&lt;br&gt;\n=\r\n&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;=\r\nOn Fri, Jan 15, 2010 at 16:33, Peter Keane &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D=\r\n&quot;mailto:pkeane@...&quot; target=3D&quot;_blank&quot;&gt;pkeane@...&lt;/a=\r\n&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0=\r\n 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\nYou might check out=\r\n this post from Erik Wilde:&lt;br&gt;&lt;br&gt;&lt;a href=3D&quot;http://dret.typepad.com/dretb=\r\nlog/2009/05/rest-programming-toolbox-requirements.html&quot; target=3D&quot;_blank&quot;&gt;h=\r\nttp://dret.typepad.com/dretblog/2009/05/rest-programming-toolbox-requiremen=\r\nts.html&lt;/a&gt;&lt;br&gt;\n\n\n&lt;br&gt;For me, the bare minimum includes:&lt;br&gt;&lt;br&gt;- support f=\r\nor GET,PUT,POST, DELETE http methods (at least ... HEAD, OPTIONS nice, too)=\r\n.&lt;br&gt;- for GET requests, I want to know what media type is preferred (combi=\r\nnation of looking at Accept header and/or file extension, etc.)&lt;br&gt;\n\n\n- for=\r\n PUT/POST I want to be able to quickly and easily now the incoming Content-=\r\ntype &lt;br&gt;- an easy way to parse the requested URL (w/ regex or named sectio=\r\nns, etc.)&lt;br&gt;- the ability to dispatch to a handler function by any combina=\r\ntion of the above&lt;br&gt;\n\n\n- tools for creating representations in the most co=\r\nmmon media types: HTML (a template language), JSON, Atom, RDF, etc. and ser=\r\nving the proper one based on requested type.&lt;br&gt;&lt;br&gt;In PHP, I don&#39;t thi=\r\nnk there is an obvious option (we&#39;ve built our own RESTful classes for =\r\nZend Framework: &lt;a href=3D&quot;http://github.com/pkeane/cola-zend&quot; target=3D&quot;_b=\r\nlank&quot;&gt;http://github.com/pkeane/cola-zend&lt;/a&gt;), what I know of RoR seems to =\r\nmeet criteria, Django seems pretty nicely RESTful, as does the Google App E=\r\nngine &quot;WebApp.&quot;&lt;br&gt;\n\n\n&lt;br&gt;--peter&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quot=\r\ne&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;On Fri, Jan 15, 2010 at 2:27 PM, mike amundsen &lt;spa=\r\nn dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:mamund@...&quot; target=3D&quot;_blank&quot;&gt;mam=\r\nund@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n\n&lt;/div&gt;&lt;/div&gt;&lt;blockquote class=3D&quot;g=\r\nmail_quote&quot; style=3D&quot;border-left:1px solid rgb(204, 204, 204);margin:0pt 0p=\r\nt 0pt 0.8ex;padding-left:1ex&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color=\r\n:rgb(255, 255, 255)&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;=\r\n\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Recently, I&#39;ve been thinking about =\r\nhow a coding framework or library&lt;br&gt;\ncan influence the way developers impl=\r\nement applications. What would a&lt;br&gt;\ncoding environment look like if it was=\r\n meant to encourage results that&lt;br&gt;\nfollowed a particular _architectural_ =\r\nstyle (not programming style).&lt;br&gt;\n&lt;br&gt;\nIOW, is there a way to craft a fram=\r\nework that constrains developers in&lt;br&gt;\nways that results in a REST-ful imp=\r\nlementation of the application?&lt;br&gt;\n&lt;br&gt;\nI did some digging, but have yet t=\r\no find any writing on this topic.&lt;br&gt;\n&lt;br&gt;\nHere are some &quot;off-the-top-=\r\nof-my-head&quot; items:&lt;br&gt;\n&lt;br&gt;\nFor example, a framework might exhibit the=\r\nse REST-like traits:&lt;br&gt;\n- there is a clear separation of concerns between =\r\nresource&lt;br&gt;\nidentifiers, resources, and representations&lt;br&gt;\n- developers m=\r\nust define a resource as the public application interface&lt;br&gt;\n- the Uniform=\r\n Interface is enforced (e.g. those methods are the only&lt;br&gt;\npublic members =\r\nexposed for a resource)&lt;br&gt;\n- developers must always associate one or more =\r\nrepresentation formats&lt;br&gt;\nwith a resource and/or resource method before th=\r\ne implementation is&lt;br&gt;\nvalid&lt;br&gt;\n- there is no way to define and use serve=\r\nr-side session state objects&lt;br&gt;\n&lt;br&gt;\nSome HTTP-specific traits might be:&lt;b=\r\nr&gt;\n- support for content negotiation is &quot;baked-in&quot;&lt;br&gt;\n- support =\r\nfor conditional requests is &quot;baked-in&quot; and automatic&lt;br&gt;\n- RPC-li=\r\nke implementation patterns (e.g. gateway URIs) are somehow&lt;br&gt;\ndifficult to=\r\n implement or are flagged as invalid&lt;br&gt;\n&lt;br&gt;\nAny comments? Is this line of=\r\n thinking pure folly? old hat? already&lt;br&gt;\nresolved sufficiently?&lt;br&gt;\n&lt;br&gt;\n=\r\nmca&lt;br&gt;\n&lt;a href=3D&quot;http://amundsen.com/blog/&quot; target=3D&quot;_blank&quot;&gt;http://amun=\r\ndsen.com/blog/&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;/div&gt;&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;color:rgb(255, 255, 255);min-height:0pt&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n=\r\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/blockq=\r\nuote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--00151747c366bbf6ff047d3bf3f0--\r\n\n"}}