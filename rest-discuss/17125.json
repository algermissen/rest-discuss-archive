{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"vOd8-L5VnZYj0dLiiwkRi6ZDy0qUZcZA_mPepPGvWGzYDRnxhPty7-Px7K5WjON0mbZYIWrhYb8gju1lgqUJFD5KCuw3G6aCEH9cRdyJpA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] XForms vs. WSDL?","postDate":"1293149591","msgId":17125,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAxMjIzMTcxMzExLmNiMTg3MDI4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDA2OTlGRTY4Q0IxNzQyMjQ5MTgzMUNEQjdENUVEMkExQEpyblBDPg==","referencesHeader":"PDA2OTlGRTY4Q0IxNzQyMjQ5MTgzMUNEQjdENUVEMkExQEpyblBDPg=="},"prevInTopic":17124,"nextInTopic":17126,"prevInTime":17124,"nextInTime":17126,"topicId":17114,"numMessagesInTopic":23,"msgSnippet":"... I disagree with the premise.  REST s uniform interface requires generic media and data types.  The example creates an application-specific media and data","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 23810 invoked from network); 24 Dec 2010 00:13:28 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.sp2.yahoo.com with QMQP; 24 Dec 2010 00:13:28 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 24 Dec 2010 00:13:28 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 5ED77509E2;\n\tThu, 23 Dec 2010 19:13:27 -0500 (EST)\r\nDate: Thu, 23 Dec 2010 17:13:11 -0700\r\nTo: =?ISO-8859-1?Q?J=F8rn?= Wildt &lt;jw@...&gt;\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20101223171311.cb187028.eric@...&gt;\r\nIn-Reply-To: &lt;0699FE68CB17422491831CDB7D5ED2A1@JrnPC&gt;\r\nReferences: &lt;0699FE68CB17422491831CDB7D5ED2A1@JrnPC&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] XForms vs. WSDL?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nJ=F8rn Wildt wrote:\n&gt;\n&gt; I was reading Ian Robinsons &quot;Using typed links to f=\r\norms&quot; (again, it&#39;s\n&gt; a good read)\n&gt;\n\nI disagree with the premise.  REST&#39;s u=\r\nniform interface requires generic\nmedia and data types.  The example create=\r\ns an application-specific media\nand data type (ordering one brand of coffee=\r\n), where even domain-specific\nmedia and data types (ordering coffee) would =\r\nbe too fine-grained, where\nnetwork-specific (generic to IP) media and data =\r\ntypes are called for\n(ordering anything).\n\nWhy not just use XForms forwards=\r\n instead of backwards, using\nstandardized data types and link relations lik=\r\ne the thesis says?  I\ndon&#39;t understand how this would be less pragmatic tha=\r\nn the example\ngiven, particularly to the extent of using pragmatism to just=\r\nify\ndeliberately avoiding the hypertext constraint in favor of increased\nco=\r\nupling.\n\nLink relations aren&#39;t coupling when they&#39;re standardized, i.e. com=\r\nmon\nknowledge at the IP layer across numerous protocols and data types.  Th=\r\ne\ndifference is the key difference in REST -- the uniform interface is\nnetw=\r\nork-based, extended link relations are library-based (which is fine\nfor dom=\r\nain-specific vocabulary, not for directing application flow by\nbaking HTTP =\r\nmethods into them and such).  Methods, headers, data types\nand link relatio=\r\nns nobody&#39;s ever heard of before you minted them are\n*not* the same thing a=\r\ns the standardized uniform interface Roy&#39;s thesis\ndescribes.\n\n&gt; \n&gt; and docu=\r\nment out of band how to post data to that link\n&gt;\n\nDoesn&#39;t compute.  The who=\r\nle point of the hypertext constraint is that\nhypertext controls are used to=\r\n document this in-band, relying on the\ncommon-knowledge processing model of=\r\n ubiquitous media types.  Maybe\nthis other proposed architectural style has=\r\n merit, I&#39;m not judging,\nonly stating that it can&#39;t be REST if there&#39;s no h=\r\nypertext constraint.\n\n&gt;\n&gt; have an XForm at the end of the link and then use=\r\n that information as\n&gt; the online/inline/in-band documentation. I think tha=\r\nt&#39;s quite a neat\n&gt; idea, but it strikes me that it&#39;s getting awfull close t=\r\no a WSDL spec.\n&gt; \n\nExactly.  IDLs, and hypertext-driven APIs, aren&#39;t the sa=\r\nme paradigm.\nIt hadn&#39;t occurred to me that XForms could be repurposed as an=\r\n IDL, but\nmy advice is, don&#39;t.  IDL-driven APIs are NOT REST.\n\n&gt;\n&gt; Both XFo=\r\nrm and WSDL defines how to POST data adhering to a specific\n&gt; XML schema.\n&gt;=\r\n\n\nNot exactly.  IDLs are not self-documenting hypertext controls -- they\nca=\r\nnnot instruct a user-agent as to the default values, validate input\n(type=\r\n=3De-mail is one thing, black/whitelists are another) using code-on-\ndemand=\r\n; nor do they provide any mechanism to link to documentation (or\nrender it =\r\noutright as a pop-up) to inform the decision-making of the\nhumans or machin=\r\nes (RDFa doesn&#39;t make much sense in an IDL) interacting\nwith the API.\n\n&gt;\n&gt; =\r\nIf you then add a list of links to XForms, the list would be much\n&gt; like th=\r\ne WSDL list of methods/messages.\n&gt;\n\nYou say that like it&#39;s a good thing?  ;=\r\n-)  There are two approaches to\nthe problem of distributing the object inte=\r\nrface instead of distributing\nthe object.  One is to distribute a definitio=\r\nn of your custom interface.\nThe other is to use the distributed uniform int=\r\nerface, which is generic\n-- if all objects use the same interface, what&#39;s l=\r\neft to describe in\nan IDL?\n\n&gt;\n&gt; The rel=3D&quot;&quot; types would specify WSDL messa=\r\nge names.\n&gt; \n\nIn HTTP, REST&#39;s uniform interface includes, amongst other met=\r\nhods:  GET,\nPUT, POST, PATCH and DELETE.  If your interfaces are object-spe=\r\ncific\n(hint, hint) then yeah, IDLs make sense, but I don&#39;t know how you sta=\r\nrt\nfrom tunneling custom methods (expressed as link relations) over POST\nan=\r\nd arrive at REST.\n\n&gt;\n&gt; In all we could  have an HTML 5 list like the one be=\r\nlow and call it\n&gt; the WSDL method list:\n&gt; \n&gt;   &lt;dl&gt;\n&gt;     &lt;dt&gt;&lt;a rel=3D&quot;&quot; t=\r\nype=3D&quot;&quot; href=3D&quot;&quot;&gt;Title&lt;/a&gt;&lt;/dt&gt;\n&gt;     &lt;dd&gt;Description&lt;/dd&gt;\n&gt;   &lt;/dl&gt;\n&gt; \n&gt;=\r\n Each of the achors then points to an XForm which in turn points to an\n&gt; XM=\r\nL schema definition and defines POST urls - just like WSDL does.\n&gt; \n&gt; Is th=\r\nis good or bad? Is it better or worse than WSDL and WADL? Other \n&gt; opinions=\r\n?\n&gt; \n\nI really have no basis for comparing non-RESTful approaches.  REST is=\r\n a\nhypertext-driven architectural style based on standardized media types\na=\r\nnd standardized link relations.  While extended link relations may be\nused =\r\nto inform m2m decision-making, if the semantics of the interaction\nbetween =\r\nconnectors is that you can GET something and PUT it back then\njust use rel=\r\n=3D&#39;edit&#39; instead of defining an unlimited number of link\nrelations to desc=\r\nribe resource type (a server-side concern) to the\nclient in lieu of using s=\r\ntandardized hypertext controls.\n\nNote that rel=3D&#39;edit&#39; says nothing about =\r\nHTTP methods, or even HTTP,\nthough.  If you&#39;re assuming it means PUT, I hav=\r\ne no idea how you&#39;d\nreach that conclusion, even if the media type were appl=\r\nication/atom+xml,\nbecause only a hypertext control communicates method to m=\r\ne.  There&#39;s\nnothing in the communication between connectors which says &quot;RFC=\r\n 5023 in\nuse&quot;.  Only hypertext controls provide such instructions, which ma=\r\ny be\nto GET the rel=3D&#39;edit&#39;...\n\nOr, I may PATCH that resource -- but this =\r\nis communicated through the\nhypertext representation, including the Allow a=\r\nnd Accept(-*) headers.\nOne hypertext control indicates that the entire &quot;ins=\r\ntance&quot; (to stick\nwith XForms) may be PUT as application/atom+xml, while ano=\r\nther hypertext\ncontrol indicates that categories may be PATCHed using an in=\r\nstance of\napplication/atomcat+xml -- but this has no bearing on the link re=\r\nlation!\n\nI have no clue how any IDL- or schema-based approach supports the =\r\nabove\nparagraph, except as part of an API being driven by out-of-band\ninfor=\r\nmation.  When folks start talking about RESTful IDLs, schemae and\noverloade=\r\nd link relations, my reaction is WTF are you people even\n*talking* about, a=\r\ns I&#39;ve mentioned before.  My snappy comeback, is why\nnot just use rel=3D&#39;{H=\r\nTTP method}&#39; and have done with it?  Things that\nare not hypertext controls=\r\n:\n\nIDLs (even with a registered media type)\nmedia type definitions (registr=\r\nation doesn&#39;t indicate suitability)\nschemas (even with a registered media t=\r\nype)\nlink relations (even when standardized)\n\nThese things have their place=\r\n, and I&#39;ve even mentioned how IDLs could\nbe used as a response to OPTIONS r=\r\nequests, but they are *not*\nsubstitutes for the hypertext constraint.  Infe=\r\nrring things out-of-band\nbad, self-documenting hypertext APIs good.\n\n-Eric\n=\r\n\n"}}