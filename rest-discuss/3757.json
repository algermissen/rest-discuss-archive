{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"8Xdfr6PMDN5jSpXfGtT2sHap_YoQWrlYgPjf4lKVSBx8O2FvaCfLqORrhqi8MhdKgYOBex-tHvduyYP6SqHz02x2zTBEpyAC0LVmvT0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] sharing my banking data","postDate":"1057464807","msgId":3757,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMTMwMWMzNDM3NCRmM2UyYTRkMCRhMDAwYThjMEBTZWFpcnRoQTMxPg==","referencesHeader":"PDIwMDMwNzA1MTcxMjQxLjYzOS5xbWFpbEB3ZWI0MTgwOC5tYWlsLnlhaG9vLmNvbT4="},"prevInTopic":3756,"nextInTopic":3758,"prevInTime":3756,"nextInTime":3758,"topicId":3749,"numMessagesInTopic":8,"msgSnippet":"From: x y  ... That s fine, if you are going to use something like HTTP Auth the entire time.  My example was attempting to avoid use of","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 97739 invoked from network); 6 Jul 2003 04:13:31 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m7.grp.scd.yahoo.com with QMQP; 6 Jul 2003 04:13:31 -0000\r\nReceived: from unknown (HELO lakemtao03.cox.net) (68.1.17.242)\n  by mta2.grp.scd.yahoo.com with SMTP; 6 Jul 2003 04:13:31 -0000\r\nReceived: from SeairthA31 ([68.96.198.51]) by lakemtao03.cox.net\n          (InterMail vM.5.01.04.05 201-253-122-122-105-20011231) with SMTP\n          id &lt;20030706041330.PZAK23518.lakemtao03.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Sun, 6 Jul 2003 00:13:30 -0400\r\nMessage-ID: &lt;001301c34374$f3e2a4d0$a000a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20030705171241.639.qmail@...&gt;\r\nSubject: Re: [rest-discuss] sharing my banking data\r\nDate: Sun, 6 Jul 2003 00:13:27 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nFrom: &quot;x y&quot; &lt;wiki1000@...&gt;\n&gt;\n&gt; --- Seairth Jacobs &lt;seairth@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; *sigh* sorry.  This is a mistake.  Originally, Steps\n&gt; &gt; 1 returned a web form\n&gt; &gt; and Step 2 was a POST that created the URI.  I\n&gt; &gt; changed it to HTTP Auth to\n&gt; &gt; avoid limiting the scope of the example to HTML.  I\n&gt; &gt; failed to re-read what I\n&gt; &gt; changed it to, and therefore didn&#39;t catch that I was\n&gt; &gt; returning a 201 in\n&gt; &gt; response to a GET.  So... let&#39;s go back and change\n&gt; &gt; that somewhat:\n&gt; &gt;\n&gt; &gt; 1) I POST my credentials to http://my.bank/access,\n&gt; &gt; be this from a web form,\n&gt; &gt; some proprietary xml, etc.  The server authenticates\n&gt; &gt; me and returns a 201\n&gt; &gt; with a Location of http://my.bank/access/12345.\n&gt; &gt; (note: the html form could\n&gt; &gt; be retrieved with a GET to http://my.bank/access.)\n&gt;\n&gt; You miss my point, sorry.\n&gt; I wanted to say that your initial URI is just a &quot;place\n&gt; holder&quot; for a modal interaction.\n&gt; In fact, according to what you enter as a user id,\n&gt; you will get different resources.\n&gt;\n&gt; I was suggesting\n&gt; to directly enter a personalized URI containing\n&gt; you login name in it, like:\n&gt;\n&gt; http://my.bank/private/sj\n\nThat&#39;s fine, if you are going to use something like HTTP Auth the entire\ntime.  My example was attempting to avoid use of HTTP Auth (except for the\ninitial authentication).\n\n&gt; &gt; &gt; &gt; The e-mailed URL would have a limited time limit\n&gt; &gt; such as 30 minutes,\n&gt; &gt; &gt; after\n&gt; &gt; &gt; &gt; which, the link will only return a 404 response\n&gt; &gt; or some such.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; In my mind, this create a state inside the server\n&gt; &gt; (a timer). This is\n&gt; &gt; &gt; bad isn&#39;t it ?\n&gt; &gt;\n&gt; &gt; The timer is not part of the client state.  It&#39;s\n&gt; &gt; part of the resource state.\n&gt; &gt; It&#39;s the client state that the server is not suppose\n&gt; &gt; to be maintaining.\n&gt; &gt;\n&gt; Yes, but such a timer is a dynamic, in memory\n&gt; resource, which is very difficult to implement in a\n&gt; scalable way. It suppose a kind of daemon attached to\n&gt; the resource.\n&gt;\n&gt; Imagine a farm of timers managing the state of hundred\n&gt; such resources...\n\nI don&#39;t see why you need timers.  Store an expiration timestamp in the\nresource.  On access the the URL, the timestamp is checked.  If expired,\nreturn the appropriate 4xx response.  This method should scale fine.  Also,\ncaching would not be an issue because if SSL is being used, nothing is\ncached anyhow.\n\n&gt; &gt; By the way, the reason I created the URI instead of\n&gt; &gt; using HTTP Auth (or a\n&gt; &gt; cookie or whatever) at all times was partly due to\n&gt; &gt; Tyler and his crazy\n&gt; &gt; capabilities-based security model.  :)  I am not\n&gt; &gt; sure if I am doing it\n&gt; &gt; right, but the basic idea here was that the bank\n&gt; &gt; issued a URI\n&gt; &gt; (http://my.bank/access/12345) with a defined set of\n&gt; &gt; capabilities (the\n&gt; &gt; &quot;contract&quot;).  I could do anything that&#39;s defined,\n&gt; &gt; nothing more.  On top of\n&gt; &gt; that, when I want to share part of my access, I ask\n&gt; &gt; the bank for another\n&gt; &gt; capability URI (http://my.bank/proxy-access/56789)\n&gt; &gt; for that particular bit.\n&gt; &gt; Like the first URI, use is limited to what is\n&gt; &gt; defined.  This also means that\n&gt; &gt; I do not have to get my accountant set up with a\n&gt; &gt; separate password, flip a\n&gt; &gt; potentially large set of switches to set the\n&gt; &gt; security context, etc. just to\n&gt; &gt; give access.\n&gt;\n&gt; This is the point: what you want to do is to share\n&gt; personalized resources without pain.\n&gt;\n&gt; However, your solution implies the generation of a\n&gt; fake URI which has universal validity during its life\n&gt; time. This is not really secure...\n\nFirst, the URI is not fake.  It is a fully functional, legitimate URI.\nSecond, I do not see why this method isn&#39;t secure.  It is every bit as\nsecure as any of the traditional methods (cookies, HTTP Basic Auth, etc).\nThe security is provided by the SSL, not the format of the URI.  About the\nonly thing I can think of is the possibility of someone looking over your\nshoulder and writing down the URI.\n\n&gt; Of course, this is a somewhat weak\n&gt; &gt; example, since most people\n&gt; &gt; would likely just copy-n-paste the screen and e-mail\n&gt; &gt; it instead of go\n&gt; &gt; through all of this effort.  But in a more complex\n&gt; &gt; situation, I see how this\n&gt; &gt; approach could work well (I think).\n&gt; &gt;\n&gt;\n&gt; I aggree, this is not top notch security. Thats why\n&gt; it is necessary to impose to the accountant to\n&gt; authenticate himself before reading a shared URI.\n\nSo would the mean that the accountant would have to get an access account\nset up with my bank?  Somehow, I doubt that banks are going to want to take\nthe time to set up all of these accounts just so I can share views of my\ntransactions with my accountant, my lawyer, or the service rep on the other\nend of the phone who refuses to believe that they overcharged me.  Not only\nthat, it means that my accountant would have to maintain accounts with all\nof the banks, stock brokers, etc. that her clients use.  What a pain!  As\nlong at the generated URI is securely given to the intended recipient, I\ndon&#39;t see where the security issue is.  It would certainly be much easier\nfor my accountant to get a single encryption certificate with which I could\nsecurely sender her an e-mail.\n\n&gt; Encoding the &quot;needed roles&quot; in the URI allow a very\n&gt; efficient check : the access control has simply to get\n&gt; the available user roles from the authenticated user\n&gt; profile, and then check that there is one which match\n&gt; the &quot;role part&quot; of the presented URI. This trick avoid\n&gt; to store a map resource-&gt;role in the server.\n\nI will have to defer to Tyler on this one.  As I understand it, role-based\nsecurity is more prone to security holes than is capability-based security.\nHowever, I come from the practice of a role-based model (good ol&#39; MS\nWindows) and am still learning the capability-based model, so my experience\nis quite limited.\n\nAND I am perfectly willing to admit that this whole thing could be very\nunRESTful.  That&#39;s why I&#39;m putting it out there ...\n\nSeairth\n\n\n"}}