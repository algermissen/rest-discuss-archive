{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"EFUwVZNyxTokjCCorvoUdzEgxwuB0bKsn7Nl7jPPZjEsMwuOCTAN4Ac-rPy0AfhLiaBDCsLqhcwRFlEppgy22YcZ5EyfaP8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1294106304","msgId":17184,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlucTh6ang5OXgzU3lTNFM2c0VSYnZKdFhWN1lrMnYraUhFVllRaUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDEyOTQxMDM5OTUuMzcyMy4xMTcuY2FtZWxAYmFja3BhY2s+","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPgk8NEQxOUNERDMuNDA4MDVAd2VicjMub3JnPgk8NzIwMDVGQ0U0N0NENEUxQThBRTE1NzdDOURGOTZBQzVASnJuUEM+CTw0RDE5REQ3My45MDEwMjA3QHdlYnIzLm9yZz4JPEFBTkxrVGluaEJ3dW90dmhiNTdHM3gyQV9xbj10RUhLZFRIamZlRThfWVk1VEBtYWlsLmdtYWlsLmNvbT4JPDREMUEyRkQxLjcwMTA1MDJAd2VicjMub3JnPgk8MEJGNUY4QkEtNDdFMC00NzAzLTgzOTAtNjEwQjRGNENERjkxQG1hYy5jb20+CTwxMjkzNTY5OTc2LjE1NTg5LjUwLmNhbWVsQGJhY2twYWNrPgk8MjAxMDEyMjkwMDQwMjkuZjE0OTM3ZWUuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MTI5MzY0MzEyNC4xNTU4OS43Mi5jYW1lbEBiYWNrcGFjaz4JPDIwMTAxMjI5MTM1MTQ1LmJhYTU0M2Q0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyOTM2NTc3NjQuMTYyMzcuMy5jYW1lbEBiYWNrcGFjaz4JPDIwMTAxMjI5MTkyNjE2LmNmOTUzYmNlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyOTQwODczNzAuMzcyMy41LmNhbWVsQGJhY2twYWNrPgk8QUFOTGtUaW1YLVpHNjEwN0ZwRFdrdjAwWlBjQmZZRFpXa0c0Q0FUSzI4aThFQG1haWwuZ21haWwuY29tPgk8QUFOTGtUaT1RMTAxb1BZTi1rSGNZWHpHRHEtYkV6QlJRUWRtVDhFRk9pZ0I4QG1haWwuZ21haWwuY29tPgk8MTI5NDA5NjcxMS4zNzIzLjk2LmNhbWVsQGJhY2twYWNrPgk8QUFOTGtUaWtrU3BKRU5YNzdaNW1HMFBid1RpdGlzd2gwWFhhVG8wbXhwOHNEQG1haWwuZ21haWwuY29tPgk8MTI5NDEwMzk5NS4zNzIzLjExNy5jYW1lbEBiYWNrcGFjaz4="},"prevInTopic":17183,"nextInTopic":17185,"prevInTime":17183,"nextInTime":17185,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"Juergen:  ...  No, it s not realistic for a lot of cases. I am not trying to solve a lot of cases, just the ones set before me.  But I m","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 94577 invoked from network); 4 Jan 2011 01:58:25 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m11.grp.re1.yahoo.com with QMQP; 4 Jan 2011 01:58:25 -0000\r\nX-Received: from unknown (HELO mail-fx0-f45.google.com) (209.85.161.45)\n  by mta1.grp.re1.yahoo.com with SMTP; 4 Jan 2011 01:58:25 -0000\r\nX-Received: by fxm12 with SMTP id 12so14039081fxm.32\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 03 Jan 2011 17:58:25 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.36.220 with SMTP id u28mr16030fad.11.1294106304923; Mon,\n 03 Jan 2011 17:58:24 -0800 (PST)\r\nX-Received: by 10.223.117.74 with HTTP; Mon, 3 Jan 2011 17:58:24 -0800 (PST)\r\nIn-Reply-To: &lt;1294103995.3723.117.camel@backpack&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\n\t&lt;4D19CDD3.40805@...&gt;\n\t&lt;72005FCE47CD4E1A8AE1577C9DF96AC5@JrnPC&gt;\n\t&lt;4D19DD73.9010207@...&gt;\n\t&lt;AANLkTinhBwuotvhb57G3x2A_qn=tEHKdTHjfeE8_YY5T@...&gt;\n\t&lt;4D1A2FD1.7010502@...&gt;\n\t&lt;0BF5F8BA-47E0-4703-8390-610B4F4CDF91@...&gt;\n\t&lt;1293569976.15589.50.camel@backpack&gt;\n\t&lt;20101229004029.f14937ee.eric@...&gt;\n\t&lt;1293643124.15589.72.camel@backpack&gt;\n\t&lt;20101229135145.baa543d4.eric@...&gt;\n\t&lt;1293657764.16237.3.camel@backpack&gt;\n\t&lt;20101229192616.cf953bce.eric@...&gt;\n\t&lt;1294087370.3723.5.camel@backpack&gt;\n\t&lt;AANLkTimX-ZG6107FpDWkv00ZPcBfYDZWkG4CATK28i8E@...&gt;\n\t&lt;AANLkTi=Q101oPYN-kHcYXzGDq-bEzBRQQdmT8EFOigB8@...&gt;\n\t&lt;1294096711.3723.96.camel@backpack&gt;\n\t&lt;AANLkTikkSpJENX77Z5mG0PbwTitiswh0XXaTo0mxp8sD@...&gt;\n\t&lt;1294103995.3723.117.camel@backpack&gt;\r\nDate: Mon, 3 Jan 2011 20:58:24 -0500\r\nX-Google-Sender-Auth: XDdbWpZMeW3O8U8AT8f9xnvoPvY\r\nMessage-ID: &lt;AANLkTinq8zjx99x3SyS4S6sERbvJtXV7Yk2v+iHEVYQi@...&gt;\r\nTo: juergen.brendel@...\r\nCc: Randy Fischer &lt;fischer@...&gt;, Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=69164307; y=24wOIrBX0DDw7pszR68mzlStNC-vukVP5sB8k589Sx9e\r\nX-Yahoo-Profile: mamund\r\n\r\nJuergen:\n\n&lt;snip&gt;\n&gt; Really? I mean, is that realistic for a lot of cases? If=\r\n you really need\n&gt; to support multiple protocols then sure, you don&#39;t want =\r\nthat sort of\n&gt; thing here and you want an agnostic type.\n&lt;/snip&gt;\nNo, it&#39;s n=\r\not &quot;realistic for a lot of cases.&quot; I am not trying to solve\n&quot;a lot&quot; of case=\r\ns, just the ones set before me.\n\n&lt;snip&gt;\nBut I&#39;m just trying to\n&gt; remember w=\r\nhat the equivalent of PUT vs. POST would be for FTP, or the\n&gt; &#39;location&#39; HT=\r\nTP response header, just as an example. Actually, it&#39;s not\n&gt; so much about =\r\n&#39;PUT&#39; vs. &#39;POST&#39;, but about update-existing (or\n&gt; create-at-location) vs.\n&gt;=\r\n create-in-collection-and-let-server-determine-location.\n&lt;/snip&gt;\nHTTP POST =\r\n=3D FTP STOR\nHTTP PUT =3D FTP STOU[1]\n\n&lt;snip&gt;\n&gt; It&#39;s nice if it all works w=\r\nith a multitude of protocols, but aren&#39;t we\n&gt; trying to take advantage of t=\r\nhe built-in capabilities of a particular\n&gt; protocol, in this case the most =\r\ncommonly used protocol on the Internet\n&gt; (HTTP) in our quest for scalabilit=\r\ny and ease of use? And &#39;in the real\n&gt; world&#39; (I&#39;m actually mostly thinking =\r\nabout public APIs, so admittedly\n&gt; it&#39;s more &#39;my real world&#39;), I would have=\r\n thought that non-HTTP is not\n&gt; much of a concern in this context. Not sayi=\r\nng YOU should only concern\n&gt; yourself with HTTP, clearly you&#39;ll have your r=\r\neasons why you need those\n&gt; other ones.\n&lt;/snip&gt;\nif &quot;we&quot; means you (Juergen)=\r\n and me (Mike) and you mean _all the time_,\nthen &quot;No.&quot;\n\nI have a number of =\r\ncustomers who prefer (some require) FTP for data\ntransfer. And not always f=\r\nirst-level representations (i.e. _file_\ntransfer), but also for representat=\r\nion transfers. I understand that\nthis is may not be common; some may find i=\r\nt objectionable, etc. as for\nXMPP, I;m not the dev on that item so can only=\r\n say that some requests\nwe handle are over XMPP streams[2] and it helps whe=\r\nn we can use the\nsame XML representation formats within the XMPP streams as=\r\n we do for\nXHTML, custom XML-based media types, etc.\n\nAgain, I don&#39;t claim =\r\nthis is &quot;the norm&quot; or should be. I&#39;m just saying\nthat it works for what I d=\r\no and that I think it has value since it\nsolves the problems before me.\n\n&lt;s=\r\nnip&gt;\n&gt; Nevertheless, if you take &#39;method&#39; out then you could just say that\n=\r\n&gt; &quot;rel=3Dself&quot; implies GET (or equivalent), while &quot;rel=3Dedit&quot; implies PUT =\r\n(or\n&gt; equivalent). If that&#39;s defined out of band in the media type definiti=\r\non\n&gt; then I guess you really don&#39;t need it here.\n&lt;/snip&gt;\nAgain, i rarely us=\r\ne @rel to signal protocol semantics (edit, update,\ndelete, etc.). Instead, =\r\nin my own designs i usually use _elements_\n(not attributes) for this purpos=\r\ne. And, as I&#39;ve mentioned earlier, I\ntend to use general terms that do not =\r\nleak protocol specifics:\n\n&lt;write href=3D&quot;...&quot; /&gt;\n&lt;search  href=3D&quot;...&quot; /&gt;\n&lt;=\r\nremove .href=3D&quot;...&quot; /&gt;\n\nIn the past I have used a variation that smells qu=\r\nite a bit like @rel\nto signal protocol semantics:\n&lt;send action=3D&quot;write|upd=\r\nate|remove|search|...&quot; href=3D&quot;...&quot; /&gt;\n\nIn both cases this representation m=\r\nodel allows for an _additional_\n@rel to indicate app-level semantics:\n&lt;writ=\r\ne href=3D&quot;...&quot; rel=3D&quot;customer&quot; /&gt;\n&lt;send action=3D&quot;update&quot; rel=3D&quot;order&quot; /&gt;=\r\n\nand so on...\n\nWhen I use XHTML for representations, I don&#39;t override any o=\r\nf the\nprotocol semantics of existing elements (A, LINK, IMG, FORM, IFRAME,\n=\r\netc.). I _do_ however add app-level semantics to these elements using\n@rel\n=\r\n&lt;form method=3D&quot;post&quot; action=3D&quot;...&quot; rel=3D&quot;customer&quot;&gt;\n\nFinally, I suspect =\r\ni&#39;ve hijacked the thread here. Feel free to start a\nnew thread if you want =\r\nto continue this or ping me offline.\n\nThanks.\n\n\n[1] http://www.faqs.org/rfc=\r\ns/rfc959.html (anyone have a better link?)\n[2] http://xmpp.org/rfcs/rfc3920=\r\n.html\n\nmca\nhttp://amundsen.com/blog/\nhttp://twitter.com@mamund\nhttp://mamun=\r\nd.com/foaf.rdf#me\n\n\n#RESTFest 2010\nhttp://rest-fest.googlecode.com\n\n\n\n\nOn M=\r\non, Jan 3, 2011 at 20:19, Juergen Brendel\n&lt;juergen.brendel@...&gt; wr=\r\note:\n&gt;\n&gt; Hello!\n&gt;\n&gt; On Mon, 2011-01-03 at 19:50 -0500, mike amundsen wrote:=\r\n\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; &gt; =A0 =A0 =A0 =A0&quot;links&quot; : [ {\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;,=\r\n\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;r=\r\nel&quot; =A0 =A0 =A0 =A0: &quot;self&quot;,\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0 =A0 : &quot;GET&quot;\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0},\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0{\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;,\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;rel&quot; =A0 =A0 =A0 =A0: &quot;edit&quot;,\n&gt;=\r\n&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0=\r\n =A0 : &quot;PUT&quot;,\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0&quot;media-type&quot; : &quot;application/something&quot;\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0}\n&gt;&gt; &gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0]\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt; This is an example of what I avoid. I do not enc=\r\node protocol details\n&gt;&gt; (method/media type) in my media types themselves or=\r\n in the\n&gt;&gt; representations made w/ these types. I know that HTML does this =\r\nw/\n&gt;&gt; FORM[1] elements (@method & @enc-type). There are times when I may do=\r\n\n&gt;&gt; this, but it is rarely needed for the work I am doing. One reason I\n&gt;&gt; =\r\nkeep protocol details out of the [representation|media types] is that\n&gt;&gt; I =\r\nfavor media types that are &quot;protocol-agnostic.&quot; IOW, it should be\n&gt;&gt; possib=\r\nle to use HTTP, FTP, XMPP, etc. with the same media type and\n&gt;&gt; accomplish =\r\nthe same tasks.\n&gt;\n&gt; Really? I mean, is that realistic for a lot of cases? I=\r\nf you really need\n&gt; to support multiple protocols then sure, you don&#39;t want=\r\n that sort of\n&gt; thing here and you want an agnostic type. But I&#39;m just tryi=\r\nng to\n&gt; remember what the equivalent of PUT vs. POST would be for FTP, or t=\r\nhe\n&gt; &#39;location&#39; HTTP response header, just as an example. Actually, it&#39;s no=\r\nt\n&gt; so much about &#39;PUT&#39; vs. &#39;POST&#39;, but about update-existing (or\n&gt; create-=\r\nat-location) vs.\n&gt; create-in-collection-and-let-server-determine-location.\n=\r\n&gt;\n&gt; It&#39;s nice if it all works with a multitude of protocols, but aren&#39;t we\n=\r\n&gt; trying to take advantage of the built-in capabilities of a particular\n&gt; p=\r\nrotocol, in this case the most commonly used protocol on the Internet\n&gt; (HT=\r\nTP) in our quest for scalability and ease of use? And &#39;in the real\n&gt; world&#39;=\r\n (I&#39;m actually mostly thinking about public APIs, so admittedly\n&gt; it&#39;s more=\r\n &#39;my real world&#39;), I would have thought that non-HTTP is not\n&gt; much of a co=\r\nncern in this context. Not saying YOU should only concern\n&gt; yourself with H=\r\nTTP, clearly you&#39;ll have your reasons why you need those\n&gt; other ones.\n&gt;\n&gt; =\r\nNevertheless, if you take &#39;method&#39; out then you could just say that\n&gt; &quot;rel=\r\n=3Dself&quot; implies GET (or equivalent), while &quot;rel=3Dedit&quot; implies PUT (or\n&gt; =\r\nequivalent). If that&#39;s defined out of band in the media type definition\n&gt; t=\r\nhen I guess you really don&#39;t need it here.\n&gt;\n&gt;\n&gt;&gt; As for the value of inclu=\r\nding a media-type string for a link within\n&gt;&gt; the representation (this has =\r\nbeen discussed here several times, I\n&gt;&gt; can&#39;t find any links right now), I =\r\nfind this practice needlessly\n&gt;&gt; &quot;locks&quot; the client into expecting the same=\r\n representation format for a\n&gt;&gt; link. I note that HTML currently has @type[=\r\n2] as a way to give clients\n&gt;&gt; a _hint_ on what media type might be at the =\r\nother end of the link.\n&gt;\n&gt; Not sure I understand. Are you talking about a G=\r\nET request having its\n&gt; media type apparently implied based on the indicate=\r\nd content type for a\n&gt; PUT request? If a client would see it that way, then=\r\n they have certainly\n&gt; taken it too far, since the type was specific only t=\r\no the &#39;edit&#39; link.\n&gt; The &#39;self&#39; link could possibly have its own media type=\r\n indication.\n&gt; Realistically, it would be a list of types in each case, bec=\r\nause of\n&gt; conneg.\n&gt;\n&gt;\n&gt;&gt; I&#39;ve never bought into the notion that app-specifi=\r\nc media types are\n&gt;&gt; bad. That is my opinion and nothing more. I can only s=\r\nay that, for the\n&gt;&gt; use cases I have encountered, [specific|custom] media t=\r\nypes work quite\n&gt;&gt; well and I have no immediate plans to stop [using|creati=\r\nng] them as I\n&gt;&gt; find the need.\n&gt;\n&gt; Yes, and I would agree with you. It jus=\r\nt seems that there are very\n&gt; strong opinions on both sides of this issue.\n=\r\n&gt;\n&gt;\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; &gt; I also think it&#39;s useful to design a very generic type (=\r\nsuch as XML with\n&gt;&gt; &gt; links or JSON with links) along with a decent set of =\r\ngenerally useful\n&gt;&gt; &gt; rel values. Once that&#39;s done, this might be enough fo=\r\nr some applications\n&gt;&gt; &gt; already, while other apps can define their custom =\r\nmedia types merely by\n&gt;&gt; &gt; defining additional &#39;rel&#39; values for that generi=\r\nc type, rather than a\n&gt;&gt; &gt; brand new type from scratch? Maybe that&#39;s what t=\r\nhis whole discussion\n&gt;&gt; &gt; about micro-types is about.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt; In my c=\r\nurrent work, I use XHTML (parsed as XML for some clients) to\n&gt;&gt; handle the =\r\nprotocol details (H Factors[3] =A0is what I call these) and\n&gt;&gt; @rel values =\r\nfor app-level details. I&#39;ve been experimenting w/ encoding\n&gt;&gt; the details o=\r\nf @rels in a secondary document (using the HTML\n&gt;&gt; @profile[3] pattern) and=\r\n engineering clients to &quot;consume&quot; these\n&gt;&gt; profile documents, parse them, a=\r\nnd &quot;apply&quot; the results to the generic\n&gt;&gt; media type. This is a mimic of &quot;CS=\r\nS&quot; but for app-level semantics. I&#39;ve\n&gt;&gt; built some trivial clients that are=\r\n capable of applying different\n&gt;&gt; app-level profiles to the same generic me=\r\ndia type and accomplishing\n&gt;&gt; the desired tasks.\n&gt;\n&gt; Similar to this one he=\r\nre?\n&gt;\n&gt; http://iansrobinson.com/2010/09/02/using-typed-links-to-forms/\n&gt;\n&gt;\n=\r\n&gt; I find this approach interesting as well.\n&gt;\n&gt;\n&gt; Juergen\n&gt;\n&gt;\n&gt;\n&gt; --\n&gt; Juer=\r\ngen Brendel\n&gt; MuleSoft\n&gt;\n&gt;\n\n"}}