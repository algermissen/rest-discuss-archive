{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":199324805,"authorName":"Guilherme Silveira","from":"Guilherme Silveira &lt;guilherme.silveira@...&gt;","profile":"guilherme_azevedo_silveira","replyTo":"SENDER","senderId":"FNhgsam7Da6BbqZojZiSlNbZUwwj83AO-Ia3eYGXeNLMohwZDTxRT-p46WpncQX6n0zC5SpEFdwg62BfNVGYCWzW5KEPfBJMEaKH8a0yd6obtFNztrRFsnQm53U","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Experience implementing custom media handlers","postDate":"1260878447","msgId":14151,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU4MWJmNjE2MDkxMjE1MDQwMGwxYWIyY2I1YXgxYjM2ZGJmZTZhYTgzYzlmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkxMjE1MDAzMDQyLmVkMTFjOGJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PEZDOTIzNjczLUVGQzktNDYyNC04MTY5LTA1MEFGNEJFRTcyNUBpbm5vcS5jb20+IAk8MjAwOTEyMTUwMDMwNDIuZWQxMWM4YmYuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":14149,"nextInTopic":14178,"prevInTime":14150,"nextInTime":14152,"topicId":14068,"numMessagesInTopic":20,"msgSnippet":"Hello Eric, Can you check if I understood correctly? By using well-known media-types (as xhtml and atom): - (positive) intermediate layers are able to","rawEmail":"Return-Path: &lt;guilherme.silveira@...&gt;\r\nX-Sender: guilherme.silveira@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50055 invoked from network); 15 Dec 2009 12:01:07 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m11.grp.re1.yahoo.com with QMQP; 15 Dec 2009 12:01:07 -0000\r\nX-Received: from unknown (HELO mail-yw0-f174.google.com) (209.85.211.174)\n  by mta1.grp.sp2.yahoo.com with SMTP; 15 Dec 2009 12:01:07 -0000\r\nX-Received: by ywh4 with SMTP id 4so3907775ywh.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 15 Dec 2009 04:01:07 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.150.37.40 with SMTP id k40mr9303664ybk.254.1260878467051; Tue, \n\t15 Dec 2009 04:01:07 -0800 (PST)\r\nIn-Reply-To: &lt;20091215003042.ed11c8bf.eric@...&gt;\r\nReferences: &lt;FC923673-EFC9-4624-8169-050AF4BEE725@...&gt; \n\t&lt;20091215003042.ed11c8bf.eric@...&gt;\r\nDate: Tue, 15 Dec 2009 10:00:47 -0200\r\nX-Google-Sender-Auth: 8c8bc3ea68b606c0\r\nMessage-ID: &lt;581bf6160912150400l1ab2cb5ax1b36dbfe6aa83c9f@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Guilherme Silveira &lt;guilherme.silveira@...&gt;\r\nSubject: Re: [rest-discuss] Experience implementing custom media handlers\r\nX-Yahoo-Group-Post: member; u=199324805; y=GYtY3FOeAhT4Dmp3hVIz2o4IxqicmuN5lbHlRjcj5U01amfOSPYKS7YRfM1HMyuxKm5TgcY\r\nX-Yahoo-Profile: guilherme_azevedo_silveira\r\n\r\nHello Eric,\n\nCan you check if I understood correctly? By using well-known\nm=\r\nedia-types (as xhtml and atom):\n\n- (positive) intermediate layers are able =\r\nto understand its\ninformation and act accordingly, although it does not kno=\r\nw the meaning\nof a, i.e., class=3D&quot;contract&quot; within a div\n- (positive) clas=\r\nses can represent what in other custom formats would\nbe an xml element\n- (p=\r\nositive) we can use schematron to validate it on the server and client side=\r\n\n- are intermediate layers schematron-aware? (might be negative?)\n- (positi=\r\nve) no custom media types - intermediate layers are able to\nunderstand ever=\r\nything which passes by\n- (neutral) the &quot;human readable&quot; way is &quot;humans usin=\r\ng browsers&quot;\n\nAll these positive items are related to the gain of visibility=\r\n, is\nthere something else that we benefit from?\nAny negative points that yo=\r\nu have seen so far by using\nxhtml/atom+xml/subset+xml?\n\nRegards\n\nGuilherme =\r\nSilveira\nCaelum | Ensino e Inova=E7=E3o\nhttp://www.caelum.com.br/\n\n\nOn Tue,=\r\n Dec 15, 2009 at 5:30 AM, Eric J. Bowman &lt;eric@...&gt; wrote:\n&gt;\n&gt;=\r\n\n&gt;\n&gt; Stefan Tilkov wrote:\n&gt; &gt;\n&gt; &gt; Slightly OT, but what are people experien=\r\nces in implementing custom\n&gt; &gt; client-side media type handlers? I mean regi=\r\nstering a helper\n&gt; &gt; application to handle, say, content of type\n&gt; &gt; applic=\r\nation/vnd.my-cool-stuff when a representation of this type is\n&gt; &gt; returned =\r\nin response to a browser request.\n&gt; &gt;\n&gt;\n&gt; The same as all my other experien=\r\nce developing to REST&#39;s Uniform\n&gt; Interface - I got used to not doing it th=\r\nat way. Instead of using\n&gt; RPC-via-POST to implement my own application met=\r\nhods, I stick with\n&gt; GET-HEAD-PUT-POST-PATCH-DELETE-OPTIONS as per:\n&gt;\n&gt; &quot;\n&gt;=\r\n REST enables intermediate processing by constraining messages to be\n&gt; self=\r\n-descriptive: interaction is stateless between requests, standard\n&gt; methods=\r\n and media types are used to indicate semantics and exchange\n&gt; information,=\r\n and responses explicitly indicate cacheability.\n&gt; &quot;\n&gt;\n&gt; http://www.ics.uci=\r\n.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_1\n&gt;\n&gt; The key =\r\nconcept being the use of _standard_ methods and media types.\n&gt; In a nutshel=\r\nl, my advice on creating a mime type for your REST system\n&gt; is, don&#39;t! Back=\r\n up, and figure out how to do it with existing standard\n&gt; methods and media=\r\n types -- this is the requirement for serendipitous\n&gt; re-use.\n&gt;\n&gt; When I fi=\r\nnd myself defining new media types or HTTP request methods to\n&gt; solve a pro=\r\nblem, I consider that I&#39;ve gone off the rails. If I insist\n&gt; to myself that=\r\n I am right, this does call for a new method and/or mime\n&gt; type, I go ahead=\r\n and do it. But, I include an asterisk stating that\n&gt; the system will only =\r\nbe RESTful pending standardization of the non-\n&gt; standard methods and/or mi=\r\nme types I&#39;ve used. Mostly, though, I&#39;ve\n&gt; found that I can achieve my purp=\r\nose without violating the &quot;self-\n&gt; descriptive messaging&quot; constraint.\n&gt;\n&gt; S=\r\no, consider using custom extensions to a well-known mime type like\n&gt; applic=\r\nation/atom+xml, or perhaps a subset like &#39;application/something\n&gt; +xml&#39;. Be=\r\ntter to use RELAX NG + Schematron to define an ontology that&#39;s\n&gt; compatible=\r\n with application/xml. Mostly, though, I like good ol&#39;\n&gt; XHTML, with @class=\r\n and @id a la microformats, plus RDFa these days.\n&gt; Sometimes wrapped in At=\r\nom, defined using RELAX NG + Schematron\n&gt; (starting with James Clark&#39;s RELA=\r\nX NG interpretation of XHTML\n&gt; modularization).\n&gt;\n&gt; (Instead of defining a =\r\ncustom table structure in XML with a cell of\n&gt; &lt;widget_price&gt;1.00&lt;/widget_p=\r\nrice&gt;, use XHTML tables and &lt;td\n&gt; class=3D&#39;widget_price&#39;&gt;1.00&lt;/td&gt;. Clients=\r\n that don&#39;t know that a widget\n&gt; costs a dollar can still render a human-re=\r\nadable table, while others\n&gt; may execute an XML PI to transform the whole t=\r\nhing to SVG for display.\n&gt; Or an agent could use something like GRDDL or RD=\r\nFa, to extract that\n&gt; knowledge (using rel=3D&#39;transformation&#39; and XSLT for =\r\nGRDDL).)\n&gt;\n&gt; My point is, so much can be done these days using standard med=\r\nia types,\n&gt; particularly HTML and XML types, that I fail to understand why =\r\nso many\n&gt; REST systems insist on using non-standard media types to solve pr=\r\noblems\n&gt; already addressed through the standardization process. +1 to Noah:=\r\n\n&gt;\n&gt; &gt;\n&gt; &gt; On 03.12.2009, at 21:51, Noah Campbell wrote:\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Wh=\r\ny not reuse an existing media-type?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; I fail to see how that wo=\r\nuld help me, as I&#39;m trying to invoke a\n&gt; &gt; particular proprietary handler.\n=\r\n&gt; &gt;\n&gt;\n&gt; If you absolutely can&#39;t represent your resources using standard med=\r\nia\n&gt; types, then you&#39;re looking at implementing REST&#39;s optional Code-on-\n&gt; =\r\nDemand constraint:\n&gt;\n&gt; &gt;\n&gt; &gt; On 03.12.2009, at 17:46, Mark Baker wrote:\n&gt; &gt;=\r\n\n&gt; &gt; &gt; Have you looked at JAF?\n&gt; &gt; &gt;\n&gt; &gt; &gt; http://java.sun.com/javase/techn=\r\nologies/desktop/javabeans/jaf/downloads/index.html\n&gt; &gt; &gt;\n&gt; &gt; &gt; I first used=\r\n it when it came out in &#39;98 IIRC, but haven&#39;t kept up\n&gt; &gt; &gt; with it.\n&gt; &gt; &gt;\n=\r\n&gt; &gt;\n&gt; &gt; Thanks, but AFAICT, that would only work within a Java environment,=\r\n\n&gt; &gt; i.e. I can register types within my Java program to be invoked once a\n=\r\n&gt; &gt; particular media type shows up.\n&gt; &gt;\n&gt;\n&gt; Exactly. Your use case requires=\r\n &quot;client functionality to be extended\n&gt; by downloading and executing code i=\r\nn the form of [an applet]&quot; designed\n&gt; to handle your non-standard media typ=\r\ne. If you&#39;re using Java, then any\n&gt; java-enabled browser can GET a represen=\r\ntation of the standard media type\n&gt; application/java, perhaps by following =\r\na link in an &lt;object&gt; tag in an\n&gt; HTML document. Now, your non-standard med=\r\nia type may be manipulated in\n&gt; a RESTful fashion, using CoD, at the cost o=\r\nf some visibility.\n&gt;\n&gt; -Eric\n&gt; \n\n"}}