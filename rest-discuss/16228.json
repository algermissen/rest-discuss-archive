{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"pOsQ8ZRn1fJP5M2cC3WzBP0b2EY1kRVbFPp-LKUZTgO4NTq1XP8cKhy1rfKwcRNDRMG8AeyF1fCxhT_if5NiEuJL5IAza7U","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Atom feed vs. list of orders","postDate":"1281221311","msgId":16228,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9aGtZaG1TNlZ5V1A4SFlQejlQMlAwZ0dUQkdyQ0poNkN0VG5TSkBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDMxN0Y5QTM0LTFCN0EtNEEwMS05MDY2LUY2OUE2QUI1ODg4Q0BtYWMuY29tPg==","referencesHeader":"PEUyQjIwMjIyLUU1MTEtNEFCOC1BMkNFLUEyMUM4MTVFOTI1NEBtYWMuY29tPgk8RjE5NjI2NDZEM0I2NDY0MkI3QzlBMDYwNjhFRTFFNjQwRTE0Mzg1N0BleDEwLmhvc3RlZGV4Y2hhbmdlLmxvY2FsPgk8RUE2MDczMkMtM0IwMC00NUQ0LThGRDgtMDJFQjFCMjE0NEY1QG1hYy5jb20+CTxGMTk2MjY0NkQzQjY0NjQyQjdDOUEwNjA2OEVFMUU2NDBFMTQzQjExQGV4MTAuaG9zdGVkZXhjaGFuZ2UubG9jYWw+CTxCRTNEODY1OS1CNzYyLTQ3NTktQkM4Qy0xM0I0REE5ODVDNUZAbWFjLmNvbT4JPEFBTkxrVGk9K0x6bk9DdFhma0xVek9CLWFCOEVPWkRyYXNiMzdtV0ItUFd2QkBtYWlsLmdtYWlsLmNvbT4JPDAxMzIzQkEzLTIwNzgtNEM3NS1BRTFCLThEMTg4NUU2NUIwOEBtYWMuY29tPgk8QUFOTGtUaW5OTzNqS3Y4Nj1xPWRtOGVtcVEweFJyaGtUOVBQbmNfN1NkXzgyQG1haWwuZ21haWwuY29tPgk8MzE3RjlBMzQtMUI3QS00QTAxLTkwNjYtRjY5QTZBQjU4ODhDQG1hYy5jb20+"},"prevInTopic":16227,"nextInTopic":16229,"prevInTime":16227,"nextInTime":16229,"topicId":16194,"numMessagesInTopic":86,"msgSnippet":" Maybe he wants to serve it as normal. plain Atom, too?  If you have an implementation that wants to server both plain atom and profiled atom","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 9325 invoked from network); 7 Aug 2010 22:48:34 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 7 Aug 2010 22:48:34 -0000\r\nX-Received: from unknown (HELO mail-fx0-f47.google.com) (209.85.161.47)\n  by mta2.grp.sp2.yahoo.com with SMTP; 7 Aug 2010 22:48:34 -0000\r\nX-Received: by fxm12 with SMTP id 12so5032605fxm.20\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 07 Aug 2010 15:48:33 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.103.198.14 with SMTP id a14mr1067710muq.14.1281221311706; Sat, \n\t07 Aug 2010 15:48:31 -0700 (PDT)\r\nX-Received: by 10.102.87.23 with HTTP; Sat, 7 Aug 2010 15:48:31 -0700 (PDT)\r\nIn-Reply-To: &lt;317F9A34-1B7A-4A01-9066-F69A6AB5888C@...&gt;\r\nReferences: &lt;E2B20222-E511-4AB8-A2CE-A21C815E9254@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143857@...&gt;\n\t&lt;EA60732C-3B00-45D4-8FD8-02EB1B2144F5@...&gt;\n\t&lt;F1962646D3B64642B7C9A06068EE1E640E143B11@...&gt;\n\t&lt;BE3D8659-B762-4759-BC8C-13B4DA985C5F@...&gt;\n\t&lt;AANLkTi=+LznOCtXfkLUzOB-aB8EOZDrasb37mWB-PWvB@...&gt;\n\t&lt;01323BA3-2078-4C75-AE1B-8D1885E65B08@...&gt;\n\t&lt;AANLkTinNO3jKv86=q=dm8emqQ0xRrhkT9PPnc_7Sd_82@...&gt;\n\t&lt;317F9A34-1B7A-4A01-9066-F69A6AB5888C@...&gt;\r\nDate: Sat, 7 Aug 2010 18:48:31 -0400\r\nX-Google-Sender-Auth: Zukf8qMz_gPvdW5y6wdy-M5Ssd8\r\nMessage-ID: &lt;AANLkTi=hkYhmS6VyWP8HYPz9P2P0gGTBGrCJh6CtTnSJ@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Robert Brewer &lt;fumanchu@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Atom feed vs. list of orders\r\nX-Yahoo-Group-Post: member; u=69164307; y=2iAwWpdc2MuCxA8-wkR4Bh89H5XYpw_JAXab4TvYIJLK\r\nX-Yahoo-Profile: mamund\r\n\r\n&lt;snip&gt;\nMaybe he wants to serve it as normal. plain Atom, too?\n&lt;/snip&gt;\nIf yo=\r\nu have an implementation that wants to server both &quot;plain&quot; atom\nand &quot;profil=\r\ned atom&quot; my suggestion will not work. To date, I&#39;ve not\nencountered this di=\r\nfficulty.\n\n&lt;snip&gt;\nWhy would the server develper bother what use the client =\r\nmakes of the\nrepresentation he provides?\n&lt;/snip&gt;\nI have no idea what that w=\r\nould happen and this, too, has not come up\nin my implementations. Clients a=\r\nre out of my control. If they want to\nignore the media-type instructions pr=\r\novided by the server developers,\nthat&#39;s no business of mine, etc. Again, th=\r\nis has not been the case in\nimplementations I&#39;ve worked with.\n\n&lt;snip&gt;\nThe k=\r\nind of agreement is IMHO exactly what REST tries to eliminate (or\nmake expl=\r\nicit as a media type) because it causes maintainence\nnightmares.\n&lt;/snip&gt;\nAs=\r\n I&#39;ve mentioned previously, the only difference in my compromise\nimplementa=\r\ntions is that additional semantics are documented on top of\nthe ones define=\r\nd by the generic type. Yes, it&#39;s a bummer that clients\nmust know an additio=\r\nnal set of semantic rules. Yes, it&#39;s unfortunate\nthat I am sometimes workin=\r\ng with clients and/or servers that constrain\nme from minting a new type. Th=\r\nese things happen and I do the best I\ncan.\n\n&lt;snip&gt;\n&gt; Uh, oh. The magic clie=\r\nnt?\n...\n&gt; You&#39;ll get an A++ from me when that thingy is out :-)\n&gt;\n&gt; [But se=\r\nriously: can you sketch a &#39;solution&#39;?]\n&lt;/snip&gt;\nMy only working examples rig=\r\nht now are implemented as client-side XSLT\ntransformations using common Web=\r\n browsers[1]. There are several\nproblems w/  example I point to here (short=\r\ncomings, missing\nimplementation details, limited to text-based, human-drive=\r\nn\nrenderings, etc.) so I&#39;ll not go into the unsavory details here.\n\nAn alte=\r\nrnate version I&#39;ve been working on uses FF XUL-based plug-ins\nthat treat th=\r\ne in-browser document based on a &quot;DSL&quot; model understood\nby the plug-in. It =\r\nis in even worse condition than my transform\nexample.\n\nFinally, I think Gui=\r\nlherme Silveira has made very good progress along\nthese lines w/ his RESTfu=\r\nlie client[2] and I encourage anyone\ninterested in this line of work to che=\r\nck out his blog and the\nRESTfulie source code.\n\n\n[1] http://www.amundsen.co=\r\nm/hypermedia/examples/doc.xml\n[2] http://blog.caelumobjects.com/2010/05/27/=\r\nminimize-coupling-with-rest-processes/\n\nmca\nhttp://amundsen.com/blog/\nhttp:=\r\n//mamund.com/foaf.rdf#me\n\n\n\n\nOn Sat, Aug 7, 2010 at 17:55, Jan Algermissen =\r\n&lt;algermissen1971@...&gt; wrote:\n&gt;\n&gt; On Aug 7, 2010, at 6:24 PM, mike amund=\r\nsen wrote:\n&gt;\n&gt;&gt; &lt;snip&gt;\n&gt;&gt; When the server developer implements for applicat=\r\nion/atom+xml;\n&gt;&gt; type=3Dfeed it simply has no idea what special assumptions=\r\n some client\n&gt;&gt; will make. As long as the service returns valid Atom it wil=\r\nl be a\n&gt;&gt; correct implementation. Any side-agreements between client and se=\r\nrver\n&gt;&gt; violate what REST tries to achieve.\n&gt;&gt; &lt;/snip&gt;\n&gt;&gt;\n&gt;&gt; I understand t=\r\nhat the case you describe here is _possible_ but I am\n&gt;&gt; not convinced it i=\r\ns _reasonable_. IOW, I do not accept that a\n&gt;&gt; server/developer MUST act in=\r\n the way you describe. I think a server\n&gt;&gt; developer can be more responsibl=\r\ne than what you characterize here and\n&gt;&gt; can provide additional media-type =\r\ninstruction to any client that\n&gt;&gt; wishes to participate. The server develop=\r\ner can provide details on an\n&gt;&gt; Atom Extension employed or additional infor=\r\nmation on how clients can\n&gt;&gt; recognize sub-types within a message (as I des=\r\ncribe in my previous\n&gt;&gt; message).\n&gt;\n&gt; Sure, but how would he know? Maybe he=\r\n wants to serve it as normal. plain Atom, too? Why would the server develpe=\r\nr bother what use the client makes of the representation he provides? The k=\r\nind of agreement is IMHO exactly what REST tries to eliminate (or make expl=\r\nicit as a media type) because it causes maintainence nightmares. Question: =\r\nis there any promise by Amazon about how the HTML of the site ooks like? No=\r\n. And for good reason. They do not want clients to start making assumptions=\r\n beyond text/html.\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt; Yes, I think my suggestion is =A0compromise fo=\r\nr cases where the\n&gt;&gt; well-known type lacks the proper semantics, but I asse=\r\nrt this\n&gt;&gt; compromise is reasonable and valid. The next reasonable alternat=\r\nive\n&gt;&gt; (in cases where this compromise is not acceptable) is to develop a\n&gt;=\r\n&gt; custom media-type and instruct the client developers to &quot;learn&quot; the\n&gt;&gt; de=\r\ntails of that custom media type and code that knowledge into the\n&gt;&gt; client =\r\nhead of time. I&#39;ve done both and find merit in both.\n&gt;\n&gt; See your point. Th=\r\ne &#39;server promisses some out of band stuff&#39; leads to coupling of clients to=\r\n *that* server though. Something REST aims to avoid.\n&gt;\n&gt; However, I guess t=\r\nhat media types will likely be derived from experience that started based o=\r\nn out of band promisses in the first place. So the approach is definitely r=\r\neasonable.\n&gt;\n&gt;&gt;\n&gt;&gt; SPECULATION:\n&gt;&gt; I think, long-term, there is another pos=\r\nsible solution; one that I\n&gt;&gt; have been working on in tiny private examples=\r\n lately. That solution is\n&gt;&gt; to create a way to make &quot;understanding a new m=\r\nedia type&quot; easier for\n&gt;&gt; state-machine clients.\n&gt;\n&gt; Uh, oh. The magic clien=\r\nt?\n&gt;\n&gt;&gt; IOW, a way that clients can &quot;learn&quot; the\n&gt;&gt; semantic rules of a new =\r\ntype by installing a media-type definition (in\n&gt;&gt; the same manner that user=\r\ns install &quot;plug-ins&quot; and &quot;add-ons&quot; in their\n&gt;&gt; common Web browsers today). =\r\nI have no serious examples to show for\n&gt;&gt; this right now, but am encouraged=\r\n that this is do-able and has good\n&gt;&gt; long-term values.\n&gt;\n&gt; You&#39;ll get an A=\r\n++ from me when that thingy is out :-)\n&gt;\n&gt; [But seriously: can you sketch a=\r\n &#39;solution&#39;?]\n&gt;\n&gt;\n&gt; Jan\n&gt;\n&gt;&gt;\n&gt;&gt; mca\n&gt;&gt; http://amundsen.com/blog/\n&gt;&gt; http://=\r\nmamund.com/foaf.rdf#me\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Sat, Aug 7, 2010 at 11:57, Jan Alg=\r\nermissen &lt;algermissen1971@...&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Aug 7, 2010, at 5:17 P=\r\nM, mike amundsen wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; &lt;snip&gt;\n&gt;&gt;&gt;&gt; While a usual feed reader (e.g=\r\n. Apple Mail) would be able to perform\n&gt;&gt;&gt;&gt; it&#39;s implemented goal based on =\r\nthat feed our\n&gt;&gt;&gt;&gt; compile-list-of-newly-ordered-items user agent would def=\r\ninitely not be\n&gt;&gt;&gt;&gt; able to do what it is implemented to do.\n&gt;&gt;&gt;&gt; &lt;/snip&gt;\n&gt;=\r\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; QUESTION:\n&gt;&gt;&gt;&gt; how do you &quot;know&quot; this to be true? IOW, what is it =\r\nabout the\n&gt;&gt;&gt;&gt; representation example you provided that leads you to believ=\r\ne your\n&gt;&gt;&gt;&gt; &quot;compile-list-of-newly-ordered-items user agent&quot; cannot &quot;do wha=\r\nt it is\n&gt;&gt;&gt;&gt; implemented to do&quot;?\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; ASSUMPTION:\n&gt;&gt;&gt;&gt; I think I hear =\r\nyou talking about the need for clients to know ahead of\n&gt;&gt;&gt;&gt; time whether t=\r\nhe representation returned is something they can\n&gt;&gt;&gt;&gt; process. If that&#39;s th=\r\ne case, that means there must be some information\n&gt;&gt;&gt;&gt; baked into the clien=\r\nt that is used to &quot;check&quot; the representation\n&gt;&gt;&gt;&gt; returned. The Accept head=\r\ner is one of these methods (&quot;I am a client\n&gt;&gt;&gt;&gt; that will only be able to u=\r\nnderstand the following representation\n&gt;&gt;&gt;&gt; formats&quot;).\n&gt;&gt;&gt;\n&gt;&gt;&gt; I think it i=\r\ns important to be explicit about what &quot;understand&quot; means.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I&#39;d rathe=\r\nr say that Accept means: &quot;I am a user agent that will only be able to sensi=\r\nbly perform it&#39;s implemented goal if the representation has one of these me=\r\ndia types&quot;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Note that it all depends on the implemented goal. If=\r\n that goal is to &quot;compile a list of newly ordered items from those orders t=\r\nhat I happen to be able to parse and report the number of unparsable orders=\r\n&quot; then that would work just fine with Accept: application/atom+xml;type=3Df=\r\need.\n&gt;&gt;&gt;\n&gt;&gt;&gt; However, we must then understand that the eventual application=\r\n state exposed to the user (the compiled list/report, maybe stuffed into so=\r\nme database) can only reflect what the user agent was able to make of the f=\r\need. IOW, the report might look like this:\n&gt;&gt;&gt;\n&gt;&gt;&gt; New Orders as of date fo=\r\no: 201\n&gt;&gt;&gt; Processable Orders: 11\n&gt;&gt;&gt; Summary of items in those 11: [some l=\r\nist of items here]\n&gt;&gt;&gt; Unprocessable orders 190 [Reference to temporary fil=\r\nesystem where they can be reviewed]\n&gt;&gt;&gt;\n&gt;&gt;&gt; (This might, BTW, just what we =\r\nwant)\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; You can turn all this around and say:\n&gt;&gt;&gt;\n&gt;&gt;&gt; When the se=\r\nrver developer implements for application/atom+xml; type=3Dfeed it simply h=\r\nas no idea what special assumptions some client will make. As long as the s=\r\nervice returns valid Atom it will be a correct implementation. Any side-agr=\r\neements between client and server violate what REST tries to achieve.\n&gt;&gt;&gt;\n&gt;=\r\n&gt;&gt;\n&gt;&gt;&gt; Jan\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I that what this is about?\n&gt;&gt;&gt;&gt;\n&gt;&gt;=\r\n&gt;&gt; mca\n&gt;&gt;&gt;&gt; http://amundsen.com/blog/\n&gt;&gt;&gt;&gt; http://mamund.com/foaf.rdf#me\n&gt;&gt;=\r\n&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On Sat, Aug 7, 2010 at 06:47, Jan Algermissen &lt;alger=\r\nmissen1971@...&gt; wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; On Aug 7, 2010, at 12:25 AM, Robert =\r\nBrewer wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Jan Algermissen wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; The questi=\r\non is whether Accept: text/html is indeed sufficient. Is it\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; true th=\r\nat the user agent can persue its implemented goal of compiling\n&gt;&gt;&gt;&gt;&gt;&gt; a\n&gt;&gt;&gt;=\r\n&gt;&gt;&gt;&gt; list of all newly ordered items from any HTML document?\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;=\r\n&gt; Suppose the server provides both, application/order and text/html as\n&gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt; representations of the list of new orders. When a user agent comes\n&gt;&gt;&gt;&gt;=\r\n&gt;&gt;&gt; along that says Accept: text/html the server can freely assume\n&gt;&gt;&gt;&gt;&gt;&gt; b=\r\nrowser-\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; like capabilities of the user agent (any HTML will do; even=\r\n an &lt;ul&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; with items referring to scanned PNGs of the orders). IOW, =\r\nthe owner of\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; the server is free to change the implementation for te=\r\nxt/html as long\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; as a) the resource semantics remain stable (list of=\r\n new orders) and\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; valid HTML is returned.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; How would =\r\nthe user agent implementation deal with HTML? Special\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; syntactic ass=\r\numptions are not allowed (because of Accept: text/html)\n&gt;&gt;&gt;&gt;&gt;&gt; or\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; w=\r\nould mean a hidden coupling. How would a user agent distinguish\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; bet=\r\nween an HTML it does not understand but that contains orders (e.g.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; =\r\nthe list of scanned order images) and an empty list of orders that is\n&gt;&gt;&gt;&gt;&gt;=\r\n&gt;&gt; augmented with some HTML it does not (and need not) understand?\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n=\r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; IMO that is impossible and hence Accept: text/html does not cut it.=\r\n\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; I think all that demonstrates is that HTML is too generic to=\r\n be useful\n&gt;&gt;&gt;&gt;&gt;&gt; for your particular task, not that all media types requir=\r\ne &quot;special\n&gt;&gt;&gt;&gt;&gt;&gt; syntactic assumptions&quot; (whether implicit or explicit). Th=\r\ne fact that you\n&gt;&gt;&gt;&gt;&gt;&gt; can make a &quot;list&quot; in HTML using any of a hundred typ=\r\nes of tags doesn&#39;t\n&gt;&gt;&gt;&gt;&gt;&gt; mean Atom, for example, also suffers from the sam=\r\ne inappropriateness to\n&gt;&gt;&gt;&gt;&gt;&gt; your task.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; I knew y=\r\nou were going to say that :-)\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Let&#39;s see:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The implem=\r\nentor of the server side chooses to expose the order list as HTML and Atom.=\r\n In the Atom case, she would write sth like this (in JAX-RS):\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; @=\r\nPath(&quot;/new-orders&quot;)\n&gt;&gt;&gt;&gt;&gt; class NewOrders {\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt;&gt;&gt; =A0@P=\r\nroduces(&quot;text/html&quot;)\n&gt;&gt;&gt;&gt;&gt; =A0public Response newOrdersAsHTML() {\n&gt;&gt;&gt;&gt;&gt; =A0=\r\n =A0 // ...\n&gt;&gt;&gt;&gt;&gt; =A0}\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0@GET\n&gt;&gt;&gt;&gt;&gt; =A0@Produces(&quot;application/=\r\natom+xml&quot;)\n&gt;&gt;&gt;&gt;&gt; =A0public Response newOrdersAsAtomFeed() {\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0=\r\n}\n&gt;&gt;&gt;&gt;&gt; }\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; When it comes to implementing (or changing) the=\r\n Atom-producing method, the server developer need not (must not) be concern=\r\ned with any client expectations. All that matters is to produce any valid A=\r\ntom feed[1].\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Given that, it would be a perfectly fine implement=\r\nation to produce an Atom feed such as this:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; &lt;feed&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;en=\r\ntry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0&lt;xhtml:div xmln=\r\ns:xhtml=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:h1&gt;Or=\r\nder 551-A-1272&lt;/xhtml:h1&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0=\r\n =A0 =A0&lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0=\r\n =A0 =A0&lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =\r\n=A0&lt;/xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Total: 600 EUR&lt;/xhtml:b&gt;\n&gt;&gt;&gt;&gt;&gt;=\r\n =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;/summary&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;content type=\r\n=3D&quot;image/png&quot; src=3D&quot;/scan-archive/orders/551-A-1272.png&quot;/&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;/ent=\r\nry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;entry&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;summary type=3D&quot;xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =\r\n=A0&lt;xhtml:div xmlns:xhtml=3D&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =\r\n=A0 =A0&lt;xhtml:h1&gt;Order 551-A-1273&lt;/xhtml:h1&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:ul=\r\n&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Device Foo, Item Price: ... &lt;/xhtml:li=\r\n&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0 =A0&lt;xhtml:li&gt;Screw Bar, Item Price: ... &lt;/xhtml:li&gt;=\r\n\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;/xhtml:ul&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0 =A0&lt;xhtml:b&gt;Total: 600 =\r\nEUR&lt;/xhtml:b&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0 =A0&lt;/xhtml:div&gt;\n&gt;&gt;&gt;&gt;&gt; =A0 =A0&lt;/summary&gt;\n&gt;&gt;&gt;&gt;&gt; =\r\n=A0 =A0&lt;content type=3D&quot;image/png&quot; src=3D&quot;/scan-archive/orders/551-A-1273.p=\r\nng&quot;/&gt;\n&gt;&gt;&gt;&gt;&gt; =A0&lt;/entry&gt;\n&gt;&gt;&gt;&gt;&gt; &lt;/feed&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; If you develop a us=\r\ner agent that says Accept: application/atom+xml;type=3Dfeed you must be pre=\r\npared to receive the above feed.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; While a usual feed reader (e.g=\r\n. Apple Mail) would be able to perform it&#39;s implemented goal based on that =\r\nfeed our compile-list-of-newly-ordered-items user agent would definitely no=\r\nt be able to do what it is implemented to do.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Two questions ari=\r\nse:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 1. How does the user agent detect that it cannot perform it=\r\ns task but (despite having a perfectly valid answer)\n&gt;&gt;&gt;&gt;&gt; 2. What to do ab=\r\nout that\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 1.:\n&gt;&gt;&gt;&gt;&gt; Given the feed above, how do we need t=\r\no implement the client to report to the user (e.g. someone that at some poi=\r\nnt looks in a log file or someone that uses the business intelligence appli=\r\ncation that uses the compiled reports about newly ordered items) that a cor=\r\nrect answer was received, that it did indeed contain orders but that the li=\r\nst could not be processed as intended?\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; First of all, the client=\r\n trusts the higher level assumption that the resource indeed provides the l=\r\nist of new orders. This is the same kind of trust that any browser has when=\r\n it follows an &lt;img src=3D&quot;&quot;/&gt; hypermedia control. The server told the user=\r\n agent something about the referenced resource and the client can reasonabl=\r\ny expect that to be true (otherwise we would deal with a broken server and =\r\nthat is not the issue here).\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Since the client expects the feed =\r\nto represent the list of new orders, it is IMHO reasonable to assume that a=\r\nny entry in that feed points to a new order. No entries would mean &#39;no new =\r\norders&#39;. This is IMHO not semantic tunneling through the Atom feed because =\r\nthe assumption is backed by the semantics of the resource as advertised by =\r\nthe server.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; The feed appearently contains two entries, hence th=\r\ne user agent can be programmed to understand that there are two new orders =\r\nto process. When it comes to processing the orders the user agent will have=\r\n to realize that neither the summary nor the referenced content is availabl=\r\ne in a format that is sufficient to extract the ordered items automatically=\r\n. Hence the user agent has to report an error eventually leading to some hu=\r\nman action to fix the situation:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; 2.:\n&gt;&gt;&gt;&gt;&gt; We reach question #2=\r\n once the fact that a problem exists for the user agent has reached a human=\r\n. What is he supposed to do? There are three options:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; a) call t=\r\nhe server developer and negotiate a certain format for the Atom feed\n&gt;&gt;&gt;&gt;&gt; =\r\nb) adjust the user agent implementation to handle the format received (e.g.=\r\n parse out the HTML from the summary or OCR the scanned orders)\n&gt;&gt;&gt;&gt;&gt; c) do=\r\n nothing except mark the compiled report as &#39;wrong&#39; or &#39;unusable&#39;. IWO, acc=\r\nept the fact that the user goal cannot be satisfied\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; a) Leads to=\r\n coupling (if it is at all possible/desireable to call the server implement=\r\nor)\n&gt;&gt;&gt;&gt;&gt; b) Does not improve the situation because the format can just cha=\r\nnge again tomorrow\n&gt;&gt;&gt;&gt;&gt; c) is the honest option but provides no business v=\r\nalue\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; In my opinion, the only thing to really improve the situat=\r\nion is to standardize a format that allows the server developer to actually=\r\n determine the user agent expectations (capabilities) from the Accept heade=\r\nr. If we had application/orderlist (or at least application/atom+xml;profil=\r\ne=3Dorderlist) the server developer would need to either add a new response=\r\n-producing method or send a 406.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Does that sufficiently illustr=\r\nate the point?\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Jan\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; [1] and of course be true =\r\nto be true to the server&#39;s own statement that the resource represents\n&gt;&gt;&gt;&gt;&gt;=\r\n =A0 =A0the new orders. It would be bad to serve a list of shipped orders, =\r\nfor example.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Robert Brewer\n&gt;&gt;&gt;&gt;&gt;=\r\n&gt; fumanchu@...\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; ----------------------------------=\r\n-\n&gt;&gt;&gt;&gt;&gt; =A0Jan Algermissen, Consultant\n&gt;&gt;&gt;&gt;&gt; =A0NORD Software Consulting\n&gt;&gt;=\r\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; =A0Mail: algermissen@...\n&gt;&gt;&gt;&gt;&gt; =A0Blog: http://www.nordsc.com=\r\n/blog/\n&gt;&gt;&gt;&gt;&gt; =A0Work: http://www.nordsc.com/\n&gt;&gt;&gt;&gt;&gt; ------------------------=\r\n-----------\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; ---------------------=\r\n---------------\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;=\r\n\n&gt;&gt;&gt; -----------------------------------\n&gt;&gt;&gt; =A0Jan Algermissen, Consultant=\r\n\n&gt;&gt;&gt; =A0NORD Software Consulting\n&gt;&gt;&gt;\n&gt;&gt;&gt; =A0Mail: algermissen@...\n&gt;&gt;&gt; =\r\n=A0Blog: http://www.nordsc.com/blog/\n&gt;&gt;&gt; =A0Work: http://www.nordsc.com/\n&gt;&gt;=\r\n&gt; -----------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ---------=\r\n---------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;\n&gt;=\r\n -----------------------------------\n&gt; =A0Jan Algermissen, Consultant\n&gt; =A0=\r\nNORD Software Consulting\n&gt;\n&gt; =A0Mail: algermissen@...\n&gt; =A0Blog: http:/=\r\n/www.nordsc.com/blog/\n&gt; =A0Work: http://www.nordsc.com/\n&gt; -----------------=\r\n------------------\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}