{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184610129,"authorName":"Walden Mathews","from":"&quot;Walden Mathews&quot; &lt;walden@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"ryBpoGuT9aoCQ9UbCpnWEdiV1ArhkC-sQJROmlmGzVXv1xkjGKSsRFoscfSlMS6uaGCTymVara5WwBlHXDuQYwPHD2dLSsGUTSByMhc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re-using information fields for queries in REST","postDate":"1086119209","msgId":4418,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwODUwMWM0NDgxMSQyZjE2ZTUxMCQ5NGQ0YThjMEBXQUxERU5OT1RFQk9PSz4=","referencesHeader":"PGM5aWVsbytoaGhpQGVHcm91cHMuY29tPg=="},"prevInTopic":4417,"nextInTopic":4419,"prevInTime":4417,"nextInTime":4419,"topicId":4417,"numMessagesInTopic":23,"msgSnippet":"... From: dorchard100  To:  Sent: Tuesday, June 01, 2004 1:33 PM Subject: [rest-discuss] Re-using","rawEmail":"Return-Path: &lt;walden@...&gt;\r\nX-Sender: walden@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 13159 invoked from network); 1 Jun 2004 19:46:58 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m25.grp.scd.yahoo.com with QMQP; 1 Jun 2004 19:46:58 -0000\r\nReceived: from unknown (HELO c001.snv.cp.net) (209.228.32.139)\n  by mta4.grp.scd.yahoo.com with SMTP; 1 Jun 2004 19:46:58 -0000\r\nReceived: (cpmta 17153 invoked from network); 1 Jun 2004 12:46:45 -0700\r\nReceived: from 204.60.129.197 (HELO WALDENNOTEBOOK)\n  by smtp.register-admin.com (209.228.32.139) with SMTP; 1 Jun 2004 12:46:45 -0700\r\nX-Sent: 1 Jun 2004 19:46:45 GMT\r\nMessage-ID: &lt;008501c44811$2f16e510$94d4a8c0@WALDENNOTEBOOK&gt;\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;,\n\t&quot;dorchard100&quot; &lt;orchard@...&gt;\r\nReferences: &lt;c9ielo+hhhi@...&gt;\r\nDate: Tue, 1 Jun 2004 15:46:49 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nX-eGroups-Remote-IP: 209.228.32.139\r\nFrom: &quot;Walden Mathews&quot; &lt;walden@...&gt;\r\nSubject: Re: [rest-discuss] Re-using information fields for queries in REST\r\nX-Yahoo-Group-Post: member; u=184610129\r\nX-Yahoo-Profile: waldenmathews\r\n\r\n\n----- Original Message ----- \nFrom: &quot;dorchard100&quot; &lt;orchard@...&gt;\nTo: &lt;rest-discuss@yahoogroups.com&gt;\nSent: Tuesday, June 01, 2004 1:33 PM\nSubject: [rest-discuss] Re-using information fields for queries in REST\n\n\n| Hey all,\n| \n| I was wondering about the best way to RESTfully model information \n| retrievals versus queries in REST.  Imagine an Artist structure with \n| name, genre, albums, rating, etc.  I want to both search for Artists \n| that approximate the name or albums, or exactly match a genre or \n| rating.  As well, I want to retrieve a given Artist&#39;s information.  \n| \n| The retrieval is easy, with something like GET /Artist?\n| name=thieverycorp retrieving the structure.\n\nThat looks more like a collection or subset to me.  A single\nartist resource might be more like /Artist/123.  An important\nquestion is: how does the client discover that URI?  The &quot;hyptertext\nengine&quot; constraint of REST really wants it to be discovered, not\nfabricated by client as a parameter list.\n\n  \n| \n| But then if want to do a search, I was thinking the best rest way of \n| modeling is to make a Query structure that contains all the Artist \n| queryable information, maybe it&#39;s even the same type, and then have \n| an ArtistList resource.  Then I could say that any of the ArtistQuery \n| fields can be put in the URI, ie\n| GET /ArtistList?name=thieverycorp or GET /ArtistList?albums=blue.\n\nI would have called it /Artists?prop=value,..., but that&#39;s just\nnaming preference.\n\n\n| \n| I can&#39;t see a way of using the same URI base for both retrievals and \n| queries without doing some funky parameters in the URI.  \n\nURI&#39;s are cheap, and so then are URI bases.  Why the need\nfor such economy?\n\nThere&#39;s a \n| variety of other techniques, like appending the requested return type \n| (GET /Artist?name=thieverycorp&type=ArtistList), the number of \n| results to return (GET /Artist?name=thieverycorp&rows=1), etc. but \n| they all seem a bit .... goofy.\n\nAll stemming from a false sense of URI conservation, right?\n\nIf your application really needs to hide the distinction between\na single resource and a collection of that resource &quot;type&quot;,\nthen you could try an Alloy trick: treat instances as singleton\nsets.\n\nThat would mean there are only queries, no retrievals (to use\nyour lingo), and when a query returns a single result, blow right\npast the list representation to the individual.  I don&#39;t know how\nRESTful or unRESTful that would be.  I suspect it&#39;s neither.\n\n| \n| Any help on the best way to model this would be appreciated.  I&#39;m \n| pretty sure this is almost an FAQ kind of question, so even a pointer \n| would be great.\n| \n| Thanks,\n| Dave Orchard\n\n\nWalden\n\n\n\n"}}