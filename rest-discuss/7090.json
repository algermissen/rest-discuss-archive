{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"JW57Hi7Ihv1ISABNAb7iJP4zhO36sIzhZtI_jmyMzYCxwjwh-RQp1yJO-a6ds96yASIA_tlwqR_TIe3VAaHZig0AnLfudYQlAQ","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] HTTP URI Methods Extension & REST?","postDate":"1164213021","msgId":7090,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNjQyMTMwMjEuMTE2ODQuODAuY2FtZWxAcGhvZW5peD4=","inReplyToHeader":"PGI3YTBhNGJhMDYxMTIwMDkzNG81MzU0NGE0OXgxNzQyOTliNjViZDM2NDE5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGI3YTBhNGJhMDYxMTIwMDkzNG81MzU0NGE0OXgxNzQyOTliNjViZDM2NDE5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":7054,"nextInTopic":0,"prevInTime":7089,"nextInTime":7091,"topicId":7049,"numMessagesInTopic":4,"msgSnippet":"... How is a foaf:Person.GET different from GET?  Why is foaf:Person.name.POST better than POST?   It seems like what you re really after is a forms language","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 49812 invoked from network); 22 Nov 2006 17:23:52 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m30.grp.scd.yahoo.com with QMQP; 22 Nov 2006 17:23:52 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.130.19)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Nov 2006 17:23:52 -0000\r\nReceived: (qmail 9090 invoked by uid 1000); 22 Nov 2006 11:30:21 -0500\r\nTo: Craig Overend &lt;craig.overend@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;b7a0a4ba0611200934o53544a49x174299b65bd36419@...&gt;\r\nReferences: &lt;b7a0a4ba0611200934o53544a49x174299b65bd36419@...&gt;\r\nContent-Type: multipart/signed; micalg=pgp-sha1; protocol=&quot;application/pgp-signature&quot;; boundary=&quot;=-jLabydibsE/mp2/1UJRE&quot;\r\nOrganization: Asynchronous.org\r\nDate: Wed, 22 Nov 2006 11:30:21 -0500\r\nMessage-Id: &lt;1164213021.11684.80.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.6.2 \r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nSubject: Re: [rest-discuss] HTTP URI Methods Extension & REST?\r\nX-Yahoo-Group-Post: member; u=93099516; y=sdHzLCpAO75I23V3Wew-CUul_kLvZIiMSP2PK-w9E8bIjuQ\r\nX-Yahoo-Profile: joshsled\r\n\r\n\r\n--=-jLabydibsE/mp2/1UJRE\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Tue, 2006-11-21 at 04:34 +1100, Craig Overend wrote:\n\n&gt; Allow: GET, POST=\r\n, OPTIONS, xmlns.com/foaf/0.1/Person.GET,\n&gt; xmlns.com/foaf/0.1/Person.name.=\r\nPOST\n\nHow is a foaf:Person.GET different from GET?  Why is\nfoaf:Person.name=\r\n.POST better than POST?   It seems like what you&#39;re\nreally after is a forms=\r\n language that lets the client understand which\n{GET,PUT,POST,DELETE} trans=\r\nitions are reasonable for a given\nresource ... which won&#39;t result in a 4xx,=\r\n what fields will (not) be\nmodified by a PUT, &c.\n\n\nThe actually new operat=\r\nions (e.g., SUBSCRIBE) are more tricky. The PEP\nstuff is interesting, by ba=\r\nsically making every new operation &quot;subclass&quot;\none of the set of uniform ope=\r\nrations ... I thought POST(p) was an escape\nhatch until seeing the &quot;PEP&quot; me=\r\nthod! ;)\n\nAt the same time, it strikes me that if you don&#39;t require interme=\r\ndiaries\nto understand the new semantics ({strength may}), then you&#39;re fine =\r\njust\nusing the original method, and if you *do* require them {strength must=\r\n},\nthen you really do have a different protocol; though PEP does make HTTP\n=\r\nextensible to those new protocols without *as much* re-tooling, you\nstill n=\r\need to upgrade servers, intermediaries and UAs ... no small task.\n\nI also f=\r\nind it interesting that WebDAV -- while used as the example\nthere -- is not=\r\n implemented using PEP, maybe for the same reason...  if\nyou have only a sm=\r\nall set of &quot;change&quot; (a revision of an existing method\nor a new method of li=\r\nmited utility) you can get away with using an\nexisting method.  At the poin=\r\nt you have a critical mass of new methods\nyou can just have a new protocol =\r\nand you have to write new libraries and\nserver components anyways (even if =\r\nthey integrate well with existing\nimplementations).\n\n-- \n...jsled\nhttp://as=\r\nynchronous.org/ - `a=3Djsled; b=3Dasynchronous.org; echo ${a}@${b}`\n\r\n--=-jLabydibsE/mp2/1UJRE\r\nContent-Type: application/pgp-signature; name=signature.asc\r\nContent-Description: This is a digitally signed message part\r\n\r\n[ Attachment content not displayed ]\r\n--=-jLabydibsE/mp2/1UJRE--\r\n\n"}}