{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210067383,"authorName":"Nick Gall","from":"Nick Gall &lt;nick.gall@...&gt;","profile":"nick_gall_1117","replyTo":"SENDER","senderId":"pOYmhAuFDxoZrJrxtbby_rH2ozpRLXEEpu96joQzgUTXrB0JmzFx2UPr1UjS_dt-XdA10ocTZPjtaIuQBrIR3_QwQX3yyQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] CherryPy and REST: REST vs RPC and CherryPy dispatch methods","postDate":"1344018942","msgId":18944,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBK3hoQVBYZmpYTW9OMGhVdXM3ZkZfQlBkVFJ3QkErUTVRdHBaeFpoaVpEeDMtdy04UUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PENBR0dCZF9wcVZ0K2l6RXUtb3o4U3M9UGpfQkw0WnpKS0tRb3dLTU5jVG8zME55NWtHUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBR0dCZF9wcVZ0K2l6RXUtb3o4U3M9UGpfQkw0WnpKS0tRb3dLTU5jVG8zME55NWtHUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18943,"nextInTopic":18945,"prevInTime":18943,"nextInTime":18945,"topicId":18940,"numMessagesInTopic":9,"msgSnippet":"I ve never heard that one style of dispatching is more RESTful than another. What most differentiates REST from RPC is the what as known as the hypermedia","rawEmail":"Return-Path: &lt;nick.gall@...&gt;\r\nX-Sender: nick.gall@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11603 invoked from network); 3 Aug 2012 18:36:04 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m4.grp.sp2.yahoo.com with QMQP; 3 Aug 2012 18:36:04 -0000\r\nX-Received: from unknown (HELO mail-lb0-f171.google.com) (209.85.217.171)\n  by mta3.grp.sp2.yahoo.com with SMTP; 3 Aug 2012 18:36:04 -0000\r\nX-Received: by lbol12 with SMTP id l12so1474079lbo.2\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 03 Aug 2012 11:36:02 -0700 (PDT)\r\nX-Received: by 10.152.144.138 with SMTP id sm10mr2416758lab.22.1344018962683;\n Fri, 03 Aug 2012 11:36:02 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.112.88.71 with HTTP; Fri, 3 Aug 2012 11:35:42 -0700 (PDT)\r\nIn-Reply-To: &lt;CAGGBd_pqVt+izEu-oz8Ss=Pj_BL4ZzJKKQowKMNcTo30Ny5kGQ@...&gt;\r\nReferences: &lt;CAGGBd_pqVt+izEu-oz8Ss=Pj_BL4ZzJKKQowKMNcTo30Ny5kGQ@...&gt;\r\nDate: Fri, 3 Aug 2012 14:35:42 -0400\r\nMessage-ID: &lt;CA+xhAPXfjXMoN0hUus7fF_BPdTRwBA+Q5QtpZxZhiZDx3-w-8Q@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=e89a8f22c6f5d7954d04c660ccb3\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nick Gall &lt;nick.gall@...&gt;\r\nSubject: Re: [rest-discuss] CherryPy and REST: REST vs RPC and CherryPy\n dispatch methods\r\nX-Yahoo-Group-Post: member; u=210067383; y=faeyVnaVCuQtfqjFR-_4wXPYYdJTSELVc6i6U4y1MNFPxFcrna55h_s\r\nX-Yahoo-Profile: nick_gall_1117\r\n\r\n\r\n--e89a8f22c6f5d7954d04c660ccb3\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nI&#39;ve never heard that one style of dispatching is more &quot;RESTful&quot; than\nanother. What most differentiates REST from RPC is the what as known as the\nhypermedia constraint. To be fully RESTful (according to the Richardson\nMaturity Model[1]), the response generated by the REST interface you are\nwriting must use a media type that contains &quot;hypermedia controls.&quot; With\neach interaction with a resource (via the interface you are writing), the\nclient selects among the hypermedia controls returned in each response to\nchoose the next interaction it can perform. HTML is only one of many\nhypermedia media types containing hypermedia controls.\n\nFor a good discussion of hypermedia types (and a list of the popular ones)\nsee [2]. For a good ranking of the degree of hypermedia-ness\n(ie measurement of the level of hypermedia support and sophistication of a\nmedia-type) of various hypermedia types see the hfactor.[3] For a good\nexample of a JSON-based hypermedia type, see HAL.[4]\n\n[1]  http://martinfowler.com/articles/richardsonMaturityModel.html\n[2]  http://amundsen.com/hypermedia/\n[3]  http://amundsen.com/hypermedia/hfactor/\n[4]  http://stateless.co/hal_specification.html\n\n-- Nick\n\nNick Gall\nPhone: +1.781.608.5871\nOther Contact Info: http://bit.ly/nickgall\n\n\nOn Thu, Aug 2, 2012 at 5:41 PM, Dan Stromberg &lt;drsalists@...&gt; wrote:\n\n&gt;\n&gt;\n&gt;\n&gt; I just sent this to a CherryPy mailing list (web framework), but I thought\n&gt; I should ask the same question here too.  Sorry if I&#39;m re-opening the scab\n&gt; on an old flame war!\n&gt;\n&gt; I&#39;ve been asked to set up a generic REST interface for a variety of data,\n&gt; probably using CherryPy.  We don&#39;t appear to have a lot of REST under our\n&gt; belts (I know I don&#39;t), and I&#39;ve heard there&#39;s a lot of misunderstanding of\n&gt; true REST around the internet (getting it conflated with the weaker goals\n&gt; of RPC), so naturally, I&#39;d like to see if we can get it (REST) right from\n&gt; the start.  Getting it right seems (so far) to boil down to keeping the\n&gt; verbs (and adjectives?) out of our URL&#39;s, and just letting\n&gt; GET/PUT/POST/DELETE be our verbs, sent to noun-nodes in our hierarchy.\n&gt;\n&gt; We&#39;re having a discussion about using CherryPy&#39;s MethodDispatcher (CRUD)\n&gt; and RoutesDispatcher (whatever you make of it) - and perhaps others, and\n&gt; which would be better to encourage true REST.  I caught wind of a meme\n&gt; suggesting MethodDispatcher is more RESTful (more &quot;directly&quot; REST) than\n&gt; other dispatchers.  Would it be a bad thing to use one and not the other,\n&gt; for the sake of REST?  And is REST purity worth bothering with?  Is it a\n&gt; goal that often can&#39;t be reached 100%, but is still worth striving toward?\n&gt;\n&gt; Here&#39;s a pair of CherryPy Links about how to use MethodDispatcher and\n&gt; RoutesDispatcher:\n&gt; http://tools.cherrypy.org/wiki/HTTPMethodFiltering\n&gt; http://tools.cherrypy.org/wiki/RoutesUrlMatching\n&gt;\n&gt; Thanks!\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\r\n--e89a8f22c6f5d7954d04c660ccb3\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nI&#39;ve never heard that one style of dispatching is more &quot;RESTful&qu=\r\not; than another. What most differentiates REST from RPC is the what as kno=\r\nwn as the hypermedia constraint. To be fully RESTful (according to the Rich=\r\nardson Maturity Model[1]), the response generated by the REST interface you=\r\n are writing must use a media type that contains &quot;hypermedia controls.=\r\n&quot; With each interaction with a resource (via the interface you are wri=\r\nting), the client selects among the hypermedia controls returned in each re=\r\nsponse to choose the next interaction it can perform. HTML is only one of m=\r\nany hypermedia media types containing hypermedia controls.&lt;div&gt;\n\n&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;For a good discussion of hypermedia types (and a list of the popular o=\r\nnes) see [2]. For a good ranking of the degree of hypermedia-ness (ie=A0mea=\r\nsurement of the level of hypermedia support and sophistication of a media-t=\r\nype) of various hypermedia types see the hfactor.[3] For a good example of =\r\na JSON-based hypermedia type, see HAL.[4]&lt;/div&gt;\n\n&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;=\r\ndiv&gt;[1]=A0\n&lt;a href=3D&quot;http://martinfowler.com/articles/richardsonMaturityMo=\r\ndel.html&quot;&gt;http://martinfowler.com/articles/richardsonMaturityModel.html&lt;/a&gt;=\r\n=A0&lt;/div&gt;&lt;div&gt;[2]=A0\n&lt;a href=3D&quot;http://amundsen.com/hypermedia/&quot;&gt;http://amu=\r\nndsen.com/hypermedia/&lt;/a&gt;=A0&lt;/div&gt;&lt;div&gt;[3]=A0\n&lt;a href=3D&quot;http://amundsen.co=\r\nm/hypermedia/hfactor/&quot;&gt;http://amundsen.com/hypermedia/hfactor/&lt;/a&gt;=A0&lt;/div&gt;=\r\n&lt;div&gt;[4]=A0\n&lt;a href=3D&quot;http://stateless.co/hal_specification.html&quot;&gt;http://s=\r\ntateless.co/hal_specification.html&lt;/a&gt;=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Nick&lt;=\r\n/div&gt;&lt;div&gt;&lt;br clear=3D&quot;all&quot;&gt;Nick Gall&lt;br&gt;Phone: +1.781.608.5871&lt;br&gt;Other Co=\r\nntact Info: &lt;a href=3D&quot;http://bit.ly/nickgall&quot; target=3D&quot;_blank&quot;&gt;http://bit=\r\n.ly/nickgall&lt;/a&gt;&lt;br&gt;\n\n\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Thu, Aug 2, 20=\r\n12 at 5:41 PM, Dan Stromberg &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:drsali=\r\nsts@...&quot; target=3D&quot;_blank&quot;&gt;drsalists@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;=\r\nbr&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left=\r\n:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n\n\n\n\n\n        \n\n\n\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;=\r\n\n\n\n\n\n&lt;br&gt;I just sent this to a CherryPy mailing list (web framework), but I=\r\n thought I should ask the same question here too.=A0 Sorry if I&#39;m re-op=\r\nening the scab on an old flame war!&lt;br&gt;&lt;br&gt;I&#39;ve been asked to set up a =\r\ngeneric REST interface for a variety of data, probably using CherryPy.=A0 W=\r\ne don&#39;t appear to have a lot of REST under our belts (I know I don&#39;=\r\nt), and I&#39;ve heard there&#39;s a lot of misunderstanding of true REST a=\r\nround the internet (getting it conflated with the weaker goals of RPC), so =\r\nnaturally, I&#39;d like to see if we can get it (REST) right from the start=\r\n.=A0 Getting it right seems (so far) to boil down to keeping the verbs (and=\r\n adjectives?) out of our URL&#39;s, and just letting GET/PUT/POST/DELETE be=\r\n our verbs, sent to noun-nodes in our hierarchy.&lt;br&gt;\n\n\n&lt;br&gt;We&#39;re having=\r\n a discussion about using CherryPy&#39;s MethodDispatcher (CRUD) and Routes=\r\nDispatcher (whatever you make of it) - and perhaps others, and which would =\r\nbe better to encourage true REST.=A0 I caught wind of a meme suggesting Met=\r\nhodDispatcher is more RESTful (more &quot;directly&quot; REST) than other d=\r\nispatchers.=A0 Would it be a bad thing to use one and not the other, for th=\r\ne sake of REST?=A0 And is REST purity worth bothering with?=A0 Is it a goal=\r\n that often can&#39;t be reached 100%, but is still worth striving toward?&lt;=\r\nbr&gt;\n\n\n&lt;br&gt;Here&#39;s a pair of CherryPy Links about how to use MethodDispat=\r\ncher and RoutesDispatcher:&lt;br&gt;&lt;div style=3D&quot;margin-left:40px&quot;&gt;&lt;a href=3D&quot;ht=\r\ntp://tools.cherrypy.org/wiki/HTTPMethodFiltering&quot; target=3D&quot;_blank&quot;&gt;http://=\r\ntools.cherrypy.org/wiki/HTTPMethodFiltering&lt;/a&gt;&lt;br&gt;\n\n\n&lt;a href=3D&quot;http://too=\r\nls.cherrypy.org/wiki/RoutesUrlMatching&quot; target=3D&quot;_blank&quot;&gt;http://tools.cher=\r\nrypy.org/wiki/RoutesUrlMatching&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;Thanks!&lt;br&gt;&lt;br&gt;&lt;br&gt;\n\n\n\n\n\n\n=\r\n&lt;br&gt;\n\n    \n    \n&lt;br&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color:white;clear:both&quot;&gt;=\r\n&lt;/div&gt;\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--e89a8f22c6f5d7954d04c660ccb3--\r\n\n"}}