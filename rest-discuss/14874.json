{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":336608580,"authorName":"DÃ¡rio Abdulrehman","from":"=?UTF-8?Q?D=C3=A1rio_Abdulrehman?= &lt;dario.rehman@...&gt;","profile":"drehman27","replyTo":"SENDER","senderId":"fEXEJlRa4hAgz7cS1MO4uX8cFOmjSVd-xkYqTVAy68HzC82nUIgrTLAf9lvUoCI0INl2hIbcwcKF564Bej2ZRSauyjdLod6o8c2rFKu8waseDh6AvmXrCDHTVAu3LPg3JGA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Questions on REST API design","postDate":"1266941349","msgId":14874,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYxMjBmNjY5MTAwMjIzMDgwOWoyNmFkOGU4ZXNhOGRhNTBhZmUwZDFhOGFjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMTAwMjIzMDMzNzM0LjQ5NmFiNTA4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDYxMjBmNjY5MTAwMjIyMDkxM3QzOGQ5YzlhZmc0OTI2Y2YzZmNmOWFkOTQwQG1haWwuZ21haWwuY29tPiAJPDIwMTAwMjIzMDMzNzM0LjQ5NmFiNTA4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":14872,"nextInTopic":14889,"prevInTime":14873,"nextInTime":14875,"topicId":14857,"numMessagesInTopic":15,"msgSnippet":"... I will provide details about the domain I m working on: I have a database with biological data: proteins, genes, regulations, etc., and the REST API I","rawEmail":"Return-Path: &lt;dario.rehman@...&gt;\r\nX-Sender: dario.rehman@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96128 invoked from network); 23 Feb 2010 16:09:34 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m1.grp.sp2.yahoo.com with QMQP; 23 Feb 2010 16:09:34 -0000\r\nX-Received: from unknown (HELO mail-fx0-f217.google.com) (209.85.220.217)\n  by mta2.grp.re1.yahoo.com with SMTP; 23 Feb 2010 16:09:34 -0000\r\nX-Received: by fxm9 with SMTP id 9so3700146fxm.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 23 Feb 2010 08:09:30 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.239.185.8 with SMTP id a8mr1986354hbh.11.1266941370188; Tue, \n\t23 Feb 2010 08:09:30 -0800 (PST)\r\nIn-Reply-To: &lt;20100223033734.496ab508.eric@...&gt;\r\nReferences: &lt;6120f6691002220913t38d9c9afg4926cf3fcf9ad940@...&gt; \n\t&lt;20100223033734.496ab508.eric@...&gt;\r\nDate: Tue, 23 Feb 2010 16:09:09 +0000\r\nMessage-ID: &lt;6120f6691002230809j26ad8e8esa8da50afe0d1a8ac@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001485f796225243e2048046c6ad\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?UTF-8?Q?D=C3=A1rio_Abdulrehman?= &lt;dario.rehman@...&gt;\r\nSubject: Re: [rest-discuss] Questions on REST API design\r\nX-Yahoo-Group-Post: member; u=336608580; y=uR8Lw59t_UUuF57FQHPzXqccIRX_7ceVxH6Wst61Z5gZEWF4\r\nX-Yahoo-Profile: drehman27\r\n\r\n\r\n--001485f796225243e2048046c6ad\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Tue, Feb 23, 2010 at 10:37 AM, Eric J. Bowman &lt;eric@...&gt;wro=\r\nte:\n\n&gt; D=C3=A1rio Abdulrehman wrote:\n&gt; &gt;\n&gt; &gt; Hi,\n&gt; &gt;\n&gt; &gt; I have the followi=\r\nng questions on the implementation of a REST API:\n&gt; &gt;\n&gt;\n&gt; Hi D=C3=A1rio.  P=\r\nlease don&#39;t take my hijacking your thread personally, this\n&gt; goes to a larg=\r\ner point I&#39;ve been trying to make of late, that the\n&gt; starting place is res=\r\nource modeling, not implementation (URI design).\n&gt; I&#39;m not criticizing you =\r\n(or anyone else) or singling you (or anyone\n&gt; else) out, just tilting at th=\r\ne windmill of changing how REST is taught.\n&gt;\n&gt; Today, I&#39;m trying to illustr=\r\nate my point by considering fragment vs.\n&gt; query string.\n&gt;\n&gt; &gt;\n&gt; &gt; 1.\n&gt; &gt; I=\r\n have a resource which can be used like:\n&gt; &gt;\n&gt; &gt;   (a) GET resource/{id}\n&gt; =\r\n&gt;\n&gt;\n&gt; Let&#39;s try to model that, first of all, by calling it a collection of\n=\r\n&gt; resources with unique IDs, &#39;/collection/{member}&#39; is widely understood.\n&gt;=\r\n But at this point I know of no reason it can&#39;t be /collection#member.\n&gt;\n\nI=\r\n will provide details about the domain I&#39;m working on:\nI have a database wi=\r\nth biological data: proteins, genes, regulations, etc.,\nand the REST API I =\r\nwould like to design gives access to those resources for\nquerying.\nSince th=\r\ne types of queries I want to provide are very restricted I don&#39;t\nthink it f=\r\nits the OpenSearch model suggested by Craig.\n\nSo, the example (a) I gave pr=\r\neviously could be instantiated for the case of\nproteins and genes.\nA protei=\r\nn/gene is identified by its name but it has other interesting data\nassociat=\r\ned (description, aminoacid sequence, etc.), so I would like to model\nit as =\r\na resource that responds to GET, returning a media type with that\ninformati=\r\non.\n\nGET /protein/{id}    =3D&gt;    Returns media type (JSON for example) wit=\r\nh\ndescription, aminoacid sequence, etc.\n\nMutatis mutandis for gene.\n\n\n&gt; &gt;\n&gt;=\r\n &gt; but it would be useful, to save round trips, to be able to invoke it\n&gt; &gt;=\r\n with several ids at once:\n&gt; &gt;\n&gt; &gt;   (b) GET resource?id=3D{id1}&id=3D{id2}=\r\n... or\n&gt; &gt;         GET resource/ids;id1;id2... or\n&gt; &gt;         GET resource/=\r\nid1/id2... (BTW is this URL template acceptable?\n&gt; &gt; The ids are not in a h=\r\nierarchy as the slashes may suggest, but I&#39;ve\n&gt; &gt; seen it used elsewhere).\n=\r\n&gt; &gt;\n&gt;\n&gt; This is where I get worried every time someone new posts exactly th=\r\nis\n&gt; sort of question here.  We all know how pervasive misconceptions of\n&gt; =\r\nREST are.  We shouldn&#39;t play along with questions regarding URI design\n&gt; wi=\r\nthout having any notion of what the resource is.\n&gt;\n&gt; I&#39;d love to go into re=\r\nsources/subresources and URI syntax, Xpointer,\n&gt; and other solutions to thi=\r\ns -- except I think this would push the thread\n&gt; starter further along in t=\r\nhe wrong direction.  I can&#39;t tell, because I\n&gt; don&#39;t understand his notion =\r\nof this resource.\n&gt;\n\n&gt; &gt;\n&gt; &gt; This falls in the realm of REST + batch operat=\r\nions...\n&gt; &gt;\n&gt;\n&gt; I don&#39;t have enough information about the nature of the res=\r\nource in\n&gt; question, to know if that&#39;s an accurate assessment.  As Jan poin=\r\nted\n&gt; out, saving round trips isn&#39;t a goal of REST API design.  A RESTful A=\r\nPI\n&gt; will be conducive to caching, the side effect of which is saving round=\r\n\n&gt; trips.\n&gt;\n&gt; Without some notion of the nature of the resource, it&#39;s impos=\r\nsible to\n&gt; proceed in a disciplined fashion.  Can the data be modeled as SV=\r\nG, and\n&gt; if so, can SVG&#39;s fragment syntax be utilized to extract subresourc=\r\nes\n&gt; for display?  If not, is this a &quot;lightbulb&quot; for developing a new media=\r\n\n&gt; type with its own fragment syntax?\n&gt;\n\n\nGiven the above description of th=\r\ne resources does it still make sense to\nprovide the batch version of the re=\r\nsource?\nI see the users wanting to GET information about a list of proteins=\r\n/genes\nand it would certainly be useful to do it batch style.\n\n\n\n&gt;\n&gt; &gt;\n&gt; &gt; =\r\nFrom what I&#39;ve read some people are of the opinion that (a) should be\n&gt; &gt; u=\r\nsed with HTTP pipelining for batch operations while others think\n&gt; &gt; that t=\r\nhe solution (b) is\n&gt; &gt; equally acceptable since this is a resource that hap=\r\npens to take\n&gt; &gt; multiple query/path/matrix parameters.\n&gt; &gt;\n&gt;\n&gt; The opinion=\r\ns of others is a bad place to learn REST.  Roy&#39;s thesis has\n&gt; some nuggets =\r\nof wisdom in it, though...\n&gt;\n&gt; &quot;\n&gt; A distributed hypermedia architect has o=\r\nnly three fundamental options:\n&gt; 1) render the data where it is located and=\r\n send a fixed-format image to\n&gt; the recipient; 2) encapsulate the data with=\r\n a rendering engine and send\n&gt; both to the recipient; or, 3) send the raw d=\r\nata to the recipient along\n&gt; with metadata that describes the data type, so=\r\n that the recipient can\n&gt; choose their own rendering engine.\n&gt; &quot;\n&gt;\n&gt; Since =\r\nwe have no notion of &quot;resource&quot; to ground us here, we lack the\n&gt; ability to=\r\n choose one of these options.  If SVG or some SVG-like\n&gt; fragment implement=\r\nation within a media type isn&#39;t the solution, then\n&gt; perhaps approximating =\r\nthe mobile object style by applying the optional\n&gt; Code on Demand constrain=\r\nt (2) is called for.  In which case, parameters\n&gt; may not show up in the UR=\r\nI at all, query or fragment (still REST).\n&gt;\n&gt; Resources must be conceptuall=\r\ny modeled before any decisions about\n&gt; system architecture may be effective=\r\nly made.  Craig&#39;s response was\n&gt; sound advice, but rests on an assumption t=\r\nhat the resource models out\n&gt; as something that can be represented as OpenS=\r\nearch.  But, the resource\n&gt; may not fit that model -- who&#39;s to say, from th=\r\ne information we&#39;ve been\n&gt; given?\n&gt;\n&gt; I would suggest that if the purpose i=\r\ns to submit some JSON code to a\n&gt; resource, then make that code a query str=\r\ning and GET the response\n&gt; (Craig&#39;s right, POST isn&#39;t correct), saving a ro=\r\nund-trip and enabling\n&gt; caching.  But I have no idea if this is appropriate=\r\n, vs. using some URI\n&gt; fragment syntax, since we haven&#39;t modeled the resour=\r\nce or considered\n&gt; any media types, or discussed architectural options like=\r\n CoD.\n&gt;\n&gt; I&#39;m up on my high horse on this, because I think when we REST sem=\r\npai\n&gt; start winging it by throwing URI patterns around, we only add to the\n=\r\n&gt; confusion of the REST kohai by reinforcing whatever misconceptions led\n&gt; =\r\nthem to design an API by starting with URI allocation scheme in the\n&gt; first=\r\n place.  Meaning no offense to anyone, I&#39;m guilty of same.\n&gt;\n&gt; &gt;\n&gt; &gt; 2.\n&gt; &gt;=\r\n I have another resource which is an algorithm that takes as input:\n&gt; &gt; - a=\r\n list of parameters [x1, x2, ...]\n&gt; &gt; - another list of parameters [y1, y2,=\r\n ...]\n&gt; &gt; - some other optional arguments\n&gt; &gt;\n&gt;\n&gt; Let&#39;s try to model that r=\r\nesource, first of all, by calling it a service\n&gt; endpoint.  Then we can get=\r\n down to the brass tacks of implementation.\n&gt;\n\n\nThis resource is an algorit=\r\nhm that takes as input lists of proteins, genes\nand some other parameters a=\r\nnd outputs the results.\n\n\n&gt;\n&gt; &gt;\n&gt; &gt; How can I make the resources 1. and 2. =\r\nabove RESTful?\n&gt; &gt;\n&gt;\n&gt; I have no idea.  Even if I did have a better idea of=\r\n the nature of\n&gt; these resources, REST is concerned with the interaction be=\r\ntween\n&gt; components in a system via Uniform Connector Interfaces.  Analyzing=\r\n one\n&gt; resource in isolation won&#39;t usually tell you anything about whether =\r\nthe\n&gt; system is RESTful or not, any more than looking at its URI can.\n&gt;\n&gt; I=\r\n can help you model your resources, determine their relations to one\n&gt; anot=\r\nher, and express that using hypertext link relations.  I can help\n&gt; with th=\r\ne selection and/or design of media types.  I can help develop an\n&gt; architec=\r\nture around those media types and link relations.  I can help\n&gt; design a hy=\r\npertext engine to drive application state.\n&gt;\n&gt; What I can&#39;t do, is wave my =\r\nmagic guru wand and come up with a URI\n&gt; allocation scheme describing what =\r\nmethods to use on what resources of\n&gt; interest, and call it a REST API.  I =\r\ncan only develop a REST API *after*\n&gt; I know the nature of the resources in=\r\nvolved, otherwise I&#39;d just be\n&gt; guessing.\n&gt;\n&gt; REST development is all about=\r\n tradeoffs.  Disciplined REST development\n&gt; is based on weighing the pros a=\r\nnd cons of architectural choices.\n&gt; Coming up with a RESTful solution witho=\r\nut considering choices and\n&gt; weighing tradeoffs is possible, but how is the=\r\n architect then to\n&gt; evaluate his or her creation against the goals for the=\r\n system?\n&gt;\n&gt; Starting with URI design locks the architect into a set of fun=\r\ndamental\n&gt; design constraints which may be inappropriate for the system.  T=\r\nhe\n&gt; choice between query string and URI fragment places a rigid dividing\n&gt;=\r\n line between client and server that&#39;s difficult, if not impossible, to\n&gt; c=\r\nhange further on down the road.\n&gt;\n\nGiven the nature of the resources I hope=\r\n it should now be easier to design a\nURI scheme.\n\nThanks.\n\n\n&gt;\n&gt; -Eric\n&gt;\n\r\n--001485f796225243e2048046c6ad\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Feb 23, 2010 at 10:37 AM, Eric J=\r\n. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...&quot;&gt;eri=\r\nc@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quot=\r\ne&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt =\r\n0.8ex; padding-left: 1ex;&quot;&gt;\n\n&lt;div class=3D&quot;im&quot;&gt;D=C3=A1rio Abdulrehman wrote=\r\n:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Hi,&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I have the following questions on=\r\n the implementation of a REST API:&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Hi D=C3=A1rio. =\r\n=C2=A0Please don&#39;t take my hijacking your thread personally, this&lt;br&gt;\ng=\r\noes to a larger point I&#39;ve been trying to make of late, that the&lt;br&gt;\nst=\r\narting place is resource modeling, not implementation (URI design).&lt;br&gt;\nI&#=\r\n39;m not criticizing you (or anyone else) or singling you (or anyone&lt;br&gt;\nel=\r\nse) out, just tilting at the windmill of changing how REST is taught.&lt;br&gt;\n&lt;=\r\nbr&gt;\nToday, I&#39;m trying to illustrate my point by considering fragment vs=\r\n.&lt;br&gt;\nquery string.&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 1.&lt;br&gt;\n&gt; I =\r\nhave a resource which can be used like:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; =C2=A0 (a) GET re=\r\nsource/{id}&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Let&#39;s try to model that, first of a=\r\nll, by calling it a collection of&lt;br&gt;\nresources with unique IDs, &#39;/coll=\r\nection/{member}&#39; is widely understood.&lt;br&gt;\nBut at this point I know of =\r\nno reason it can&#39;t be /collection#member.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I wi=\r\nll provide details about the domain I&#39;m working on:&lt;br&gt;I have a databas=\r\ne with biological data: proteins, genes, regulations, etc., and the REST AP=\r\nI I would like to design gives access to those resources for querying.&lt;br&gt;\n=\r\n\nSince the types of queries I want to provide are very restricted I don&#39=\r\n;t think it fits the OpenSearch model suggested by Craig.&lt;br&gt;&lt;br&gt;So, the ex=\r\nample (a) I gave previously could be instantiated for the case of proteins =\r\nand genes.&lt;br&gt;\n\nA protein/gene is identified by its name but it has other i=\r\nnteresting data associated (description, aminoacid sequence, etc.), so I wo=\r\nuld like to model it as a resource that responds to GET, returning a media =\r\ntype with that information.&lt;br&gt;\n\n&lt;br&gt;GET /protein/{id}=C2=A0=C2=A0=C2=A0 =\r\n=3D&gt;=C2=A0=C2=A0=C2=A0 Returns media type (JSON for example) with descri=\r\nption, aminoacid sequence, etc.&lt;br&gt;&lt;br&gt;Mutatis mutandis for gene.&lt;br&gt;&lt;br&gt;&lt;/=\r\ndiv&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(2=\r\n04, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n&lt;div class=\r\n=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; but it would be useful, to save round trips, to =\r\nbe able to invoke it&lt;br&gt;\n&gt; with several ids at once:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; =\r\n=C2=A0 (b) GET resource?id=3D{id1}&amp;id=3D{id2}... or&lt;br&gt;\n&gt; =C2=A0 =C2=\r\n=A0 =C2=A0 =C2=A0 GET resource/ids;id1;id2... or&lt;br&gt;\n&gt; =C2=A0 =C2=A0 =C2=\r\n=A0 =C2=A0 GET resource/id1/id2... (BTW is this URL template acceptable?&lt;br=\r\n&gt;\n&gt; The ids are not in a hierarchy as the slashes may suggest, but I&#39=\r\n;ve&lt;br&gt;\n&gt; seen it used elsewhere).&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;This is where=\r\n I get worried every time someone new posts exactly this&lt;br&gt;\nsort of questi=\r\non here. =C2=A0We all know how pervasive misconceptions of&lt;br&gt;\nREST are. =\r\n=C2=A0We shouldn&#39;t play along with questions regarding URI design&lt;br&gt;\nw=\r\nithout having any notion of what the resource is.&lt;br&gt;\n&lt;br&gt;\nI&#39;d love to =\r\ngo into resources/subresources and URI syntax, Xpointer,&lt;br&gt;\nand other solu=\r\ntions to this -- except I think this would push the thread&lt;br&gt;\nstarter furt=\r\nher along in the wrong direction. =C2=A0I can&#39;t tell, because I&lt;br&gt;\ndon=\r\n&#39;t understand his notion of this resource. &lt;br&gt;&lt;/blockquote&gt;&lt;blockquote=\r\n class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); =\r\nmargin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; This fal=\r\nls in the realm of REST + batch operations...&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\nI don&#39;t=\r\n have enough information about the nature of the resource in&lt;br&gt;\nquestion, =\r\nto know if that&#39;s an accurate assessment. =C2=A0As Jan pointed&lt;br&gt;\nout,=\r\n saving round trips isn&#39;t a goal of REST API design. =C2=A0A RESTful AP=\r\nI&lt;br&gt;\nwill be conducive to caching, the side effect of which is saving roun=\r\nd&lt;br&gt;\ntrips.&lt;br&gt;\n&lt;br&gt;\nWithout some notion of the nature of the resource, it=\r\n&#39;s impossible to&lt;br&gt;\nproceed in a disciplined fashion. =C2=A0Can the da=\r\nta be modeled as SVG, and&lt;br&gt;\nif so, can SVG&#39;s fragment syntax be utili=\r\nzed to extract subresources&lt;br&gt;\nfor display? =C2=A0If not, is this a &quot;=\r\nlightbulb&quot; for developing a new media&lt;br&gt;\ntype with its own fragment s=\r\nyntax?&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;\nGiven the above description of the res=\r\nources does it still make sense to provide the batch version of the resourc=\r\ne?&lt;br&gt;\nI see the users wanting to GET information about a list of proteins/=\r\ngenes and it would certainly be useful to do it batch style.&lt;br&gt;\n&lt;br&gt;=C2=A0=\r\n&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb=\r\n(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n&lt;div class=\r\n=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; From what I&#39;ve read some people are of the o=\r\npinion that (a) should be&lt;br&gt;\n&gt; used with HTTP pipelining for batch oper=\r\nations while others think&lt;br&gt;\n&gt; that the solution (b) is&lt;br&gt;\n&gt; equall=\r\ny acceptable since this is a resource that happens to take&lt;br&gt;\n&gt; multipl=\r\ne query/path/matrix parameters.&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;The opinions of oth=\r\ners is a bad place to learn REST. =C2=A0Roy&#39;s thesis has&lt;br&gt;\nsome nugge=\r\nts of wisdom in it, though...&lt;br&gt;\n&lt;br&gt;\n&quot;&lt;br&gt;\nA distributed hypermedia =\r\narchitect has only three fundamental options:&lt;br&gt;\n1) render the data where =\r\nit is located and send a fixed-format image to&lt;br&gt;\nthe recipient; 2) encaps=\r\nulate the data with a rendering engine and send&lt;br&gt;\nboth to the recipient; =\r\nor, 3) send the raw data to the recipient along&lt;br&gt;\nwith metadata that desc=\r\nribes the data type, so that the recipient can&lt;br&gt;\nchoose their own renderi=\r\nng engine.&lt;br&gt;\n&quot;&lt;br&gt;\n&lt;br&gt;\nSince we have no notion of &quot;resource&qu=\r\not; to ground us here, we lack the&lt;br&gt;\nability to choose one of these optio=\r\nns. =C2=A0If SVG or some SVG-like&lt;br&gt;\nfragment implementation within a medi=\r\na type isn&#39;t the solution, then&lt;br&gt;\nperhaps approximating the mobile ob=\r\nject style by applying the optional&lt;br&gt;\nCode on Demand constraint (2) is ca=\r\nlled for. =C2=A0In which case, parameters&lt;br&gt;\nmay not show up in the URI at=\r\n all, query or fragment (still REST).&lt;br&gt;\n&lt;br&gt;\nResources must be conceptual=\r\nly modeled before any decisions about&lt;br&gt;\nsystem architecture may be effect=\r\nively made. =C2=A0Craig&#39;s response was&lt;br&gt;\nsound advice, but rests on a=\r\nn assumption that the resource models out&lt;br&gt;\nas something that can be repr=\r\nesented as OpenSearch. =C2=A0But, the resource&lt;br&gt;\nmay not fit that model -=\r\n- who&#39;s to say, from the information we&#39;ve been&lt;br&gt;\ngiven?&lt;br&gt;\n&lt;br&gt;=\r\n\nI would suggest that if the purpose is to submit some JSON code to a&lt;br&gt;\nr=\r\nesource, then make that code a query string and GET the response&lt;br&gt;\n(Craig=\r\n&#39;s right, POST isn&#39;t correct), saving a round-trip and enabling&lt;br&gt;=\r\n\ncaching. =C2=A0But I have no idea if this is appropriate, vs. using some U=\r\nRI&lt;br&gt;\nfragment syntax, since we haven&#39;t modeled the resource or consid=\r\nered&lt;br&gt;\nany media types, or discussed architectural options like CoD.&lt;br&gt;\n=\r\n&lt;br&gt;\nI&#39;m up on my high horse on this, because I think when we REST semp=\r\nai&lt;br&gt;\nstart winging it by throwing URI patterns around, we only add to the=\r\n&lt;br&gt;\nconfusion of the REST kohai by reinforcing whatever misconceptions led=\r\n&lt;br&gt;\nthem to design an API by starting with URI allocation scheme in the&lt;br=\r\n&gt;\nfirst place. =C2=A0Meaning no offense to anyone, I&#39;m guilty of same.&lt;=\r\nbr&gt;\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; 2.&lt;br&gt;\n&gt; I have another resourc=\r\ne which is an algorithm that takes as input:&lt;br&gt;\n&gt; - a list of parameter=\r\ns [x1, x2, ...]&lt;br&gt;\n&gt; - another list of parameters [y1, y2, ...]&lt;br&gt;\n&gt=\r\n; - some other optional arguments&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;Let&#39;s try to =\r\nmodel that resource, first of all, by calling it a service&lt;br&gt;\nendpoint. =\r\n=C2=A0Then we can get down to the brass tacks of implementation.&lt;br&gt;&lt;/block=\r\nquote&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;This resource is an algorithm that takes as input lists =\r\nof proteins, genes and some other parameters and outputs the results.&lt;br&gt;\n\n=\r\n=C2=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px sol=\r\nid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n&lt;div=\r\n class=3D&quot;im&quot;&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; How can I make the resources 1. and 2. abo=\r\nve RESTful?&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;I have no idea. =C2=A0Even if I did hav=\r\ne a better idea of the nature of&lt;br&gt;\nthese resources, REST is concerned wit=\r\nh the interaction between&lt;br&gt;\ncomponents in a system via Uniform Connector =\r\nInterfaces. =C2=A0Analyzing one&lt;br&gt;\nresource in isolation won&#39;t usually=\r\n tell you anything about whether the&lt;br&gt;\nsystem is RESTful or not, any more=\r\n than looking at its URI can.&lt;br&gt;\n&lt;br&gt;\nI can help you model your resources,=\r\n determine their relations to one&lt;br&gt;\nanother, and express that using hyper=\r\ntext link relations. =C2=A0I can help&lt;br&gt;\nwith the selection and/or design =\r\nof media types. =C2=A0I can help develop an&lt;br&gt;\narchitecture around those m=\r\nedia types and link relations. =C2=A0I can help&lt;br&gt;\ndesign a hypertext engi=\r\nne to drive application state.&lt;br&gt;\n&lt;br&gt;\nWhat I can&#39;t do, is wave my mag=\r\nic guru wand and come up with a URI&lt;br&gt;\nallocation scheme describing what m=\r\nethods to use on what resources of&lt;br&gt;\ninterest, and call it a REST API. =\r\n=C2=A0I can only develop a REST API *after*&lt;br&gt;\nI know the nature of the re=\r\nsources involved, otherwise I&#39;d just be&lt;br&gt;\nguessing.&lt;br&gt;\n&lt;br&gt;\nREST dev=\r\nelopment is all about tradeoffs. =C2=A0Disciplined REST development&lt;br&gt;\nis =\r\nbased on weighing the pros and cons of architectural choices.&lt;br&gt;\nComing up=\r\n with a RESTful solution without considering choices and&lt;br&gt;\nweighing trade=\r\noffs is possible, but how is the architect then to&lt;br&gt;\nevaluate his or her =\r\ncreation against the goals for the system?&lt;br&gt;\n&lt;br&gt;\nStarting with URI desig=\r\nn locks the architect into a set of fundamental&lt;br&gt;\ndesign constraints whic=\r\nh may be inappropriate for the system. =C2=A0The&lt;br&gt;\nchoice between query s=\r\ntring and URI fragment places a rigid dividing&lt;br&gt;\nline between client and =\r\nserver that&#39;s difficult, if not impossible, to&lt;br&gt;\nchange further on do=\r\nwn the road.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Given the nature of the resources I h=\r\nope it should now be easier to design a URI scheme.&lt;br&gt;&lt;br&gt;Thanks.&lt;br&gt;=C2=\r\n=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid =\r\nrgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n&lt;font=\r\n color=3D&quot;#888888&quot;&gt;&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--001485f796225243e2048046c6ad--\r\n\n"}}