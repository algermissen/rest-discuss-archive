{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"gI5vBrKJvSjqirW_Q3ZYsEM--d2nDTbONHWXyMVY0v5-3KrINvp_rWc-ISm3Y8nny7jCdCD6A5isaMHgWxiwMgzaMFbSFnVFiw6xXodp","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] Media Type Version Negotiation","postDate":"1252677678","msgId":13231,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMDkwOTExMDcwMW0zMWE5NTI0Y3Q4MmIzYzdkMjlmNGI2MWNmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PEJMVTEwMi1EUzFGRTU4MjQ5M0MyRjFGNUE1M0ExREI1RTcwQHBoeC5nYmw+","referencesHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPgkgPDdFMjM0RTQ2LTU3QjQtNDEzMy1CRTQ4LTE2REQ0NTBFOTdEMkBtYWMuY29tPgkgPEJMVTEwMi1EUzFGRTU4MjQ5M0MyRjFGNUE1M0ExREI1RTcwQHBoeC5nYmw+"},"prevInTopic":13230,"nextInTopic":13232,"prevInTime":13230,"nextInTime":13232,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"... I think this is a nice ideal and should be the goal when designing APIs and formats.  However, it is unrealistic to assume there will never be a need for","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 84808 invoked from network); 11 Sep 2009 14:02:20 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.re1.yahoo.com with QMQP; 11 Sep 2009 14:02:20 -0000\r\nX-Received: from unknown (HELO mail-ew0-f213.google.com) (209.85.219.213)\n  by mta3.grp.re1.yahoo.com with SMTP; 11 Sep 2009 14:02:20 -0000\r\nX-Received: by ewy9 with SMTP id 9so280844ewy.25\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 11 Sep 2009 07:01:19 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.210.7.21 with SMTP id 21mr3185876ebg.75.1252677678731; Fri, 11 \n\tSep 2009 07:01:18 -0700 (PDT)\r\nIn-Reply-To: &lt;BLU102-DS1FE582493C2F1F5A53A1DB5E70@...&gt;\r\nReferences: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt;\n\t &lt;7E234E46-57B4-4133-BE48-16DD450E97D2@...&gt;\n\t &lt;BLU102-DS1FE582493C2F1F5A53A1DB5E70@...&gt;\r\nDate: Fri, 11 Sep 2009 08:01:18 -0600\r\nMessage-ID: &lt;28e257110909110701m31a9524ct82b3c7d29f4b61cf@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=304236879; y=zw9AWCWTouLB8jZvjadT51qDfSjr9YlbZhqh2ciR8Ipo-pAqS_iIdryqbg\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Fri, Sep 11, 2009 at 3:51 AM, Sebastien Lambla &lt;seb@...&gt; wrote:\n&gt; My custom solution is and has always been to provide for backward and foward\n&gt; compat by using extensible serialization, not rely on a version to consider\n&gt; a document valid, and decide on the server side what resulting information\n&gt; is enough to process the request or not.\n\nI think this is a nice ideal and should be the goal when designing\nAPIs and formats.  However, it is unrealistic to assume there will\nnever be a need for in compatible changes.  If you always maintain\nbackwards compatibility as the format/api develops the representations\nwill become, over time, so full of obsolete, deprecated and\nobsolescent sections that be cost of switching to a new clean format\nw/o all the cruft will be worth for ease of understanding alone.\n\n&gt; Oh, and type/subtype;param=value is *not* the same as type/subtype, under\n&gt; any circumstance. If rails does things differently, then rails can&#39;t process\n&gt; mediatypes by the spec, which is a bug you should go and fill with them.\n\nI think that whether `type/subtype;param=value` is the same as\n`type/subtype` depends a great deal on the application, the mime type\nand the parameter.  For applications written in a modern application\nframeworks they actually the same for all common media types.\nRegardless, dispatching on the type and subtype alone is the standard\npractice right now.  Whats more it works rather well in real world.\nBy far the most common parameter in the wild to day is `charset` which\nis something the framework can handled transparently w/o bothering my\napplication about it at all.\n\n--\nPeter Williams\nhttp://barelyenough.org\n\n"}}