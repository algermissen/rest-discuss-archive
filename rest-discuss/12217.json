{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Rn1R1NDQnD79GF8Og2pvmL2AmgWzrZMNn1FyUDpLsbr6hdeK_ApWj2rBXMfaSR9OYWpEda7AOI77-13o-5tGDa8882-x0cCE2Mulh6Wldw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful batch transactions a red herring.","postDate":"1237321800","msgId":12217,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzE3MTQzMDAwLmRkM2VjYTI3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDJmYTU1NDQ3MDkwMzEyMDUwMHU2YzAwMzVjZmc4YThkMTgxYWMyMmE3MjgyQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDIwMDkwMzEyMDUzNTUyLjMwM2M0YzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDJmYTU1NDQ3MDkwMzEyMDUwMHU2YzAwMzVjZmc4YThkMTgxYWMyMmE3MjgyQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":12214,"nextInTopic":12219,"prevInTime":12216,"nextInTime":12218,"topicId":12213,"numMessagesInTopic":15,"msgSnippet":"... I m aware of that.  But, I don t see how batching would be RESTful even if the method in question were FTP-derived instead of HTTP-derived.  In any uniform","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95217 invoked from network); 17 Mar 2009 20:29:44 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m2.grp.re1.yahoo.com with QMQP; 17 Mar 2009 20:29:44 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta3.grp.re1.yahoo.com with SMTP; 17 Mar 2009 20:29:43 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 46AB2D0BAD;\n\tTue, 17 Mar 2009 16:29:43 -0400 (EDT)\r\nDate: Tue, 17 Mar 2009 14:30:00 -0600\r\nTo: =?ISO-8859-1?Q?Ant=F3nio?= Mota &lt;amsmota@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090317143000.dd3eca27.eric@...&gt;\r\nIn-Reply-To: &lt;2fa554470903120500u6c0035cfg8a8d181ac22a7282@...&gt;\r\nReferences: &lt;20090312053552.303c4c19.eric@...&gt;\n\t&lt;2fa554470903120500u6c0035cfg8a8d181ac22a7282@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful batch transactions a red herring.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt;\n&gt; And however REST is independent of the protocol, and the constraint\n&gt; is &quot;a uniform interface&quot;, not a HTTP-like uniform interface.\n&gt; \n\nI&#39;m aware of that.  But, I don&#39;t see how batching would be RESTful even\nif the method in question were FTP-derived instead of HTTP-derived.  In\nany uniform interface, each operation is given its own method.  When a\nmethod is given more than one function, the uniform interface\nconstraint is broken -- like using POST to accept new data while also\nusing POST to tunnel batch deletion.\n\nWhen a method is defined which describes a batch operation, say BMOVE\nor BDELETE, the uniform interface constraint is broken just the same.\nIn terms of visibility, the nature of the request can&#39;t be determined\nat the protocol level.  In a uniform interface design, a client makes a\nrequest that an operation be performed on the URI _of_ that request.\n\nBatch requests are, by nature, RPC requests where the relevant URIs are\nincluded in message bodies instead of being request targets themselves.\nSending protocol-level instructions to the server in an entity body\n(BMOVE, BDELETE) instead of as part of the request smacks of RPC design.\n\nIn REST, a side effect of creating a resource may be the creation of\nanother resource, but since the client didn&#39;t request that other\nresource&#39;s creation, the client doesn&#39;t need to be notified of it.\nHowever, if the client is requesting a whole bunch of URIs to be\ndeleted by passing a list of URIs to some other URI, the server\nresponse is either &quot;total failure&quot; or &quot;read this document to see how\nthings went&quot; for the URI-by-URI breakdown.  The success or failure of\nthe individual operations is hidden in a document instead of being\nvisible at the protocol level as a status response.\n\nThis is a far cry from the uniform interface approach, where if a\nclient wants to delete multiple resources, it makes a DELETE request to\neach unique URI, and receives a succeed/fail response for each\noperation -- visibility instead of opacity.  I would argue that BDELETE\nis a stateful request.  The server must track multiple operations\nbefore responding to the client, and do this reliably in case of\ninterruption; both issues are cleanly avoided in a REST request, where\nthe contents of the request entity never contain protocol-level\ninstructions for the server to carry out.\n\n&gt; \n&gt; Now it can be arguable if Webdav is a RESTful protocol, but you can\n&gt; surely build a RESTfull app on top of it... So I think don&#39;t agree\n&gt; when you say &quot;but neither would any RESTful protocol.&quot; But I agree on\n&gt; the the HTTP side of it.\n&gt;\n\nAllow me to correct my phrasing:  I should have said &quot;API&quot; there\ninstead of &quot;protocol&quot; (for that matter, I said &quot;HTTP&quot; where I meant\n&quot;RFC 2616&quot;). I&#39;ve come to the conclusion that there&#39;s no such thing as a\nRESTful protocol -- there can only be RESTful APIs. A RESTful API may\nbe written using Atom Protocol, yet I&#39;ve also seen Atom implementations\nthat defy not only REST, but common sense as well.  ;-)\n\nThat a RESTful API may be written using WebDAV as its protocol, I have\nno doubt.  But, this is not to say that all methods described in HTTP\n(including those in WebDAV) conform to the uniform interface.  WebDAV\nis orthogonally useful for REST development, bearing in mind that its\nproblem space is not the &quot;common case of the Web&quot; but the specialized\ncase of remote filesystem manipulation.\n\nRESTful batch processing is still a red herring.  HTTP batch processing\nis not, it&#39;s just off-topic here.  :-)\n\n-Eric\n\n"}}