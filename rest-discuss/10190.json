{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"&quot;mike amundsen&quot; &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"bo7nch93oEbTFPmiF3nkRPD7NGpdkMiyi-CqnduXVvrOHQGcZZ3CcW-43yNSgIQT0CNP9aOPjhShK6q5w-CYiGowpRXtf8dPJA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Unable to deliver your message","postDate":"1199716385","msgId":10190,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDgwMTA3MDYzM3M3ZTkzMTc1YmczODk0NGExYmRhYjJjMWVAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PDYxMTA3Ljk5MDUyLnFtQHdlYjMxMDEyLm1haWwubXVkLnlhaG9vLmNvbT4=","referencesHeader":"PDYxMTA3Ljk5MDUyLnFtQHdlYjMxMDEyLm1haWwubXVkLnlhaG9vLmNvbT4="},"prevInTopic":10172,"nextInTopic":11336,"prevInTime":10189,"nextInTime":10191,"topicId":10163,"numMessagesInTopic":9,"msgSnippet":"John: Yep. ETags and catch stale/lost/double updates. But you also bring up a good point (I think I also covered in this thread) on dependent fields. In some","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26922 invoked from network); 7 Jan 2008 14:33:09 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m56.grp.scd.yahoo.com with QMQP; 7 Jan 2008 14:33:09 -0000\r\nX-Received: from unknown (HELO nf-out-0910.google.com) (64.233.182.188)\n  by mta17.grp.scd.yahoo.com with SMTP; 7 Jan 2008 14:33:09 -0000\r\nX-Received: by nf-out-0910.google.com with SMTP id f5so540890nfh.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 07 Jan 2008 06:33:05 -0800 (PST)\r\nX-Received: by 10.78.151.3 with SMTP id y3mr23067715hud.65.1199716385064;\n        Mon, 07 Jan 2008 06:33:05 -0800 (PST)\r\nX-Received: by 10.78.46.19 with HTTP; Mon, 7 Jan 2008 06:33:05 -0800 (PST)\r\nMessage-ID: &lt;b548df650801070633s7e93175bg38944a1bdab2c1e@...&gt;\r\nDate: Mon, 7 Jan 2008 09:33:05 -0500\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;61107.99052.qm@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;61107.99052.qm@...&gt;\r\nX-Google-Sender-Auth: 001dce16687ac751\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;mike amundsen&quot; &lt;mamund@...&gt;\r\nSubject: Re: Unable to deliver your message\r\nX-Yahoo-Group-Post: member; u=69164307; y=J6HJwKVtb5DpvtYX4hO0sVW2gpjhU7eL0UqJbPyFaGKb\r\nX-Yahoo-Profile: mamund\r\n\r\nJohn:\n\nYep. ETags and catch stale/lost/double updates. But you also bring up\na good point (I think I also covered in this thread) on dependent\nfields. In some cases, it will be important to define the update\nresource to include more than one element, even if the update involves\nchanging just one element. For example, to update the\nBillingContactPhone element, you might need to use the\nBillingContactAddress element and fill in several required elements.\nThis helps with resource integrity at another level.\n\nMikeA\n\nOn Jan 7, 2008 8:23 AM, John F Schlesinger &lt;jschlesinger@...&gt; wrote:\n&gt;\n&gt; Dear Mike,\n&gt; Yes, this is the lost update problem (we used to call it the double update\n&gt; problem).\n&gt;\n&gt; The update should include all the values on which it depends (usually the\n&gt; values that are changed, but could include others, even others from\n&gt; different resources). The precondition for the operation is that these\n&gt; values have not changed. It does not matter if the resources have a later\n&gt; timestamp so long as this precondition holds.\n&gt;\n&gt; This moves the precondition from being implicit to one given by the client\n&gt; (the &#39;before&#39; values).\n&gt;\n&gt; Of course, the server can also have its own preconditions, but these are\n&gt; there whatever the mechanism for preventing double updates.\n&gt;\n&gt; If you are putting the client&#39;s precondition in the ETags, then that does\n&gt; indeed solve the problem.\n&gt;\n&gt; John Schlesinger\n&gt;\n&gt;\n&gt;\n&gt; ----- Original Message ----\n&gt; From: mike amundsen &lt;mamund@...&gt;\n&gt; To: John Schlesinger &lt;jschlesinger@...&gt;\n&gt; Sent: Monday, January 7, 2008 12:55:31 PM\n&gt; Subject: Re: Unable to deliver your message\n&gt;\n&gt;  John:\n&gt;\n&gt; If i understand your post,this has to do with the &quot;lost update\n&gt; problem[1].&quot; I use ETags to handle that.\n&gt;\n&gt; [1] Detecting the Lost Update Problem Using Unreserved Checkout\n&gt; http://www.w3.org/1999/04/Editing/\n&gt;\n&gt; MikeA\n&gt;\n&gt; On Jan 7, 2008 7:15 AM, John Schlesinger &lt;jschlesinger@...&gt; wrote:\n&gt; &gt; --- In rest-discuss@yahoogroups.com, &quot;mike amundsen&quot; &lt;mamund@...&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; FWIW, I prefer to treat partial updates as if they are a different\n&gt; &gt; &gt; resource than the full update.  That means I use a different URL for\n&gt; &gt; &gt; partial updates. It keeps my server-side work clean, IMHO.\n&gt; &gt; &gt;\n&gt; &gt; &gt; PUT /resource/{id}\n&gt; &gt; &gt; &lt;resource&gt;\n&gt; &gt; &gt; &lt;foo&gt;1&lt;/foo&gt;\n&gt; &gt; &gt; &lt;bar&gt;1&lt;/bar&gt;\n&gt; &gt; &gt; &lt;/resource&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; PUT /resource/{id}/foo\n&gt; &gt; &gt; &lt;foo&gt;2&lt;/foo&gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; Would it not be safer to include the &#39;before&#39; and &#39;after&#39; values of\n&gt; &gt; this change? Typically, when handling changes from a large number of\n&gt; &gt; clients, it is safe to compare the &#39;before&#39; version of the values to\n&gt; &gt; be changed with the values currently stored. If they are different,\n&gt; &gt; the change should be rejected. If they are the same, the change can be\n&gt; &gt; applied.\n&gt; &gt;\n&gt; &gt; The thinking behind this approach is that a change may depend on the\n&gt; &gt; current values. If the client and the database disagree on the current\n&gt; &gt; state of the resource, then this state transition may not be valid.\n&gt; &gt;\n&gt; &gt; Of course, if the stored value in the database is the same as the\n&gt; &gt; &#39;after&#39; value, then rejecting the change makes no difference - it has\n&gt; &gt; the same effect as making the change (with some side effect\n&gt; &gt; differences, for example if the change date is stored in the database).\n&gt; &gt;\n&gt; &gt; John Schlesinger\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt;\n&gt; --\n&gt; mca\n&gt; &quot;In a time of universal deceit, telling the truth becomes a\n&gt; revolutionary act. &quot; (George Orwell)\n&gt;\n&gt;\n\n\n\n-- \nmca\n&quot;In a time of universal deceit, telling the truth becomes a\nrevolutionary act. &quot; (George Orwell)\n\n"}}