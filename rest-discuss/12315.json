{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":4981751,"authorName":"Mark Nottingham","from":"Mark Nottingham &lt;mnot@...&gt;","profile":"mnotting","replyTo":"SENDER","senderId":"U3HE-AYLRz90PJHKlfnIYezvZcKq71NuUVSsuttjzezc5xyajA93DP_p4HFpvnKcN0J7q2hHq5BrcU9GDGt3ZLRrFtNQbw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Homework on DELETE and Caching control and questions","postDate":"1237707880","msgId":12315,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDgxMUVBM0Y5LTg4MkUtNEMyMS1BRDNGLUY1NjVBMDlFM0M1RUBtbm90Lm5ldD4=","inReplyToHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPg==","referencesHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPg=="},"prevInTopic":12314,"nextInTopic":12316,"prevInTime":12314,"nextInTime":12316,"topicId":12307,"numMessagesInTopic":8,"msgSnippet":"I haven t been following the discussion, but if you want a single request to invalidate multiple cached entities, I ve been working on that as part of my day","rawEmail":"Return-Path: &lt;mnot@...&gt;\r\nX-Sender: mnot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 13167 invoked from network); 22 Mar 2009 07:44:42 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by 98.137.34.37 with QMQP; 22 Mar 2009 07:44:42 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta2.grp.re1.yahoo.com with SMTP; 22 Mar 2009 07:44:42 -0000\r\nX-Received: from [10.10.1.53] (unknown [67.111.52.130])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 9E9C323E3E2;\n\tSun, 22 Mar 2009 03:44:41 -0400 (EDT)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;811EA3F9-882E-4C21-AD3F-F565A09E3C5E@...&gt;\r\nTo: Dong Liu &lt;edongliu@...&gt;\r\nIn-Reply-To: &lt;gq3uni+cc9q@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v930.3)\r\nDate: Sun, 22 Mar 2009 00:44:40 -0700\r\nReferences: &lt;gq3uni+cc9q@...&gt;\r\nX-Mailer: Apple Mail (2.930.3)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Mark Nottingham &lt;mnot@...&gt;\r\nSubject: Re: [rest-discuss] Homework on DELETE and Caching control and questions\r\nX-Yahoo-Group-Post: member; u=4981751; y=iGAvkV1JcQ2vDD2Fm4AVWns71-fO04kfaIpXaxshUFGgODk\r\nX-Yahoo-Profile: mnotting\r\n\r\nI haven&#39;t been following the discussion, but if you want a single  \nrequest to invalidate multiple cached entities, I&#39;ve been working on  \nthat as part of my day job; it motivated the set of patches to Squid  \nwe funded a little while back (see commits to squid2-HEAD by Benno a  \nfew months back).\n\nIn a nutshell, we&#39;ve architected it so that a PUT, POST or DELETE  \n(i.e., anything that triggers an invalidation by side effect as per  \n2616) will not only invalidate the resources identified by the request- \nURI, Location, and Content-Location, but they will also invalidate:\n\n1) Resources pointed to by the PUT/POST/DELETE response with a Link  \nheader that has an &quot;invalidates&quot; relation; e.g.,\n   Link: &lt;/foo&gt;; rel=&quot;invalidates&quot;\nin a response to POST /bar will invalidate /foo.\n\n2) Cached responses that have a Link header with an &quot;invalidated-by&quot;  \nrelation that points to the URI that has been PUT/POST/DELETEd; e.g.,\n   Link: &lt;/baz&gt;; rel=&quot;invalidated-by&quot;\nin a cached response will make that cached response invalid when /baz  \nis POST/PUT/DELETEd to.\n\nThe second case is the more interesting, because you can have search  \nresults (for example) contain an identifier -- even one that doesn&#39;t  \nexist -- that will trigger many things becoming invalid when a single  \nresource becomes invalid.\n\nThere are a number of limitations and caveats here, of course --  \nchiefly that it&#39;s not a reliable mechanism in every case, and that  \ncaches that aren&#39;t aware of these extensions will of course not  \nimplement them. However, for some cases -- especially accelerator  \ncaches -- they can be useful for increasing cache efficiency without  \nsacrificing control of your resources.\n\nI hope to Open Source the helper process that implements all of this;  \nthe changes to Squid were merely getting it conformant with the RFC,  \nand putting in a few hooks to enable this to work.\n\nCheers,\n\n\nOn 21/03/2009, at 4:54 PM, Dong Liu wrote:\n\n&gt; Maybe it is a good idea to start the discuss in a new thread.\n&gt;\n&gt; I did some homework by reading RFC 2616.\n&gt;\n&gt; On page 56, section 9.7, it reads\n&gt; &quot;If the request passes through a cache and the Request-URI  \n&gt; identifies one or more currently cached entities, those entries  \n&gt; SHOULD be treated as stale.&quot;\n&gt;\n&gt; So how can the intermediary figure out the currently cached entities  \n&gt; identified by the Request-URI?\n&gt;\n&gt; On page 97, section 13.10, it reads\n&gt; &quot;The effect of certain methods performed on a resource at the origin  \n&gt; server might cause one or more existing cache entries to become non-  \n&gt; transparently invalid. That is, although they might continue to be  \n&gt; &quot;fresh,&quot; they do not accurately reflect what the origin server would  \n&gt; return for a new request on that resource.&quot;\n&gt;\n&gt; I think this means it is common for an update or delete request  \n&gt; yields &quot;non-transparently&quot; invalidation of one or more existing  \n&gt; cache entries.\n&gt;\n&gt; Further one page 98\n&gt; &quot;There is no way for the HTTP protocol to guarantee that all such  \n&gt; cache entries are marked invalid.&quot;\n&gt;\n&gt; and\n&gt;\n&gt; &quot;Some HTTP methods MUST cause a cache to invalidate an entity. This  \n&gt; is either the entity referred to by the Request-URI, or by the  \n&gt; Location or Content-Location headers (if present).&quot;\n&gt;\n&gt; Can we put many Content-Location headers in a DELETE request?\n&gt;\n&gt; &quot;In order to prevent denial of service attacks, an invalidation  \n&gt; based on the URI in a Location or Content-Location header MUST only  \n&gt; be performed if the host part is the same as in the Request-URI. &quot;\n&gt;\n&gt; Then how about invalidating the caches after a &quot;batch DELETE&quot; as  \n&gt; this &quot;off-the-wall&quot; approach? http://tech.groups.yahoo.com/group/rest-discuss/message/12280\n&gt;\n&gt; Suppose we have a URI that identifies a collection of resources\n&gt;\n&gt; 1. the client sends DELETE URI to the server. The client knows what  \n&gt; the URI refers to.\n&gt;\n&gt; 2. the server reply with a 200 or 202 with a representation that  \n&gt; will send several DELETE&#39;s to the server each of which is for a  \n&gt; member in the collection.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n--\nMark Nottingham     http://www.mnot.net/\n\n\n"}}