{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"W9BVlj7WQLrz27kKbqDn6vtji43kCBcatKhfvd7vRyXC7ZoGvHk02RaKajxAUk6gIAOH1xMkYYCtP0J0o-SLHZMDOoR0VS0AHl4wPI6GoA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST and self-descriptiveness","postDate":"1285389028","msgId":16667,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTI0MjIzMDI4LjQyNWIwMzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRDOUQ3MTgzLjEwMDA3MDJAc2l0ZXBlbi5jb20+","referencesHeader":"PEFBTkxrVGlucERBMHE4MTFHNmU2QU5NaEVIMEJ4RGVqbmNYVFI5a21TOCthaEBtYWlsLmdtYWlsLmNvbT4JPDRDOUIyMzM3LjIwODA1MDdAd2VicjMub3JnPgk8QUFOTGtUaW1CclZ6Sj1yMDlLektYMHk5N3JlVVhfNWl5XzBNelJmc2NXcEFoQG1haWwuZ21haWwuY29tPgk8NEM5QjMyMjYuOTA5MDMwMEB3ZWJyMy5vcmc+CTxBQU5Ma1RpbmVybWVrRGJTazFFSHVLaXY2K21GNkQ2RkRIMjJWdlIzdC1nbWlAbWFpbC5nbWFpbC5jb20+CTwyMDEwMDkyMzA1MjkxOC44OTMxMmFkYS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QzlCNDRBMy41MDUwMDA1QHdlYnIzLm9yZz4JPDIwMTAwOTIzMTYyMjAzLjc5MjgzNjMwLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDRDOUJEQjEyLjEwMjAwMDFAc2l0ZXBlbi5jb20+CTwyMDEwMDkyMzIzMDM1Ni5lNzFlZjg0NC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QzlDQzA0MS43MDgwMjA5QHNpdGVwZW4uY29tPgk8MjAxMDA5MjQyMDM3MDYuMjc0MDY2NTEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8NEM5RDcxODMuMTAwMDcwMkBzaXRlcGVuLmNvbT4="},"prevInTopic":16666,"nextInTopic":16668,"prevInTime":16666,"nextInTime":16668,"topicId":16634,"numMessagesInTopic":49,"msgSnippet":"... I doubt it.  Out of all the re-use of +json in the wild, only two applications have been made, so this problem isn t understood.  I would think that anyone","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 72681 invoked from network); 25 Sep 2010 04:30:31 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m14.grp.re1.yahoo.com with QMQP; 25 Sep 2010 04:30:31 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 25 Sep 2010 04:30:31 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id B3497509DC;\n\tSat, 25 Sep 2010 00:30:30 -0400 (EDT)\r\nDate: Fri, 24 Sep 2010 22:30:28 -0600\r\nTo: Kris Zyp &lt;kris@...&gt;\r\nCc: REST Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100924223028.425b0319.eric@...&gt;\r\nIn-Reply-To: &lt;4C9D7183.1000702@...&gt;\r\nReferences: &lt;AANLkTinpDA0q811G6e6ANMhEH0BxDejncXTR9kmS8+ah@...&gt;\n\t&lt;4C9B2337.2080507@...&gt;\n\t&lt;AANLkTimBrVzJ=r09KzKX0y97reUX_5iy_0MzRfscWpAh@...&gt;\n\t&lt;4C9B3226.9090300@...&gt;\n\t&lt;AANLkTinermekDbSk1EHuKiv6+mF6D6FDH22VvR3t-gmi@...&gt;\n\t&lt;20100923052918.89312ada.eric@...&gt;\n\t&lt;4C9B44A3.5050005@...&gt;\n\t&lt;20100923162203.79283630.eric@...&gt;\n\t&lt;4C9BDB12.1020001@...&gt;\n\t&lt;20100923230356.e71ef844.eric@...&gt;\n\t&lt;4C9CC041.7080209@...&gt;\n\t&lt;20100924203706.27406651.eric@...&gt;\n\t&lt;4C9D7183.1000702@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST and self-descriptiveness\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nKris Zyp wrote:\n&gt; \n&gt; - From that thread, it sounded like everyone was in favor of making\n&gt; the updates. I wonder if that is being done by someone...\n&gt; \n\nI doubt it.  Out of all the re-use of +json in the wild, only two\napplications have been made, so this problem isn&#39;t understood.  I would\nthink that anyone who does get the ball rolling, would face little to\nno resistance, by virtue of the overwhelming success of RFC 3023 (aside\nfrom the fragment mess), to the point that everyone just assumes +json\nis &quot;just like +xml&quot; even though it&#39;s both undefined and discouraged.\n\nMy take on what Ned was saying, is that you&#39;d be better off changing\nthe proposed identifier to something else, i.e. application/jsonschema,\nwhich he&#39;d have to approve despite his preference to tell you that you\nSHOULD change that to application/schema+json -- applied to your case.\nUnfortunately he can&#39;t do that, so unfortunately he can&#39;t endorse\nCullen&#39;s and Bjoern&#39;s (and my) point about changing RFC 4627 first.  But\nI&#39;m no expert, only a long-time keenly-interested observer.\n\n(Ned seems to imply that there exist registered JSON types which don&#39;t\nuse the +json suffix, not that there&#39;s any way to search for them --\npromoting re-use of same seems like another strong argument in favor of\nformalizing this usage of +suffix.)\n\nThis sort of problem is to be expected in any architecture with a\ncentral registry at Internet scale -- is the whole thing agile enough\nto keep up with the pace of change?  It seems obvious to me that it&#39;s\nhigh time to formalize the well-understood meaning of +suffix around\nwhat the registry is allowing *anyway* and formalize the well-\nunderstood meaning of +json around what everyone is already doing.\n\nThat way we&#39;d see lots more registration of +json identifiers already\nbeing used in the wild (and in violation of both RFC 2048 and RFC 4288,\nlet alone the self-descriptive messaging constraint).\n\n-Eric\n\n"}}