{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10266038,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"JzhI5QbEsdH8Vz3U4-EOfDyOt_DOWV44IuDzYhGbAa5v_9udUUPzaIkP-C7BZdMzGt2pGctrQCVHTOxSNvBELEU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Indicating Notifications in HTTP","postDate":"1011724628","msgId":136,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNERCMTUxLjJBQTFEMUExQGp1bXAubmV0Pg==","referencesHeader":"PDIwMDIwMTIyMDUzNC5BQUEyNjg4MEBtYXJrYmFrZXIuY2E+IDwzQzRDRkVDOS5CNjFBNTFCQkBqdW1wLm5ldD4gPDNDNEQwNkE2LjdFQTA2QzZAanVtcC5uZXQ+IDwzQzREQTVEQS40NUFFMDgzREBwcmVzY29kLm5ldD4="},"prevInTopic":133,"nextInTopic":140,"prevInTime":135,"nextInTime":137,"topicId":109,"numMessagesInTopic":50,"msgSnippet":"... I m not *entirely* antagonistic to this kind of a both / and approach, assuming that we can guarantee that the semantics of the two mechanisms are","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 22 Jan 2002 18:39:00 -0000\r\nReceived: (qmail 2662 invoked from network); 22 Jan 2002 18:39:00 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m12.grp.snv.yahoo.com with QMQP; 22 Jan 2002 18:39:00 -0000\r\nReceived: from unknown (HELO sm10.texas.rr.com) (24.93.35.222)\n  by mta3.grp.snv.yahoo.com with SMTP; 22 Jan 2002 18:38:59 -0000\r\nReceived: from jump.net (bu24242137-238.austin.rr.com [24.242.137.238])\n\tby sm10.texas.rr.com (8.12.0.Beta16/8.12.0.Beta16) with ESMTP id g0MIcuHD019547;\n\tTue, 22 Jan 2002 12:38:57 -0600\r\nMessage-ID: &lt;3C4DB151.2AA1D1A1@...&gt;\r\nDate: Tue, 22 Jan 2002 12:37:08 -0600\r\nOrganization: Clickfeed\r\nX-Mailer: Mozilla 4.7 [en] (Win95; I)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Paul Prescod &lt;paul@...&gt;\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [rest-discuss] Indicating Notifications in HTTP\r\nReferences: &lt;200201220534.AAA26880@...&gt; &lt;3C4CFEC9.B61A51BB@...&gt; &lt;3C4D06A6.7EA06C6@...&gt; &lt;3C4DA5DA.45AE083D@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nReply-To: jbone@...\r\nX-Yahoo-Group-Post: member; u=10266038\r\n\r\n\n\nPaul Prescod wrote:\n\n&gt; Therefore I&#39;d propose that we view it as a convention layered on top of\n&gt; existing methods in the short term with a transition to a WATCH method\n&gt; in the long (perhaps very long) term.\n\nI&#39;m not *entirely* antagonistic to this kind of a both / and approach, assuming that we\ncan guarantee that the semantics of the two mechanisms are consistent and that any\nservice that supports WATCH is also required to support the other mechanism as well.  (I\nthink this is important from an adoption perspective.)  Having said that, let me\n(gently) play devil&#39;s advocate on a couple of these...\n\n&gt; Hmmm. It seems like sometimes you want a notification that a change has\n&gt; happened, sometimes you want a notification that embeds the changed\n&gt; object and sometimes you want a diff. I think that the first case\n&gt; applies pretty efficiently and generally to all objects everywhere.\n&gt;\n&gt; Maybe we should only ever send URLs, not representations, in\n&gt; notifications. The client can easily do a GET if it wants the data, and\n&gt; some kind of &quot;GET the difference&quot; if it knows how to do that.\n\nI think that the kind of notification desired is a very application (i.e., resource)\nspecific thing.  There are really three distinct parts to a subscription:  an expression\nof interest in notifications of state change on some resource by some other component,\nan event notification of state change per-se, and potentially the representation of the\nchanged state.  In the latter case, what you&#39;re really doing is specifying what\nrepresentation of the resource you want sent to you when state changes;  it&#39;s entirely\nconsistent (AFAICT) with HTTP / URI to specify this in a query string, e.g.\n\n  POST /some/rsrc/subs?reply-to=http://foo.com/notices/1;repr=delta\n\nBut there&#39;s a deeper issue:  what does a state change on a given resource mean,\nexactly?  It&#39;s not clear that this is generically meaningful for all resources.  If a\nweb page, for example, contains a counter that changes every time a GET happens on it,\nshould that then trigger a bunch of notifications?  IMO, the issue of what&#39;s &quot;in&quot; a\nnotification, how to represent it, and when to trigger it are all dependent on the\napplication / resource in question.  Each app --- indeed each resource --- should be\nfree to define these things however they like.\n\n&gt; &gt; (2)  Supporting subscriptions for a substantial portion of resources hosted by a\n&gt; &gt; particular domain has costs which may not be justified for a given service /\n&gt; &gt; application.\n&gt;\n&gt; The same goes for supporting PUT! That&#39;s why most web sites don&#39;t\n&gt; support PUT!\n\nYup.  Think about that.\n\n&gt; &gt; (3)  Recognizing (1) and preventing (2) would require a kind of fine-grained,\n&gt; &gt; per-resource configuration to allow or disallow WATCH behavior.\n&gt;\n&gt; Doesn&#39;t seem much different than PUT to me.\n\nAbsolutely correct.  IMO, it&#39;s not that PUT wouldn&#39;t be appropriate in many cases;  it&#39;s\nthat it&#39;s operationally too hard to use for many app developers in many contexts.\nSeveral issues combine to make PUT less exploited than it could otherwise be.  The\napplication developer / operator is often not the Web server administrator, and when the\napp developer / operator has to get the Web server administrator to perform\napplication-specific configurations it (a) often doesn&#39;t happen, (b) often takes a long\ntime, and (c) is rather fragile over time.  These kinds of friction and others lead\napplication developers to abandon certain available features and, indeed, push them\ntowards tunnelling things *through* HTTP in inappropriate ways, failing to leverage the\nresource model and namespace, etc.  (This is a generic problem with the way IT is\ninternally organized in many places;  ther&#39;s also a tug-of-war between apps / ops and\nadmin.  It results in balkanization and duplication, such as in the entirely distinct\nuser management mechanisms for e.g. databases and networks as a whole.)\n\nAnyway, recognizing that this problem exists, it seems silly to build something and hope\nit&#39;s generally used when there&#39;s this kind of built-in adoption friction.\n\n&gt; I like the idea of reifying subscriptions but see it as complementary to\n&gt; a new HTTP method.\n\nIf this is strongly true, then I&#39;m (somewhat uneasily) okay with a new method; if the\nspec for a new method *requires* that subscriptions be reified in a general way --- thus\nensuring parity of method and non-method based, um, methods --- then we&#39;re good.  I\ndoubt very seriously that this is acceptable to the general HTTP audience, though ---\nthe protocol space shouldn&#39;t mold the resource model.\n\n&gt; It&#39;s arguable whether the client should have to create a separate\n&gt; end-point if they want separate subscriptions. Might not it make sense\n&gt; to have dozens of service with an endpoint of mailto:email@...?\n\nWe agree on the value of reifying subscriptions on the server end of things;  similar\nbenefits and arguments obtain for reifying subscriptions on the client end of things.\nIf you *don&#39;t* reify subscriptions on the client end of things, then generally speaking\nthe client needs to do much more work to determine what particular subscription a\nparticular event notification refers to.  This probably means embedding data about the\nsender in either the headers or the body of the notification, and that&#39;s somewhere I\nthink we all agree we don&#39;t want to go.\n\nResources, not endpoints. :-)\n\njb\n\n\n\n\n\n"}}