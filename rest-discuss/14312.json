{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":267214845,"authorName":"Noah Campbell","from":"Noah Campbell &lt;noahcampbell@...&gt;","profile":"noahsingleton","replyTo":"SENDER","senderId":"Ucr21ZKLJkNeG4Qk5dXsfuaAjBqvf6QOFvfVGWfFUnCcGgo8JcGJ3xKtb_BBbAt71xq-eiyZWTaIbOPuJy6ZiMYrEsnO0-Bjjl_vNTc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing","postDate":"1261435673","msgId":14312,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRlNzBiMzlkMDkxMjIxMTQ0N3Q2YzM1MDRlN2s4YTZhMDI2OTZhMmJkYTEwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PEVFQTg0RTA5LTlFNDctNDEyNy04OUQzLTBFOTVENDlDMkFFREBtYWMuY29tPg==","referencesHeader":"PGhnbnBmaCtwcGZrQGVHcm91cHMuY29tPgkgPDI2REVFQUE1LTUyQjItNEM0MS05RDQwLTBENzE2RDAxRjA3NEBtYWMuY29tPgkgPGRlNzBiMzlkMDkxMjIxMTExOXMxODhjYThkNHM1YmU0ZGFkMGI3MGUxNTA3QG1haWwuZ21haWwuY29tPgkgPEVFQTg0RTA5LTlFNDctNDEyNy04OUQzLTBFOTVENDlDMkFFREBtYWMuY29tPg=="},"prevInTopic":14311,"nextInTopic":14313,"prevInTime":14311,"nextInTime":14313,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"This would lead to If you are going to adopt REST with all the benefits do it all the way through and believe that the business level harm occasionally done","rawEmail":"Return-Path: &lt;noahcampbell@...&gt;\r\nX-Sender: noahcampbell@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20140 invoked from network); 21 Dec 2009 22:47:54 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m12.grp.re1.yahoo.com with QMQP; 21 Dec 2009 22:47:54 -0000\r\nX-Received: from unknown (HELO mail-px0-f183.google.com) (209.85.216.183)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Dec 2009 22:47:54 -0000\r\nX-Received: by pxi13 with SMTP id 13so30402pxi.24\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 21 Dec 2009 14:47:54 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.143.27.41 with SMTP id e41mr5166862wfj.218.1261435673967; Mon, \n\t21 Dec 2009 14:47:53 -0800 (PST)\r\nIn-Reply-To: &lt;EEA84E09-9E47-4127-89D3-0E95D49C2AED@...&gt;\r\nReferences: &lt;hgnpfh+ppfk@...&gt;\n\t &lt;26DEEAA5-52B2-4C41-9D40-0D716D01F074@...&gt;\n\t &lt;de70b39d0912211119s188ca8d4s5be4dad0b70e1507@...&gt;\n\t &lt;EEA84E09-9E47-4127-89D3-0E95D49C2AED@...&gt;\r\nDate: Mon, 21 Dec 2009 14:47:53 -0800\r\nMessage-ID: &lt;de70b39d0912211447t6c3504e7k8a6a02696a2bda10@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Jorn Wildt &lt;jw@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00504502cd1140ff3b047b44e188\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Noah Campbell &lt;noahcampbell@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=267214845; y=eMHJnhahkeAovaQte6QcqvyhZ_AmZGjOPa0HVtqqw771h5T2ZTRtkQ\r\nX-Yahoo-Profile: noahsingleton\r\n\r\n\r\n--00504502cd1140ff3b047b44e188\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&quot;This would lead to &quot;If you are going to adopt REST with all the benefits d=\r\no\nit all the way through and believe that the business level harm occasiona=\r\nlly\ndone by evolution costs far less than running a SOAP architecture in th=\r\ne\nlong run.&quot;\n\nBasically, no.  If your notion that SOAP somehow solved the p=\r\nroblems that\nyou&#39;ve identified being an issue in REST then I&#39;m curious how =\r\nyou over came\nSOAP&#39;s shortcoming&#39;s.  If anything, SOAP is more rigid and th=\r\nis leads to\nincrease cost in the face of change.  This has nothing to do wi=\r\nth SOAP the\narchitecture, but more SOAP the implementation.  WSDL has done =\r\nmore harm\nthan good, IMO.  I&#39;ve seen POX work really well, but again it&#39;s a=\r\n different\narchitecture than REST.\n\nI&#39;m curious how SLA enforcement is achi=\r\neved with a SOAP architecture?\n\n-Noah\n\nOn Mon, Dec 21, 2009 at 1:18 PM, Jan=\r\n Algermissen &lt;algermissen1971@...&gt;wrote:\n\n&gt; Noah,\n&gt;\n&gt; (see below),\n&gt;\n&gt;\n=\r\n&gt; On Dec 21, 2009, at 8:19 PM, Noah Campbell wrote:\n&gt;\n&gt;  &quot;AtomPub for examp=\r\nle enables the client *implementor* to assume that a GET\n&gt;&gt; on a collection=\r\n will return an Atom feed document.&quot;\n&gt;&gt;\n&gt;&gt; To your prior point, something i=\r\ns broken, but what?  Is it the\n&gt;&gt; architectural style (by asking it on this=\r\n mailing list it may be that you\n&gt;&gt; think it is)?  Is it the transport HTTP=\r\n?  Is it the specification?  Is it\n&gt;&gt; the implementor of the server or the =\r\nclient?  Is it something else?\n&gt;&gt;\n&gt;&gt; You focus on the assumption being nega=\r\ntive and rightly so, but lets be\n&gt;&gt; formal about what an assumption is.  Yo=\r\nu&#39;ve alluded to an assumption not met\n&gt;&gt; as negative.\n&gt;&gt;\n&gt;\n&gt; I is usually n=\r\not that negative on the open Web because the overall\n&gt; expectations are not=\r\n that strict; people allways plan for any kinds of\n&gt; changes to happen and =\r\nREST advantage here is that the uniform interface\n&gt; enables the communicati=\r\non (the talking to each other) to succeed even if\n&gt; there is an error. Inst=\r\nead of everything falling apart the client user or\n&gt; developer can pick up =\r\nthe clue (e.g. the 406 body) and follow her nose to\n&gt; fix things.\n&gt;\n&gt; But t=\r\nhis is a model that is very hard to sell inside the enterprise because\n&gt; th=\r\ne business level contracts require a certain degree of certainty (e.g.\n&gt; SL=\r\nAs). Saying &quot;hey, if business transactions suddenly stop working, look at\n&gt;=\r\n the lock file and see what the service owner suggested as a fix. Nah, this=\r\n\n&gt; will not happen evry often, just be prepared for it in any case&quot;.\n&gt;\n&gt; OT=\r\nH, it might be the price to pay for the evolvability extreme of not\n&gt; needi=\r\nng any kind of out of band communication between client and server\n&gt; develo=\r\nper at all. Possibly, if you compare investment in time and travel\n&gt; resour=\r\nces etc. involved in discussing interfaces of the SOAP style with the\n&gt; cos=\r\nt of some missing transactions it might even make a compelling case.\n&gt; (Lik=\r\ne airline rather pay customers some money for overbooked flights than to\n&gt; =\r\nmake sure that every passenger definitely gets a seat. The latter just cost=\r\ns\n&gt; less).\n&gt;\n&gt; This would lead to &quot;If you are going to adopt REST with all =\r\nthe benefits do\n&gt; it all the way through and believe that the business leve=\r\nl harm occasionally\n&gt; done by evolution costs far less than running a SOAP =\r\narchitecture in the\n&gt; long run.\n&gt;\n&gt;\n&gt;  If I had to translate this into code=\r\n it would look like this:\n&gt;&gt;\n&gt;&gt; fread (buffer, 1, lSize, pFile)\n&gt;&gt;\n&gt;&gt; There=\r\n is an assumption here given all the variables are initialized\n&gt;&gt; correctly=\r\n.  Do you see it?\n&gt;&gt;\n&gt;&gt; The return value is not checked.  The read may not =\r\nhave read all the data\n&gt;&gt; in the file in this particular call.  Who is the =\r\nguilty party?  Is it the\n&gt;&gt; architecture, POSIX?  Is it the specification,\n=\r\n&gt;&gt; http://www.cplusplus.com/reference/clibrary/cstdio/fread/? Is it the\n&gt;&gt; =\r\nimplementation, GNU? Is it the implementor?  I&#39;d argue it&#39;s the implementor=\r\n.\n&gt;&gt;  C has a long established history of using return values to indicate s=\r\nuccess\n&gt;&gt; (as well as return values...but errno provides a (kludgy?) workar=\r\nound).\n&gt;&gt;\n&gt;&gt; I would urge an implementer to understand the architecture sty=\r\nle, the\n&gt;&gt; specification, the implementation and focus very hard on making =\r\nsure\n&gt;&gt; assumptions like the above are not scattered through out the code. =\r\n Since\n&gt;&gt; REST is about two remote systems communicating, I&#39;d argue that an=\r\ny client\n&gt;&gt; must validate any assumption before proceeding, including check=\r\ning the error\n&gt;&gt; code.  If not, the client will be be brittle, prone to err=\r\nor, and cost more\n&gt;&gt; in ongoing maintenance.  Good, robust applications ass=\r\nume nothing.\n&gt;&gt;\n&gt;&gt; Let&#39;s assume for a moment the AtomPub spec represents th=\r\ne typical spec for\n&gt;&gt; a service.  It assumes RESTful architectural style us=\r\ning the HTTP transport.\n&gt;&gt;  To your point, the service must behave has spec=\r\nified for any goal to be\n&gt;&gt; obtained.   Aspects of the http transport &quot;leak=\r\n&quot; into the interaction even\n&gt;&gt; those it has not been specified.  The spec d=\r\noesn&#39;t call out all the\n&gt;&gt; different response codes and how to handle them,=\r\n it relies on those familiar\n&gt;&gt; with the HTTP transport to deal with those =\r\ngracefully.  Case in point, if\n&gt;&gt; you do:\n&gt;&gt;\n&gt;&gt; GET /\n&gt;&gt; Accept: applicatio=\r\nn/atomsvc+xml\n&gt;&gt;\n&gt;&gt; and get a\n&gt;&gt;\n&gt;&gt; 307: Moved Temporarily\n&gt;&gt; Location: /sv=\r\nc.atom\n&gt;&gt;\n&gt;&gt; or\n&gt;&gt;\n&gt;&gt; 305: Use Proxy\n&gt;&gt; Location: /proxy/svc.atom\n&gt;&gt;\n&gt;&gt; or\n=\r\n&gt;&gt;\n&gt;&gt; 401: Unauthorized\n&gt;&gt; www-authenticate: basic\n&gt;&gt;\n&gt;&gt; Is this an error?\n=\r\n&gt;&gt;\n&gt;&gt; Roy thesis doesn&#39;t explicitly say yes or no.  However, the argument f=\r\nor a\n&gt;&gt; uniform interface is that the intermediary can participate without =\r\naffecting\n&gt;&gt; the remote call.  I&#39;ll extrapolate a little in that a uniform =\r\ninterface\n&gt;&gt; provides a common behavior that permeates all levels of an arc=\r\nhitecture,\n&gt;&gt; including the implementation.  The testers should be not be s=\r\nurprised to see\n&gt;&gt; the 3 response outline above and should be able to accom=\r\nmodate\n&gt;&gt; appropriately.\n&gt;&gt;\n&gt;&gt;\n&gt; Agreed and I see your point. But (sorry :-=\r\n) I&#39;d expect an HTTP client\n&gt; connector to be able to follow these redirect=\r\ns or authenticate on its own\n&gt; without even propagating it to the next leve=\r\nl. Most client connectors do so\n&gt; (depending on config of course). So, I&#39;d =\r\nlimit what we are talking about to\n&gt; steady states and leave out the transi=\r\nent ones.\n&gt;\n&gt; However, I understand you to say that an AtomPub client imple=\r\nmentation that\n&gt; uses an HTTP client connector must of course implement all=\r\n of HTTP. And yes,\n&gt; I agree that the 406 must be handled correctly. But th=\r\nen? there is no\n&gt; possible recovery from the broken expectation to receive =\r\nan Atom feed.\n&gt;\n&gt;\n&gt;\n&gt;  Hopefully this response helps move the discussion fo=\r\nrward :)\n&gt;&gt;\n&gt;\n&gt; Thanks for keeping up with this. I am just sorry that I see=\r\nm to be so\n&gt; unable to get this accross.\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;&gt; -Noah\n&gt;&gt;\n&gt;&gt; On =\r\nMon, Dec 21, 2009 at 4:35 AM, Jan Algermissen &lt;algermissen1971@...&gt;\n&gt;&gt; =\r\nwrote:\n&gt;&gt;\n&gt;&gt; On Dec 21, 2009, at 1:25 PM, Jorn Wildt wrote:\n&gt;&gt;\n&gt;&gt; &gt; Oh, let=\r\ns backtrack a bit. You said earlier on:\n&gt;&gt; &gt;\n&gt;&gt; &gt;&gt; In the enterprise people=\r\n want to develop clients and services in\n&gt;&gt; &gt;&gt; parallel, shich rules out cl=\r\nient design by inspecting the runtime\n&gt;&gt; &gt;&gt; behavior of a service.\n&gt;&gt; &gt;\n&gt;&gt; =\r\n&gt; Then I said: you need not expect at runtime, you can have a mock. To\n&gt;&gt; &gt;=\r\n this you answered: no, you build clients on specs.\n&gt;&gt; &gt;\n&gt;&gt; &gt; What I was tr=\r\nying to say was: if you build clients on specs and RFC\n&gt;&gt; &gt; 5023 (applicati=\r\non/atomsrv+xml) is a spec, then what is keeping you\n&gt;&gt; &gt; from building any =\r\nkind of REST client on similar specs for other\n&gt;&gt; &gt; media types? If both se=\r\nrver and client agrees on the media type spec\n&gt;&gt; &gt; then both can be built i=\r\nndividually and simultaneously.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; No, that is all fine and I agree. =\r\nI am questioning the RESTfulness of\n&gt;&gt; specs that allow the clients to make=\r\n assumptions about the hypermedia\n&gt;&gt; it will receive at some point in the i=\r\nnteraction. AtomPub for example\n&gt;&gt; enables the client *implementor* to assu=\r\nme that a GET on a collection\n&gt;&gt; will return an Atom feed document. This is=\r\n equivalent to making an\n&gt;&gt; assumption about the application state to be in=\r\n after the GET to the\n&gt;&gt; collection.\n&gt;&gt;\n&gt;&gt; And I am trying to say that M2M =\r\nclients (besides passibe, server\n&gt;&gt; driven crawlers) can only be built when=\r\n such contracts are in place.\n&gt;&gt;\n&gt;&gt; Jan\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; /J=C3=B8rn\n&gt;&gt; &gt;\n&gt;&gt; =\r\n&gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt; ------------------------------------\n&gt;&gt; &gt;\n&gt;&gt; &gt; Yahoo! Groups Li=\r\nnks\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt; &gt;\n&gt;&gt;\n&gt;&gt; --------------------------------------\n&gt;&gt; Jan Alge=\r\nrmissen\n&gt;&gt;\n&gt;&gt; Mail: algermissen@...\n&gt;&gt; Blog: http://algermissen.blogspo=\r\nt.com/\n&gt;&gt; Home: http://www.jalgermissen.com\n&gt;&gt; ----------------------------=\r\n----------\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; ------------------------------------\n&gt;&gt;\n&gt;&gt; Yah=\r\noo! Groups Links\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt; --------------------------------------\n&gt; =\r\nJan Algermissen\n&gt;\n&gt; Mail: algermissen@...\n&gt; Blog: http://algermissen.bl=\r\nogspot.com/\n&gt; Home: http://www.jalgermissen.com\n&gt; -------------------------=\r\n-------------\n&gt;\n&gt;\n&gt;\n&gt;\n\r\n--00504502cd1140ff3b047b44e188\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&quot;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: arial, sans-se=\r\nrif; font-size: 13px; border-collapse: collapse; &quot;&gt;This would lead to &quot=\r\n;If you are going to adopt REST with all the benefits do it all the way thr=\r\nough and believe that the business level harm occasionally done by evolutio=\r\nn costs far less than running a SOAP architecture in the long run.&quot;&lt;/s=\r\npan&gt;&lt;div&gt;\n&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;arial, sans-serif&quot;&gt;&lt;span=\r\n class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: collapse;&quot;&gt;&lt;br&gt;&lt;/span=\r\n&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;arial, sans-ser=\r\nif&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: collapse;&quot;&gt;B=\r\nasically, no. =C2=A0If your notion that SOAP somehow solved the problems th=\r\nat you&#39;ve identified being an issue in REST then I&#39;m curious how yo=\r\nu over came SOAP&#39;s shortcoming&#39;s. =C2=A0If anything, SOAP is more r=\r\nigid and this leads to increase cost in the face of change. =C2=A0This has =\r\nnothing to do with SOAP the architecture, but more SOAP the implementation.=\r\n =C2=A0WSDL has done more harm than good, IMO. =C2=A0I&#39;ve seen POX work=\r\n really well, but again it&#39;s a different architecture than REST.&lt;/span&gt;=\r\n&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;arial, sans-ser=\r\nif&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: collapse;&quot;&gt;&lt;=\r\nbr&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;arial,=\r\n sans-serif&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse: col=\r\nlapse;&quot;&gt;I&#39;m curious how SLA enforcement is achieved with a SOAP archite=\r\ncture?&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; face=3D&quot;ar=\r\nial, sans-serif&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-collapse:=\r\n collapse;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font class=3D&quot;Apple-style-span&quot; f=\r\nace=3D&quot;arial, sans-serif&quot;&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;border-=\r\ncollapse: collapse;&quot;&gt;-Noah&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;div class=3D&quot;gmail=\r\n_quote&quot;&gt;On Mon, Dec 21, 2009 at 1:18 PM, Jan Algermissen &lt;span dir=3D&quot;ltr&quot;&gt;=\r\n&lt;&lt;a href=3D&quot;mailto:algermissen1971@...&quot;&gt;algermissen1971@...&lt;/a&gt;&=\r\ngt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 =\r\n0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;\nNoah,&lt;br&gt;\n&lt;br&gt;\n(see b=\r\nelow),&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nOn Dec 21, 2009, at 8:19 PM, Noah Campbel=\r\nl wrote:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .=\r\n8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n&quot;AtomPub for example=\r\n enables the client *implementor* to assume that a GET on a collection will=\r\n return an Atom feed document.&quot;&lt;br&gt;\n&lt;br&gt;\nTo your prior point, somethin=\r\ng is broken, but what? =C2=A0Is it the architectural style (by asking it on=\r\n this mailing list it may be that you think it is)? =C2=A0Is it the transpo=\r\nrt HTTP? =C2=A0Is it the specification? =C2=A0Is it the implementor of the =\r\nserver or the client? =C2=A0Is it something else?&lt;br&gt;\n\n&lt;br&gt;\nYou focus on th=\r\ne assumption being negative and rightly so, but lets be formal about what a=\r\nn assumption is. =C2=A0You&#39;ve alluded to an assumption not met as negat=\r\nive.&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nI is usually not that negative on the ope=\r\nn Web because the overall expectations are not that strict; people allways =\r\nplan for any kinds of changes to happen and REST advantage here is that the=\r\n uniform interface enables the communication (the talking to each other) to=\r\n succeed even if there is an error. Instead of everything falling apart the=\r\n client user or developer can pick up the clue (e.g. the 406 body) and foll=\r\now her nose to fix things.&lt;br&gt;\n\n&lt;br&gt;\nBut this is a model that is very hard =\r\nto sell inside the enterprise because the business level contracts require =\r\na certain degree of certainty (e.g. SLAs). Saying &quot;hey, if business tr=\r\nansactions suddenly stop working, look at the lock file and see what the se=\r\nrvice owner suggested as a fix. Nah, this will not happen evry often, just =\r\nbe prepared for it in any case&quot;.&lt;br&gt;\n\n&lt;br&gt;\nOTH, it might be the price =\r\nto pay for the evolvability extreme of not needing any kind of out of band =\r\ncommunication between client and server developer at all. Possibly, if you =\r\ncompare investment in time and travel resources etc. involved in discussing=\r\n interfaces of the SOAP style with the cost of some missing transactions it=\r\n might even make a compelling case. (Like airline rather pay customers some=\r\n money for overbooked flights than to make sure that every passenger defini=\r\ntely gets a seat. The latter just costs less).&lt;br&gt;\n\n&lt;br&gt;\nThis would lead to=\r\n &quot;If you are going to adopt REST with all the benefits do it all the w=\r\nay through and believe that the business level harm occasionally done by ev=\r\nolution costs far less than running a SOAP architecture in the long run.&lt;di=\r\nv class=3D&quot;im&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin=\r\n:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\nIf I had to trans=\r\nlate this into code it would look like this:&lt;br&gt;\n&lt;br&gt;\nfread (buffer, 1, lSi=\r\nze, pFile)&lt;br&gt;\n&lt;br&gt;\nThere is an assumption here given all the variables are=\r\n initialized correctly. =C2=A0Do you see it?&lt;br&gt;\n&lt;br&gt;\nThe return value is n=\r\not checked. =C2=A0The read may not have read all the data in the file in th=\r\nis particular call. =C2=A0Who is the guilty party? =C2=A0Is it the architec=\r\nture, POSIX? =C2=A0Is it the specification, &lt;a href=3D&quot;http://www.cplusplus=\r\n.com/reference/clibrary/cstdio/fread/&quot; target=3D&quot;_blank&quot;&gt;http://www.cpluspl=\r\nus.com/reference/clibrary/cstdio/fread/&lt;/a&gt;?=C2=A0Is it the implementation,=\r\n GNU? Is it the implementor? =C2=A0I&#39;d argue it&#39;s the implementor. =\r\n=C2=A0C has a long established history of using return values to indicate s=\r\nuccess (as well as return values...but errno provides a (kludgy?) workaroun=\r\nd).&lt;br&gt;\n\n&lt;br&gt;\nI would urge an implementer to understand the architecture st=\r\nyle, the specification, the implementation and focus very hard on making su=\r\nre assumptions like the above are not scattered through out the code. =C2=\r\n=A0Since REST is about two remote systems communicating, I&#39;d argue that=\r\n any client must validate any assumption before proceeding, including check=\r\ning the error code. =C2=A0If not, the client will be be brittle, prone to e=\r\nrror, and cost more in ongoing maintenance. =C2=A0Good, robust applications=\r\n assume nothing.&lt;br&gt;\n\n&lt;br&gt;\nLet&#39;s assume for a moment the AtomPub spec r=\r\nepresents the typical spec for a service. =C2=A0It assumes RESTful architec=\r\ntural style using the HTTP transport. =C2=A0To your point, the service must=\r\n behave has specified for any goal to be obtained. =C2=A0 Aspects of the ht=\r\ntp transport &quot;leak&quot; into the interaction even those it has not be=\r\nen specified. =C2=A0The spec doesn&#39;t call out all the different respons=\r\ne codes and how to handle them, it relies on those familiar with the HTTP t=\r\nransport to deal with those gracefully. =C2=A0Case in point, if you do:&lt;br&gt;=\r\n\n\n&lt;br&gt;\nGET /&lt;br&gt;\nAccept: application/atomsvc+xml&lt;br&gt;\n&lt;br&gt;\nand get a&lt;br&gt;\n&lt;br=\r\n&gt;\n307: Moved Temporarily&lt;br&gt;\nLocation: /svc.atom&lt;br&gt;\n&lt;br&gt;\nor&lt;br&gt;\n&lt;br&gt;\n305: =\r\nUse Proxy&lt;br&gt;\nLocation: /proxy/svc.atom&lt;br&gt;\n&lt;br&gt;\nor&lt;br&gt;\n&lt;br&gt;\n401: Unauthori=\r\nzed&lt;br&gt;\nwww-authenticate: basic&lt;br&gt;\n&lt;br&gt;\nIs this an error?&lt;br&gt;\n&lt;br&gt;\nRoy the=\r\nsis doesn&#39;t explicitly say yes or no. =C2=A0However, the argument for a=\r\n uniform interface is that the intermediary can participate without affecti=\r\nng the remote call. =C2=A0I&#39;ll extrapolate a little in that a uniform i=\r\nnterface provides a common behavior that permeates all levels of an archite=\r\ncture, including the implementation. =C2=A0The testers should be not be sur=\r\nprised to see the 3 response outline above and should be able to accommodat=\r\ne appropriately.&lt;br&gt;\n\n&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nAgreed and I see your p=\r\noint. But (sorry :-) I&#39;d expect an HTTP client connector to be able to =\r\nfollow these redirects or authenticate on its own without even propagating =\r\nit to the next level. Most client connectors do so (depending on config of =\r\ncourse). So, I&#39;d limit what we are talking about to steady states and l=\r\neave out the transient ones.&lt;br&gt;\n\n&lt;br&gt;\nHowever, I understand you to say tha=\r\nt an AtomPub client implementation that uses an HTTP client connector must =\r\nof course implement all of HTTP. And yes, I agree that the 406 must be hand=\r\nled correctly. But then? there is no possible recovery from the broken expe=\r\nctation to receive an Atom feed.&lt;div class=3D&quot;im&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;blockquo=\r\nte class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc so=\r\nlid;padding-left:1ex&quot;&gt;\nHopefully this response helps move the discussion fo=\r\nrward :)&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nThanks for keeping up with this. I am=\r\n just sorry that I seem to be so unable to get this accross.&lt;br&gt;&lt;font color=\r\n=3D&quot;#888888&quot;&gt;\n&lt;br&gt;\nJan&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;b=\r\nr&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left=\r\n:1px #ccc solid;padding-left:1ex&quot;&gt;\n&lt;br&gt;\n-Noah&lt;br&gt;\n&lt;br&gt;\nOn Mon, Dec 21, 2009=\r\n at 4:35 AM, Jan Algermissen &lt;&lt;a href=3D&quot;mailto:algermissen1971@...&quot;=\r\n target=3D&quot;_blank&quot;&gt;algermissen1971@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&lt;br&gt;\nOn Dec 2=\r\n1, 2009, at 1:25 PM, Jorn Wildt wrote:&lt;br&gt;\n&lt;br&gt;\n&gt; Oh, lets backtrack a b=\r\nit. You said earlier on:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&gt; In the enterprise people wan=\r\nt to develop clients and services in&lt;br&gt;\n&gt;&gt; parallel, shich rules out=\r\n client design by inspecting the runtime&lt;br&gt;\n&gt;&gt; behavior of a service=\r\n.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Then I said: you need not expect at runtime, you can ha=\r\nve a mock. To&lt;br&gt;\n&gt; this you answered: no, you build clients on specs.&lt;b=\r\nr&gt;\n&gt;&lt;br&gt;\n&gt; What I was trying to say was: if you build clients on spec=\r\ns and RFC&lt;br&gt;\n&gt; 5023 (application/atomsrv+xml) is a spec, then what is k=\r\neeping you&lt;br&gt;\n&gt; from building any kind of REST client on similar specs =\r\nfor other&lt;br&gt;\n&gt; media types? If both server and client agrees on the med=\r\nia type spec&lt;br&gt;\n&gt; then both can be built individually and simultaneousl=\r\ny.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nNo, that is all fine and I agree. I am questioning the RES=\r\nTfulness of&lt;br&gt;\nspecs that allow the clients to make assumptions about the =\r\nhypermedia&lt;br&gt;\nit will receive at some point in the interaction. AtomPub fo=\r\nr example&lt;br&gt;\nenables the client *implementor* to assume that a GET on a co=\r\nllection&lt;br&gt;\nwill return an Atom feed document. This is equivalent to makin=\r\ng an&lt;br&gt;\nassumption about the application state to be in after the GET to t=\r\nhe&lt;br&gt;\ncollection.&lt;br&gt;\n&lt;br&gt;\nAnd I am trying to say that M2M clients (beside=\r\ns passibe, server&lt;br&gt;\ndriven crawlers) can only be built when such contract=\r\ns are in place.&lt;br&gt;\n&lt;br&gt;\nJan&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; /J=C3=B8rn&lt;br&gt;\n&gt=\r\n;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt;&lt;=\r\nbr&gt;\n&gt; Yahoo! Groups Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n----------=\r\n----------------------------&lt;br&gt;\nJan Algermissen&lt;br&gt;\n&lt;br&gt;\nMail: &lt;a href=3D&quot;=\r\nmailto:algermissen@...&quot; target=3D&quot;_blank&quot;&gt;algermissen@...&lt;/a&gt;&lt;br&gt;\nB=\r\nlog: &lt;a href=3D&quot;http://algermissen.blogspot.com/&quot; target=3D&quot;_blank&quot;&gt;http://=\r\nalgermissen.blogspot.com/&lt;/a&gt;&lt;br&gt;\nHome: &lt;a href=3D&quot;http://www.jalgermissen.=\r\ncom&quot; target=3D&quot;_blank&quot;&gt;http://www.jalgermissen.com&lt;/a&gt;&lt;br&gt;\n----------------=\r\n----------------------&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n-----------------------=\r\n-------------&lt;br&gt;\n&lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit your=\r\n group on the web, go to:&lt;br&gt;\n =C2=A0 &lt;a href=3D&quot;http://groups.yahoo.com/gr=\r\noup/rest-discuss/&quot; target=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/group/rest-dis=\r\ncuss/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your email settings:&lt;br&gt;\n =C2=A0 Individual Em=\r\nail | Traditional&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings online go to:&lt;br&gt;\n =\r\n=C2=A0 &lt;a href=3D&quot;http://groups.yahoo.com/group/rest-discuss/join&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/group/rest-discuss/join&lt;/a&gt;&lt;br&gt;\n =C2=A0=\r\n (Yahoo! ID required)&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings via email:&lt;br&gt;\n=\r\n =C2=A0 &lt;a href=3D&quot;mailto:rest-discuss-digest@yahoogroups.com&quot; target=3D&quot;_b=\r\nlank&quot;&gt;rest-discuss-digest@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n =C2=A0 &lt;a href=3D&quot;mailto=\r\n:rest-discuss-fullfeatured@yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss-=\r\nfullfeatured@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from thi=\r\ns group, send an email to:&lt;br&gt;\n =C2=A0 &lt;a href=3D&quot;mailto:rest-discuss-unsub=\r\nscribe@yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss-unsubscribe@yahoogro=\r\nups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;br&gt;=\r\n\n =C2=A0 &lt;a href=3D&quot;http://docs.yahoo.com/info/terms/&quot; target=3D&quot;_blank&quot;&gt;ht=\r\ntp://docs.yahoo.com/info/terms/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n------=\r\n--------------------------------&lt;br&gt;\nJan Algermissen&lt;br&gt;\n&lt;br&gt;\nMail: &lt;a href=\r\n=3D&quot;mailto:algermissen@...&quot; target=3D&quot;_blank&quot;&gt;algermissen@...&lt;/a&gt;&lt;b=\r\nr&gt;\nBlog: &lt;a href=3D&quot;http://algermissen.blogspot.com/&quot; target=3D&quot;_blank&quot;&gt;htt=\r\np://algermissen.blogspot.com/&lt;/a&gt;&lt;br&gt;\nHome: &lt;a href=3D&quot;http://www.jalgermis=\r\nsen.com&quot; target=3D&quot;_blank&quot;&gt;http://www.jalgermissen.com&lt;/a&gt;&lt;br&gt;\n------------=\r\n--------------------------&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/di=\r\nv&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--00504502cd1140ff3b047b44e188--\r\n\n"}}