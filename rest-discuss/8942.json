{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":192402827,"authorName":"Mike Dierken","from":"&quot;Mike Dierken&quot; &lt;dierken@...&gt;","profile":"mdierken","replyTo":"SENDER","senderId":"hSDmnjBypyLEfCmsoLhTUkIwQf_RkoeekTd5HJ86rcqkrDpz7S8Ku0SneZMh-a77yLLKcai5HBJ2R_Dus0vJw-N3gzzTJPD7Jw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] RESTful design questions","postDate":"1181621770","msgId":8942,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNDcwMWM3YWNhOCQ2OGI5ZDFjMCQwMjAxYThjMEBtZXJjdXJ5Pg==","inReplyToHeader":"PGY0aXFxZytncjVvQGVHcm91cHMuY29tPg==","referencesHeader":"PGY0aXFxZytncjVvQGVHcm91cHMuY29tPg=="},"prevInTopic":8940,"nextInTopic":8945,"prevInTime":8941,"nextInTime":8943,"topicId":8940,"numMessagesInTopic":6,"msgSnippet":"1 caching Where do you want the retrieved representation cached - on an intermediary (caching proxy), on the client used by the user agent or both? 2 adding","rawEmail":"Return-Path: &lt;dierken@...&gt;\r\nX-Sender: dierken@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 26775 invoked from network); 12 Jun 2007 04:16:15 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m36.grp.scd.yahoo.com with QMQP; 12 Jun 2007 04:16:15 -0000\r\nReceived: from unknown (HELO nz-out-0506.google.com) (64.233.162.225)\n  by mta8.grp.scd.yahoo.com with SMTP; 12 Jun 2007 04:16:15 -0000\r\nReceived: by nz-out-0506.google.com with SMTP id z31so1427441nzd\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 11 Jun 2007 21:16:05 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:from:to:references:subject:date:message-id:mime-version:content-type:content-transfer-encoding:x-mailer:in-reply-to:x-mimeole:thread-index;\n        b=rKjYiUrmigx1m27NHzzLWHcYNTILnKrLF7NigriFq8hDmecC22v5Cdi5wp8zdWty2luw8a6TA6FL2RzSeS2bI0fMlxmXsQjtSLNsBb7+osIlWlAJ6pYOLw4gfFddEvXJ6TDeFjuNoi5T/XsHEriEhaUdd3XKWtZiUfR7HKPHiuc=\r\nReceived: by 10.114.179.1 with SMTP id b1mr6236013waf.1181621764985;\n        Mon, 11 Jun 2007 21:16:04 -0700 (PDT)\r\nReturn-Path: &lt;dierken@...&gt;\r\nReceived: from mercury ( [67.165.117.15])\n        by mx.google.com with ESMTP id k26sm13074016waf.2007.06.11.21.16.04\n        (version=SSLv3 cipher=RC4-MD5);\n        Mon, 11 Jun 2007 21:16:04 -0700 (PDT)\r\nTo: &quot;&#39;Brad Schick&#39;&quot; &lt;schickb@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;f4iqqg+gr5o@...&gt;\r\nDate: Mon, 11 Jun 2007 21:16:10 -0700\r\nMessage-ID: &lt;004701c7aca8$68b9d1c0$0201a8c0@mercury&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nIn-Reply-To: &lt;f4iqqg+gr5o@...&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028\r\nThread-Index: Aceso5JyDhy/ntVCSdqqK3rYOAcxpQABBmEg\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mike Dierken&quot; &lt;dierken@...&gt;\r\nSubject: RE: [rest-discuss] RESTful design questions\r\nX-Yahoo-Group-Post: member; u=192402827; y=XduVPIp5kCLeiTn5TRIUbQZGwRg85bTdW4d5kyFxZmB6eck\r\nX-Yahoo-Profile: mdierken\r\n\r\n\n1 caching\nWhere do you want the retrieved representation cached - on an intermediary\n(caching proxy), on the client used by the user agent or both?\n\n2 adding ratings \nJust use POST. \nYou can post to the photo directly, or post to a &#39;photo ratings&#39; resource\nspecific to that photo\n a) POST /users/ID/photos/\n b) POST /users/ID/photos/ratings\n\nIf multiple clients will be posting ratings, you likely will be aggregating\neach contribution/submission so that&#39;s sort of like creating (or\ncontributing to) another resource.\n\nIs the example you provide &quot;../users/ID/photos/ID/ratings&quot; have two &quot;ID&quot;\nsegments because each represent two different user identifiers?\n\n\n&gt; -----Original Message-----\n&gt; From: rest-discuss@yahoogroups.com \n&gt; [mailto:rest-discuss@yahoogroups.com] On Behalf Of Brad Schick\n&gt; Sent: Sunday, June 10, 2007 11:41 PM\n&gt; To: rest-discuss@yahoogroups.com\n&gt; Subject: [rest-discuss] RESTful design questions\n&gt; \n&gt; I&#39;m fairly new to the idea of using REST principles for \n&gt; designing the internals of a web application. It feels right \n&gt; to me, but I&#39;m now thinking more about nice qualities like \n&gt; caching and namespace design.\n&gt; \n&gt; 1. Let&#39;s say I have an obvious resource; user photos. And \n&gt; expose it like this:\n&gt; \n&gt; ../users/ID/photos\n&gt; \n&gt; When an request comes in, the identity of the requester is \n&gt; used to authorize access to only certain photos. It would be \n&gt; nice if the resulting representation could be cached and \n&gt; remain (relatively) secure. One approach would be to include \n&gt; a difficult to guess token in the URI with a short cache \n&gt; life. But where to put the token?\n&gt; \n&gt; A query string param seems natural, but some web accelerators \n&gt; & caches ignore URLs with query parameters (i.e. google web \n&gt; accelerator). I guess too often they have side effects (or \n&gt; expose private data). \n&gt; \n&gt; Any other ideas? Seems like this would be a common problem.\n&gt; \n&gt; 2. Simpler question following the same example. What would be \n&gt; a RESTful way to add ratings to photos. Maybe just a PUT on \n&gt; something like:\n&gt; \n&gt; ../users/ID/photos/ID/ratings\n&gt; \n&gt; I wanted to avoid a deep URI hierarchy, but this seems to \n&gt; fit. Am I heading in the right direction?\n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n\n"}}