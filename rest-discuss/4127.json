{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159732348,"authorName":"Tony Butterfield","from":"Tony Butterfield &lt;tab@...&gt;","profile":"butter1060","replyTo":"SENDER","senderId":"jc7UQxd6_Xqh0HSLRJVuicdz6HtL6nylR07V8bES4gyAO5ckaQVsqkIijXYeefYYVda5FStP9mrFN-xiYJGZ5RyngXhq5g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST toolkits","postDate":"1076324949","msgId":4127,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNzYzMjQ5NDkuMTYxNTkuMzQuY2FtZWxAbG9jYWxob3N0Pg==","inReplyToHeader":"PDIwMDQwMjA2MTUxNTQ2LkdBMjI4OTlAcGhvZW5peC5zb3Zlci5uZXQ+","referencesHeader":"PGJ2dGludCs2bzIwQGVHcm91cHMuY29tPgkgPDIwMDQwMjA2MTUxNTQ2LkdBMjI4OTlAcGhvZW5peC5zb3Zlci5uZXQ+"},"prevInTopic":4114,"nextInTopic":4254,"prevInTime":4126,"nextInTime":4128,"topicId":1078,"numMessagesInTopic":37,"msgSnippet":"... Are you thinking of RDF for defining, declaring and documenting the interfaces? ... Looking at the service, there are at least three aspects: 1)","rawEmail":"Return-Path: &lt;tab@...&gt;\r\nX-Sender: tab@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 19298 invoked from network); 9 Feb 2004 11:12:14 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m1.grp.scd.yahoo.com with QMQP; 9 Feb 2004 11:12:14 -0000\r\nReceived: from unknown (HELO ptb-relay02.plus.net) (212.159.14.213)\n  by mta5.grp.scd.yahoo.com with SMTP; 9 Feb 2004 11:12:13 -0000\r\nReceived: from [212.159.120.165] (helo=SOLO)\n\t by ptb-relay02.plus.net with esmtp (Exim) id 1Aq9KY-000ODK-1z; Mon, 09 Feb 2004 11:11:58 +0000\r\nTo: Josh Sled &lt;jsled-yahoogroup@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;20040206151546.GA22899@...&gt;\r\nReferences: &lt;bvtint+6o20@...&gt;\n\t &lt;20040206151546.GA22899@...&gt;\r\nContent-Type: text/plain\r\nOrganization: 1060 Research\r\nMessage-Id: &lt;1076324949.16159.34.camel@localhost&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.4 \r\nDate: Mon, 09 Feb 2004 11:09:09 +0000\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 212.159.14.213\r\nFrom: Tony Butterfield &lt;tab@...&gt;\r\nSubject: Re: [rest-discuss] REST toolkits\r\nX-Yahoo-Group-Post: member; u=159732348\r\nX-Yahoo-Profile: butter1060\r\n\r\nOn Fri, 2004-02-06 at 15:15, Josh Sled wrote: \n&gt; And, personally, I&#39;d try to make it easy to exchange RDF/XML instead of\n&gt; just XML, for many reasons.\n\nAre you thinking of RDF for defining, declaring and documenting the\ninterfaces?\n\n&gt; So what would such a toolkit look like?\n&gt; \n&gt; Let&#39;s start with a simple use-case to engender discussion...\n&gt; \n&gt; Alice provides an Image-Processing web service, with a RESTful interface.\n&gt; Bob wants to connect to and use that service before lunch. The service is\n&gt; pretty simple: given an image and list of transformations, it returns the\n&gt; transformed image [plus some other things it determines along the way].\n&gt; Ideally, Bob would like to sit down an write:\n&gt; \n&gt; --\n&gt; Image img = // ...;\n&gt; TransformList xformList = // ...;\n&gt; ImageProcessing imgSvc = ImageProcessing.getInstance();\n&gt; \n&gt; Image newImage = imgSvc.processImage( img, xformList );\n&gt; display( newImage );\n&gt; --\n&gt; \n&gt; * What parts of this can the toolkit help with or make simple?\n&gt; * What [information, description, &c.] is required to use it?\n&gt; * Why _wouldn&#39;t_ Bob use it?\n&gt; \nLooking at the service, there are at least three aspects:\n1) implementing the service\n2) providing a public interface to the service\n3) providing meta-data about the service\n\nAs far as implementing the service goes, I think it would great if the\ntoolkit would provide all abstractions to implement the service\nindependent of the public interface, provide implementations of the\ncommon web datatypes and provide tools for the management of the\nservice.\n\nAs far as providing the public interface I would good to be able to\ndeclaratively map the service onto some public interface. I.e. lets say\nput the ImageTransformService at http://imagetools.org/transform or\nsend an multipart mime email to transform@... with the image\nand the specification as attachments, or with more thought send a MMS\n(multi-media messaging) from your phone and get your fixed up image\nback!\n\nProviding meta-data. I&#39;d like to explore this issue more. To use RDF or\nWSDL to describe an interface is nice but useful only for automatically\nbuilding static client stubs or providing documentation. I haven&#39;t seen\ntechnology that can semantically understand an interface definition in\nits most general sense, only human interface proxies that can provide a\nbetter view of a service to a human.\n\nLooking at the client side of the scenario, It would be great for the\ntoolkit to be able to leverage a service, independent of how is a made\npublicly available (functionality willing). So we could build up the\nparameters to a request using standard web datatypes- in this example\nsay and XML specification plus a PNG image stream. Then pass them to the\nservice. I think the important aspect is that any complex service may\nwell leverage other services so it will need good support to be a client\ntoo!\n\n&gt; \n&gt; I guess I realize after I type this up that there may be two really different\n&gt; goals here, between building a toolkit focused on:\n&gt; \n&gt; 1/ human-machine -- a toolkit for building RESTful, human-focused web sites.\n&gt; \n&gt; 2/ machine-machine -- a toolkit for building RESTful,\n&gt;    developer-/code-focused web services.\n\n&gt; Which toolkit do you want to build?  I&#39;m looking for the latter.\n&gt; I don&#39;t think they&#39;re entirely seperate, actually, but it&#39;s good to know\n&gt; where we stand. :)\n\nThe two types would certainly require different functionalities but I&#39;d\nlike to think that the commonality is the larger part. It is those &quot;low\nlevel&quot; common features that interest me.\n-- \nTony Butterfield &lt;tab@...&gt;\n1060 Research\n\n\n"}}