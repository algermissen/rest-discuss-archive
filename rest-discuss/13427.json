{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":267214845,"authorName":"Noah Campbell","from":"Noah Campbell &lt;noahcampbell@...&gt;","profile":"noahsingleton","replyTo":"SENDER","senderId":"iB1FglZKFOa8lrb24mJL7ukr9j_jVsR7pjZEHzUGyeJLcfIRK_sFy0BlnpW5yBod_61j5rpsGyLZ0rmnPMgpt_k8ksseFt5x0cW6TyQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Avoid envelope formats","postDate":"1253505190","msgId":13427,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDZEMDc5MUE2LUEyQzEtNDE0MS04NkEyLTU1RDQwMkQyQzUzMEBnbWFpbC5jb20+","inReplyToHeader":"PGg5NnNuaSs2ajlhQGVHcm91cHMuY29tPg==","referencesHeader":"PGg5NnNuaSs2ajlhQGVHcm91cHMuY29tPg=="},"prevInTopic":13426,"nextInTopic":13428,"prevInTime":13426,"nextInTime":13428,"topicId":13371,"numMessagesInTopic":38,"msgSnippet":"... I was wondering the same thing, but couldn t quite articulate it. ... The edit links, to me, represented the first lesson in HATEOAS.  Once I realized I","rawEmail":"Return-Path: &lt;noahcampbell@...&gt;\r\nX-Sender: noahcampbell@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 66513 invoked from network); 21 Sep 2009 03:53:18 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m3.grp.re1.yahoo.com with QMQP; 21 Sep 2009 03:53:18 -0000\r\nX-Received: from unknown (HELO mail-yx0-f179.google.com) (209.85.210.179)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Sep 2009 03:53:18 -0000\r\nX-Received: by yxe9 with SMTP id 9so3387324yxe.26\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 20 Sep 2009 20:53:13 -0700 (PDT)\r\nX-Received: by 10.90.220.4 with SMTP id s4mr3047467agg.3.1253505193739;\n        Sun, 20 Sep 2009 20:53:13 -0700 (PDT)\r\nReturn-Path: &lt;noahcampbell@...&gt;\r\nX-Received: from ?10.0.1.7? (c-24-5-128-80.hsd1.ca.comcast.net [24.5.128.80])\n        by mx.google.com with ESMTPS id 21sm3778890agb.55.2009.09.20.20.53.11\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Sun, 20 Sep 2009 20:53:13 -0700 (PDT)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;6D0791A6-A2C1-4141-86A2-55D402D2C530@...&gt;\r\nTo: &quot;wahbedahbe&quot; &lt;andrew.wahbe@...&gt;\r\nIn-Reply-To: &lt;h96sni+6j9a@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v936)\r\nDate: Sun, 20 Sep 2009 20:53:10 -0700\r\nReferences: &lt;h96sni+6j9a@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Noah Campbell &lt;noahcampbell@...&gt;\r\nSubject: Re: [rest-discuss] Re: Avoid envelope formats\r\nX-Yahoo-Group-Post: member; u=267214845; y=fLGGzxR-nbgwIO5wQ1j6Tfp5e0pubCPJIR-dqv9582E8e0NeHCyNLg\r\nX-Yahoo-Profile: noahsingleton\r\n\r\n\n\nOn Sep 20, 2009, at 8:42 PM, wahbedahbe wrote:\n\n&gt; Huh?\n&gt; So now it&#39;s &quot;HEADERS as the engine of application state&quot;? ;-)\n&gt;\n\nI was wondering the same thing, but couldn&#39;t quite articulate it.\n\n&gt; I can see a link header replacing the &lt;link&gt; elements of an Atom  \n&gt; entry document or I suppose any other hypermedia link that applies  \n&gt; to the entire document/body.\n&gt;\n&gt; But hypermedia allows you to structure your information and apply  \n&gt; links to specific parts of that structure. For example, an Atom feed  \n&gt; document has individual entries, each of which may have &lt;link&gt;  \n&gt; elements that apply only to the containing entry. You couldn&#39;t pull  \n&gt; all those links out into the HTTP headers could you? Nor could you  \n&gt; pull all of the hyperlinks out of an HTML document. Hypermedia also  \n&gt; allows you to attach other instructions on using a link (e.g.  \n&gt; Forms). I don&#39;t see that being carried into HTTP headers very easily.\n&gt;\n&gt; So I&#39;m with you that an entry document on it&#39;s own could be replaced  \n&gt; by straight content with link headers. I have a harder time seeing  \n&gt; Atom service documents or feed documents working that way. And then  \n&gt; entry documents just become a matter of consistency with the feed  \n&gt; format -- having to work with multiple encodings of the same  \n&gt; metadata would be a bit painful.\n&gt;\n&gt; I just don&#39;t get the Atom hating here as I find it very useful.  \n&gt; AtomPub provides a very constrained hypermedia-driven state machine  \n&gt; model that is easy for machine-driven clients to interpret and follow.\n&gt; Saying a URL is the location of a collection drives the state  \n&gt; machine. Saying that a URL is an entry&#39;s edit link drives the state  \n&gt; machine.\n&gt;\n\nThe edit links, to me, represented the first lesson in HATEOAS.  Once  \nI realized I could set the URL to anything and the client would  \nfollowing the link (and the edit semantics) it was as if a light blub  \nturned on.  Clients didn&#39;t have to know my URL structure to work.\n\n&gt; You need Atom (or something like it) to complement HTTP in a RESTful  \n&gt; system even if you are just implementing CRUD (Yes I know REST is  \n&gt; not restricted to CRUD, but it works for a lot of use cases).  \n&gt; Hypermedia needs to define the &quot;collections of things you can POST  \n&gt; to&quot; and the media types they accept. You need some way to represent  \n&gt; the collection -- links to and descriptions of the things that were  \n&gt; created and can now be retrieved, updated and deleted. One analogy  \n&gt; might be that HTTP brings the file operations and Atom brings the  \n&gt; directory structure.\n&gt;\n&gt; Atom is REST perhaps slightly refactored -- the hypermedia format is  \n&gt; a combination two distinct formats: one, Atom, that is driving the  \n&gt; state machine, and the content format that represents resource  \n&gt; state. Whereas in the Web, HTML plays both these roles (though an  \n&gt; HTML repository of say Word documents yields a similar division  \n&gt; responsiblity as with Atom).\n&gt;\n&gt; An Atom client is a two stage processor -- one stage for the Atom/ \n&gt; AtomPub processing and one stage for the content processing. Because  \n&gt; the Atom semantics of collections and entries are more general than  \n&gt; a single service, the Atom stage is decoupled from individual  \n&gt; services and reusable across all Atom services. Just as the browser  \n&gt; is decoupled from web sites (even sites that serve it content in  \n&gt; proprietary formats that it has to hand off to other programs).\n&gt;\n&gt; Proprietary content formats do provide a form of coupling. There,  \n&gt; open, general (standard or non-service specific) formats are best.  \n&gt; So say an Atom feed of vCards for representing a set of person  \n&gt; records supporting CRUD operations. (I still don&#39;t get why Google  \n&gt; didn&#39;t do exactly that for their contacts API.)\n&gt;\n&gt; For me, the decoupling and reuse are the key reasons REST is  \n&gt; interesting. Atom doesn&#39;t get you all the way there if it is being  \n&gt; used with a proprietary content format, but it gets better  \n&gt; decoupling than most of the alternative approaches I&#39;ve seen. It&#39;s  \n&gt; not the only way to do REST though -- even for machine-driven  \n&gt; clients. But I have a hard time with it being recommended against  \n&gt; outright as it&#39;s a very useful hypermedia format.\n&gt;\n\nI second that motion.  AtomPub/Atom is extremely useful.\n\n&gt; Regards,\n&gt;\n&gt; Andrew Wahbe\n&gt;\n&gt;\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, &quot;Sebastien Lambla&quot; &lt;seb@...&gt;  \n&gt; wrote:\n&gt;&gt;\n&gt;&gt; Indeed. We have message and entity headers. It&#39;s like a big  \n&gt;&gt; elephant in the\n&gt;&gt; room that some crowds prentend are not hter because they&#39;re headers.\n&gt;&gt;\n&gt;&gt; If it doesn&#39;t fit in an http header, you&#39;re probably doing it wrong.\n&gt;&gt;\n&gt;&gt;&gt; -----Original Message-----\n&gt;&gt;&gt; From: rest-discuss@yahoogroups.com [mailto:rest-\n&gt;&gt;&gt; discuss@yahoogroups.com] On Behalf Of Subbu Allamaraju\n&gt;&gt;&gt; Sent: 18 September 2009 20:37\n&gt;&gt;&gt; To: Chuck Hinson\n&gt;&gt;&gt; Cc: Rest List\n&gt;&gt;&gt; Subject: Re: [rest-discuss] Avoid envelope formats\n&gt;&gt;&gt;\n&gt;&gt;&gt; Envelope formats, if not designed and used carefully, can reduce the\n&gt;&gt;&gt; visibility of the uniform interface. An example is an application\n&gt;&gt;&gt; encoding some &quot;application/foobar&quot; within atom:content. When used  \n&gt;&gt;&gt; like\n&gt;&gt;&gt; this, the protocol aspects become less useful, which is the same as\n&gt;&gt;&gt; tunneling.\n&gt;&gt;&gt;\n&gt;&gt;&gt; HTTP does include an envelope format, although it is rarely  \n&gt;&gt;&gt; described\n&gt;&gt;&gt; as such. HTTP messages use a MIME-like format &quot;containing\n&gt;&gt;&gt; metainformation about the data transferred and modifiers on the\n&gt;&gt;&gt; request/response semantics&quot; (sec 1.1, RFC-2616). This format is\n&gt;&gt;&gt; visible and extensible. When you start to design representations  \n&gt;&gt;&gt; based\n&gt;&gt;&gt; on this characteristic, you may find that there is no need for any\n&gt;&gt;&gt; other payload format.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Subbu\n&gt;&gt;&gt;\n&gt;&gt;&gt; On Sep 18, 2009, at 12:15 PM, Chuck Hinson wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; The following statement is on the REST-* architectural goals page:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; &quot;Whenever possible, avoid envelope formats. Examples of envelope\n&gt;&gt;&gt;&gt; formats are SOAP and Atom. Envelope formats encourage tunneling  \n&gt;&gt;&gt;&gt; over\n&gt;&gt;&gt;&gt; HTTP instead of leveraging HTTP. They also require additional\n&gt;&gt;&gt;&gt; complexities on both the client and the server.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Is this elaborated on somewhere? I don&#39;t think I&#39;ve ever heard the\n&gt;&gt;&gt;&gt; argument made before and I&#39;m not sure I get why an envelope  \n&gt;&gt;&gt;&gt; format is\n&gt;&gt;&gt;&gt; intrinsically good or bad in a protocol. It seems orthogonal to\n&gt;&gt;&gt;&gt; whether something is RESTful or not.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; --Chuck\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; ------------------------------------\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}