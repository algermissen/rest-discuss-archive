{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"bJ7-cHmTQv6SOmw7XqxrHQi2I4quav0Vq8H0YZCIwD2jARNKcL-AdyDqS9-3xD82qRQlNYDUctgaXXfHmVhmg5nQcX0ox_Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Feedback on implementing client side HTTP caching","postDate":"1296057145","msgId":17234,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGk9RzhXMGZDX1pZVVhCc2pVRVZwNTRFS05paGZIRjVFaHlzM3FiN0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PERBNDBGNjMwLTI5MjgtNDZFMC04MkU2LUVCODg0NENGREExREBzdWJidS5vcmc+","referencesHeader":"PEFBTkxrVGltPVhDcFVOeXlrZnJEV2RSdlpLSmFnVTBndllkTXpLTGM5Q2tKVEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlrMS1yRzZLQjdxc2pWZUZEbnlwdWdUdmQzZWZTQjk9OGJLeFZtVUBtYWlsLmdtYWlsLmNvbT4JPEE2NDYzMDcwLTMzNEItNEYwRi04QTVBLTg4MDZBRkZCMkYwMUBzdWJidS5vcmc+CTxBQU5Ma1RpbnRha18reXRfdXAzWTgxb01rRjFxaUZ4YWIxRVdmSlQxc3NSdjFAbWFpbC5nbWFpbC5jb20+CTxEQTQwRjYzMC0yOTI4LTQ2RTAtODJFNi1FQjg4NDRDRkRBMURAc3ViYnUub3JnPg=="},"prevInTopic":17233,"nextInTopic":17235,"prevInTime":17233,"nextInTime":17235,"topicId":17219,"numMessagesInTopic":22,"msgSnippet":"FWIW, adding client-side caching support is relatively simple on the Windows platform. Windows exposes base-level client-side caching services to the .NET","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 77729 invoked from network); 26 Jan 2011 15:52:28 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 26 Jan 2011 15:52:28 -0000\r\nX-Received: from unknown (HELO mail-wy0-f176.google.com) (74.125.82.176)\n  by mta1.grp.sp2.yahoo.com with SMTP; 26 Jan 2011 15:52:27 -0000\r\nX-Received: by mail-wy0-f176.google.com with SMTP id 20so1065344wye.35\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 26 Jan 2011 07:52:26 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.73.203 with SMTP id v53mr635889wed.48.1296057146045; Wed,\n 26 Jan 2011 07:52:26 -0800 (PST)\r\nX-Received: by 10.216.156.143 with HTTP; Wed, 26 Jan 2011 07:52:25 -0800 (PST)\r\nIn-Reply-To: &lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nReferences: &lt;AANLkTim=XCpUNyykfrDWdRvZKJagU0gvYdMzKLc9CkJT@...&gt;\n\t&lt;AANLkTik1-rG6KB7qsjVeFDnypugTvd3efSB9=8bKxVmU@...&gt;\n\t&lt;A6463070-334B-4F0F-8A5A-8806AFFB2F01@...&gt;\n\t&lt;AANLkTintak_+yt_up3Y81oMkF1qiFxab1EWfJT1ssRv1@...&gt;\n\t&lt;DA40F630-2928-46E0-82E6-EB8844CFDA1D@...&gt;\r\nDate: Wed, 26 Jan 2011 10:52:25 -0500\r\nX-Google-Sender-Auth: x1j32MP_Q9SO2os4BmcFv20tn44\r\nMessage-ID: &lt;AANLkTi=G8W0fC_ZYUXBsjUEVp54EKNihfHF5Ehys3qb7@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: David Stanek &lt;dstanek@...&gt;, Erlend Hamnaberg &lt;ngarthl@...&gt;, \n\tSidu Ponnappa &lt;lorddaemon@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Feedback on implementing client side HTTP caching\r\nX-Yahoo-Group-Post: member; u=69164307; y=B7lsrbW8LpPk8o-yftphS9Q_26HEhgHHxWIeo3EUgwZF\r\nX-Yahoo-Profile: mamund\r\n\r\nFWIW, adding client-side caching support is relatively simple on the\nWindow=\r\ns platform. Windows exposes base-level client-side caching\nservices to the =\r\n.NET runtime. Enabling it for any HTTP calls takes one\nline of code (on the=\r\n initialized HttpWebRequest object):\n\nrequest.CachePolicy =3D new HttpReque=\r\nstCachePolicy(HttpRequestCacheLevel.Default);\n\nThis was pointed out rather =\r\nnicely in REST In Practice[1].\n\nIn my view, HTTP Client applications SHOULD=\r\n understand and honor\ncaching directives. It MAY be possible to off-load th=\r\nis work to a\nproxy. Whether that proxy is internal or external will be a fu=\r\nnction\nof the programming environment, framework, etc available to the\ndeve=\r\nloper.\n\n\n[1] http://my.safaribooksonline.com/book/web-development/web-servi=\r\nces/9781449383312/scaling-out/implementing_caching_in_net\n\nmca\nhttp://amund=\r\nsen.com/blog/\nhttp://twitter.com@mamund\nhttp://mamund.com/foaf.rdf#me\n\n\n#RE=\r\nSTFest 2010\nhttp://rest-fest.googlecode.com\n\n\n\n\nOn Wed, Jan 26, 2011 at 02:=\r\n01, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n&gt; Sure, a browser is another =\r\nexample. There is nothing to forbid a client from doing its own caching, bu=\r\nt in general, it is better to delegate this to a proxy cache..\n&gt;\n&gt; On Jan 2=\r\n5, 2011, at 6:03 PM, David Stanek wrote:\n&gt;\n&gt;&gt; On Tue, Jan 25, 2011 at 8:56 =\r\nPM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; httpcache4j illustrates=\r\n the wrong way to do HTTP caching. Clients should not have to say things li=\r\nke\n&gt;&gt;\n&gt;&gt; HTTPCache cache =3D new HTTPCache(\n&gt;&gt; new MemoryCacheStorage(),\n&gt;&gt;=\r\n HTTPClientResponseResolver.createMultithreadedInstance()\n&gt;&gt; );\n&gt;&gt; response=\r\n =3D cache.doCachedRequest(request);\n&gt;&gt;\n&gt;&gt; in their code. They would make r=\r\negular HTTP requests (including appropriate headers), and a caching proxy c=\r\nan provide a cached response if available or forward the request to upstrea=\r\nm servers if no cached response is found. In other words, the client would =\r\nsimply do\n&gt;&gt;\n&gt;&gt; response =3D request.doGet(); // pseudo code\n&gt;&gt;\n&gt;&gt; The poin=\r\nt of the uniform interface is to let some intermediary along the network do=\r\n the job.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; Why not cache on the client side? In mobile applications=\r\n where the network calls are expensive it makes sense to cache locally.\n&gt;&gt;\n=\r\n&gt;&gt;\n&gt;&gt; --\n&gt;&gt; David\n&gt;&gt; blog: http://www.traceback.org\n&gt;&gt; twitter: http://twit=\r\nter.com/dstanek\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Gro=\r\nups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}