{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"H5McJMCzWF7mQrJ1CbUblmu2DUtb3an0LC1BcznsGY6l-wj2CayFBf6abRvWgim5LTArWbeQwah3caTofeaPKjb2Hp5w1zPywkgF5bvcmeU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Hard-coded state machine not REST?","postDate":"1267534534","msgId":14963,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU0RkZBMkY0LUI1QzEtNDAyRC1CRDJFLUFDMDU0QzVDODVDREBtYWMuY29tPg==","inReplyToHeader":"PDIwMTAwMzAyMDU0ODI5LjA2ODYwNmI0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGhtaXRubCtkdHVlQGVHcm91cHMuY29tPiA8MjAxMDAzMDIwNTQ4MjkuMDY4NjA2YjQuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":14961,"nextInTopic":14965,"prevInTime":14962,"nextInTime":14964,"topicId":14953,"numMessagesInTopic":7,"msgSnippet":"... Not quite. The trick is to only show the delete button when there is an edit link in the entry. You break the hypermedia constraint if the button is","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 72189 invoked from network); 2 Mar 2010 12:56:36 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m12.grp.re1.yahoo.com with QMQP; 2 Mar 2010 12:56:36 -0000\r\nX-Received: from unknown (HELO asmtpout030.mac.com) (17.148.16.105)\n  by mta1.grp.re1.yahoo.com with SMTP; 2 Mar 2010 12:56:36 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from [192.168.2.102] ([84.144.82.229])\n by asmtp030.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0KYN00GD3NWNIC20@...&gt; for\n rest-discuss@yahoogroups.com; Tue, 02 Mar 2010 04:55:43 -0800 (PST)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=5.0.0-0908210000 definitions=main-1003020069\r\nIn-reply-to: &lt;20100302054829.068606b4.eric@...&gt;\r\nDate: Tue, 02 Mar 2010 13:55:34 +0100\r\nCc: amaeze77 &lt;amaeze@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-id: &lt;54FFA2F4-B5C1-402D-BD2E-AC054C5C85CD@...&gt;\r\nReferences: &lt;hmitnl+dtue@...&gt;\n &lt;20100302054829.068606b4.eric@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nX-Mailer: Apple Mail (2.1077)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Hard-coded state machine not REST?\r\nX-Yahoo-Group-Post: member; u=289191104; y=BvhWXPcq9uhsxOD8rx2BSQVXBaPiby37YzP6eLXtaZgHZkMwiOJ_KFJq\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Mar 2, 2010, at 1:48 PM, Eric J. Bowman wrote:\n\n&gt; Eb wrote:\n&gt;&gt; \n&gt;&gt; Would an automated load tester (client) for a web application that\n&gt;&gt; uses hypermedia to traverse the application and execution not be\n&gt;&gt; considered RESTful because the state-machine for the application is\n&gt;&gt; hard-coded to some degree?\n&gt;&gt; \n&gt; \n&gt; Exactly.  My example is an Atom Protocol client&#39;s delete function.\n&gt; Unless you&#39;re using a forms language that supports DELETE, to instruct\n&gt; the client how that function works using hypertext, then the delete\n&gt; function must be hard-coded in the client chrome.\n\nNot quite. The trick is to only show the delete button when there is an &#39;edit&#39; link in the entry. You break the hypermedia constraint if the button is always there (or clickable) because you assume that the edit link will be there. It might not.\n\n&gt; \n&gt; This works well for deleting members, which is well specified -- but\n&gt; deleting collections is not.  An Atom Protocol client which hard-codes\n&gt; a collection-delete function has its interoperability limited to those\n&gt; systems which interpret collection-delete behavior the same way, i.e.\n&gt; coupling.\n\nDeleting collections is not defined by AtomPub so you&#39;d need to do that in a medi atype (extension) first. OTH, HTTP provides sufficient semantics to DELETE any resource. So if you want to build a client that exploits that it might well show a delete button all the time - in the same way a browser shows a GET &#39;button&#39; all the time (the location bar).\n\n\n&gt; \n&gt; I don&#39;t actually care if a collection-delete button is in the client\n&gt; chrome, so long as its behavior is dictated by received hypertext.\n&gt; This decoupling allows the server&#39;s interpretation of the unspecified\n&gt; collection-delete function to change, without breaking clients, i.e.\n&gt; decoupling.\n&gt; \n&gt; The hypertext constraint is the line between this coupling/decoupling,\n&gt; and this holds true for a load-tester as well*.  An Atom-Protocol-\n&gt; centric system with a load-testing REST client that incorporates\n&gt; collection delete, does not need re-coding in the event of the system\n&gt; changing.  If it does need re-coding, then it cannot be a REST client,\n&gt; by definition.\n\nRight.\n\n\nJan\n\n&gt; \n&gt; A tightly-coupled client of any sort, even an implementation-specific\n&gt; load tester, fails to achieve REST if the collection-delete is hard-\n&gt; coded within.  Xforms for example, allows the server to simply define a\n&gt; new &lt;model&gt;, within hypertext, dynamically updating all clients when\n&gt; they next refresh -- without changing the UI (machine or human).\n&gt; \n&gt; So a load-testing REST client would just be driving an Xforms interface\n&gt; dynamically.  Refreshing the Xform can reflect the reconfiguration of\n&gt; the system, without the load-tester needing to care.  It&#39;s driving the\n&gt; same form, which now happens to have a different &lt;model&gt;.\n&gt; \n&gt; Hard-coding within the client defeats the purpose of the hypertext\n&gt; constraint, so the result is not a Uniform REST Interface.\n&gt; \n&gt; -Eric\n&gt; \n&gt; * I wouldn&#39;t necessarily consider a load tester to be a valid use-case\n&gt; for REST.  I&#39;d hard-code it, since that hard-coding amounts to unit\n&gt; tests.  REST trades off the efficiencies that a protocol-exercising\n&gt; client likely requires.\n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}