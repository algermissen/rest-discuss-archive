{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"N6sKBVQbK0ofpwwKbkdkWpFOMUkQNhkjc-FudMjzesm0-a4oOJhlXDXxLyc_IPGRDwFYtSczVL9jqTdWkKfHWqMxf0B7pLE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237433697","msgId":12249,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGI1NDhkZjY1MDkwMzE4MjAzNHQ3Yjk3ZWE2NnI0MTY1MTdlMTUxZTQ2NDM5QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzE4MjEwNTI3LmZlNDJkYWZlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgkgPDUwMzdiNmU0MDkwMzE4MDk1N2c3MGMyNmQ1OHE2ZmNkODllY2JkMjMwYzk3QG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE4MTUxOTM2LjQ5MzM5ZmU0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JIDw1MDM3YjZlNDA5MDMxODE0MjVwNjZjYTU3OGV1ZjY1YjM0MDI3Y2RjYjhhZUBtYWlsLmdtYWlsLmNvbT4JIDwyMDA5MDMxODE2MzYwMS40MDQ3ZDA2Yi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CSA8NTAzN2I2ZTQwOTAzMTgxNjM4bjU1YWFjN2UwbjM3ZDIyZGMzYmMxNGIxNzBAbWFpbC5nbWFpbC5jb20+CSA8MjAwOTAzMTgyMTA1MjcuZmU0MmRhZmUuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":12248,"nextInTopic":12250,"prevInTime":12248,"nextInTime":12250,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"Eric:  If you are removing one resource by manipulating some other resource, then you haven t designed a uniform interface.  REST is about performing","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47354 invoked from network); 19 Mar 2009 03:35:00 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m5.grp.sp2.yahoo.com with QMQP; 19 Mar 2009 03:35:00 -0000\r\nX-Received: from unknown (HELO mail-bw0-f171.google.com) (209.85.218.171)\n  by mta2.grp.re1.yahoo.com with SMTP; 19 Mar 2009 03:34:58 -0000\r\nX-Received: by bwz19 with SMTP id 19so315091bwz.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 18 Mar 2009 20:34:58 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.104.140 with SMTP id p12mr1708080fao.7.1237433697946; Wed, \n\t18 Mar 2009 20:34:57 -0700 (PDT)\r\nIn-Reply-To: &lt;20090318210527.fe42dafe.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t &lt;5037b6e40903180957g70c26d58q6fcd89ecbd230c97@...&gt;\n\t &lt;20090318151936.49339fe4.eric@...&gt;\n\t &lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt;\n\t &lt;20090318163601.4047d06b.eric@...&gt;\n\t &lt;5037b6e40903181638n55aac7e0n37d22dc3bc14b170@...&gt;\n\t &lt;20090318210527.fe42dafe.eric@...&gt;\r\nDate: Wed, 18 Mar 2009 23:34:57 -0400\r\nX-Google-Sender-Auth: d7ff08517a6b8767\r\nMessage-ID: &lt;b548df650903182034t7b97ea66r416517e151e46439@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Assaf Arkin &lt;assaf@...&gt;, Dong Liu &lt;edongliu@...&gt;, \n\tRest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=69164307; y=9yyRS1etmXNdCcq8b1qNxfNI3t8_3mDvaLtaHpnD9d0f\r\nX-Yahoo-Profile: mamund\r\n\r\nEric:\n\n&lt;snip&gt;\nIf you are removing one resource by manipulating some other r=\r\nesource,\nthen you haven&#39;t designed a uniform interface.  REST is about\nperf=\r\norming each discrete action against a resource by manipulating\nthat resourc=\r\ne directly at its URI.  Not some other URI.  This is\nfundamental.\n&lt;/snip&gt;\n\n=\r\nDo I understand that you believe non-canonical URIs are not REST-ful?\n\n/cur=\r\nrent-weather\n/weather/2009/03/19\n\nmca\nhttp://amundsen.com/blog/\n\n\n\n\nOn Wed,=\r\n Mar 18, 2009 at 23:05, Eric J. Bowman &lt;eric@...&gt; wrote:\n&gt; Ass=\r\naf Arkin wrote:\n&gt;\n&gt;&gt;\n&gt;&gt; &gt; If an API doesn&#39;t implement DELETE, and also does=\r\nn&#39;t use POST for\n&gt;&gt; &gt; anything but deletion (single or batch), and the opti=\r\nons are\n&gt;&gt; &gt; presented in an HTML form then yes, it&#39;s a uniform interface.\n=\r\n&gt;&gt; &gt; However, once DELETE is also implemented, or if POST is used for\n&gt;&gt; &gt; =\r\nanything else like accepting content uploads, the interface is no\n&gt;&gt; &gt; long=\r\ner uniform, unless and until the previous usage of POST to\n&gt;&gt; &gt; delete is d=\r\neprecated.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; What would be the litmus test?\n&gt;&gt;\n&gt;\n&gt; Each request meth=\r\nod should map to one and only one action, each action\n&gt; should map to one a=\r\nnd only one method, each method should mean the same\n&gt; thing for all resour=\r\nces controlled by the application. =A0This results in\n&gt; a &quot;consistent set o=\r\nf semantics for all resources&quot; and avoids the\n&gt; problems of the early Web w=\r\nhich precluded caching, as per Fielding\n&gt; 5.1.4.\n&gt;\n&gt;&gt;\n&gt;&gt; &gt; The fact remains=\r\n, that only the use of the DELETE method on a\n&gt;&gt; &gt; URI-by- URI basis is vis=\r\nible to intermediaries. =A0This is the only\n&gt;&gt; &gt; way to prevent the user wh=\r\no requested the deletion from reloading\n&gt;&gt; &gt; the deleted content from cache=\r\n. =A0Except, of course, to not cache\n&gt;&gt; &gt; anything -- thereby defeating the=\r\n entire premise of using REST to\n&gt;&gt; &gt; begin with...\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; The example th=\r\nis thread started from creates a unique resource using\n&gt;&gt; PUT only to immed=\r\niately discard it using DELETE, without ever\n&gt;&gt; retrieving that resource.\n&gt;=\r\n&gt;\n&gt;\n&gt; Presumably, the user has retrieved the unique entries to be deleted, =\r\nin\n&gt; order to know they need deletion. =A0If I send the server a list of UR=\r\nLs\n&gt; to be deleted, or create a &quot;delete factory&quot; resource, then I&#39;m not\n&gt; t=\r\nransferring a representation of any application state -- no matter if\n&gt; it&#39;=\r\ns retrieved or not.\n&gt;\n&gt;&gt;\n&gt;&gt; I provided some justification for why it would =\r\nbe better to replace\n&gt;&gt; the PUT/DELETE pair with a POST, likely against a r=\r\nesource that will\n&gt;&gt; never be retrieved. I think that falls under the unifo=\r\nrm interface.\n&gt;&gt;\n&gt;\n&gt; No, in a uniform interface, an action is taken against=\r\n a target URI.\n&gt; If the resource to be deleted has a URI, then a DELETE req=\r\nuest is made\n&gt; against that URI -- not some other URI and/or some other met=\r\nhod. =A0Your\n&gt; POST solution consists of multiple instructions to the serve=\r\nr, not a\n&gt; representation of an application state. =A0That&#39;s RPC, not REST.=\r\n\n&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m not interested in forcing caching down the throat of this use\n=\r\n&gt;&gt; case: the only interesting resources we operate on are never\n&gt;&gt; retrieve=\r\nd. So strawman aside, why is this use of POST not uniform\n&gt;&gt; interface?\n&gt;&gt;\n=\r\n&gt;\n&gt; This is no strawman argument. =A0If, in order for an API to function as=\r\n\n&gt; its developer intends, caching must be disabled: =A0then the developer\n&gt;=\r\n must ask himself if his API is RESTful. =A0&quot;Do you Etag?&quot; =A0If you can&#39;t\n=\r\n&gt; cache representations of the individual resources you intend to subject\n&gt;=\r\n to batch delete, in order to make batch delete work, then you&#39;ve\n&gt; obvious=\r\nly broken the uniform interface constraint. =A0If you hadn&#39;t,\n&gt; you&#39;d be ab=\r\nle to cache without it breaking your API.\n&gt;\n&gt; You&#39;re saying that the &quot;only =\r\ninteresting resources we operate on&quot;\n&gt; doesn&#39;t include the individual resou=\r\nrces making up the delete batch.\n&gt; I&#39;m saying that yes, those individual re=\r\nsources *are* the interesting\n&gt; resources, and it&#39;s *those* URIs we want to=\r\n DELETE, not some other URI\n&gt; acting as a temporary stand-in.\n&gt;\n&gt;&gt;\n&gt;&gt; Separ=\r\nately, cache control has provisions for preventing clients from\n&gt;&gt; reloadin=\r\ng deleted content, and often enough, the deleted content we\n&gt;&gt; want them to=\r\n forget is not deleted by them. So you can cache\n&gt;&gt; resources and be able t=\r\no magically remove not by DELETE and be very\n&gt;&gt; uniform interface about it.=\r\n\n&gt;&gt;\n&gt;\n&gt; The only intermediaries of interest here, are those between the use=\r\nr\n&gt; who requests the DELETE and the server. =A0No other user requested the\n=\r\n&gt; deletion, though -- the only person who might wish to confirm that an\n&gt; o=\r\nffensive comment has been removed is the moderator who decided to\n&gt; remove =\r\nit. =A0When that moderator reloads the offensive comment, or the\n&gt; thread t=\r\nhat used to contain it, the deleted comment should never, ever\n&gt; appear. =\r\n=A0This is very, very simple to accomplish -- explicitly DELETE\n&gt; the URI a=\r\nssigned to the offensive content.\n&gt;\n&gt; This does nothing about keeping other=\r\n users from continuing to see the\n&gt; comment until its cache-control values =\r\nexpire. =A0But those users didn&#39;t\n&gt; request the DELETE, either. =A0In a bat=\r\nch-delete situation which bypasses\n&gt; the DELETE method, nothing is visible =\r\nto intermediaries, and any cached\n&gt; resource won&#39;t be expired, leading the =\r\nhypothetical moderator who wants\n&gt; to confirm the deletion to see the resou=\r\nrce is still there, try\n&gt; deleting it again, get a failure message, and bec=\r\nome very confused.\n&gt;\n&gt; If you are removing one resource by manipulating som=\r\ne other resource,\n&gt; then you haven&#39;t designed a uniform interface. =A0REST =\r\nis about\n&gt; performing each discrete action against a resource by manipulati=\r\nng that\n&gt; resource directly at its URI. =A0Not some other URI. =A0This is f=\r\nundamental.\n&gt;\n&gt; -Eric\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo!=\r\n Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}