{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"iFUl11AlErB9qlY21ZIjKzyt_PEQATaWvpVosfSTF-7ULqwg8ta-vhmHy_gDfI8KPCwQnwsrWNRWxds5u1b3hkxOdPp2QAQpxJw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Thinking about REST and HTTP","postDate":"1276460444","msgId":15652,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluLXdVTmJTUGNBTFZxemVfMy1TbGRfRnU2S3N5V2ZGZEJkaDlPekBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGh2MGlxMitxNjFsQGVHcm91cHMuY29tPg==","referencesHeader":"PEFBTkxrVGlseVZ3NGQ3dTlmY2oyWXB4bmR6Ql9SVmY0WnRsNlZxYjN5X3VHSEBtYWlsLmdtYWlsLmNvbT4JPGh2MGlxMitxNjFsQGVHcm91cHMuY29tPg=="},"prevInTopic":15650,"nextInTopic":15657,"prevInTime":15651,"nextInTime":15653,"topicId":15365,"numMessagesInTopic":52,"msgSnippet":"Thanks William for the detailed response. I will read and digest. As far as service contract and such. I really want to think outside the box and limit the","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 62328 invoked from network); 13 Jun 2010 20:20:46 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m13.grp.re1.yahoo.com with QMQP; 13 Jun 2010 20:20:46 -0000\r\nX-Received: from unknown (HELO mail-vw0-f47.google.com) (209.85.212.47)\n  by mta3.grp.sp2.yahoo.com with SMTP; 13 Jun 2010 20:20:46 -0000\r\nX-Received: by vws1 with SMTP id 1so928152vws.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 13 Jun 2010 13:20:45 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.183.198 with SMTP id ch6mr2008297qcb.243.1276460445384; \n\tSun, 13 Jun 2010 13:20:45 -0700 (PDT)\r\nX-Received: by 10.229.232.5 with HTTP; Sun, 13 Jun 2010 13:20:44 -0700 (PDT)\r\nIn-Reply-To: &lt;hv0iq2+q61l@...&gt;\r\nReferences: &lt;AANLkTilyVw4d7u9fcj2YpxndzB_RVf4Ztl6Vqb3y_uGH@...&gt;\n\t&lt;hv0iq2+q61l@...&gt;\r\nDate: Sun, 13 Jun 2010 13:20:44 -0700\r\nMessage-ID: &lt;AANLkTin-wUNbSPcALVqze_3-Sld_Fu6KsyWfFdBdh9Oz@...&gt;\r\nTo: William Martinez Pomares &lt;wmartinez@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: Thinking about REST and HTTP\r\nX-Yahoo-Group-Post: member; u=210009313; y=hnizgUn5g1NjTIL8WpxZjSoPOiJbNnAQW19tJSX02XOZQGpgaq8\r\nX-Yahoo-Profile: glenn_block\r\n\r\nThanks William for the detailed response. I will read and digest.\n\nAs far as service contract and such. I really want to think outside\nthe box and limit the possibilities to what we have today. Start with\nwhat the ideal experience would be and then work our way back. Then we\ncan see what we can do and how that fares against our current\ninfrastructure.\n\nMake sense?\nGlenn\n\nOn 6/12/10, William Martinez Pomares &lt;wmartinez@...&gt; wrote:\n&gt; Hello Glen.\n&gt; As I just posted a comment with some hint about how to evaluate a\n&gt; toolchest/framework, I may want to open another lead here.\n&gt;\n&gt; One way is to actually look at how other frameworks (mostly java I hear)\n&gt; deal with the idea. The other way is to actually work on understanding the\n&gt; REST style, why the interaction is how it is, and what happens in the\n&gt; network.\n&gt;\n&gt; Why do I say so? Because the successful API definition depends on that\n&gt; understanding and in the goal you are trying achieve. Bear with me please:\n&gt;\n&gt; 1. REST explains the constrains you impose to your architecture to allow\n&gt; better performance, reliability, visibility, scalability for large grain\n&gt; hypermedia transfer applications in a networked solutions.\n&gt;\n&gt; 2. A RESTFul service is an idea of using the guidelines of REST to expose\n&gt; services on web. Some ways work better and attach to more constrains that\n&gt; others, but in general the idea is to have one initial URI, starting point\n&gt; to a set of states, which transitions are governed by hyperlinks, and whose\n&gt; actions are focused in manipulating resources using a standard interface\n&gt; (HTTP methods).\n&gt;\n&gt; 3. The constrains include self-description of messages, cache support,\n&gt; client/server separation of concerns and possible code on demand support.\n&gt; And, of course, use of Hypermedia to define and control application state\n&gt;\n&gt; 4. In WCF, one important thing is the generic interface. That is, the\n&gt; service Endpoint (Address, binding and contract), down to the binding\n&gt; elements. Behind all that, is a description of interaction, and API\n&gt; definition. How to match that to the REST service? Interesting question.\n&gt;\n&gt; 5. Let&#39;s start on the server side.\n&gt;  a. One first thing is the possibility to define a serviceEndpoint as\n&gt; unique, meaning just one URI to start it all.\n&gt;  b. The other need is of course the ability to produce different kinds of\n&gt; media types to serve representations. If the idea is to avoid a bare-bones\n&gt; implementation for developers, we may want to abstract the content\n&gt; negotiation so it is somehow automatic. The client will request what can be\n&gt; served, or request some particular representation. On server side we only\n&gt; need to define the representation source and transformation. (say, Mr. WCF,\n&gt; this record in database you can publish it as JSON, XML or URLEncoded, here\n&gt; is the mapping, take care of it when requested, thanks).\n&gt;  c. What about defining the resources and possible state engine? Even\n&gt; setting an URI generation template. All that to add the generated URIs into\n&gt; the representations. Of course, for each resource type, define the HTTP\n&gt; operations. See next point.\n&gt;  d. We only support HTTP Methods. So, no [OperationContract] String\n&gt; sayHello(String name); things. sayHellow is an internal method you can use\n&gt; internally, but that RPC stuff may be heresy in REST world (nor for some, I\n&gt; know). But it may be [OperationContract(HTTPMethod=POST)] String\n&gt; sayHello(String body); where the String argument is the body sent in the\n&gt; post and the returned String the response. All the other POST metadata and\n&gt; control may be defined with other artifacts. If you want to excel, you can\n&gt; design that to use any protocol, not just HTTP.\n&gt;  e. All that means, all the HTTP plumbing is hidden, plus an easier way to\n&gt; provide automatic representations control, metadata control and response.\n&gt;\n&gt; 6. What about the client? Almost same thing. In the ideal world clients are\n&gt; given just one URI, and build dynamically their path from there on. In real\n&gt; world, they usually know what are the steps and the dynamic URIs (hypermedia\n&gt; usage) is to identify specific instances of already known expected types.\n&gt; Any Ideas to improve that? A nice client that runs by itself and starts\n&gt; following links and things, just stopping for asking me about data or decide\n&gt; on options/path here and there, would be nice. Not surprisingly that\n&gt; describes a browser.\n&gt;\n&gt; 7. But all I have said is too nailed to the grown. On the high side, the\n&gt; idea is to allow client and server independent evolution since no coupling\n&gt; is done at interface level. That calls for an automatic interaction thing\n&gt; that allows me to focus on resource and representation definition, plus the\n&gt; state map, and on client side to worry about a goal definition. Caching,\n&gt; gateways, all that is invisible.\n&gt;\n&gt; 8. There is something else, last thing. The layered constrain in REST. The\n&gt; idea is that you can have interim nodes, that may even parse and process\n&gt; partially the payload of the message. In this case, client only sees the\n&gt; next layer, and that one may see the next one.\n&gt;\n&gt; Again, I suggest you to start taking a look at the real implementations that\n&gt; are done bare-bones, understanding the idea of the style, and see if that\n&gt; fits into WCF generic definition or not.\n&gt;\n&gt; Cheers.\n&gt;\n&gt; William Martinez Pomares\n&gt;\n&gt;\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, Glenn Block &lt;glenn.block@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Hi guys\n&gt;&gt;\n&gt;&gt; I&#39;ve been trolling for a few weeks :-) I work on the WCF team at\n&gt;&gt; Microsoft.\n&gt;&gt; We&#39;re currently in the very early stages of planning for new apis for\n&gt;&gt; supporting pure REST and HTTP style development. Our goal is to create\n&gt;&gt; something simple, lightweight and true to form. We are looking provide a\n&gt;&gt; natural API both for the service author and for the consumer. This not an\n&gt;&gt; attempt to simply retrofit onto a SOAP based model.\n&gt;&gt;\n&gt;&gt; It would be great to hear thoughts you guys have on what would be the\n&gt;&gt; ideal\n&gt;&gt; developer experience for using REST. Also if you&#39;d like to be involved\n&gt;&gt; we&#39;d\n&gt;&gt; welcome the feedback.\n&gt;&gt;\n&gt;&gt; Regards\n&gt;&gt; Glenn\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n\n-- \nSent from my mobile device\n\n"}}