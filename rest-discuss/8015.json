{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":276981344,"authorName":"Ryan J. McDonough","from":"Ryan J. McDonough &lt;ryan@...&gt;","profile":"damnhandy2000","replyTo":"SENDER","senderId":"7911xgz6qycnuaVZ78tO8mdXKPpLJ5thfkPHB6qmZ8P9DsNeI3gs5aiImJjGwQ2KNOeCMukHykgN8nEPDTfoboWEJwjtX_OMIl8Walw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] New REST framework for Java","postDate":"1172591317","msgId":8015,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDkwREE3Qjc3LUVBNkQtNDdEMy1BMkFDLTY5QUNCMDg4REFCRkBkYW1uaGFuZHkuY29tPg==","inReplyToHeader":"PDA4ODQ4QTRDLUZFRUEtNDA1NC04Q0ZGLTdFNjJBNEQ5OTIwRUBibHVlem9vLm9yZz4=","referencesHeader":"PGVydmJ1cStsNHBsQGVHcm91cHMuY29tPiA8MDg4NDhBNEMtRkVFQS00MDU0LThDRkYtN0U2MkE0RDk5MjBFQGJsdWV6b28ub3JnPg=="},"prevInTopic":8014,"nextInTopic":8019,"prevInTime":8014,"nextInTime":8016,"topicId":7988,"numMessagesInTopic":32,"msgSnippet":"Hi Chris, Thanks for your questions, I ve addressed some of you question below: ... RESTEasy uses a series of RepresenttionHandlers which take of that. The","rawEmail":"Return-Path: &lt;ryan@...&gt;\r\nX-Sender: ryan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 8769 invoked from network); 27 Feb 2007 15:48:08 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m47.grp.scd.yahoo.com with QMQP; 27 Feb 2007 15:48:08 -0000\r\nReceived: from unknown (HELO nz-out-0506.google.com) (64.233.162.238)\n  by mta9.grp.scd.yahoo.com with SMTP; 27 Feb 2007 15:48:07 -0000\r\nReceived: by nz-out-0506.google.com with SMTP id z6so1604240nzd\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 27 Feb 2007 07:47:33 -0800 (PST)\r\nReceived: by 10.64.131.4 with SMTP id e4mr10916942qbd.1172591253711;\n        Tue, 27 Feb 2007 07:47:33 -0800 (PST)\r\nReturn-Path: &lt;ryan@...&gt;\r\nReceived: from ?10.1.4.70? ( [68.165.230.2])\n        by mx.google.com with ESMTP id e18sm3313776qba.2007.02.27.07.47.33;\n        Tue, 27 Feb 2007 07:47:33 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nIn-Reply-To: &lt;08848A4C-FEEA-4054-8CFF-7E62A4D9920E@...&gt;\r\nReferences: &lt;ervbuq+l4pl@...&gt; &lt;08848A4C-FEEA-4054-8CFF-7E62A4D9920E@...&gt;\r\nX-Gpgmail-State: !signed\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;90DA7B77-EA6D-47D3-A2AC-69ACB088DABF@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 27 Feb 2007 10:48:37 -0500\r\nTo: rest-discuss@yahoogroups.com\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Ryan J. McDonough &lt;ryan@...&gt;\r\nSubject: Re: [rest-discuss] New REST framework for Java\r\nX-Yahoo-Group-Post: member; u=276981344; y=-tQd9VklbdNT-2VBXYioIfScNBKhmZHDCPXjwcQZlm10eV766_4CSA\r\nX-Yahoo-Profile: damnhandy2000\r\n\r\nHi Chris,\n\nThanks for your questions, I&#39;ve addressed some of you question below:\n\nOn Feb 27, 2007, at 4:42 AM, Chris Burdess wrote:\n\n&gt;\n&gt;\n&gt; Unclear as to how representations are generated. Where does the  \n&gt; content type get selected? How do you do content/language negotiation?\n\nRESTEasy uses a series of RepresenttionHandlers which take of that.  \nThe RepresenttionHandler is selected by mediaType attribute on the  \nResponse or Representation annotations. It defaults to application/ \nxml and the JAXBRepresenttionHandler is used by default.\n\n&gt;\n&gt; You confusingly talk about contactId being a URLParam when it is a  \n&gt; part of the URL path and not a parameter.\n\nYep, typo there.\n\n&gt;\n&gt; How do you do orthogonal request processing (authentication,  \n&gt; authorisation, transformation)?\n\nThe framework was designed to work within a servlet container so that  \nit can utilize the authorization and authentication mechanisms of the  \napplication server. My intent has never been to be able to run  \noutside of a Java 5 EE app server.  Not sure what you mean by  \ntransformation.\n\n&gt;\n&gt; How do you map different parts of the namespace to the same component?\n&gt;\n&gt; What, for instance, do GETs to the following resources result in:\n&gt;\n&gt;   http://localhost/resteasy/contacts/12345/something\n\nYou could get an XML document that represents &quot;something&quot; that is a  \nmember of the contact 12345. It could map to the following Java Method:\n\n@HttpMethod(GET)\npublic Something getSomethingFromContact(URIParam(&quot;contactId&quot;) Long id);\n\n&gt;   http://localhost/resteasy/contacts/12345?myparam=whatever\n\nYou could use &quot;myparam&quot; as a modifier:\n\n@HttpMethod(GET)\n@Response(mediaType=&quot;application/xml&quot;)\npublic Contact getContact(@URIParam(&quot;contactId&quot;) Long id, @QueryParam \n(&quot;myparam&quot;) String myparam);\n\nThis value could instruct the service to return a Contact instance  \nthat includes additional details, etc.\n&gt;\n&gt; Current REST thinking is that you update a contact by using the PUT  \n&gt; method, why do you use POST in your example?\n\nThere are varying opinions on that, and some of the examples put  \nforth by Sun in in their JAX-WS REST examples would have you believe  \nthat updates should be done via POST:\n\nhttp://java.sun.com/developer/technicalArticles/WebServices/restful/\n\nI&#39;ve read plenty of other article touting the same sort of thing.  \nAnother reason I&#39;m using POST is that not all HTTP clients can  \nsupport PUT or DELETE operations. My driver for developing RESTEasy  \nwas to create a framework that could be both truly RESTful (I am  \naware that it&#39;s not quite there yet) but can also be compatible with  \nlesser HTTP clients. RESTEasy grew out of trying to create a service  \nthat could plug into Adobe Flex or OpenLaszlo. The Flash player  \ndoesn&#39;t support PUT or DELETE, nor does Apple&#39;s Safari. RESTEasy can  \nuse POST + discriminator to accomodate these clients.\n\n&gt; You don&#39;t give an example for creating a new contact or deleting an  \n&gt; existing contact. You don&#39;t give an example for searching for  \n&gt; contacts. Generally, in terms of a REST hello-world example, it  \n&gt; seems incomplete if not incorrect.\n\nYou are correct about that, and better examples are forthcoming.\n\n&gt;\n&gt; There&#39;s a lot of sludgy annotation markup the purpose of which is  \n&gt; unclear and possibly misleading.\n\nYou are correct that it does need better explanation.\n\nRyan-\n\n\n\n"}}