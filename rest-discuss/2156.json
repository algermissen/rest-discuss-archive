{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"W_baLs9RfdXlzOccZdr6_lB_tm8MMTqHZSCqjltQnBBW_J_f48USTYhvFliGDvNP6mkqg5nPbUjjda9LqTKhijk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Security in a REST world?","postDate":"1029974994","msgId":2156,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNENjQyQkQyLjgwOTA4MDBAYnJpdm8ubmV0Pg==","referencesHeader":"PDEzNzNENjM0MkZBMUQ0MTE5QTUxMDBFMDI5NDM3RjY0MDE1NUY4OUNAY2xpZmZvcmQuZGV2by5pbHguY29tPg=="},"prevInTopic":2154,"nextInTopic":2171,"prevInTime":2155,"nextInTime":2157,"topicId":2135,"numMessagesInTopic":17,"msgSnippet":"... Excellent points!  And I ve thought of them a lot, so they are totally valid concerns. Our security has to control the object itself, PLUS the content of","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 22 Aug 2002 00:09:39 -0000\r\nReceived: (qmail 18253 invoked from network); 22 Aug 2002 00:09:39 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m8.grp.scd.yahoo.com with QMQP; 22 Aug 2002 00:09:39 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.226)\n  by mta2.grp.scd.yahoo.com with SMTP; 22 Aug 2002 00:09:39 -0000\r\nReceived: (qmail 23840 invoked from network); 22 Aug 2002 00:09:38 -0000\r\nReceived: from unknown (HELO brivo.net) ([138.88.49.51]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 22 Aug 2002 00:09:38 -0000\r\nMessage-ID: &lt;3D642BD2.8090800@...&gt;\r\nDate: Wed, 21 Aug 2002 20:09:54 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.1b) Gecko/20020721\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Security in a REST world?\r\nReferences: &lt;1373D6342FA1D4119A5100E029437F640155F89C@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\n&gt; I assume you mean to the same URI.  That&#39;s wierd, in my experience.\n&gt; Usually,\n&gt; the test is &quot;what object can I access?&quot;, and &quot;through what methods?&quot;.  Then,\n&gt; the content, while a valid concern from a data integrity angle, is kind of\n&gt; orthogonal to security issues per se.  Makes me wonder if your application\n&gt; design\n&gt; has identified the right resources, and whether reanalysis might clear up\n&gt; your\n&gt; &quot;security&quot; problem.\n\nExcellent points!  And I&#39;ve thought of them a lot, so they are totally \nvalid concerns.\n\nOur security has to control the object itself, PLUS the content of the \nobject.  Take the example of PUTting an object from client to server. \nThe object&#39;s URI has no information about what the object is.  So the \nserver can not base security around the URI.  In our app, there is no \ndifference between /blah/foo and /lee/laa.  Both are merely primary \nkeys/URIs.  So to say that Seth can PUT /blah/foo/* isn&#39;t saying enough. \n  Because all the content is XML, I need to verify that what Seth is \nputting into /blah/foo/* makes sense.  The only real check I need to do \nfor a PUT is if the URI has been created yet or not.\n\nYou&#39;re right in that this (what I&#39;ve been talking about) is a data \nintegrity concern.  We&#39;ve been modeling it as &quot;Does Seth have permission \nto say that?&quot; with &#39;that&#39; being the contents of the HTTP message.\n\nThe issue is very hard with PUT, since we can&#39;t write a policy for the \nobject ID of the thing the client is PUTting since it doesn&#39;t exist yet. \n  We can only look at the incoming data to see if it is correct.\n\nOne way around this problem is to start using POST.  We can write a \npolicy around POST and the object the client is POSTing to.  Since that \nobject has to exist for the client to POST to it, we&#39;re able to control \naccess to it.  POST would then become this &quot;doIt&quot; type of action/method, \nwhich we&#39;d like to avoid.\n\nIn a SOAP world I don&#39;t have to worry too much about the contents of the \nmessage, since they have to be marshalled and unmarshalled by the SOAP \nengine anyway.  Any errors in content and formating will be picked up \nand result in a SOAP Fault of some sort.\n\nIn the REST world, I have to build that validation into every PUT.\n\nWith GET, it&#39;s a bit easier, since the object itself exists in the \nsystem.  I can place policies around existing objects easily to control \naccess via GET.\n\nIt&#39;s fun to find these real world issues involved with building a pure \nHTTP/RDF+XML system.  I&#39;m hoping that the solutions that come out of \nthis project will be reusable in the ever so wished for &quot;REST Toolkit&quot;.\n\nthoughts?\n\nthanks!\nSeth\n\n\n"}}