{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"SkjxvpW_4oFmsumeQOAl50nc0m8OQBbjHPdAiUY-S0xZXbb3m9IuwhbtUROmUWFGZPUow6d6ql8Cqcwaads2gaxF8lJmicwZ159Cj876Qw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Doc types for batch updates","postDate":"1275735822","msgId":15550,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwNjA1MDUwMzQyLjM5ODI0NTI0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PGh1YzFkcStwc2pvQGVHcm91cHMuY29tPg==","referencesHeader":"PGh1YzFkcStwc2pvQGVHcm91cHMuY29tPg=="},"prevInTopic":15548,"nextInTopic":15554,"prevInTime":15549,"nextInTime":15551,"topicId":15547,"numMessagesInTopic":10,"msgSnippet":"First, +1 to Craig s answer.  Second, I m answering Chuck backwards... ... Yes, XHTML + Xforms.  It sounds like you ve modeled your data as tabular, in which","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 76507 invoked from network); 5 Jun 2010 11:04:10 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m3.grp.sp2.yahoo.com with QMQP; 5 Jun 2010 11:04:10 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 5 Jun 2010 11:04:10 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 94D7C509B4;\n\tSat,  5 Jun 2010 07:04:09 -0400 (EDT)\r\nDate: Sat, 5 Jun 2010 05:03:42 -0600\r\nTo: &quot;chucking24&quot; &lt;chuck.hinson@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20100605050342.39824524.eric@...&gt;\r\nIn-Reply-To: &lt;huc1dq+psjo@...&gt;\r\nReferences: &lt;huc1dq+psjo@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Doc types for batch updates\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nFirst, +1 to Craig&#39;s answer.  Second, I&#39;m answering Chuck backwards...\n\nChuck Hinson wrote:\n&gt; \n&gt; Does anyone have any pointers to some examples of MIME types or\n&gt; application protocols that support this sort of model? \n&gt; \n\nYes, XHTML + Xforms.  It sounds like you&#39;ve modeled your data as\ntabular, in which case HTML&#39;s &lt;table&gt; markup has all the machine-\nreadable goodness you require.  Putting lists inside of table cells is\na powerful data structure, but editing it can be a pain.  If you&#39;re\nable to consider Xforms, it becomes a breeze.\n\nThe caveat is, the degree of difficulty to do batch requests in Xforms\nis significantly higher than it is for the separate-update paradigm.\nBut, I don&#39;t think you need batch-update requests.  If you insist, I\nstill think you should build your system without that optimization,\nfirst.  It&#39;ll be up and running faster, and give you a baseline to\nbenchmark your PUT optimization against to prove that it doesn&#39;t do\nmuch...\n\n&gt; \n&gt; Our current thinking is that we would send back a collection\n&gt; containing only the rows to be updated (or inserted/deleted). However\n&gt; (without getting down into the details) the back-end will need to be\n&gt; able to determine whether individual fields in each row actually need\n&gt; to be updated, so there is some question as to how to represent\n&gt; whether or not an individual field has been changed.  We would like\n&gt; to use the same document type both for getting the list entries and\n&gt; posting changes back to the list. \n&gt;\n\nI&#39;m not sure I understand.  Is your application steady-state made up of\nmultiple resources, i.e. each row has its own URL?\n\nIf a row has its own URL, then they&#39;re snippets of HTML, which are\nhopefully well-formed text/xml.  You include those into the steady-state\nwith Xforms.  Each snippet is now a &quot;Model&quot; as in MVC architecture\n(within the browser).  When you edit any row in the steady-state,\nXforms is altering its Model.  Xforms can submit each Model back to its\nown URI on the origin server as text/xml using PUT.\n\nBut you&#39;re saying that for whatever reason, the origin server must only\nreceive the changed fields.  In which case, what you want to send is a\ndelta, in which case the proper HTTP method is PATCH (Xforms can do\nthis, but the degree of difficulty of implementing your delta format is\nup there).\n\nBut you&#39;re saying that you want to use the same media type both ways,\nwhich rules out PATCH.  Note that borking PUT to have partial-update\nsemantics is not the answer (in REST, anyway).  But I&#39;m not sure what\nyou&#39;re saying, so maybe what I&#39;m going to say at the end will help...\n\n&gt;\n&gt; I&#39;m looking for examples of MIME types/protocols that work with\n&gt; collections of things, but support batch updates on collection\n&gt; members rather than requiring separate updates for each collection\n&gt; member.\n&gt; \n\nOne of the harder things about learning Chemistry is wrapping your head\naround the notion that glass is a liquid, despite its obvious solidity.\nThe Zen of REST is that by separating your application steady-states\nout into multiple sources (if each row indeed has its own URL), you have\nmade it possible to optimize the hell out of GET.  The result is what\n*appears* to be the gross inefficiency of multiple requests to update\nthat steady-state.\n\nHowever, the reality is that these inefficiencies pale in comparison to\nthe scalability gained by implementing the solution that wrought them.\nThe exception to this is a system whose traffic is expected to be\npredominantly PUT/POST.  Real-world systems are 99% GET traffic, so any\noptimizations you make to PUT (like batching) are severely limited in\ntheir overall impact.\n\n&gt;\n&gt; The use case is supporting user-defined lists with an arbitrary\n&gt; number of columns.  We have chosen to treat a list as a collection of\n&gt; row elements.  A browser-based client will support editing of the\n&gt; list in a tabular view.  In addition to adding and removing entire\n&gt; rows, users will also be able to edit individual fields within a\n&gt; row.  We would like to support a Save button that saves all changes\n&gt; (possibly across multiple rows) on the current screen in one http\n&gt; request.\n&gt;\n\nIt&#39;s pretty trivial to set up Xforms to do a separate PUT for each row\nthat&#39;s been changed, skipping the unchanged rows, triggered by a master\nsave button.  Making this save button batch, Xforms or otherwise, is\nnontrivial by comparison.  Even if it were less difficult, ask yourself\nhow much time you can cost-justify implementing an optimization to 1%\nof your traffic, making sure to weigh that against the fact that PUT is\nonly less optimal due to your optimization of GET, which bought you a\nlot more for less.  The *perceived* inefficiency is merely a tradeoff,\none that buys you a lot more than it costs you (unless you fight it).\n\n-Eric\n\n"}}