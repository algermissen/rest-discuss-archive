{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":270091071,"authorName":"Chris Burdess","from":"Chris Burdess &lt;dog@...&gt;","replyTo":"SENDER","senderId":"XU35Cqw4nUqrh67CLsWmxbKcU4tzC1ZohZv3BOb2OKMZu9oqXLsWA-JcIWMu5sovAxIFoSDM2gTDXt417FLaHGG4MpkmRQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] client-stateless-server","postDate":"1177579826","msgId":8259,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk5RUYxMEI3LUE5MjQtNDA3Mi05RTZELTI2OTRDQzAwQzk5OUBibHVlem9vLm9yZz4=","inReplyToHeader":"PGYwbnJmNytlc2FjQGVHcm91cHMuY29tPg==","referencesHeader":"PGYwbnJmNytlc2FjQGVHcm91cHMuY29tPg=="},"prevInTopic":8258,"nextInTopic":8260,"prevInTime":8258,"nextInTime":8260,"topicId":8254,"numMessagesInTopic":7,"msgSnippet":"... There s a bit of confusion here about the notion of state. It s OK for the server to have state, and for that state to be updated as a result of requests,","rawEmail":"Return-Path: &lt;dog@...&gt;\r\nX-Sender: dog@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 56869 invoked from network); 26 Apr 2007 09:30:39 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m40.grp.scd.yahoo.com with QMQP; 26 Apr 2007 09:30:39 -0000\r\nReceived: from unknown (HELO dinopsis.arachsys.com) (82.211.77.6)\n  by mta14.grp.scd.yahoo.com with SMTP; 26 Apr 2007 09:30:38 -0000\r\nReceived: from 82-69-92-124.dsl.in-addr.zen.co.uk ([82.69.92.124] helo=[10.0.1.2])\n\tby dinopsis.arachsys.com with asmtp (Exim 3.35 #1)\n\tid 1Hh0J4-0001zP-00; Thu, 26 Apr 2007 10:30:30 +0100\r\nIn-Reply-To: &lt;f0nrf7+esac@...&gt;\r\nReferences: &lt;f0nrf7+esac@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.2)\r\nX-Gpgmail-State: !signed\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;99EF10B7-A924-4072-9E6D-2694CC00C999@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 26 Apr 2007 10:30:26 +0100\r\nTo: siefert.david &lt;siefert.david@...&gt;\r\nX-Mailer: Apple Mail (2.752.2)\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Chris Burdess &lt;dog@...&gt;\r\nSubject: Re: [rest-discuss] client-stateless-server\r\nX-Yahoo-Group-Post: member; u=270091071\r\n\r\nsiefert.david wrote:\n&gt; Representational State Transfer should have all the details in a\n&gt; request so that a server can handle the request (thus any server in a\n&gt; farm that has the service can process a request that started at\n&gt; another server--scalable).  Wouldn&#39;t this mean that any form of a\n&gt; database that keeps state on the server and not the client, not be\n&gt; RESTful?\n&gt;\n&gt; As an example, it could be a shopping cart on Amazon.com.  Amazon.com\n&gt; stores the state of the shopping cart on the server so that when a\n&gt; customer logs in, they can see the items they have saved.  How is\n&gt; this RESTful?  State is being stored on the server, and any further\n&gt; request to the server had already depended on the fact that the prior\n&gt; requests setup the shopping cart to add items, etc.\n\nThere&#39;s a bit of confusion here about the notion of state. It&#39;s OK  \nfor the server to have state, and for that state to be updated as a  \nresult of requests, in fact it&#39;s quite normal. The issue in a REST  \ndesign is about application state and its relation to scalability,  \nspecifically that if a server is required to store transactional  \nstate that associates multiple request/response pairs with one  \nanother in a state machine, as with many Internet protocols like IMAP  \nor FTP, it has a negative effect on scalability and limits the number  \nof potential clients that can be served. Therefore in a REST system  \n(e.g. HTTP) all this transactional state is made available in each  \nrequest. For non-application functionality, it&#39;s OK for the client  \nand the server to share a secret, like the authenticated user&#39;s  \npassphrase. But generally, the plan is to expose any data related to  \napplication functionality as a resource, identified as a URL, and  \ndescribe the application as a set of operations that transfer data  \nrepresenting that resource to and from the server. So you wouldn&#39;t  \ndesign a shopping cart using a shared secret, e.g. a cookie that  \nholds an opaque identifier that identifies a record in some database  \naccessible to the server; you&#39;d design it as a shopping-cart resource  \nthat you can GET with its URL to see the current state of it  \n(assuming you have the authorisation to do so), and POST to with a  \nnew item to be added to it, etc.\n\n&gt; To be RESTful, I\n&gt; would think that each request would carry the list of items in the\n&gt; shopping cart.\n\nYou could do that (PUT the entire state of the shopping cart),  \nalthough it&#39;s not required to be RESTful. The RESTful part of it is  \nthat each shopping cart has a URL that you interact with by pushing  \nand pulling (bits of) shopping cart representation.\n\n"}}