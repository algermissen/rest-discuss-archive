{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":338780200,"authorName":"Kris Zyp","from":"Kris Zyp &lt;kris@...&gt;","profile":"kriszyp","replyTo":"SENDER","senderId":"T3ZkZjqAswi3faidBiGYo3zPKIAJ2SyNKg9P39ef0Iklol1kZTsq3_2-RWBlkr_6ettk7PgZ5alYKm7eV75dbTW1","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: [Jersey] Moved thread to rest-discuss / HATEOAS-via-HTTP: Which HTTP Method to use to follow link?","postDate":"1266949232","msgId":14877,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRCODQxQzcwLjkwOTAxMDhAc2l0ZXBlbi5jb20+","inReplyToHeader":"PDAxYWUwMWNhYjI1OCRkMzJmMDI2MCQ3OThkMDcyMCRAZXU+","referencesHeader":"PDAxOTIwMWNhYjIzOSQyOGI5ZGRiMCQ3YTJkOTkxMCQla2FyZ0BnbXgubmV0PiA8Rjk1NDYxM0EtOTNCMC00RTE3LUFBOTYtMzZEMTM0MDEyQjAyQG1hYy5jb20+IDwwMWFlMDFjYWIyNTgkZDMyZjAyNjAkNzk4ZDA3MjAkQGV1Pg=="},"prevInTopic":14843,"nextInTopic":14879,"prevInTime":14876,"nextInTime":14878,"topicId":14827,"numMessagesInTopic":27,"msgSnippet":"... Hash: SHA1 ... As Jan pointed it out, understanding navigation is media driven. In the JSON media realm, you can use JSON Schema to generically instruct a","rawEmail":"Return-Path: &lt;kris@...&gt;\r\nX-Sender: kris@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1903 invoked from network); 23 Feb 2010 18:26:09 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m5.grp.sp2.yahoo.com with QMQP; 23 Feb 2010 18:26:09 -0000\r\nX-Received: from unknown (HELO rs61.luxsci.com) (65.61.166.69)\n  by mta3.grp.re1.yahoo.com with SMTP; 23 Feb 2010 18:26:08 -0000\r\nX-Received: from [192.168.0.66] (97-126-206-10.slkc.qwest.net [97.126.206.10])\n\t(authenticated bits=0)\n\tby rs61.luxsci.com (8.13.8/8.13.7) with ESMTP id o1NIKdOE031579\n\t(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);\n\tTue, 23 Feb 2010 12:20:40 -0600\r\nMessage-ID: &lt;4B841C70.9090108@...&gt;\r\nDate: Tue, 23 Feb 2010 11:20:32 -0700\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.7) Gecko/20100111 Thunderbird/3.0.1\r\nMIME-Version: 1.0\r\nTo: Markus KARG &lt;markus@...&gt;\r\nCc: &quot;&#39;Jan Algermissen&#39;&quot; &lt;algermissen1971@...&gt;,\n        &quot;&#39;REST Discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;019201cab239$28b9ddb0$7a2d9910$%karg@...&gt; &lt;F954613A-93B0-4E17-AA96-36D134012B02@...&gt; &lt;01ae01cab258$d32f0260$798d0720$@eu&gt;\r\nIn-Reply-To: &lt;01ae01cab258$d32f0260$798d0720$@eu&gt;\r\nX-Enigmail-Version: 1.0.1\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------050600080309070503000903&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Kris Zyp &lt;kris@...&gt;\r\nSubject: Re: [rest-discuss] Re: [Jersey] Moved thread to rest-discuss / HATEOAS-via-HTTP:\n Which HTTP Method to use to follow link?\r\nX-Yahoo-Group-Post: member; u=338780200; y=3frdlPEX7p0fWN0Xlj30SU_MBLdGRGNV6a7dSe9V_uRuxg\r\nX-Yahoo-Profile: kriszyp\r\n\r\n\r\n--------------050600080309070503000903\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n \n\n\nOn 2/20/2010 11:16 AM, Markus KARG wrote:\n&gt; \n&gt;\n&gt; &gt; &gt; As Roy Fielding pointed out several times, an API must not call\n&gt; &gt; itself RESTful as long as it is not applying HATEOAS. I want to\n&gt; support\n&gt; &gt; this constraint by adding HATEOASfulness to my future\n&gt; applications. One\n&gt; &gt; thing I just do not understand so far about HATEOAS-via-HTTP is (and\n&gt; &gt; what other people asked me when citing Fielding in this issue): How a\n&gt; &gt; client shall actually know which http method to use to follow a link\n&gt; &gt; received with the previous request to a RESTful server? Roy\n&gt; answered in\n&gt; &gt; his blog that the method could be read out of the last result. But\n&gt; &gt; actually how?\n&gt; &gt;\n&gt; &gt; This information is part of the hypermedia semantics specified (media\n&gt; &gt; type specification or link relation specification etc). Such a\n&gt; &gt; specification can either explicitly state the method to use (see RFC\n&gt; &gt; 5023 for example) or specify a hypermedia element that tells the\n&gt; client\n&gt; &gt; at runtime what method to use (e.g. HTML forms).\n&gt;\n&gt; I understand that with AtomPub RFC5023 specifies that. Call me dumb, but\n&gt; what to do if I am not using AtomPub but self-made service (like a\n&gt; web shop\n&gt; application)? How to do it then? For example, if I am writing a web\n&gt; shop, an\n&gt; that one allows to place an order using a POST. How to tell a client\n&gt; that it\n&gt; shall use that POST? I mean, *where* to put that information in a\n&gt; technical\n&gt; sense?\n&gt;\nAs Jan pointed it out, understanding navigation is media driven. In\nthe JSON media realm, you can use JSON Schema to generically instruct\na user agent how to navigate different JSON data structures (which may\nrepresent different sub-media types). You can write a JSON Schema that\ndescribes your data:\n\n{\n   name: &quot;Order&quot;,\n   links: [\n     rel: &quot;create&quot;,\n     href: &quot;/create_order&quot;,\n     method: &quot;POST&quot;\n   ],\n   properties: {\n      ...\n   }\n}\n\nThanks,\n\n- -- \nKris Zyp\nSitePen\n(503) 806-1841\nhttp://sitepen.com\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.9 (MingW32)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/\n \niEYEARECAAYFAkuEHHAACgkQ9VpNnHc4zAxU/gCglAiCEHugG0VNZWl1HfRlnpzj\nvz0An3k8UcK4f4oivLTjKEt49Imn0p3A\n=S5pq\n-----END PGP SIGNATURE-----\n\n\r\n--------------050600080309070503000903\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html; charset=ISO-8859-1&quot;\n http-equiv=&quot;Content-Type&quot;&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\n-----BEGIN PGP SIGNED MESSAGE----- &lt;br&gt;\nHash: SHA1 &lt;br&gt;\n&nbsp;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nOn 2/20/2010 11:16 AM, Markus KARG wrote:&lt;br&gt;\n&lt;span style=&quot;white-space: pre;&quot;&gt;&gt;&nbsp; &lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &gt; &gt; As Roy Fielding pointed out several times, an API must\nnot call&lt;br&gt;\n&gt; &gt; itself RESTful as long as it is not applying HATEOAS. I\nwant to&lt;br&gt;\n&gt; support&lt;br&gt;\n&gt; &gt; this constraint by adding HATEOASfulness to my future&lt;br&gt;\n&gt; applications. One&lt;br&gt;\n&gt; &gt; thing I just do not understand so far about\nHATEOAS-via-HTTP is (and&lt;br&gt;\n&gt; &gt; what other people asked me when citing Fielding in this\nissue): How a&lt;br&gt;\n&gt; &gt; client shall actually know which http method to use to\nfollow a link&lt;br&gt;\n&gt; &gt; received with the previous request to a RESTful server? Roy&lt;br&gt;\n&gt; answered in&lt;br&gt;\n&gt; &gt; his blog that the method could be read out of the last\nresult. But&lt;br&gt;\n&gt; &gt; actually how?&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; This information is part of the hypermedia semantics\nspecified (media&lt;br&gt;\n&gt; &gt; type specification or link relation specification etc).\nSuch a&lt;br&gt;\n&gt; &gt; specification can either explicitly state the method to use\n(see RFC&lt;br&gt;\n&gt; &gt; 5023 for example) or specify a hypermedia element that\ntells the&lt;br&gt;\n&gt; client&lt;br&gt;\n&gt; &gt; at runtime what method to use (e.g. HTML forms).&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; I understand that with AtomPub RFC5023 specifies that. Call me\ndumb, but&lt;br&gt;\n&gt; what to do if I am not using AtomPub but self-made service (like\na&lt;br&gt;\n&gt; web shop&lt;br&gt;\n&gt; application)? How to do it then? For example, if I am writing a\nweb&lt;br&gt;\n&gt; shop, an&lt;br&gt;\n&gt; that one allows to place an order using a POST. How to tell a\nclient&lt;br&gt;\n&gt; that it&lt;br&gt;\n&gt; shall use that POST? I mean, *where* to put that information in a&lt;br&gt;\n&gt; technical&lt;br&gt;\n&gt; sense?&lt;br&gt;\n&gt;&lt;/span&gt;&lt;br&gt;\nAs Jan pointed it out, understanding navigation is media driven. In&lt;br&gt;\nthe JSON media realm, you can use JSON Schema to generically instruct&lt;br&gt;\na user agent how to navigate different JSON data structures (which may&lt;br&gt;\nrepresent different sub-media types). You can write a JSON Schema that&lt;br&gt;\ndescribes your data:&lt;br&gt;\n&lt;br&gt;\n{&lt;br&gt;\n&nbsp;&nbsp; name: &quot;Order&quot;,&lt;br&gt;\n&nbsp;&nbsp; links: [&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; rel: &quot;create&quot;,&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; href: &quot;/create_order&quot;,&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; method: &quot;POST&quot;&lt;br&gt;\n&nbsp;&nbsp; ],&lt;br&gt;\n&nbsp;&nbsp; properties: {&lt;br&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...&lt;br&gt;\n&nbsp;&nbsp; }&lt;br&gt;\n}&lt;br&gt;\n&lt;br&gt;\nThanks,&lt;br&gt;\n&lt;br&gt;\n- -- &lt;br&gt;\nKris Zyp&lt;br&gt;\nSitePen&lt;br&gt;\n(503) 806-1841&lt;br&gt;\n&lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://sitepen.com&quot;&gt;http://sitepen.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n-----BEGIN PGP SIGNATURE-----\n&lt;br&gt;\nVersion: GnuPG v1.4.9 (MingW32)\n&lt;br&gt;\nComment: Using GnuPG with Mozilla - &lt;a class=&quot;moz-txt-link-freetext&quot; href=&quot;http://enigmail.mozdev.org/&quot;&gt;http://enigmail.mozdev.org/&lt;/a&gt;\n&lt;br&gt;\n&nbsp;&lt;br&gt;\niEYEARECAAYFAkuEHHAACgkQ9VpNnHc4zAxU/gCglAiCEHugG0VNZWl1HfRlnpzj\n&lt;br&gt;\nvz0An3k8UcK4f4oivLTjKEt49Imn0p3A\n&lt;br&gt;\n=S5pq\n&lt;br&gt;\n-----END PGP SIGNATURE-----\n&lt;br&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------050600080309070503000903--\r\n\n"}}