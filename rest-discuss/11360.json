{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331949899,"authorName":"Sebastien Lambla","from":"Sebastien Lambla &lt;seb@...&gt;","profile":"serialseb","replyTo":"SENDER","senderId":"mrAOD4HjkxLkVamMR89FBH6tsNpO-KhgeBtQg9hSdk_r1-wfzu3dAzKkSWPXO2a4VzQNk9Js_D1NOsRtgaXBTX8Hr9QzLynBPwIU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] REST caching versus RPC Local Caching","postDate":"1223325867","msgId":11360,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJMVTEwMi1XNTg2QTUwODhDQjk3NzkxNDIzOEYwQkI1MzkwQHBoeC5nYmw+","inReplyToHeader":"PDI3ODk4MC45MDY0NC5xbUB3ZWIyODMwNy5tYWlsLnVrbC55YWhvby5jb20+","referencesHeader":"PDI3ODk4MC45MDY0NC5xbUB3ZWIyODMwNy5tYWlsLnVrbC55YWhvby5jb20+"},"prevInTopic":11359,"nextInTopic":0,"prevInTime":11359,"nextInTime":11361,"topicId":11359,"numMessagesInTopic":2,"msgSnippet":"Thanks. I think your point about caching intermediaries is very salient. I have read about SOAP i.e. RPC implementations where (in order to improve","rawEmail":"Return-Path: &lt;seb@...&gt;\r\nX-Sender: seb@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 31341 invoked from network); 6 Oct 2008 20:44:28 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m53.grp.scd.yahoo.com with QMQP; 6 Oct 2008 20:44:28 -0000\r\nX-Received: from unknown (HELO blu0-omc1-s32.blu0.hotmail.com) (65.55.116.43)\n  by mta17.grp.scd.yahoo.com with SMTP; 6 Oct 2008 20:44:28 -0000\r\nX-Received: from BLU102-W58 ([65.55.116.8]) by blu0-omc1-s32.blu0.hotmail.com with Microsoft SMTPSVC(6.0.3790.3959);\n\t Mon, 6 Oct 2008 13:44:28 -0700\r\nMessage-ID: &lt;BLU102-W586A5088CB977914238F0BB5390@...&gt;\r\nReturn-Path: seb@...\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;_0eb8487a-7a78-4b3e-8458-32bcb149c369_&quot;\r\nTo: Sean Kennedy &lt;seandkennedy@...&gt;, Bill de hOra &lt;bill@...&gt;,\n\tRest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Mon, 6 Oct 2008 20:44:27 +0000\r\nImportance: Normal\r\nIn-Reply-To: &lt;278980.90644.qm@...&gt;\r\nReferences: &lt;278980.90644.qm@...&gt;\r\nMIME-Version: 1.0\r\nX-OriginalArrivalTime: 06 Oct 2008 20:44:28.0715 (UTC) FILETIME=[53BCB7B0:01C927F4]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Sebastien Lambla &lt;seb@...&gt;\r\nSubject: RE: [rest-discuss] REST caching versus RPC Local Caching\r\nX-Yahoo-Group-Post: member; u=331949899; y=omSaktZe3DC2ZqzgYIOSNYK_xqH-BIxoGcRVt0LBVXE2K5_r\r\nX-Yahoo-Profile: serialseb\r\n\r\n\r\n--_0eb8487a-7a78-4b3e-8458-32bcb149c369_\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\n\n    Thanks. I think your point about caching intermediaries is very salie=\r\nnt. I have read about SOAP i.e. RPC implementations where (in order to impr=\r\nove performance) they have implemented a local cache (where the server asyn=\r\nchronously pushes out change notifications to subscribed clients). The clie=\r\nnt then pulls down the updated data which saves on the client polling...   =\r\n How does this compare to RESTs cache intermediaries? I imagine scaling the=\r\n local cache model could be an issue?\n \nLocal caching is an internal optimi=\r\nzation per source-server. The closest equivalent to a distributed caching m=\r\nodel in REST (intermediates, usually reverse proxies) would be a memcache o=\r\nr similar DHT-based distributed object cache.\n \nThe main difference is that=\r\n cache invalidation has very constrained rules in HTTP which, if implemente=\r\nd correctly, solve issues in a much cleaner way. That said, internal cachin=\r\ng can be used in conjunction with a reverse proxy.\n \nAs for pushing notific=\r\nations to clients in a PubSub model, this does not necessarily cost less to=\r\n scale. See Roy&#39;s view on PubSub economy http://www.innoq.com/blog/st/2008/=\r\n09/fielding_on_the_beyond_rest_xm.html\n \nS\n________________________________=\r\n_________________________________\nGet all your favourite content with the s=\r\nlick new MSN Toolbar - FREE\nhttp://clk.atdmt.com/UKM/go/111354027/direct/01=\r\n/\r\n--_0eb8487a-7a78-4b3e-8458-32bcb149c369_\r\nContent-Type: text/html; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n.hmmessage P\n{\nmargin:0px;\npadding:0px\n}\nbody.hmmessa=\r\nge\n{\nFONT-SIZE: 10pt;\nFONT-FAMILY:Tahoma\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body class=3D&#39;=\r\nhmmessage&#39;&gt;&lt;BLOCKQUOTE dir=3Dltr style=3D&quot;MARGIN-RIGHT: 0px&quot;&gt;\n&lt;P style=3D&quot;F=\r\nONT-SIZE: 12pt; FONT-FAMILY: times new roman, new york, times, serif&quot;&gt;\n&lt;DIV=\r\n&gt;&nbsp;&nbsp;&nbsp; Thanks. I think your point about caching intermediaries=\r\n is very salient. I have read about SOAP i.e. RPC implementations where (in=\r\n order to improve performance) they have implemented a local cache (where t=\r\nhe server asynchronously pushes out change notifications to subscribed clie=\r\nnts). The client then pulls down the updated data which saves on the client=\r\n polling...&lt;BR&gt;&nbsp;&nbsp;&nbsp; How does this compare to RESTs cache inte=\r\nrmediaries? I imagine scaling the local cache model could be an issue?&lt;/DIV=\r\n&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;\n&lt;DIV dir=3Dltr&gt;Local caching is an int=\r\nernal optimization per source-server. The closest equivalent to a distribut=\r\ned caching model in REST (intermediates, usually reverse proxies) would be =\r\na memcache or similar DHT-based distributed object cache.&lt;/DIV&gt;\n&lt;DIV dir=3D=\r\nltr&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr&gt;The main difference is that cache invalidat=\r\nion has very constrained rules in HTTP which, if implemented correctly, sol=\r\nve issues in a much cleaner way. That said, internal caching can be used in=\r\n conjunction with a reverse proxy.&lt;/DIV&gt;\n&lt;DIV dir=3Dltr&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV d=\r\nir=3Dltr&gt;As for pushing notifications to clients in a PubSub model, this do=\r\nes not necessarily cost less to scale. See Roy&#39;s view on PubSub economy &lt;A =\r\nhref=3D&quot;http://www.innoq.com/blog/st/2008/09/fielding_on_the_beyond_rest_xm=\r\n.html&quot;&gt;http://www.innoq.com/blog/st/2008/09/fielding_on_the_beyond_rest_xm.=\r\nhtml&lt;/A&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr&gt;S&lt;/DIV&gt;&lt;br /&gt;&lt;hr =\r\n/&gt;Try Facebook in Windows Live Messenger! &lt;a href=3D&#39;http://clk.atdmt.com/U=\r\nKM/go/111354030/direct/01/&#39; target=3D&#39;_new&#39;&gt;Try it Now!&lt;/a&gt;&lt;/body&gt;\n&lt;/html&gt;\r\n--_0eb8487a-7a78-4b3e-8458-32bcb149c369_--\r\n\n"}}