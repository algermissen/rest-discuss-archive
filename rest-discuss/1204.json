{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"y3YCGt7pbW3rjyiERlb-8baGHGGgtiBcBKBdlCkPriUSg7pMirDoeh8nRWJfCUCZOU_YD9_tKn9XJ_1NqMIfpj_vC1IdBg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"&quot;Extreme Web Services&quot;","postDate":"1020461611","msgId":1204,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRDMwMjJCLkI3MzI5M0NEQHByZXNjb2QubmV0Pg=="},"prevInTopic":0,"nextInTopic":1205,"prevInTime":1203,"nextInTime":1205,"topicId":1204,"numMessagesInTopic":7,"msgSnippet":"Here is my rough counter-part to this document: http://www.extremeprogramming.org/rules.html I notice that Microsoft co-opted the term extreme web services","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_1); 3 May 2002 21:32:30 -0000\r\nReceived: (qmail 32649 invoked from network); 3 May 2002 21:32:30 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m5.grp.scd.yahoo.com with QMQP; 3 May 2002 21:32:30 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.scd.yahoo.com with SMTP; 3 May 2002 21:32:30 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g43LWPb17894\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 3 May 2002 14:32:25 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g43LWOe29292\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Fri, 3 May 2002 14:32:24 -0700\r\nMessage-ID: &lt;3CD3022B.B73293CD@...&gt;\r\nDate: Fri, 03 May 2002 14:33:31 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: &quot;Extreme Web Services&quot;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Perlmx-Spam: Gauge=, Probability=0%, Report=&quot;INTERNAL_HOST&quot;\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nHere is my rough counter-part to this document:\n\nhttp://www.extremeprogramming.org/rules.html\n\nI notice that Microsoft co-opted the term &quot;extreme web services&quot; in a\ntalk in February ... oh well.\n\n1. Loose coupling of implementations: Clients should not need to know\nanything about the object models of services and vice versa. It is\ntherefore almost never appropriate to generate an interface definition\nfor an extreme service from existing implementation code. The interface\nshould be chosen to maximize interoperability and extensibility, not to\nsimplify implementation.\n\n2. No Implicit Resources: If the server has some information that it is\nwilling to make available to the client then that information should be\nexposed as part of a URI-named resource. The client should not need to\nsubmit XML-encoded &quot;parameters&quot; or a &quot;query&quot; to get the information.\nThe means for getting the URI is discussed in other points.\n\n3. No Implicit State: If the client and server depend on a shared piece\nof information in order to communicate effectively then that piece of\ninformation should be given an address (usually by the server) and\nexposed as a web resource. Clients should be considered entirely \nstateless. The only thing they remember from one message to another are\nthings defined by the protocol, like authentication tickets -- not \nthings defined by the application, like purchase order numbers.\n\n4. No abuse of protocols or formats: Knowingly violating either the\nletter or the spirit of specifications degrades the value of those\nspecifications ot you and others. Most often if you read the\nspecifications you will learn that the creators anticipated your problem\nand made a provision for it. If not, the chances are strong that your\nproblem is out of scope for the protocol or format and maybe you should\nchoose another one or invent your own.\n\n5. Use standards where possible: HTTP is the standard Web protocol for\nthe manipulation of information. XML is the standard Web representation\nfor information. RDF is the standard representation for metadata. By\ndefault, you should use these. Use something else only when you have\nresearched these closely and have a clear sense of a limitation of one\nof these. Using something non-standard will be expensive for those\nbuilding client applications that will use your service. You should\nexplicitly justify that cost.\n\n7. Use URIs (typically URLs) to name things: URIs are better names than\nnumbers, UUIDs or other non-standard naming conventions. The first\nvirtue of URIs is that they are derived from a managed namespace so name\nclashes can be avoided merely by choosing only to use names that we each\nown. For instance if two companies merge their purchase orders will be\nuniquely named because the two companies would have formerly had unique\ndomain names. Whereas this is not necessarily true of integer-named\npurchase orders. Second, URIs provide an easy way to associate metadata\n(or &quot;plain data&quot;) with the named entity. Even if you do not need that\ntoday you may need it later.\n\n8. Use hyperlinks (URIs embedded in XML or HTTP headers) to guide the\nclient through the service: Do not require it to build up state on the\nclient side. The state should be encapsulated into resources that the\nclient creates. As long as it keeps track of one URI, it should be\npossible for it to re-discover all of the relevant state merely by\nfollowing hyperlinks. A query is only better than hyperlinks as an\noptimization and when the client is likely to have a priori knowledge\nthat must be plugged into the service (e.g. a dress size).\n\n9. Given the choice between a generic interface and a specific one, use\nthe generic one if your goal is to maximize interoperability: It may\ntake more effort to re-organize your information into the generic\ninterface but that effort will usually pay off for your clients. For\nexample, XML is a generic data representation and is sometimes not quite\nas efficient as application-specific notations. Nevertheless it is\nusually the right choice because the client can implement one XML parser\ninstead of hundreds of parsers for application-specific notations. The\nsame sort of argument can be made for HTTP.\n\n10. Disclaimer meta-rule: the real world is complicated and there are\nmany broken\nsoftware products and business environments out there. Break rules when\nyou need to do so -- but understand the costs of breaking them and\ndocument your reasons.\n\n"}}