{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184797058,"authorName":"Benjamin Carlyle","from":"Benjamin Carlyle &lt;benjamincarlyle@...&gt;","profile":"fuzzybsc","replyTo":"SENDER","senderId":"4kfDPQLC9GtsPsKKRa782oAQ-o1K6yWaIF4EhJYkz-OWzkzhaZK2VLVnG6MCq7ZXB7VFnVjV65u9FevZYduwK_jAcYnqIbWUyDJO4jP91J6anRNB35M9zNM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Meaning of stateless (was: Avoiding\tre-POSTS)","postDate":"1145095893","msgId":5972,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExNDUwOTU4OTMuNjk4OC4yNi5jYW1lbEBsb2NhbGhvc3QubG9jYWxkb21haW4+","inReplyToHeader":"PDM0M2VjYjNlMDYwNDE0MTIzMGc0MWMxMzIxY25iMmE5MzZjY2JmNTNkYzdkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQ0M0ZGMzFDLjgwMDAxMDlAdmVpY29uLmNvbT4JIDwzNDNlY2IzZTA2MDQxNDEyMzBnNDFjMTMyMWNuYjJhOTM2Y2NiZjUzZGM3ZEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":5957,"nextInTopic":5977,"prevInTime":5971,"nextInTime":5973,"topicId":5949,"numMessagesInTopic":44,"msgSnippet":"... What happens inside the server usually has nothing to do with REST. It can access whatever data it chooses to return the resource state. You can think of","rawEmail":"Return-Path: &lt;benjamincarlyle@...&gt;\r\nX-Sender: benjamincarlyle@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 99189 invoked from network); 15 Apr 2006 10:12:37 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m22.grp.scd.yahoo.com with QMQP; 15 Apr 2006 10:12:37 -0000\r\nReceived: from unknown (HELO mail05.syd.optusnet.com.au) (211.29.132.186)\n  by mta6.grp.scd.yahoo.com with SMTP; 15 Apr 2006 10:12:36 -0000\r\nReceived: from c210-49-93-165.rochd2.qld.optusnet.com.au (c210-49-93-165.rochd2.qld.optusnet.com.au [210.49.93.165])\n\tby mail05.syd.optusnet.com.au (8.12.11/8.12.11) with ESMTP id k3FABXaF002692;\n\tSat, 15 Apr 2006 20:11:33 +1000\r\nTo: Bob Haugen &lt;bob.haugen@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;343ecb3e0604141230g41c1321cnb2a936ccbf53dc7d@...&gt;\r\nReferences: &lt;443FF31C.8000109@...&gt;\n\t &lt;343ecb3e0604141230g41c1321cnb2a936ccbf53dc7d@...&gt;\r\nContent-Type: text/plain\r\nDate: Sat, 15 Apr 2006 20:11:33 +1000\r\nMessage-Id: &lt;1145095893.6988.26.camel@...&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.4.2.1 \r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Benjamin Carlyle &lt;benjamincarlyle@...&gt;\r\nSubject: Re: [rest-discuss] Re: Meaning of stateless (was: Avoiding\n\tre-POSTS)\r\nX-Yahoo-Group-Post: member; u=184797058; y=6jarmI0dENScqD235vyDSWlln1yf6DUPrJg07F4WB_ZH1nY\r\nX-Yahoo-Profile: fuzzybsc\r\n\r\nOn Fri, 2006-04-14 at 14:30 -0500, Bob Haugen wrote:\n&gt; I understand that the server must not need to keep track of previous\n&gt; requests in order to process the current request.\n&gt; But can the server GET representations from other resources when\n&gt; processing a request?\n&gt; (E.g. get a credit authorization before responding to a purchase order message.)\n&gt; That seems logical to me.  What would Roy say?\n\nWhat happens inside the server usually has nothing to do with REST. It\ncan access whatever data it chooses to return the resource state. You\ncan think of the client as a world of hideously interconnected and\ncoupled components, such as a desktop application suite. You can think\nof the server as a separate world of hideosuly interconnected and\ncoupled components, such a database and application server. REST doesn&#39;t\nconstrain either one to behave in a particular way internally. REST is a\nformula for ensuring that what happens between these complex worlds\ndoesn&#39;t cause them to be coupled to each other as well as to themselves.\n\n(messy, coupled client) &lt;---REST---&gt; (messy, coupled server)\n\nA simple model of a RESTful server would be to view the whole server\nstate as a single bubble. Resources divide the whole server state into\nsubsets of that state and provide useful representations of them. They\ndraw lines around those subsets, but the state of different resources\nmay and most likely overlap.\n\nI think people often mistake the REST model as meaning that server state\nshould be divided into non-overlapping resource states, and that how\nresources are defined should be the same as how they are stored in the\nback-end database. This is typically not the case. A back-end database\nhas a schema with possibly very little resource-dicated structure.\nResources represent subsets of the data stored in that schema, but the\nset of resources and the database schema should be free to change and\nevolve indepdendently.\n\nREST is an approach for keeping things that should not be coupled\nuncoupled. It divides local complexity from local complexity in order to\nconquer overall architectural complexity. You can apply REST principles\nto fairly small components before it stops paying off, but it is most\nbeneficial on the large scale and least beneficial on the small scale.\n\nPossibly the main alternative to REST is Object-Orientation, which is of\nmost benefit on the small scale. On the larger scale, Object-Orientation\nis of decreasing benefit. This same observation applies to traditional\ncontrolled RDBMS schemas and to other design approaches. They don&#39;t\nscale well across agency boundaries. REST recognises the uniformity\nrequirements of an architecture operated by the opposing interests of\ndifferent agencies. Object-Orientation is based around a consistency\nmodel that can only really apply within the authority of a single\nagency.\n\nBenjamin.\n\n\n"}}