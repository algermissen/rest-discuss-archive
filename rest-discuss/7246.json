{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10229189,"authorName":"Andrzej Jan Taramina","from":"&quot;Andrzej Jan Taramina&quot; &lt;andrzej@...&gt;","profile":"ataramina","replyTo":"SENDER","senderId":"cFaEGH2YpTfkBEJNRAdwAigB0cB1PfUylxcPFRLcGIHSkpNv5IwmgaMJkH_Va8H-rTIkgE5VjgnvoKQz32SkwMHVI1qsJNVmELnzmbC9n9LH5vU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] URI design for resources with multiple identifiers...","postDate":"1166061241","msgId":7246,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ1ODA2ODY5LjMxOTcxLjlGRkZGN0ZAYW5kcnplai5jaGFlcm9uLmNvbT4=","inReplyToHeader":"PDExNjYwNjAyMDUuMTA5NjkuNi5jYW1lbEBwaG9lbml4Pg==","referencesHeader":"PDQ1ODA1RkIwLjYyNzkuOURERUUyRkBhbmRyemVqLmNoYWVyb24uY29tPiwgPDExNjYwNjAyMDUuMTA5NjkuNi5jYW1lbEBwaG9lbml4Pg=="},"prevInTopic":7245,"nextInTopic":7254,"prevInTime":7245,"nextInTime":7247,"topicId":7243,"numMessagesInTopic":24,"msgSnippet":"... That s good to know. ... In fact, there is only one unique physical id.  The other id s are more like query parameters that interact with the versioning","rawEmail":"Return-Path: &lt;andrzej@...&gt;\r\nX-Sender: andrzej@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 63385 invoked from network); 14 Dec 2006 02:07:13 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m28.grp.scd.yahoo.com with QMQP; 14 Dec 2006 02:07:13 -0000\r\nReceived: from unknown (HELO backend2.xplornet.com) (207.179.143.201)\n  by mta6.grp.scd.yahoo.com with SMTP; 14 Dec 2006 02:07:13 -0000\r\nReceived: from [192.168.0.5] (xplr-ts-t11-208-114-168-141.barrettxplore.com [208.114.168.141])\n\t(authenticated bits=0)\n\tby backend2.xplornet.com (8.13.1/8.13.1) with ESMTP id kBE1u7VT018613;\n\tWed, 13 Dec 2006 21:56:11 -0400\r\nOrganization: Chaeron Corporation\r\nTo: Josh Sled &lt;jsled@...&gt;\r\nDate: Wed, 13 Dec 2006 20:54:01 -0500\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;45806869.31971.9FFFF7F@...&gt;\r\nPriority: normal\r\nIn-reply-to: &lt;1166060205.10969.6.camel@phoenix&gt;\r\nReferences: &lt;45805FB0.6279.9DDEE2F@...&gt;, &lt;1166060205.10969.6.camel@phoenix&gt;\r\nX-mailer: Pegasus Mail for Windows (4.41)\r\nContent-type: text/plain; charset=US-ASCII\r\nContent-transfer-encoding: 7BIT\r\nContent-description: Mail message body\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Andrzej Jan Taramina&quot; &lt;andrzej@...&gt;\r\nReply-To: andrzej@...\r\nSubject: Re: [rest-discuss] URI design for resources with multiple identifiers...\r\nX-Yahoo-Group-Post: member; u=10229189; y=-OIE4mXqMPbjzaYy4tmcDewUxdXSD4UEZdbS819L0-6nXwEM\r\nX-Yahoo-Profile: ataramina\r\n\r\nJosh:\n\n&gt; Multiple URIs can identify the same resource. A URI shouldn&#39;t identify\n&gt; more than one resource, however.\n&gt; \n&gt; There&#39;s no requirement anywhere that there be only one non-paramaterized\n&gt; URI, and the rest have to use the query-string.  (There&#39;s no requirement\n&gt; that there be *any* non-paramaterized URIs identifying a resource, in\n&gt; fact.)\n\nThat&#39;s good to know.\n\n&gt; It ventures into the realm of general design, but why does your system\n&gt; need more than one type of identifier, anyways?  That&#39;s a design smell,\n&gt; to me.\n\nIn fact, there is only one unique physical id.  The other &quot;id&#39;s&quot; are more \nlike query parameters that interact with the versioning requirement, so in \nreality, a Logical ID denotes a collection of versions of a specific \nresource, where each such &quot;version&quot; has a unique physical id.\n\nMIght be an idea to use something like this for a specific resource:\n\n\t a) http://mydomain.com/resource/12345\n\nwhere 12345 is the physical (and unique) id, and have related collection URLs \nfor versions such as:\n\n\tb) http://mydomain.com/resource/versions/314159\n\tc) http://mydomain.com/resource/versions/314159/1.2\n\td) http://mydomain.com/resource/versions/314159/all\n\nwhere 314159 is a logical id and 1.2 is a version.  If the version is \nmissing, then you return the most current/latest, and if the version = &quot;all&quot; \nyou return all versions.\n\nIn this scenario a specific resource could have two different urls, a) and c) \npointing at the same resource.\n\nThat works well for GETs and seems quite clean.\n\nBut it still begs the question of what you do with respect to creating new \nversions.  Put or Post?  \n\nUpon reflection, a Post to http://mydomain.com/resource/versions/314159 in my \nexample above, could create a new version, and return both the version (1.3 \nperhaps) and the alternate URL with the new physical id.\n\nSome background for where this is coming from.....it has to do with design of \na REST binding for the OASIS ebXML Registry/Repository specification.  \nObjects in the reg/rep have a unique physical id, but also have a logical id \nand version info as well (if versioning is used/turned on).\n\nJust trying to get my head around how to model the underlying resources given \nthat we don&#39;t want to change the underlying Registry Information Model (RIM) \nthat is prescribed by the current spec.\n\n\n\nAndrzej Jan Taramina\nChaeron Corporation: Enterprise System Solutions\nhttp://www.chaeron.com\n\n\n"}}