{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"Jørn Wildt","from":"=?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"cSKnyPlZwE0Qc4HJC3kcbL3Jl610i2mnmUHezH0N8OEMVAZnfdnv0YF_-mqbdp40XNpuxfCPwWUi7hHrJs05lOaB9paEutRy3XeOmX8etTg0ug3x5qN6S_A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Combining HTML and XML?","postDate":"1293534834","msgId":17135,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPg=="},"prevInTopic":0,"nextInTopic":17136,"prevInTime":17134,"nextInTime":17136,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"Right now I am in the middle of a REST API implementation, and these two threads have given me much to think about: ","rawEmail":"Return-Path: &lt;jw@...&gt;\r\nX-Sender: jw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 70045 invoked from network); 28 Dec 2010 11:13:51 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m13.grp.re1.yahoo.com with QMQP; 28 Dec 2010 11:13:51 -0000\r\nX-Received: from unknown (HELO smtp1.cybercity.dk) (212.242.43.251)\n  by mta2.grp.re1.yahoo.com with SMTP; 28 Dec 2010 11:13:50 -0000\r\nX-Received: from uf7.cybercity.dk (uf7.cybercity.dk [212.242.42.164])\n\tby smtp1.cybercity.dk (Postfix) with ESMTP id 63E6E586816\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 28 Dec 2010 12:13:50 +0100 (CET)\r\nX-Received: from JrnPC (unknown [77.66.23.105])\n\t(Authenticated sender: dsl164923)\n\tby uf7.cybercity.dk (Postfix) with ESMTPA id 48BF2B85E09\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 28 Dec 2010 12:13:50 +0100 (CET)\r\nMessage-ID: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\r\nTo: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Tue, 28 Dec 2010 12:13:54 +0100\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;iso-8859-1&quot;;\n\treply-type=original\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Windows Mail 6.0.6002.18197\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.0.6002.18263\r\nFrom: =?iso-8859-1?Q?J=F8rn_Wildt?= &lt;jw@...&gt;\r\nSubject: Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=242972596; y=g385Yhw4REi1-XtcuLEzwStlQuGu_jJyNkbfKSyWAwgY6apk_FHoXMq_fJY\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\nRight now I am in the middle of a REST API implementation, and these two \nthreads have given me much to think about: \nhttp://tech.groups.yahoo.com/group/rest-discuss/message/17114 (XForms vs. \nWSDL) and http://tech.groups.yahoo.com/group/rest-discuss/message/17057 \n(HTML REST API example [was: Link relations]).\n\nI do like Eric&#39;s proposal of using standard (x)html forms for updating \ndata - with or without RDFa embedded in it. But using html for embedding \nmachine-readable representations of complex data structures for reading \nseems a bit like bending over backwards to do something which is straight \nforward with XML. This, I think, is mostly about tooling: it is easy to \nserialize any data structure in XML with most development platforms, but \nthere is no support for easy serialization into and from HTML.\n\nExample: I have a case file with a title, a case number and a myriad of \nother properties. This can easily be converted to XML using standard tools:\n\n  &lt;case xmlns=&quot;http://my-casefile-namespace&quot;&gt;\n    &lt;title&gt;My title&lt;/title&gt;\n  &lt;/case&gt;\n\nBut how would the machine readable HTML look like? Maybe:\n\n  &lt;div property=&quot;case&quot;&gt;\n    &lt;div property=&quot;title&quot;&gt;My title&lt;/div&gt;\n  &lt;/div&gt;\n\nMany people turns to REST for simplicity. For me this also means simple and \ncommonly available tools. That&#39;s not the case with the HTML serialization \nand for this reason I shy away from the HTML representation - it&#39;s too \ndifficult to work with.\n\nOn the other hand I also understand that an XML representation in itself \ncontains no hypermedia controls, like for instance links and link relations. \nThat&#39;s something which is easily implemented in HTML using &lt;form&gt; and &lt;a&gt; \nelements.\n\nSo I feel trapped somewhere between these two formats and I guess that is \nwhy people turn to their own media-types. Now they get easy tooling and \nembedded hypermedia controls in XML (which they must invent themselves). \nThis comes at the expense of using a not-so-ubiquitous-and-non-standard \nformat.\n\nCan&#39;t we combine and get the best of both worlds?\n\nWhat is needed is something that:\n\n- Makes it easy to serialize/deserialize any data (m2m scenario).\n- Is browsable with a normal browser (h2m scenario).\n- Has hyper media controls.\n- Can update data through hyper media controls.\n\nNow I am only dreaming up some ideas: what if there were a standard XML \ndialect which included links and schema references? Then we had all that was \nneeded to browse the API data with a machine. It would look at the schema \nreference to see if it was a know data type and it could use links and link \nrelation types to decide where to go next. The schema reference would work \nlike a media-type identifier, but at another level than the network, and \nmake it possible to decide what to do with the data.\n\nI have already shown that it&#39;s easy to convert any XML into HTML through an \nXSL stylesheet, and convert atom link elements to HTML anchors at the same \ntime. So this would account for the human browsing the API data.\n\nThe next thing is updating data. Here I think HTML forms are fine. So a link \nrelation in the XML data would point to an HTML form that describes how to \nupdate the data. From the server side the incoming data is easily serialized \ninto data structures using model bindes as in ASP.NET MVC and OpenRasta. I \nhaven&#39;t seen any tools for the client side.\n\nThe HTML form could have RDFa added to it to lessen the coupling between the \nserver and the client, like Eric suggested. Something like:\n\n  &lt;form action=&quot;...&quot; about=&quot;#my-casefile-form&quot;&gt;\n    &lt;div&gt;\n      &lt;label for=&quot;case_title&quot;&gt;Case title&lt;/label&gt;\n      &lt;input id=&quot;case_title&quot; name=&quot;Case.Title&quot; property=&quot;dc:title&quot;/&gt;\n    &lt;/div&gt;\n  &lt;/form&gt;\n\nNow the client could look for the &quot;#my-casefile-form&quot; and then look for the \ninput with property=&quot;dc:title&quot; and put the case title in that. In this way \nthe server would be free to name the inputs what ever it likes. But I do not \nexpect there to be any tools out there that makes it easy for the client to \nfill out the form. Maybe that&#39;s a standard client library that needs to be \nwritten?\n\nDoes this make sense? Is it possible at all to have this imaginary XML \nformat/media-type that can contain any XML document and still have links in \nit?\n\nI would be happy to use HTML all over the place if it wasn&#39;t for the fact \nthat I haven&#39;t seen any useful serialization tools.\n\n/J�rn\n\n\n"}}