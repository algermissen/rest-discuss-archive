{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200533533,"authorName":"toydi","from":"toydi &lt;iamstupidiot@...&gt;","profile":"iamstupidiot","replyTo":"SENDER","senderId":"le6MtRW7aYuoIv5zv4tUc2U1p0ehCDBJpIf0u0lyn9Xz5MnO_WofSSBAjNMCD0rvHgNfq-6ohbs7FfJZXe3kBEsAypVa","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Response for multiple resources creation.","postDate":"1129728561","msgId":5322,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYwYzIyOTMwNTEwMTkwNjI5aTZhMjBkNzB5ZTIxODQxNzY3OGFmZTg5M0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDAwMTgwMWM1ZDRhMCQzN2QzYTQwMCQwYTBhMGEwYUBod203MD4=","referencesHeader":"PDYwYzIyOTMwNTEwMTkwMzM3dzE0ODJkY2I5bjhjYjhmZDQwNjk2OGY2MDdAbWFpbC5nbWFpbC5jb20+CSA8MDAxODAxYzVkNGEwJDM3ZDNhNDAwJDBhMGEwYTBhQGh3bTcwPg=="},"prevInTopic":5320,"nextInTopic":5323,"prevInTime":5321,"nextInTime":5323,"topicId":5319,"numMessagesInTopic":11,"msgSnippet":"... Indeed, I think that s the best practice & really helps to keep things simple. However, during implementation, rollback ing all creations (just because one","rawEmail":"Return-Path: &lt;iamstupidiot@...&gt;\r\nX-Sender: iamstupidiot@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 75137 invoked from network); 19 Oct 2005 13:29:21 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m13.grp.scd.yahoo.com with QMQP; 19 Oct 2005 13:29:21 -0000\r\nReceived: from unknown (HELO zproxy.gmail.com) (64.233.162.202)\n  by mta5.grp.scd.yahoo.com with SMTP; 19 Oct 2005 13:29:21 -0000\r\nReceived: by zproxy.gmail.com with SMTP id n1so60309nzf\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 19 Oct 2005 06:29:21 -0700 (PDT)\r\nReceived: by 10.36.34.1 with SMTP id h1mr633117nzh;\n        Wed, 19 Oct 2005 06:29:21 -0700 (PDT)\r\nReceived: by 10.36.113.10 with HTTP; Wed, 19 Oct 2005 06:29:21 -0700 (PDT)\r\nMessage-ID: &lt;60c22930510190629i6a20d70ye218417678afe893@...&gt;\r\nDate: Wed, 19 Oct 2005 21:29:21 +0800\r\nTo: hughw@..., glaforge@...\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;001801c5d4a0$37d3a400$0a0a0a0a@hwm70&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;60c22930510190337w1482dcb9n8cb8fd406968f607@...&gt;\n\t &lt;001801c5d4a0$37d3a400$0a0a0a0a@hwm70&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: toydi &lt;iamstupidiot@...&gt;\r\nSubject: Re: [rest-discuss] Response for multiple resources creation.\r\nX-Yahoo-Group-Post: member; u=200533533; y=1jFvrkAD_DwKjB4p57VPOnWML6UQEXVkTXwUXL6uSo_G2UQHLMG-\r\nX-Yahoo-Profile: iamstupidiot\r\n\r\nOn 10/19/05, Guillaume Laforge &lt;glaforge@...&gt; wrote:\n\n&gt; Correct me if=\r\n I&#39;m wrong, but shouldn&#39;t a request be atomic?\n\n&gt; Hence, even if a request =\r\ntriggers several creations, shouldn&#39;t the\n&gt; request be treated like a unit =\r\nof work, inside a single transaction?\n&gt; So I&#39;d be tempted to say that if a =\r\nsub-part of the request fails, all\n&gt; requests should be rollbacked.\n\nIndeed=\r\n, I think that&#39;s the best practice & really helps to keep things\nsimple. Ho=\r\nwever, during implementation, rollback&#39;ing all creations\n(just because one =\r\nof the creations fails) would be costly.\n\nTaking an example of a web hostin=\r\ng service, when a new user\nregistration info is POSTed to server, a main re=\r\nsource, *User* is\ncreated, followed by creating several file-system directo=\r\nries. Here,\nit might not make sense, if we fail the entire registration pro=\r\ncess,\njust because an error while creating a new file-system directory.\n\nSo=\r\n, if in case we could not avoid multiple resources creation in one\nrequest,=\r\n and yet, rollback&#39;ing is almost impossible, question: what&#39;s\nthe best way =\r\nto describe such partial failure in a HTTP response\nmessage?\n\nOn 10/19/05, =\r\nHugh Winkler &lt;hughw@...&gt; wrote:\n\n&gt; If it&#39;s not possible to do tha=\r\nt, then I&#39;d just return 201 for partial\n&gt; success with an entity explaining=\r\n what happened.\n\nYeah, I did use this solution for my web app. Such respons=\r\ne is clear\nto human, but what if the client is a machine? How to alert mach=\r\nine\nabout such partial failure, while we are sending back a 201 response?\n\n=\r\nAny alternatives? to tell a machine: &quot;Yeah, the main resource is\ncreated su=\r\nccessfully (201), here&#39;s its identifier (Location). Yet,\nseveral sub resour=\r\nces are created too, here&#39;s a list (hypertext\nlinks?). But hey, we having p=\r\nroblem to create this particular sub\nresource, so don&#39;t use it now.&quot;\n\n\nOn 1=\r\n0/19/05, Hugh Winkler &lt;hughw@...&gt; wrote:\n\n&gt; [hvw] I was just work=\r\ning through this case a couple of weeks ago! This is a\n&gt; minor omission in =\r\nHTTP.\n\nthe multipart/form-data is quite *weird*, imagine after POSTing\nseve=\r\nral files, some new files will be added, some existing files will\nbe replac=\r\ned, and some of them might failed to be processed. Now, which\nresponse code=\r\n should we return?\n\n&gt; &gt; And what if server failed to create some of them (i=\r\n.e. the phyiscal\n&gt; &gt; storage has full, unableto store last two files). How =\r\ndo we construct\n&gt; &gt; a response (and resposne code) that reflect such partia=\r\nl failure\n&gt; &gt; accurately?\n&gt; [hvw] Again, we are out of the range of the spe=\r\nc, into your application&#39;s\n&gt; semantics.\n\nThis will certainly decrease app&#39;s=\r\n interoperability? ;)\n\n&gt; If I were in charge of the service design I&#39;d prob=\r\nably choose to make one\n&gt; multipart POST succeed or fail altogether, as a t=\r\nransaction. In that case\n&gt; you clearly know to return 2XX or 4XX.\n\nYes, tha=\r\nt&#39;s the best way, but, it might be too *cruel* to ask\nend-users to resend e=\r\nverything after spending their lunch time\nuploading files with a 56k modem.=\r\n :P\n\n\n--\n-toydi-\n\n"}}