{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"OgXKEocp54sww-cCU_0juWXyMJpa7fDMd3yp0rMeQifU64D95MOIBjEizEWOmRWqkyEoq5BP3NvOdlpp2hZoO6VYKtNcnw_94p4KHXOXHw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful batch transactions a red herring.","postDate":"1237347003","msgId":12220,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkwMzE3MjEzMDAzLjFiMWRhY2E2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEJMVTEwMi1EUzNFMjJFMkRCQTFGN0E0MEZGRkQ2QkI1OTgwQHBoeC5nYmw+","referencesHeader":"PDIwMDkwMzEyMDUzNTUyLjMwM2M0YzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDJmYTU1NDQ3MDkwMzEyMDUwMHU2YzAwMzVjZmc4YThkMTgxYWMyMmE3MjgyQG1haWwuZ21haWwuY29tPgk8MjAwOTAzMTcxNDMwMDAuZGQzZWNhMjcuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8QkxVMTAyLURTM0UyMkUyREJBMUY3QTQwRkZGRDZCQjU5ODBAcGh4LmdibD4="},"prevInTopic":12219,"nextInTopic":12228,"prevInTime":12219,"nextInTime":12221,"topicId":12213,"numMessagesInTopic":15,"msgSnippet":"... Hmmm, no, what I m calling a batch operation in HTTP is any method where the client sends the server a list of URIs to be operated on.  I m saying that","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 71403 invoked from network); 18 Mar 2009 03:29:46 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m5.grp.sp2.yahoo.com with QMQP; 18 Mar 2009 03:29:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.re1.yahoo.com with SMTP; 18 Mar 2009 03:29:46 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 75011D0A81;\n\tTue, 17 Mar 2009 23:29:44 -0400 (EDT)\r\nDate: Tue, 17 Mar 2009 21:30:03 -0600\r\nTo: &quot;Sebastien Lambla&quot; &lt;seb@...&gt;\r\nCc: =?ISO-8859-1?Q?&#39;Ant=F3nio?= Mota&#39; &lt;amsmota@...&gt;, &quot;&#39;rest-discuss&#39;&quot;\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20090317213003.1b1daca6.eric@...&gt;\r\nIn-Reply-To: &lt;BLU102-DS3E22E2DBA1F7A40FFFD6BB5980@...&gt;\r\nReferences: &lt;20090312053552.303c4c19.eric@...&gt;\n\t&lt;2fa554470903120500u6c0035cfg8a8d181ac22a7282@...&gt;\n\t&lt;20090317143000.dd3eca27.eric@...&gt;\n\t&lt;BLU102-DS3E22E2DBA1F7A40FFFD6BB5980@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] RESTful batch transactions a red herring.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nSebastien Lambla wrote:\n\n&gt;\n&gt; &gt; Batch requests are, by nature, RPC requests where the relevant URIs\n&gt; &gt; are included in message bodies instead of being request targets\n&gt; &gt; themselves. Sending protocol-level instructions to the server in an\n&gt; &gt; entity body (BMOVE, BDELETE) instead of as part of the request\n&gt; &gt; smacks of RPC design.\n&gt; \n&gt; If by Batch you mean having semantics by which a set of operations\n&gt; should all succeed or fail as one, then I&#39;m disagreeing that it&#39;s &quot;by\n&gt; nature&quot; RPC.\n&gt; \n\nHmmm, no, what I&#39;m calling a batch operation in HTTP is any method\nwhere the client sends the server a list of URIs to be operated on.  I&#39;m\nsaying that sending a list of URIs to the server, instead of\ninteracting with each URI in request-response fashion, is inherently\nun-RESTful.\n\n&gt;\n&gt; Unless you consider any form of transaction boundary RPC.\n&gt; \n\nThat&#39;s a good question; I assume you mean, say, MOVE or COPY methods.\nUsing PUT to copy, or PUT and DELETE to move, seems to be the uniform\ninterface approach.  Whereas MOVE and COPY require some URI other than\nthe one being interacted with, to effect the transaction.  Since it&#39;s\njust one URI instead of a list, I wouldn&#39;t call MOVE and COPY batch\noperations -- but they smack of RPC just the same.\n\n&gt;\n&gt; &gt; I would argue that BDELETE\n&gt; &gt; is a stateful request.  The server must track multiple operations\n&gt; &gt; before responding to the client, and do this reliably in case of\n&gt; &gt; interruption; both issues are cleanly avoided in a REST request,\n&gt; &gt; where the contents of the request entity never contain\n&gt; &gt; protocol-level instructions for the server to carry out.\n&gt; \n&gt; State within one operation may exist, but it&#39;s internal to the server\n&gt; and it&#39;s implementation. One server will often keep state around\n&gt; while it goes and create multiple new resources on a simple action\n&gt; invoked through a POST and I don&#39;t hear anyone complain about it.\n&gt; \n\nBecause the client didn&#39;t request the creation of those ancillary\nresources. The server responded &#39;success&#39; to the POST, freed up those\nresources to handle other requests, then created the ancillary\nresources.  With BDELETE, the server has to keep the connection open\nuntil each request in the batch succeeds or fails, in order to generate\na detailed response entity for the client.  While this doesn&#39;t rise to\nthe level of storing state between requests, since we&#39;re only talking\nabout one request, it still seems like &quot;shared context&quot; to me.\n\n&gt;\n&gt; If a resource creation can engender many other resources being\n&gt; created, why would the deletion of one resource ending up in many\n&gt; resources being deleted be an issue?\n&gt; \n\nWhat&#39;s at issue is what the client requested, not what the server does.\nIf a client requests that an Atom Feed resource be DELETEd, it&#39;s up to\ndeveloper discretion whether the constituent Atom Entry resources are\ndeleted or not.  If collection members are deleted when the feed is\ndeleted, the client doesn&#39;t need notification beyond success/failure\nregarding the request URI for the collection, which is all the client\nrequested.\n\nThe problem arises when the client wants to request the deletion of\nentries 3, 7 and 10 from within a feed, as a single operation.  Since\nthe client is requesting each deletion, it needs to be notified of the\nsuccess/failure of each action.  Here&#39;s where we break from REST\narchitecture -- sending a list of URIs to the server, and receiving a\n&quot;success&quot; response whose entity must be parsed to determine the results\nof the operation for each URI in the list.  This is not a uniform\ninterface, a uniform interface consists of a request/response to each\nURI the client wants to perform an operation on.\n\n&gt; \n&gt; If by Batch you mean having semantics by which a set of operations\n&gt; should all succeed or fail as one, then I&#39;m disagreeing that it&#39;s &quot;by\n&gt; nature&quot; RPC.\n&gt;\n\nIf member entries are deleted when a collection is deleted, that set of\noperations succeeds or fails as one, but that&#39;s just opaque application\nbehavior, not a batch request.  When the entity of the client request\nis attempting to give multiple instructions to the server, it&#39;s a batch\nrequest.  Where the client makes a request to one URI to affect changes\nto some other resource, whose URI must be included but is not the\ntarget of the request, it&#39;s an RPC operation (MOVE, COPY).\n\n-Eric\n\n"}}