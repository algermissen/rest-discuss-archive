{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":98624433,"authorName":"bhaugen32","from":"&quot;bhaugen32&quot; &lt;bhaugen32@...&gt;","profile":"bhaugen32","replyTo":"SENDER","senderId":"gS37e_SZPG-d62HogNF37kXshp4O9-vpzAQTgaKeilKiQtKmdORSigmG9T-OazPOw-97vrkzp6WFAZFj96wGxo8z6KICAaxs","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REST","postDate":"1020180440","msgId":1149,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFhbWQ0bysxMDExYUBlR3JvdXBzLmNvbT4=","inReplyToHeader":"PDEwMjAxNzUyNjMuMTAwNy4yMS5jYW1lbEBrYXR5Pg=="},"prevInTopic":1147,"nextInTopic":1150,"prevInTime":1148,"nextInTime":1150,"topicId":1142,"numMessagesInTopic":20,"msgSnippet":"... violates a ... PUT ... On the other hand, I think the consensus of OOP practitioners who have developed large distributed object systems (or even heavily ","rawEmail":"Return-Path: &lt;bhaugen32@...&gt;\r\nX-Sender: bhaugen32@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_1); 30 Apr 2002 15:27:37 -0000\r\nReceived: (qmail 15492 invoked from network); 30 Apr 2002 15:27:35 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 30 Apr 2002 15:27:35 -0000\r\nReceived: from unknown (HELO n27.grp.scd.yahoo.com) (66.218.66.83)\n  by mta2.grp.scd.yahoo.com with SMTP; 30 Apr 2002 15:27:34 -0000\r\nReceived: from [66.218.67.182] by n27.grp.scd.yahoo.com with NNFMP; 30 Apr 2002 15:27:22 -0000\r\nDate: Tue, 30 Apr 2002 15:27:20 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: REST\r\nMessage-ID: &lt;aamd4o+1011a@...&gt;\r\nIn-Reply-To: &lt;1020175263.1007.21.camel@katy&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1428\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;bhaugen32&quot; &lt;bhaugen32@...&gt;\r\nX-Yahoo-Group-Post: member; u=98624433\r\nX-Yahoo-Profile: bhaugen32\r\n\r\nJeff Bone wrote:\n&gt; \n&gt; On Mon, 2002-04-29 at 23:19, jmay wrote:\n&gt; &gt; Sjoerd Visscher suggests (at \n&gt; &gt; http://w3future.com/weblog/2002/04/30.html#a93) that &quot;REST \nviolates a \n&gt; &gt; lot of rules of both functional and object oriented programming&quot;, \n&gt; &gt; because it has &quot;a small API&quot; (presumably referring to GET, POST, \nPUT \n&gt; &gt; as the REST API).\n&gt; \n&gt; It certainly does violate a lot of &quot;rules&quot; of OOP:  the focus on\n&gt; composition of generic interfaces is the antithesis of OOP&#39;s\n&gt; type-specific interfaces and encapsulation.\n\nOn the other hand, I think the consensus of OOP practitioners who \nhave developed large distributed object systems (or even heavily \nlayered systems) is toward something more RESTful than &quot;classic OOP&quot; \nwith lots of little methods.\n\nBy that I mean whenever you cross boundaries (distributed, trust, \neven processes), larger granularity is better than small.\n\nI.e. use facades at boundary crossings and pass back and forth large-\ngrained representations of a composite object behind the facade.\n\nI.e. use URIs to identify resources and pass representations of their \nstate around.\n\nI am certain that the SOAP RPC programmers will learn this from sad \nexperience over time.\n\nSelections on related topics from WikiWiki:\nhttp://c2.com/cgi/wiki?DomainObjectStateHolder\nhttp://c2.com/cgi/wiki?BagOfJumpingBeans\nhttp://c2.com/cgi/wiki?DataTransferObject\nhttp://c2.com/cgi/wiki?HalfObjectPlusProtocol\n\n-Bob Haugen\n\n\n\n"}}