{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"Aa8IXOq37sZXHvWccrS9MOPGSYOh65sU6L9fdF5VZvOpITM2Qnn5yd8PeV53kGUfUGuJQ60NOFLr-v7xziFWQVFBAHbA28R3tQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing","postDate":"1261512788","msgId":14334,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDM5MTVjNjlkMDkxMjIyMTIxM2czOGM2NDhlMndkZDBkODcyZGNiYzAxMzA4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDU4MWJmNjE2MDkxMjIyMDQwN3E0OTFlNmEzOHgzMjEyYWVhYzdkODRiZGFlQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGhnbnBmaCtwcGZrQGVHcm91cHMuY29tPgkgPDI2REVFQUE1LTUyQjItNEM0MS05RDQwLTBENzE2RDAxRjA3NEBtYWMuY29tPgkgPGRlNzBiMzlkMDkxMjIxMTExOXMxODhjYThkNHM1YmU0ZGFkMGI3MGUxNTA3QG1haWwuZ21haWwuY29tPgkgPEVFQTg0RTA5LTlFNDctNDEyNy04OUQzLTBFOTVENDlDMkFFREBtYWMuY29tPgkgPGRlNzBiMzlkMDkxMjIxMTQ0N3Q2YzM1MDRlN2s4YTZhMDI2OTZhMmJkYTEwQG1haWwuZ21haWwuY29tPgkgPDVFRTE0RDJCLUYxOTItNEJDRS1BQkQ5LUM5RTJDNEYyM0FFNEBtYWMuY29tPgkgPGRlNzBiMzlkMDkxMjIxMTgxNXE2NzgxZGVjN3I1YTlhODM0NTVkMTdiNGM2QG1haWwuZ21haWwuY29tPgkgPEMwQjQzQUE3LTdBRjEtNDA3Ri1BMjFFLTkwN0Q2NTUyMUZCRUBtYWMuY29tPgkgPDU4MWJmNjE2MDkxMjIyMDQwN3E0OTFlNmEzOHgzMjEyYWVhYzdkODRiZGFlQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14333,"nextInTopic":14340,"prevInTime":14333,"nextInTime":14335,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"This thread just exploded and it s taken until now to catch up. Jan, I don t see any conflict with having a SLA backing up a REST interface. I think that you","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 60372 invoked from network); 22 Dec 2009 20:13:09 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 22 Dec 2009 20:13:09 -0000\r\nX-Received: from unknown (HELO mail-vw0-f195.google.com) (209.85.212.195)\n  by mta1.grp.sp2.yahoo.com with SMTP; 22 Dec 2009 20:13:09 -0000\r\nX-Received: by vws33 with SMTP id 33so2376838vws.27\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 22 Dec 2009 12:13:08 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.220.122.19 with SMTP id j19mr9261372vcr.108.1261512788835; \n\tTue, 22 Dec 2009 12:13:08 -0800 (PST)\r\nIn-Reply-To: &lt;581bf6160912220407q491e6a38x3212aeac7d84bdae@...&gt;\r\nReferences: &lt;hgnpfh+ppfk@...&gt;\n\t &lt;26DEEAA5-52B2-4C41-9D40-0D716D01F074@...&gt;\n\t &lt;de70b39d0912211119s188ca8d4s5be4dad0b70e1507@...&gt;\n\t &lt;EEA84E09-9E47-4127-89D3-0E95D49C2AED@...&gt;\n\t &lt;de70b39d0912211447t6c3504e7k8a6a02696a2bda10@...&gt;\n\t &lt;5EE14D2B-F192-4BCE-ABD9-C9E2C4F23AE4@...&gt;\n\t &lt;de70b39d0912211815q6781dec7r5a9a83455d17b4c6@...&gt;\n\t &lt;C0B43AA7-7AF1-407F-A21E-907D65521FBE@...&gt;\n\t &lt;581bf6160912220407q491e6a38x3212aeac7d84bdae@...&gt;\r\nDate: Tue, 22 Dec 2009 12:13:08 -0800\r\nMessage-ID: &lt;3915c69d0912221213g38c648e2wdd0d872dcbc01308@...&gt;\r\nTo: Guilherme Silveira &lt;guilherme.silveira@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;, Noah Campbell &lt;noahcampbell@...&gt;, \n\tJorn Wildt &lt;jw@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001636cd7505a87d5f047b56d5f8\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=401876259; y=Kh9kqxw0itpdbS3afKhV30cZGgaWZRUo0tdwDxe-voZvVm58lTxslA\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--001636cd7505a87d5f047b56d5f8\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nThis thread just exploded and it&#39;s taken until now to catch up.\n\nJan, I don&#39;t see any conflict with having a SLA backing up a REST interface.\n\nI think that you can make a brittle REST architecture that hits all of\nthe REST bullet points, but inevitably fails to evolve properly.\n\nTake for example here, the &quot;apiv2&quot; rel link.\n\nThe fact that the service authors CHOSE to add an &quot;apiv2&quot; link. They\ndid not HAVE to. They COULD have simply changed the media type, and\n406&#39;d the old clients.\n\nObviously, &quot;suddenly&quot;, all of the old client fail miserably, and are\ncut off from the service until they upgrade. No backward compatibility\nhere.\n\nAs for &quot;evolutionary&quot; software, it&#39;s pretty clear that it doesn&#39;t\nevolve. Rather you have backward compatibility that gives an illusion\nof evolution. The existing clients aren&#39;t changing, the service is\nsimply being friendly by keeping them in mind and not locking them\nout.\n\nI don&#39;t see any way that REST differs from SOAP, or any other system\nin this regard. As you&#39;ve observed, compliance and compatibility are\nhard coded in to the clients and server. If the protocol changes, the\nclients and servers need to be changed to remain compatible.\n\nVersioning and backward compatibility is the key to a robust, evolving\ninfrastructure. I think REST is better for such a system than\nsomething like SOAP simply because I think it is easier for a more\nadvanced client to leverage the latest services and APIs, as well as\nfor a server to better maintain compatibility with older clients.\n\nBoth of these are done through extensible types and con neg. As you\nget more and more servers and clients on different upgrade cycles,\nthis capability become more important. It&#39;s easy to see how you might\nget consumers using services that you, as the provider, particularly\nin an &quot;open&quot; enterprise, didn&#39;t even really &quot;know&quot; were being\nserviced.\n\nIn the end, though things like typed rels, and online documentation,\nideally when something goes wrong, payload inspection will direct the\npeople maintaining the consumers towards what they need to change to\nbecome compliant again and able to use the new service.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\r\n--001636cd7505a87d5f047b56d5f8\r\nContent-Type: text/html; charset=ISO-8859-1\r\n\r\nThis thread just exploded and it&#39;s taken until now to catch up.&lt;br&gt;\n&lt;br&gt;\nJan, I don&#39;t see any conflict with having a SLA backing up a REST interface.&lt;br&gt;\n&lt;br&gt;\nI think that you can make a brittle REST architecture that hits all of&lt;br&gt;\nthe REST bullet points, but inevitably fails to evolve properly.&lt;br&gt;\n&lt;br&gt;\nTake for example here, the &quot;apiv2&quot; rel link.&lt;br&gt;\n&lt;br&gt;\nThe fact that the service authors CHOSE to add an &quot;apiv2&quot; link. They&lt;br&gt;\ndid not HAVE to. They COULD have simply changed the media type, and&lt;br&gt;\n406&#39;d the old clients.&lt;br&gt;\n&lt;br&gt;\nObviously, &quot;suddenly&quot;, all of the old client fail miserably, and are&lt;br&gt;\ncut off from the service until they upgrade. No backward compatibility&lt;br&gt;\nhere.&lt;br&gt;\n&lt;br&gt;\nAs for &quot;evolutionary&quot; software, it&#39;s pretty clear that it doesn&#39;t&lt;br&gt;\nevolve. Rather you have backward compatibility that gives an illusion&lt;br&gt;\nof evolution. The existing clients aren&#39;t changing, the service is&lt;br&gt;\nsimply being friendly by keeping them in mind and not locking them&lt;br&gt;\nout.&lt;br&gt;\n&lt;br&gt;\nI don&#39;t see any way that REST differs from SOAP, or any other system&lt;br&gt;\nin this regard. As you&#39;ve observed, compliance and compatibility are&lt;br&gt;\nhard coded in to the clients and server. If the protocol changes, the&lt;br&gt;\nclients and servers need to be changed to remain compatible.&lt;br&gt;\n&lt;br&gt;\nVersioning and backward compatibility is the key to a robust, evolving&lt;br&gt;\ninfrastructure. I think REST is better for such a system than&lt;br&gt;\nsomething like SOAP simply because I think it is easier for a more&lt;br&gt;\nadvanced client to leverage the latest services and APIs, as well as&lt;br&gt;\nfor a server to better maintain compatibility with older clients.&lt;br&gt;\n&lt;br&gt;\nBoth of these are done through extensible types and con neg. As you&lt;br&gt;\nget more and more servers and clients on different upgrade cycles,&lt;br&gt;\nthis capability become more important. It&#39;s easy to see how you might&lt;br&gt;\nget consumers using services that you, as the provider, particularly&lt;br&gt;\nin an &quot;open&quot; enterprise, didn&#39;t even really &quot;know&quot; were being&lt;br&gt;\nserviced.&lt;br&gt;\n&lt;br&gt;\nIn the end, though things like typed rels, and online documentation,&lt;br&gt;\nideally when something goes wrong, payload inspection will direct the&lt;br&gt;\npeople maintaining the consumers towards what they need to change to&lt;br&gt;\nbecome compliant again and able to use the new service.&lt;br&gt;\n&lt;br&gt;\nRegards,&lt;br&gt;\n&lt;font color=&quot;#888888&quot;&gt;&lt;br&gt;\nWill Hartung&lt;br&gt;\n(&lt;a href=&quot;mailto:willh@...&quot;&gt;willh@...&lt;/a&gt;)&lt;/font&gt;\n\r\n--001636cd7505a87d5f047b56d5f8--\r\n\n"}}