{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"KQ8wg0_4lRyvmFr_JvN2ykl9yT7aymc_n1lsizIH8AbG_dB0zlJWqnwG22TRQ8awc62Nyqvss5loEJzhN2nI88N3_Gr_Vk7xf4kVGDo9Lg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Rails RESTful?","postDate":"1163595773","msgId":7008,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjYwMWM3MDhiNiQ1ZDliN2UxMCQyMTAyZmVhOUBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDIwMDYxMTE0MTYxNjI4LkdBMTY2MzBAc2lzd2FpLmxvY2FsPg=="},"prevInTopic":6996,"nextInTopic":7091,"prevInTime":7007,"nextInTime":7009,"topicId":6933,"numMessagesInTopic":14,"msgSnippet":"... that code is hand-coding the exact same code, which is a fine option too. Not true.  There are at least two other alternates (one of which is code ","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 30460 invoked from network); 15 Nov 2006 13:03:06 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m23.grp.scd.yahoo.com with QMQP; 15 Nov 2006 13:03:06 -0000\r\nReceived: from unknown (HELO wx-out-0506.google.com) (66.249.82.236)\n  by mta9.grp.scd.yahoo.com with SMTP; 15 Nov 2006 13:03:06 -0000\r\nReceived: by wx-out-0506.google.com with SMTP id s16so200985wxc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 15 Nov 2006 05:02:55 -0800 (PST)\r\nReceived: by 10.100.125.5 with SMTP id x5mr477403anc.1163595775613;\n        Wed, 15 Nov 2006 05:02:55 -0800 (PST)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nReceived: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTP id 12sm1077524wrl.2006.11.15.05.02.54;\n        Wed, 15 Nov 2006 05:02:55 -0800 (PST)\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nDate: Wed, 15 Nov 2006 08:02:53 -0500\r\nMessage-ID: &lt;006601c708b6$5d9b7e10$2102fea9@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2962\r\nThread-Index: AccICEEzPiLyOpjvRASISPtwFrTyTAArPG0g\r\nIn-Reply-To: &lt;20061114161628.GA16630@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] Rails RESTful?\r\nX-Yahoo-Group-Post: member; u=228155998; y=NoyLWMaqNfJmkwPR9b5RtFKjq_QybfuyrICWOss6T51FQLaO4PLz\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\n&gt;&gt; I&#39;m not sure what you&#39;re referring to here. The alternative to generating\nthat code is hand-coding the exact same code, which is a fine option too. \n\nNot true.  There are at least two other alternates (one of which is code\ngeneration, but in a confined context):\n\n1.) But the logic into the object and process metadata.  Slower and coding\nis more abstract, but the code is in the framework.  Also, not as flexible\nas code that is generated which can then be hand modified.  Good for certain\ntypes of functionality.\n\n2.) Do &quot;behind the scenes&quot; code generation. Don&#39;t require developer to\ngenerate standard code. Instead, generate it on demand behind the scenes.\nThis approach forces a discipline to architecture that I think is\npreferrable.\n\n&gt;&gt; The code is generated once when you create the controller or model and\nthen you own it.\n\nUnless I start refactoring...\n\n&gt;&gt;  How does this code generation cause any harm? \n\nYou can&#39;t round-trip the generated code during refactoring and if you regen,\nyou can loose modifications.\n\n&gt;&gt; Feel free.\n\nThanks. I&#39;ll email offline.\n\n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org/\n\n\n\n-----Original Message-----\nFrom: Ryan Tomayko [mailto:rtomayko@...] \nSent: Tuesday, November 14, 2006 11:16 AM\nTo: Mike Schinkel\nCc: rest-discuss@yahoogroups.com\nSubject: Re: [rest-discuss] Rails RESTful?\n\nMike Schinkel wrote:\n&gt; Actually, it is no where near as easy.  The default generates code \n&gt; that you have to manually modify and maintain which is a lot of work \n&gt; for a large system.\n\nI&#39;m not sure what you&#39;re referring to here. The alternative to generating\nthat code is hand-coding the exact same code, which is a fine option too.\nThe code is generated once when you create the controller or model and then\nyou own it. How does this code generation cause any harm? I did my time back\nin the day writing Windows apps with MFC and ATL so I know what bad code\ngeneration looks like :)\n\n&gt; P.S. If it really is that easy, maybe you&#39;ll want to help me with it \n&gt; off-list? If so, then maybe I&#39;ll come back here and beg for mea cupla. \n&gt; ;-)\n\nFeel free.\n\n--\nRyan Tomayko\nhttp://naeblis.cx/\n\n\n"}}