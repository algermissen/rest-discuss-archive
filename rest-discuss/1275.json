{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":112610298,"authorName":"Roger L. Costello","from":"&quot;Roger L. Costello&quot; &lt;costello@...&gt;","replyTo":"SENDER","senderId":"mYwUdXpcdI3vt6B2W-9fOOf6fSOj38JMbRT9zMOYmSXwoI4X1UFX1ojTkGy2oe7OzJslxdzEo5Ezs5XJjEDGgQS6TZvuuEkvJlOk_BnOqw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST Tutorial","postDate":"1021827175","msgId":1275,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRTdEODY3LkY2MUQyREZEQG1pdHJlLm9yZz4=","referencesHeader":"PDNDRTZDRkEzLkI0NzU1RjU4QG1pdHJlLm9yZz4gPDNDRTczNEM0Ljk1N0QzMUVCQHByZXNjb2QubmV0Pg=="},"prevInTopic":1274,"nextInTopic":1276,"prevInTime":1274,"nextInTime":1276,"topicId":1272,"numMessagesInTopic":21,"msgSnippet":"Thanks a lot Paul!  I have incorporated all of your suggestions, as well as added new material. I think that my Parts Depot example is now in line with your ","rawEmail":"Return-Path: &lt;costello@...&gt;\r\nX-Sender: costello@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 19 May 2002 16:54:53 -0000\r\nReceived: (qmail 52932 invoked from network); 19 May 2002 16:54:53 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m14.grp.scd.yahoo.com with QMQP; 19 May 2002 16:54:53 -0000\r\nReceived: from unknown (HELO smtpproxy2.mitre.org) (192.80.55.70)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 May 2002 16:54:53 -0000\r\nReceived: from avsrv2.mitre.org (avsrv2.mitre.org [128.29.154.4])\n\tby smtpproxy2.mitre.org (8.11.3/8.11.3) with ESMTP id g4JGsqF03886\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun, 19 May 2002 12:54:53 -0400 (EDT)\r\nReceived: from MAILHUB1 (mailhub1.mitre.org [129.83.20.31])\n\tby smtpsrv2.mitre.org (8.11.3/8.11.3) with ESMTP id g4JGspw15032\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun, 19 May 2002 12:54:51 -0400 (EDT)\r\nReceived: from mbppp216.mitre.org (129.83.69.216) by mailhub1.mitre.org with SMTP\n        id 10261109; Sun, 19 May 2002 12:54:46 -0400\r\nMessage-ID: &lt;3CE7D867.F61D2DFD@...&gt;\r\nDate: Sun, 19 May 2002 12:52:55 -0400\r\nOrganization: The MITRE Corporation\r\nX-Mailer: Mozilla 4.75 [en]C-20000818M  (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] REST Tutorial\r\nReferences: &lt;3CE6CFA3.B4755F58@...&gt; &lt;3CE734C4.957D31EB@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nFrom: &quot;Roger L. Costello&quot; &lt;costello@...&gt;\r\nX-Yahoo-Group-Post: member; u=112610298\r\n\r\nThanks a lot Paul!  I have incorporated all of your suggestions, as well\nas added new material.  \n\nI think that my Parts Depot example is now in line with your\nsuggestion.  If you (or anyone else) has comments on it I would very\nmuch appreciate hearing them.  \n\nAll suggestions, criticisms are welcome. /Roger\n\nhttp://www.xfront.com/REST.ppt\n\n\n\nPaul Prescod wrote:\n&gt; \n&gt; Looks like an excellent summary! I&#39;ll just go through some nits.\n&gt; \n&gt; Here are some points to consider.\n&gt; \n&gt;  Slide 5:\n&gt; \n&gt; &quot;http://www.parts-depot.com/parts-list?flavor=xml&quot;\n&gt; \n&gt; A hard-core HTTP-head would suggest you use content negotiation instead.\n&gt; \n&gt;  * http://www.prescod.net/http/content_negotiation.html\n&gt; \n&gt; Slide 8:\n&gt; \n&gt; I don&#39;t think I&#39;d make PartQuantity into a resource type. I&#39;d make\n&gt; *Part* into a resource type. Quantity would be just an element in there.\n&gt; This could collapse your part list into a simple list of URIs and\n&gt; prevent the slightly weird linking from the PartQuantity back into the\n&gt; Part.\n&gt; \n&gt; Slide 9:\n&gt; \n&gt; SOAP is not an application protocol so it doesn&#39;t prescribe much of a\n&gt; data model (roughly the same data model as UDP -- there are things you\n&gt; can send messages to) This makes it hard to assess the &quot;SOAP Way&quot; of\n&gt; doing any particular thing. Really it is SOAP toolkits and WSDL that\n&gt; most clearly say what you can and cannot do easily with SOAP. In\n&gt; particular, the SOAP specification does not say that an entire service\n&gt; must be served off of a particular URI (even if it is strongly implied).\n&gt; I doubt that the most popular SOAP toolkits are well set-up to allow\n&gt; dynamically created SOAP endpoints so practically speaking the &quot;SOAP\n&gt; way&quot; is accurate but you should know the difference between what SOAP\n&gt; requires and what it &quot;strongly suggests&quot;.\n&gt; \n&gt; Slide 11:\n&gt; \n&gt; You say: &quot;Note the absence of\n&gt; links.  Why is this?\n&gt; Links use HTTP GET,\n&gt; but SOAP only supports\n&gt; HTTP POST.&quot;\n&gt; \n&gt; I don&#39;t think that&#39;s quite the way to put it.\n&gt; \n&gt; Given an HTTP URI, it is possible to treat it as either an HTTP resource\n&gt; or a SOAP endpoint. If you decide to treat it as an HTTP resource then\n&gt; that part of your service is REST-ful. If you decide to treat it as a\n&gt; SOAP endpoint then you have a problem: what method do you use to resolve\n&gt; it to some actual information? You can&#39;t look in the WSDL because WSDL&#39;s\n&gt; describes one and only one endpoint, not the relationship between\n&gt; endpoints. Even if you had the WSDL available, how would you know which\n&gt; of the methods to use? Unless there were some &quot;GET-ter&quot; annotation in\n&gt; WSDL, you don&#39;t know.\n&gt; \n&gt;  Slide 16:\n&gt; \n&gt; &quot;As a result of REST having a common interface any client can use any\n&gt; service without prior coordination.&quot;\n&gt; \n&gt; There is a little bit of subtlety here. Any HTTP client can talk to any\n&gt; HTTP server. This is mostly true also of SOAP, except for the fact that\n&gt; SOAP runs on a bunch of transports so you also have to get the transport\n&gt; right.\n&gt; \n&gt; But in either case the more important question is whether you can do\n&gt; anything useful without prior coordination. Here&#39;s a document I&#39;ve\n&gt; written about that:\n&gt; \n&gt;  * http://www.prescod.net/rest/standardization.html\n&gt; \n&gt;  Slide 19:\n&gt; \n&gt; &quot;SOAP is simply an XML version of CORBA/DCOM/RMI&quot;\n&gt; \n&gt; That&#39;s the case for SOAP RPC but for SOAP in general, I predict SOAP\n&gt; advocates would say:\n&gt; \n&gt;     1. The &quot;big problem&quot; with CORBA was that Microsoft didn&#39;t support\n&gt; it. The &quot;big problem&quot; with DCOM was that it doesn&#39;t work on Unix. The\n&gt; problem with Java RMI is that it doesn&#39;t work with non-Java programming\n&gt; languages. Everyone agrees on SOAP so the network effects can kick in.\n&gt; (not the level of network effects we get from HTTP, but better than the\n&gt; network effects from proprietary RPC protocols)\n&gt; \n&gt;    2. SOAP inherits the extensibility of XML and this allows &quot;loose\n&gt; coupling&quot;. It also allows non-RPC message exchange patterns --\n&gt; particularly asynchronous ones.\n&gt; \n&gt; Slide 21:\n&gt; \n&gt; There should probably be a Meerkat WSDL. I&#39;ll look into that one day.\n&gt; Meerkat could be even better if it had a way to do discovery by\n&gt; hyperlink navigation rather than just queries.\n&gt; \n&gt;  Paul Prescod\n\n\n"}}