{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"6rGMoptVjflk_6x94QIu_j4lOED6kpi46EO_N0VuUC2TxlFUrNXKtf-ratgkB1mdvGpWfLXLtWoZ_3v4o-dQBpgAAE5sQMo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1294102209","msgId":17181,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlra1NwSkVOWDc3WjVtRzBQYndUaXRpc3doMFhYYVRvMG14cDhzREBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDEyOTQwOTY3MTEuMzcyMy45Ni5jYW1lbEBiYWNrcGFjaz4=","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPgk8NEQxOUNERDMuNDA4MDVAd2VicjMub3JnPgk8NzIwMDVGQ0U0N0NENEUxQThBRTE1NzdDOURGOTZBQzVASnJuUEM+CTw0RDE5REQ3My45MDEwMjA3QHdlYnIzLm9yZz4JPEFBTkxrVGluaEJ3dW90dmhiNTdHM3gyQV9xbj10RUhLZFRIamZlRThfWVk1VEBtYWlsLmdtYWlsLmNvbT4JPDREMUEyRkQxLjcwMTA1MDJAd2VicjMub3JnPgk8MEJGNUY4QkEtNDdFMC00NzAzLTgzOTAtNjEwQjRGNENERjkxQG1hYy5jb20+CTwxMjkzNTY5OTc2LjE1NTg5LjUwLmNhbWVsQGJhY2twYWNrPgk8MjAxMDEyMjkwMDQwMjkuZjE0OTM3ZWUuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MTI5MzY0MzEyNC4xNTU4OS43Mi5jYW1lbEBiYWNrcGFjaz4JPDIwMTAxMjI5MTM1MTQ1LmJhYTU0M2Q0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyOTM2NTc3NjQuMTYyMzcuMy5jYW1lbEBiYWNrcGFjaz4JPDIwMTAxMjI5MTkyNjE2LmNmOTUzYmNlLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDEyOTQwODczNzAuMzcyMy41LmNhbWVsQGJhY2twYWNrPgk8QUFOTGtUaW1YLVpHNjEwN0ZwRFdrdjAwWlBjQmZZRFpXa0c0Q0FUSzI4aThFQG1haWwuZ21haWwuY29tPgk8QUFOTGtUaT1RMTAxb1BZTi1rSGNZWHpHRHEtYkV6QlJRUWRtVDhFRk9pZ0I4QG1haWwuZ21haWwuY29tPgk8MTI5NDA5NjcxMS4zNzIzLjk2LmNhbWVsQGJhY2twYWNrPg=="},"prevInTopic":17180,"nextInTopic":17182,"prevInTime":17180,"nextInTime":17182,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"Juergen:  ...  This is an example of what I avoid. I do not encode protocol details (method/media type) in my media types themselves or in the ","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 15016 invoked from network); 4 Jan 2011 00:50:11 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m1.grp.sp2.yahoo.com with QMQP; 4 Jan 2011 00:50:11 -0000\r\nX-Received: from unknown (HELO mail-fx0-f46.google.com) (209.85.161.46)\n  by mta2.grp.sp2.yahoo.com with SMTP; 4 Jan 2011 00:50:11 -0000\r\nX-Received: by fxm20 with SMTP id 20so12870410fxm.33\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 03 Jan 2011 16:50:10 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.36.220 with SMTP id u28mr7848877fad.11.1294102210076; Mon,\n 03 Jan 2011 16:50:10 -0800 (PST)\r\nX-Received: by 10.223.117.74 with HTTP; Mon, 3 Jan 2011 16:50:09 -0800 (PST)\r\nIn-Reply-To: &lt;1294096711.3723.96.camel@backpack&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt;\n\t&lt;4D19CDD3.40805@...&gt;\n\t&lt;72005FCE47CD4E1A8AE1577C9DF96AC5@JrnPC&gt;\n\t&lt;4D19DD73.9010207@...&gt;\n\t&lt;AANLkTinhBwuotvhb57G3x2A_qn=tEHKdTHjfeE8_YY5T@...&gt;\n\t&lt;4D1A2FD1.7010502@...&gt;\n\t&lt;0BF5F8BA-47E0-4703-8390-610B4F4CDF91@...&gt;\n\t&lt;1293569976.15589.50.camel@backpack&gt;\n\t&lt;20101229004029.f14937ee.eric@...&gt;\n\t&lt;1293643124.15589.72.camel@backpack&gt;\n\t&lt;20101229135145.baa543d4.eric@...&gt;\n\t&lt;1293657764.16237.3.camel@backpack&gt;\n\t&lt;20101229192616.cf953bce.eric@...&gt;\n\t&lt;1294087370.3723.5.camel@backpack&gt;\n\t&lt;AANLkTimX-ZG6107FpDWkv00ZPcBfYDZWkG4CATK28i8E@...&gt;\n\t&lt;AANLkTi=Q101oPYN-kHcYXzGDq-bEzBRQQdmT8EFOigB8@...&gt;\n\t&lt;1294096711.3723.96.camel@backpack&gt;\r\nDate: Mon, 3 Jan 2011 19:50:09 -0500\r\nX-Google-Sender-Auth: PK-rQ4Bh3-CRaZq2zhjvRY6ekjg\r\nMessage-ID: &lt;AANLkTikkSpJENX77Z5mG0PbwTitiswh0XXaTo0mxp8sD@...&gt;\r\nTo: juergen.brendel@...\r\nCc: Randy Fischer &lt;fischer@...&gt;, Rest Discussion List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=69164307; y=bda6dHAUUJ_rJc4KSLmjQ9mlNF85oZOwYD19Al3IirZZ\r\nX-Yahoo-Profile: mamund\r\n\r\nJuergen:\n\n&lt;snip&gt;\n&gt; =A0 =A0 =A0 =A0&quot;links&quot; : [ {\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;,=\r\n\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;rel&quot;=\r\n =A0 =A0 =A0 =A0: &quot;self&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0 =A0 : &quot;GET&quot;\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0},\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0{\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=\r\n&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0&quot;rel&quot; =A0 =A0 =A0 =A0: &quot;edit&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0 =A0 : &quot;PUT&quot;,\n&gt; =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;media-type&quot; : &quot;application=\r\n/something&quot;\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0}\n&gt; =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0]\n&lt;/snip&gt;\nThis is an exa=\r\nmple of what I avoid. I do not encode protocol details\n(method/media type) =\r\nin my media types themselves or in the\nrepresentations made w/ these types.=\r\n I know that HTML does this w/\nFORM[1] elements (@method & @enc-type). Ther=\r\ne are times when I may do\nthis, but it is rarely needed for the work I am d=\r\noing. One reason I\nkeep protocol details out of the [representation|media t=\r\nypes] is that\nI favor media types that are &quot;protocol-agnostic.&quot; IOW, it sho=\r\nuld be\npossible to use HTTP, FTP, XMPP, etc. with the same media type and\na=\r\nccomplish the same tasks.\n\nAs for the value of including a media-type strin=\r\ng for a link within\nthe representation (this has been discussed here severa=\r\nl times, I\ncan&#39;t find any links right now), I find this practice needlessly=\r\n\n&quot;locks&quot; the client into expecting the same representation format for a\nlin=\r\nk. I note that HTML currently has @type[2] as a way to give clients\na _hint=\r\n_ on what media type might be at the other end of the link.\n\n&lt;snip&gt;\n&gt; Hm. B=\r\nut then you design application specific media types, which we are\n&gt; suppose=\r\nd to avoid now, don&#39;t you?\n&lt;/snip&gt;\nI&#39;ve never bought into the notion that a=\r\npp-specific media types are\nbad. That is my opinion and nothing more. I can=\r\n only say that, for the\nuse cases I have encountered, [specific|custom] med=\r\nia types work quite\nwell and I have no immediate plans to stop [using|creat=\r\ning] them as I\nfind the need.\n\n&lt;snip&gt;\n&gt; I also think it&#39;s useful to design =\r\na very generic type (such as XML with\n&gt; links or JSON with links) along wit=\r\nh a decent set of generally useful\n&gt; rel values. Once that&#39;s done, this mig=\r\nht be enough for some applications\n&gt; already, while other apps can define t=\r\nheir custom media types merely by\n&gt; defining additional &#39;rel&#39; values for th=\r\nat generic type, rather than a\n&gt; brand new type from scratch? Maybe that&#39;s =\r\nwhat this whole discussion\n&gt; about micro-types is about.\n&lt;/snip&gt;\nIn my curr=\r\nent work, I use XHTML (parsed as XML for some clients) to\nhandle the protoc=\r\nol details (H Factors[3]  is what I call these) and\n@rel values for app-lev=\r\nel details. I&#39;ve been experimenting w/ encoding\nthe details of @rels in a s=\r\necondary document (using the HTML\n@profile[3] pattern) and engineering clie=\r\nnts to &quot;consume&quot; these\nprofile documents, parse them, and &quot;apply&quot; the resul=\r\nts to the generic\nmedia type. This is a mimic of &quot;CSS&quot; but for app-level se=\r\nmantics. I&#39;ve\nbuilt some trivial clients that are capable of applying diffe=\r\nrent\napp-level profiles to the same generic media type and accomplishing\nth=\r\ne desired tasks.\n\nI&#39;ve only dabbled in this space and have nothing meaning =\r\nto show right\nnow. I am hopeful that I&#39;ll make progress on this in 2011.\n\n&lt;=\r\nsnip&gt;\n&gt; Over time, I can imagine that a set of &#39;non generic&#39; rel values wou=\r\nld\n&gt; emerge as generally useful and could thus be added to the media type\n&gt;=\r\n spec which as a result could evolve.\n&lt;/snip&gt;\nThe Web Linking RFC[4] has th=\r\nis as one of it&#39;s aims (results?) and the\nParamsRUs site i referenced earli=\r\ner is part of that effort.\n\n[1] http://www.w3.org/TR/html401/interact/forms=\r\n.html#h-17.3\n[2] http://www.w3.org/TR/html4/struct/links.html#adef-type-A\n[=\r\n3] http://gmpg.org/xmdp/\n[4] http://tools.ietf.org/html/rfc5988\n\nmca\nhttp:/=\r\n/amundsen.com/blog/\nhttp://twitter.com@mamund\nhttp://mamund.com/foaf.rdf#me=\r\n\n\n\n#RESTFest 2010\nhttp://rest-fest.googlecode.com\n\n\n\n\nOn Mon, Jan 3, 2011 a=\r\nt 18:18, Juergen Brendel\n&lt;juergen.brendel@...&gt; wrote:\n&gt;\n&gt; Hello!\n&gt;=\r\n\n&gt; On Mon, 2011-01-03 at 16:27 -0500, mike amundsen wrote:\n&gt;&gt; I currently u=\r\nse @rels for application-level semantics. IOW, they don&#39;t\n&gt;&gt; indicate any p=\r\nrotocol details (HTTP methods, content-types, etc.)\n&gt;\n&gt; Right, that was act=\r\nually one of my other questions: Often it seems that\n&gt; it would be nice to =\r\nindicate in the link itself what media type and HTTP\n&gt; method is supported.=\r\n Something like:\n&gt;\n&gt; =A0 =A0 =A0 =A0&quot;links&quot; : [ {\n&gt; =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;=\r\n,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;rel=\r\n&quot; =A0 =A0 =A0 =A0: &quot;self&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0 =A0 : &quot;GET&quot;\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0},\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0{\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=\r\n =A0&quot;href&quot; =A0 =A0 =A0 : &quot;/foo/bar&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =\r\n=A0 =A0 =A0 =A0 =A0 =A0&quot;rel&quot; =A0 =A0 =A0 =A0: &quot;edit&quot;,\n&gt; =A0 =A0 =A0 =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;method&quot; =A0 =A0 : &quot;PUT&quot;,\n&gt; =A0 =A0=\r\n =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0&quot;media-type&quot; : &quot;applica=\r\ntion/something&quot;\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0}\n=\r\n&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0]\n&gt;\n&gt; Or something the=\r\nreabouts (this was JSON-like, but that shouldn&#39;t\n&gt; distract). I admit that =\r\nif your media type is specified/standardized\n&gt; somewhere then most of this =\r\ninformation isn&#39;t required right here at\n&gt; this point, since the method and=\r\n media type (for POST/PUT) could be\n&gt; defined there. On the other hand, I w=\r\nould actually love to see this sort\n&gt; of information in the control links o=\r\nf a RESTful API, since it means I\n&gt; don&#39;t have to jump back and forth betwe=\r\nen type spec and the stuff\n&gt; presented to me in the API, instead I can just=\r\n look right here and see\n&gt; (almost) everything I need.\n&gt;\n&gt; It seems an API =\r\nthat you can just look at without having to read much of\n&gt; a spec is more u=\r\nser friendly and - all else being equal - should see\n&gt; better/easier adopti=\r\non.\n&gt;\n&gt; It also allows you to evolve your API independently of the exact me=\r\ndia\n&gt; type definition, since as you are adding more control links over time=\r\n,\n&gt; they can just be presented, carrying all the information you need to\n&gt; =\r\nenjoy them.\n&gt;\n&gt; For example, the &#39;image&#39; property of a personal profile or =\r\nbio could\n&gt; advertise (in the link description) the image media types it ca=\r\nn accept.\n&gt; More can be added over time, without needing to update the medi=\r\na type\n&gt; description.\n&gt;\n&gt;&gt;\n&gt;&gt; I currently implement this app-level support =\r\nusing @rel in two\n&gt;&gt; different ways.\n&gt;\n&gt;&gt; *** app-level semantics are &quot;nati=\r\nve&quot; to a custom media-type.\n&gt;&gt; In this case, the rel values are &quot;baked&quot; int=\r\no the media type support\n&gt;&gt; (e.g. HTML does this w/ rel=3D&quot;stylesheet&quot;). I =\r\ndesign a very narrow\n&gt;&gt; media type that is targeted for a collection of rel=\r\nated work and use\n&gt;&gt; @rel to hold app-level details that can be used by cli=\r\nent apps to\n&gt;&gt; perform their own processing. This works well for my current=\r\n round of\n&gt;&gt; &quot;m2m-style&quot; clients.\n&gt;\n&gt; Hm. But then you design application s=\r\npecific media types, which we are\n&gt; supposed to avoid now, don&#39;t you?\n&gt;\n&gt;\n&gt;=\r\n&gt; *** app-level semantics are &quot;adjunct&quot; to a generic media type.\n&gt;&gt; In this=\r\n case, the rel values are documented &quot;out-of-band&quot; (e.g. within\n&gt;&gt; the gene=\r\nric media type[1], IANA Link Relations[2], RelExtensions[3],\n&gt;&gt; ParamsRUs [=\r\n4], or my own implementation-specific documentation). Then\n&gt;&gt; code-on-deman=\r\nd is sent to the client to help the client &quot;sort out&quot; the\n&gt;&gt; meaning and us=\r\ne of these real values. This is done a a case-by-case\n&gt;&gt; basis; offers the =\r\nmost flexibility, but is non-standard for each\n&gt;&gt; implementation (including=\r\n supporting more than one client type\n&gt;&gt; (browser, command-line, desktop, e=\r\ntc.).\n&gt;&gt;\n&gt; I also think it&#39;s useful to design a very generic type (such as =\r\nXML with\n&gt; links or JSON with links) along with a decent set of generally u=\r\nseful\n&gt; rel values. Once that&#39;s done, this might be enough for some applica=\r\ntions\n&gt; already, while other apps can define their custom media types merel=\r\ny by\n&gt; defining additional &#39;rel&#39; values for that generic type, rather than =\r\na\n&gt; brand new type from scratch? Maybe that&#39;s what this whole discussion\n&gt; =\r\nabout micro-types is about.\n&gt;\n&gt; Over time, I can imagine that a set of &#39;non=\r\n generic&#39; rel values would\n&gt; emerge as generally useful and could thus be a=\r\ndded to the media type\n&gt; spec which as a result could evolve.\n&gt;\n&gt; Juergen\n&gt;=\r\n\n&gt;\n&gt;\n&gt; --\n&gt; Juergen Brendel\n&gt; MuleSoft\n&gt;\n&gt;\n\n"}}