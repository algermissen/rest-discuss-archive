{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Joe Hsy","from":"Joe Hsy &lt;joe.hsy@...&gt;","replyTo":"SENDER","senderId":"EUBKWED4h40I_ewKlW3z4SlJWQcSp4e5h161M75YKQZV-qu-kSdSb4Qf9xoNjogNku823QNpYTAeF5AwjgLlCmWIbG8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] XML&#39;s &quot;Big Idea&quot; and how it relates to REST","postDate":"1024690573","msgId":1638,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwMjIzNjcxODJCOEQ1MTFBNzcxMDA1MDhCREYzNDg2MDQ5QTUzMzNAZXhjaGFuZ2UtMS5rZXlub3RlLmNvbT4="},"prevInTopic":1637,"nextInTopic":1667,"prevInTime":1637,"nextInTime":1639,"topicId":1637,"numMessagesInTopic":7,"msgSnippet":"... From: Paul Prescod [mailto:paul@prescod.net] ... I ve always thought this this type of characterization of OO is rather unfair.  Encapsulation can be both","rawEmail":"Return-Path: &lt;joe.hsy@...&gt;\r\nX-Sender: joe.hsy@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 21 Jun 2002 20:16:44 -0000\r\nReceived: (qmail 32445 invoked from network); 21 Jun 2002 20:16:44 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m9.grp.scd.yahoo.com with QMQP; 21 Jun 2002 20:16:44 -0000\r\nReceived: from unknown (HELO mailnew.keynote.com) (65.198.48.132)\n  by mta3.grp.scd.yahoo.com with SMTP; 21 Jun 2002 20:16:45 -0000\r\nReceived: from exchange-1.keynote.com (exchange-1.keynote.com [65.198.49.11])\n\tby mailnew.keynote.com (8.12.3/8.12.3) with ESMTP id g5LKGDgc026713;\n\tFri, 21 Jun 2002 13:16:13 -0700 (PDT)\r\nX-Handled-By: mailnew.keynote.com\r\nReceived: by exchange-1.keynote.com with Internet Mail Service (5.5.2653.19)\n\tid &lt;M5D4C4YB&gt;; Fri, 21 Jun 2002 13:16:13 -0700\r\nMessage-ID: &lt;1022367182B8D511A77100508BDF3486049A5333@...&gt;\r\nTo: &quot;&#39;Paul Prescod&#39;&quot; &lt;paul@...&gt;, rest-discuss@yahoogroups.com\r\nSubject: RE: [rest-discuss] XML&#39;s &quot;Big Idea&quot; and how it relates to REST\r\nDate: Fri, 21 Jun 2002 13:16:13 -0700\r\nMIME-Version: 1.0\r\nX-Mailer: Internet Mail Service (5.5.2653.19)\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nFrom: Joe Hsy &lt;joe.hsy@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\n\n-----Original Message-----\nFrom: Paul Prescod [mailto:paul@...]\n\n&gt; Kevin Smathers described the difference very nicely.\n&gt; \n&gt;   While you can probably think of an OO design more quickly than you can\n&gt;   a distributed document design, (and I do agree that any good designer\n&gt;   could do so), that view completely neglects what you are trying to get\n&gt;   from a loosely coupled design.  Data/method encapsulation is what you\n&gt;   are trying to avoid, not what you are trying to achieve.\n\nI&#39;ve always thought this this type of characterization of OO is rather\nunfair.  Encapsulation can be both a good thing and a bad thing depending on\nwhat you&#39;re encapsulating and the nature of the application.  REST uses\nencapsulation to good use as well.  Per Roy&#39;s thesis chapter 5.2.1 (Data\nElements):\n\n    REST therefore gains the separation of concerns of the client-server\nstyle without\n    the server scalability problem, allows information hiding through a\ngeneric interface\n    to enable encapsulation and evolution of services, and provides for a\ndiverse set\n    of functionality through downloadable feature-engines.\n\nI&#39;ve never viewed OO as method oriented.  Objects are data as well as\nassociated methods.  Exposing data and methods appropriately are matters of\ndesign (good designs expose the right set).  Exposing all the data all the\ntime isn&#39;t the point and isn&#39;t always a good idea.  Likewise, I still don&#39;t\nunderstand why just because we are dealing with a super-scale distributed\nsystem that we should not allowing *any* object methods to be exposed.\n\nI think having an internet-scale OO system would be a very good thing and\nwould quite useful.  I&#39;ve been trying to see if REST or some of the core\nconcepts of REST can be the basis of such an OO system and I still think it\ncan.  But, if we keep insisting REST as incompatible with OO, I guess it is\na hopeless cause.\n\n//Joe\n\nThis email message, and any attachments to it, are for the sole use of the\nintended recipients, and may contain confidential and privileged\ninformation.  Any unauthorized review, use, disclosure or distribution of\nthis email message or its attachments is prohibited.  If you are not the\nintended recipient, please contact the sender by reply email and destroy all\ncopies of the original message. \n\n"}}