{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":433892539,"authorName":"Barry Norton","from":"Barry Norton &lt;barrynorton@...&gt;","profile":"barrynorton2","replyTo":"SENDER","senderId":"692sJ0oLFOXXvpD96sMEEZl5MeSQPyWY1inEdOHDxC5wot0pll90Ka49bHA_M0EnuniG3Cuj2qVG4aZodvhVBSWYE2iMIvvxwi6H","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: The relation of Linked Data/Semantic Web to REST","postDate":"1296478741","msgId":17249,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDRENDZCMjE1LjYwNjA5MDRAR01haWwuY29tPg==","inReplyToHeader":"PGlpNjkzdCs2YWdzQGVHcm91cHMuY29tPg==","referencesHeader":"PGlpNjkzdCs2YWdzQGVHcm91cHMuY29tPg=="},"prevInTopic":17248,"nextInTopic":17250,"prevInTime":17248,"nextInTime":17250,"topicId":17242,"numMessagesInTopic":40,"msgSnippet":"Bob, there s already quite a few of the semantics crowd working explicitly in this area. Reto Krummenacher, who I worked with in Innsbruck, and I had a","rawEmail":"Return-Path: &lt;barrynorton@...&gt;\r\nReceived: (qmail 77996 invoked from network); 31 Jan 2011 13:01:17 -0000\r\nReceived: from unknown (98.137.34.46)\n  by m7.grp.sp2.yahoo.com with QMQP; 31 Jan 2011 13:01:17 -0000\r\nReceived: from unknown (HELO n42b.bullet.mail.sp1.yahoo.com) (66.163.168.156)\n  by mta3.grp.sp2.yahoo.com with SMTP; 31 Jan 2011 13:01:17 -0000\r\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoogroups.com; s=lima; t=1296478877; bh=7NTaoRljewi9muQ0cxRLKu4Xcgn9zIyWaCy7JAHbO+k=; h=Received:Received:X-Sender:X-Apparently-To:X-Received:X-Received:X-Received:X-Received:X-Received:X-Received:Message-ID:Date:User-Agent:MIME-Version:To:Cc:References:In-Reply-To:Content-Type:X-Originating-IP:X-eGroups-Msg-Info:From:Reply-To:Subject:X-Yahoo-Group-Post:X-Yahoo-Profile:X-YGroups-SubInfo:Sender:X-Yahoo-Newman-Property:X-eGroups-Approved-By:X-eGroups-Auth; b=dGmJ9oD+OB3p+cVSJRJgi5XTygRwk4ie7wPUN6emcVlGMrhHmvg1v4fTiaDcrhqk30QAXOTqYUgGLK9NCO9OExvkMuWa/56an6Gcz9ZoXvAkeTC8i7TwgjV5tNS5WTvy\r\nReceived: from [69.147.65.151] by n42.bullet.mail.sp1.yahoo.com with NNFMP; 31 Jan 2011 13:01:17 -0000\r\nReceived: from [98.137.34.184] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 31 Jan 2011 13:01:17 -0000\r\nX-Sender: barrynorton@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 43250 invoked from network); 31 Jan 2011 12:59:05 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.sp2.yahoo.com with QMQP; 31 Jan 2011 12:59:05 -0000\r\nX-Received: from unknown (HELO mail-fx0-f53.google.com) (209.85.161.53)\n  by mta1.grp.sp2.yahoo.com with SMTP; 31 Jan 2011 12:59:05 -0000\r\nX-Received: by fxm11 with SMTP id 11so5700742fxm.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 31 Jan 2011 04:59:04 -0800 (PST)\r\nX-Received: by 10.223.74.1 with SMTP id s1mr5983872faj.138.1296478744278;\n        Mon, 31 Jan 2011 04:59:04 -0800 (PST)\r\nX-Received: from [172.22.177.152] (nat.rz.uni-karlsruhe.de [129.13.72.198])\n        by mx.google.com with ESMTPS id y1sm7338168fak.39.2011.01.31.04.59.02\n        (version=SSLv3 cipher=RC4-MD5);\n        Mon, 31 Jan 2011 04:59:03 -0800 (PST)\r\nMessage-ID: &lt;4D46B215.6060904@...&gt;\r\nDate: Mon, 31 Jan 2011 13:59:01 +0100\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.2.13) Gecko/20101207 Thunderbird/3.1.7\r\nMIME-Version: 1.0\r\nTo: Bob Ferris &lt;zazi@...&gt;\r\nCc: Danny &lt;danny.ayers@...&gt;, rest-discuss@yahoogroups.com, \n linkeddataandservices@...\r\nReferences: &lt;ii693t+6ags@...&gt;\r\nIn-Reply-To: &lt;ii693t+6ags@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------040006000404090000080101&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Barry Norton &lt;barrynorton@...&gt;\r\nReply-To: BarryNorton@...\r\nSubject: Re: [rest-discuss] Re: The relation of Linked Data/Semantic Web to\n REST\r\nX-Yahoo-Group-Post: member; u=433892539; y=C8byv1DyK_SRW_785WXxHKPC68LGLdFh-MQn9TapAtKOfwjR0xUd\r\nX-Yahoo-Profile: barrynorton2\r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 31 Jan 2011 13:01:16 -0000\r\n\r\n\r\n--------------040006000404090000080101\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\nBob, there&#39;s already quite a few of the semantics crowd working \nexplicitly in this area.\n\nReto Krummenacher, who I worked with in Innsbruck, and I had a tutorial \non &#39;Linked Open Services &lt;http://www.linkedopenservices.org/blog&gt;&#39; at \nISWC last year. There&#39;s work at Karlsruhe (where I moved) on &#39;Linked \nData Services&#39;, looking closely into the interlinkage of service results \nas well as &#39;query planning&#39; over RDF-based retrieval operations. Also \nthere&#39;s work (from my former colleagues) at the OU who originally coined \nthe term &#39;Linked Services&#39; - they&#39;re particularly concerned with \nexposing service descriptions as Linked Data (indeed you&#39;ll see their \niServe tool as one of the bubbles in the latest Linking Open Data Cloud).\n\nAs you observe, most of the best practice around Linked Data is simply \nabout retrieval. Even with updates in SPARQL 1.1, and its bindings (and \nsome other read/write approaches to Linked Data) there&#39;s very often a \nnaive notion of pushing complete RDF descriptions of resources / named \ngraphs, and little accomodation of computation and side effects \nresulting from interactions, which one expects with services. In Linked \nOpen Services we try to bring more of REST together with Linked Data and \nhave many (RDF-exchanging) services that create new addressable REST \nresources, i.e. that can be, say, DELETEd but also POSTed to individually.\n\nI&#39;d say two important questions with RDF-based communications are: (as \nyou said) how to use RDF in the equivalent/supplementary role as HATEOS \n(to make the future state and interactions &#39;machine processable&#39; in an \nRDF/inference-driven way); (additionally) how to describe messages \nexpected in a Linked Data compatible way.\n\nTo the latter question the Linked Open Services and Linked Data Services \nwork proved almost exactly coincident in both picking SPARQL graph \npatterns. Very much like the static data argument for flexibility \n(extensible graph constraints versus fixed - difficult to compatibly \nextend, difficult to reuse without planning - schemas), we find that \nthis is a very intuitive way to describe what the service would like you \nto submit, and what you can expect to receive back (in RDF form).\n\nI&#39;ve CCed the Google Group we&#39;d all started together, but not yet \nadvertised, hoping that some of the other guys will jump in here.\n\nBarry\n\n\n\n\nOn 31/01/2011 13:14, Danny wrote:\n&gt;\n&gt; Hi Bob,\n&gt;\n&gt; Glad you&#39;ve brough this up, and I reckon you&#39;ve pretty well scoped the \n&gt; domain.\n&gt;\n&gt; Generally I&#39;d say that Linked Data/Semantic Web technologies do fit \n&gt; well with the REST model. The separation between resources and their \n&gt; representations allow resources that correspond to non-document things \n&gt; (concepts, real-world objects etc) to have HTTP-friendly \n&gt; representations. (having said that, http-range-14 is a bit of a \n&gt; rathole, but the TAG&#39;s resolution with 303s etc seems Good Enough).\n&gt;\n&gt; So this part I suggest could be called &quot;transparent&quot;, there aren&#39;t \n&gt; really any interop obstacles on the horizon from the perspectives of \n&gt; REST, HTTP or Semantic Web/Linked Data.\n&gt;\n&gt; But your following comments do raise some very interesting issues.\n&gt;\n&gt; &gt; [...] Hypermedia Driven Application State of the REST principles. \n&gt; This principle can again be powered for better machine processing by \n&gt; using the common knowledge representation languages of the Semantic \n&gt; Web as basis.\n&gt;\n&gt; Ok, agreed. By generalizing from documents to /anything/, the \n&gt; resources and their relationships (via their representations), are \n&gt; potentially a lot more open to direct machine processing.\n&gt;\n&gt; &gt; However, I&#39;m a bit unclear how the links drive my application state. \n&gt; Although, I guess that the application state would change when \n&gt; navigating to a resource by dereferencing a link (HTTP URI).\n&gt; &gt; This is explained in the introduction section of Principled Design \n&gt; of the Modern Web Architecture[13]:\n&gt; &gt;\n&gt; &gt; The name &quot;Representational State Transfer&quot; is intended to evoke an \n&gt; image of how a well-designed Web application behaves: a network of Web \n&gt; pages forms a virtual state machine allowing a user to progress \n&gt; through the application by selecting a link or submitting a short \n&gt; data-entry form, with each action resulting in a transition to the \n&gt; next state of the application by transferring a representation of that \n&gt; state to the user.\n&gt;\n&gt; Right, that&#39;s my understanding too.\n&gt; With most current applications the state that&#39;s needed is fairly \n&gt; trivial. The primary Web application, the browser, only usually deals \n&gt; with a handful of resources at a time. Even with things like proxies, \n&gt; aggregators, spider-based agents etc, the interactions are \n&gt; individually very simple, it&#39;s just there are a lot more of them going \n&gt; on concurrently.\n&gt;\n&gt; On the other hand I suspect SW/LD applications are likely to be a lot \n&gt; more demanding in terms of complexity of state. A representation of a \n&gt; resource (plus HTTP headers) can contain a lot more resource-related \n&gt; machine-usable information than an opaque blob or even a HTML document \n&gt; with hrefs.\n&gt;\n&gt; The water around Web applications has been muddied somewhat by systems \n&gt; that rely on server-side state and coupling to the client: &quot;I can&#39;t do \n&gt; that without cookies&quot;, and RPC still pops up here and there, however \n&gt; disguised.\n&gt; (Aside: I&#39;d be interested in pointers to material that walks the \n&gt; reader from this mindset to something more RESTful).\n&gt;\n&gt; But with SW/LD apps we kind-of have a chance to start from year zero \n&gt; and do things *right*. The links you provided and the Linked Data \n&gt; Patterns book [1] are good steps in this direction (as hopefully so so \n&gt; too the Linked Data book [2]).\n&gt;\n&gt; &gt; Stateless Interaction is not really covered by the Linked Data \n&gt; principles as defined by timbl[9], or? Although, when realizing &quot;state \n&gt; as a resource&quot; (cf. [15]), I can use again the common knowledge \n&gt; representation languages of the Semantic Web as basis for describing \n&gt; states and using HTTP URIs to make these resources also accessible.\n&gt;\n&gt; Yes - although the &quot;transparency&quot; here is not so obvious.\n&gt;\n&gt; &gt; Would you agree with (parts of) my interpretation?\n&gt;\n&gt; Generally, yes.\n&gt;\n&gt; &gt; Finally, are the principles of Linked Data really only intended to \n&gt; be read-only. I though read and write would better fit to the \n&gt; principles of REST, or?\n&gt;\n&gt; A very good point. Read, write and the other operations covered by \n&gt; HTTP methods should ideally be a core part of LD/SW systems from the \n&gt; get-go (otherwise things will be a bit boring!).\n&gt;\n&gt; It has taken the Web quite a while to get more read/write despite the \n&gt; capability being there from the start. CMSs and blogging tools, things \n&gt; like Twitter and Facebook do help extend the media from broadcast to \n&gt; peer (few publishers/many consumers -&gt; many publishers/many \n&gt; consumers). Even within these useful systems there are various Web \n&gt; anti-patterns, most notably the closed data silo as opposed to linked \n&gt; open data (LOD, [3]).\n&gt;\n&gt; (heh, speaking of which I might well repost this mail on my blog, or \n&gt; at least tweet it...)\n&gt;\n&gt; Hopefully, thanks to the explosion in publication of RDFa - 3.6% of \n&gt; webpages now contain RDFa [4] - we will soon be seeing a lot more \n&gt; diverse use made of the technologies from folks that aren&#39;t coming \n&gt; straight from the traditional (incomprehensible ;) SW/LD communities.\n&gt;\n&gt; There may well also be some more useful infrastructure subsystem bits \n&gt; (akin to those described by Fielding in his thesis) enabled by RESTful \n&gt; HTTP + semweb tech. For example, an RDF store (server- or client-side) \n&gt; is essentially a cache of a little chunk of the Web of Data. A SPARQL \n&gt; endpoint offers an efficient mode of access to that cache. Going one \n&gt; step further, a generic intelligent linked data proxy could be \n&gt; composed this way.\n&gt;\n&gt; The current generation of mainstream RDF/SW/LD applications seem to be \n&gt; mostly limited either catalog-like systems (e.g. the drug DBs and the \n&gt; BBC) or the augmentation of search (e.g. Yahoo! SearchMonkey and \n&gt; Google Rich Snippets). Useful those these may be, they aren&#39;t exactly \n&gt; inspiring.\n&gt;\n&gt; Going off-topic a little, I reckon the parts needed for a really \n&gt; useful, compelling and *interesting* Web of data include:\n&gt;\n&gt; * improved linkage between data sets, to facilitate easier discovery\n&gt; * refactoring of traditional data-based activities to use \n&gt; (just-in-time) linked data\n&gt; * new user interface paradigms to work with linked data\n&gt; * a lot more imagination!\n&gt;\n&gt; I reckon there&#39;s easily enough momentum to make progress down this \n&gt; track inevitable - the question is what do we need to do to lubricate \n&gt; the wheels and move a bit faster.\n&gt;\n&gt; Cheers,\n&gt; Danny.\n&gt;\n&gt; [1] http://patterns.dataincubator.org/book/\n&gt; [2] \n&gt; http://tomheath.com/blog/2011/01/the-linked-data-book-draft-table-of-contents/\n&gt; [3] http://esw.w3.org/SweoIG/TaskForces/CommunityProjects/LinkingOpenData\n&gt; [4] \n&gt; http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/\n&gt;\n&gt; \n\n\r\n--------------040006000404090000080101\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta content=&quot;text/html; charset=ISO-8859-1&quot;\n      http-equiv=&quot;Content-Type&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body text=&quot;#000000&quot; bgcolor=&quot;#ffffff&quot;&gt;\n    &lt;br&gt;\n    Bob, there&#39;s already quite a few of the semantics crowd working\n    explicitly in this area.&lt;br&gt;\n    &lt;br&gt;\n    Reto Krummenacher, who I worked with in Innsbruck, and I had a\n    tutorial on &#39;&lt;a href=&quot;http://www.linkedopenservices.org/blog&quot;&gt;Linked\n      Open Services&lt;/a&gt;&#39; at ISWC last year. There&#39;s work at Karlsruhe\n    (where I moved) on &#39;Linked Data Services&#39;, looking closely into the\n    interlinkage of service results as well as &#39;query planning&#39; over\n    RDF-based retrieval operations. Also there&#39;s work (from my former\n    colleagues) at the OU who originally coined the term &#39;Linked\n    Services&#39; - they&#39;re particularly concerned with exposing service\n    descriptions as Linked Data (indeed you&#39;ll see their iServe tool as\n    one of the bubbles in the latest Linking Open Data Cloud).&lt;br&gt;\n    &lt;br&gt;\n    As you observe, most of the best practice around Linked Data is\n    simply about retrieval. Even with updates in SPARQL 1.1, and its\n    bindings (and some other read/write approaches to Linked Data)\n    there&#39;s very often a naive notion of pushing complete RDF\n    descriptions of resources / named graphs, and little accomodation of\n    computation and side effects resulting from interactions, which one\n    expects with services. In Linked Open Services we try to bring more\n    of REST together with Linked Data and have many (RDF-exchanging)\n    services that create new addressable REST resources, i.e. that can\n    be, say, DELETEd but also POSTed to individually.&lt;br&gt;\n    &lt;br&gt;\n    I&#39;d say two important questions with RDF-based communications are:\n    (as you said) how to use RDF in the equivalent/supplementary role as\n    HATEOS (to make the future state and interactions &#39;machine\n    processable&#39; in an RDF/inference-driven way); (additionally) how to\n    describe messages expected in a Linked Data compatible way.&lt;br&gt;\n    &lt;br&gt;\n    To the latter question the Linked Open Services and Linked Data\n    Services work proved almost exactly coincident in both picking\n    SPARQL graph patterns. Very much like the static data argument for\n    flexibility (extensible graph constraints versus fixed - difficult\n    to compatibly extend, difficult to reuse without planning -\n    schemas), we find that this is a very intuitive way to describe what\n    the service would like you to submit, and what you can expect to\n    receive back (in RDF form).&lt;br&gt;\n    &lt;br&gt;\n    I&#39;ve CCed the Google Group we&#39;d all started together, but not yet\n    advertised, hoping that some of the other guys will jump in here.&lt;br&gt;\n    &lt;br&gt;\n    Barry&lt;br&gt;\n    &lt;br&gt;\n    &lt;br&gt;\n    &nbsp;&lt;br&gt;\n    &lt;br&gt;\n    On 31/01/2011 13:14, Danny wrote:\n    &lt;blockquote cite=&quot;mid:ii693t+6ags@...&quot; type=&quot;cite&quot;&gt;\n      &lt;meta http-equiv=&quot;Context-Type&quot; content=&quot;text/html;\n        charset=ISO-8859-1&quot;&gt;\n      &lt;span&gt;&nbsp;&lt;/span&gt;\n      &lt;div&gt;\n        &lt;div&gt;\n          &lt;div&gt;\n            &lt;p&gt;Hi Bob, &lt;br&gt;\n              &lt;br&gt;\n              Glad you&#39;ve brough this up, and I reckon you&#39;ve pretty\n              well scoped the domain. &lt;br&gt;\n              &lt;br&gt;\n              Generally I&#39;d say that Linked Data/Semantic Web\n              technologies do fit well with the REST model. The\n              separation between resources and their representations\n              allow resources that correspond to non-document things\n              (concepts, real-world objects etc) to have HTTP-friendly\n              representations. (having said that, http-range-14 is a bit\n              of a rathole, but the TAG&#39;s resolution with 303s etc seems\n              Good Enough).&lt;br&gt;\n              &lt;br&gt;\n              So this part I suggest could be called &quot;transparent&quot;,\n              there aren&#39;t really any interop obstacles on the horizon\n              from the perspectives of REST, HTTP or Semantic Web/Linked\n              Data. &lt;br&gt;\n              &lt;br&gt;\n              But your following comments do raise some very interesting\n              issues.&lt;br&gt;\n              &lt;br&gt;\n              &gt; [...] Hypermedia Driven Application State of the REST\n              principles. This principle can again be powered for better\n              machine processing by using the common knowledge\n              representation languages of the Semantic Web as basis. &lt;br&gt;\n              &lt;br&gt;\n              Ok, agreed. By generalizing from documents to /anything/,\n              the resources and their relationships (via their\n              representations), are potentially a lot more open to\n              direct machine processing.&lt;br&gt;\n              &lt;br&gt;\n              &gt; However, I&#39;m a bit unclear how the links drive my\n              application state. Although, I guess that the application\n              state would change when navigating to a resource by\n              dereferencing a link (HTTP URI).&lt;br&gt;\n              &gt; This is explained in the introduction section of\n              Principled Design of the Modern Web Architecture[13]:&lt;br&gt;\n              &gt; &lt;br&gt;\n              &gt; The name &quot;Representational State Transfer&quot; is\n              intended to evoke an image of how a well-designed Web\n              application behaves: a network of Web pages forms a\n              virtual state machine allowing a user to progress through\n              the application by selecting a link or submitting a short\n              data-entry form, with each action resulting in a\n              transition to the next state of the application by\n              transferring a representation of that state to the user.&lt;br&gt;\n              &lt;br&gt;\n              Right, that&#39;s my understanding too. &lt;br&gt;\n              With most current applications the state that&#39;s needed is\n              fairly trivial. The primary Web application, the browser,\n              only usually deals with a handful of resources at a time.\n              Even with things like proxies, aggregators, spider-based\n              agents etc, the interactions are individually very simple,\n              it&#39;s just there are a lot more of them going on\n              concurrently.&lt;br&gt;\n              &lt;br&gt;\n              On the other hand I suspect SW/LD applications are likely\n              to be a lot more demanding in terms of complexity of\n              state. A representation of a resource (plus HTTP headers)\n              can contain a lot more resource-related machine-usable\n              information than an opaque blob or even a HTML document\n              with hrefs.&lt;br&gt;\n              &lt;br&gt;\n              The water around Web applications has been muddied\n              somewhat by systems that rely on server-side state and\n              coupling to the client: &quot;I can&#39;t do that without cookies&quot;,\n              and RPC still pops up here and there, however disguised. &lt;br&gt;\n              (Aside: I&#39;d be interested in pointers to material that\n              walks the reader from this mindset to something more\n              RESTful). &lt;br&gt;\n              &lt;br&gt;\n              But with SW/LD apps we kind-of have a chance to start from\n              year zero and do things *right*. The links you provided\n              and the Linked Data Patterns book [1] are good steps in\n              this direction (as hopefully so so too the Linked Data\n              book [2]).&lt;br&gt;\n              &lt;br&gt;\n              &gt; Stateless Interaction is not really covered by the\n              Linked Data principles as defined by timbl[9], or?\n              Although, when realizing &quot;state as a resource&quot; (cf. [15]),\n              I can use again the common knowledge representation\n              languages of the Semantic Web as basis for describing\n              states and using HTTP URIs to make these resources also\n              accessible.&lt;br&gt;\n              &lt;br&gt;\n              Yes - although the &quot;transparency&quot; here is not so obvious.&lt;br&gt;\n              &lt;br&gt;\n              &gt; Would you agree with (parts of) my interpretation?&lt;br&gt;\n              &lt;br&gt;\n              Generally, yes.&lt;br&gt;\n              &lt;br&gt;\n              &gt; Finally, are the principles of Linked Data really\n              only intended to be read-only. I though read and write\n              would better fit to the principles of REST, or?&lt;br&gt;\n              &lt;br&gt;\n              A very good point. Read, write and the other operations\n              covered by HTTP methods should ideally be a core part of\n              LD/SW systems from the get-go (otherwise things will be a\n              bit boring!). &lt;br&gt;\n              &lt;br&gt;\n              It has taken the Web quite a while to get more read/write\n              despite the capability being there from the start. CMSs\n              and blogging tools, things like Twitter and Facebook do\n              help extend the media from broadcast to peer (few\n              publishers/many consumers -&gt; many publishers/many\n              consumers). Even within these useful systems there are\n              various Web anti-patterns, most notably the closed data\n              silo as opposed to linked open data (LOD, [3]).&lt;br&gt;\n              &lt;br&gt;\n              (heh, speaking of which I might well repost this mail on\n              my blog, or at least tweet it...)&lt;br&gt;\n              &lt;br&gt;\n              Hopefully, thanks to the explosion in publication of RDFa\n              - 3.6% of webpages now contain RDFa [4] - we will soon be\n              seeing a lot more diverse use made of the technologies\n              from folks that aren&#39;t coming straight from the\n              traditional (incomprehensible ;) SW/LD communities. &lt;br&gt;\n              &lt;br&gt;\n              There may well also be some more useful infrastructure\n              subsystem bits (akin to those described by Fielding in his\n              thesis) enabled by RESTful HTTP + semweb tech. For\n              example, an RDF store (server- or client-side) is\n              essentially a cache of a little chunk of the Web of Data.\n              A SPARQL endpoint offers an efficient mode of access to\n              that cache. Going one step further, a generic intelligent\n              linked data proxy could be composed this way.&lt;br&gt;\n              &lt;br&gt;\n              The current generation of mainstream RDF/SW/LD\n              applications seem to be mostly limited either catalog-like\n              systems (e.g. the drug DBs and the BBC) or the\n              augmentation of search (e.g. Yahoo! SearchMonkey and\n              Google Rich Snippets). Useful those these may be, they\n              aren&#39;t exactly inspiring.&lt;br&gt;\n              &lt;br&gt;\n              Going off-topic a little, I reckon the parts needed for a\n              really useful, compelling and *interesting* Web of data\n              include:&lt;br&gt;\n              &lt;br&gt;\n              * improved linkage between data sets, to facilitate easier\n              discovery&lt;br&gt;\n              * refactoring of traditional data-based activities to use\n              (just-in-time) linked data&lt;br&gt;\n              * new user interface paradigms to work with linked data&lt;br&gt;\n              * a lot more imagination!&lt;br&gt;\n              &lt;br&gt;\n              I reckon there&#39;s easily enough momentum to make progress\n              down this track inevitable - the question is what do we\n              need to do to lubricate the wheels and move a bit faster.&lt;br&gt;\n              &lt;br&gt;\n              Cheers,&lt;br&gt;\n              Danny.&lt;br&gt;\n              &lt;br&gt;\n              [1] &lt;a moz-do-not-send=&quot;true&quot;\n                href=&quot;http://patterns.dataincubator.org/book/&quot;&gt;http://patterns.dataincubator.org/book/&lt;/a&gt;&lt;br&gt;\n              [2] &lt;a moz-do-not-send=&quot;true&quot;\nhref=&quot;http://tomheath.com/blog/2011/01/the-linked-data-book-draft-table-of-contents/&quot;&gt;http://tomheath.com/blog/2011/01/the-linked-data-book-draft-table-of-contents/&lt;/a&gt;&lt;br&gt;\n              [3] &lt;a moz-do-not-send=&quot;true&quot;\nhref=&quot;http://esw.w3.org/SweoIG/TaskForces/CommunityProjects/LinkingOpenData&quot;&gt;http://esw.w3.org/SweoIG/TaskForces/CommunityProjects/LinkingOpenData&lt;/a&gt;&lt;br&gt;\n              [4] &lt;a moz-do-not-send=&quot;true&quot;\nhref=&quot;http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/&quot;&gt;http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/&lt;/a&gt;&lt;br&gt;\n              &lt;br&gt;\n            &lt;/p&gt;\n          &lt;/div&gt;\n          &lt;div&gt;&lt;/div&gt;\n    &lt;/blockquote&gt;\n    &lt;br&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------040006000404090000080101--\r\n\n"}}