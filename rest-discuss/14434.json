{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"t2fqos6ZbfVEsJHJqZkC0cd7aD2sRxfFEVDFUWe2pjARkL46zMx1dZQQF0AN9eW8KhsPdt0x5kqP_4ozg_yhBbIHZ84NIfcbN-kXfSgNZA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Methods and the uniform interface [was: Re: [rest-discuss] REST isn&#39;t hard to learn, it&#39;s just taught wrong.","postDate":"1262180991","msgId":14434,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDkxMjMwMDY0OTUxLmQxZGMxODgyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PEJDMUFCOTZDLTc0MTktNDJGNC04QzE4LUJDMkY2OTRENDE4NUBzdWJidS5vcmc+","referencesHeader":"PDQ5OTg4ODQ0MDkxMjIxMDYwN3EzMTdlMmQ4aTQ3OWEzNjU2ZjQxMjViZWFAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIyMTE5MzY0MC45YzY5M2E5YS5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTw0QjMxMDBBNC4xMDUwMDAxQGdtYWlsLmNvbT4JPDIwMDkxMjIzMTMxNTEwLjgzYzNiODcyLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDRCMzJCQkFBLjIwODA5MDdAZ21haWwuY29tPgk8MjAwOTEyMjMxODMzNDkuY2Y5MmNiOTEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8RDkwNzY3MzctRTNDRC00NERFLUFGQUItNTA2NDU4MjAyN0MxQHN1YmJ1Lm9yZz4JPDIwMDkxMjIzMTk1MjU4LmMwYTk5ZTExLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPDJmYTU1NDQ3MDkxMjI0MDQwNGszYzY3YmJmY29mNzdkODEyOTg5ODNkYWJmQG1haWwuZ21haWwuY29tPgk8MjAwOTEyMjQxODE3MDkuMDk2OTVmMzguZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MzkxNWM2OWQwOTEyMjkwOTE2eTZkNDY2ZjEzbTlhOWVjYjQ1OGYwNWYwMzdAbWFpbC5nbWFpbC5jb20+CTwyMDA5MTIyOTE0NTYzNS5hYWNhMGQ1MC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CTxCQzFBQjk2Qy03NDE5LTQyRjQtOEMxOC1CQzJGNjk0RDQxODVAc3ViYnUub3JnPg=="},"prevInTopic":14433,"nextInTopic":14435,"prevInTime":14433,"nextInTime":14435,"topicId":14293,"numMessagesInTopic":37,"msgSnippet":"... I don t see where I ve implied otherwise.  I would go even farther, and say that the presence or absence of a method in hypertext (including the Allow","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 77264 invoked from network); 30 Dec 2009 13:50:15 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m12.grp.re1.yahoo.com with QMQP; 30 Dec 2009 13:50:15 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.re1.yahoo.com with SMTP; 30 Dec 2009 13:50:15 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 8A315509DE;\n\tWed, 30 Dec 2009 08:50:10 -0500 (EST)\r\nDate: Wed, 30 Dec 2009 06:49:51 -0700\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Will Hartung &lt;willh@...&gt;, =?ISO-8859-1?Q?Ant=F3nio?= Mota\n &lt;amsmota@...&gt;, Roger Gonzalez &lt;roger.gonzalez@...&gt;, Tim\n Williams &lt;williamstw@...&gt;, mike amundsen &lt;mamund@...&gt;,\n berend@..., rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20091230064951.d1dc1882.eric@...&gt;\r\nIn-Reply-To: &lt;BC1AB96C-7419-42F4-8C18-BC2F694D4185@...&gt;\r\nReferences: &lt;499888440912210607q317e2d8i479a3656f4125bea@...&gt;\n\t&lt;20091221193640.9c693a9a.eric@...&gt;\n\t&lt;4B3100A4.1050001@...&gt;\n\t&lt;20091223131510.83c3b872.eric@...&gt;\n\t&lt;4B32BBAA.2080907@...&gt;\n\t&lt;20091223183349.cf92cb91.eric@...&gt;\n\t&lt;D9076737-E3CD-44DE-AFAB-5064582027C1@...&gt;\n\t&lt;20091223195258.c0a99e11.eric@...&gt;\n\t&lt;2fa554470912240404k3c67bbfcof77d81298983dabf@...&gt;\n\t&lt;20091224181709.09695f38.eric@...&gt;\n\t&lt;3915c69d0912290916y6d466f13m9a9ecb458f05f037@...&gt;\n\t&lt;20091229145635.aaca0d50.eric@...&gt;\n\t&lt;BC1AB96C-7419-42F4-8C18-BC2F694D4185@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.6.0 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: Methods and the uniform interface [was: Re: [rest-discuss] REST\n isn&#39;t hard to learn, it&#39;s just taught wrong.\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nSubbu Allamaraju wrote:\n&gt; \n&gt; - Neither presence of a method in the Allow header nor the presence\n&gt; of some hypertext guarantees that any method will succeed. For\n&gt; instance, Authorization may change the outcome.\n&gt; \n\nI don&#39;t see where I&#39;ve implied otherwise.  I would go even farther, and\nsay that the presence or absence of a method in hypertext (including\nthe Allow header, as it&#39;s resource metadata) guarantees you nothing.\nThe only authoritative answer is the response to a request method\nitself.  However, determining if a resource is deletable by actually\ndeleting it, leaves something to be desired.\n\nWhich is why I&#39;m strongly in favor of implementing the Allow: header\naccurately.  While authorization may change the outcome of a request, I\ndon&#39;t base Allow: contents on authorization.  I always use Allow: as a\nproperty of the resource, not as a resource state, but that&#39;s just me.\n\n&gt; \n&gt; On Dec 29, 2009, at 1:56 PM, Eric J. Bowman wrote:\n&gt; \n&gt; &gt; A self-documenting, hypertext-driven REST API may instruct the\n&gt; &gt; client to do a HEAD request on each URL appearing in a &lt;form&gt;\n&gt; &gt; listing deletable resources, and further instruct the client that\n&gt; &gt; it must perform a conditional DELETE (to avoid deleting a resource\n&gt; &gt; that someone else just altered, always consider time and\n&gt; &gt; multi-user).  If the Allow: header is implemented, the hypertext\n&gt; &gt; may instruct the client to exclude any resource from the deletable\n&gt; &gt; collection that didn&#39;t explicitly Allow: DELETE when the HEAD\n&gt; &gt; request was made.\n&gt; \n&gt; - The above point about conditional requests is not true. Conditional\n&gt; requests are part of the uniform interface, and servers never have to\n&gt; say explicitly via hypertext that client must make a conditional\n&gt; request.\n&gt; \n\nConditional requests are part of HTTP&#39;s generic interface.  There are\ntwo ways to make conditional requests part of a uniform REST interface.\nFirst, is if the media type specifies conditional requests (Atom).\nSecond, is if the conditional request is API-specific, and that API is\nself-documenting in hypertext.\n\nA conditional DELETE isn&#39;t described by any media type, i.e. there&#39;s no\ncommon out-of-band knowledge detailing this application behavior.  So in\norder for a conditional-DELETE API to be RESTful, hypertext must exist\nwhich instructs clients of this requirement in-band.  Xforms makes it\npossible (not saying it&#39;s easy) to specify the round-trip of an Etag in\nan If-Match header be sent with DELETE, in hypertext.\n\nWithout the server explicitly describing this interface in hypertext,\nhow is a client to determine that DELETE must be a conditional request\non the system?  Besides out-of-band knowledge hard-coded into the\nclient...\n\n-Eric\n\n"}}