{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","profile":"papresco","replyTo":"SENDER","senderId":"JJh_8ZDrESXzt-s3mhxVlwLwsYUU9QNmFTzVwK5LcDWNPBG3C9fZPN7HOCtlJUmhw_0_TpChhpJsrnj_-C4GYvZ_aCRyeA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Changing relationship between SOAP and REST","postDate":"1024179071","msgId":1523,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNEMEJCQjdGLjM0OERBRUZAcHJlc2NvZC5uZXQ+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":1522,"nextInTime":1524,"topicId":1523,"numMessagesInTopic":1,"msgSnippet":"This is my rambling sense of the state of the debate between SOAP and REST. To their credit, the SOAP working group has responded to our criticism of the SOAP","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 15 Jun 2002 22:10:51 -0000\r\nReceived: (qmail 87632 invoked from network); 15 Jun 2002 22:10:51 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m15.grp.scd.yahoo.com with QMQP; 15 Jun 2002 22:10:51 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta3.grp.scd.yahoo.com with SMTP; 15 Jun 2002 22:10:51 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5FMAnd01773\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 15 Jun 2002 15:10:49 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g5FMAm212098\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sat, 15 Jun 2002 15:10:48 -0700\r\nMessage-ID: &lt;3D0BBB7F.348DAEF@...&gt;\r\nDate: Sat, 15 Jun 2002 15:11:11 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Changing relationship between SOAP and REST\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\nX-Yahoo-Profile: papresco\r\n\r\nThis is my rambling sense of the state of the debate between SOAP and\nREST.\n\nTo their credit, the SOAP working group has responded to our criticism\nof the SOAP model and I think that there is a 50/50 chance that the most\nsevere incompatibility between the two models can be fixed over the next\nwhile. In particular, I believe that they are coming to agree that the\n&quot;single endpoint&quot; model is architecturally unsound. I have two reasons\nto believe that this is the case. The first is that they have defined a\n&quot;GET&quot; binding for SOAP and agreed that it should be used for any HTTP\nSOAP service that has the semantics of HTTP&#39;s GET. The second is that\nI&#39;ve gotten generally positive agreement that the SOAP primer should\nspecifically say that an endpoint-per-resource model makes more . I\nhaven&#39;t got MUCH feedback but the feedback I&#39;ve gotten so far has been\npositive:\n\n * http://lists.w3.org/Archives/Public/xml-dist-app/2002Jun/0036.html\n\nHere is the proposed text:\n\n&quot;One of the principles of Web Architecture is that all important\nresources should be identified by URIs. This implies that many\nwell-architected SOAP services will be embodied as large \nnumbers or resources, each with its own URI.  Indeed, many\nsuch resources are likely to be created dynamically during\noperation of the service, as new information becomes available.\nFor example, a service offering stock prices might use \na distinct URI for each stock tracked, and perhaps for\neach date and time for which quotes are provided.&quot;\n\nThis is a non-normative change to the specification but it implies\nmassive changes to SOAP toolkits and to WSDL. I believe that most\nexisting SOAP toolkits do not allow easy implementation of this\nconvention. This is especially true for toolkits for statically typed\nlanguages with &quot;interface generators.&quot; But that&#39;s okay, because these\ntoolkits take their lead from WSDL, and one of the WSDL requirements\n(that I proposed) also addresses this issue:\n\n&quot;The description language SHOULD allow describing Messages that include\nreferences (URIs) to strongly-typed referents, both values and\nServices.&quot;\n\nIn other words, it should be possible to have a SOAP message or HTTP\nmessage with a URI in it that points to a SOAP/HTTP endpoint described\nby another WSDL. This will at least make it possible to use WSDL in a\nsystem where &quot;hypermedia is the engine of application state.&quot; We should\nwork with the WSDL group to make sure that this happens and that\nHTTP-based services are strongly represented. We should also try and\nwork with open source toolkit implementors to make sure that they do the\nright thing as examples for the closed-source vendors.\n\nMy current hope for the future is that a single URI will commonly\nsupport both HTTP and SOAP methods. For instance, if you avoid the\nvarious optional SOAP features (SOAP encoding, SOAP headers), the only\nreal difference between the new SOAP GET and a plain old HTTP GET is\nthat the one returns a SOAP-wrapped body and the other does not.\nContent-negotiation could trigger which happens. (that should perhaps be\nadded normatively to the SOAP specification!). In many situations, you\ncould just accept that for marketing reasons you must wrap your XML in a\nSOAP:Envelope and SOAP:Body and move on. POST is similar to GET. You can\nprobably just build your REST service and ignore the SOAP:Envelope and\nSOAP:Body. SOAP does not define PUT or DELETE, so the &quot;HTTP side&quot; of a\nservice can use them without conflict. REST could be viewed as a sort of\nbest-practices for SOAP usage -- even if we&#39;re not using much of SOAP.\n\nHmmmm. There should probably be a TAG ruling on whether it is\nappropriate to use SOAP methods to do something that is logically\nequivalent to an HTTP PUT and DELETE or whether you should just use HTTP\nPUT and DELETE. It seems to me that it kind of follows naturally from\nthe GET decision but it might be politically harder because PUT and\nDELETE are not as popular or architecturally important as GET.\n\nBut all of this will only work if the toolkits allow it. If it is\nprohibitively expensive to assign URIs to objects, or to accept *both*\nHTTP and SOAP methods on the same object, we will find ourselves back at\nodds with SOAP again. \n\nI think that pushback is quite likely because SOAP has many tensions (I\nwould go so far as to say contradictions) in its design. It&#39;s an RPC\nprotocol but not really. It&#39;s a synchronous protocol but not really. The\none that is dangerous to REST: it is a web protocol but it is also\n&quot;transport agnostic&quot;. This latter means that it could be tricky to make\na SOAP API or user interface that allows really good Web-based Web\nServices and then allows you to push a button and get the same features\non MQSeries or SMTP. REST people could fantasize that this might result\nin the Web model leaking onto other transports but alternately it might\nmean that Web features (like SOAP GET and one-endpoint-per-resource)\njust don&#39;t get implemented.\n\nIn addition, there are all of the SOAP add-ons which will come to the\nfore when SOAP is standardized. Someone will have to ensure that\nWS-Security, WS-Routing, transaction standards etc. interact properly\nwith HTTP and Web architecture etc. Keeping up with this stuff is a\nfull-time job!\n\nIn other words, there is a fight on for the Soul of SOAP -- will it be\nCOM for the Internet, or an XML wrapper for the Web, or something else\nentirely?\n\nAnd of course there remains the issue of pre-defined methods as in HTTP\nversus invent your own as in the traditional SOAP style.\n\nNevertheless, the good news is that it if things go the right way, it\nwill be increasingly possible to tell our customers and bosses\n(honestly!) that we are using SOAP and REST. Perhaps if we are vocal\nenough with that message the other standards and implementations will\nfall into place more easily.\n\n Paul Prescod\n\n"}}