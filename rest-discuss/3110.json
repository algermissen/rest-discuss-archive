{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":22532369,"authorName":"Duncan Wilcox","from":"Duncan Wilcox &lt;duncan@...&gt;","profile":"duncanwilcox","replyTo":"SENDER","senderId":"XyUVj1WhF_aV3ZuipgBjXgmPVzG1-vD1SCrhY9hOmlpEVdk6kDaet1fsMBCy9JrUUey2kHroYO96Mqe0lQ6n9O-Lh3UUCCw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Future proof","postDate":"1040732323","msgId":3110,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQ3QjVBNEIwLTE3MzktMTFENy05REQ1LTAwMzA2NUEyNzhFNkBtY2xpbmsuaXQ+"},"prevInTopic":0,"nextInTopic":3111,"prevInTime":3109,"nextInTime":3111,"topicId":3110,"numMessagesInTopic":7,"msgSnippet":"I have recently been working on a REST interface for a set of services, exchanging mainly service configuration documents. In reading recent blogging about the","rawEmail":"Return-Path: &lt;duncan@...&gt;\r\nX-Sender: duncan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 24 Dec 2002 12:18:48 -0000\r\nReceived: (qmail 66843 invoked from network); 24 Dec 2002 12:18:48 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m13.grp.scd.yahoo.com with QMQP; 24 Dec 2002 12:18:48 -0000\r\nReceived: from unknown (HELO mail.mclink.it) (195.110.128.53)\n  by mta3.grp.scd.yahoo.com with SMTP; 24 Dec 2002 12:18:48 -0000\r\nReceived: from mclink.it (duncan.mclink.it [195.110.141.10])\n\tby mail.mclink.it (8.11.0/8.9.0) with ESMTP id gBOCIjT19191\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue, 24 Dec 2002 13:18:45 +0100 (CET)\r\nDate: Tue, 24 Dec 2002 13:18:43 +0100\r\nMime-Version: 1.0 (Apple Message framework v551)\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nSubject: Future proof\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nMessage-Id: &lt;D7B5A4B0-1739-11D7-9DD5-003065A278E6@...&gt;\r\nX-Mailer: Apple Mail (2.551)\r\nFrom: Duncan Wilcox &lt;duncan@...&gt;\r\nX-Yahoo-Group-Post: member; u=22532369\r\nX-Yahoo-Profile: duncanwilcox\r\n\r\nI have recently been working on a REST interface for a set of services, \nexchanging mainly service configuration documents.\n\nIn reading recent blogging about the power of unintended, unexpected \nuse and combination of web resources (as opposed to contractualized \nRPC), it has occurred to me that I might be &quot;limiting creativity&quot; by \nhow I handle documents.\n\nOn the PUT of a service configuration expressed as XML, I currently \nextract the data I know about (or return an error), and store only the \nvalid, known configuration.\n\nI remember reading on this list (if I&#39;m not mistaken), that PUT should \nstore the document as is, and you should be able to retrieve the \nunchanged document through a GET.\n\nI suspect that along with a reasonable path design, this is one of the \nkeys to making a REST interface future proof and usable beyond the \ninitial expectations.\n\nIf this assumption is correct I guess I should fix my interface, \nhowever there different problems for different solutions:\n\n- always return an error if the document isn&#39;t strictly what I want \n(i.e. if the XML contains unexpected tags)\n\n- return an error only when the subset of the document I currently \nsupport isn&#39;t what I want, extract relevant part for service \nconfiguration purposes, store the whole document for a later GET\n\nThe rationale for the first solution is to preserve the expectation \nthat you will GET what you PUT, however it also seems to swing the \ninterface towards a rigidly defined RPC direction.\n\nSolution 2 would be better, I guess it would allow the user to store \nher own extra tidbits without ever needing to let me know about it, but \nit doesn&#39;t seem to be very future proof in that I might want to use \nportions of the document structure for myself in later versions. In the \nspecific case of configuration documents in XML, there could be \nconflict of tags, and I&#39;d rather take a monastic approach to the use of \nXML namespaces (limit their use, that is).\n\nIdeas appreciated.\n\nThanks,\nDuncan\n\n--\nhttp://duncan.focuseek.com\n\n\n"}}