{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":352334505,"authorName":"Craig McClanahan","from":"Craig McClanahan &lt;craigmcc@...&gt;","profile":"craig_mcclanahan","replyTo":"SENDER","senderId":"fxxAi5aVF2d_OmCzoVltVfO3jrMTsMWTftqBHC_B6K_BIK1yEmMmLrB1T9e0CT6tgwaXO-GYbVARWVeM5tj60Jc010FI0PzI6kw7qg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267175276","msgId":14924,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY4YjM5YWNlMTAwMjI2MDEwN2w2OTk3MzE2YXM2MjIzOWJkOWE1NGIwMTBAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGQxMTYwMzg2MTAwMjI1MjM1NWw1ZDI5YzNmOXkxNjMxNzhiOGE5MGNhOWNhQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+CSA8NTUxOTUuNzYwNjAucW1Ad2ViNTU5MDgubWFpbC5yZTMueWFob28uY29tPgkgPGQxMTYwMzg2MTAwMjI1MjIyNmo2NGI4ZDM0MmlmZmRkYTRlNmQ4NjgzMzkwQG1haWwuZ21haWwuY29tPgkgPGY4YjM5YWNlMTAwMjI1MjMzOXAzNmE5N2U4YnA2ZTRkMWYwYzc1NzcwOGM2QG1haWwuZ21haWwuY29tPgkgPGQxMTYwMzg2MTAwMjI1MjM1NWw1ZDI5YzNmOXkxNjMxNzhiOGE5MGNhOWNhQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14923,"nextInTopic":14928,"prevInTime":14923,"nextInTime":14925,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"... In your business domain objects, do you store the CSS style class that should be used to display this object in a browser?  Of course not: * The *name* of","rawEmail":"Return-Path: &lt;craigmcc@...&gt;\r\nX-Sender: craigmcc@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 62322 invoked from network); 26 Feb 2010 10:09:16 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 26 Feb 2010 10:09:16 -0000\r\nX-Received: from unknown (HELO mail-pz0-f178.google.com) (209.85.222.178)\n  by mta3.grp.sp2.yahoo.com with SMTP; 26 Feb 2010 10:09:16 -0000\r\nX-Received: by pzk8 with SMTP id 8so342463pzk.11\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 26 Feb 2010 02:08:16 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.249.16 with SMTP id w16mr30539wfh.346.1267175276107; Fri, \n\t26 Feb 2010 01:07:56 -0800 (PST)\r\nIn-Reply-To: &lt;d11603861002252355l5d29c3f9y163178b8a90ca9ca@...&gt;\r\nReferences: &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\n\t &lt;55195.76060.qm@...&gt;\n\t &lt;d11603861002252226j64b8d342iffdda4e6d8683390@...&gt;\n\t &lt;f8b39ace1002252339p36a97e8bp6e4d1f0c757708c6@...&gt;\n\t &lt;d11603861002252355l5d29c3f9y163178b8a90ca9ca@...&gt;\r\nDate: Fri, 26 Feb 2010 01:07:56 -0800\r\nMessage-ID: &lt;f8b39ace1002260107l6997316as62239bd9a54b010@...&gt;\r\nTo: =?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;\r\nCc: Kevin Duffey &lt;andjarnic@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Craig McClanahan &lt;craigmcc@...&gt;\r\nReply-To: craigmcc@...\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=352334505; y=QvNd2CdfaVloxXXNeMAG4F8RMiywrjjT-tRYzNOJcNuRysKaPoOcI5t96g\r\nX-Yahoo-Profile: craig_mcclanahan\r\n\r\n2010/2/25 Felipe Ga=FAcho &lt;fgaucho@...&gt;:\n&gt;&gt; You&#39;re missing a key feat=\r\nure of what both Kevin and I said ... use\n&gt;&gt; *different* classes for the *r=\r\nesource* domain model and the *business*\n&gt;&gt; domain model.\n&gt;\n&gt; yes, I am awa=\r\nre about that... but the effort to maintain the mapping\n&gt; between those mod=\r\nels generates an extra and unnecessary development\n&gt; effort ,.... I also no=\r\nticed some people having a third model when the\n&gt; data will be rendered in =\r\nthe presentation layer.. (a managedbean or\n&gt; other component..)... My exper=\r\niment is looking to reduce the amount of\n&gt; effort required to synchronize a=\r\nll those models, having only one\n&gt; model.. and it works fine and the perfor=\r\nmance is better and\n&gt; maintenance effort much less than the traditional MVC=\r\n design...\n\nIn your business domain objects, do you store the CSS style cla=\r\nss that\nshould be used to display this object in a browser?  Of course not:=\r\n\n\n* The *name* of the style class is totally up to the designer.\n\n* Do *you=\r\n* know any designers that care about backwards compatibility\nof style names=\r\n?  I don&#39;t either ...\n  but I don&#39;t care, as long as the designer updates a=\r\nll the\ncorresponding HTML pages when the style name changes.\n\n* Style names=\r\n can be changed at any time (for example, when you refresh\n  the look and f=\r\neel characteristics of your website).\n\n* And, of course, there is normally =\r\nmore than one webapp\n  that needs to be able to render this business domain=\r\n object,\n  so having only one style name would not be useful.\n\nThe same pri=\r\nnciples apply to designing resource representations -- we\nshould assume tha=\r\nt there will be more than one representation that\nincludes this particular =\r\nobject, and more than one RESTful application\nthat needs to provide access =\r\nto it, so assuming any *single* approach\nis not likely to help all our user=\r\ns.\n\n&gt;\n&gt;\n&gt;&gt; Then, each kind of class can have the annotations that are relev=\r\nant for that tier.\n&gt;\n&gt; Usually the classes are identical and you are just i=\r\nncluding a copy\n&gt; layer to transfer data between them :)\n&gt;\n&gt;&gt; Managing work=\r\nflow, like obeying the hypermedia constraint, is a view tier concern (from =\r\nthe point of view of a server side developer).\n&gt;\n&gt; May be, may be not.. in =\r\nmy case the model contains the sate of the\n&gt; application, so it is a busine=\r\nss concern :)\n&gt;\n\nThere is pretty much always more than one application need=\r\ning your\ndata, so it&#39;s more than one business concern :-).  Ideally, you ca=\r\nn\nshare the business domain objects across these applications, but the\nreal=\r\nity is you&#39;ll need multiple RESTful resource representations that\ninclude d=\r\nata from these business domain objects, for the same reason\nthat you will n=\r\need multiple HTML representations (even within the same\nwebapp, how many di=\r\nfferent pages include information from particular\ndomain objects?).  One si=\r\nze does not fit all.\n\n&gt;&gt; That&#39;s a good thing, because a REST API is typical=\r\nly not the only way that\n&gt;&gt; such business model objects get manipulated.\n&gt;\n=\r\n&gt; yes, but the effort to manage the hypermedia just in time makes the\n&gt; who=\r\nle application much slower.. and it is a repettive task.. that is\n&gt; one of =\r\nthe reasons that motivated me to push the links in the\n&gt; database....\n&gt;\n&gt;&gt; =\r\nSelf-test time:=A0 are you storing URIs in your database?\n&gt;\n&gt; yes. The sate=\r\n of the application is persistent :) and scales quite\n&gt; well since I don&#39;t =\r\nneed to recalculate the sate on every request..\n&gt; (ok, memcache can help a =\r\nbit, but anyway... the hypermedia engine it\n&gt; is the heavy part of the requ=\r\nest - eliminating that I have much faster\n&gt; services)\n\nScale for one applic=\r\nation is nice (although I&#39;m waiting for your\nbenchmarks to show that the ov=\r\nerhead of calculating URIs dynamically\nis crushing, given how cheap CPU tim=\r\ne is versus other server side\nresources).  How about scale for multiple app=\r\nlications?\n\nOh, you only have one?  Good for you!  But that&#39;s not a particu=\r\nlarly\ncommon problem domain.\n\n&gt;\n&gt;&gt; a JAX-RS based server application, that =\r\n&quot;care&quot; is expressed by @Path\n&gt;\n&gt; I am experimenting with that idea.. in ord=\r\ner to use regular\n&gt; expressions or other DSL facilty to manipulate the fina=\r\nl URI\n&gt; dinamically.. perhaps storing just the tail of the URI in the datab=\r\nse\n&gt; or other format of information that lead me a chance to produce the\n&gt; =\r\nexternal representation by demand.. this part is my current\n&gt; research.....=\r\n. (I prefer the &quot;experimentation&quot; word since I am not a\n&gt; formal researcher=\r\n..)\n&gt;\n\nPlease think about the idea that the same business domain resources\n=\r\nmay need to be exposed by different applications, using different\nresource =\r\nrepresentations, and different URI schemes, all at the same\ntime.  Or, even=\r\n within the same application, exposed in different\npages (web app) or resou=\r\nrces (RESTful web service) at the same time.\n\nPersonal history lesson -- wh=\r\nen I was first learning web development\n(mid-late 1990s), I figured &quot;why no=\r\nt have a toHTML() method on all my\nJava business domain model classes&quot;?  It=\r\n quickly became clear that\ndifferent pages within the same app, as well as =\r\ndifferent apps, needed\ndifferent HTML representations of the same business =\r\nobjects.  Indeed,\nthis realization was one of the motivating factors that l=\r\ned to the\ncreation of Struts.\n\nThe same is true for RESTful resource repres=\r\nentations.  There will be\nmore than one representation that requires inform=\r\nation from a\nparticular business domain model object, as well as more than =\r\none\napplication (each with their own resource and representation\nrequiremen=\r\nts).\n\nIn MVC terms:  Model classes !=3D View classes.\n\n&gt;&gt; @Path annotations=\r\n -- to change the URIs included in your representations.\n&gt;\n&gt; yes, but you n=\r\need to iterate over the collections and change manually\n&gt; each URI, what ca=\r\nn lead you to manipulate thousand of strings before\n&gt; to respond to the cli=\r\nent.. this part scares me... (think about a\n&gt; collection with 100 elements,=\r\n each with 20 URIs)\n\nFor amusement, you should go grab a raw Atom or RSS fe=\r\ned  from a busy\nfeed source (I use Google Reader for my feed aggregator, bu=\r\nt the same\nprinciple applies to anyone who provides feeds) and see how many=\r\n URIs\nare included.   And, funny thing, none of the apps that *created* tha=\r\nt\ncontent had any idea that *I* would be aggregating their feeds, via\nGoogl=\r\ne Reader, for my own use.\n\nURIs in RESTful web services are a view tier con=\r\ncern, just like CSS style names.\n\n&gt;\n&gt;&gt; In the shopping cart use case (no, I=\r\n don&#39;t care if some people don&#39;t like it\n&gt;&gt; as an example :-), a well desig=\r\nned REST API should *not* define a URI\n&gt;&gt; template like &quot;/checkout&quot; that ac=\r\ncepts a POST with a shopping cartURI\n&gt;\n&gt; That is a basic REST principle .. =\r\nand it is not related to the way you\n&gt; store or calculate the URIs...\n&gt;\n\nUn=\r\nfortunately, *lots* of theoretically &quot;RESTful API&quot; specifications\ninclude i=\r\nnstructions on how to calculate the URI for a particular\noperation (versus =\r\ntelling the client &quot;get the URI you need from the\ncurrent representation of=\r\n the resource.).  And I&#39;m as guilty as anyone\nelse at violating the hyperme=\r\ndia constraint this way, in my earlier\nwork.  But, my point in this particu=\r\nlar scenario was, assuming that\nthere was a single URI for &quot;checkout&quot;, for =\r\n*all* shopping carts, is\ntechnically feasible, but not a good idea.\n\n&gt;&gt; con=\r\ncerned, the URI itself is an opaque string.\n&gt;\n&gt; yes......\n&gt;\n&gt; thanks for yo=\r\nur feedback... interesting.. I will keep thinking about\n&gt; your thoughts....=\r\n\n&gt;\n&gt;\n&gt; =A0Felipe Ga=FAcho\n&gt;\n\nCraig\n\n"}}