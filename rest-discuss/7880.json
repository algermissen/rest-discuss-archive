{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":265185497,"authorName":"Jérôme Louvel","from":"=?iso-8859-1?B?Suly9G1lIExvdXZlbA==?= &lt;contact@...&gt;","profile":"jerome.louvel","replyTo":"SENDER","senderId":"tG3f4L1FJAFJAKfjymRitKFXICdg2JO5KfzOagkNiKRGRag5kcIQ49jTagSlijswCFsFULFq8AqyP2O3wYJ7jzftXlHbwe8dieM4dtPtE_ykpiT4iBnKlW5evQHOYRQJ7Wc","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Another potential problem with the 311 proposal","postDate":"1171554480","msgId":7880,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVyMXZiZys5N3IzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGM3MGJjODVkMDcwMjE1MDcxOXYxZmFjOWNmM21mYWJiMTVjNGFmOWE4NWRmQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":7877,"nextInTopic":7881,"prevInTime":7879,"nextInTime":7881,"topicId":7871,"numMessagesInTopic":23,"msgSnippet":"Hi Mark, ... I understand your point of view, but we also have to take into account applications that need high performance for clients too. Implementating","rawEmail":"Return-Path: &lt;contact@...&gt;\r\nX-Sender: contact@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 88177 invoked from network); 15 Feb 2007 15:49:03 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m45.grp.scd.yahoo.com with QMQP; 15 Feb 2007 15:49:03 -0000\r\nReceived: from unknown (HELO n14c.bullet.sp1.yahoo.com) (69.147.64.117)\n  by mta11.grp.scd.yahoo.com with SMTP; 15 Feb 2007 15:49:03 -0000\r\nReceived: from [216.252.122.216] by n14.bullet.sp1.yahoo.com with NNFMP; 15 Feb 2007 15:48:01 -0000\r\nReceived: from [66.218.69.1] by t1.bullet.sp1.yahoo.com with NNFMP; 15 Feb 2007 15:48:01 -0000\r\nReceived: from [66.218.66.76] by t1.bullet.scd.yahoo.com with NNFMP; 15 Feb 2007 15:48:01 -0000\r\nDate: Thu, 15 Feb 2007 15:48:00 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;er1vbg+97r3@...&gt;\r\nIn-Reply-To: &lt;c70bc85d0702150719v1fac9cf3mfabb15c4af9a85df@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: =?iso-8859-1?B?Suly9G1lIExvdXZlbA==?= &lt;contact@...&gt;\r\nSubject: Re: Another potential problem with the 311 proposal\r\nX-Yahoo-Group-Post: member; u=265185497; y=xTWHMwvGpGurwyfGUKnDlt58ihZGxoqARPXiVAyTHhy-Axgz0Gy8rg\r\nX-Yahoo-Profile: jerome.louvel\r\n\r\nHi Mark,\n\n&gt; I agree.  Moreover, I also think you generally have different d=\r\nesign\n&gt; goals with client and server APIs.  For example performance is\n&gt; no=\r\nrmally a lot more important for servers than clients.  Also, a\n&gt; simple API=\r\n might be more desirable on the client than on the server\n&gt; (again, because=\r\n of performance).  For these reasons it will likely do\n&gt; more harm than goo=\r\nd to try to use server abstractions in a client API\n&gt; or vice-versa.\n\nI und=\r\nerstand your point of view, but we also have to take into account\napplicati=\r\nons that need high performance for clients too.\nImplementating transparent =\r\nRESTful proxies for non-RESTful\napplications is a common use case where you=\r\n need excellent\nperformance, multi-threading on both sides of your applicat=\r\nion. \n\nFYI, we provide two client HTTP connectors (pluggable and using the\n=\r\nsame API), one based on JDK&#39;s HttpURLConnection and another based on\nApache=\r\n HTTP Client library. \n\nAlso, in our case, you can directly set the client&#39;=\r\ns output\nrepresentation reference as the server&#39;s output representation,\nwi=\r\nthout reading/buffering anything. An optimized implementation of the\nRestle=\r\nt API could even directly move bytes from client socket to\nserver socket wi=\r\nthout consuming JVM memory thanks to Java&#39;s NIO.\n\nAnyway, we didn&#39;t find th=\r\ne sharing of common classes between the\nserver-side and the client-side of =\r\nthe API to be an issue, it&#39;s even\nthe opposite. For this design, we leverag=\r\ned the notion of REST uniform\ninterface (see our org.restlet.Uniform class)=\r\n and the generic HTTP\nmessage aspects (entity headers common to both HTTP r=\r\nequests and\nresponses). Just think about representations metadata (ETag, me=\r\ndia\ntype, encoding, etc.), their are strictly the same.\n\nEven the HTTP spec=\r\nification doesn&#39;t provide two separate definitions\nfor requests and respons=\r\nes depending on whether you see the\ncommunication from the client end or fr=\r\nom the server end of the\nconnection, so why redefine them twice at the API =\r\nlevel? \n\nBest regards,\nJerome\n\n\n"}}