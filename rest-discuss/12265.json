{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"KQ5QK1no7NH_UeddD1JDoRbquHupO42eR9m7F32QnmJU4KDDPWg2uLos7LnsnowW471eY7VJkN1RU_wyyHik2G2h4uzEcXKT8Vtp-rGYYup3F0cC-xKWzOWZ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] An approach to deleting multiple resources use one \tDELETE","postDate":"1237464237","msgId":12265,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJmYTU1NDQ3MDkwMzE5MDUwM2szZmMxYzhmMHRlYzk1MjYwODA1YmNjNGNmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzE5MDMxNTM4LjU4OWVmN2E2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGU3OGJkYmMwMDkwMjI0MDczOHY0ODRkNmU5NGg0NDQ5ZWIwYjY3YTI4ZDJlQG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE4MTUxOTM2LjQ5MzM5ZmU0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JIDw1MDM3YjZlNDA5MDMxODE0MjVwNjZjYTU3OGV1ZjY1YjM0MDI3Y2RjYjhhZUBtYWlsLmdtYWlsLmNvbT4JIDwyMDA5MDMxODE2MzYwMS40MDQ3ZDA2Yi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+CSA8NTAzN2I2ZTQwOTAzMTgxNjM4bjU1YWFjN2UwbjM3ZDIyZGMzYmMxNGIxNzBAbWFpbC5nbWFpbC5jb20+CSA8MjAwOTAzMTgyMTA1MjcuZmU0MmRhZmUuZXJpY0BiaXNvbnN5c3RlbXMubmV0PgkgPDUwMzdiNmU0MDkwMzE5MDA0MXI1MzYwZTA4ZGlmNzE4ZTI3MDQ5MDQwYTljQG1haWwuZ21haWwuY29tPgkgPDIwMDkwMzE5MDIwNjAzLjI5OTQwYWU2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JIDw1MDM3YjZlNDA5MDMxOTAxMThoMzhiOGYwNGR5NDNlYjE3MThhMjBiMTI4Y0BtYWlsLmdtYWlsLmNvbT4JIDwyMDA5MDMxOTAzMTUzOC41ODllZjdhNi5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":12263,"nextInTopic":12266,"prevInTime":12264,"nextInTime":12266,"topicId":12154,"numMessagesInTopic":112,"msgSnippet":"I don t see why it is unrestfull for the client to say to the server delete all the clients whose name starts with a A or delete all the journal entries","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 87843 invoked from network); 19 Mar 2009 12:03:59 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m3.grp.sp2.yahoo.com with QMQP; 19 Mar 2009 12:03:59 -0000\r\nX-Received: from unknown (HELO mail-qy0-f117.google.com) (209.85.221.117)\n  by mta2.grp.re1.yahoo.com with SMTP; 19 Mar 2009 12:03:57 -0000\r\nX-Received: by qyk15 with SMTP id 15so618638qyk.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 19 Mar 2009 05:03:57 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.67.83 with SMTP id q19mr3190962qai.40.1237464237452; Thu, \n\t19 Mar 2009 05:03:57 -0700 (PDT)\r\nIn-Reply-To: &lt;20090319031538.589ef7a6.eric@...&gt;\r\nReferences: &lt;e78bdbc00902240738v484d6e94h4449eb0b67a28d2e@...&gt;\n\t &lt;20090318151936.49339fe4.eric@...&gt;\n\t &lt;5037b6e40903181425p66ca578euf65b34027cdcb8ae@...&gt;\n\t &lt;20090318163601.4047d06b.eric@...&gt;\n\t &lt;5037b6e40903181638n55aac7e0n37d22dc3bc14b170@...&gt;\n\t &lt;20090318210527.fe42dafe.eric@...&gt;\n\t &lt;5037b6e40903190041r5360e08dif718e27049040a9c@...&gt;\n\t &lt;20090319020603.29940ae6.eric@...&gt;\n\t &lt;5037b6e40903190118h38b8f04dy43eb1718a20b128c@...&gt;\n\t &lt;20090319031538.589ef7a6.eric@...&gt;\r\nDate: Thu, 19 Mar 2009 12:03:57 +0000\r\nMessage-ID: &lt;2fa554470903190503k3fc1c8f0tec95260805bcc4cf@...&gt;\r\nTo: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] An approach to deleting multiple resources use one \n\tDELETE\r\nX-Yahoo-Group-Post: member; u=279478415; y=2_MJ6xNIEv6-3NTiLY24aeyqbNd7D9GWKSBsAly1OknrqQ\r\nX-Yahoo-Profile: amsmota\r\n\r\nI don&#39;t see why it is unrestfull for the client to say to the server\n\ndelet=\r\ne all the clients whose name starts with a &#39;A&#39;\n or\ndelete all the journal e=\r\nntries between 2008-01-01 and 2008-12-31\n\nIt&#39;s easy to do a\n\nGET /clients/A=\r\n*\n\nso why not a DELETE /clients/A*\n\n\nAlso, if you POST a batch-delete opera=\r\ntion\n\nPOST /clients/deleteFactory\n1001;1002;1003\n\nyou are just passing para=\r\nmeters to a resource whose purpose is to\ndelete clients, not to operate aga=\r\ninst other resources. Maybe it is\ndeleting resources /client/1001 ... but t=\r\nhat is a side-effect *of the\nserver*. This request requests a &quot;business&quot; op=\r\neration on a resource,\nbut from the point-of-view of the client the client =\r\ndoesen&#39;t even know\nthat exists resources corresponding to 1001...\n\nNow I ad=\r\nmit that having resources like this smells terribly like using\nverbs in uri=\r\n&#39;s and thus like RPC. And it doesen&#39;t solve the cache\nproblem.\n\nAlso, you s=\r\naid elsewhere that  the client sends a &quot;application-state&quot;\nto the server, i=\r\ns that a lapse of your, is not the other way around?\n\nI acknowledge that th=\r\nis thread is getting too &quot;dense&quot; for my\nexperience with REST so bear with m=\r\ne if I&#39;m being too &quot;simplistic&quot;...\n\n\n2009/3/19 Eric J. Bowman &lt;eric@bisonsy=\r\nstems.net&gt;:\n&gt; Assaf Arkin wrote:\n&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m not sure where all that client=\r\n/server dichotomy comes from.\n&gt;&gt;\n&gt;\n&gt; Client behavior and server behavior ar=\r\ne both opaque to REST. However,\n&gt; clients and servers are constrained in ho=\r\nw they may talk to one another\n&gt; by the uniform connector interface. A serv=\r\ner can take multiple actions\n&gt; based on a single request, but a client cann=\r\not dictate multiple actions\n&gt; to the server by making a single request.\n&gt;\n&gt;=\r\n A client can perform multiple actions based on the receipt of one\n&gt; respon=\r\nse, but the server cannot dictate multiple client behaviors\n&gt; within a resp=\r\nonse. For example, a server may redirect a client\n&gt; request, but it can&#39;t t=\r\nell the client to also change its request method.\n&gt;\n&gt; A server may very wel=\r\nl send a response which triggers certain scripted\n&gt; behavior on the client,=\r\n but that isn&#39;t done at the protocol level. A\n&gt; client may very well send a=\r\n request which triggers certain scripted\n&gt; behavior on the server, that als=\r\no isn&#39;t done at the protocol level.\n&gt; Communication between client and serv=\r\ner is done at the protocol level,\n&gt; by having the client request that a ser=\r\nver take one action, limited to\n&gt; a small number of available methods. The =\r\nclient never sends\n&gt; instructions to the server in REST.\n&gt;\n&gt;&gt;\n&gt;&gt; In the sce=\r\nnario I proposed the server tells the client how to\n&gt;&gt; construct a request =\r\nthat will affect multiple states. For example, a\n&gt;&gt; Web email that lets the=\r\n client delete multiple messages at once by\n&gt;&gt; sending a form with one chec=\r\nkbox next to each email.\n&gt;&gt;\n&gt;\n&gt; If a multiple-delete form is written using =\r\nXforms 1.1, then the client\n&gt; will perform discrete DELETE requests against=\r\n each selected resource,\n&gt; and this is perfectly acceptable. With regular H=\r\nTML forms, though, the\n&gt; method is constrained to POST or GET. So the serve=\r\nr is telling the\n&gt; client how to construct a POST request which bypasses th=\r\ne DELETE\n&gt; method.\n&gt;\n&gt; The data sent back to the server takes the form of o=\r\nperating\n&gt; instructions, rather than a request for one specific action to b=\r\ne taken\n&gt; against one discrete URI. The uniform interface is not used -- in=\r\n a\n&gt; uniform interface the DELETE method is requested for each URI the\n&gt; cl=\r\nient wants to delete.\n&gt;\n&gt; The submitted POST in your example resembles what=\r\n application state?\n&gt; Can that application state be retrieved by a GET requ=\r\nest?\n&gt;\n&gt;&gt;\n&gt;&gt; I don&#39;t see a client forcing its will on the server, server do=\r\ning\n&gt;&gt; actions not requested by the client, or anything beyond plain HTTP.\n=\r\n&gt;&gt;\n&gt;\n&gt; Sure, it&#39;s HTTP, but HTTP !=3D REST. In a uniform interface, if the\n=\r\n&gt; client wants to delete multiple resources, then the client makes a\n&gt; DELE=\r\nTE request against each URI to be deleted. Each request generates\n&gt; a succe=\r\nss/fail response which is visible to intermediaries, allowing\n&gt; any caches =\r\nbetween the user who requested the delete and the origin\n&gt; server to expire=\r\n all cached representations of a deleted resource.\n&gt; This is fundamental.\n&gt;=\r\n\n&gt; This cannot happen when special instructions to the server are POSTed\n&gt; =\r\nvia an HTML forms interface. No intermediary can possibly surmise that\n&gt; an=\r\ny deletion has occurred. POST is borked into meaning deletion\n&gt; instead of =\r\nits generic-interface meaning of addition. DELETE has the\n&gt; generic-interfa=\r\nce meaning of deletion, but it isn&#39;t involved in the\n&gt; delete requests at a=\r\nll.\n&gt;\n&gt; Your comment that the &quot;server isn&#39;t doing any actions not requested=\r\n by\n&gt; the client&quot; isn&#39;t quite right. It may look to the user like an HTML\n&gt;=\r\n form allowing deletion, but that isn&#39;t what the client is requesting,\n&gt; be=\r\ncause the request method isn&#39;t DELETE. So the server is, indeed,\n&gt; taking a=\r\nction (deletion) that has nothing to do with the request method\n&gt; (whatever=\r\n POST means, it doesn&#39;t mean DELETE since that&#39;s its own\n&gt; method).\n&gt;\n&gt; So,=\r\n yes, deleting resources with some method other than DELETE results\n&gt; in an=\r\n API that does not resemble a uniform interface. Deleting\n&gt; resources using=\r\n the DELETE method has absolutely no downside, with the\n&gt; benefit of being =\r\nvisible to intermediaries, as envisioned by REST.\n&gt;\n&gt; -Eric\n&gt; \n\n"}}