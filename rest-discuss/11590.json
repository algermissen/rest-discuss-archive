{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"rPmUG-3rb2YrnM88w84-xJWf8-tlbUnTsCOfMFxiCQFxtWgV4c9wNpijSvf3xjWo1gJaFSxq4M7nrVjjg9vKRvlpLeYPeaqEESabOMLe4Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and RESTful HTTP in browsers","postDate":"1227362900","msgId":11590,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDgxMTIyMDcwODIwLmQ5MTFlOTY0LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDQ5MjcwNjAxLjYwODA3MDRAbXlrYW5qby5jby51az4=","referencesHeader":"PDIwMTUxMDEwLjIzNjg3MTIyNjkxOTk1NDUzMi5KYXZhTWFpbC5zZXJ2bGV0QGt1bmRlbnNlcnZlcj4JPDQ5MjJCMzZBLjMwOTA4MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMjc3YmllTFkwMDAwMTYwMUBFWC5VQ09QLkVEVT4JPDQ5MjVDMjAzLjgwNzA0MDFAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmEycjhnUEEwMDAwMTdmN0BFWC5VQ09QLkVEVT4JPDQ5MjYwNjI5LjgwNjA4MDVAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMnhUanRScGUwMDAwMTk5NUBFWC5VQ09QLkVEVT4JPDQ5MjY4MkU4LjgwNjA2MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmFOZ0VwVFgwMDAwMWJjZEBFWC5VQ09QLkVEVT4JPDQ5MjZGMzQ3LjUwNTA4MDBAbXlrYW5qby5jby51az4JPGVjZjM1YTFiMDgxMTIxMTAwMHExZTMxMzM3Y3VhMGQ3YWRhMmIyMDI3NjJhQG1haWwuZ21haWwuY29tPgk8NDkyNzA2MDEuNjA4MDcwNEBteWthbmpvLmNvLnVrPg=="},"prevInTopic":11587,"nextInTopic":11596,"prevInTime":11589,"nextInTime":11591,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"On Fri, 21 Nov 2008 19:03:29 +0000 ... Look at the URIs -- image.png and image.jpg are clearly not the same resource, they have different names.  Web","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98471 invoked from network); 22 Nov 2008 14:08:11 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m44.grp.scd.yahoo.com with QMQP; 22 Nov 2008 14:08:11 -0000\r\nX-Received: from unknown (HELO mxout-03.mxes.net) (216.86.168.178)\n  by mta16.grp.scd.yahoo.com with SMTP; 22 Nov 2008 14:08:10 -0000\r\nX-Received: from BigBison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTP id E3F9E23E3AB;\n\tSat, 22 Nov 2008 09:08:09 -0500 (EST)\r\nDate: Sat, 22 Nov 2008 07:08:20 -0700\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nCc: dev &lt;dev.akhawe@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20081122070820.d911e964.eric@...&gt;\r\nIn-Reply-To: &lt;49270601.6080704@...&gt;\r\nReferences: &lt;20151010.236871226919954532.JavaMail.servlet@kundenserver&gt;\n\t&lt;4922B36A.3090804@...&gt;\n\t&lt;P-IRC-EXBE0277bieLY00001601@...&gt;\n\t&lt;4925C203.8070401@...&gt;\n\t&lt;P-IRC-EXBE02a2r8gPA000017f7@...&gt;\n\t&lt;49260629.8060805@...&gt;\n\t&lt;P-IRC-EXBE02xTjtRpe00001995@...&gt;\n\t&lt;492682E8.8060604@...&gt;\n\t&lt;P-IRC-EXBE02aNgEpTX00001bcd@...&gt;\n\t&lt;4926F347.5050800@...&gt;\n\t&lt;ecf35a1b0811211000q1e31337cua0d7ada2b202762a@...&gt;\n\t&lt;49270601.6080704@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 2.4.5 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and RESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nOn Fri, 21 Nov 2008 19:03:29 +0000\nMike Kelly wrote:\n&gt; \n&gt; Er.. Hmm.. That is my argument; if the information contained in both \n&gt; representations is shared and does not conflict, I think it&#39;s fair to \n&gt; assume they are the same resource. What&#39;s your alternative criteria?\n&gt; \n\nLook at the URIs -- image.png and image.jpg are clearly not the same\nresource, they have different names.  Web architecture allows them to\nbe representations of any other resource besides themselves.\n\nYou&#39;re assuming image.png and image.jpg have the same qs value, and\nyou&#39;re leaving the q value out of your @accept example.  While\nimage.jpg and image.png may well be equivalent representations of some\nresource, you can&#39;t assume they&#39;re equivalent to each other by calling\nthem the same resource...\n\nOne may be significantly higher quality than another, i.e. the .jpg is\nhighly compressed while the .png has much larger filesize.  Content\nnegotiation allows clients that don&#39;t support PNG to at least get\nsomething they can render, even if it isn&#39;t what the server deems to\nbe the highest quality. HTML used to have a solution for this:\n\n&lt;img src=&#39;image.png&#39; lowsrc=&#39;image.jpg&#39;&gt;\n\nWhich would cause the .jpg to be rendered in the foreground while\nthe .png loaded in the background, then swapped... remember 14.4Kbps\nmodems?  But, this sort of functionality was deemed to be best left to\nscripting when HTML 4 was standardized, about when it became irrelevant.\n\n&gt; \n&gt; Say I have a resource &#39;prices&#39; (a list of prices), and  the \n&gt; representations available of that resource are  JSON, XML, etc..\n&gt; \n&gt; If each one of those is generated and updates to the same data store; \n&gt; they are representations of the same resource.\n&gt; \n\nIn the sense of your application, sure.  In the broader HTTP/REST\nsense, you can&#39;t make that assumption.  It&#39;s only completely clear to\nyou, the application designer, but completely opaque behind a Uniform\nInterface to everyone else.\n\n&gt;\n&gt; With the URI:\n&gt; /prices\n&gt; \n&gt; I could indicate the correct representation with the Accept header:\n&gt; &lt;a href=&quot;/prices&quot; Accept=&quot;application/json&quot;&gt;Prices in JSON&lt;/a&gt;\n&gt; &lt;a href=&quot;/prices&quot; Accept=&quot;application/xml&quot;&gt;Prices in XML&lt;/a&gt;\n&gt; \n&gt; Because both representations are available at the same URI it is\n&gt; clear that they are both the same resource, so if I make changes and\n&gt; PUT them back to the URI (/prices), the resource will be updated -\n&gt; and it is completely clear that both representations will have\n&gt; changed and need to be re-cached.\n&gt;\n\nLet&#39;s say I crank up the compression on the above-mentioned .jpg file\nand PUT it back to either /image or image.jpg.  The resource image.jpg\nis updated, but why would this mean that /image or image.png needs\nupdating, or cache expiration?  It may be clear in your example, but\nyou can&#39;t make that &quot;completely clear&quot; assertion about all examples.\n\n&gt;\n&gt; This behaviour is ambiguous if both\n&gt; content types are available at seperate URIs:\n&gt; \n&gt; /prices.xml\n&gt; /prices.json\n&gt; \n\nThis behavior is ambiguous no matter what, due to the late binding of\nresource to representation inherent in the architecture.  There&#39;s no\nguarantee that prices.json is any particular MIME type, and you&#39;re not\nallowing for syntax or structure changes to one media type which may\nhave no effect whatsoever on the other.  Since application behavior is\nopaque behind a Uniform Interface, each representation of a negotiated\nresource is given its own URI so it can have independent cache headers.\n\n&gt;\n&gt; How are intemediaries and caches supposed to automatically know that \n&gt; these two resources are linked in that way? They shouldn&#39;t just\n&gt; assume that behaviour unless they are made aware of it. That sucks!\n&gt; \n\nWhy should they?  Caches shouldn&#39;t assume anything.  The only thing a\ncache needs to know is if a URI varies; if it does, then you may want\nto let the cache know to revalidate by using must-revalidate or proxy-\nrevalidate, and you almost always let it know the URIs of variants, so\nthose variants may be separately cached (with the exception of GZIP).\n\nIf those variants happen to expire at the same time, no biggie, just\nhave the server application change the cache headers by making a HEAD\nrequest to each variant.  Intermediaries don&#39;t need to know that this\nbehavior exists, it&#39;s this visibility that allows caching to begin with.\n\n&gt;\n&gt; &gt; /best-cycle/price\n&gt; &gt; /lance-cycle/price\n&gt; &gt;\n&gt; &gt; Say right now the best cycle is lance&#39;s cycle. Updating one price\n&gt; &gt; updates the other. But they are NOT the same resource.\n&gt; &gt;   \n&gt; \n&gt; Why not redirect\n&gt; \n&gt; /cycle/best/price\n&gt; \n&gt; to\n&gt; \n&gt; /cycle/lance/price\n&gt; \n&gt; ?\n&gt; \n\nIn REST terms, it doesn&#39;t matter as to the definition of resources and\nrepresentations, whether URI A is an alias of, or redirects to, URI B.\nThe server may change its implementation the next day without changing\nthe fact that A and B overlap for a time, this still wouldn&#39;t make them\nthe same resource.\n\n-Eric\n\n"}}