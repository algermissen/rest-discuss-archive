{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"etHv5ydQCGIrSHG3_9fO2ThWYV2hcZQ2i_vgybtwieLdB4mRIErgQx80CiM9dq1Yu3W2ASwrbBQwRJDykQlvis4Iy3zkVOoBRsJNY8ZyVA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: RESTful design for Articles & Tags?","postDate":"1198979112","msgId":10136,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFc3ODI3MDI4NTgyMjk5MDIxMTk4OTc5MTEyQG1haWwubWFpbHNuYXJlLm5ldD4="},"prevInTopic":10135,"nextInTopic":10137,"prevInTime":10135,"nextInTime":10137,"topicId":9891,"numMessagesInTopic":99,"msgSnippet":"... You said XSLT was a hammer, I m suggesting that your application is a nail. ... It s a Content Management System, and like all CMSs it generates output as ","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 89502 invoked from network); 30 Dec 2007 01:45:14 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m54.grp.scd.yahoo.com with QMQP; 30 Dec 2007 01:45:14 -0000\r\nX-Received: from unknown (HELO mail.mailsnare.net) (209.236.228.78)\n  by mta18.grp.scd.yahoo.com with SMTP; 30 Dec 2007 01:45:14 -0000\r\nX-Virus-Scanned: by ClamAV at mailsnare.net\r\nX-Message-ID: 749f92e98ac7daa1b40c7093adeba4681e7bd0d5869d272e49d9ebde58f8da29\r\nX-Received: from mail.mailsnare.net (unknown [209.236.228.74])\n\tby mail.mailsnare.net (Postfix) with ESMTP id 67FB640393;\n\tSun, 30 Dec 2007 01:45:12 +0000 (UTC)\r\nTo: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;, \n    rest-discuss@yahoogroups.com\r\nImportance: Normal\r\nSensitivity: Normal\r\nMessage-ID: &lt;W7827028582299021198979112@...&gt;\r\nX-Mailer: Mintersoft EdgeDesk, Build 4.03.0105\r\nDate: Sun, 30 Dec 2007 01:45:12 +0000\r\nOrganization: Bison Systems Corporation\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nReply-To: eric@...\r\nSubject: Re: RESTful design for Articles & Tags?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nMike Schinkel wrote:\n&gt;\n&gt; Yes, but when did I say we are dealing with nails?=\r\n\n&gt;\n\nYou said XSLT was a hammer, I&#39;m suggesting that your application is a n=\r\nail.\n\n&gt;\n&gt; Pigeonholing it as a system for managing HTML documents is doing =\r\nit and its\n&gt; community a huge disservice.\n&gt;\n\nIt&#39;s a Content Management Syst=\r\nem, and like all CMSs it generates output as \n(X)HTML documents, does it no=\r\nt?  I fail to see how pointing out the obvious \nis a disservice to anyone.\n=\r\n\n&gt;\n&gt;&gt; So, what is the point of using a SQL\n&gt;&gt; database for this task, as op=\r\nposed to say, an XML database\n&gt;&gt; which *is* designed to handle marked-up do=\r\ncuments?\n&gt;\n&gt; Well, uh, because Drupal uses MySQL to store its content?\n&gt;\n\nA=\r\ns my example URL shows, any legacy SQL-based CMS may be wrapped by an XML \n=\r\nlayer.  Just because Drupal uses MySQL doesn&#39;t mean you have to generate \no=\r\nutput by making SQL queries your starting point.  Relational databases have=\r\n \ntheir place, but they are definitely not efficient at serving Web content=\r\n.\n\n&gt;\n&gt; If *I* insist? Why not learn something about the open-source project=\r\n before\n&gt; assigning me the responsibility of having selected the backend. (=\r\nEven so, I\n&gt; would not these days ever choose an XML database...)\n&gt;\n\nYes, &quot;=\r\nif you insist,&quot; which was an assumption on my part about your POV.  \nAn acc=\r\nurate one at that, so I fail to see where you take offense, \nparticularly t=\r\no the extent where you derail a cordial conversation by \nintroducing insult=\r\ns and ad-hominem shots at myself and others.  I am indeed \nfamiliar with Dr=\r\nupal.  And Typo3.  And Joomla.  And WordPress.  And etc. \netc. etc.  Plus, =\r\nI wrote a CMS from scratch in 1998 using Server-Side JS.  \nSo why not keep =\r\non open mind when it comes to learning from the experience \nof others, inst=\r\nead of assuming they have none?\n\n&gt;\n&gt; In that case, why not go over to http:=\r\n//drupal.org and start a discussion\n&gt; thread there telling them how everyon=\r\ne in the comminity has been getting it\n&gt; wrong all this time and that every=\r\none using Drupal should immediately stop\n&gt; what they are doing and port to =\r\nan XML database?\n&gt;\n&gt; Sorry, your assertion was just so over-the-top I could=\r\nn&#39;t resist the\n&gt; sarcasm.\n&gt;\n\nMy assertion is that mature CMS applications a=\r\nre *legacy* applications, \nparticularly from a REST standpoint -- but I cer=\r\ntainly won&#39;t dive headlong \ninto the viper pit of any CMS&#39;s online communit=\r\ny of the faithful by \nsuggesting these apps be redesigned following the ten=\r\nets of REST any more \nthan I would go to the Typo3 forum and claim that XSL=\r\nT is a better solution \nthat its proprietary templating system.  Just becau=\r\nse I&#39;d be shouted down, \nwith plenty of ad-hominem attacks thrown in for go=\r\nod measure, wouldn&#39;t make \nme wrong would it?\n\n&gt;\n&gt; True XSLT is a standard,=\r\n but just because it made it&#39;s way to a standard\n&gt; doesn&#39;t mean it was a go=\r\nod idea. Group-think is, has always been, and will\n&gt; always be alive in sta=\r\nndard&#39;s processes.\n&gt;\n\nThis argument is non-sequitir as it applies to all st=\r\nandards, including \nthings like how the prongs are arranged on power outlet=\r\ns.  But it isn&#39;t a \nvalid reason to adopt your own power outlet design that=\r\n only works with \nyour devices, even if it does provide standard household =\r\ncurrent.\n\n&gt;\n&gt; Using XSLT requires one to opt-in to a XSLT library, and I kn=\r\now from\n&gt; experience the pain of experience the differences there are betwe=\r\nen those.\n&gt;\n\nHow so?  XSLT is built-in to the browsers it&#39;s served to, as i=\r\ns JavaScript.  The difference is, to make JavaScript perform the same trans=\r\nformations XSLT \nis capable of, requires some sort of code library specific=\r\n to your app.  \nXSLT does not, its only purpose is to transform XML.\n\n&gt;\n&gt; L=\r\nisten, the reason I&#39;m arguing strongly for JSON and against XML is because\n=\r\n&gt; of the cargo-cultist mentality regarding XML that I seem to have unearthe=\r\nd\n&gt; here. I&#39;m not really anti-XML (though I am anti XSLT and anti- for over=\r\ndoing\n&gt; namespaces, especially as namespaces identified by non-deferenceabl=\r\ne URIs),\n&gt; I&#39;m just seeing that is many times easier to work with JSON in t=\r\nhe browser.\n&gt; The fact you have to defend XML tells me though doth protest =\r\ntoo much.\n&gt;\n\nAha, now I understand why you&#39;re being rude.  You lack any shr=\r\ned of respect \nfor those who make different technology decisions than you d=\r\no, as there is \nobviously something deficient about our collective intellig=\r\nence.  Has it \never occurred to you, that your POV could be dismissed in a =\r\nsimilar fashion?  \nLike, &quot;The fact that you have to defend JSON tells me...=\r\nblah blah blather.&quot;  \nIt&#39;s a strawman.  Is it really necessary to call me a=\r\n &quot;cargo cultist&quot; \nbecause XML technology allows me to accomplish my work fa=\r\nster and easier \nthan a pure JavaScript/JSON approach would?  You aren&#39;t fa=\r\nmiliar with my \nproject, so who are you to second-guess my decisions in suc=\r\nh a dismissive \nfashion?  This behavior does not support your position.  Qu=\r\nite the \ncontrary.  :-(\n\n&gt;\n&gt;&gt; With this JSON/AJAX approach, the fallback fo=\r\nr browsers with\n&gt;&gt; no JavaScript would be what, PHP?\n&gt;\n&gt; Sure. But it could=\r\n also be done in Python, Ruby, Perl, Lisp, Java, C#,\n&gt; VB.NET, VBScript...\n=\r\n&gt;\n&gt; As you say, it only needs to be coded once (per language.)\n&gt;\n\nNo, I sai=\r\nd it only needs to be coded *once* in *one language*.  Are any \nbrowsers co=\r\nmpatible with Python, Ruby, Perl, etc. that you mention?  No.  \nBut, XSLT w=\r\norks client-side and server-side, so you can indeed use the \nsame code on b=\r\nrowsers that is used on the server.\n\n&gt;\n&gt;&gt; So that&#39;s PHP and\n&gt;&gt; JavaScript b=\r\neing used to accomplish the transformation task\n&gt;\n&gt; And the problem is?\n&gt;\n\n=\r\nThe problem is, if you&#39;re accomplishing the same task by writing code in on=\r\ne \nlanguage for the server, and another language for the client, then you a=\r\nre \ngoing against the principle of generality by not re-using your code.  X=\r\nSLT \nallows your server-side code to be re-used on the client.\n\n&gt;\n&gt; How is =\r\nit twice the overhead?\n&gt;\n\nIs that not obvious?  If you have code that accom=\r\nplishes a specific task, \nbut must write it a second time in a second langu=\r\nage, then you have twice \nthe maintenance over the long haul as you would b=\r\ny having only one piece \nof code, in one language, accomplishing the same t=\r\nask.\n\n&gt;\n&gt; Besides, groking XSLT takes an order of magnitude more mental eff=\r\nort for\n&gt; most people.\n&gt;\n\nYes, if they&#39;re stuck on imperative programming. =\r\n For example, the quality \nof XSLT code on my project is very poor at the m=\r\noment, because I employed \ntwo coders for six months who just couldn&#39;t gras=\r\np functional programming.  \nSo I fired them and took on a new partner to re=\r\n-code the bulk of the \nproject, but he had to learn XSLT first.  This only =\r\ntook him one week, as \nhe&#39;s solidly grounded in functional programming.\n\n&gt;\n=\r\n&gt; How is it more likely to be understood? JSON has fewer non-data syntax\n&gt; =\r\ncharacters than XML that would otherwise confuse the uninitiated.\n&gt;\n\nWell, =\r\nfor one thing, a browser is likely to recognize Atom and ask if the \nuser w=\r\nants to subscribe to the feed.  This just won&#39;t happen presenting \nthe same=\r\n data as JSON.  If a JSON document pops up that presents information \nin a =\r\nproprietary fashion, I, the user, won&#39;t have the slightest clue how to \ndec=\r\nipher it without looking at the JavaScript code.  OTOH, if an Atom \ndocumen=\r\nt pops up that presents information in a standardized fashion, I, the \nuser=\r\n, have a pretty good chance of understanding who posted what when, \nwithout=\r\n needing to go any further, due to the standard MIME type being used.\n\nYour=\r\n argument may hold true for some use cases, but my point remains, that \nthe=\r\n use case of managing Web content is best done with Atom because that&#39;s \nwh=\r\nat it is designed for.  It&#39;s the difference between a proprietary \ninterfac=\r\ne using random JSON code, and a standardized interface using a \nknown Conte=\r\nnt-Type -- Atom, as opposed to random XML code, which would be \nthe same pr=\r\noblem as I have with using JSON for this purpose even if JSON \nbecomes stan=\r\ndardized.\n\n&gt;\n&gt; My guess is someone will eventually create an Atom-to-JSON c=\r\nonvertor, and\n&gt; then someone else will create an Atom equivalent in JSON an=\r\nd who knows where\n&gt; that might take us.\n&gt;\n\nAnd any application built this w=\r\nay would constitute non-RESTful use of \nlibrary APIs, unless some sort of &quot;=\r\nAtom-as-JSON&quot; MIME type is created.\n\n&gt;\n&gt; NOW I see why you are arguing to s=\r\ntrenously for XML & XSLT. If you accepted\n&gt; that I was right about JSON you=\r\n&#39;d have to accept that all your efforts on\n&gt; our XML+XSLT project were for =\r\nnaught. Knowing human nature&#39;s need to\n&gt; justify its decisions, I really pr=\r\nobably should not be arguing this with you\n&gt; because even if I&#39;m right your=\r\n efforts on XSLT would make it hard for you to\n&gt; admit it.\n&gt;\n\nOh good grief=\r\n, again with the insults.  How tedious, especially coming from \nsomeone who=\r\n complains about being condescended to... My choice of \ntechnology is based=\r\n on my knowledge and experience plus a tremendous amount \nof research.  If =\r\nI truly believed that your approach was a superior \nsolution, then that&#39;s w=\r\nhat I would have used.  But I don&#39;t believe that, \nnor do I need to &quot;justif=\r\ny my decisions&quot; by arguing for an approach you \nclaim I &quot;know&quot; to be defici=\r\nent.  How condescending a response is *that*?!?\n\n&gt;\n&gt; Frankly, I&#39;d be horrif=\r\nied if that were every to take off on a broad scale.\n&gt; Fortunately, I&#39;m pre=\r\ntty sure it won&#39;t; at least not the XSLT part; XSLT is\n&gt; just too hard to l=\r\nearn for the average Joe.\n&gt;\n\nIs it really necessary to denigrate the work o=\r\nf others when you participate in a discussion thread?  Your statement is me=\r\nrely an ad-hominem insult as you fail to back it up by explaining *why* you=\r\n would be &quot;horrified&quot; if my project succeeds.  What &quot;average joe&quot; needs to =\r\nunderstand XSLT to use WordPress under my system?  None.  On to your next i=\r\nnsult...\n\n&gt;\n&gt; Honestly speaking, aside from being a magnificent example of =\r\ndoing it\n&gt; because it can be done, what tangible benefits does this really =\r\nprovide that\n&gt; were not already available on vanilla WordPress?\n&gt;\n\nSeriousl=\r\ny, WTF?  Why can&#39;t you phrase this, &quot;What tangible benefits...&quot; \ninstead of=\r\n starting off by insulting my work?  In answer to your question, \n&quot;REST&quot;.  =\r\nAre you claiming that vanilla WordPress is a RESTful application?  \nIf you&#39;=\r\nd care to review Roy&#39;s thesis again, please note how it talks about \nusing =\r\na RESTful approach to legacy applications by encapsulating them in a \nlayer=\r\ned system.  I&#39;ve created a REST wrapper layer for legacy, SQL-bound \nCMS ap=\r\nplications, not just WordPress, which has the added benefit of \nserving as =\r\nan integration point between CMS applications.\n\nIt&#39;s interesting how you ca=\r\nn be preemptively dismissive of someone&#39;s work \nat the drop of a hat like t=\r\nhat, without even waiting for an answer to your \nquestion.  Is REST a tangi=\r\nble benefit for non-RESTful systems?  Yes, I \nbelieve it is, but that comes=\r\n through my knowledge and experience, not \nreceived wisdom, which you repea=\r\ntedly suggest is what drives me.  It is \nnot a &quot;religion,&quot; it is a *solutio=\r\nn.*  Just like XSLT.\n\n&gt;\n&gt; Are you really seriously suggesting to build a fu=\r\nll-working web app with\n&gt; XSLT and foresaking all JavaScript? Aside from no=\r\nt seeing how it will work,\n&gt; the thought of having to code again in XSLT gi=\r\nves me the cold chills...\n&gt;\n\nDid you really seriously not even bother to &quot;v=\r\niew source&quot; on my examples?  \nYou might notice an interesting use of AJAX t=\r\no enhance the cacheability of \nsystem output, as I am using both AJAX and X=\r\nSLT.  My point remains, that \nAJAX is very clumsy for doing transformations=\r\n compared to XSLT, my point \nwas never &quot;don&#39;t use JavaScript, use XSLT inst=\r\nead&quot;, you are putting (or \nattempting to put) words in my mouth.  In, once =\r\nagain, an insulting \nfashion.  Try it again, without the &quot;really seriously&quot;=\r\n and &quot;cold chills&quot; \nB.S., OK?\n\n&gt;\n&gt; But hey, if you are wedded to XML+XLST a=\r\nnd you have invested tons of time\n&gt; into a project using them then more pow=\r\ner to you; don&#39;t let my distaste for\n&gt; the tools you used get you down. Ser=\r\niously; I&#39;m just one person trying to\n&gt; get something done. You don&#39;t have =\r\nto convert me to your religion just as I\n&gt; don&#39;t need to convert you to min=\r\ne.\n&gt;\n\nTrust me, being insulted by others who have not established that they=\r\n know \nwhat the hell they&#39;re talking about is not the sort of thing that ge=\r\nts me \ndown.  I am merely presenting a working example of a RESTful system =\r\nusing \nclient-side XSLT to offload some of the heavy lifting from server to=\r\n \nclient, transferred as Atom.  Given your attitude, I guess I really don&#39;t=\r\n \ngive a damn what you think, either.\n\nSo I&#39;ll be quite satisfied if people=\r\n can read my posts, examine my example, \nand learn from it even if *your* m=\r\nind is closed to the possibility that \nanyone who advocates XML might not b=\r\ne a moron.  None of my work comes from \n&quot;religious conviction&quot; about any te=\r\nchnology, only what works best for me \nafter careful consideration of ALL t=\r\nhe alternatives.  Your anti-XML \nposition comes across as FUD, and FUD is n=\r\not the product of rational \nconsideration of the alternatives -- as evidenc=\r\ned by your favoring of ad-\nhominem attacks rather than a rational explanati=\r\non of your position.  Good \nday.\n\n-Eric\n\n\n\n\n"}}