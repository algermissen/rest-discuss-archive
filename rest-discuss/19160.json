{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":465410965,"authorName":"Nathan","from":"Nathan &lt;nathan@...&gt;","profile":"nathanrixham","replyTo":"SENDER","senderId":"FQD5VPnoK99PaWJOpeTqh6ph8oAQZl0IicIEoJSm2jJzSAvEz60rwiwOiJ9hAmxcaixRFfsi2ClY09una9P5TA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] How to identify existing resource in a POST(a) request","postDate":"1351344871","msgId":19160,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwOEJFMkU3LjkwMDAzMDRAd2VicjMub3JnPg==","inReplyToHeader":"PDJBMzdCNkIwLTgzMzUtNDQzRS1BM0ZFLTU4ODBGNDU4NkYzN0BsaW5lb25lLm5ldD4=","referencesHeader":"PDJBMzdCNkIwLTgzMzUtNDQzRS1BM0ZFLTU4ODBGNDU4NkYzN0BsaW5lb25lLm5ldD4="},"prevInTopic":19158,"nextInTopic":19161,"prevInTime":19159,"nextInTime":19161,"topicId":19156,"numMessagesInTopic":10,"msgSnippet":"Hi Paul, Uniform Resource Identifiers (URIs) are certainly the best choice for identifiers on the Web. It appears that you want to POST a representation of a","rawEmail":"Return-Path: &lt;nathan@...&gt;\r\nX-Sender: nathan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 14289 invoked from network); 27 Oct 2012 13:34:49 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m6.grp.sp2.yahoo.com with QMQP; 27 Oct 2012 13:34:49 -0000\r\nX-Received: from unknown (HELO mail-wi0-f180.google.com) (209.85.212.180)\n  by mta1.grp.sp2.yahoo.com with SMTP; 27 Oct 2012 13:34:48 -0000\r\nX-Received: by mail-wi0-f180.google.com with SMTP id hm4so866900wib.9\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 27 Oct 2012 06:34:47 -0700 (PDT)\r\nX-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        d=google.com; s=20120113;\n        h=message-id:date:from:reply-to:organization:user-agent:mime-version\n         :to:cc:subject:references:in-reply-to:content-type\n         :content-transfer-encoding:x-gm-message-state;\n        bh=4N2V/r/oBuOzGuyeF7z00OwUmFqArhU12A8k1s0EcF4=;\n        b=WPU3YyuuPwMX6KF8bm4XaVrQwmcXFJ50GyMhc6HeLReTlQZs94ILcEvWO0PHh94pFd\n         +3BTv/h602mkLTwRH0GP9I0Xf8epl1SIunwyRVb+RoHk4RODGttxfEOvEDJTJqkt7p8Q\n         dDs6OMjd1yfEBh8PtrBr6Ghbs2CTHbTLSDjvEQ1vcXenWmTz2nK5wFG4tQ3QTELE2ypU\n         d3ml7F1zPiinJQ+KlbdljEaaCsAX6e6hAmg/uUUtlPOtJexJJfI7ZpzGAhScKCVALmhK\n         iV+q0dG9Q7wVDPtZFL7GEMDtxwzAra0/dLPzDacJeO2jwTk8O/CBtKBifI6s7UGQpPKq\n         NUqQ==\r\nX-Received: by 10.216.139.209 with SMTP id c59mr9967675wej.50.1351344887713;\n        Sat, 27 Oct 2012 06:34:47 -0700 (PDT)\r\nReturn-Path: &lt;nathan@...&gt;\r\nX-Received: from [192.168.1.69] (host217-44-74-203.range217-44.btcentralplus.com. [217.44.74.203])\n        by mx.google.com with ESMTPS id v3sm2681100wiy.5.2012.10.27.06.34.46\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Sat, 27 Oct 2012 06:34:47 -0700 (PDT)\r\nMessage-ID: &lt;508BE2E7.9000304@...&gt;\r\nDate: Sat, 27 Oct 2012 14:34:31 +0100\r\nOrganization: webr3\r\nUser-Agent: Thunderbird 2.0.0.24 (Windows/20100228)\r\nMIME-Version: 1.0\r\nTo: Paul Moore &lt;paul.k.moore@...&gt;\r\nCc: rest-discuss@yahoogroups.com, Andrei Sambra &lt;andrei@...&gt;\r\nReferences: &lt;2A37B6B0-8335-443E-A3FE-5880F4586F37@...&gt;\r\nIn-Reply-To: &lt;2A37B6B0-8335-443E-A3FE-5880F4586F37@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-Gm-Message-State: ALoCoQnISpkX+9zRFwGBvf6oIocxN51BSezb3tzmoXv6bfG4JbXcZyxycQS34K2TSg0iL/d9wmnB\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nathan &lt;nathan@...&gt;\r\nReply-To: nathan@...\r\nSubject: Re: [rest-discuss] How to identify existing resource in a POST(a)\n request\r\nX-Yahoo-Group-Post: member; u=465410965; y=_u7kvdZLCHCDepF_jfcm75VRdpoCb2FWIVzR_Ae7BCrRnBO1U4ih\r\nX-Yahoo-Profile: nathanrixham\r\n\r\nHi Paul,\n\nUniform Resource Identifiers (URIs) are certainly the best choice for \nidentifiers on the Web.\n\nIt appears that you want to POST a representation of a person to \n/friends in order to have the person described by the representation \nadded as a friend of the currently authenticated user.\n\nIf this is correct, then I&#39;d encourage you to:\n\nA) describe the action you want performed with a representation (friend \nrequest) and POST that instead.\n\nB) refactor things such that either:\n\nB1) the representation at example.com/persons/1 contains a list of that \npersons friends, a list which you update by POSTing annotations (friend \nrequests) to, or update by PATCHing it, or by PUTting a new representation.\n\nB2) create a resource example.com/persons/{local-identifier}/friends \nwhich is a list of for each person, and again POST, PATCH or PUT to \nupdate it.\n\nIn all honesty though, your best bet here is most likely to take a look \nat myprofile-project.org and speak to Andrei Sambra &lt;andrei@...&gt; as \nthey&#39;ve nailed exactly what you want to do. Identification of agents \nmaking request, and open profiles of them are provided by WebID and \nLinked Data. This really appear to be what you need for this scenario \n(and probably all scenario&#39;s you can think of).\n\nAs a side note, you can identify who is making a request by requiring \nauth* when the person makes it, or by using the From header in the \nrequest (although this is rather limited as it only takes identifiers of \nthe form user@..., which then leads you down the road of needing \nWebFinger to lookup users).\n\nUltimately, the exact method on how you implement this depends on which \nmediatype(s) you end up using, at an abstract level it&#39;s just a simple \nthree-tuple truth statement you want to send though \n&quot;&lt;example.com/persons/1&gt; friend &lt;example.com/persons/2&gt;&quot;, via auth* you \ncan find out whether it&#39;s &#39;&lt;example.com/persons/1&gt;&#39; updating their \nprofile, or &lt;example.com/persons/2&gt; making a friend request.\n\nBest,\n\nNathan\n\n\n\nPaul Moore wrote:\n&gt; Hi all,\n&gt; \n&gt; I&#39;m currently wrangling with a problem about identification of existing resources within the representation of a POST request.\n&gt; \n&gt; To make this more tangible, lets consider that:\n&gt; \n&gt; (i) there are resources at the following URI&#39;s that represent person-like things\n&gt; \n&gt; \texample.com/persons/1\n&gt; \texample.com/persons/2\n&gt; \tgraph.facebook.com/2\n&gt; \n&gt; (ii) and that my user-agent has cached them, \n&gt; (iii) and that I am authoritative for example.com:\n&gt; \n&gt; Let&#39;s also add that there is a collection at &quot;example.com/friends&quot; which with a GET request returns a list of (links to) persons that have been classified as friends.\n&gt; \n&gt; The /friends collection resource accepts POST, and interprets the representation as &#39;someone to add to my friends&#39; i.e. a reasonably standard implementation of POST(a) for a collection.\n&gt; \n&gt; Option 1:  Use a domain specific identifier\n&gt; \n&gt; If I consider only the local domain (ignoring the externals for a moment) then using an attribute such as &#39;id&#39; (or similar) seems reasonable for identification of the resource.  For example, the representation indicates an &#39;id&#39; of 2, then I could *infer* that the intent is to add &quot;example.com/persons/2&quot; as a friend.  The issues here are that either:\n&gt; \n&gt; i) only a subset of resources must be POSTed to the /friends collection (i.e. person like things), or\n&gt; ii) a non-overlapping identifier has to be used (i.e. nothing else in the domain can have an &#39;id&#39; of 2.  \n&gt; \n&gt; Whilst implementation of UUIDs (or similar) would work around the uniqueness of identifier point (ii), it cannot be guaranteed that only a subset of (person like) resources will be sent to the server (always the client&#39;s intent).\n&gt; \n&gt; Further, when we introduce external domains, even the UUID solution is inadequate (i.e. is it an example.com identifier or a facebook.com identifier?) as the domain is not known.\n&gt; \n&gt; So, I think this slightly clumsy derivation concludes with the answer, use the URI - it is after all the global identifier.\n&gt; \n&gt; Note: whilst this appears obvious, compare with *all* the &#39;id&#39; based solutions in the wild - I suspect that &#39;id&#39; based solutions will remain limited to local domain solutions rather than embracing the distributed aspects of REST.\n&gt; \n&gt; Option 2: Use the URI in the representation\n&gt; \n&gt; The typical / established approach for representations to identify their resource is through a &quot;self link&quot;.  This is variability encoded as a link with a &quot;rel&quot; of &quot;self&quot; (IANA link relation), or just as a property of a attribute e.g. link =&gt; uri... or self =&gt; uri...  Irrespective of the encoding, what we are mandating here is that the representation has a &quot;self&quot; identifier in it, and that identifier is a URI.\n&gt; \n&gt; Option 3: Use the URI in the Request headers...\n&gt; \n&gt; Mandating that such a self link is encoded in the representation seems somewhat onerous on media type designers, and ripe for disagreement.  I was therefore wondering if any standardised HTTP Request headers could help here?\n&gt; \n&gt; The &#39;Referer&#39; header appears to offer hope:\n&gt; \n&gt; &quot;The Referer[sic] request-header field allows the client to specify, for the server�s benefit, the address (URI) of the resource from which the Request-URI was obtained allows the client to specify, for the server�s benefit, the address (URI) of the resource from which the Request-URI was obtained&quot; [RFC2616]\n&gt; \n&gt; However, I&#39;ve not seen or heard about this header being used in this manner.  Does anybody know of any research in this space?\n&gt; \n&gt; Any thoughts on Options 2 or 3?\n&gt; \n&gt; Thanks in advance\n&gt; \n&gt; Paul\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n\n\n"}}