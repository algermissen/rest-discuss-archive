{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"CYdiwSQQZ2yLo39hDxWioa6kGfWXEYJGkLs4kiGAVXLarU5vmJsB_JMcDs8H7VuRFZ4GyQkQsWJUsU5w9-tpd42c69DNM-kdbJAyurrHmWA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Domain Application Protocol in practice","postDate":"1303331527","msgId":17491,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMEE1RDYxLTREMjUtNDcyQy04OTk0LTg4QTY0M0E5RUZFQUBtYWMuY29tPg==","inReplyToHeader":"PEJBTkxrVGltc0RFaytxTkM2SmdRYXJMSGlGZkZUT3dMXzR3QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PEJBTkxrVGlrb2JVaVNwY2FCSGcwdk5WK2VPRlRHcDVkOFZnQG1haWwuZ21haWwuY29tPiA8ODY1ODc0QzAtQzgxMi00RjBBLThCRTktMUE4OUNGQ0QyMTAxQG1hYy5jb20+IDxCQU5Ma1RpbXNERWsrcU5DNkpnUWFyTEhpRmZGVE93TF80d0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17490,"nextInTopic":17492,"prevInTime":17490,"nextInTime":17492,"topicId":17488,"numMessagesInTopic":8,"msgSnippet":"... The hypermedia constraint. ... In some aspects AtomPub is not RESTful. For example, it defines that GET requests on collections return Atom feed documents.","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 60687 invoked from network); 20 Apr 2011 20:32:13 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m6.grp.sp2.yahoo.com with QMQP; 20 Apr 2011 20:32:13 -0000\r\nX-Received: from unknown (HELO asmtpout022.mac.com) (17.148.16.97)\n  by mta3.grp.sp2.yahoo.com with SMTP; 20 Apr 2011 20:32:12 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; CHARSET=US-ASCII\r\nX-Received: from [192.168.2.106] ([84.143.202.167])\n by asmtp022.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01\n 64bit (built Nov 21 2010)) with ESMTPSA id &lt;0LJY00IXKX1KFT60@...&gt;\n for rest-discuss@yahoogroups.com; Wed, 20 Apr 2011 13:32:12 -0700 (PDT)\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.2.15,1.0.148,0.0.0000\n definitions=2011-04-20_07:2011-04-20,2011-04-20,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1104200103\r\nIn-reply-to: &lt;BANLkTimsDEk+qNC6JgQarLHiFfFTOwL_4w@...&gt;\r\nDate: Wed, 20 Apr 2011 22:32:07 +0200\r\nCc: Alessandro Nadalin &lt;alessandro.nadalin@...&gt;,\n rest-discuss@yahoogroups.com\r\nMessage-id: &lt;500A5D61-4D25-472C-8994-88A643A9EFEA@...&gt;\r\nReferences: &lt;BANLkTikobUiSpcaBHg0vNV+eOFTGp5d8Vg@...&gt;\n &lt;865874C0-C812-4F0A-8BE9-1A89CFCD2101@...&gt;\n &lt;BANLkTimsDEk+qNC6JgQarLHiFfFTOwL_4w@...&gt;\r\nTo: Mike Kelly &lt;mike@...&gt;\r\nX-Mailer: Apple Mail (2.1082)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Domain Application Protocol in practice\r\nX-Yahoo-Group-Post: member; u=289191104; y=1BizXqeExS3zlDVutVceEMIayC9uuR9eBJJ08UUKjswR8m4yydsBZ1GA\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Apr 20, 2011, at 9:24 PM, Mike Kelly wrote:\n\n&gt; On Wed, Apr 20, 2011 at 7:36 PM, Jan Algermissen\n&gt; &lt;algermissen1971@...&gt; wrote:\n&gt;&gt; \n&gt;&gt; On Apr 20, 2011, at 3:15 PM, Alessandro Nadalin wrote:\n&gt;&gt; \n&gt;&gt;&gt; Hi guys,\n&gt;&gt;&gt; \n&gt;&gt;&gt; I was wondering if a DAP is, simply, expliciting the workflow a\n&gt;&gt;&gt; consumer might follow during service&#39;s consumption.\n&gt;&gt; \n&gt;&gt; Personally, I have never liked the term (sorry Ian :-) because it (at least to me) sounds as if there was an agreement between client and server regarding the application that they engage in. IOW, the application flow *might* follow some pre-supposed state machine, but it also *might not*. Server and client simply cannot agree on this at design time - or it&#39;s not REST.\n&gt;&gt; \n&gt; \n&gt; Which REST constraint is broken by pre-agreeing on application flow at\n&gt; design time?\n\nThe hypermedia constraint.\n\n&gt; Doesn&#39;t that imply that AtomPub is not RESTful? I&#39;m not\n&gt; sure about that.\n\nIn some aspects AtomPub is not RESTful. For example, it defines that GET requests on collections return Atom feed documents. Design time knowledge like this is breaking the hypermedia constraint.\n\nThe fix for this would probably be as easy as making explicit that other possibilities exist and that client should be prepared to deal with that. OTH, you could argue that this is implicit through the use of HTTP anyway.\n\n&gt; \n&gt; Parallels between applications for human-directed clients and\n&gt; machine-directed clients break down here. The reason that html apps\n&gt; work with very little pre-supposition is because humans are capable of\n&gt; levels of awareness, adaptation and intuition that are (currently) far\n&gt; beyond anything a machine can manage. I think it&#39;s too easy to\n&gt; underestimate how much that human capability affords change in\n&gt; application flow, and to over-estimate the capability of machines.\n\nI have come to think that it is misleading to make that distinction at all. User agents are software components that are programmed to work on behalf of some user&#39;s use case. In some use cases the user will perform many user action steps in that use case (e.g. ordering a book on Amazon) in other use cases the user will merely start the process and review the results (e.g starting a user agent that compares book prices at various sites an stores the result in a database).\n\nIn any case the user agent simply does what it has been programmed to do and in any case the application that realizes the use case will end up in an &#39;error&#39; state when the user&#39;s intent cannot be fulfilled. \n\nWhat REST brings to the table is that the &#39;error&#39; state is a state we must expect and deal with. REST makes that possibility of failure explicit by acknowledging the very nature of networked and decentralized systems. (Instead of hiding it behind the false promise of control implied by other architectural styles)\n\n(Sorry, got carried away there :-)\n\n&gt; \n&gt; Agreeing on application flow at design time, if the clients are\n&gt; machine-directed, is actually a Good Idea because the server will be\n&gt; under no illusion as to what changes it can enact, and it avoids the\n&gt; costs associated with trying to define application flows in more\n&gt; &#39;dynamic&#39; terms.\n\nHmm, maybe. But it is simply not REST then.\n\n&gt; \n&gt;&gt; However, - and this is what Ian is IMHO trying to capture with his term &#39;DAP&#39; - media types do not fall from the sky at random but are designed on the basis of some set of interactions the designers think about when they create the media type. Clearly, when you design a media type for procurement you will have some basic interactions in mind.\n&gt;&gt; \n&gt; \n&gt; Actually you can design media types that are completely application\n&gt; agnostic, and when using them define your DAPs purely in terms of\n&gt; entry points and link relations. Providing a more generic interface\n&gt; from an app agnostic media type seems like it might encourage\n&gt; healthier re-use in the system.\n\nThis I doubt (I think it just moves the problem elsewhere). But I am open to be convinced otherwise.\n\nJan\n\n\n\n\n\n\n\n\n&gt; \n&gt; Cheers,\n&gt; Mike\n\n\n"}}