{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"FEncUKoUd33IViKh7JKHNO2CF9FXAL9cqBJzo5TlBi5TE3ebsYdYqeK6YdIhNZb6-8zHppKboOo8tMDFZirxk6ndhrNeBhU3aIRZ7xxzCA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] bootstrapping","postDate":"1200642394","msgId":10258,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyNTEwMWM4NTlhNiQ0MGFhODdhMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDUwMzdiNmU0MDgwMTE3MTkxN2gyZDM2ZTQ4MG43NjAzNzY1OTg1ZDBjNzU2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGZta3M3OCtrMTVrQGVHcm91cHMuY29tPiA8NTAzN2I2ZTQwODAxMTYxMDQ4cTQwZWJhZDg0aTM4ZjdjOGEyZDkyZTcwMDVAbWFpbC5nbWFpbC5jb20+IDwwZjNlMDFjODU4N2YkOWQ4YWNmNzAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTYyMjM5Zzc3N2I0NjdkcTY0YjEzNzMzMDAwOTg4YWNAbWFpbC5nbWFpbC5jb20+IDwxMDU0MDFjODU4ZTckNDhmY2I1ZjAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPiA8NTAzN2I2ZTQwODAxMTcxOTE3aDJkMzZlNDgwbjc2MDM3NjU5ODVkMGM3NTZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":10257,"nextInTopic":10259,"prevInTime":10257,"nextInTime":10259,"topicId":10201,"numMessagesInTopic":65,"msgSnippet":"... You are very much making my point. Those people you refer to are still professional developers, even those working on order fulfillment or inventory","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73317 invoked from network); 18 Jan 2008 07:46:39 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m52.grp.scd.yahoo.com with QMQP; 18 Jan 2008 07:46:39 -0000\r\nX-Received: from unknown (HELO hs-out-2122.google.com) (64.233.178.241)\n  by mta18.grp.scd.yahoo.com with SMTP; 18 Jan 2008 07:46:38 -0000\r\nX-Received: by hs-out-2122.google.com with SMTP id k27so886230hsc.3\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 17 Jan 2008 23:46:38 -0800 (PST)\r\nX-Received: by 10.150.139.15 with SMTP id m15mr982803ybd.30.1200642398277;\n        Thu, 17 Jan 2008 23:46:38 -0800 (PST)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nX-Received: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTPS id 29sm5036240wrl.18.2008.01.17.23.46.34\n        (version=SSLv3 cipher=RC4-MD5);\n        Thu, 17 Jan 2008 23:46:36 -0800 (PST)\r\nTo: &quot;&#39;Assaf Arkin&#39;&quot; &lt;assaf@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;fmks78+k15k@...&gt; &lt;5037b6e40801161048q40ebad84i38f7c8a2d92e7005@...&gt; &lt;0f3e01c8587f$9d8acf70$0702a8c0@...&gt; &lt;5037b6e40801162239g777b467dq64b13733000988ac@...&gt; &lt;105401c858e7$48fcb5f0$0702a8c0@...&gt; &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\r\nDate: Fri, 18 Jan 2008 02:46:34 -0500\r\nKeywords: Archived\r\nMessage-ID: &lt;125101c859a6$40aa87a0$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198\r\nthread-index: AchZgJrt2OFZGDgsSKSsiuPYgd8LwwAH2JBA\r\nIn-Reply-To: &lt;5037b6e40801171917h2d36e480n7603765985d0c756@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] bootstrapping\r\nX-Yahoo-Group-Post: member; u=228155998; y=bPwyh6eoTUztbbduOASjEMQsdqAEzURxLQmrqO577_KXBk2MLMth\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\nAssaf Arkin wrote:\n&gt; &gt; However, and I explain this so you&#39;ll know why I make some of my \n&gt; &gt; arguments, I&#39;m also concerned with empowering a class of \n&gt; &gt; people that I think most who participate on these lists are not \n&gt; &gt; concerned with. I&#39;ll call those people &quot;occupational&quot; programmers \n&gt; &gt; (as opposed to &quot;professional&quot;) programmers.\n&gt; &gt; Occupational programmers by nature program to get a job done \n&gt; &gt; not because their job is programming. The more difficult \n&gt; &gt; something is the less likely an occupational programmers will ever \n&gt; &gt; be able to do it because they don&#39;t rarely have the time to learn \n&gt; &gt; more than beginner-level programming skills.\n&gt; \n&gt; I just call them developers. Those working on the business \n&gt; needs like order fullfilment and inventory management, far \n&gt; outweight those working on infrastructure problems like how \n&gt; to connect any given server to any given client.  I belong to \n&gt; the smaller category of infrastructure developers, who worry \n&gt; about that stuff, but only so other developers won&#39;t have to.\n&gt; \n&gt; Same difference, I just think it helps in remembering that \n&gt; what works for me doesn&#39;t work for most developers.\n\nYou are very much making my point. Those people you refer to are still\nprofessional developers, even those working on order fulfillment or\ninventory management; they are *not* the people to whom I was referring to.\nThe people I was referring to have titles like &quot;marketing manager&quot;,\n&quot;warehouse supervisor&quot;, &quot;creative director&quot;, &quot;executive assistant&quot;, and so\non.  They are business people who only program because they discover that\nthey can.  But they only discover that which it is (almost accidentally)\ndiscoverable.\n\n&gt; In my experience that doesn&#39;t work for the programmable Web.  \n&gt; You really do need to know what the states and transitions \n&gt; are, before you start coding for them.  Things like getting \n&gt; an order done is pursuing known transitions, to a desired end \n&gt; state, but you&#39;ll never start if you don&#39;t know there&#39;s a \n&gt; paved road leading to your destination.\n&gt;\n&gt; Working without a spec (i.e. pure discovery) has other down \n&gt; sides, like not always finding the optimal path, not being \n&gt; able to develop in parallel, QA servers on behalf of clients, \n&gt; or even determining what changes break clients.\n&gt; \n&gt; You need a map, and post signs along the way.\n\nAgain, you are talking about &quot;Professional&quot; programmers.  You are like a\nheart surgeon discussing best practices for a primary care physician and I&#39;m\ntrying to get you to see that I&#39;m talking about the mom who puts a bandaid\non her child&#39;s skint knee.\n\nOccupational Programmers don&#39;t need a spec, they don&#39;t even think in those\nterms.  They instead need to be slapped in the face with the fact that\nsomething is possible before they even consider it because they otherwise\nassume it is not. Those are the people I believe can be greatly empowered by\nRESTful web services.\n\n&gt; The problem with WSDL, and from what I&#39;ve seen also WADL, is \n&gt; that neither one provides a map.  \n\nWSDL and WADL are two orders of magnitude more complexity than any\noccupational programmer will ever attempt.  \n\n&gt; They provide blueprints.  \n&gt; They tell you exactly how to manufacture a service (and \n&gt; clients), but in doing so eliminates necessary deviations, \n&gt; extensions and compositions that can happen over time.  We \n&gt; need something better than that, which smartly divides that \n&gt; which belongs in the map and what which belongs on signs.\n\nYes, Professional Programmers need that. But Occupational Programmers need\nsomething much less complex.\n\n&gt; In that world view, dynamically downloading a map is \n&gt; unnecessary.  You already have one, from which you&#39;re \n&gt; building your code.  \n\nAgain, your comments make it clear you are still talking about Professional\nProgrammers, not Occupational Programmers.\n\nBTW, maybe it would be more clear to Professional Programmers like yourself\nif I instead called them &quot;Accidental Programmers?&quot;\n\n &gt;And if the one you have is different \n&gt; from the one you download, there&#39;s little you can do about \n&gt; it.  But you pay attention to signs along the route, in fact \n&gt; you can&#39;t get to your destination without following signs.\n&gt; \n&gt; So in this particular case, I would say that for all the \n&gt; known places, you should just list them on a map, hand it to \n&gt; developers to build clients from it.  \n\nJust to clarify, are you saying that you think everything that a web service\nmight provide can be converted into a pre-known finite list?\n\n&gt; which is a simple matter of &quot;here&#39;s the data, give me back a URL&quot;.\n\nUnless of course the only available programming model is to provide a URL;\ni.e. not being able to provide a client that can interact with the service\nin any other manner than perform a GET.\n\n&gt; The inbetween case is putting something up with intent that \n&gt; it be a sign, but possibility to be used as a map.  If it&#39;s \n&gt; possible it will happen, much more than developers reading \n&gt; the manual.  So rather than hoping things will happen in a \n&gt; particular way, I say commit to them. Make something a \n&gt; map or a sign, and only available in one form.\n\nThat&#39;s a very idealistic approach that unfortunately doesn&#39;t work in many\nreal-world scenarios.  An example of an accidental programmer is a blogger\nwho has no clue how to write a program, would never in a million years\ndescribe themselves as a programmer, but who wants to include a chart in\ntheir blog post. Using Google&#39;s Chart API anyone that has the skill to blog\ncan learn how to include a Google Chart in their post.  Using your\n&quot;commitment&quot; approach, they never will.\n\n&gt; &gt; BTW, 99% of what I&#39;m discussing in this email are web services \n&gt; &gt; published for external use, not web services that are only used by \n&gt; &gt; others in the same organization.\n&gt; \n&gt; It&#39;s been my experience that if you follow the successful \n&gt; practices of the Web, it ends up working quite well \n&gt; internally, if you follow practices only intended to work \n&gt; internally, they don&#39;t always work internally.  There&#39;s \n&gt; obviously a benefit to writing a service that only your \n&gt; coworker in the next room can use -- time being one of them\n&gt; -- but that&#39;s also how we acquire technical debt.\n&gt; \n&gt; I plan on every service as if it was publish on the Web, \n&gt; because I can&#39;t tell that the person who was at the design \n&gt; meeting today won&#39;t be replaced by someone else tomorrow who \n&gt; doesn&#39;t share our same understanding of doing things.\n\nUnfortunately you are ignoring the very real differences between web\nservices that are consumed by a handful of people internally and web\nservices that are potentially consumed by hundreds of thousands externally.\n\n\nTechniques used to deal with small scale can and are often the wrong ones to\nuse when dealing with large scale, and vice-versa.  Services published\ninternally need to be more agile because requirements are always changing\nand more complex because internal business requirements demand complexity.\nExternally published services need to be must more well-considered because\nthe biggest cost is in the marketing that gets others to initially write\nprograms to interface with it. Thus externally published services demand a\nhigher level of maturity from the start, the quantity of such interfaces by\nnature is much smaller than the number of internally published interfaces,\nand minimizing cost of each adoptee is important.  So the rules that should\napply are very, very different.  \n\nFor internal use I would absolutely recommend full HATEOAS with one\nentry-point URL and accept the added programming overhead required to\nsupport that.  For the externally published interface, I personally think\nthat it is better to put great effort into a good design and then both\npublish the direct URL interface and commit to supporting that URL interface\nlong term, at least for simple single GET operations because it costs much\nless to get someone to adoption a direct URL interface.  I know my\npreference violates REST&#39;s HATEOAS but that&#39;s my opinion based on what I\nview to be the most pragmatic and realistic approach.\n\nThe irony is that if I followed your approach of &quot;implementing internal\nservices as if it would be published on the open web&quot;, I&#39;d forego HATEOAS\nfor internal use, hardcode URL interfaces in clients, and put a lot more\ntime and energy into defining and publishing those internal interfaces which\nwould result in taking too long and causing my project to either be late or\nover budget. The irony is to follow your approach I wouldn&#39;t use the\ntechniques you advocate!\n\n-- \n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org\nhttp://atlanta-web.org \n\n\n"}}