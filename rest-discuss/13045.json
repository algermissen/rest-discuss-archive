{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":339031295,"authorName":"Sam Johnston","from":"Sam Johnston &lt;samj@...&gt;","profile":"sam.johnston@ymail.com","replyTo":"SENDER","senderId":"SV-oWfE5yEEVtYwFYWW4F7SANminG7PKY7UzBJowRQGNUfy2FZDx2qNKQZFyB5o39xUZGpUFpJH9eh3_VOq4Zh3qpw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Using HTTP Link: headers for web linking \tnon-hypertext","postDate":"1246392555","msgId":13045,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIxNjA2ZGNmMDkwNjMwMTMwOWwyNjI5ZThiMXdkNDg3NTU5MTdhMGVlYjAxQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDMzODU1NUEzLTg2OUItNDJCQi05NDE3LTBFQUJCNTdEOEE5NkBzdWJidS5vcmc+","referencesHeader":"PDIxNjA2ZGNmMDkwNjI0MDU1M2szZDg4MjU4Mm00MjQ1NGZlNGNhNWU4ZkBtYWlsLmdtYWlsLmNvbT4JIDw0QTQzRjMwOS4xMDEwNDAyQGRlaG9yYS5uZXQ+IDw0QTQ0MDRGOC4zMDAwMDA4QHJlZGhhdC5jb20+CSA8NEE0NDE2RDIuNTA4MDMwNEBkZWhvcmEubmV0PgkgPDI4NTA1MDY4LTE5M0EtNDIxNC1CNUY1LTE4RjNFOTdBOTZDNEBzdWJidS5vcmc+CSA8MjE2MDZkY2YwOTA2MzAwMzQ0ZzRiOWY3ZmMza2M1MTQ2MjQ3ODZlYzJjZmRAbWFpbC5nbWFpbC5jb20+CSA8MERDQ0EwRDAtRjQ1Ri00RDU2LUEyNjYtM0I1NUIzODQ1MzczQHN1YmJ1Lm9yZz4JIDw4MTU4YWQ3NTA5MDYzMDExMzJyNDU5MTA4ODR2NTIxNmRlYWY0NzVhM2FlOEBtYWlsLmdtYWlsLmNvbT4JIDxGMTkxMzlENC1EOEYwLTRDMEUtODQ5Qy04Q0I2RUZENTI1MDBAc3ViYnUub3JnPgkgPDMzODU1NUEzLTg2OUItNDJCQi05NDE3LTBFQUJCNTdEOEE5NkBzdWJidS5vcmc+"},"prevInTopic":13044,"nextInTopic":13046,"prevInTime":13044,"nextInTime":13046,"topicId":12926,"numMessagesInTopic":42,"msgSnippet":"Subbu, This is a fairly large deviation from HTTP as the universal interface and the details would need to be specified for each implementation. HTTP was ","rawEmail":"Return-Path: &lt;samj@...&gt;\r\nX-Sender: samj@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 65667 invoked from network); 30 Jun 2009 20:10:19 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m6.grp.re1.yahoo.com with QMQP; 30 Jun 2009 20:10:19 -0000\r\nX-Received: from unknown (HELO mail-ew0-f212.google.com) (209.85.219.212)\n  by mta3.grp.re1.yahoo.com with SMTP; 30 Jun 2009 20:10:19 -0000\r\nX-Received: by ewy8 with SMTP id 8so504053ewy.16\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 30 Jun 2009 13:09:15 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.210.62.3 with SMTP id k3mr3828596eba.62.1246392555619; Tue, 30 \n\tJun 2009 13:09:15 -0700 (PDT)\r\nIn-Reply-To: &lt;338555A3-869B-42BB-9417-0EABB57D8A96@...&gt;\r\nReferences: &lt;21606dcf0906240553k3d882582m42454fe4ca5e8f@...&gt;\n\t &lt;4A43F309.1010402@...&gt; &lt;4A4404F8.3000008@...&gt;\n\t &lt;4A4416D2.5080304@...&gt;\n\t &lt;28505068-193A-4214-B5F5-18F3E97A96C4@...&gt;\n\t &lt;21606dcf0906300344g4b9f7fc3kc514624786ec2cfd@...&gt;\n\t &lt;0DCCA0D0-F45F-4D56-A266-3B55B3845373@...&gt;\n\t &lt;8158ad750906301132r45910884v5216deaf475a3ae8@...&gt;\n\t &lt;F19139D4-D8F0-4C0E-849C-8CB6EFD52500@...&gt;\n\t &lt;338555A3-869B-42BB-9417-0EABB57D8A96@...&gt;\r\nDate: Tue, 30 Jun 2009 22:09:15 +0200\r\nMessage-ID: &lt;21606dcf0906301309l2629e8b1wd48755917a0eeb01@...&gt;\r\nTo: Subbu Allamaraju &lt;subbu@...&gt;\r\nCc: Peter Keane &lt;pkeane@...&gt;, Bill de hOra &lt;bill@...&gt;, \n\tREST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;, Mark Nottingham &lt;mnot@...&gt;\r\nContent-Type: multipart/alternative; boundary=0015174bf1f087486b046d966187\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Sam Johnston &lt;samj@...&gt;\r\nSubject: Re: [rest-discuss] Using HTTP Link: headers for web linking \n\tnon-hypertext\r\nX-Yahoo-Group-Post: member; u=339031295; y=tUzNmI-Jvnd6Ih5EbQJsybHBlxHmSiM5ZaDs1P_PROttHpD1Zhks3a9fxd0gsoClfg\r\nX-Yahoo-Profile: sam.johnston@...\r\n\r\n\r\n--0015174bf1f087486b046d966187\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\nSubbu,\n\nThis is a fairly large deviation from HTTP as the &quot;universal interface&quot; and\nthe details would need to be specified for each implementation. HTTP was\ndesigned to create a web of opaque resources, only the linking requirement\nwas (until now) well satisfied by another standard developed by another SSO\n(that is, HTML). The clients specify the links today so it makes sense that\nthey continue to be able to create the links tomorrow, does it not? If the\nserver doesn&#39;t like the proposed link it doesn&#39;t have to accept it, and it\ncan always specify links of its own (which is the way it works with\nhypertext today - consider &quot;manual&quot; links in blog comments vs &quot;automatic&quot;\nlinks to stylesheets, feeds, etc.)\n\nConsider some of the things I need to be able to do:\n\n   - Mount a storage resource on a compute resource\n   - Connect a compute resource to a network (or a network to a network\n   etc.)\n   - Associate arbitrary resources which may be hosted elsewhere (for\n   example, PDF build documentation for a server)\n\nWhy would I want to create what is essentially an RPC-style interface (e.g.\n&quot;mount&quot;, &quot;attach&quot;, &quot;associate&quot;, etc.) for this functionality? Granted if\nthat&#39;s what I wanted to do then the method you propose below is clean\n(except that the ID should perhaps be the URL) but is there not another way?\n\nSam\n\nOn Tue, Jun 30, 2009 at 9:57 PM, Subbu Allamaraju &lt;subbu@...&gt; wrote:\n\n&gt; Please read the POST as\n&gt;\n&gt;  POST /subbu/cart\n&gt;&gt; Content-Type: application/x-www-form-urlencoded\n&gt;&gt;\n&gt;\n&gt;  id=1234\n&gt;&gt;\n&gt;\n&gt; Subbu\n&gt;\n&gt;\n&gt; On Jun 30, 2009, at 12:41 PM, Subbu Allamaraju wrote:\n&gt;\n&gt;  Hi Peter,\n&gt;&gt;\n&gt;&gt;  1.  post the product to the cart &quot;collection&quot;\n&gt;&gt;&gt; 2.  add a link to a product pointing to the cart\n&gt;&gt;&gt; 3.  add a link to a cart resource pointing to the product\n&gt;&gt;&gt; 4.  create a new resource (presumably by POSTing to a known endpoint)\n&gt;&gt;&gt; that\n&gt;&gt;&gt; is essentially a &quot;cart-product instance&quot; that has a link to each\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;&gt; This still leaks many server-side details to the client. Here is an\n&gt;&gt; alternative.\n&gt;&gt;\n&gt;&gt; 1. The server has a cart resource, and product resources.\n&gt;&gt;\n&gt;&gt; 2. Each product resource found in a search will have a link\n&gt;&gt;\n&gt;&gt; &lt;link rel=&quot;http://shop.org/rels/buy&quot; href=&quot;http://shop.org/subbu/cart&quot;/&gt;\n&gt;&gt;\n&gt;&gt; The definition of rel says that the client should use POST to add the\n&gt;&gt; product to the cart.\n&gt;&gt;\n&gt;&gt; 3. Client adds the product to the cart\n&gt;&gt;\n&gt;&gt; POST /subbu/cart\n&gt;&gt; Content-Type: application/xml\n&gt;&gt;\n&gt;&gt; id=1234\n&gt;&gt;\n&gt;&gt; 4. Server redirects back to the updated cart\n&gt;&gt;\n&gt;&gt; 303 See Other\n&gt;&gt; Location: http://shop.org/subbu/cart\n&gt;&gt;\n&gt;&gt; This is just generalized version of a web based shopping cart, and\n&gt;&gt; provides a simplified interface to the client. As I said before, expecting\n&gt;&gt; the client to manage links is akin to clients posting SQL statements to\n&gt;&gt; servers.\n&gt;&gt;\n&gt;&gt; Subbu\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;  On Tue, Jun 30, 2009 at 11:59 AM, Subbu Allamaraju &lt;subbu@...&gt;\n&gt;&gt;&gt; wrote:\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Sam,\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; I don&#39;t disagree that there are use cases, but I am not sure if\n&gt;&gt;&gt;&gt; letting clients manage relations is the right way to implement\n&gt;&gt;&gt;&gt; distributed systems. The approach you describe below is similar to a\n&gt;&gt;&gt;&gt; client trying to setup foreign key relations between different\n&gt;&gt;&gt;&gt; database entities. This model leaks abstractions and is not ideal for\n&gt;&gt;&gt;&gt; writing large systems.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; For instance, take a simple shopping cart application. The server may\n&gt;&gt;&gt;&gt; have decided to use links to associate products to a cart, but that\n&gt;&gt;&gt;&gt; does not mean that, clients should be able to create/edit/delete those\n&gt;&gt;&gt;&gt; links. Instead, links come into being when the client &quot;adds products\n&gt;&gt;&gt;&gt; to a cart&quot; and they go away when the client &quot;removes a product from\n&gt;&gt;&gt;&gt; the cart&quot;. That is the right level of abstraction for the client.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; IMO, links are for servers to provide navigability between resources,\n&gt;&gt;&gt;&gt; and to let clients make state transitions via links.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Subbu\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On Jun 30, 2009, at 3:44 AM, Sam Johnston wrote:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;  Hi Subbu,\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; On Tue, Jun 30, 2009 at 5:45 AM, Subbu Allamaraju &lt;subbu@...\n&gt;&gt;&gt;&gt;&gt; &lt;subbu%40subbu.org&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;  wrote:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;  LINK is similar - how a LINK relationship is created/managed/\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; destroyed is\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; undefined.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Why isn&#39;t that up to the server(s) managing the resources? Links are\n&gt;&gt;&gt;&gt;&gt;&gt; for servers to describe relations between resources, and not for\n&gt;&gt;&gt;&gt;&gt;&gt; clients to manage such relationships.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Why so? This use case requires that clients be able to manage links:\n&gt;&gt;&gt;&gt;&gt; virtual\n&gt;&gt;&gt;&gt;&gt; infrastructure is modeled as compute, storage and network resources\n&gt;&gt;&gt;&gt;&gt; and\n&gt;&gt;&gt;&gt;&gt; clients create, delete and link them as they see fit. The server can\n&gt;&gt;&gt;&gt;&gt; too\n&gt;&gt;&gt;&gt;&gt; (for example, implicitly creating a storage resource and linking it\n&gt;&gt;&gt;&gt;&gt; when you\n&gt;&gt;&gt;&gt;&gt; create a compute resource) but the point of OCCI\n&gt;&gt;&gt;&gt;&gt; &lt;http://www.occi-wg.org/&gt;is to allow for client manipulation.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; We&#39;re not the only ones who see a need either... the original\n&gt;&gt;&gt;&gt;&gt; authors of the\n&gt;&gt;&gt;&gt;&gt; HTTP spec (RFC 2068) including LINK and\n&gt;&gt;&gt;&gt;&gt; UNLINK&lt;http://tools.ietf.org/html/rfc2068#section-19.6.1.2&gt;verbs for\n&gt;&gt;&gt;&gt;&gt; this around the same as this\n&gt;&gt;&gt;&gt;&gt; I-D &lt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; http://ftp.ics.uci.edu/pub/ietf/http/draft-pritchard-http-links-00.txt\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; specifying\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; same in more detail. This is what Mark Nottingham (author of the\n&gt;&gt;&gt;&gt;&gt; Link: header I-D among other things, copied) had to say this morning\n&gt;&gt;&gt;&gt;&gt; on\n&gt;&gt;&gt;&gt;&gt; apps-discuss:\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; *- First and foremost, in the absence of the LINK and UNLINK verbs\n&gt;&gt;&gt;&gt;&gt; originally defined in RFC 2068[2] but specifically omitted from RFC\n&gt;&gt;&gt;&gt;&gt; 2616[3],\n&gt;&gt;&gt;&gt;&gt; what is the preferred mechanism for manipulating these links via\n&gt;&gt;&gt;&gt;&gt; HTTP? It\n&gt;&gt;&gt;&gt;&gt; appears that this header is intended for GET requests only, but\n&gt;&gt;&gt;&gt;&gt; presumably\n&gt;&gt;&gt;&gt;&gt; specifying it in POST and PUT requests would be one option that\n&gt;&gt;&gt;&gt;&gt; avoids the\n&gt;&gt;&gt;&gt;&gt; creation of [not so] &quot;new&quot; verbs (bearing in mind that short of\n&gt;&gt;&gt;&gt;&gt; accepting\n&gt;&gt;&gt;&gt;&gt; Link: headers from empty POST/PUT requests, it would be necessary to\n&gt;&gt;&gt;&gt;&gt; GET and\n&gt;&gt;&gt;&gt;&gt; then PUT the entire payload to update links - twice if they were\n&gt;&gt;&gt;&gt;&gt; reciprocal). While there was an attempt a dozen years ago to better\n&gt;&gt;&gt;&gt;&gt; define\n&gt;&gt;&gt;&gt;&gt; the relevant HTTP verbs[4], it strikes me as more sensible to follow\n&gt;&gt;&gt;&gt;&gt; the\n&gt;&gt;&gt;&gt;&gt; example of the Set-Cookie: header for this rather than WebDAV&#39;s\n&gt;&gt;&gt;&gt;&gt; example of\n&gt;&gt;&gt;&gt;&gt; creating new verbs (even if we&#39;ve seen them before) but you guys are\n&gt;&gt;&gt;&gt;&gt; the\n&gt;&gt;&gt;&gt;&gt; experts.*\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Undefined, but I imagine in a PUT/POST body does indeed make the\n&gt;&gt;&gt;&gt;&gt; most sense.\n&gt;&gt;&gt;&gt;&gt; Using the Link header in a request doesn&#39;t have well-defined\n&gt;&gt;&gt;&gt;&gt; semantics.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; I wonder then whether it&#39;s not sensible to define these semantics in\n&gt;&gt;&gt;&gt;&gt; an[other] Internet Draft (ala Set-Cookie) rather than having everyone\n&gt;&gt;&gt;&gt;&gt; running off and inventing their own in-band solutions... doing so\n&gt;&gt;&gt;&gt;&gt; would make\n&gt;&gt;&gt;&gt;&gt; for some really clever RESTful interfaces.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Sam\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; \n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n\r\n--0015174bf1f087486b046d966187\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nSubbu,&lt;br&gt;&lt;br&gt;This is a fairly large deviation from HTTP as the &quot;unive=\r\nrsal interface&quot; and the details would need to be specified for each im=\r\nplementation. HTTP was designed to create a web of opaque resources, only t=\r\nhe linking requirement was (until now) well satisfied by another standard d=\r\neveloped by another SSO (that is, HTML). The clients specify the links toda=\r\ny so it makes sense that they continue to be able to create the links tomor=\r\nrow, does it not? If the server doesn&#39;t like the proposed link it doesn=\r\n&#39;t have to accept it, and it can always specify links of its own (which=\r\n is the way it works with hypertext today - consider &quot;manual&quot; lin=\r\nks in blog comments vs &quot;automatic&quot; links to stylesheets, feeds, e=\r\ntc.)&lt;br&gt;\n&lt;br&gt;Consider some of the things I need to be able to do:&lt;br&gt;&lt;ul&gt;&lt;l=\r\ni&gt;Mount a storage resource on a compute resource&lt;/li&gt;&lt;li&gt;Connect a compute =\r\nresource to a network (or a network to a network etc.)&lt;/li&gt;&lt;li&gt;Associate ar=\r\nbitrary resources which may be hosted elsewhere (for example, PDF build doc=\r\numentation for a server)&lt;br&gt;\n&lt;/li&gt;&lt;/ul&gt;Why would I want to create what is e=\r\nssentially an RPC-style interface (e.g. &quot;mount&quot;, &quot;attach&quo=\r\nt;, &quot;associate&quot;, etc.) for this functionality? Granted if that&#3=\r\n9;s what I wanted to do then the method you propose below is clean (except =\r\nthat the ID should perhaps be the URL) but is there not another way?&lt;br&gt;\n&lt;b=\r\nr&gt;Sam&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Jun 30, 2009 at 9:57 PM, Su=\r\nbbu Allamaraju &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:subbu@...&quot;&gt;sub=\r\nbu@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; sty=\r\nle=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex;=\r\n padding-left: 1ex;&quot;&gt;\nPlease read the POST as&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D=\r\n&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0=\r\npt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\nPOST /subbu/cart&lt;br&gt;\nContent-Type: a=\r\npplication/x-www-form-urlencoded&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;blockquote class=\r\n=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin=\r\n: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\nid=3D1234&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n=\r\nSubbu&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;\nOn Jun 30, 2009, at 12:41 =\r\nPM, Subbu Allamaraju wrote:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; styl=\r\ne=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; =\r\npadding-left: 1ex;&quot;&gt;\nHi Peter,&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; s=\r\ntyle=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8e=\r\nx; padding-left: 1ex;&quot;&gt;\n1. =A0post the product to the cart &quot;collection=\r\n&quot;&lt;br&gt;\n2. =A0add a link to a product pointing to the cart&lt;br&gt;\n3. =A0add=\r\n a link to a cart resource pointing to the product&lt;br&gt;\n4. =A0create a new r=\r\nesource (presumably by POSTing to a known endpoint) that&lt;br&gt;\nis essentially=\r\n a &quot;cart-product instance&quot; that has a link to each&lt;br&gt;\n&lt;/blockquo=\r\nte&gt;\n&lt;br&gt;\nThis still leaks many server-side details to the client. Here is a=\r\nn alternative.&lt;br&gt;\n&lt;br&gt;\n1. The server has a cart resource, and product reso=\r\nurces.&lt;br&gt;\n&lt;br&gt;\n2. Each product resource found in a search will have a link=\r\n&lt;br&gt;\n&lt;br&gt;\n&lt;link rel=3D&quot;&lt;a href=3D&quot;http://shop.org/rels/buy&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://shop.org/rels/buy&lt;/a&gt;&quot; href=3D&quot;&lt;a href=3D&quot;http=\r\n://shop.org/subbu/&quot; target=3D&quot;_blank&quot;&gt;http://shop.org/subbu/&lt;/a&gt;cart&quot;/=\r\n&gt;&lt;br&gt;\n&lt;br&gt;\nThe definition of rel says that the client should use POST to=\r\n add the product to the cart.&lt;br&gt;\n&lt;br&gt;\n3. Client adds the product to the ca=\r\nrt&lt;br&gt;\n&lt;br&gt;\nPOST /subbu/cart&lt;br&gt;\nContent-Type: application/xml&lt;br&gt;\n&lt;br&gt;\nid=\r\n=3D1234&lt;br&gt;\n&lt;br&gt;\n4. Server redirects back to the updated cart&lt;br&gt;\n&lt;br&gt;\n303 =\r\nSee Other&lt;br&gt;\nLocation: &lt;a href=3D&quot;http://shop.org/subbu/cart&quot; target=3D&quot;_b=\r\nlank&quot;&gt;http://shop.org/subbu/cart&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nThis is just generalized vers=\r\nion of a web based shopping cart, and provides a simplified interface to th=\r\ne client. As I said before, expecting the client to manage links is akin to=\r\n clients posting SQL statements to servers.&lt;br&gt;\n\n&lt;br&gt;\nSubbu&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;=\r\nbr&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(2=\r\n04, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\nOn Tue, Jun =\r\n30, 2009 at 11:59 AM, Subbu Allamaraju &lt;&lt;a href=3D&quot;mailto:subbu@...=\r\ng&quot; target=3D&quot;_blank&quot;&gt;subbu@...&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote cl=\r\nass=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); mar=\r\ngin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\nSam,&lt;br&gt;\n&lt;br&gt;\nI don&=\r\n#39;t disagree that there are use cases, but I am not sure if&lt;br&gt;\nletting c=\r\nlients manage relations is the right way to implement&lt;br&gt;\ndistributed syste=\r\nms. The approach you describe below is similar to a&lt;br&gt;\nclient trying to se=\r\ntup foreign key relations between different&lt;br&gt;\ndatabase entities. This mod=\r\nel leaks abstractions and is not ideal for&lt;br&gt;\nwriting large systems.&lt;br&gt;\n&lt;=\r\nbr&gt;\nFor instance, take a simple shopping cart application. The server may&lt;b=\r\nr&gt;\nhave decided to use links to associate products to a cart, but that&lt;br&gt;\n=\r\ndoes not mean that, clients should be able to create/edit/delete those&lt;br&gt;\n=\r\nlinks. Instead, links come into being when the client &quot;adds products&lt;b=\r\nr&gt;\nto a cart&quot; and they go away when the client &quot;removes a product=\r\n from&lt;br&gt;\nthe cart&quot;. That is the right level of abstraction for the cl=\r\nient.&lt;br&gt;\n&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail=\r\n_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt=\r\n 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\nIMO, links are for servers to pr=\r\novide navigability between resources,&lt;br&gt;\nand to let clients make state tra=\r\nnsitions via links.&lt;br&gt;\n&lt;br&gt;\nSubbu&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nOn Jun 30, 2009, at 3:44 A=\r\nM, Sam Johnston wrote:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nborder-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; paddi=\r\nng-left: 1ex;&quot;&gt;\nHi Subbu,&lt;br&gt;\n&lt;br&gt;\nOn Tue, Jun 30, 2009 at 5:45 AM, Subbu A=\r\nllamaraju &lt;&lt;a href=3D&quot;mailto:subbu@...&quot; target=3D&quot;_blank&quot;&gt;subbu@su=\r\nbbu.org&lt;/a&gt;&lt;subbu%&lt;a href=3D&quot;http://40subbu.org&quot; target=3D&quot;_blank&quot;&gt;40sub=\r\nbu.org&lt;/a&gt;&gt;&gt;&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot;=\r\n style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.=\r\n8ex; padding-left: 1ex;&quot;&gt;\nwrote:&lt;br&gt;\n&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot;=\r\n style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.=\r\n8ex; padding-left: 1ex;&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-=\r\nleft: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left=\r\n: 1ex;&quot;&gt;\n\nLINK is similar - how a LINK relationship is created/managed/&lt;br&gt;=\r\n\ndestroyed is&lt;br&gt;\n&lt;/blockquote&gt;\nundefined.&lt;br&gt;\n&lt;br&gt;\nWhy isn&#39;t that up t=\r\no the server(s) managing the resources? Links are&lt;br&gt;\nfor servers to descri=\r\nbe relations between resources, and not for&lt;br&gt;\nclients to manage such rela=\r\ntionships.&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;br&gt;\nWhy so? This use case requires that =\r\nclients be able to manage links:&lt;br&gt;\nvirtual&lt;br&gt;\ninfrastructure is modeled =\r\nas compute, storage and network resources&lt;br&gt;\nand&lt;br&gt;\nclients create, delet=\r\ne and link them as they see fit. The server can&lt;br&gt;\ntoo&lt;br&gt;\n(for example, i=\r\nmplicitly creating a storage resource and linking it&lt;br&gt;\nwhen you&lt;br&gt;\ncreat=\r\ne a compute resource) but the point of OCCI&lt;br&gt;\n&lt;&lt;a href=3D&quot;http://www.o=\r\ncci-wg.org/&quot; target=3D&quot;_blank&quot;&gt;http://www.occi-wg.org/&lt;/a&gt;&gt;is to allow f=\r\nor client manipulation.&lt;br&gt;\n&lt;br&gt;\nWe&#39;re not the only ones who see a need=\r\n either... the original&lt;br&gt;\nauthors of the&lt;br&gt;\nHTTP spec (RFC 2068) includi=\r\nng LINK and&lt;br&gt;\nUNLINK&lt;&lt;a href=3D&quot;http://tools.ietf.org/html/rfc2068#sec=\r\ntion-19.6.1.2&quot; target=3D&quot;_blank&quot;&gt;http://tools.ietf.org/html/rfc2068#section=\r\n-19.6.1.2&lt;/a&gt;&gt;verbs for&lt;br&gt;\nthis around the same as this&lt;br&gt;\nI-D &lt;&lt;br=\r\n&gt;\n&lt;/blockquote&gt;\n&lt;a href=3D&quot;http://ftp.ics.uci.edu/pub/ietf/http/draft-pritc=\r\nhard-http-links-00.txt&quot; target=3D&quot;_blank&quot;&gt;http://ftp.ics.uci.edu/pub/ietf/h=\r\nttp/draft-pritchard-http-links-00.txt&lt;/a&gt;&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_qu=\r\note&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0p=\r\nt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;bor=\r\nder-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-=\r\nleft: 1ex;&quot;&gt;\n\nspecifying&lt;br&gt;\n&lt;/blockquote&gt;\nsame in more detail. This is wha=\r\nt Mark Nottingham (author of the&lt;br&gt;\nLink: header I-D among other things, c=\r\nopied) had to say this morning&lt;br&gt;\non&lt;br&gt;\napps-discuss:&lt;br&gt;\n&lt;br&gt;\n*- First a=\r\nnd foremost, in the absence of the LINK and UNLINK verbs&lt;br&gt;\noriginally def=\r\nined in RFC 2068[2] but specifically omitted from RFC&lt;br&gt;\n2616[3],&lt;br&gt;\nwhat=\r\n is the preferred mechanism for manipulating these links via&lt;br&gt;\nHTTP? It&lt;b=\r\nr&gt;\nappears that this header is intended for GET requests only, but&lt;br&gt;\npres=\r\numably&lt;br&gt;\nspecifying it in POST and PUT requests would be one option that&lt;=\r\nbr&gt;\navoids the&lt;br&gt;\ncreation of [not so] &quot;new&quot; verbs (bearing in m=\r\nind that short of&lt;br&gt;\naccepting&lt;br&gt;\nLink: headers from empty POST/PUT reque=\r\nsts, it would be necessary to&lt;br&gt;\nGET and&lt;br&gt;\nthen PUT the entire payload t=\r\no update links - twice if they were&lt;br&gt;\nreciprocal). While there was an att=\r\nempt a dozen years ago to better&lt;br&gt;\ndefine&lt;br&gt;\nthe relevant HTTP verbs[4],=\r\n it strikes me as more sensible to follow&lt;br&gt;\nthe&lt;br&gt;\nexample of the Set-Co=\r\nokie: header for this rather than WebDAV&#39;s&lt;br&gt;\nexample of&lt;br&gt;\ncreating =\r\nnew verbs (even if we&#39;ve seen them before) but you guys are&lt;br&gt;\nthe&lt;br&gt;=\r\n\nexperts.*&lt;br&gt;\n&lt;br&gt;\nUndefined, but I imagine in a PUT/POST body does indeed=\r\n make the&lt;br&gt;\nmost sense.&lt;br&gt;\nUsing the Link header in a request doesn&#39;=\r\nt have well-defined&lt;br&gt;\nsemantics.&lt;br&gt;\n&lt;br&gt;\nI wonder then whether it&#39;s =\r\nnot sensible to define these semantics in&lt;br&gt;\nan[other] Internet Draft (ala=\r\n Set-Cookie) rather than having everyone&lt;br&gt;\nrunning off and inventing thei=\r\nr own in-band solutions... doing so&lt;br&gt;\nwould make&lt;br&gt;\nfor some really clev=\r\ner RESTful interfaces.&lt;br&gt;\n&lt;br&gt;\nSam&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/bloc=\r\nkquote&gt;&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div=\r\n&gt;&lt;br&gt;\n\r\n--0015174bf1f087486b046d966187--\r\n\n"}}