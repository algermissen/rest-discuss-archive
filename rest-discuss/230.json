{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"S. Alexander Jacobson","from":"&quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;","replyTo":"SENDER","senderId":"TvrxCO27ZIODMemSXhCaGHOcswIcZ5ahK-MUiM6zsj3wuNvaYl7_jdWKBGtnc75mD37lPilMYXqZ2ntZWw_O0GSXQFmx2k5Fc2gpfA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011898195","msgId":230,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTMyNjA0MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg==","inReplyToHeader":"PE9FNDZBQ3E5RkZTYWxOVzE1dWUwMDAxNWExMkBob3RtYWlsLmNvbT4="},"prevInTopic":227,"nextInTopic":231,"prevInTime":229,"nextInTime":231,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... Thats because we are talking about using HTTP to implement something that isn t the domain of HTTP. HTTP was designed to be a synchronous, client/server,","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 18:48:39 -0000\r\nReceived: (qmail 53721 invoked from network); 24 Jan 2002 18:48:38 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m6.grp.snv.yahoo.com with QMQP; 24 Jan 2002 18:48:38 -0000\r\nReceived: from unknown (HELO mail.vo.com) (208.36.81.99)\n  by mta1.grp.snv.yahoo.com with SMTP; 24 Jan 2002 18:48:38 -0000\r\nReceived: from gandolph.ASGARD.jms (alexhome2 [66.108.152.69])\n\tby mail.vo.com (8.12.1/8.12.1) with ESMTP id g0OImUFv031966\n\t(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);\n\tThu, 24 Jan 2002 13:48:33 -0500\r\nDate: Thu, 24 Jan 2002 13:49:55 -0500 (Eastern Standard Time)\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nIn-Reply-To: &lt;OE46ACq9FFSalNW15ue00015a12@...&gt;\r\nMessage-ID: &lt;Pine.WNT.4.43.0201241326040.1892-100000@...&gt;\r\nX-X-Sender: alex@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOn Wed, 23 Jan 2002, S. Mike Dierken wrote:\n&gt; I&#39;ve been going over the discussions about the asynchronous capabilities of\n&gt; HTTP and what to do about the missing pieces and have some discomforting\n&gt; thoughts.\n&gt; We all know what it means when we say &#39;pub/sub&#39; and &#39;notification&#39; or\n&gt; request and response or messaging, but when we say &quot;And now for the HTTP...&quot;\n&gt; we all disagree.\n\nThats because we are talking about using HTTP to\nimplement something that isn&#39;t the domain of HTTP.\nHTTP was designed to be a synchronous,\nclient/server, connectionless protocol.  It was\ndesigned to let clients request/update resources\nfrom a server simply and easily.\n\nIt was not designed for asynch, p2p, chat, or\ndistributed computation.  When using HTTP for any\nof these things we are simply designing a new\nprotocol on top of a set of HTTP primitives.  It\nis far from clear that the optimal design for an\nasynch protocol is to ride on top of HTTP.\n\nMuch as it would not be surprising if we disagreed\nabout the best design for an email system using\nC++ and the STL, it should not be at all\nsurprising that we disgaree when using HTTP.\nThere is much too much distance between the\napplication domain and the tools we are using.\n\n&gt; I don&#39;t see a trend for web applications converging on common approaches of\n&gt; using HTTP for a lot of cases, because most web applications talk to\n&gt; themselves - the only interoperation is through a link and a GET. They can\n&gt; put data in any slot without breaking anything because they wrote both the\n&gt; client and the server. Look at the many ways of doing user login - almost\n&gt; none of them use HTTP security constructs - and things still work.\n\nI agree.  That was part of the motivation for\nMIME-RPC.  But I would say something stronger.\nMost organizations are designing for internal use\nor to bind customers/suppliers closer to\nthemselves.  They prefer to expose their\norganizational constructs over the internet rather\nthan modify their organizational constructs match\nthose of HTTP.\n\nTo put it another way, they are designing\napplications not protocols.\n\n&gt; Something that would help me in the future is to model a large\n&gt; information-centric applications (including security and events) and create\n&gt; a direct mapping into URIs and HTTP. If anybody has any thoughts or\n&gt; experience with this, give me a shout. (The kind of thing I&#39;m thinking about\n&gt; is like an &#39;object oriented web&#39; but &#39;OO&#39; isn&#39;t appropriate. Components and\n&gt; interfaces are closer. Entity-relationship from rdbms and OMT/UML notation\n&gt; is closer still.)\n\nI tried to open this discussion earlier, but got\nno response.   I asked for a REST consisten way of\nimplementing terrorist_or_not.com (a made up\napplication).\n\nThe idea is that security checkpoints send front\nand side views of individuals to some server and\nthe server sends back information about whether\nthe person looks like a known terrorist in the\ndatabase.\n\nWe can add the complexity that processing the\nrequest may take long enough for the response to\narrive back asynchronously (but sometimes the\nserver can decide quickly).\n\nI think the implementation is straightforward\nusing MIME-RPC (because it can get much closer to\napplication level semantics).  The REST\nimplementation is much less obvious (at least to\nme).\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n"}}