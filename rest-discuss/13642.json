{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223905696,"authorName":"Ian","from":"&quot;Ian&quot; &lt;iansrobinson@...&gt;","profile":"is_robinson","replyTo":"SENDER","senderId":"2pJBewOhFMX7b-ReUvdI96ROwCEZvfO968_Dr61l1dgSEmDvUWVpRR0k-ogFN9JdYcCPRKwOohILwbIi4g4vmzovyHdx","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Application state","postDate":"1254586600","msgId":13642,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhN3RkOCszMW1qQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDY1REJBMzNELTUyOEEtNDBFQS1CNkM5LTg2N0U0NTg5NkZFMEBnbWFpbC5jb20+"},"prevInTopic":13640,"nextInTopic":13643,"prevInTime":13641,"nextInTime":13643,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Hi Christian The state of an order - whether it has zero line items, or five, is resource state, not application state. The state of the order as held in the","rawEmail":"Return-Path: &lt;iansrobinson@...&gt;\r\nX-Sender: iansrobinson@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47862 invoked from network); 3 Oct 2009 16:16:57 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.re1.yahoo.com with QMQP; 3 Oct 2009 16:16:57 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta3.grp.sp2.yahoo.com with SMTP; 3 Oct 2009 16:16:57 -0000\r\nX-Received: from [69.147.65.174] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 03 Oct 2009 16:16:41 -0000\r\nX-Received: from [98.137.34.35] by t12.bullet.mail.sp1.yahoo.com with NNFMP; 03 Oct 2009 16:16:41 -0000\r\nDate: Sat, 03 Oct 2009 16:16:40 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;ha7td8+31mj@...&gt;\r\nIn-Reply-To: &lt;65DBA33D-528A-40EA-B6C9-867E45896FE0@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ian&quot; &lt;iansrobinson@...&gt;\r\nSubject: Re: Application state\r\nX-Yahoo-Group-Post: member; u=223905696; y=a7P0-C9LvPCU8rgE92iJRbw94SylxhvmLlQmUiexmRNNfkTc-ys\r\nX-Yahoo-Profile: is_robinson\r\n\r\nHi Christian\n\nThe state of an order - whether it has zero line items, or fi=\r\nve, is resource state, not application state. The state of the order as hel=\r\nd in the http session in your example is resource state, not application st=\r\nate.\n\nA simple - perhaps overly simple - ordering protocol might be somethi=\r\nng like: new order created -&gt; adding line items -&gt; order completed -&gt; payme=\r\nnt received -&gt; order dispatched. \n\nIn the observable interactions between c=\r\nlient and server, this protocol is never visible &quot;as such&quot;: it can only be =\r\nviewed through the lens of resource state.\n\nOver the course of a series of =\r\ninteractions, the &quot;application&quot; (the game being played out between the clie=\r\nnt and the server) will be in one or other of these states - as viewed from=\r\n a &quot;God&#39;s eye&quot; point of view. Once the application state has progressed to =\r\n&quot;order completed&quot;, for example, it&#39;s no longer possible to add manipulate r=\r\nesources so as to add new line items; it is, however, possible to manipulat=\r\ne resources such that the application state transitions to &quot;payment receive=\r\nd&quot; (the client would do this by submitting a representation of a payment, p=\r\nerhaps). \n\nThe client and the server cooperate to execute this protocol, bu=\r\nt they do so by transferring representations of resource state, not represe=\r\nntations of application state. Application state is never represented &quot;as s=\r\nuch&quot;; rather, it&#39;s inferred by the client based on on current representatio=\r\nns of resource state. If the application is in the &quot;order completed&quot; state,=\r\n the representation of the order received by the client may very well inclu=\r\nde a link that has been annotated with the link relation value &quot;payment&quot;. T=\r\nhis isn&#39;t a straightforward representation of application state, however: i=\r\nt&#39;s an &quot;invitation&quot; to the client to transfer a representation of a payment=\r\n to this linked resource. As a side-effect of transferring this representat=\r\nion, the &quot;application&quot; may transition to &quot;payment received&quot;.\n\nWhat&#39;s import=\r\nant here is that the server is really only interested in maintaining resour=\r\nce state, which includes maintaining the integrity of the lifecycles of the=\r\n resources under its control, and the invariants that hold between resource=\r\ns (if any). The server can&#39;t be sure the client will ever take that step of=\r\n submitting a payment, so why bother holding onto application state? Applic=\r\nation state is something that can be reconstructed &quot;after the fact&quot;, by a c=\r\nlient, or omniscient observer, based on the disposition of the current set =\r\nof resource representations.\n\nSo the order representation is always a repre=\r\nsentation of resource state. Application state, that &quot;snapshot of the insta=\r\nnce of execution of a protocol&quot;, can only be inferred or reconstructed from=\r\n resource state.\n\nHope this is of some help. Apologies if I&#39;ve confused mor=\r\ne than clarified; double apologies if I&#39;m just talking plain nonsense.\n\nian=\r\n\n\n--- In rest-discuss@yahoogroups.com, Kristian Nordal &lt;kristian.nordal@...=\r\n&gt; wrote:\n&gt;\n&gt; \n&gt; On Oct 2, 2009, at 10:55 PM, Ian wrote:\n&gt; \n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --- =\r\nIn rest-discuss@yahoogroups.com, Mark Baker &lt;distobj@&gt; wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt; On =\r\nFri, Oct 2, 2009 at 4:56 AM, Kristian Nordal\n&gt; &gt;&gt; &lt;kristian.nordal@&gt; wrote:=\r\n\n&gt; &gt;&gt;&gt; I&#39;m also struggling with the difference between application state  \n=\r\n&gt; &gt;&gt;&gt; and\n&gt; &gt;&gt;&gt; server state (which I assume is the same as &quot;resource state=\r\n&quot;). Can\n&gt; &gt;&gt;&gt; someone point me to a good definition of &quot;application state&quot;?=\r\n\n&gt; &gt;&gt;\n&gt; &gt;&gt; It&#39;s literally the *state* of the *application*.  If you&#39;re look=\r\ning  \n&gt; &gt;&gt; at\n&gt; &gt;&gt; your bank balance, that&#39;s a different state than if you =\r\nwere  \n&gt; &gt;&gt; preparing\n&gt; &gt;&gt; to submit a bill payment, and once you&#39;ve submit=\r\nted the payment,\n&gt; &gt;&gt; you&#39;re in yet another state in the application state =\r\nmachine.\n&gt; &gt;&gt;\n&gt; &gt;&gt; Mark.\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt; Just to add to Mark&#39;s definition, and=\r\n put it in the context of  \n&gt; &gt; &quot;application&quot; and &quot;application protocol&quot;: i=\r\nf we think of an  \n&gt; &gt; application as being computer behavior that achieves=\r\n a particular  \n&gt; &gt; goal, we can describe an application protocol as the sp=\r\necification  \n&gt; &gt; of the legitimate interactions necessary to realize that =\r\nbehavior,  \n&gt; &gt; and application state as a snapshot of the instance of exec=\r\nution of  \n&gt; &gt; an application protocol.\n&gt; \n&gt; Thanks for the definitions. I&#39;=\r\nm still a bit confused though, so I&#39;m  \n&gt; going to try to use an example:\n&gt;=\r\n \n&gt; Let&#39;s say we have an client/ua that is filling out an order (order +  \n=\r\n&gt; line items). In a traditional web application, the order would be in  \n&gt; =\r\nthe http session, and we would add/remove line items to that order,  \n&gt; and=\r\n finally place the order. In that case I clearly see that we are  \n&gt; talkin=\r\ng about application state that is placed on the server. The  \n&gt; server keep=\r\ns track of it, and it&#39;s literally the state of the client/ \n&gt; application.\n=\r\n&gt; \n&gt; But if we were to store and address the order like any other resource,=\r\n  \n&gt; would that change the nature of the state? It would simply be another =\r\n \n&gt; way of storing the same state, but nevertheless it would be  \n&gt; &quot;resour=\r\nces&quot; with the same properties induced by the stateless  \n&gt; constraint (visi=\r\nbility, reliability, and salability) - given that they  \n&gt; were stored in t=\r\nhe a way that make that possible. To me, this looks  \n&gt; like exactly the sa=\r\nme kind of state (application state), simply stored/ \n&gt; modeled differently=\r\n. But in that case I don&#39;t see how or if it  \n&gt; violates the stateless cons=\r\ntraint.\n&gt; \n&gt; Would you say that the order in this example is always a &quot;snap=\r\nshot of  \n&gt; the instance execution of an application protocol&quot;, and that it=\r\n will  \n&gt; always be application state - no matter how it&#39;s modeled? And by =\r\n \n&gt; placing it on the server it would be in violation of the REST  \n&gt; princ=\r\niples, even though the stateless constraint is dealt with?\n&gt; \n&gt; --\n&gt; Thanks=\r\n,\n&gt; Kristian\n&gt;\n\n\n\n"}}