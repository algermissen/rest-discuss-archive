{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"ySRl3tw6qjeJljBpCW5cREV_V-HR3fCsGUFSVwGlFU7TICZNcinZ0jdf8mXf1vTcchLsvPbUlZ9_kSLtq8Hbp_q5HOs","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Homework on DELETE and Caching control and \tquestions","postDate":"1237821916","msgId":12324,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU3OGJkYmMwMDkwMzIzMDgyNWc0ZTg2NjhiN2pmMDRhZDJjOGY5MjY1Y2VmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzIyMDAwNTIxLjcyNGUyMzJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGdxM3VuaStjYzlxQGVHcm91cHMuY29tPgkgPDIwMDkwMzIyMDAwNTIxLjcyNGUyMzJmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":12320,"nextInTopic":12325,"prevInTime":12323,"nextInTime":12325,"topicId":12307,"numMessagesInTopic":8,"msgSnippet":"... I do not think the DELETE with the composite resource uri is that same as a GET. If you want to make a GET to do this, it would look like GET","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 88980 invoked from network); 23 Mar 2009 15:25:20 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by 98.137.34.37 with QMQP; 23 Mar 2009 15:25:20 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.176)\n  by mta2.grp.re1.yahoo.com with SMTP; 23 Mar 2009 15:25:17 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id j40so1259503wah.26\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 23 Mar 2009 08:25:16 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.114.167.3 with SMTP id p3mr4863085wae.127.1237821916503; Mon, \n\t23 Mar 2009 08:25:16 -0700 (PDT)\r\nIn-Reply-To: &lt;20090322000521.724e232f.eric@...&gt;\r\nReferences: &lt;gq3uni+cc9q@...&gt;\n\t &lt;20090322000521.724e232f.eric@...&gt;\r\nDate: Mon, 23 Mar 2009 09:25:16 -0600\r\nMessage-ID: &lt;e78bdbc00903230825g4e8668b7jf04ad2c8f9265cef@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nCc: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\nSubject: Re: [rest-discuss] Homework on DELETE and Caching control and \n\tquestions\r\nX-Yahoo-Group-Post: member; u=198897688; y=qTMoklkYhz_7Pd0PbbKd_1Tpsgil57w3CscNB5ertRN40A\r\nX-Yahoo-Profile: edonliu\r\n\r\n&gt; Then your first DELETE has the exact same semantics as GET, instead of\n&gt; =\r\nmeaning deletion.  There is nothing wrong with a server sending an\n&gt; Xforms=\r\n representation to the client with a bunch of URIs the user can\n&gt; select fo=\r\nr deletion, whereupon the client will send a discrete DELETE\n&gt; request to e=\r\nach URI at the touch of a button.  But, you must GET that\n&gt; form.\n\n\nI do no=\r\nt think the DELETE with the composite resource uri is that same\nas a GET. I=\r\nf you want to make a GET to do this, it would look like\n\nGET uri?action=3Dd=\r\nelete\n\nIt looks bad, is it?\n\nAs I understand, your position is that there i=\r\ns no way towards a\nRESTful solution for this problem, thought you thought t=\r\nhat POST with\nmany delete&#39;s is better than PUT + DELETE.\n\nMy position is th=\r\nat we can still work out a solution that follows the\nREST constraints and i=\r\ns implemented in HTTP.\n\nCheers,\n\nDong\n\nOn Sun, Mar 22, 2009 at 12:05 AM, Er=\r\nic J. Bowman &lt;eric@...&gt; wrote:\n&gt; Dong Liu wrote:\n&gt;\n&gt;&gt;\n&gt;&gt; On pa=\r\nge 56, section 9.7, it reads\n&gt;&gt; &quot;If the request passes through a cache and =\r\nthe Request-URI identifies\n&gt;&gt; one or more currently cached entities, those =\r\nentries SHOULD be\n&gt;&gt; treated as stale.&quot;\n&gt;&gt;\n&gt;&gt; So how can the intermediary f=\r\nigure out the currently cached entities\n&gt;&gt; identified by the Request-URI?\n&gt;=\r\n&gt;\n&gt;\n&gt; Because those cached representations all have the same URI as the URI=\r\n\n&gt; of the DELETE request. =A0They may have different Content-Locations.\n&gt;\n&gt;=\r\n&gt;\n&gt;&gt; On page 97, section 13.10, it reads\n&gt;&gt; &quot;The effect of certain methods =\r\nperformed on a resource at the origin\n&gt;&gt; server might cause one or more exi=\r\nsting cache entries to become non-\n&gt;&gt; transparently invalid. That is, altho=\r\nugh they might continue to be\n&gt;&gt; &quot;fresh,&quot; they do not accurately reflect wh=\r\nat the origin server would\n&gt;&gt; return for a new request on that resource.&quot;\n&gt;=\r\n&gt;\n&gt;&gt; I think this means it is common for an update or delete request\n&gt;&gt; yie=\r\nlds &quot;non-transparently&quot; invalidation of one or more existing cache\n&gt;&gt; entri=\r\nes.\n&gt;&gt;\n&gt;\n&gt; Of course. =A0If I send a DELETE request to my server, the only =\r\ncaches\n&gt; that should stale that resource are the ones between me and my ser=\r\nver.\n&gt; The rest of the Internet is oblivious to the DELETE. =A0Eventually, =\r\nthe\n&gt; deleted resource will expire. =A0If this is a problem, set stricter\n&gt;=\r\n cache-control headers.\n&gt;\n&gt;&gt;\n&gt;&gt; Further on page 98\n&gt;&gt; &quot;There is no way for =\r\nthe HTTP protocol to guarantee that all such\n&gt;&gt; cache entries are marked in=\r\nvalid.&quot;\n&gt;&gt;\n&gt;\n&gt; Caches aren&#39;t always connected to the Internet, or may have =\r\nvery\n&gt; expensive Internet connections (the hotspot on Mt. Everest), or some=\r\n\n&gt; other reason not to check with the origin server at all before serving\n&gt;=\r\n a cached representation. =A0So no, there is no way to guarantee\n&gt; expirati=\r\non, this is the essence of &quot;anarchic scalability&quot; -- you cede a\n&gt; bit of co=\r\nntrol over your resources to the world-at-large with zero\n&gt; control over wh=\r\nat happens as a result.\n&gt;\n&gt;&gt;\n&gt;&gt; &quot;Some HTTP methods MUST cause a cache to in=\r\nvalidate an entity. This\n&gt;&gt; is either the entity referred to by the Request=\r\n-URI, or by the\n&gt;&gt; Location or Content-Location headers (if present).&quot;\n&gt;&gt;\n&gt;=\r\n&gt; Can we put many Content-Location headers in a DELETE request?\n&gt;&gt;\n&gt;\n&gt; A Co=\r\nntent-Location header indicates content negotiation. =A0It is not a\n&gt; mecha=\r\nnism for piggybacking additional actions in one client request.\n&gt; If I have=\r\n a resource /image which serves image.gif or image.png\n&gt; depending on clien=\r\nt capability, and I PUT a new image.gif to /image,\n&gt; what a cache should ex=\r\npire is image.gif not /image.\n&gt;\n&gt; A Location header indicates a redirect. =\r\n=A0It instructs the client to re-\n&gt; try its request at a different URI. =A0=\r\nYou can&#39;t, by virtue of PUT or\n&gt; DELETE, remove that redirection -- the PUT=\r\n or DELETE request itself gets\n&gt; redirected to the proper location. =A0So t=\r\nhe invalidation must affect the\n&gt; resource identified by the Location heade=\r\nr, NOT the redirect itself.\n&gt;\n&gt;&gt;\n&gt;&gt; &quot;In order to prevent denial of service =\r\nattacks, an invalidation based\n&gt;&gt; on the URI in a Location or Content-Locat=\r\nion header MUST only be\n&gt;&gt; performed if the host part is the same as in the=\r\n Request-URI. &quot;\n&gt;&gt;\n&gt;\n&gt; This is just common sense, sending a DELETE request =\r\nto one host in\n&gt; hopes of deleting a resource on some other host would be a=\r\n real\n&gt; problem, due to the number of malicious deviant savages out there.\n=\r\n&gt;\n&gt;&gt;\n&gt;&gt; Then how about invalidating the caches after a &quot;batch DELETE&quot; as th=\r\nis\n&gt;&gt; &quot;off-the-wall&quot; approach?\n&gt;&gt; http://tech.groups.yahoo.com/group/rest-d=\r\niscuss/message/12280\n&gt;&gt;\n&gt;\n&gt; I&#39;ll come back and answer this part later, I&#39;ve=\r\n been getting this from\n&gt; Yahoo:\n&gt;\n&gt; &quot;The group rest-discuss is temporarily=\r\n unavailable&quot;\n&gt;\n&gt; Which comes as no surprise, since in recent days my posts=\r\n to this list\n&gt; have been taking hours to show up on the web or in my inbox=\r\n. =A0-1\n&gt;\n&gt;&gt;\n&gt;&gt; Suppose we have a URI that identifies a collection of resou=\r\nrces\n&gt;&gt;\n&gt;&gt; 1. the client sends DELETE URI to the server. The client knows w=\r\nhat\n&gt;&gt; the URI refers to.\n&gt;&gt;\n&gt;&gt; 2. the server reply with a 200 or 202 with =\r\na representation that will\n&gt;&gt; send several DELETE&#39;s to the server each of w=\r\nhich is for a member in\n&gt;&gt; the collection.\n&gt;&gt;\n&gt;\n&gt; Then your first DELETE ha=\r\ns the exact same semantics as GET, instead of\n&gt; meaning deletion. =A0There =\r\nis nothing wrong with a server sending an\n&gt; Xforms representation to the cl=\r\nient with a bunch of URIs the user can\n&gt; select for deletion, whereupon the=\r\n client will send a discrete DELETE\n&gt; request to each URI at the touch of a=\r\n button. =A0But, you must GET that\n&gt; form.\n&gt;\n&gt; -Eric\n&gt;\n\n\n\n-- \nhttp://dongno=\r\ntes.blogspot.com/\n\n"}}