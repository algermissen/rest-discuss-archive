{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":131511758,"authorName":"Roy T. Fielding","from":"&quot;Roy T. Fielding&quot; &lt;fielding@...&gt;","profile":"roy_fielding","replyTo":"SENDER","senderId":"L1G8G8P39tgv1tQ3lCtnUr4RJ9GME-qcrgkvPjGprhqyxcF_PrI6vNarkZFLdHNxz-Jj4UjxFncn1jqEmuQnWGWiT35e33NpkZaw-Thf","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Another REST vs. SOAP article","postDate":"1039140755","msgId":2994,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJGN0Y3MkM0LTA4QzAtMTFENy04RDY5LTAwMDM5Mzc1MzkzNkBhcGFjaGUub3JnPg==","inReplyToHeader":"PDNERUY5RjVELjEwMzA1MDhAZWlyY29tLm5ldD4="},"prevInTopic":2991,"nextInTopic":0,"prevInTime":2993,"nextInTime":2995,"topicId":2908,"numMessagesInTopic":50,"msgSnippet":"... Ick, terminology is being misused.  OOP is a programming structure paradigm dependent on such things as classes and inheritance.  There is no such thing as","rawEmail":"Return-Path: &lt;fielding@...&gt;\r\nReceived: (qmail 68753 invoked from network); 6 Dec 2002 02:53:07 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m11.grp.scd.yahoo.com with QMQP; 6 Dec 2002 02:53:07 -0000\r\nReceived: from unknown (HELO n17.grp.scd.yahoo.com) (66.218.66.72)\n  by mta1.grp.scd.yahoo.com with SMTP; 6 Dec 2002 02:53:06 -0000\r\nX-eGroups-Return: fielding@...\r\nReceived: from [66.218.67.165] by n17.grp.scd.yahoo.com with NNFMP; 06 Dec 2002 02:53:04 -0000\r\nX-Sender: fielding@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_2_3_0); 6 Dec 2002 02:30:29 -0000\r\nReceived: (qmail 34934 invoked from network); 6 Dec 2002 02:30:29 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m1.grp.scd.yahoo.com with QMQP; 6 Dec 2002 02:30:29 -0000\r\nReceived: from unknown (HELO dhcp-sna-67.wakasoft.com) (64.60.92.50)\n  by mta1.grp.scd.yahoo.com with SMTP; 6 Dec 2002 02:30:27 -0000\r\nReceived: from dhcp-sna-67.day.com (localhost.day.com [127.0.0.1] (may be forged))\n\tby localhost.wakasoft.com (8.12.4/8.12.4) with ESMTP id gB62D2Bf002887;\n\tThu, 5 Dec 2002 18:13:02 -0800 (PST)\r\nDate: Thu, 5 Dec 2002 18:12:35 -0800\r\nSubject: Re: [rest-discuss] Another REST vs. SOAP article\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMime-Version: 1.0 (Apple Message framework v482)\r\nCc: Paul Prescod &lt;paul@...&gt;, &lt;tlainevool@...&gt;,\n   rest-discuss@yahoogroups.com\r\nTo: =?ISO-8859-1?Q?Bill_de_h=D3ra?= &lt;dehora@...&gt;\r\nIn-Reply-To: &lt;3DEF9F5D.1030508@...&gt;\r\nMessage-Id: &lt;2F7F72C4-08C0-11D7-8D69-000393753936@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Apple Mail (2.482)\r\nFrom: &quot;Roy T. Fielding&quot; &lt;fielding@...&gt;\r\nX-Yahoo-Group-Post: member; u=131511758\r\nX-Yahoo-Profile: roy_fielding\r\nX-eGroups-Approved-By: gonga_thrash &lt;distobj@...&gt; via web; 06 Dec 2002 02:53:00 -0000\r\n\r\n&gt; I suspect that the problem you have with the services style is that\n&gt; it constitutes a collection of antipatterns for distributed OOP. If\n&gt; so, let&#39;s document what the risks of that style are.\n\nIck, terminology is being misused.  OOP is a programming structure\nparadigm dependent on such things as classes and inheritance.  There\nis no such thing as distributed OOP.  Object-based systems is what you\nget when you take OOD and distribute the objects.  It is called\nobject-based (instead of object-oriented) because we are talking\nabout architecture, rather than source code structure, and architecture\ndoesn&#39;t have classes and inheritance.\n\n&gt; Communicating\n&gt; to the OOP world through patterns/antipatterns is a great way to\n&gt; make the case for the REST style - with the added bonus the claims\n&gt; for REST will seem less grand.\n\nThat is difficult to do.  The OOPSLA community took the architectural\nconcept of patterns and expanded it into anything with a recipe for\nimplementation.  I use the original notion of patterns, which came\nfrom Alexander watching human behavior as people live/work/move within\na space.  The closest analogy in computing is how data moves within an\narchitecture.  In other words, I do explain REST as a pattern, but\nwhat people call patterns now is tuned more for programming idioms\nrather than understanding system behavior.\n\nArchitectural styles and architectural patterns are fairly consistent,\nbut as you noted the purpose of REST is to force the developer into a\nless object-specific architecture, which is contrary to most of the\nOOD patterns.  Whether that is good or bad depends on what is\nbeing implemented.\n\n\nCheers,\n\nRoy T. Fielding, Chief Scientist, Day Software\n                  2 Corporate Plaza, Suite 150\n                  Newport Beach, CA 92660-7929   fax:+1.949.644.5064\n                  (roy.fielding@...) &lt;http://www.day.com/&gt;\n\n                  Co-founder, The Apache Software Foundation\n                  (fielding@...)  &lt;http://www.apache.org/&gt;\n\n\n\n"}}