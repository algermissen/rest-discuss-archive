{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":267214845,"authorName":"Noah Campbell","from":"Noah Campbell &lt;noahcampbell@...&gt;","profile":"noahsingleton","replyTo":"SENDER","senderId":"XcIAu-jVLI_P564ziukU4Uijm62QkIlw1W94gi6FqRiaI2behjmSkRIg_K1j9sTWljVaM69T-M43hgVtRCm5Ba9-N-lswB3v68FQ9DQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing","postDate":"1261423164","msgId":14306,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRlNzBiMzlkMDkxMjIxMTExOXMxODhjYThkNHM1YmU0ZGFkMGI3MGUxNTA3QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDI2REVFQUE1LTUyQjItNEM0MS05RDQwLTBENzE2RDAxRjA3NEBtYWMuY29tPg==","referencesHeader":"PGhnbnBmaCtwcGZrQGVHcm91cHMuY29tPgkgPDI2REVFQUE1LTUyQjItNEM0MS05RDQwLTBENzE2RDAxRjA3NEBtYWMuY29tPg=="},"prevInTopic":14305,"nextInTopic":14310,"prevInTime":14305,"nextInTime":14307,"topicId":14156,"numMessagesInTopic":134,"msgSnippet":"AtomPub for example enables the client *implementor* to assume that a GET on a collection will return an Atom feed document. To your prior point, something","rawEmail":"Return-Path: &lt;noahcampbell@...&gt;\r\nX-Sender: noahcampbell@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34225 invoked from network); 21 Dec 2009 19:19:25 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 21 Dec 2009 19:19:25 -0000\r\nX-Received: from unknown (HELO mail-px0-f195.google.com) (209.85.216.195)\n  by mta1.grp.sp2.yahoo.com with SMTP; 21 Dec 2009 19:19:25 -0000\r\nX-Received: by pxi33 with SMTP id 33so3661921pxi.10\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 21 Dec 2009 11:19:25 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.142.121.30 with SMTP id t30mr5005526wfc.283.1261423165157; \n\tMon, 21 Dec 2009 11:19:25 -0800 (PST)\r\nIn-Reply-To: &lt;26DEEAA5-52B2-4C41-9D40-0D716D01F074@...&gt;\r\nReferences: &lt;hgnpfh+ppfk@...&gt;\n\t &lt;26DEEAA5-52B2-4C41-9D40-0D716D01F074@...&gt;\r\nDate: Mon, 21 Dec 2009 11:19:24 -0800\r\nMessage-ID: &lt;de70b39d0912211119s188ca8d4s5be4dad0b70e1507@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: Jorn Wildt &lt;jw@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=001636e904c6abb221047b41f773\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Noah Campbell &lt;noahcampbell@...&gt;\r\nSubject: Re: [rest-discuss] Re: RESTful M2M Systems and Resource Typing\r\nX-Yahoo-Group-Post: member; u=267214845; y=X2USwVcR5_9jULYS0G_FDr_dV3RkHa7NazDZhuWu8xyTMQKjxAn_-A\r\nX-Yahoo-Profile: noahsingleton\r\n\r\n\r\n--001636e904c6abb221047b41f773\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&quot;AtomPub for example enables the client *implementor* to assume that a GET\n=\r\non a collection will return an Atom feed document.&quot;\n\nTo your prior point, s=\r\nomething is broken, but what?  Is it the architectural\nstyle (by asking it =\r\non this mailing list it may be that you think it is)?\n Is it the transport =\r\nHTTP?  Is it the specification?  Is it the implementor\nof the server or the=\r\n client?  Is it something else?\n\nYou focus on the assumption being negative=\r\n and rightly so, but lets be\nformal about what an assumption is.  You&#39;ve al=\r\nluded to an assumption not met\nas negative.  If I had to translate this int=\r\no code it would look like this:\n\nfread (buffer, 1, lSize, pFile)\n\n\nThere is=\r\n an assumption here given all the variables are initialized\ncorrectly.  Do =\r\nyou see it?\n\nThe return value is not checked.  The read may not have read a=\r\nll the data in\nthe file in this particular call.  Who is the guilty party? =\r\n Is it the\narchitecture, POSIX?  Is it the specification,\nhttp://www.cplusp=\r\nlus.com/reference/clibrary/cstdio/fread/? Is it the\nimplementation, GNU? Is=\r\n it the implementor?  I&#39;d argue it&#39;s the implementor.\n C has a long establi=\r\nshed history of using return values to indicate success\n(as well as return =\r\nvalues...but errno provides a (kludgy?) workaround).\n\nI would urge an imple=\r\nmenter to understand the architecture style, the\nspecification, the impleme=\r\nntation and focus very hard on making sure\nassumptions like the above are n=\r\not scattered through out the code.  Since\nREST is about two remote systems =\r\ncommunicating, I&#39;d argue that any client\nmust validate any assumption befor=\r\ne proceeding, including checking the error\ncode.  If not, the client will b=\r\ne be brittle, prone to error, and cost more\nin ongoing maintenance.  Good, =\r\nrobust applications assume nothing.\n\nLet&#39;s assume for a moment the AtomPub =\r\nspec represents the typical spec for a\nservice.  It assumes RESTful archite=\r\nctural style using the HTTP transport.\n To your point, the service must beh=\r\nave has specified for any goal to be\nobtained.   Aspects of the http transp=\r\nort &quot;leak&quot; into the interaction even\nthose it has not been specified.  The =\r\nspec doesn&#39;t call out all the\ndifferent response codes and how to handle th=\r\nem, it relies on those familiar\nwith the HTTP transport to deal with those =\r\ngracefully.  Case in point, if\nyou do:\n\nGET /\nAccept: application/atomsvc+x=\r\nml\n\nand get a\n\n307: Moved Temporarily\nLocation: /svc.atom\n\nor\n\n305: Use Pro=\r\nxy\nLocation: /proxy/svc.atom\n\nor\n\n401: Unauthorized\nwww-authenticate: basic=\r\n\n\nIs this an error?\n\nRoy thesis doesn&#39;t explicitly say yes or no.  However,=\r\n the argument for a\nuniform interface is that the intermediary can particip=\r\nate without affecting\nthe remote call.  I&#39;ll extrapolate a little in that a=\r\n uniform interface\nprovides a common behavior that permeates all levels of =\r\nan architecture,\nincluding the implementation.  The testers should be not b=\r\ne surprised to see\nthe 3 response outline above and should be able to accom=\r\nmodate\nappropriately.\n\nHopefully this response helps move the discussion fo=\r\nrward :)\n\n-Noah\n\nOn Mon, Dec 21, 2009 at 4:35 AM, Jan Algermissen &lt;algermis=\r\nsen1971@...&gt;wrote:\n\n&gt;\n&gt; On Dec 21, 2009, at 1:25 PM, Jorn Wildt wrote:\n=\r\n&gt;\n&gt; &gt; Oh, lets backtrack a bit. You said earlier on:\n&gt; &gt;\n&gt; &gt;&gt; In the enterp=\r\nrise people want to develop clients and services in\n&gt; &gt;&gt; parallel, shich ru=\r\nles out client design by inspecting the runtime\n&gt; &gt;&gt; behavior of a service.=\r\n\n&gt; &gt;\n&gt; &gt; Then I said: you need not expect at runtime, you can have a mock. =\r\nTo\n&gt; &gt; this you answered: no, you build clients on specs.\n&gt; &gt;\n&gt; &gt; What I wa=\r\ns trying to say was: if you build clients on specs and RFC\n&gt; &gt; 5023 (applic=\r\nation/atomsrv+xml) is a spec, then what is keeping you\n&gt; &gt; from building an=\r\ny kind of REST client on similar specs for other\n&gt; &gt; media types? If both s=\r\nerver and client agrees on the media type spec\n&gt; &gt; then both can be built i=\r\nndividually and simultaneously.\n&gt;\n&gt;\n&gt; No, that is all fine and I agree. I a=\r\nm questioning the RESTfulness of\n&gt; specs that allow the clients to make ass=\r\numptions about the hypermedia\n&gt; it will receive at some point in the intera=\r\nction. AtomPub for example\n&gt; enables the client *implementor* to assume tha=\r\nt a GET on a collection\n&gt; will return an Atom feed document. This is equiva=\r\nlent to making an\n&gt; assumption about the application state to be in after t=\r\nhe GET to the\n&gt; collection.\n&gt;\n&gt; And I am trying to say that M2M clients (be=\r\nsides passibe, server\n&gt; driven crawlers) can only be built when such contra=\r\ncts are in place.\n&gt;\n&gt; Jan\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; /J=C3=B8rn\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ----------=\r\n--------------------------\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt; ----=\r\n----------------------------------\n&gt; Jan Algermissen\n&gt;\n&gt; Mail: algermissen@=\r\nacm.org\n&gt; Blog: http://algermissen.blogspot.com/\n&gt; Home: http://www.jalgerm=\r\nissen.com\n&gt; --------------------------------------\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------=\r\n------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\r\n--001636e904c6abb221047b41f773\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&quot;AtomPub for example=C2=A0enables the client *implementor* to assume t=\r\nhat a GET on a collection=C2=A0will return an Atom feed document.&quot;&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To your prior point, something is broken, but what? =C2=A0I=\r\ns it the architectural style (by asking it on this mailing list it may be t=\r\nhat you think it is)? =C2=A0Is it the transport HTTP? =C2=A0Is it the speci=\r\nfication? =C2=A0Is it the implementor of the server or the client? =C2=A0Is=\r\n it something else?&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You focus on the assumption b=\r\neing negative and rightly so, but lets be formal about what an assumption i=\r\ns. =C2=A0You&#39;ve alluded to an assumption not met as negative. =C2=A0If =\r\nI had to translate this into code it would look like this:&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: verdana, a=\r\nrial, helvetica, sans-serif; font-size: 12px; -webkit-border-horizontal-spa=\r\ncing: 2px; -webkit-border-vertical-spacing: 2px; &quot;&gt;&lt;pre style=3D&quot;margin-top=\r\n: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top=\r\n: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; &quot;&gt;\n&lt;code=\r\n&gt;fread (buffer, 1, lSize, pFile)&lt;/code&gt;&lt;/pre&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;d=\r\niv&gt;There is an assumption here=C2=A0given all the variables are initialized=\r\n correctly. =C2=A0Do you see it? =C2=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The return=\r\n value is not checked. =C2=A0The read may not have read all the data in the=\r\n file in this particular call. =C2=A0Who is the guilty party? =C2=A0Is it t=\r\nhe architecture, POSIX? =C2=A0Is it the specification,=C2=A0&lt;a href=3D&quot;http=\r\n://www.cplusplus.com/reference/clibrary/cstdio/fread/&quot;&gt;http://www.cplusplus=\r\n.com/reference/clibrary/cstdio/fread/&lt;/a&gt;?=C2=A0Is it the implementation, G=\r\nNU?=C2=A0Is it the implementor? =C2=A0I&#39;d argue it&#39;s the implemento=\r\nr. =C2=A0C has a long established history of using return values to indicat=\r\ne success (as well as return values...but errno provides a (kludgy?) workar=\r\nound).&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I would urge an implementer to understand =\r\nthe architecture style, the specification, the implementation and focus ver=\r\ny hard on making sure assumptions like the above are not scattered through =\r\nout the code. =C2=A0Since REST is about two remote systems communicating,=\r\n=C2=A0I&#39;d argue that any client must validate any assumption before pro=\r\nceeding, including checking the error code. =C2=A0If not, the client will b=\r\ne be brittle, prone to error, and cost more in ongoing maintenance. =C2=A0G=\r\nood, robust applications assume nothing.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Let&#39;=\r\ns assume for a moment the AtomPub spec represents the typical spec for a se=\r\nrvice. =C2=A0It assumes RESTful architectural style using the HTTP transpor=\r\nt. =C2=A0To your point, the service must behave has specified for any goal =\r\nto be obtained. =C2=A0 Aspects of the http transport &quot;leak&quot; into =\r\nthe interaction even those it has not been specified. =C2=A0The spec doesn&=\r\n#39;t call out all the different response codes and how to handle them, it =\r\nrelies on those familiar with the HTTP transport to deal with those gracefu=\r\nlly. =C2=A0Case in point,=C2=A0if you do:&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;GET /&lt;/=\r\ndiv&gt;&lt;div&gt;Accept: application/atomsvc+xml&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;and get a=\r\n&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;307: Moved Temporarily&lt;/div&gt;&lt;div&gt;Location: /svc.a=\r\ntom&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;or&lt;/div&gt;&lt;div&gt;&lt;br&gt;\n&lt;/div&gt;&lt;div&gt;305: Use Proxy&lt;/d=\r\niv&gt;&lt;div&gt;Location: /proxy/svc.atom&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;or=C2=A0&lt;/div&gt;&lt;d=\r\niv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;401: Unauthorized&lt;/div&gt;&lt;div&gt;www-authenticate: basic&lt;/div&gt;=\r\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Is this an error?&lt;/div&gt;&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;Roy thesis =\r\ndoesn&#39;t explicitly say yes or no. =C2=A0However, the argument for a uni=\r\nform interface is that the intermediary can participate without affecting t=\r\nhe remote call. =C2=A0I&#39;ll extrapolate a little in that a uniform inter=\r\nface provides a common behavior that permeates all levels of an architectur=\r\ne, including the implementation. =C2=A0The testers should be not be surpris=\r\ned to see the 3 response outline above and should be able to accommodate ap=\r\npropriately. =C2=A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hopefully this response helps=\r\n move the discussion forward :)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-Noah&lt;/div&gt;&lt;div&gt;&lt;b=\r\nr&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Mon, Dec 21, 2009 at 4:35 AM, Jan Algermiss=\r\nen &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:algermissen1971@...&quot;&gt;algermi=\r\nssen1971@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;=\r\n&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\nOn Dec 21, 2009, at 1:25 PM, Jorn Wildt wrote:&lt;br&gt;\n&lt;=\r\nbr&gt;\n&gt; Oh, lets backtrack a bit. You said earlier on:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&g=\r\nt; In the enterprise people want to develop clients and services in&lt;br&gt;\n&gt=\r\n;&gt; parallel, shich rules out client design by inspecting the runtime&lt;br&gt;=\r\n\n&gt;&gt; behavior of a service.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Then I said: you need no=\r\nt expect at runtime, you can have a mock. To&lt;br&gt;\n&gt; this you answered: no=\r\n, you build clients on specs.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; What I was trying to say wa=\r\ns: if you build clients on specs and RFC&lt;br&gt;\n&gt; 5023 (application/atomsrv=\r\n+xml) is a spec, then what is keeping you&lt;br&gt;\n&gt; from building any kind o=\r\nf REST client on similar specs for other&lt;br&gt;\n&gt; media types? If both serv=\r\ner and client agrees on the media type spec&lt;br&gt;\n&gt; then both can be built=\r\n individually and simultaneously.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;No, that is all fine =\r\nand I agree. I am questioning the RESTfulness of&lt;br&gt;\nspecs that allow the c=\r\nlients to make assumptions about the hypermedia&lt;br&gt;\nit will receive at some=\r\n point in the interaction. AtomPub for example&lt;br&gt;\nenables the client *impl=\r\nementor* to assume that a GET on a collection&lt;br&gt;\nwill return an Atom feed =\r\ndocument. This is equivalent to making an&lt;br&gt;\nassumption about the applicat=\r\nion state to be in after the GET to the&lt;br&gt;\ncollection.&lt;br&gt;\n&lt;br&gt;\nAnd I am t=\r\nrying to say that M2M clients (besides passibe, server&lt;br&gt;\ndriven crawlers)=\r\n can only be built when such contracts are in place.&lt;br&gt;\n&lt;div class=3D&quot;im&quot;&gt;=\r\n&lt;br&gt;\nJan&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; /J=C3=B8rn&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;=\r\nbr&gt;\n&gt; ------------------------------------&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Yahoo! Grou=\r\nps Links&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n------------------------------=\r\n--------&lt;br&gt;\nJan Algermissen&lt;br&gt;\n&lt;br&gt;\nMail: &lt;a href=3D&quot;mailto:algermissen@a=\r\ncm.org&quot;&gt;algermissen@...&lt;/a&gt;&lt;br&gt;\nBlog: &lt;a href=3D&quot;http://algermissen.blo=\r\ngspot.com/&quot; target=3D&quot;_blank&quot;&gt;http://algermissen.blogspot.com/&lt;/a&gt;&lt;br&gt;\nHome=\r\n: &lt;a href=3D&quot;http://www.jalgermissen.com&quot; target=3D&quot;_blank&quot;&gt;http://www.jalg=\r\nermissen.com&lt;/a&gt;&lt;br&gt;\n--------------------------------------&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;=\r\nbr&gt;\n&lt;br&gt;\n&lt;br&gt;\n------------------------------------&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;div&gt;&lt;div=\r\n&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;Yahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit yo=\r\nur group on the web, go to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;http://groups.yaho=\r\no.com/group/rest-discuss/&quot; target=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/group/=\r\nrest-discuss/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your email settings:&lt;br&gt;\n =C2=A0 =C2=\r\n=A0Individual Email | Traditional&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To change settings onl=\r\nine go to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;http://groups.yahoo.com/group/rest-=\r\ndiscuss/join&quot; target=3D&quot;_blank&quot;&gt;http://groups.yahoo.com/group/rest-discuss/=\r\njoin&lt;/a&gt;&lt;br&gt;\n =C2=A0 =C2=A0(Yahoo! ID required)&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To chang=\r\ne settings via email:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;mailto:rest-discuss-dige=\r\nst@yahoogroups.com&quot;&gt;rest-discuss-digest@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n =C2=A0 =C2=\r\n=A0&lt;a href=3D&quot;mailto:rest-discuss-fullfeatured@yahoogroups.com&quot;&gt;rest-discus=\r\ns-fullfeatured@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from t=\r\nhis group, send an email to:&lt;br&gt;\n =C2=A0 =C2=A0&lt;a href=3D&quot;mailto:rest-discu=\r\nss-unsubscribe@yahoogroups.com&quot;&gt;rest-discuss-unsubscribe@yahoogroups.com&lt;/a=\r\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;br&gt;\n =C2=A0 =\r\n=C2=A0&lt;a href=3D&quot;http://docs.yahoo.com/info/terms/&quot; target=3D&quot;_blank&quot;&gt;http:=\r\n//docs.yahoo.com/info/terms/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;b=\r\nr&gt;&lt;/div&gt;\n\r\n--001636e904c6abb221047b41f773--\r\n\n"}}