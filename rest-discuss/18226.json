{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"Jorn Wildt","from":"&quot;Jorn Wildt&quot; &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"WrecUyXPSt2KiayOk4Jxon7sD8zuPDoil6ZLrnQA7Et7nY4kZs2bfmdMmY3I-hs8H9oBXkTuWy9gJabjyyAAQrRxNzV4eiye","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: The &quot;new media types are evil&quot; meme","postDate":"1325150617","msgId":18226,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpkaGJpcCtoZ2szQGVHcm91cHMuY29tPg==","inReplyToHeader":"PENBTmdrbUxEU2VRQVFRUnk3RlNnTWJqTFNhUzA1Y0FjQzIreDFhMXF3UEJtNUR5K0dWZ0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18225,"nextInTopic":18227,"prevInTime":18225,"nextInTime":18227,"topicId":18183,"numMessagesInTopic":245,"msgSnippet":"... Because (quoting http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven) REST is software design on the scale of decades and: What REST","rawEmail":"Return-Path: &lt;jw@...&gt;\r\nX-Sender: jw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 80339 invoked from network); 29 Dec 2011 09:23:39 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 29 Dec 2011 09:23:39 -0000\r\nX-Received: from unknown (HELO ng19-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.168)\n  by mta3.grp.sp2.yahoo.com with SMTP; 29 Dec 2011 09:23:39 -0000\r\nX-Received: from [98.139.164.125] by ng19.bullet.mail.bf1.yahoo.com with NNFMP; 29 Dec 2011 09:23:38 -0000\r\nX-Received: from [69.147.65.150] by tg6.bullet.mail.bf1.yahoo.com with NNFMP; 29 Dec 2011 09:23:38 -0000\r\nX-Received: from [98.137.34.32] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 29 Dec 2011 09:23:38 -0000\r\nDate: Thu, 29 Dec 2011 09:23:37 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;jdhbip+hgk3@...&gt;\r\nIn-Reply-To: &lt;CANgkmLDSeQAQQRy7FSgMbjLSaS05cAcC2+x1a1qwPBm5Dy+GVg@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jorn Wildt&quot; &lt;jw@...&gt;\r\nSubject: Re: The &quot;new media types are evil&quot; meme\r\nX-Yahoo-Group-Post: member; u=242972596; y=-PWz84ImD2j5oiuKaR2TSxj9R7HGRryVdWLqsMk4ZbURhybVTGW_fee7RX8\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\n&gt; &gt; If you were doing procurement, some application/procurement media type\n=\r\n&gt; &gt; would do. There can be &lt;offer&gt;,&lt;order&gt;,&lt;invoice&gt;, &lt;creditNote&gt;,... in t=\r\nhat\n&gt; &gt; media type without any need for further hints than Content-Type:\n&gt; =\r\n&gt; application/procurement.\n&gt; &gt;\n&gt; &gt; Exactly the problem ... the client *stil=\r\nl* needs to understand what\n&gt; &lt;offer&gt;, &lt;order&gt;, &lt;invoice&gt;, and &lt;creditNote&gt;=\r\n *mean*.  \n\n&gt; Why is it so cool to\n&gt; bury this fact in two layers of negoti=\r\nation (say &quot;text/xhtml&quot; plus a\n&gt; particular microformat) than one?\n\nBecause=\r\n (quoting http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-dr=\r\niven) &quot;REST is software design on the scale of decades&quot; and:\n\n&quot;What REST do=\r\nes is concentrate that need for prior knowledge into readily standardizable=\r\n forms [...] \n\nIt has value because it is far easier to standardize represe=\r\nntation and relation types than it is to standardize objects and object-spe=\r\ncific interfaces. In other words, there are fewer things to learn and they =\r\ncan be recombined in unanticipated ways while remaining understandable to t=\r\nhe client.&quot;\n\nI am quite sure that the description of offers, quotes and so =\r\non varies with the market/geographical-region/politics/time and other facto=\r\nrs, whereas XML and JSON won&#39;t. So XML/JSON are good candidates for media t=\r\nypes whereas offers/quotes/orders are not. Unfortunately JSON/XML carry no =\r\nhypermedia semantics so XHTML and RDF[a] are probably better examples.\n\nBut=\r\n having only these &quot;stupid&quot;, non-specific, formats leaves us with a need fo=\r\nr specifying how to interpret them in a domain specific manner - what they =\r\n*mean*. This is something that must be added on top of REST.\n\nThus we get &quot;=\r\ntwo layers of negotiation&quot;: one at the level of REST (the format of the dat=\r\na - XML/JSON/RDF/XHTML/CSV/etc.) and one at a level higher up (the meaning =\r\nof the data - the ontology, or semantical interpretation of the data).\n\nAt =\r\nthe lower REST level it becomes a long lived application where we can expec=\r\nt the formats to be readable over the decades. At the upper level we need t=\r\no upgrade our agents over time as the problem domain evolves.\n\n(If you have=\r\nn&#39;t noticed it then I am moving in the direction of the do-not-mint-new-med=\r\nia-types camp).\n\n/J=F8rn\n\n--- In rest-discuss@yahoogroups.com, Craig McClan=\r\nahan &lt;craigmcc@...&gt; wrote:\n&gt;\n&gt; On Thu, Dec 29, 2011 at 12:11 AM, Jan Algerm=\r\nissen &lt;\n&gt; jan.algermissen@...&gt; wrote:\n&gt; \n&gt; &gt;\n&gt; &gt; On Dec 29, 2011, at 8:19 A=\r\nM, Jan Algermissen wrote:\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; On Dec 29, 2011, at 1:21 AM, Paul=\r\n Cohen wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; or else a new HTTP header\n&gt; &gt; &gt; &gt; &quot;Concept-Type=\r\n&quot; could be introduced that indicates the\n&gt; &gt; &gt; &gt; conceptual/business data t=\r\nype of the entity body, eg &quot;Concept-Type:\n&gt; &gt; &gt; &gt; purchase-order&quot;. This wou=\r\nld at least give HTTP clients a *hint* of how\n&gt; &gt; &gt; &gt; to interpret the enti=\r\nty body\n&gt; &gt; &gt;\n&gt; &gt; &gt; That &#39;hint&#39; already exists and is called &quot;Content-Type&quot;=\r\n.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Consider, for example, application/atom+xml. This media type =\r\nhas two root\n&gt; &gt; level document types, feeds and entries. There is no need =\r\nto distinguish\n&gt; &gt; between the two at the Content-Type header level because=\r\n the user agent\n&gt; &gt; simply reacts on what it receives.\n&gt; &gt;\n&gt; &gt; So, please e=\r\nxplain for me again why application/atom+xml is better than\n&gt; application/p=\r\nrocurement for this?\n&gt; \n&gt; Yes, I can understand (at a syntactic level) that=\r\n I might receive a &quot;link&quot;\n&gt; element with a &quot;rel&quot; value of &quot;checkout&quot; and a =\r\ncorresponding URL.  But what\n&gt; the heck does a &quot;rel&quot; value of &quot;checkout&quot; *m=\r\nean* in terms of what the\n&gt; client app should do next?\n&gt; \n&gt; Not negotiating=\r\n content types at the HTTP media type level means I just\n&gt; have to negotiat=\r\ne them at some lower level (after I understand the syntax).\n&gt; That&#39;s not an=\r\n improvement in interop ... that&#39;s just sweeping an\n&gt; inconvenient problem =\r\nunder the carpet.\n&gt; \n&gt; \n&gt; &gt; If you were doing procurement, some application=\r\n/procurement media type\n&gt; &gt; would do. There can be &lt;offer&gt;,&lt;order&gt;,&lt;invoice=\r\n&gt;, &lt;creditNote&gt;,... in that\n&gt; &gt; media type without any need for further hin=\r\nts than Content-Type:\n&gt; &gt; application/procurement.\n&gt; &gt;\n&gt; &gt; Exactly the prob=\r\nlem ... the client *still* needs to understand what\n&gt; &lt;offer&gt;, &lt;order&gt;, &lt;in=\r\nvoice&gt;, and &lt;creditNote&gt; *mean*.  Why is it so cool to\n&gt; bury this fact in =\r\ntwo layers of negotiation (say &quot;text/xhtml&quot; plus a\n&gt; particular microformat=\r\n) than one?\n&gt; \n&gt; \n&gt; &gt; Jan\n&gt; &gt;\n&gt; \n&gt; Craig\n&gt;\n\n\n\n"}}