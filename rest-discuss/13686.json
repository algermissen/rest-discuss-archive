{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"uBfw4DUpx9PjZLurO9TB-e2MZf8XcmEiK9UFtVYbrUn27N18jNTOxVI-ZqK5cI0m6-eI0tpa29GPiBUIhfn_dsnIMmEZkwPyowpBl0-ZY1Bqpj-KUFC4SIHj","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Credit Cards, Transactions, and REST","postDate":"1254786825","msgId":13686,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhhZTB1OStiaGgxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDRBQ0ExODI4LjMwMTA2MDFAcmVkaGF0LmNvbT4="},"prevInTopic":13683,"nextInTopic":13688,"prevInTime":13685,"nextInTime":13687,"topicId":13472,"numMessagesInTopic":21,"msgSnippet":"Hello Bill. Bill Burke wrote: William Martinez Pomares wrote: Hello Bill. I would not tell you you are breaking REST constrains, but I would like to check on","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 64795 invoked from network); 5 Oct 2009 23:54:11 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m5.grp.sp2.yahoo.com with QMQP; 5 Oct 2009 23:54:11 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta1.grp.sp2.yahoo.com with SMTP; 5 Oct 2009 23:54:11 -0000\r\nX-Received: from [69.147.65.150] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 05 Oct 2009 23:53:45 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 05 Oct 2009 23:53:45 -0000\r\nDate: Mon, 05 Oct 2009 23:53:45 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hae0u9+bhh1@...&gt;\r\nIn-Reply-To: &lt;4ACA1828.3010601@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;9-0588389230-7407587827=:9&quot;\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Credit Cards, Transactions, and REST\r\nX-Yahoo-Group-Post: member; u=124198377; y=4JDGVA7z1-F-fabDK_eNrKit5vaGyyksiHlk_4wwtHc7_Ckd\r\nX-Yahoo-Profile: willmarpo\r\n\r\n\r\n--9-0588389230-7407587827=:9\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello Bill.\n\nBill Burke wrote:\nWilliam Martinez Pomares wrote:\nHello Bill.\n=\r\n\nI would not tell you you are breaking REST constrains, but I would like \nt=\r\no check on some notes.\n(...)\nSo far, so good. Now, my question would be: sh=\r\nould I need to do all that\nto actually reserve a package using REST? Well, =\r\nto imagine how would I \ndo it, I&#39;d actually follow an online reservation wo=\r\nrkflow and see what \nhappens:\n\n\nSide discussion but, &quot;workflow&quot; is an inter=\r\nesting idea here.  You see, \nIMO, all a Transaction Manager is, is a specif=\r\nic re-ocurring workflow \npattern.\n\nI agree with you.\na. I enter and search =\r\nfor a flight. System returns a list of flights and\nI select one. At this ti=\r\nme a draft reservation is created with my flight\nin it. (Think a PUT of the=\r\n empty reservation followed by a POST of the \nflight).\nb. Then the system o=\r\nffers me to add a hotel reservation, and from the \nprovided list I select o=\r\nne too. That is added to my draft reservation \n(another POST).\nc. Finally, =\r\nI add my credit card information and post a confirmation \n(Another POST).\n\n=\r\nThis last action is served by server number 5 of 10 currently serving. \nTha=\r\nt server 5 needs to complete the POST, and if unable, it will return \nan er=\r\nror to the client. Well, that server uses the draft reservation \nresource i=\r\nnformation to call a transaction manager to commit all \nchanges. If it fail=\r\ns, server 5 returns the error. That is totally opaque\nto the client, which =\r\nonly confirms and receives a yes or no to that \nrequest. Depending on that =\r\nresponse, the client retries, updates the \nselection of flights or hotel an=\r\nd confirms again, or even desists and \neliminates the reservation. Simple, =\r\nha.\n\n\nCorrect me if I&#39;m wrong, but I think you&#39;re confusing the actors here=\r\n. \nThe actors being Customer and Travel Agent.  It is the Travel Agent that=\r\n\nhas to coordinate between different services, not the Customer.  So yes,\nt=\r\nhe Customer will be isolated from transactional semantics because it is\nonl=\r\ny dealing with one actor, the Travel Agent.  The Travel Agent on the \nother=\r\n hand has to juggle a set of decoupled systems.\n\nActually, I&#39;m not confusin=\r\ng them: I&#39;m simplifying the solution to just\none actor, the client, since t=\r\nhe actual application IS the travel agent.\nSee?\n\nLet&#39;s think on layers. Fir=\r\nst, the services, let&#39;s agree they are not\ndata-like things, but as you say=\r\n they are two different services offered\nby two different providers.\n\nIn th=\r\ne middle, we have the travel agent, which knows how to talk to each\nindivid=\r\nual provider to get the best from it.\n\nIn the lower part, we have the clien=\r\nt, which is agnostic of what is\nhappening. He just wants to fly and sleep.\n=\r\n\nSo, if you want one single client to follow the workflow presented\nabove, =\r\nwe agree we need more than one interaction, between the client an\na travel =\r\nagent. You can create a session, from client to agent, and then\nyou have on=\r\ne channel there: two actors, talking to each other over\nseveral interaction=\r\ns. Under that assumption, you have a client server,\nbut you will need one a=\r\ngent per client. Say you want it RESTfull so you\ncan scale. Then, you can h=\r\nave several agents and thousands of clients.\nIn this case, each interaction=\r\n a client does may be answered by a\ndifferent agent and should be a transac=\r\ntion by itself! See?\n\nThus, agents are servers, and say a reservation is th=\r\ne resource being\ncreated.\n\nLet&#39;s go next level. Agent talks to providers. E=\r\nach agent, at each\ninteraction, talks to providers. Same thing, each provid=\r\ner may be a\nsingle server, or a RESTFull thing in the cloud. The agent is t=\r\nhen in\ncharge of committing to both providers in a single request from its\n=\r\nclient. Here, the providers are not part of the agent&#39;s application,\nthey a=\r\nre third party. The two phase should be created somehow. IF the\nproviders a=\r\nre the same application as the agent, then there may be no\nneed to complica=\r\nte more things, and do the two phase commits directly to\ndatabases, without=\r\n building complex resources and multiple interactions.\n\nThe difference in t=\r\nhis process is that client is freed from knowing the \ntransaction is happen=\r\ning. Resources are just that, no databases nor \ntables that need transactio=\r\nns and the client doesn&#39;t have to choose the \nuse of single or two phase co=\r\nmmits. You can scale since you can change \nthe number of servers or transac=\r\ntion managers without touching the \nclient. AND, each client interaction le=\r\naves the system in a stable \nstate. Actually, this can be RESTFull too!.\n\nS=\r\no, if we can hide the complexity of the transaction, why do we need to \nexp=\r\nose that complexity to the client? I may do it if that brings some \nbenefit=\r\n. My question will then be, which benefits will I found from one \nimplement=\r\nation to the other one, or why one of them is not suitable for \nsome partic=\r\nular business case.\n\n\nAll I know is somebody is going to have to do coordin=\r\nation work in a \nsystem that has more than two actors:  client and server. =\r\n My question \nis how can these coordination requirements be improved by RES=\r\nTful \narchitectural principles.\n\nAnswer is I think not in much. The princip=\r\nles are not for coordination,\nbut for simplicity of escalation, visibility,=\r\n etc. Two phase commit is\nfor named actors, not moving targets, and REST is=\r\n about anonymous actors\nplaying against named resources. First confusion is=\r\n to think resources\nare data, and thus need transactions. Second, trend is =\r\nto expose too\nmuch detail, thus coupling and getting inflexible to changes.=\r\n That much\ndetail transfer business logic knowledge requirements to clients=\r\n, which\nmay not be good, because any change will require adjusting all clie=\r\nnts!\n(Unless it is RESTfull, I know).\n\nStill, your questions is very valid:=\r\n Is REST a good thing for systems\nthat need coordination between actors? (N=\r\not necessarily transactions).\nI&#39;ll leave it open for other commenters!\n\nChe=\r\ners!\n\nWilliam Martinez Pomares\n\r\n--9-0588389230-7407587827=:9\r\nContent-Type: text/html; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello Bill.&lt;br&gt;\n&lt;br&gt;\nBill Burke wrote:&lt;br&gt;\n&lt;blockquote cite=3D&quot;mid:4ACA1828=\r\n.3010601@...&quot; type=3D&quot;cite&quot;&gt;William Martinez Pomares wrote:\n  &lt;br&gt;\n =\r\n &lt;blockquote type=3D&quot;cite&quot;&gt;Hello Bill.\n&lt;br&gt;\n&lt;br&gt;I would not tell you you ar=\r\ne breaking REST constrains, but I would like \nto check on some notes.\n&lt;br&gt;\n=\r\n(...)&lt;br&gt;So far, so good. Now, my question would be: should I need to do al=\r\nl that \nto actually reserve a package using REST? Well, to imagine how woul=\r\nd I \ndo it, I&#39;d actually follow an online reservation workflow and see what=\r\n \nhappens:\n&lt;br&gt;&lt;/blockquote&gt;\n\n  &lt;br&gt;\n\n  &lt;br&gt;\nSide discussion but, &quot;workflow=\r\n&quot; is an interesting idea here.&nbsp; You see, \nIMO, all a Transaction Manag=\r\ner is, is a specific re-ocurring workflow \npattern.\n  &lt;br&gt;\n\n  &lt;br&gt;\n&lt;/blockq=\r\nuote&gt;\nI agree with you.&lt;br&gt;\n&lt;blockquote cite=3D&quot;mid:4ACA1828.3010601@redhat=\r\n.com&quot; type=3D&quot;cite&quot;&gt;\n  &lt;blockquote type=3D&quot;cite&quot;&gt;a. I enter and search for =\r\na flight. System returns a list of flights and \nI select one. At this time =\r\na draft reservation is created with my flight \nin it. (Think a PUT of the e=\r\nmpty reservation followed by a POST of the \nflight).\n&lt;br&gt;b. Then the system=\r\n offers me to add a hotel reservation, and from the \nprovided list I select=\r\n one too. That is added to my draft reservation \n(another POST).\n&lt;br&gt;c. Fin=\r\nally, I add my credit card information and post a confirmation \n(Another PO=\r\nST).\n&lt;br&gt;\n&lt;br&gt;This last action is served by server number 5 of 10 currently=\r\n serving. \nThat server 5 needs to complete the POST, and if unable, it will=\r\n return \nan error to the client. Well, that server uses the draft reservati=\r\non \nresource information to call a transaction manager to commit all \nchang=\r\nes. If it fails, server 5 returns the error. That is totally opaque \nto the=\r\n client, which only confirms and receives a yes or no to that \nrequest. Dep=\r\nending on that response, the client retries, updates the \nselection of flig=\r\nhts or hotel and confirms again, or even desists and \neliminates the reserv=\r\nation. Simple, ha.\n&lt;br&gt;\n&lt;br&gt;&lt;/blockquote&gt;\n\n  &lt;br&gt;\nCorrect me if I&#39;m wrong, =\r\nbut I think you&#39;re confusing the actors here. \nThe actors being Customer an=\r\nd Travel Agent.&nbsp; It is the Travel Agent that \nhas to coordinate betwee=\r\nn different services, not the Customer.&nbsp; So yes, \nthe Customer will be=\r\n isolated from transactional semantics because it is \nonly dealing with one=\r\n actor, the Travel Agent.&nbsp; The Travel Agent on the \nother hand has to =\r\njuggle a set of decoupled systems.\n  &lt;br&gt;\n\n  &lt;br&gt;\n&lt;/blockquote&gt;\nActually, I=\r\n&#39;m not confusing them: I&#39;m simplifying the solution to just\none actor, the =\r\nclient, since the actual application IS the travel\nagent. See? &lt;br&gt;&lt;br&gt; \nLe=\r\nt&#39;s think on layers. First, the services, let&#39;s agree they are\nnot data-lik=\r\ne things, but as you say they are two different services\noffered by two dif=\r\nferent providers. &lt;br&gt;&lt;br&gt;\nIn the middle, we have the travel agent, which k=\r\nnows how to talk to each individual provider to get the best from it.&lt;br&gt;&lt;b=\r\nr&gt;\nIn the lower part, we have the client, which is agnostic of what is happ=\r\nening. He just wants to fly and sleep.&lt;br&gt;\n&lt;br&gt;\nSo, if you want one single =\r\nclient to follow the workflow presented\nabove, we agree we need more than o=\r\nne interaction, between the client\nan a travel agent. You can create a sess=\r\nion, from client to agent, and\nthen you have one channel there: two actors,=\r\n talking to each other over\nseveral interactions. Under that assumption, yo=\r\nu have a client server,\nbut you will need one agent per client. Say you wan=\r\nt it RESTfull so you\ncan scale. Then, you can have several agents and thous=\r\nands of clients.\nIn this case, each interaction a client does may be answer=\r\ned by a\ndifferent agent and should be a transaction by itself! See?&lt;br&gt;&lt;br&gt;=\r\n\nThus, agents are servers, and say a reservation is the resource being crea=\r\nted. &lt;br&gt;\n&lt;br&gt;\nLet&#39;s go next level. Agent talks to providers. Each agent, a=\r\nt each\ninteraction, talks to providers. Same thing, each provider may be a\n=\r\nsingle server, or a RESTFull thing in the cloud. The agent is then in charg=\r\ne of\ncommitting to both providers in a single request from its client. Here=\r\n, the\nproviders are not part of the agent&#39;s application, they are third\npar=\r\nty. The two phase should be created somehow. IF the providers are\nthe same =\r\napplication as the agent, then there may be no need to\ncomplicate more thin=\r\ngs, and do the two phase commits directly to\ndatabases, without building co=\r\nmplex resources and multiple interactions.&lt;br&gt;\n&lt;blockquote cite=3D&quot;mid:4ACA=\r\n1828.3010601@...&quot; type=3D&quot;cite&quot;&gt;\n  &lt;br&gt;\n  &lt;blockquote type=3D&quot;cite&quot;&gt;=\r\nThe difference in this process is that client is freed from knowing the \ntr=\r\nansaction is happening. Resources are just that, no databases nor \ntables t=\r\nhat need transactions and the client doesn&#39;t have to choose the \nuse of sin=\r\ngle or two phase commits. You can scale since you can change \nthe number of=\r\n servers or transaction managers without touching the \nclient. AND, each cl=\r\nient interaction leaves the system in a stable \nstate. Actually, this can b=\r\ne RESTFull too!.\n&lt;br&gt;\n&lt;br&gt;So, if we can hide the complexity of the transact=\r\nion, why do we need to \nexpose that complexity to the client? I may do it i=\r\nf that brings some \nbenefit. My question will then be, which benefits will =\r\nI found from one \nimplementation to the other one, or why one of them is no=\r\nt suitable for \nsome particular business case.\n&lt;br&gt;\n&lt;br&gt;&lt;/blockquote&gt;\n\n  &lt;b=\r\nr&gt;\nAll I know is somebody is going to have to do coordination work in a \nsy=\r\nstem that has more than two actors:&nbsp; client and server.&nbsp; My quest=\r\nion \nis how can these coordination requirements be improved by RESTful \narc=\r\nhitectural principles.\n  &lt;br&gt;\n\n  &lt;br&gt;\n&lt;/blockquote&gt;\nAnswer is I think not i=\r\nn much. The principles are not for coordination,\nbut for simplicity of esca=\r\nlation, visibility, etc. Two phase commit is\nfor named actors, not moving t=\r\nargets, and REST is about anonymous\nactors playing against named resources.=\r\n First confusion is to think\nresources are data, and thus need transactions=\r\n. Second, trend is to\nexpose too much detail, thus coupling and getting inf=\r\nlexible to\nchanges. That much detail transfer business logic knowledge requ=\r\nirements to clients, which may not be good, because any change will require=\r\n adjusting all clients! (Unless it is RESTfull, I know).&lt;br&gt;\n&lt;br&gt;\nStill, yo=\r\nur questions is very valid: Is REST a good thing for systems\nthat need coor=\r\ndination between actors? (Not necessarily transactions). I&#39;ll leave it open=\r\n for other commenters!&lt;br&gt;\n&lt;br&gt;\nCheers!&lt;br&gt;\n&lt;br&gt;\nWilliam Martinez Pomares\n\r\n--9-0588389230-7407587827=:9--\r\n\n"}}