{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":145532415,"authorName":"Stefan Tilkov","from":"Stefan Tilkov &lt;stefan.tilkov@...&gt;","profile":"stilkov","replyTo":"SENDER","senderId":"cgP0DiO4zGPvWyJkRwn7P0j26FE-_VH46Pr_LDv9_gYmFLTk-VWPscobMCSDj_SacdSarrsVBmJHZZGvLsWud8H4txKwlmNdNwOGxtjz","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] Why HATEOAS?","postDate":"1238579779","msgId":12365,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDA3RDBFRUIxLUQ1QkYtNEFFMi04NDQzLTM1RUY1NTUwMzRENUBpbm5vcS5jb20+","inReplyToHeader":"PGY4YjM5YWNlMDkwMzMxMTc1OWwzY2JjZGFmNWoyZDkwZWU5NzJhMjJmNGFiQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMzMxMTcwMXg0YWRhYzAyZG8zNjliNWQ4NjE3MDBmNmU2QG1haWwuZ21haWwuY29tPiA8ZjhiMzlhY2UwOTAzMzExNzU5bDNjYmNkYWY1ajJkOTBlZTk3MmEyMmY0YWJAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12364,"nextInTopic":12366,"prevInTime":12364,"nextInTime":12366,"topicId":12357,"numMessagesInTopic":27,"msgSnippet":"Excellent points. I d like to add that following links instead of constructing URIs also enables an evolutionary change of distribution of resources across","rawEmail":"Return-Path: &lt;stefan.tilkov@...&gt;\r\nX-Sender: stefan.tilkov@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 30946 invoked from network); 1 Apr 2009 09:56:51 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m3.grp.re1.yahoo.com with QMQP; 1 Apr 2009 09:56:51 -0000\r\nX-Received: from unknown (HELO mail.innoq.com) (87.106.55.185)\n  by mta3.grp.re1.yahoo.com with SMTP; 1 Apr 2009 09:56:51 -0000\r\nX-Received: from [10.100.1.71] (port-87-234-35-142.static.qsc.de [87.234.35.142])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby mail.innoq.com (Postfix) with ESMTPSA id A4C3230A882\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Wed,  1 Apr 2009 11:56:20 +0200 (CEST)\r\nMessage-Id: &lt;07D0EEB1-D5BF-4AE2-8443-35EF555034D5@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nContent-Type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: quoted-printable\r\nMime-Version: 1.0 (Apple Message framework v930.3)\r\nDate: Wed, 1 Apr 2009 11:56:19 +0200\r\nReferences: &lt;55c60e370903311701x4adac02do369b5d861700f6e6@...&gt; &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nX-Mailer: Apple Mail (2.930.3)\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Stefan Tilkov &lt;stefan.tilkov@...&gt;\r\nSubject: Re: [rest-discuss] Why HATEOAS?\r\nX-Yahoo-Group-Post: member; u=145532415; y=-y9gOU3k8XectTbD62RmTXDEnl4edErPXQYEtARTQLjTJQ\r\nX-Yahoo-Profile: stilkov\r\n\r\nExcellent points. I&#39;d like to add that following links instead of  \nconstru=\r\ncting URIs also enables an evolutionary change of distribution  \nof resourc=\r\nes across multiple servers or domains =96 something I&#39;ve found  \nextremely =\r\nvaluable in scaling a system from deployment to various  \n(stages of) produ=\r\nction environments.\n\nStefan\n\nOn 01.04.2009, at 02:59, Craig McClanahan wrot=\r\ne:\n\n&gt; On Tue, Mar 31, 2009 at 5:01 PM, Solomon Duskis &lt;sduskis@...&gt;  =\r\n\n&gt; wrote:\n&gt;\n&gt; &gt; [snip]\n&gt; &gt; Assuming that the practical barriers of entry ar=\r\ne removed, what  \n&gt; practical\n&gt; &gt; benefits will we see?\n&gt; &gt;\n&gt;\n&gt; I know exac=\r\ntly where you are coming from with these questions ... I\n&gt; felt the same wa=\r\ny until recently. I&#39;ve designed several REST APIs\n&gt; over the last couple of=\r\n years, but up until the most recent one, I\n&gt; designed and documented them =\r\nin the &quot;typical&quot; way, describing the URI\n&gt; structure of the application and=\r\n letting the client figure out what to\n&gt; send when. My most recent effort i=\r\ns contributing to the design of the\n&gt; REST architecture for the Sun Cloud A=\r\nPI[1] to control virtual\n&gt; machines and so on. In addition, I&#39;m very focuse=\r\nd on writing client\n&gt; language bindings for this API in multiple languages =\r\n(Ruby, Python,\n&gt; Java) ... so I get a first hand feel for programming to th=\r\nis API at a\n&gt; very low level.\n&gt;\n&gt; We started from the presumption that the =\r\nservice would publish only\n&gt; *one* well-known URI (returning a &quot;cloud&quot; repr=\r\nesentation containing\n&gt; representations for, and/or URI links to representa=\r\ntions for, all the\n&gt; cloud resources that are accessible to the calling use=\r\nr). Every other\n&gt; URI in the entire system (including all those that do sta=\r\nte changes)\n&gt; are discovered by examining these representations. Even in th=\r\ne early\n&gt; days, I can see some significant, practical, short term benefits =\r\nwe\n&gt; have gained from taking this approach:\n&gt;\n&gt; * REDUCED CLIENT CODING ERR=\r\nORS. Looking back at all the REST client\n&gt; side interfaces\n&gt; that I, or peo=\r\nple I work with, have built, about 90% of the bugs\n&gt; have been in the const=\r\nruction\n&gt; of the right URIs for the server. Typical mistakes are leaving ou=\r\nt\n&gt; path segments, getting them\n&gt; in the wrong order, or forgetting to URL =\r\nencode things. All this\n&gt; goes away when the server\n&gt; hands you exactly the=\r\n right URI to use for every circumstance.\n&gt;\n&gt; * REDUCED INVALID STATE TRANS=\r\nITION CALLS. When the client decides\n&gt; which URI to call and\n&gt; when, they r=\r\nun the risk of attempting to request state transitions\n&gt; that are not valid=\r\n for the current\n&gt; state of the server side resource. An example from my pr=\r\noblem\n&gt; domain ... it&#39;s not allowed to\n&gt; &quot;start&quot; a virtual machine (VM) unt=\r\nil you have &quot;deployed&quot; it. The\n&gt; server knows about URIs to\n&gt; initiate each=\r\n of the state changes (via a POST), but the\n&gt; representation of the VM list=\r\ns only the\n&gt; URIs for state transitions that are valid from the current sta=\r\nte.\n&gt; This makes it extremely easy\n&gt; for the client to understand that tryi=\r\nng to start a VM that hasn&#39;t\n&gt; been deployed yet is not legal,\n&gt; because th=\r\nere will be no corresponding URI in the VM representation.\n&gt;\n&gt; * FINE GRAIN=\r\nED EVOLUTION WITHOUT (NECESSARILY) BREAKING OLD CLIENTS.\n&gt; At any given tim=\r\ne, the client of any REST API is going to be\n&gt; programmed with *some* assum=\r\nptions\n&gt; about what the system can do. But, if you document a restriction t=\r\no\n&gt; &quot;pay attention to only those\n&gt; aspects of the representation that you k=\r\nnow about&quot;, plus a server\n&gt; side discipline to add things later\n&gt; that don&#39;=\r\nt disrupt previous behavior, you can evolve APIs fairly\n&gt; quickly without b=\r\nreaking all clients,\n&gt; or having to support multiple versions of the API si=\r\nmultaneously on\n&gt; your server. You don&#39;t have to\n&gt; wait years for serendipi=\r\nty benefits :-). Especially compared to\n&gt; something like SOAP where the\n&gt; s=\r\nyntax of your representations is versioned (in the WSDL), so you\n&gt; have to =\r\nmess with the clients\n&gt; on every single change.\n&gt;\n&gt; Having drunk the HATEOA=\r\nS koolaid now, I would have a really hard time\n&gt; going back :-).\n&gt;\n&gt; Craig =\r\nMcClanahan\n&gt;\n&gt; [1] http://kenai.com/projects/suncloudapis/pages/Home\n&gt; \n&gt; &lt;=\r\n!-- #ygrp-mkp{ border: 1px solid #d8d8d8; font-family: Arial;  \n&gt; margin: 1=\r\n4px 0px; padding: 0px 14px; } #ygrp-mkp hr{ border: 1px  \n&gt; solid #d8d8d8; =\r\n} #ygrp-mkp #hd{ color: #628c2a; font-size: 85%; font- \n&gt; weight: bold; lin=\r\ne-height: 122%; margin: 10px 0px; } #ygrp-mkp  \n&gt; #ads{ margin-bottom: 10px=\r\n; } #ygrp-mkp .ad{ padding: 0 0; } #ygrp- \n&gt; mkp .ad a{ color: #0000ff; tex=\r\nt-decoration: none; } --&gt; &lt;!-- #ygrp- \n&gt; sponsor #ygrp-lc{ font-family: Ari=\r\nal; } #ygrp-sponsor #ygrp-lc  \n&gt; #hd{ margin: 10px 0px; font-weight: bold; =\r\nfont-size: 78%; line- \n&gt; height: 122%; } #ygrp-sponsor #ygrp-lc .ad{ margin=\r\n-bottom: 10px;  \n&gt; padding: 0 0; } --&gt; &lt;!-- #ygrp-mlmsg {font-size:13px; fo=\r\nnt-family:  \n&gt; arial,helvetica,clean,sans-serif;*font-size:small;*font:x-sm=\r\nall;}  \n&gt; #ygrp-mlmsg table {font-size:inherit;font:100%;} #ygrp-mlmsg sele=\r\nct,  \n&gt; input, textarea {font:99% arial,helvetica,clean,sans-serif;} #ygrp-=\r\n \n&gt; mlmsg pre, code {font:115% monospace;*font-size:100%;} #ygrp-mlmsg *  \n=\r\n&gt; {line-height:1.22em;} #ygrp-text{ font-family: Georgia;\t } #ygrp- \n&gt; text=\r\n p{ margin: 0 0 1em 0; } dd.last p a { font-family: Verdana;  \n&gt; font-weigh=\r\nt: bold; } #ygrp-vitnav{ padding-top: 10px; font-family:  \n&gt; Verdana; font-=\r\nsize: 77%; margin: 0; } #ygrp-vitnav a{ padding: 0  \n&gt; 1px; } #ygrp-mlmsg #=\r\nlogo{ padding-bottom: 10px; } #ygrp-reco  \n&gt; { margin-bottom: 20px; padding=\r\n: 0px; } #ygrp-reco #reco-head { font- \n&gt; weight: bold; color: #ff7900; } #=\r\nreco-category{ font-size: 77%; }  \n&gt; #reco-desc{ font-size: 77%; } #ygrp-vi=\r\ntal a{ text-decoration:  \n&gt; none; } #ygrp-vital a:hover{ text-decoration: u=\r\nnderline; } #ygrp- \n&gt; sponsor #ov ul{ padding: 0 0 0 8px; margin: 0; } #ygr=\r\np-sponsor #ov  \n&gt; li{ list-style-type: square; padding: 6px 0; font-size: 7=\r\n7%; } #ygrp- \n&gt; sponsor #ov li a{ text-decoration: none; font-size: 130%; }=\r\n #ygrp- \n&gt; sponsor #nc{ background-color: #eee; \t  margin-bottom: 20px;  \n&gt;=\r\n padding: 0 8px; } #ygrp-sponsor .ad{ padding: 8px 0; } #ygrp- \n&gt; sponsor .=\r\nad #hd1{ font-family: Arial; font-weight: bold; color:  \n&gt; #628c2a; font-si=\r\nze: 100%; line-height: 122%; } #ygrp-sponsor .ad  \n&gt; a{ text-decoration: no=\r\nne; } #ygrp-sponsor .ad a:hover{ text- \n&gt; decoration: underline; } #ygrp-sp=\r\nonsor .ad p{ margin: 0; } o{font- \n&gt; size: 0; } .MsoNormal{ margin: 0 0 0 0=\r\n; } #ygrp-text tt{ font-size:  \n&gt; 120%; } blockquote{margin: 0 0 0 4px;} .r=\r\neplbq{margin:4} dd.last p  \n&gt; span { margin-right: 10px; font-family: Verda=\r\nna; font-weight:  \n&gt; bold; } dd.last p span.yshortcuts { margin-right: 0; }=\r\n div.photo- \n&gt; title a, div.photo-title a:active, div.photo-title a:hover, =\r\n \n&gt; div.photo-title a:visited { text-decoration: none; } div.file-title  \n&gt;=\r\n a, div.file-title a:active, div.file-title a:hover, div.file-title  \n&gt; a:v=\r\nisited { text-decoration: none; } #ygrp-msg p { clear: both;  \n&gt; padding: 1=\r\n5px 0 3px 0; overflow: hidden; } #ygrp-msg p span { color:  \n&gt; #1E66AE; fon=\r\nt-weight: bold; } div#ygrp-mlmsg #ygrp-msg p a  \n&gt; span.yshortcuts { font-f=\r\namily: Verdana; font-size: 10px; font- \n&gt; weight: normal; } #ygrp-msg p a {=\r\n font-family: Verdana; font-size:  \n&gt; 10px; } #ygrp-mlmsg a { color: #1E66A=\r\nE; } div.attach-table div div a  \n&gt; { text-decoration: none; } div.attach-t=\r\nable { width: 400px; } --&gt;\n\n\n"}}