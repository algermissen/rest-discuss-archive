{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":223135631,"authorName":"Felipe Ga√∫cho","from":"=?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;","profile":"felipegaucho2003","replyTo":"SENDER","senderId":"ho10yc3ZONrUuVxOTF87mGXqLrp5G5pt3EEtJF9D8GN1HOX80slfKjYFKi2kn74luBLGPZygPkFeq094-jdebI86EV4pCvezKIZvK0umRIt-EYKDhj7Wg4DU0A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267170956","msgId":14920,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQxMTYwMzg2MTAwMjI1MjM1NWw1ZDI5YzNmOXkxNjMxNzhiOGE5MGNhOWNhQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGY4YjM5YWNlMTAwMjI1MjMzOXAzNmE5N2U4YnA2ZTRkMWYwYzc1NzcwOGM2QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGY4YjM5YWNlMTAwMjI1MTEzN3A1Mzk1NzRiMWdmMGFlZjFlNzMzMjkyMTNAbWFpbC5nbWFpbC5jb20+CSA8NTUxOTUuNzYwNjAucW1Ad2ViNTU5MDgubWFpbC5yZTMueWFob28uY29tPgkgPGQxMTYwMzg2MTAwMjI1MjIyNmo2NGI4ZDM0MmlmZmRkYTRlNmQ4NjgzMzkwQG1haWwuZ21haWwuY29tPgkgPGY4YjM5YWNlMTAwMjI1MjMzOXAzNmE5N2U4YnA2ZTRkMWYwYzc1NzcwOGM2QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":14919,"nextInTopic":14921,"prevInTime":14919,"nextInTime":14921,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"... yes, I am aware about that... but the effort to maintain the mapping between those models generates an extra and unnecessary development effort ,.... I","rawEmail":"Return-Path: &lt;fgaucho@...&gt;\r\nX-Sender: fgaucho@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 7551 invoked from network); 26 Feb 2010 07:56:01 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m13.grp.re1.yahoo.com with QMQP; 26 Feb 2010 07:56:01 -0000\r\nX-Received: from unknown (HELO mail-pw0-f47.google.com) (209.85.160.47)\n  by mta2.grp.re1.yahoo.com with SMTP; 26 Feb 2010 07:56:00 -0000\r\nX-Received: by pwi5 with SMTP id 5so6012699pwi.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 25 Feb 2010 23:55:57 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.141.214.24 with SMTP id r24mr18274rvq.27.1267170957027; Thu, \n\t25 Feb 2010 23:55:57 -0800 (PST)\r\nIn-Reply-To: &lt;f8b39ace1002252339p36a97e8bp6e4d1f0c757708c6@...&gt;\r\nReferences: &lt;f8b39ace1002251137p539574b1gf0aef1e73329213@...&gt;\n\t &lt;55195.76060.qm@...&gt;\n\t &lt;d11603861002252226j64b8d342iffdda4e6d8683390@...&gt;\n\t &lt;f8b39ace1002252339p36a97e8bp6e4d1f0c757708c6@...&gt;\r\nDate: Fri, 26 Feb 2010 08:55:56 +0100\r\nMessage-ID: &lt;d11603861002252355l5d29c3f9y163178b8a90ca9ca@...&gt;\r\nTo: craigmcc@...\r\nCc: Kevin Duffey &lt;andjarnic@...&gt;, REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Felipe_Ga=FAcho?= &lt;fgaucho@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=223135631; y=I6Xdx5PZIl4DFhw7KN8Oj-aZFlzf1uuAsiHwQEWq02DfNlH58Hx1NWEujw\r\nX-Yahoo-Profile: felipegaucho2003\r\n\r\n&gt; You&#39;re missing a key feature of what both Kevin and I said ... use\n&gt; *dif=\r\nferent* classes for the *resource* domain model and the *business*\n&gt; domain=\r\n model.\n\nyes, I am aware about that... but the effort to maintain the mappi=\r\nng\nbetween those models generates an extra and unnecessary development\neffo=\r\nrt ,.... I also noticed some people having a third model when the\ndata will=\r\n be rendered in the presentation layer.. (a managedbean or\nother component.=\r\n.)... My experiment is looking to reduce the amount of\neffort required to s=\r\nynchronize all those models, having only one\nmodel.. and it works fine and =\r\nthe performance is better and\nmaintenance effort much less than the traditi=\r\nonal MVC design...\n\n\n&gt; Then, each kind of class can have the annotations th=\r\nat are relevant for that tier.\n\nUsually the classes are identical and you a=\r\nre just including a copy\nlayer to transfer data between them :)\n\n&gt; Managing=\r\n workflow, like obeying the hypermedia constraint, is a view tier concern (=\r\nfrom the point of view of a server side developer).\n\nMay be, may be not.. i=\r\nn my case the model contains the sate of the\napplication, so it is a busine=\r\nss concern :)\n\n&gt; That&#39;s a good thing, because a REST API is typically not t=\r\nhe only way that\n&gt; such business model objects get manipulated.\n\nyes, but t=\r\nhe effort to manage the hypermedia just in time makes the\nwhole application=\r\n much slower.. and it is a repettive task.. that is\none of the reasons that=\r\n motivated me to push the links in the\ndatabase....\n\n&gt; Self-test time:=A0 a=\r\nre you storing URIs in your database?\n\nyes. The sate of the application is =\r\npersistent :) and scales quite\nwell since I don&#39;t need to recalculate the s=\r\nate on every request..\n(ok, memcache can help a bit, but anyway... the hype=\r\nrmedia engine it\nis the heavy part of the request - eliminating that I have=\r\n much faster\nservices)\n\n&gt; a JAX-RS based server application, that &quot;care&quot; is=\r\n expressed by @Path\n\nI am experimenting with that idea.. in order to use re=\r\ngular\nexpressions or other DSL facilty to manipulate the final URI\ndinamica=\r\nlly.. perhaps storing just the tail of the URI in the databse\nor other form=\r\nat of information that lead me a chance to produce the\nexternal representat=\r\nion by demand.. this part is my current\nresearch...... (I prefer the &quot;exper=\r\nimentation&quot; word since I am not a\nformal researcher..)\n\n&gt; @Path annotations=\r\n -- to change the URIs included in your representations.\n\nyes, but you need=\r\n to iterate over the collections and change manually\neach URI, what can lea=\r\nd you to manipulate thousand of strings before\nto respond to the client.. t=\r\nhis part scares me... (think about a\ncollection with 100 elements, each wit=\r\nh 20 URIs)\n\n&gt; In the shopping cart use case (no, I don&#39;t care if some peopl=\r\ne don&#39;t like it\n&gt; as an example :-), a well designed REST API should *not* =\r\ndefine a URI\n&gt; template like &quot;/checkout&quot; that accepts a POST with a shoppin=\r\ng cart\n\nThat is a basic REST principle .. and it is not related to the way =\r\nyou\nstore or calculate the URIs...\n\n&gt; concerned, the URI itself is an opaqu=\r\ne string.\n\nyes......\n\nthanks for your feedback... interesting.. I will keep=\r\n thinking about\nyour thoughts....\n\n\n  Felipe Ga=FAcho\n\n"}}