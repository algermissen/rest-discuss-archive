{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":228155998,"authorName":"Mike Schinkel","from":"&quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;","profile":"mikeschinkel","replyTo":"SENDER","senderId":"ejLMRL8OHcbda6TOpzFlo1N_6A4mNNuDbZRNQljknLNwifBiP3pGgNsZ9FpRLdbOXN7uqjag2xO3kyUCauZqzuqEAws7coK69d4ZOkp1bA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] Re: A humble terminological proposal","postDate":"1182325410","msgId":9109,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNTEwMWM3YjMwZSRiMjZmOTY4MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","inReplyToHeader":"PDIwMDcwNjE1MjExMDMxLkdJMzM2MUBrbGFuZ3JhdW0+","referencesHeader":"PDIwMDcwNjA3MDQyOTIyLkdBMjExNzNAa2xhbmdyYXVtPiA8MDA3MzAxYzdhOGM2JDI3YmMyMGEwJDA3MDJhOGMwQEd1aWRlcy5sb2NhbD4gPDQ2NjdENzdCLjUwOTA4MDlAaGFja2NyYWZ0Lm5ldD4gPDAxMmIwMWM3YWFkNiQ1MzFmZTE3MCQwNzAyYThjMEBHdWlkZXMubG9jYWw+IDwyMDA3MDYxNTA2MjM0MC5HQzMzNjFAa2xhbmdyYXVtPiA8MDE2YzAxYzdhZjdkJGZkN2FiYTQwJDIxMDJmZWE5QEd1aWRlcy5sb2NhbD4gPDIwMDcwNjE1MjExMDMxLkdJMzM2MUBrbGFuZ3JhdW0+"},"prevInTopic":9056,"nextInTopic":9110,"prevInTime":9108,"nextInTime":9110,"topicId":8859,"numMessagesInTopic":41,"msgSnippet":"... That s not what I assume at all. I have a high respect for Jon s knowledge of REST. I assume however that people may hear or read Jon s words about REST","rawEmail":"Return-Path: &lt;mikeschinkel@...&gt;\r\nX-Sender: mikeschinkel@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 91685 invoked from network); 20 Jun 2007 07:43:33 -0000\r\nReceived: from unknown (66.218.66.70)\n  by m36.grp.scd.yahoo.com with QMQP; 20 Jun 2007 07:43:33 -0000\r\nReceived: from unknown (HELO wx-out-0506.google.com) (66.249.82.230)\n  by mta12.grp.scd.yahoo.com with SMTP; 20 Jun 2007 07:43:32 -0000\r\nReceived: by wx-out-0506.google.com with SMTP id s10so117161wxc\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 20 Jun 2007 00:43:32 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:from:to:references:subject:date:message-id:mime-version:content-type:content-transfer-encoding:x-mailer:thread-index:in-reply-to:x-mimeole;\n        b=kh1Jw9GeQhdZce2bnALhFq0jyGPfjxYdWKq8rMfYa2lrtvkaE1XAmVVkfIxwTTBmJK32WxZwrW8Au8WY1BUGT2ggZ2rv0OhsXL1K/e+525f+/KZW2FFhyq2JZYrs/a65xCdQOc+JnZRJgcPMyA35kMlD+cFKrT7c5FNKItJ5TBU=\r\nReceived: by 10.70.57.8 with SMTP id f8mr618712wxa.1182325412133;\n        Wed, 20 Jun 2007 00:43:32 -0700 (PDT)\r\nReturn-Path: &lt;mikeschinkel@...&gt;\r\nReceived: from desktop ( [69.94.221.21])\n        by mx.google.com with ESMTP id 43sm487346wri.2007.06.20.00.43.30\n        (version=SSLv3 cipher=RC4-MD5);\n        Wed, 20 Jun 2007 00:43:31 -0700 (PDT)\r\nTo: &quot;&#39;A. Pagaltzis&#39;&quot; &lt;pagaltzis@...&gt;,\n\t&quot;&#39;rest-discuss&#39;&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20070607042922.GA21173@klangraum&gt; &lt;007301c7a8c6$27bc20a0$0702a8c0@...&gt; &lt;4667D77B.5090809@...&gt; &lt;012b01c7aad6$531fe170$0702a8c0@...&gt; &lt;20070615062340.GC3361@klangraum&gt; &lt;016c01c7af7d$fd7aba40$2102fea9@...&gt; &lt;20070615211031.GI3361@klangraum&gt;\r\nDate: Wed, 20 Jun 2007 03:43:30 -0400\r\nMessage-ID: &lt;005101c7b30e$b26f9680$0702a8c0@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Mailer: Microsoft Office Outlook 11\r\nThread-Index: Acevkc+DuBPqsxCER4GZrUxnRxxhewDdsTow\r\nIn-Reply-To: &lt;20070615211031.GI3361@klangraum&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3138\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Mike Schinkel&quot; &lt;mikeschinkel@...&gt;\r\nSubject: RE: [rest-discuss] Re: A humble terminological proposal\r\nX-Yahoo-Group-Post: member; u=228155998; y=Ouve1MIQN1dAtaaBZwriKZgOkBi_O_oMP7POUDVbMrxQvgnSXjye\r\nX-Yahoo-Profile: mikeschinkel\r\n\r\nA. Pagaltzis wrote:\n&gt; &gt; &gt; That&#39;s very simple: if the URI is constructed based\n&gt; &gt; &gt; on hypermedia, then the application is RESTful. If\n&gt; &gt; &gt; not, it&#39;s not.\n&gt; &gt; &gt; \n&gt; &gt; But it is a point that is not even addressed by many\n&gt; &gt; when discussing with people who are learning REST, and\n&gt; &gt; those newly christened RESTians go forth and preach the\n&gt; &gt; dogma that URIs cannot be constructed, period. My\n&gt; &gt; &quot;tiresome&quot; comments are meant to shine a light on the\n&gt; &gt; issue to discourage even more furture cargo-cultists.\n&gt; &gt; \n&gt; You mean you assume that Jon doesn&#39;t know what REST means\n&gt; and doesn&#39;t mean?\n\nThat&#39;s not what I assume at all. I have a high respect for Jon&#39;s knowledge\nof REST. I assume however that people may hear or read Jon&#39;s words about\nREST (or your&#39;s or mine for that matter) understanding the words but not the\nessence.\n\n&gt; &gt; &gt; &gt; Heh. Any and every REST system will fail that test.\n&gt; &gt; &gt; &gt; After all, how do you change the entry point URL?\n&gt; &gt; &gt; &gt; &#39;-)\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; Not by changing the code, hopefully.\n&gt; &gt; &gt; \n&gt; &gt; &gt; In fact, you could make that URI a link in a resource\n&gt; &gt; &gt; you control, in which case the REST client would in\n&gt; &gt; &gt; fact not need to change *at all*.\n&gt; &gt; &gt; \n&gt; &gt; &gt; See? We could split hairs about the exceptional case\n&gt; &gt; &gt; of the entry point all day long. :-)\n&gt; &gt; &gt; \n&gt; &gt; &gt; What matters is you know what Jon meant; and you do.\n&gt; &gt; &gt; \n&gt; &gt; That&#39;s a marginal case on the open Internet. Publishing\n&gt; &gt; an API for others to consume ensures that this will\n&gt; &gt; almost certainly not be the case. My bringing it up was\n&gt; &gt; NOT splitting hairs, it was to make the point that REST\n&gt; &gt; is not pure as physics is pure, and that there are edge\n&gt; &gt; case problems with the hypermedia constraint. As every\n&gt; &gt; REST system could theoretically be composed to make a\n&gt; &gt; larger REST system, the once published entry point now\n&gt; &gt; becomes verboten to be constructed.\n&gt; &gt; \n&gt; Uh, nowhere did I admit that it needs to be constructed.\n&gt; The client needs to receive *some* entry point URI out of\n&gt; band. This is called a &quot;bookmark.&quot; Why would the client\n&gt; ever *construct* one?\n&gt; \n&gt; So since your premise looks false to me.\n\nSorry, I misspoke. I sometimes get my wires crossed when debating multiple\northogonal issues. I meant to say that the once entry point now much be\nfollowed by hypermedia whereas when it was not part of the larger system it\nwas typed in directly.\n\n&gt; &gt; And the converse is also true, that many REST services\n&gt; &gt; could be decomposed into smaller independent services.\n&gt; &gt; When the decomposition occurs, what is the entry point?\n&gt; &gt; Is it a constructed URL, or did you have to follow\n&gt; &gt; hypermedia from the larger service to get to it? And if\n&gt; &gt; that larger service is then composed with yet more\n&gt; &gt; services, where are the valid entry points that don&#39;t\n&gt; &gt; require hypermedia? Thus I see a problem with the\n&gt; &gt; hypermedia constraint because it does not scale upwards\n&gt; &gt; or downwards.\n&gt; &gt; \n&gt; . then necessarily I must consider your conclusion false\n&gt; too.\n\nPlease revisit it now that I have clarified my intent.\n\n&gt; &gt; While I see it&#39;s theoretical benefit, I see problems in\n&gt; &gt; its real world use as just described and that&#39;s why I\n&gt; &gt; think it is so important to actively encourage the\n&gt; &gt; incorporation of URL composition into the mix at all\n&gt; &gt; levels. By encouraging URL construction using\n&gt; &gt; templates, REST services will be more easiler able to\n&gt; &gt; scale albeit there will still be edge problems but less\n&gt; &gt; so.\n&gt; &gt; \n&gt; No, they will just be easier to create, but harder to\n&gt; maintain, because they&#39;ll be stronger coupled - unless\n&gt; the URI template comes from hypermedia. \n\nI&#39;ve been trying to say that URI templates would come from hypermedia!  But\n(and I&#39;m probably the cause of the confusion) the orthogonal issue of entry\npoint is still an issue when one starts looking at composition and\ndecomposition.\n\nUltimately, compared to all other constraints of REST, I see hypermedia as\nbeing &quot;nice to have in many cases, a must in many others, and not nice to\nhave in a few.&quot;  Of course, I&#39;m sure that RoyTF would disagree. :)\n\n&gt; Additionally, non-hypermedia based URI construction has \n&gt; no scalibility effect in the small and a second- order negative \n&gt; one in the large.\n\nhuh?\n\n&gt; &gt; Services would compose URLs based on templates, but\n&gt; &gt; where the template comes from is the edge case yet that\n&gt; &gt; can easily be provided by the larger service when\n&gt; &gt; services are composed. As is, services faithfully the\n&gt; &gt; following hypermedia constraint are ironically brittle\n&gt; &gt; with respect any changes involving composition or\n&gt; &gt; decomposition.\n&gt; &gt; \n&gt; I really can&#39;t follow that conclusion.\n\nYes, my words were poorly written. Essentially, services that follow\nhypermedia are also as brittle as services that hard-code URLs when they are\ncomposed with other services. and using templates reduces some of that\nbrittleness because they are by nature parameterized.  And yes, all can be\nmitigated if careful, but the same is true if hypermedia is not used.\n\n&gt; &gt; What&#39;s more, assuming an arbitrary Internet-published\n&gt; &gt; REST-based API, it is much easier to program a direct\n&gt; &gt; resource retrieval using URI composition than it is to\n&gt; &gt; program a hypermedia-following resource retrieval,\n&gt; &gt; partly because there are absolutely no standards for\n&gt; &gt; such discovery and retrieval leaving the hapless\n&gt; &gt; developer or entrepreneur to code it themselves.\n&gt; \n&gt; That&#39;s why AtomPP is such a huge deal.\n\nThat is something I plan to study.  I reserve judgement to see how long\nbefore conformant AtomPP libraries are deployed on all platforms and I&#39;ll\nalso be interested to see if AtomPP is sufficiently simple that &quot;average\npeople&quot; will be able to publish AtomPP feeds.  I currently remain skeptical.\n\n&gt; &gt; For a great developers it is trivial, but for many\n&gt; &gt; smaller businesses or entrepreneurs w/o hotshot\n&gt; &gt; developers on staff it is not. So a company publishing\n&gt; &gt; a web API can either tell it&#39;s potential users to\n&gt; &gt; follow the pure REST hypermedia model, or do URI\n&gt; &gt; construction. And if they do the former, they are\n&gt; &gt; likely to get a lot more people using it. Which would\n&gt; &gt; you chose? If you say hypermedia, I can tell we are\n&gt; &gt; discussing a hypothetical question and not one on which\n&gt; &gt; your livelihood depends.\n&gt; &gt; \n&gt; Seeing as I&#39;m primarily a Perl hacker, I&#39;ll just point to\n&gt; WWW::Mechanize for this matter. \n\nThe fact you are a Perl hacker you are making my point.  Being able to\nprogram in Perl means you&#39;ve got more needed for these things than &gt;99% of\nthe population.  Enabling only the elite does not make for web scale.\n\n&gt; Proof&#39;s in eating the pudding. Doing hypermedia is very \n&gt; easy given tooling that abstracts the rote work. \n\nIt is not easy unless you are very experienced, as you are. Things that are\ntrivial for a Perl hacker are beyond comprehension for an HTML+CSS+(very\nlittle)Javascript web guy. \n\n&gt; I&#39;m basing this on actual experience, not hypothesis, \n\nWhose experience?  Your own?  Or experience working with lots of more\nbusiness-than-technically oriented web developers?  FYI, I have a group of\nover 200 such people in a group I organize a monthly meeting for.\n\n&gt; much as you&#39;d like to paint\n&gt; the REST proponents with the ivory tower brush.\n\nYou mean just as much as you&#39;d like to put words in my mouth? &#39;-)  Not ivory\ntower; I assume RESTians are practitioners, just very, very good ones.\n\n&gt; &gt; Finally, for an open API published on the web, I am\n&gt; &gt; almost willing to argue that textually publishing the\n&gt; &gt; URL format and encouraging people to do URI\n&gt; &gt; construction w/o hypermedia is okay assuming the\n&gt; &gt; company is willing to maintain those URLs. After all, I\n&gt; &gt; can&#39;t see any reason why Amazon couldn&#39;t commit itself\n&gt; &gt; to maintain its services at http://services.amazon.com/\n&gt; &gt; where to get info on one of the items they sell you\n&gt; &gt; would just append their &quot;ASIN&quot; to the end of their\n&gt; &gt; &quot;items&quot; URL\n&gt; &gt; http://services.amazon.com/items/1234567890/\n&gt; &gt; \n&gt; That&#39;s fine for Amazon. It&#39;s not so fine at the other end\n&gt; of the wire, because then the other end of the wire is an\n&gt; Amazon client as opposed to a web shop client. Of course\n&gt; Amazon has no incentive to care about that.\n\nWhat&#39;s a web shop client?\n\nAnd if the Amazon service is generalized to many other sites then your\nreason doesn&#39;t argue against using URIs constructed on the client; they\nwould just uses a different local template.\n\n&gt; &gt; There are many things in life where companies need to\n&gt; &gt; put a stake in the ground and then maintain that stake,\n&gt; &gt; i.e. car makers have to maintain spare parts for their\n&gt; &gt; cars for many years, I see no reason why it should be\n&gt; &gt; absolutely forbidden for companies to publish REST apis\n&gt; &gt; for the open Internet that do not require hypermedia to\n&gt; &gt; discover and parse.\n&gt; &gt; \n&gt; Imagine if every car company had their own designs for\n&gt; screws, nuts, bolts, lightbulbs, batteries, tires, etc.\n&gt; complete with car-maker-specific screwdrivers,\n&gt; rechargers, tire inflators etc., with a stated promise\n&gt; that production of these parts would be maintained\n&gt; indefinitely.\n\nBad analogy. Instead imagine that every car company were told best practice\nwas not allow screwdrivers to unscrew screws but instead that every screw\nmust have a mechanism that unscrews the screw when it is unscrewed (i.e. a\nlevel of indirection.) \n\nActually, your example makes my point; there are standards for screws and\nonce we know the standard we can mint a new screw.  With the hypermedia\nconstraint we are not allowed to know how to create a screw we can only ask\nfor the document that explains the screw each time we want to create one.\nMy point is that it would be better to know what URLs for certain classes of\nwell-established services then always having to first look them up which is\noften an unnecessary level of indirection for well-established services.\n\nWe could also discuss the &quot;well-known name&quot; problem (i.e. like favicon.ico)\nwhere we stated that a service would always be at /services/whatever, but\nthat&#39;s a whole &#39;nother can o&#39;worms (and I frankly don&#39;t avocate trampling on\nURL space by using well-known names.)\n\n&gt; &gt; The hypermedia constraint is simply the web&#39;s example\n&gt; &gt; of the more general abstraction and indirection pattern\n&gt; &gt; used to improve maintainability of systems throughout\n&gt; &gt; software development. But as experience has shown us,\n&gt; &gt; too much abstraction and too much indirection make for\n&gt; &gt; too much complexity, and that pill can at times be\n&gt; &gt; worse than the ailment it attempts to cure.\n&gt; \n&gt; Smalltalk is based on an indirection at the core of the\n&gt; language semantics level, and practice has since shown\n&gt; that extremely late-bound messaging communication leads\n&gt; to much more flexible and resilient systems than are\n&gt; possible with static early binding.\n\n&quot;practice has since shown?&quot;  Want to qualify that?\n\nNevermind, I agree in general but think that with most things the hypermedia\nconstraint should not be considered a silver bullet.\n\n&gt; &gt; I know this as I have often tried to over-generalize a\n&gt; &gt; system only to find I&#39;d made it too complex to work\n&gt; &gt; with.\n&gt; &gt; \n&gt; And you found no cases where too little indirection made\n&gt; things too hard? Beware of confirmation bias.\n\nI never stated that; you again put words in my mouth. I was not addressing\nthat path because I had no need to.\n\n&gt; &gt; Sometimes it is better to simply hardcode something\n&gt; &gt; than to make it too complex. And I&#39;d argue that\n&gt; &gt; plublished open apis on the Internet could well be a\n&gt; &gt; valid place where URLs could be reasonably hardcoded.\n&gt; \n&gt; If that&#39;s the case, then AtomPP, which is\n&gt; machine-readable hypermedia writ large, will crash and\n&gt; burn.\n&gt; \n&gt; I&#39;ll let history be the judge of that, but I think I can\n&gt; already tell what history will have had to say about this\n&gt; one.\n\nYou are arguing a false dichotomy.  That&#39;s a tired and insincere debate\ntechnique.  Stop it.\n\n&gt; &gt; My guess is that you deal with internal systems a lot\n&gt; &gt; more than you deal with the open internet. Maybe that&#39;s\n&gt; &gt; why your bias differs from mine.\n&gt; \n&gt; Funny you should say that, as the SOAP/WS-* philosophy\n&gt; with its early binding/tight coupling/code gen mindset\n&gt; comes from internal systems rather than the open web.\n&gt; \n&gt; And no, I don&#39;t deal much at all with internal systems.\n\nMy apologies for making an incorrect assumption.\n\n&gt; Don&#39;t you think I&#39;d believe much more in tools if that\n&gt; were the case?\n\nI don&#39;t really know what you believe, I don&#39;t know you that well. \n \n&gt; &gt; &gt; But I think this matter will straighten itself out\n&gt; &gt; &gt; over time as more people absorb the lessons and apply\n&gt; &gt; &gt; it in practice, coming away with examples from\n&gt; &gt; &gt; experience.\n&gt; &gt; &gt; \n&gt; &gt; &gt; It&#39;s just the natural process of adoption.\n&gt; &gt; &gt; \n&gt; &gt; ...and as people like me, and you, have these\n&gt; &gt; *tiresome* debates.\n&gt; &gt; \n&gt; What I found tiresome is not the debate but rather your\n&gt; desire to be be controverted, leading you to incessantly\n&gt; make up sentiments like &quot;begrudging&quot; out of thin air. I&#39;m\n&gt; not here for an interest in claims about each other&#39;s\n&gt; supposed belief systems.\n\nReread your email to me.  Be careful that you don&#39;t become what you most\ndespise.  \n\n&gt; As for my own bias, I&#39;ll note that my lightbulb moment\n&gt; regarding hypermedia was just two weeks or so ago and I&#39;m\n&gt; since realigning my understanding of REST as a whole\n&gt; already.\n\nAnd I&#39;ll repeat: &quot;There are none so zealous as the newly converted.&quot; &#39;-)\n\n-- \n-Mike Schinkel\nhttp://www.mikeschinkel.com/blogs/\nhttp://www.welldesignedurls.org\nhttp://atlanta-web.org - http://t.oolicio.us\n\n    \n \n\n\n"}}