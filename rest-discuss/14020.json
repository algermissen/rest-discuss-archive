{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"Andrew Wahbe","from":"Andrew Wahbe &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"XeOEqlhyho594KQjZYwRB2WmusJRW7c2zeQ1AZXWkcckMcsR4OMFqmbyMEeovqYY-ahmQTUcnLyyPqfaNPgu_8rcKVZ7ES1P9Ul6_w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Service descriptions and legal contracts","postDate":"1257574980","msgId":14020,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGIwZWJhZmQxMDkxMTA2MjIyM2gxNTI1M2ExNHg5NjlmNTE4MTFjOGRiMjYwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ4MDNEQ0EwLTIxMzUtNEU5NC1CMzc4LUVCNDhDQTk3NjI0RUBtYWMuY29tPg==","referencesHeader":"PGhkMWM5aitiN2d2QGVHcm91cHMuY29tPgkgPENDNzM5QTY4LTFCQjEtNEMwOS1BNzM1LTFDRTRGMzMxNjA4OUBtYWMuY29tPgkgPGIwZWJhZmQxMDkxMTA2MTE0MW8xYmVhYWI1MXJmYmI3MDMzZDM2NzQ1MTBkQG1haWwuZ21haWwuY29tPgkgPDQ4MDNEQ0EwLTIxMzUtNEU5NC1CMzc4LUVCNDhDQTk3NjI0RUBtYWMuY29tPg=="},"prevInTopic":14019,"nextInTopic":14022,"prevInTime":14019,"nextInTime":14021,"topicId":13996,"numMessagesInTopic":25,"msgSnippet":"... Yes this terminology is something worth getting consensus on. I was using the terms client and underlying platform for your user agent and client","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38687 invoked from network); 7 Nov 2009 06:23:02 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 7 Nov 2009 06:23:02 -0000\r\nX-Received: from unknown (HELO mail-ew0-f221.google.com) (209.85.219.221)\n  by mta1.grp.sp2.yahoo.com with SMTP; 7 Nov 2009 06:23:01 -0000\r\nX-Received: by ewy21 with SMTP id 21so1739525ewy.8\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 06 Nov 2009 22:23:00 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.86.72 with SMTP id v50mr1522223wee.184.1257574980843; Fri, \n\t06 Nov 2009 22:23:00 -0800 (PST)\r\nIn-Reply-To: &lt;4803DCA0-2135-4E94-B378-EB48CA97624E@...&gt;\r\nReferences: &lt;hd1c9j+b7gv@...&gt;\n\t &lt;CC739A68-1BB1-4C09-A735-1CE4F3316089@...&gt;\n\t &lt;b0ebafd10911061141o1beaab51rfbb7033d3674510d@...&gt;\n\t &lt;4803DCA0-2135-4E94-B378-EB48CA97624E@...&gt;\r\nDate: Sat, 7 Nov 2009 01:23:00 -0500\r\nMessage-ID: &lt;b0ebafd10911062223h15253a14x969f51811c8db260@...&gt;\r\nTo: Jan Algermissen &lt;algermissen1971@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Andrew Wahbe &lt;andrew.wahbe@...&gt;\r\nSubject: Re: [rest-discuss] Re: Service descriptions and legal contracts\r\nX-Yahoo-Group-Post: member; u=221173245; y=yEApPsWpGo_TXYUvbPi-4ITpZVbtBuOL1v4J8ue0zmH4SA4syg\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nOn Fri, Nov 6, 2009 at 3:17 PM, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt;\n&gt; On Nov 6, 2009, at 8:41 PM, Andrew Wahbe wrote:\n&gt;&gt;\n&gt;&gt; Ok so right out of the gate I have issues with this. &quot;Coding a client\n&gt;&gt; for a service&quot; seems unRESTful to me. Firefox is not coded for Google,\n&gt;&gt; Facebook or Amazon. It is coded for URIs, HTTP and HTML (and HTML&#39;s\n&gt;&gt; &quot;friends&quot; CSS, Javascript etc.).\n&gt;\n&gt; Ok, yes. I should have made the distinction between the &#39;user agent&#39; and the\n&gt; program that makes use of it. At least this is my mental model: you have a\n&gt; library that implements all the specs that make sense to implement (meaning:\n&gt; not only the ones for this service) and this piece is equivalent to the\n&gt; browser. Then, you need some piece of code that uses the user agent to\n&gt; interact with the service (or the Web for that matter). This piece of code\n&gt; is equivalent to the human being. Inside this code (or its configuration)\n&gt; one must manifest some expectations (e.g. that the search resource is there\n&gt; so the user agent can carry out the search and hand the result back to the\n&gt; program.\n\nYes this terminology is something worth getting consensus on. I was\nusing the terms &quot;client&quot; and &quot;underlying platform&quot; for your &quot;user\nagent&quot; and &quot;client program&quot; respectively.\n\nBut I still think there is a client program in the case of a web\nbrowser -- it is the window manager in the OS. Take the human being\nout of the system for a minute and think about how the web works. Then\ntry using that as the model for your own systems.\n\n&gt;\n&gt; If you want to get rid of that assumption you&#39;d have to come up with a way\n&gt; for the service to actually drive the client program (like a GUI app is\n&gt; driven by the GUI). However, this does not work because the client is a\n&gt; state machine on its own and cannot be entirely driven by the hyper,edia\n&gt; received from the server. At some point there must be &#39;invocations of goals&#39;\n&gt; by the client side program.\n&gt;\nSee my email that elaborates on CCXML. The hypermedia document can be\nseen as a description of a state machine for handling client program\nevents that is executed by the user agent. In response to those\nevents, messages/events can be sent back down to the client or HTTP\nrequests can be placed to the server. Often those requests to the\nserver cause a new state machine to be loaded by the user agent. This\nis not only a description of the execution of a CCXML browser, but\nalso a VoiceXML browser and an HTML browser. You just have to properly\ndefine the user agent and the client program to see it that way.\n\nFrom this perspective, the user agent is a dynamic mediator between\nthe client program&#39;s event model and the server&#39;s resource model. The\ncurrently loaded hypermedia document controls the behavior of the\nmediator. So if you are using the right media type, the client&#39;s\n&quot;goals&quot; are expressed in terms of the client program&#39;s event model and\ntranslated into actions on the server&#39;s resources by the user agent.\n\n&gt;\n&gt;&gt; Your client will only have code that\n&gt;&gt; has a notion of search invocation if it is inherent in the media type\n&gt;&gt; (including extensions and relations). But that is not necessary for\n&gt;&gt; search to work. The client could be performing a search without\n&gt;&gt; &quot;knowing&quot; it, because a combination of the media type, the current\n&gt;&gt; representation/state, and the client disposition and/or client side\n&gt;&gt; events have caused the search link to be followed. This is what\n&gt;&gt; happens when I use my browser to do a Google search. I don&#39;t see why\n&gt;&gt; this can&#39;t be the case for media types other than HTML (and it\n&gt;&gt; certainly would be for VoiceXML and CCXML).\n&gt;\n&gt; Yes, great model. But what is driving the whole thing? With the browser it\n&gt; is the human being that drives the interaction because she e.g. wants to buy\n&gt; a book. In the machine world you need a process that initiates a goal and\n&gt; this goal includes assumptions.\n&gt;\n&gt;\n&gt;&gt;\n&gt;&gt;&gt; If the service does not provide the\n&gt;&gt;&gt; search resource anymore the client will break (if you code it to expect\n&gt;&gt;&gt; that\n&gt;&gt;&gt; there is a search resource and sudden;y there is none what else could the\n&gt;&gt;&gt; code do?). Humans can work on a solution for the problem, software cannot\n&gt;&gt;&gt; (unless we go into AI of some form).\n&gt;&gt;\n&gt;&gt; I&#39;m not sure what is &quot;broken&quot; here. The service seems broken, but I&#39;m\n&gt;&gt; not sure if the client is broken -- you should be able to point it at\n&gt;&gt; any other service that supports the client&#39;s media type(s) and it\n&gt;&gt; should still work just fine.\n&gt;\n&gt; Yeah - and this is precisely what you cannot utter in a room full with the\n&gt; guys that assign the budget or care about the company being sued. Would you\n&gt; pay for Google&#39;s API and then, if part of the service disappears just go of\n&gt; to some other service on the Web?\n&gt;\nThis isn&#39;t a technical problem is it? The contract you are looking for\nhere is a legal one isn&#39;t it?\n\n&lt;snip&gt;\n&gt;\n&gt; Right. But as said above: there are a substantial number of people that\n&gt; won&#39;t buy into it. And often rightly so because when you assign budget to\n&gt; something. It is all about documenting the assumptions that might break. I\n&gt; do not see media types to be the means where this can be done. Especialy not\n&gt; when a service uses a combination of hypermedia semantics. Or how would you\n&gt; express that a service pronises to use a certain Atom extension? You could\n&gt; if you&#39;d define application/myatom and make the extension mandatory but this\n&gt; obviously breaks orthogonality.\n&gt;\n&lt;snip&gt;\n\nSo here&#39;s an extension of my earlier observation about media types\nbeing &quot;client specific&quot; standards. This model tends to produce a\nsituation where there are orders of magnitude more services than\nclients -- actually, you can argue that it is designed to do that.\nCompare the number of web browsers to the number of web sites.\n\nAlso, think of extensions as the evolution of the media type. A\nspecific combination of extensions can be thought of as a version of\nthe media type (and the versions might branch quite heavily). A\nversion of a client supports a version of the media type.\n\nIf you put these together, you get the contracts that are quite common\nin the web today. e.g. &quot;this service is designed to work with IE 8,\nFirefox 3+ and Safari 4+.&quot; Is this ideal? No. But so far the web\nhasn&#39;t been very successful at doing much better than this.\n\nAndrew\n\n"}}