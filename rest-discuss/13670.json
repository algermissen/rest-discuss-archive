{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"TLbNcBI8OuX0Ems6sAc0jMgiRDYvvQHoZQqQdYhrqKpBYuC1Bo-9qj5_uaFmncWqQn5HqVXg5pA-rWePK6FcTIia2uihj2TK0CUUBhdsiHONGlow9KQ2AFYh","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Steady State after 303?  (was Application state)","postDate":"1254665684","msgId":13670,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQzhBREQ0LjQwMDA3MDdAZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkxMDAzMTcyMTQwLjU2NmFmYjM4LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGhhN3RkOCszMW1qQGVHcm91cHMuY29tPgk8QTUwM0JEMzQtODY3My00MzUxLTlBQjktMTQ1NjcyQTA0Q0U2QG1hYy5jb20+IDwyMDA5MTAwMzE3MjE0MC41NjZhZmIzOC5lcmljQGJpc29uc3lzdGVtcy5uZXQ+"},"prevInTopic":13669,"nextInTopic":13671,"prevInTime":13669,"nextInTime":13671,"topicId":13627,"numMessagesInTopic":37,"msgSnippet":"Not necessarily: Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s). So,","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63219 invoked from network); 4 Oct 2009 14:14:49 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.re1.yahoo.com with QMQP; 4 Oct 2009 14:14:49 -0000\r\nX-Received: from unknown (HELO mail-ew0-f228.google.com) (209.85.219.228)\n  by mta1.grp.sp2.yahoo.com with SMTP; 4 Oct 2009 14:14:48 -0000\r\nX-Received: by ewy28 with SMTP id 28so7415843ewy.18\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 04 Oct 2009 07:14:47 -0700 (PDT)\r\nX-Received: by 10.211.130.19 with SMTP id h19mr5849881ebn.54.1254665687135;\n        Sun, 04 Oct 2009 07:14:47 -0700 (PDT)\r\nReturn-Path: &lt;amsmota@...&gt;\r\nX-Received: from ?10.44.18.194? (089-101-144186.ntlworld.ie [89.101.144.186])\n        by mx.google.com with ESMTPS id 5sm422617eyh.40.2009.10.04.07.14.45\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Sun, 04 Oct 2009 07:14:45 -0700 (PDT)\r\nMessage-ID: &lt;4AC8ADD4.4000707@...&gt;\r\nDate: Sun, 04 Oct 2009 15:14:44 +0100\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;, \n REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;ha7td8+31mj@...&gt;\t&lt;A503BD34-8673-4351-9AB9-145672A04CE6@...&gt; &lt;20091003172140.566afb38.eric@...&gt;\r\nIn-Reply-To: &lt;20091003172140.566afb38.eric@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------090904040009050204070309&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] Steady State after 303?  (was Application state)\r\nX-Yahoo-Group-Post: member; u=279478415; y=zHZ5DXqSmMQ5UAp1c8ixGCJoRPWo9d27wiRD4Ag9DuzTwA\r\nX-Yahoo-Profile: amsmota\r\n\r\n\r\n--------------090904040009050204070309\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\nNot necessarily:\n\n&quot;Unless the request method was HEAD, the entity of the response SHOULD \ncontain a short hypertext note with a hyperlink to the new URI(s).&quot;\n\nSo, it&#39;s up to the client to decide if it should follow the link or not. \nBecause all applications have at least one or a few well know URI, so a \nclient should be capable of deciding &quot;let&#39;s follow this redirect link, \nor assume there&#39;s nothing more to do here and let&#39;s go back to the \nentry-point of this app&quot;, for instance a menu page.\n\nNow, I noticed the surge on this thread of the term &quot;Steady-State&quot; and I \nsince I only remembered that term vaguelly, I went to &quot;the&quot; dissertation \nlooking for it. I found it 3 time, all in the same section and in two \nconsecutive paragraphs, that talk about performance and optimization.\n\nI&#39;m not going to quote the over-quoted sentence &quot;optimizations is the \nroot of all evils&quot; (damn, I just did) that is usually quoted out of \ncontext but I think it&#39;s applicable here.\n\nIt seems to me that from the point of  view of &quot;application development&quot; \n- that is my area of interest - there is no distinction at all between \n&quot;application state&quot; and &quot;application steady-state&quot;. That distinction is \nonly interesting from a point of view of network architecture - obvious \ncoupled with the applications that run on it.\n\nSo, that distinction should only be made at a late stage of application \ndevelopment, when all the functionalities of said application are in \nplace and testable. There is no point in distinguish then during \napplication design and development.\n\nSo I ask, why now the surge of this term? Did we shift from talking \nabout application development to network architecture, are we mixing \nboth,  or what is the purpose of explicitly changed from &quot;application \nstate&quot; to &quot;application steady-state&quot;? Or did I understood wrong the \nmeaning of &quot;steady-state&quot;?\n\n\n\n\n\nEric J. Bowman wrote:\n&gt;  \n&gt;\n&gt; Jan Algermissen wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; Suppose client retrieves an employee record\n&gt; &gt;\n&gt; &gt; GET /employees/552\n&gt; &gt;\n&gt; &gt; and then changes the record&#39;s surname with\n&gt; &gt;\n&gt; &gt; POST /employees/552/surname\n&gt; &gt;\n&gt; &gt; [new name]\n&gt; &gt;\n&gt; &gt; and the receives\n&gt; &gt;\n&gt; &gt; 303 See Other\n&gt; &gt; Location: /employees/552\n&gt; &gt;\n&gt; &gt; Is the client in a steady state now or only after a subsequent GET\n&gt; &gt; to / employees/552 to update the changed record representation?\n&gt; &gt;\n&gt;\n&gt; Only after. A redirect is not a steady-state containing a hypermedia\n&gt; representation presenting the user with a selection of further state\n&gt; transitions to choose from.\n&gt;\n&gt; -Eric\n&gt;\n&gt; &gt;\n&gt; &gt; Or does that question not make any sense in the absence of\n&gt; &gt; additional semantics beyond the HTTP specs?\n&gt; &gt;\n&gt; &gt; Jan\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; On Oct 3, 2009, at 6:16 PM, Ian wrote:\n&gt; &gt;\n&gt; &gt; &gt; Hi Christian\n&gt; &gt; &gt;\n&gt; &gt; &gt; The state of an order - whether it has zero line items, or five,\n&gt; &gt; &gt; is resource state, not application state. The state of the order\n&gt; &gt; &gt; as held in the http session in your example is resource state, not\n&gt; &gt; &gt; application state.\n&gt; &gt; &gt;\n&gt; &gt; &gt; A simple - perhaps overly simple - ordering protocol might be\n&gt; &gt; &gt; something like: new order created -&gt; adding line items -&gt; order\n&gt; &gt; &gt; completed -&gt; payment received -&gt; order dispatched.\n&gt; &gt; &gt;\n&gt; &gt; &gt; In the observable interactions between client and server, this\n&gt; &gt; &gt; protocol is never visible &quot;as such&quot;: it can only be viewed through\n&gt; &gt; &gt; the lens of resource state.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Over the course of a series of interactions, the\n&gt; &gt; &gt; &quot;application&quot; (the game being played out between the client and the\n&gt; &gt; &gt; server) will be in one or other of these states - as viewed from a\n&gt; &gt; &gt; &quot;God&#39;s eye&quot; point of view. Once the application state has\n&gt; &gt; &gt; progressed to &quot;order completed&quot;, for example, it&#39;s no longer\n&gt; &gt; &gt; possible to add manipulate resources so as to add new line items;\n&gt; &gt; &gt; it is, however, possible to manipulate resources such that the\n&gt; &gt; &gt; application state transitions to &quot;payment received&quot; (the client\n&gt; &gt; &gt; would do this by submitting a representation of a payment, perhaps).\n&gt; &gt; &gt;\n&gt; &gt; &gt; The client and the server cooperate to execute this protocol, but\n&gt; &gt; &gt; they do so by transferring representations of resource state, not\n&gt; &gt; &gt; representations of application state. Application state is never\n&gt; &gt; &gt; represented &quot;as such&quot;; rather, it&#39;s inferred by the client based\n&gt; &gt; &gt; on on current representations of resource state. If the application\n&gt; &gt; &gt; is in the &quot;order completed&quot; state, the representation of the order\n&gt; &gt; &gt; received by the client may very well include a link that has been\n&gt; &gt; &gt; annotated with the link relation value &quot;payment&quot;. This isn&#39;t a\n&gt; &gt; &gt; straightforward representation of application state, however: it&#39;s\n&gt; &gt; &gt; an &quot;invitation&quot; to the client to transfer a representation of a\n&gt; &gt; &gt; payment to this linked resource. As a side-effect of transferring\n&gt; &gt; &gt; this representation, the &quot;application&quot; may transition to &quot;payment\n&gt; &gt; &gt; received&quot;.\n&gt; &gt; &gt;\n&gt; &gt; &gt; What&#39;s important here is that the server is really only interested\n&gt; &gt; &gt; in maintaining resource state, which includes maintaining the\n&gt; &gt; &gt; integrity of the lifecycles of the resources under its control,\n&gt; &gt; &gt; and the invariants that hold between resources (if any). The\n&gt; &gt; &gt; server can&#39;t be sure the client will ever take that step of\n&gt; &gt; &gt; submitting a payment, so why bother holding onto application state?\n&gt; &gt; &gt; Application state is something that can be reconstructed &quot;after the\n&gt; &gt; &gt; fact&quot;, by a client, or omniscient observer, based on the\n&gt; &gt; &gt; disposition of the current set of resource representations.\n&gt; &gt; &gt;\n&gt; &gt; &gt; So the order representation is always a representation of resource\n&gt; &gt; &gt; state. Application state, that &quot;snapshot of the instance of\n&gt; &gt; &gt; execution of a protocol&quot;, can only be inferred or reconstructed\n&gt; &gt; &gt; from resource state.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Hope this is of some help. Apologies if I&#39;ve confused more than\n&gt; &gt; &gt; clarified; double apologies if I&#39;m just talking plain nonsense.\n&gt; &gt; &gt;\n&gt; &gt; &gt; ian\n&gt; &gt; &gt;\n&gt; &gt; &gt; --- In rest-discuss@yahoogroups.com \n&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt;, Kristian Nordal\n&gt; &gt; &gt; &lt;kristian.nordal@...&gt; wrote:\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; On Oct 2, 2009, at 10:55 PM, Ian wrote:\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt; --- In rest-discuss@yahoogroups.com \n&gt; &lt;mailto:rest-discuss%40yahoogroups.com&gt;, Mark Baker &lt;distobj@&gt; wrote:\n&gt; &gt; &gt;&gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt;&gt; On Fri, Oct 2, 2009 at 4:56 AM, Kristian Nordal\n&gt; &gt; &gt;&gt;&gt;&gt; &lt;kristian.nordal@&gt; wrote:\n&gt; &gt; &gt;&gt;&gt;&gt;&gt; I&#39;m also struggling with the difference between application\n&gt; &gt; &gt;&gt;&gt;&gt;&gt; state and\n&gt; &gt; &gt;&gt;&gt;&gt;&gt; server state (which I assume is the same as &quot;resource state&quot;).\n&gt; &gt; &gt;&gt;&gt;&gt;&gt; Can someone point me to a good definition of &quot;application\n&gt; &gt; &gt;&gt;&gt;&gt;&gt; state&quot;?\n&gt; &gt; &gt;&gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt;&gt; It&#39;s literally the *state* of the *application*. If you&#39;re\n&gt; &gt; &gt;&gt;&gt;&gt; looking at\n&gt; &gt; &gt;&gt;&gt;&gt; your bank balance, that&#39;s a different state than if you were\n&gt; &gt; &gt;&gt;&gt;&gt; preparing\n&gt; &gt; &gt;&gt;&gt;&gt; to submit a bill payment, and once you&#39;ve submitted the payment,\n&gt; &gt; &gt;&gt;&gt;&gt; you&#39;re in yet another state in the application state machine.\n&gt; &gt; &gt;&gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt;&gt; Mark.\n&gt; &gt; &gt;&gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt;\n&gt; &gt; &gt;&gt;&gt; Just to add to Mark&#39;s definition, and put it in the context of\n&gt; &gt; &gt;&gt;&gt; &quot;application&quot; and &quot;application protocol&quot;: if we think of an\n&gt; &gt; &gt;&gt;&gt; application as being computer behavior that achieves a particular\n&gt; &gt; &gt;&gt;&gt; goal, we can describe an application protocol as the specification\n&gt; &gt; &gt;&gt;&gt; of the legitimate interactions necessary to realize that behavior,\n&gt; &gt; &gt;&gt;&gt; and application state as a snapshot of the instance of execution\n&gt; &gt; &gt;&gt;&gt; of an application protocol.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Thanks for the definitions. I&#39;m still a bit confused though, so I&#39;m\n&gt; &gt; &gt;&gt; going to try to use an example:\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Let&#39;s say we have an client/ua that is filling out an order (order\n&gt; &gt; &gt;&gt; + line items). In a traditional web application, the order would\n&gt; &gt; &gt;&gt; be in the http session, and we would add/remove line items to that\n&gt; &gt; &gt;&gt; order, and finally place the order. In that case I clearly see\n&gt; &gt; &gt;&gt; that we are talking about application state that is placed on the\n&gt; &gt; &gt;&gt; server. The server keeps track of it, and it&#39;s literally the state\n&gt; &gt; &gt;&gt; of the client/ application.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; But if we were to store and address the order like any other\n&gt; &gt; &gt;&gt; resource,\n&gt; &gt; &gt;&gt; would that change the nature of the state? It would simply be\n&gt; &gt; &gt;&gt; another way of storing the same state, but nevertheless it would be\n&gt; &gt; &gt;&gt; &quot;resources&quot; with the same properties induced by the stateless\n&gt; &gt; &gt;&gt; constraint (visibility, reliability, and salability) - given that\n&gt; &gt; &gt;&gt; they\n&gt; &gt; &gt;&gt; were stored in the a way that make that possible. To me, this looks\n&gt; &gt; &gt;&gt; like exactly the same kind of state (application state), simply\n&gt; &gt; &gt;&gt; stored/\n&gt; &gt; &gt;&gt; modeled differently. But in that case I don&#39;t see how or if it\n&gt; &gt; &gt;&gt; violates the stateless constraint.\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; Would you say that the order in this example is always a &quot;snapshot\n&gt; &gt; &gt;&gt; of the instance execution of an application protocol&quot;, and that it\n&gt; &gt; &gt;&gt; will always be application state - no matter how it&#39;s modeled? And\n&gt; &gt; &gt;&gt; by placing it on the server it would be in violation of the REST\n&gt; &gt; &gt;&gt; principles, even though the stateless constraint is dealt with?\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;&gt; --\n&gt; &gt; &gt;&gt; Thanks,\n&gt; &gt; &gt;&gt; Kristian\n&gt; &gt; &gt;&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; ------------------------------------\n&gt; &gt; &gt;\n&gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; --------------------------------------\n&gt; &gt; Jan Algermissen\n&gt; &gt;\n&gt; &gt; Mail: algermissen@... &lt;mailto:algermissen%40acm.org&gt;\n&gt; &gt; Blog: http://algermissen.blogspot.com/ \n&gt; &lt;http://algermissen.blogspot.com/&gt;\n&gt; &gt; Home: http://www.jalgermissen.com &lt;http://www.jalgermissen.com&gt;\n&gt; &gt; --------------------------------------\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt; \n\n\r\n--------------090904040009050204070309\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta content=&quot;text/html;charset=ISO-8859-1&quot; http-equiv=&quot;Content-Type&quot;&gt;\n  &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot;&gt;\nNot necessarily:&lt;br&gt;\n&lt;br&gt;\n&quot;&lt;span class=&quot;Apple-style-span&quot;\n style=&quot;border-collapse: separate; color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;&quot;&gt;Unless\nthe request method was HEAD, the entity of the response SHOULD contain\na short hypertext note with a hyperlink to the new URI(s).&quot;&lt;br&gt;\n&lt;br&gt;\nSo, it&#39;s up to the client to decide if it should follow the link or\nnot. Because all applications have at least one or a few well know URI,\nso a client should be capable of deciding &quot;let&#39;s follow this redirect\nlink, or assume there&#39;s nothing more to do here and let&#39;s go back to\nthe entry-point of this app&quot;, for instance a menu page.&lt;br&gt;\n&lt;br&gt;\nNow, I noticed the surge on this thread of the term &quot;Steady-State&quot; and\nI since I only remembered that term vaguelly, I went to &quot;the&quot;\ndissertation looking for it. I found it 3 time, all in the same section\nand in two &lt;/span&gt;consecutive &lt;span class=&quot;Apple-style-span&quot;\n style=&quot;border-collapse: separate; color: rgb(0, 0, 0); font-family: &#39;Times New Roman&#39;; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;&quot;&gt;paragraphs,\nthat talk about performance and optimization. &lt;br&gt;\n&lt;br&gt;\nI&#39;m not going to quote the over-quoted sentence &quot;optimizations is the\nroot of all evils&quot; (damn, I just did) that is usually quoted out of\ncontext but I think it&#39;s applicable here.&lt;br&gt;\n&lt;br&gt;\nIt seems to me that from the point of&nbsp; view of &quot;application\ndevelopment&quot; - that is my area of interest - there is no distinction at\nall between &quot;application state&quot; and &quot;application steady-state&quot;. That\ndistinction is only interesting from a point of view of network\narchitecture - obvious coupled with the applications that run on it. &lt;br&gt;\n&lt;br&gt;\nSo, that distinction should only be made at a late stage of application\ndevelopment, when all the functionalities of said application are in\nplace and testable. There is no point in distinguish then during\napplication design and development.&lt;br&gt;\n&lt;br&gt;\nSo I ask, why now the surge of this term? Did we shift from talking\nabout application development to network architecture, are we mixing\nboth,&nbsp; or what is the purpose of explicitly changed from &quot;application\nstate&quot; to &quot;application steady-state&quot;? Or did I understood wrong the\nmeaning of &quot;steady-state&quot;?&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/span&gt;&lt;br&gt;\nEric J. Bowman wrote:\n&lt;blockquote cite=&quot;mid:20091003172140.566afb38.eric@...&quot;\n type=&quot;cite&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&nbsp;&lt;/span&gt;\n\n  &lt;div id=&quot;ygrp-text&quot;&gt;\n  &lt;p&gt;Jan Algermissen wrote:&lt;br&gt;\n  &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Suppose client retrieves an employee record&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; GET /employees/552&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; and then changes the record&#39;s surname with&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; POST /employees/552/&lt;wbr&gt;surname&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; [new name]&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; and the receives&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; 303 See Other&lt;br&gt;\n&gt; Location: /employees/552&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Is the client in a steady state now or only after a subsequent GET&lt;br&gt;\n&gt; to / employees/552 to update the changed record representation?&lt;br&gt;\n&gt; &lt;br&gt;\n  &lt;br&gt;\nOnly after. A redirect is not a steady-state containing a hypermedia&lt;br&gt;\nrepresentation presenting the user with a selection of further state&lt;br&gt;\ntransitions to choose from.&lt;br&gt;\n  &lt;br&gt;\n-Eric&lt;br&gt;\n  &lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Or does that question not make any sense in the absence of&lt;br&gt;\n&gt; additional semantics beyond the HTTP specs?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Jan&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; On Oct 3, 2009, at 6:16 PM, Ian wrote:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &gt; Hi Christian&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; The state of an order - whether it has zero line items, or\nfive,&lt;br&gt;\n&gt; &gt; is resource state, not application state. The state of the\norder&lt;br&gt;\n&gt; &gt; as held in the http session in your example is resource\nstate, not &lt;br&gt;\n&gt; &gt; application state.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; A simple - perhaps overly simple - ordering protocol might be\n  &lt;br&gt;\n&gt; &gt; something like: new order created -&gt; adding line items\n-&gt; order &lt;br&gt;\n&gt; &gt; completed -&gt; payment received -&gt; order dispatched.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; In the observable interactions between client and server,\nthis &lt;br&gt;\n&gt; &gt; protocol is never visible &quot;as such&quot;: it can only be viewed\nthrough &lt;br&gt;\n&gt; &gt; the lens of resource state.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Over the course of a series of interactions, the&lt;br&gt;\n&gt; &gt; &quot;application&quot; (the game being played out between the client\nand the&lt;br&gt;\n&gt; &gt; server) will be in one or other of these states - as viewed\nfrom a&lt;br&gt;\n&gt; &gt; &quot;God&#39;s eye&quot; point of view. Once the application state has&lt;br&gt;\n&gt; &gt; progressed to &quot;order completed&quot;, for example, it&#39;s no longer&lt;br&gt;\n&gt; &gt; possible to add manipulate resources so as to add new line\nitems;&lt;br&gt;\n&gt; &gt; it is, however, possible to manipulate resources such that the&lt;br&gt;\n&gt; &gt; application state transitions to &quot;payment received&quot; (the\nclient&lt;br&gt;\n&gt; &gt; would do this by submitting a representation of a payment,\nperhaps).&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; The client and the server cooperate to execute this protocol,\nbut &lt;br&gt;\n&gt; &gt; they do so by transferring representations of resource state,\nnot &lt;br&gt;\n&gt; &gt; representations of application state. Application state is\nnever &lt;br&gt;\n&gt; &gt; represented &quot;as such&quot;; rather, it&#39;s inferred by the client\nbased&lt;br&gt;\n&gt; &gt; on on current representations of resource state. If the\napplication&lt;br&gt;\n&gt; &gt; is in the &quot;order completed&quot; state, the representation of the\norder &lt;br&gt;\n&gt; &gt; received by the client may very well include a link that has\nbeen &lt;br&gt;\n&gt; &gt; annotated with the link relation value &quot;payment&quot;. This isn&#39;t\na &lt;br&gt;\n&gt; &gt; straightforward representation of application state, however:\nit&#39;s &lt;br&gt;\n&gt; &gt; an &quot;invitation&quot; to the client to transfer a representation of\na &lt;br&gt;\n&gt; &gt; payment to this linked resource. As a side-effect of\ntransferring &lt;br&gt;\n&gt; &gt; this representation, the &quot;application&quot; may transition to\n&quot;payment &lt;br&gt;\n&gt; &gt; received&quot;.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; What&#39;s important here is that the server is really only\ninterested &lt;br&gt;\n&gt; &gt; in maintaining resource state, which includes maintaining the\n  &lt;br&gt;\n&gt; &gt; integrity of the lifecycles of the resources under its\ncontrol,&lt;br&gt;\n&gt; &gt; and the invariants that hold between resources (if any). The&lt;br&gt;\n&gt; &gt; server can&#39;t be sure the client will ever take that step of&lt;br&gt;\n&gt; &gt; submitting a payment, so why bother holding onto application\nstate?&lt;br&gt;\n&gt; &gt; Application state is something that can be reconstructed\n&quot;after the&lt;br&gt;\n&gt; &gt; fact&quot;, by a client, or omniscient observer, based on the&lt;br&gt;\n&gt; &gt; disposition of the current set of resource representations.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; So the order representation is always a representation of\nresource &lt;br&gt;\n&gt; &gt; state. Application state, that &quot;snapshot of the instance of &lt;br&gt;\n&gt; &gt; execution of a protocol&quot;, can only be inferred or\nreconstructed&lt;br&gt;\n&gt; &gt; from resource state.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Hope this is of some help. Apologies if I&#39;ve confused more\nthan &lt;br&gt;\n&gt; &gt; clarified; double apologies if I&#39;m just talking plain\nnonsense.&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; ian&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; --- In &lt;a moz-do-not-send=&quot;true&quot;\n href=&quot;mailto:rest-discuss%40yahoogroups.com&quot;&gt;rest-discuss@&lt;wbr&gt;yahoogroups.&lt;wbr&gt;com&lt;/a&gt;,\nKristian Nordal &lt;br&gt;\n&gt; &gt; &lt;kristian.nordal@&lt;wbr&gt;...&gt; wrote:&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; On Oct 2, 2009, at 10:55 PM, Ian wrote:&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt; --- In &lt;a moz-do-not-send=&quot;true&quot;\n href=&quot;mailto:rest-discuss%40yahoogroups.com&quot;&gt;rest-discuss@&lt;wbr&gt;yahoogroups.&lt;wbr&gt;com&lt;/a&gt;,\nMark Baker &lt;distobj@&gt; wrote:&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; On Fri, Oct 2, 2009 at 4:56 AM, Kristian Nordal&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; &lt;kristian.nordal@&lt;wbr&gt;&gt; wrote:&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; I&#39;m also struggling with the difference\nbetween application&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; state and&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; server state (which I assume is the same as\n&quot;resource state&quot;).&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; Can someone point me to a good definition of\n&quot;application&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&gt; state&quot;?&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; It&#39;s literally the *state* of the *application*&lt;wbr&gt;.\nIf you&#39;re&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; looking at&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; your bank balance, that&#39;s a different state than\nif you were&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; preparing&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; to submit a bill payment, and once you&#39;ve\nsubmitted the payment,&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; you&#39;re in yet another state in the application\nstate machine.&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt; Mark.&lt;br&gt;\n&gt; &gt;&gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt;&lt;br&gt;\n&gt; &gt;&gt;&gt; Just to add to Mark&#39;s definition, and put it in the\ncontext of&lt;br&gt;\n&gt; &gt;&gt;&gt; &quot;application&quot; and &quot;application protocol&quot;: if we think\nof an&lt;br&gt;\n&gt; &gt;&gt;&gt; application as being computer behavior that achieves\na particular&lt;br&gt;\n&gt; &gt;&gt;&gt; goal, we can describe an application protocol as the\nspecification&lt;br&gt;\n&gt; &gt;&gt;&gt; of the legitimate interactions necessary to realize\nthat behavior,&lt;br&gt;\n&gt; &gt;&gt;&gt; and application state as a snapshot of the instance\nof execution&lt;br&gt;\n&gt; &gt;&gt;&gt; of an application protocol.&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; Thanks for the definitions. I&#39;m still a bit confused\nthough, so I&#39;m&lt;br&gt;\n&gt; &gt;&gt; going to try to use an example:&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; Let&#39;s say we have an client/ua that is filling out an\norder (order&lt;br&gt;\n&gt; &gt;&gt; + line items). In a traditional web application, the\norder would&lt;br&gt;\n&gt; &gt;&gt; be in the http session, and we would add/remove line\nitems to that&lt;br&gt;\n&gt; &gt;&gt; order, and finally place the order. In that case I\nclearly see&lt;br&gt;\n&gt; &gt;&gt; that we are talking about application state that is\nplaced on the&lt;br&gt;\n&gt; &gt;&gt; server. The server keeps track of it, and it&#39;s literally\nthe state&lt;br&gt;\n&gt; &gt;&gt; of the client/ application.&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; But if we were to store and address the order like any\nother &lt;br&gt;\n&gt; &gt;&gt; resource,&lt;br&gt;\n&gt; &gt;&gt; would that change the nature of the state? It would\nsimply be&lt;br&gt;\n&gt; &gt;&gt; another way of storing the same state, but nevertheless\nit would be&lt;br&gt;\n&gt; &gt;&gt; &quot;resources&quot; with the same properties induced by the\nstateless&lt;br&gt;\n&gt; &gt;&gt; constraint (visibility, reliability, and salability) -\ngiven that &lt;br&gt;\n&gt; &gt;&gt; they&lt;br&gt;\n&gt; &gt;&gt; were stored in the a way that make that possible. To me,\nthis looks&lt;br&gt;\n&gt; &gt;&gt; like exactly the same kind of state (application state),\nsimply &lt;br&gt;\n&gt; &gt;&gt; stored/&lt;br&gt;\n&gt; &gt;&gt; modeled differently. But in that case I don&#39;t see how or\nif it&lt;br&gt;\n&gt; &gt;&gt; violates the stateless constraint.&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; Would you say that the order in this example is always a\n&quot;snapshot&lt;br&gt;\n&gt; &gt;&gt; of the instance execution of an application protocol&quot;,\nand that it&lt;br&gt;\n&gt; &gt;&gt; will always be application state - no matter how it&#39;s\nmodeled? And&lt;br&gt;\n&gt; &gt;&gt; by placing it on the server it would be in violation of\nthe REST&lt;br&gt;\n&gt; &gt;&gt; principles, even though the stateless constraint is dealt\nwith?&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&gt; --&lt;br&gt;\n&gt; &gt;&gt; Thanks,&lt;br&gt;\n&gt; &gt;&gt; Kristian&lt;br&gt;\n&gt; &gt;&gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; ------------&lt;wbr&gt;---------&lt;wbr&gt;---------&lt;wbr&gt;------&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Yahoo! Groups Links&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; ------------&lt;wbr&gt;---------&lt;wbr&gt;---------&lt;wbr&gt;--------&lt;br&gt;\n&gt; Jan Algermissen&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Mail: &lt;a moz-do-not-send=&quot;true&quot;\n href=&quot;mailto:algermissen%40acm.org&quot;&gt;algermissen@&lt;wbr&gt;acm.org&lt;/a&gt;&lt;br&gt;\n&gt; Blog: &lt;a moz-do-not-send=&quot;true&quot;\n href=&quot;http://algermissen.blogspot.com/&quot;&gt;http://algermissen.&lt;wbr&gt;blogspot.&lt;wbr&gt;com/&lt;/a&gt;&lt;br&gt;\n&gt; Home: &lt;a moz-do-not-send=&quot;true&quot; href=&quot;http://www.jalgermissen.com&quot;&gt;http://www.jalgermi&lt;wbr&gt;ssen.com&lt;/a&gt;&lt;br&gt;\n&gt; ------------&lt;wbr&gt;---------&lt;wbr&gt;---------&lt;wbr&gt;--------&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n  &lt;/p&gt;\n  &lt;/div&gt;\n&lt;!--End group email --&gt; &lt;/blockquote&gt;\n&lt;br&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------090904040009050204070309--\r\n\n"}}