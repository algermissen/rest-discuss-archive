{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"Z5umo5vP5aafWxSrdIPjYAliGhsSEJrffapJXiE_X_r5QEP1ChQpH9ZX7fpfc4e9HYHsfVf0YyXpDulfgQORXTMK2YbvgQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [xml-dev] Is XML-REST more scalable than SOAP?","postDate":"1020803236","msgId":1215,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRDgzOEE0LjZBQjVDRTc3QHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDRDgxRUVBLjQ0MDk1M0NCQG1pdHJlLm9yZz4="},"prevInTopic":0,"nextInTopic":1216,"prevInTime":1214,"nextInTime":1216,"topicId":1215,"numMessagesInTopic":2,"msgSnippet":"... Roger, detailed discussion should be redirected to the rest-discuss list because people on xml-dev are tired of the repitition that arises from teaching","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 7 May 2002 20:29:44 -0000\r\nReceived: (qmail 40483 invoked from network); 7 May 2002 20:26:19 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 7 May 2002 20:26:19 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.scd.yahoo.com with SMTP; 7 May 2002 20:26:19 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g47KQFb31564;\n\tTue, 7 May 2002 13:26:15 -0700\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g47KQEe03518;\n\tTue, 7 May 2002 13:26:14 -0700\r\nMessage-ID: &lt;3CD838A4.6AB5CE77@...&gt;\r\nDate: Tue, 07 May 2002 13:27:16 -0700\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: &quot;Roger L. Costello&quot; &lt;costello@...&gt;, xml-dev@...\r\nCc: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: Re: [xml-dev] Is XML-REST more scalable than SOAP?\r\nReferences: &lt;3CD81EEA.440953CB@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Perlmx-Spam: Gauge=, Probability=0%, Report=&quot;INTERNAL_HOST&quot;\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nReply-To: &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;Roger L. Costello&quot; wrote:\n&gt; \n&gt; I am just ramping up on REST.  Please forgive me if my\n&gt; questions/comments are naive.\n\nRoger, detailed discussion should be redirected to the rest-discuss list\nbecause people on xml-dev are tired of the repitition that arises from\nteaching REST to new people as they become interested in it.\n\n&gt;...\n&gt; Now consider the case where web sites serve up XML not HTML (I shall\n&gt; refer to this as XML-REST).  Suppose that the XML is programmatically\n&gt; processed.  The HTTP methods (GET, POST, PUT, etc) provide a nice set of\n&gt; **access methods** for getting and putting the XML data.  Thus,\n&gt; **accessibility** is scalable as it is on the order of linear.  However,\n&gt; **processing** the XML data still needs customized code (just like\n&gt; machine processing of HTML requires custom code).  I therefore conclude\n&gt; that XML-REST is no more scalable than SOAP.\n\nYes, this is an important insight. But the linear factor is also\nimportant. I believe that it is much easier to standardize XML\nvocabularies within and between industries than it is to share APIs or\nmessaging interfaces or whatever you want to call them. HTML is merely\nan extreme example of this. The widespread success of RSS is a second\nexample. (might be interesting to try to understand why RSS is so much\nmore popular on the &quot;public Internet&quot; than is XMLNews...) Obviously\n&quot;chemical ML&quot; is going to be much less widespread than HTML but I have\nmuch more hope that Bayer and 3M would share &quot;chemical ML&quot; than that\nthey would agree on a wire-protocol for describing chemicals. There are\na variety of reasons but one reason is that agreeing on a wire-protocol\nis much closer to agreeing on a *business model* than is agreeing on an\nXML vocabulary.\n\n&gt;...\n&gt; \n&gt; How can we make XML-REST scalable?  One solution would be to require\n&gt; every web site to serve up the same type of XML documents, i.e., have a\n&gt; universal Schema that all XML documents conform to.  Obviously this is\n&gt; not a very attractive solution.  The other solution is to have web sites\n&gt; serve up documents whose meaning can be dynamically &quot;discovered&quot;.  I\n&gt; believe that RDF is the only XML technology that enables dynamic\n&gt; understanding of content.  Thus, the cornerstone for a scalable,\n&gt; machine-processable web services architecture is:\n&gt; \n&gt; 1. The HTTP access methods - GET, POST, PUT, etc\n&gt; 2. A dynamically understandable vocabulary, such as RDF.\n\nYes, this is the approach Mark Baker takes. As I am not (yet?) an RDF\n&quot;believer&quot; I see it more as a spectrum: as we understand problem domains\nmore and more, we migrate more and more stuff from &quot;the code&quot; into\ndeclarative formats that describe the data. RDF fans think that RDF is\nthe declarative &quot;uber-format&quot;. We&#39;ll see. Maybe.\n\nIf they are wrong, I still expect dozens of declarative languages like\nXML Query, XSLT etc. to mature into powerful tools for bootstrapping\nunderstanding of a vocabulary. (consider for example an XSLT associated\nwith one industry standard purchase order vocabulary that translates it\ninto another PO vocabulary on demand -- easy to model in an\nindustry-neutral way with URIs and XML).\n\nOne reason I argue against the &quot;standard web services&quot; model because it\nmoves the very first bit of the problem from the domain of declarations\ninto the domain of code. I.e. to even get the data you need to write\ncode. That&#39;s a serious impediment to further exploration down the\ndeclarative path. If XML Query turns out to be extremely wonderful and\npowerful, this fork in the road should come into even greater focus.\n\n Paul Prescod\n\n"}}