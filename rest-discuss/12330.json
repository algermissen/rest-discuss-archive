{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":209043068,"authorName":"Solomon Duskis","from":"Solomon Duskis &lt;sduskis@...&gt;","profile":"sduskis","replyTo":"SENDER","senderId":"_b_sABqkgrLdX13SFYg2n_Y3fs_a9L-XJr0mac-oi2GG1mZwAOP0kotV-OoOe9xoP3eYEgMf5FaLeFa8BIQ7GPweVn70vW-Aqg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HATEOAS & REST APIs - back to basics","postDate":"1238168955","msgId":12330,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU1YzYwZTM3MDkwMzI3MDg0OXEyNDFhZmQ2M3JhNzRhY2YzZmZiN2NkMmQyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ5Q0NFRjMwLjQwNTAwQHJlZGhhdC5jb20+","referencesHeader":"PDU1YzYwZTM3MDkwMzI2MDkwOHE3NzlhMTI0NHEzMjM4YWZkZDRjMzJkZDUwQG1haWwuZ21haWwuY29tPgkgPDQ5Q0NFRjMwLjQwNTAwQHJlZGhhdC5jb20+"},"prevInTopic":12329,"nextInTopic":12331,"prevInTime":12329,"nextInTime":12331,"topicId":12327,"numMessagesInTopic":9,"msgSnippet":"... Specific Interactions do need some predetermined flows, but the specifics of the communication (i.e. here s the URL, and here s the headers for ","rawEmail":"Return-Path: &lt;sduskis@...&gt;\r\nX-Sender: sduskis@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 26737 invoked from network); 27 Mar 2009 15:49:28 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m5.grp.sp2.yahoo.com with QMQP; 27 Mar 2009 15:49:28 -0000\r\nX-Received: from unknown (HELO mail-qy0-f129.google.com) (209.85.221.129)\n  by mta2.grp.re1.yahoo.com with SMTP; 27 Mar 2009 15:49:25 -0000\r\nX-Received: by qyk35 with SMTP id 35so1955161qyk.19\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 27 Mar 2009 08:49:25 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.229.100.20 with SMTP id w20mr952383qcn.24.1238168955386; Fri, \n\t27 Mar 2009 08:49:15 -0700 (PDT)\r\nIn-Reply-To: &lt;49CCEF30.40500@...&gt;\r\nReferences: &lt;55c60e370903260908q779a1244q3238afdd4c32dd50@...&gt;\n\t &lt;49CCEF30.40500@...&gt;\r\nDate: Fri, 27 Mar 2009 11:49:15 -0400\r\nMessage-ID: &lt;55c60e370903270849q241afd63ra74acf3ffb7cd2d2@...&gt;\r\nTo: Bill Burke &lt;bburke@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=0016364ed5dec4209304661bacad\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Solomon Duskis &lt;sduskis@...&gt;\r\nSubject: Re: [rest-discuss] HATEOAS & REST APIs - back to basics\r\nX-Yahoo-Group-Post: member; u=209043068; y=b7anrGbRTAlmpo46uEQpDyZfr75wKijw02Un5UB50IR0kA\r\nX-Yahoo-Profile: sduskis\r\n\r\n\r\n--0016364ed5dec4209304661bacad\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nOn Fri, Mar 27, 2009 at 11:22 AM, Bill Burke &lt;bburke@...&gt; wrote:\n\n&gt; =\r\nI was thinking about this  alot more last night.  I&#39;m not sure you need\n&gt; t=\r\nhis type of markup language.  Computers aren&#39;t humans.  While a human can\n&gt;=\r\n look at a web page and figure out how to enter information on the form\n&gt; t=\r\nhere, a piece of code can&#39;t.  For code, everything needs to be mostly\n&gt; pre=\r\ndetermined and the interactions agreed upon before hand.\n&gt;\n\nSpecific Intera=\r\nctions do need some predetermined flows, but the specifics of\nthe communica=\r\ntion (i.e. here&#39;s the URL, and here&#39;s the headers for\ncontent-type...) don&#39;=\r\nt need to be.\n\nAlso, there are plenty of companies that built empires based=\r\n on knowing how\nto crawl HTML.  In other words, with a ML, a piece of code =\r\ncan figure out\nhow to do some pretty interesting aggregation.  For example,=\r\n let&#39;s say an\nenterprise has a whole bunch of semi-interconnected APIs base=\r\nd on this ML.\nI can conceive of a central API aggregator that crawls those =\r\nAPIs and\ncreates a dynamic registry of available functionality.  There can =\r\nbe a whole\nbunch of interesting applications once we &quot;engineer for serendip=\r\nity.&quot;\n\nI guess what I&#39;m saying is that an atom:link should be good enough. =\r\n The\n&gt; href defines the location on the network.  The media type cements th=\r\ne\n&gt; contract.\n&gt;\n&gt; A schema for the form would be good though, I think (Coul=\r\nd just be HTML\n&gt; form description or some subset of that).  Append the sche=\r\nma ID to the form\n&gt; when you send it, just like we do for XML.\n&gt;\n\nI agree w=\r\nith this... forms are good.  However, I think that API ML will need\na re-im=\r\nagining of HTML forms.  It could benefit from fields that describe\nhow to f=\r\nill in a URL template (&lt;form action=3D&quot;/account/{accountId}&quot; &lt;select\nname=\r\n=3D&quot;accountId&quot; destination=3D&quot;urltemplate&quot;&gt;...), or even HTTP headers (&lt;for=\r\nm\n..&gt;&lt;select name=3D&quot;contentType&quot; destination=3D&quot;header&quot;\ndestination-detail=\r\n=3D&quot;Content-Type&quot;&gt;&lt;option name=3D&quot;xml&quot;\nvalue=3D&quot;application/xml&quot;&gt;)...\n\n\n&gt;\n&gt;=\r\n Content-Type: application/x-www-form-urlencoded\n&gt;\n&gt; form-schema-id=3Dhttp:=\r\n//...\n&gt; name=3Dvalue\n&gt; name2=3Dvalue\n&gt; name3=3Dvalue\n&gt;\n&gt; Or create a new mi=\r\nme type that allows you to specify the form schema id as\n&gt; an attribute:\n&gt;\n=\r\n&gt;\n&gt; Content-Type: application/apiml;form-schema=3Dhttp://...\n&gt;\n&gt; name=3Dval=\r\nue\n&gt; name2=3Dvalue\n&gt; name3=3Dvalue\n&gt;\n&gt;\n&gt; Solomon Duskis wrote:\n&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; H=\r\ni guys,\n&gt;&gt;\n&gt;&gt; I put together a series of blog entries with an idea on how t=\r\no construct a\n&gt;&gt; HATEOAS REST API.  The core of the idea is that the curren=\r\nt REST APIs have\n&gt;&gt; some AJAXy (2006 - 2009) types of optimizations, but do=\r\nn&#39;t take advantage of\n&gt;&gt; HTML&#39;s more basic capabilities (~1995 - now) that =\r\nare applicable to HATEOAS.\n&gt;&gt;\n&gt;&gt; Using that basic idea, I tried to figure o=\r\nut how to take advantage of HTML\n&gt;&gt; and Browser idioms in a REST API settin=\r\ng.\n&gt;&gt;\n&gt;&gt; The road to Real REST APIs:\n&gt;&gt; http://www.jroller.com/Solomon/entr=\r\ny/the_road_to_real_rest &lt;\n&gt;&gt; http://www.jroller.com/Solomon/entry/the_road_=\r\nto_real_rest&gt;\n&gt;&gt; Proposal: REST/HATEOAS Java client:\n&gt;&gt; http://www.jroller.=\r\ncom/Solomon/entry/proposal_rest_hateaos_java_client &lt;\n&gt;&gt; http://www.jroller=\r\n.com/Solomon/entry/proposal_rest_hateaos_java_client&gt;\n&gt;&gt; REST - HATEOAS Cli=\r\nent communication:\n&gt;&gt; http://www.jroller.com/Solomon/entry/rest_hateoas_cli=\r\nent_communication &lt;\n&gt;&gt; http://www.jroller.com/Solomon/entry/rest_hateoas_cl=\r\nient_communication&gt;\n&gt;&gt;\n&gt;&gt; I&#39;m hoping to get feedback from this illustrious =\r\ncrowd on the following:\n&gt;&gt;\n&gt;&gt; 1) does the idea fully implement REST, includ=\r\ning HATEOAS\n&gt;&gt; 2) is this idea implementable\n&gt;&gt; 3) future direction for the=\r\n idea\n&gt;&gt;\n&gt;&gt; Any feedback (even &quot;it sucks, here&#39;s why...&quot;) would be apprecia=\r\nted.  Note\n&gt;&gt; that it is a blog, and not a polished article... I don&#39;t mean=\r\n to provide\n&gt;&gt; flaim-bait, but it still happens :)\n&gt;&gt;\n&gt;&gt; -Solomon\n&gt;&gt;\n&gt;&gt; \n&gt;&gt;=\r\n\n&gt;\n&gt; --\n&gt; Bill Burke\n&gt; JBoss, a division of Red Hat\n&gt; http://bill.burkecent=\r\nral.com\n&gt;\n\r\n--0016364ed5dec4209304661bacad\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Fri, Mar 27, 2009 at 11:22 AM, Bill B=\r\nurke &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:bburke@...&quot;&gt;bburke@redh=\r\nat.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;=\r\nborder-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; paddi=\r\nng-left: 1ex;&quot;&gt;\nI was thinking about this =A0alot more last night. =A0I&#39=\r\n;m not sure you need this type of markup language. =A0Computers aren&#39;t =\r\nhumans. =A0While a human can look at a web page and figure out how to enter=\r\n information on the form there, a piece of code can&#39;t. =A0For code, eve=\r\nrything needs to be mostly predetermined and the interactions agreed upon b=\r\nefore hand.&lt;br&gt;\n\n&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Specific Interactions do need some p=\r\nredetermined flows, but the specifics of the communication (i.e. here&#39;s=\r\n the URL, and here&#39;s the headers for content-type...) don&#39;t need to=\r\n be.&lt;br&gt;&lt;br&gt;\nAlso, there are plenty of companies that built empires based o=\r\nn knowing how to crawl HTML.=A0 In other words, with a ML, a piece of code =\r\ncan figure out how to do some pretty interesting aggregation.=A0 For exampl=\r\ne, let&#39;s say an enterprise has a whole bunch of semi-interconnected API=\r\ns based on this ML.=A0 I can conceive of a central API aggregator that craw=\r\nls those APIs and creates a dynamic registry of available functionality.=A0=\r\n There can be a whole bunch of interesting applications once we &quot;engin=\r\neer for serendipity.&quot;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; =\r\nstyle=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8=\r\nex; padding-left: 1ex;&quot;&gt;\nI guess what I&#39;m saying is that an atom:link s=\r\nhould be good enough. =A0The href defines the location on the network. =A0T=\r\nhe media type cements the contract.&lt;br&gt;\n&lt;br&gt;\nA schema for the form would be=\r\n good though, I think (Could just be HTML form description or some subset o=\r\nf that). =A0Append the schema ID to the form when you send it, just like we=\r\n do for XML.&lt;br&gt;\n&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I agree with this... forms are good.=\r\n=A0 However, I think that API ML will need a re-imagining of HTML forms.=A0=\r\n It could benefit from fields that describe how to fill in a URL template (=\r\n&lt;form action=3D&quot;/account/{accountId}&quot; &lt;select name=3D&quot;=\r\naccountId&quot; destination=3D&quot;urltemplate&quot;&gt;...), or even HTTP=\r\n headers (&lt;form ..&gt;&lt;select name=3D&quot;contentType&quot; destinat=\r\nion=3D&quot;header&quot; destination-detail=3D&quot;Content-Type&quot;&gt;&=\r\nlt;option name=3D&quot;xml&quot; value=3D&quot;application/xml&quot;&gt;)..=\r\n.&lt;br&gt;\n=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px =\r\nsolid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;&lt;b=\r\nr&gt;\nContent-Type: application/x-www-form-urlencoded&lt;br&gt;\n&lt;br&gt;\nform-schema-id=\r\n=3Dhttp://...&lt;br&gt;\nname=3Dvalue&lt;br&gt;\nname2=3Dvalue&lt;br&gt;\nname3=3Dvalue&lt;br&gt;\n&lt;br&gt;=\r\n\nOr create a new mime type that allows you to specify the form schema id as=\r\n an attribute:&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nContent-Type: application/apiml;form-schema=3D=\r\nhttp://...&lt;br&gt;\n&lt;br&gt;\nname=3Dvalue&lt;br&gt;\nname2=3Dvalue&lt;br&gt;\nname3=3Dvalue&lt;br&gt;\n&lt;b=\r\nr&gt;\n&lt;br&gt;\nSolomon Duskis wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=\r\n=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; p=\r\nadding-left: 1ex;&quot;&gt;&lt;div class=3D&quot;im&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\nHi guys,&lt;br&gt;\n&lt;br&gt;\nI put tog=\r\nether a series of blog entries with an idea on how to construct a HATEOAS R=\r\nEST API. =A0The core of the idea is that the current REST APIs have some AJ=\r\nAXy (2006 - 2009) types of optimizations, but don&#39;t take advantage of H=\r\nTML&#39;s more basic capabilities (~1995 - now) that are applicable to HATE=\r\nOAS.&lt;br&gt;\n\n&lt;br&gt;\nUsing that basic idea, I tried to figure out how to take adv=\r\nantage of HTML and Browser idioms in a REST API setting.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nThe=\r\n road to Real REST APIs: &lt;a href=3D&quot;http://www.jroller.com/Solomon/entry/th=\r\ne_road_to_real_rest&quot; target=3D&quot;_blank&quot;&gt;http://www.jroller.com/Solomon/entry=\r\n/the_road_to_real_rest&lt;/a&gt; &lt;&lt;a href=3D&quot;http://www.jroller.com/Solomon/en=\r\ntry/the_road_to_real_rest&quot; target=3D&quot;_blank&quot;&gt;http://www.jroller.com/Solomon=\r\n/entry/the_road_to_real_rest&lt;/a&gt;&gt;&lt;br&gt;\n\nProposal: REST/HATEOAS Java clien=\r\nt: &lt;a href=3D&quot;http://www.jroller.com/Solomon/entry/proposal_rest_hateaos_ja=\r\nva_client&quot; target=3D&quot;_blank&quot;&gt;http://www.jroller.com/Solomon/entry/proposal_=\r\nrest_hateaos_java_client&lt;/a&gt; &lt;&lt;a href=3D&quot;http://www.jroller.com/Solomon/=\r\nentry/proposal_rest_hateaos_java_client&quot; target=3D&quot;_blank&quot;&gt;http://www.jroll=\r\ner.com/Solomon/entry/proposal_rest_hateaos_java_client&lt;/a&gt;&gt;&lt;br&gt;\n\nREST - =\r\nHATEOAS Client communication: &lt;a href=3D&quot;http://www.jroller.com/Solomon/ent=\r\nry/rest_hateoas_client_communication&quot; target=3D&quot;_blank&quot;&gt;http://www.jroller.=\r\ncom/Solomon/entry/rest_hateoas_client_communication&lt;/a&gt; &lt;&lt;a href=3D&quot;http=\r\n://www.jroller.com/Solomon/entry/rest_hateoas_client_communication&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://www.jroller.com/Solomon/entry/rest_hateoas_client_commun=\r\nication&lt;/a&gt;&gt;&lt;div class=3D&quot;im&quot;&gt;\n&lt;br&gt;\n&lt;br&gt;\nI&#39;m hoping to get feedback =\r\nfrom this illustrious crowd on the following:&lt;br&gt;\n&lt;br&gt;\n1) does the idea ful=\r\nly implement REST, including HATEOAS&lt;br&gt;\n2) is this idea implementable&lt;br&gt;\n=\r\n3) future direction for the idea&lt;br&gt;\n&lt;br&gt;\nAny feedback (even &quot;it sucks=\r\n, here&#39;s why...&quot;) would be appreciated. =A0Note that it is a blog,=\r\n and not a polished article... I don&#39;t mean to provide flaim-bait, but =\r\nit still happens :)&lt;br&gt;\n&lt;br&gt;\n-Solomon&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\n&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br=\r\n&gt;\n-- &lt;br&gt;\nBill Burke&lt;br&gt;\nJBoss, a division of Red Hat&lt;br&gt;\n&lt;a href=3D&quot;http:/=\r\n/bill.burkecentral.com&quot; target=3D&quot;_blank&quot;&gt;http://bill.burkecentral.com&lt;/a&gt;&lt;=\r\nbr&gt;\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0016364ed5dec4209304661bacad--\r\n\n"}}