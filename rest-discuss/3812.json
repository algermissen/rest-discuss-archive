{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"&quot;Seairth Jacobs&quot; &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"r-qFfZ70t17nU12eodISA6T2emsSv0INfvjsdBVb5CqxIbbfTm5xTsjKzX4b_rQUHjncHgcefgvSDTCGUavTA7_owYgMeTh0dh9DNkE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"HTTP 4xx response entities","postDate":"1059616079","msgId":3812,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNzkwMWMzNTcwNSRjNWM3YmI0MCRhMDAwYThjMEBTZWFpcnRoQTMxPg=="},"prevInTopic":0,"nextInTopic":3816,"prevInTime":3811,"nextInTime":3813,"topicId":3812,"numMessagesInTopic":6,"msgSnippet":"Typically, entities in a 4xx response have been html messages giving details of the error.  This is fine if the client is a web browser, but more or less ","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 8062 invoked from network); 31 Jul 2003 01:48:00 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m14.grp.scd.yahoo.com with QMQP; 31 Jul 2003 01:48:00 -0000\r\nReceived: from unknown (HELO lakemtao02.cox.net) (68.1.17.243)\n  by mta3.grp.scd.yahoo.com with SMTP; 31 Jul 2003 01:48:00 -0000\r\nReceived: from SeairthA31 ([68.96.198.51]) by lakemtao02.cox.net\n          (InterMail vM.5.01.04.05 201-253-122-122-105-20011231) with SMTP\n          id &lt;20030731014758.MCMO24359.lakemtao02.cox.net@SeairthA31&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Wed, 30 Jul 2003 21:47:58 -0400\r\nMessage-ID: &lt;007901c35705$c5c7bb40$a000a8c0@SeairthA31&gt;\r\nTo: &quot;rest-discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: HTTP 4xx response entities\r\nDate: Wed, 30 Jul 2003 21:47:59 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nFrom: &quot;Seairth Jacobs&quot; &lt;seairth@...&gt;\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\nTypically, entities in a 4xx response have been html messages giving details\nof the error.  This is fine if the client is a web browser, but more or less\nuseless if the client doesn&#39;t work with html.  For instance, suppose you\nhave a client that GETs, POSTs, PUTs, and DELETEs XML documents.  If a PUT\nfails, then an appropriate error response must be returned (e.g. 403\nForbidden).  Ideally, the response entity would given an indication of what\nwent wrong and the format of the entity would be something that the client\nunderstood.  In this case, it makes sense that the response entity would\nlikely be XML since it was the content-type of the request entity.\n\nSo, where to go from here?  Is there a specification for conveying &quot;error&quot;\ninformation? If not, I would like to propose the following:\n\nThe general format would be something like:\n\n&lt;responseMetadata level=&quot;&quot; code=&quot;&quot;&gt;\n    details\n&lt;/responseMetadata&gt;\n\n&quot;level&quot; can be either &quot;HTTP&quot; or &quot;APPLICATION&quot;.  &quot;HTTP&quot; would be used to\nprovide extended response information beyond what HTTP currently allows.\nFor instance, if the response were 406 (Not Acceptable), the details could\nlist the possible content-types that could be returned. &quot;APPLICATION&quot; would\nbe used to provide extended response information about the processing\napplication.  For instance, when the PUT of an XML document fails due to an\ninvalid value, this level would be used to indicate the failure was not at\nthe HTTP level.\n\n    Note: &quot;realm&quot; or &quot;type&quot; may be a better name than &quot;level&quot;.\n\n&quot;code&quot; is a akin to an error number.  The type of code used depends on the\nvalue of &quot;level&quot;.  If level=&quot;HTTP&quot;, then the code would be the same as the\nHTTP response code (e.g., if a 403 response is sent, then code=&quot;403&quot;).  If\nlevel=&quot;APPLICATION&quot;, then the possible values of code are\napplication-specific.\n\n    Note: Maybe for level=&quot;HTTP&quot;, the &quot;code&quot; would be left off, as it is\nredundant.\n\nThe &quot;details&quot; would be additional markup specific to the level and code\ngiven.  In the case of level=&quot;HTTP&quot;, this specification would be fleshed out\nto include &quot;standard&quot; markup for each response code (if there is any).  For\nlevel=&quot;APPLICATION&quot;, the nature of the markup is entirely\napplication-specific.\n\nFor example:\n\n1) POST an &quot;application/xml&quot; document returns:\n\nHTTP/1.1 403 Forbidden\nContent-Type: application/responseMetadata+xml\n\n&lt;responseMetadata level=&quot;APPLICATION&quot; code=&quot;14&quot;&gt;\n    &lt;!-- code=&quot;14&quot; indicates a missing element in\n        the request. In this case, &quot;identity&quot;. --&gt;\n    &lt;element name=&quot;identity&quot;/&gt;\n&lt;/responseMetadata&gt;\n\n2) GET an &quot;text/oddball&quot; document returns:\n\nHTTP/1.1 406 Not Acceptable\nContent-Type: application/responseMetadata+xml\n\n&lt;responseMetadata level=&quot;HTTP&quot;&gt;\n    &lt;!-- listed in order of preference? --&gt;\n    &lt;content-type value=&quot;text/xml&quot;/&gt;\n    &lt;content-type value=&quot;application/xml&quot;/&gt;\n    &lt;content-type value=&quot;image/gif&quot;/&gt;\n    &lt;content-type value=&quot;text/html&quot;/&gt;\n&lt;/responseMetadata&gt;\n\n\n\nAdditional notes:\n\n1) This could also be used for 5xx responses.\n\n2) This could technique *could* be used to respond to OPTIONS request (with\na 200 response).  For level=&quot;HTTP&quot;, additional information about the list of\nunderstood request headers and their possible values could be given.  For\nlevel=&quot;APPLICATION&quot;, additional application-specific information about the\nresource could be given.\n\n3) Though this response could be used for requests other than POSTing and\nPUTing of XML documents, an additional level of &quot;XML&quot; may be provided, where\na series of codes and detail would be provided which correspond to the\nwell-formedness rules in the XML specification.  Is there maybe a list like\nthis already?\n\nAt any rate, you all get the idea... what do you think?\n\n---\nSeairth Jacobs\nseairth@...\n\n\n"}}