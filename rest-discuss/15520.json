{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"4q01PsTqs4Xd_5iJm8D1r1izuPFwqxZRjvZL4Z6Tp1d0Fb7on4Wml69auzhjlVpGVBB-qx9hJtBJ9iOfHrCVIIHDiLx21KhWyQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS","postDate":"1275529295","msgId":15520,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlsdHVEOVczbWs0ejZLVWJPYW1BVXByS1RubGdjMUN1TXB3aVFhU0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlueFJUNUdvRm1sb2E4UEQtY3VLblYzQVBQMkprR0x6bjA3a25iMEBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlraVhveXd6dDEwTTQ4NGowY2ZaRVJRbjZqLUdUYkFsV0pEY2RNOUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlueFJUNUdvRm1sb2E4UEQtY3VLblYzQVBQMkprR0x6bjA3a25iMEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15519,"nextInTopic":15521,"prevInTime":15519,"nextInTime":15521,"topicId":15518,"numMessagesInTopic":11,"msgSnippet":"At that level,  your client is pretty stupid . It s simply iterating through links in some pre-determined manner. May as well smash the Next Line button in","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 64755 invoked from network); 3 Jun 2010 01:41:49 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m3.grp.sp2.yahoo.com with QMQP; 3 Jun 2010 01:41:49 -0000\r\nX-Received: from unknown (HELO mail-yw0-f182.google.com) (209.85.211.182)\n  by mta2.grp.re1.yahoo.com with SMTP; 3 Jun 2010 01:41:49 -0000\r\nX-Received: by ywh12 with SMTP id 12so7125118ywh.19\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 02 Jun 2010 18:41:36 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.187.3 with SMTP id cu3mr10869746ibb.75.1275529295841; Wed, \n\t02 Jun 2010 18:41:35 -0700 (PDT)\r\nX-Received: by 10.231.146.85 with HTTP; Wed, 2 Jun 2010 18:41:35 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\r\nReferences: &lt;AANLkTikiXoywzt10M484j0cfZERQn6j-GTbAlWJDcdM9@...&gt;\n\t&lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\r\nDate: Wed, 2 Jun 2010 18:41:35 -0700\r\nMessage-ID: &lt;AANLkTiltuD9W3mk4z6KUbOamAUprKTnlgc1CuMpwiQaS@...&gt;\r\nTo: Glenn Block &lt;glenn.block@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00504502c49994c7e50488164ed0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] Re: Trying to wrap my brain around HATEOS\r\nX-Yahoo-Group-Post: member; u=401876259; y=szK8_87X0ApOzskpUxyx_jYQ4xWWpXw2RTQZBT2gmdMMcWAo0MaNIQ\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--00504502c49994c7e50488164ed0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nAt that level,  your client is &quot;pretty stupid&quot;. It&#39;s simply iterating\nthrough links in some pre-determined manner. May as well smash the &quot;Next\nLine&quot; button in your debugger.\n\nThat&#39;s not, IMHO, what HATEOS is about, even, heck, especially, in m2m\nscenarios.\n\nHATEOS allows for several things.\n\nIt allows for URI to be truly opaque. Simply, beyond a few well defined,\n&quot;cool URI&quot; entry points, you never need to create, or generate a URI. They\nare all given to you by the application. So, you can easily see, for\nexample, an application at sales.example.com directing you to\nreceiving.example.com, without your system even being aware of it -- because\nyour system never needs to look inside of the URIs.\n\nWhy is it going to receiving.example.com? Who cares. That&#39;s not your\nconcern. What is your concern is that the URI responds properly as the\ndefine media type said it would respond (i.e. when you go to the #shipping\nrel, with a xml/vnd.shipping document, the Right Stuff happens). Meanwhile\nthe backend has all sorts of flexibility regarding allocation of resources,\napplication distribution, etc.\n\nSecond, HATEOS allows for extensible interfaces. For example, say that the\ncompany now offers Express Shipping. If it&#39;s media type is extensible enough\n(and it&#39;s not difficult to do this), they can simply add a properly flagged\nrel to expressshippping.example.com in the data.\n\nNow, your application will completely ignore Express Shipping. It has NO\nIDEA what Express Shipping is, what to do with it, when to call it. It&#39;s\njust a dumb computer application.\n\nBut that&#39;s ok, because someone else read the latest documention, saw the\nupdate, decided they liked express shipping, and added support to their\nclient. YOUR &quot;outdated&quot; client continues to function as it should, since the\nchange made doesn&#39;t break backward compatibility. Meanwhile, update clients\nget to leverage the new functionality.\n\nThis evolutionary API approach can be very robust, allowing system to\nupgrade and migrate gracefully.\n\nIf and when some functionality get REMOVED from the system, then your system\nwill start faulting because the #oldfeature rel is no longer in the payload.\nYour code said &quot;send data.xml to #oldfeature rel&quot;, and it failed. &quot;method\nnot found&quot;, whatever. There is no URI to access. At this point you get a\nexploding error log and your phone rings asking why it suddenly stops\nworking.\n\nTurns out, not a whole lot you can do about that. Perhaps you weren&#39;t on the\nmailing list discussing the changes. Perhaps the service provider were\ncomplete jerks and just yanked the API out from under you. But there you\nare.\n\nHowever, this is no different than any other procedure. You tell your\nassistant &quot;go to this site, buy pencils and click on the express shipping\nbutton&quot;. Then you get a call &quot;I can&#39;t find the express shipping button. What\ndo I do now?&quot; Indeed, what does she do.\n\nWhat she does, or you do, is you read the screen and see perhaps what you\ncan do instead, find some other button to push, some option to check. You\nrelearn the API on the fly.\n\nThe M2M machine can&#39;t do that, but you, the developer, can read the payload\nand try to reinterpret it, follow (ideally embedded) links to API docs, or\nwhatever and fix your client.\n\nThe only difference between the M2M client and the human client is that the\nhuman tends to be a bit more flexible and adaptable to changes, but you can\nsee situations where even humans aren&#39;t that flexible. M2M programs need to\nbe recoded to affect change. Humans need to make decisions or delegate and\nget referrals to make decisions (&quot;There&#39;s Turbo Shipping, should I click\nthat instead?&quot;).\n\nHATEOS allows more separation and more abstractions. It helps remove\nassumption. You don&#39;t code your system to hit the order.example.com URI and\nthen immediately followed by expressshipping.example.com, ASSUMING that it&#39;s\nthe logical, appropriate, next step.\n\nNo, the application TELLS you what the appropriate next steps are, and leads\nyour client program through the process appropriately.\n\nIMHO it keeps both clients and server more flexible and more robust assuming\nproperly written clients and servers.\n\nRegards,\n\nWill Hartung\n\r\n--00504502c49994c7e50488164ed0\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAt that level, =A0your client is &quot;pretty stupid&quot;. It&#39;s simply=\r\n iterating through links in some pre-determined manner. May as well smash t=\r\nhe &quot;Next Line&quot; button in your debugger.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That&#=\r\n39;s not, IMHO, what HATEOS is about, even, heck, especially, in m2m scenar=\r\nios.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HATEOS allows for several things.&lt;/div&gt;&lt;div&gt;=\r\n&lt;br&gt;&lt;/div&gt;&lt;div&gt;It allows for URI to be truly opaque. Simply, beyond a few w=\r\nell defined, &quot;cool URI&quot; entry points, you never need to create, o=\r\nr generate a URI. They are all given to you by the application. So, you can=\r\n easily see, for example, an application at &lt;a href=3D&quot;http://sales.example=\r\n.com&quot;&gt;sales.example.com&lt;/a&gt; directing you to &lt;a href=3D&quot;http://receiving.ex=\r\nample.com&quot;&gt;receiving.example.com&lt;/a&gt;, without your system even being aware =\r\nof it -- because your system never needs to look inside of the URIs.&lt;/div&gt;\n=\r\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Why is it going to &lt;a href=3D&quot;http://receiving.example.=\r\ncom&quot;&gt;receiving.example.com&lt;/a&gt;? Who cares. That&#39;s not your concern. Wha=\r\nt is your concern is that the URI responds properly as the define media typ=\r\ne said it would respond (i.e. when you go to the #shipping rel, with a xml/=\r\nvnd.shipping document, the Right Stuff happens). Meanwhile the backend has =\r\nall sorts of flexibility regarding allocation of resources, application dis=\r\ntribution, etc.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Second, HATEOS allows for extensi=\r\nble interfaces. For example, say that the company now offers Express Shippi=\r\nng. If it&#39;s media type is extensible enough (and it&#39;s not difficult=\r\n to do this), they can simply add a properly flagged rel to &lt;a href=3D&quot;http=\r\n://expressshippping.example.com&quot;&gt;expressshippping.example.com&lt;/a&gt; in the da=\r\nta.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Now, your application will completely ignore =\r\nExpress Shipping. It has NO IDEA what Express Shipping is, what to do with =\r\nit, when to call it. It&#39;s just a dumb computer application.&lt;/div&gt;&lt;div&gt;&lt;=\r\nbr&gt;&lt;/div&gt;\n&lt;div&gt;But that&#39;s ok, because someone else read the latest docu=\r\nmention, saw the update, decided they liked express shipping, and added sup=\r\nport to their client. YOUR &quot;outdated&quot; client continues to functio=\r\nn as it should, since the change made doesn&#39;t break backward compatibil=\r\nity. Meanwhile, update clients get to leverage the new functionality.&lt;/div&gt;=\r\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This evolutionary API approach can be very robust, all=\r\nowing system to upgrade and migrate gracefully.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If=\r\n and when some functionality get REMOVED from the system, then your system =\r\nwill start faulting because the #oldfeature rel is no longer in the payload=\r\n. Your code said &quot;send data.xml to #oldfeature rel&quot;, and it faile=\r\nd. &quot;method not found&quot;, whatever. There is no URI to access. At th=\r\nis point you get a exploding error log and your phone rings asking why it s=\r\nuddenly stops working.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Turns out, not a whole lot=\r\n you can do about that. Perhaps you weren&#39;t on the mailing list discuss=\r\ning the changes. Perhaps the service provider were complete jerks and just =\r\nyanked the API out from under you. But there you are.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;However, this is no different than any other procedure. You tell your =\r\nassistant &quot;go to this site, buy pencils and click on the express shipp=\r\ning button&quot;. Then you get a call &quot;I can&#39;t find the express sh=\r\nipping button. What do I do now?&quot; Indeed, what does she do.&lt;/div&gt;\n&lt;div=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What she does, or you do, is you read the screen and see pe=\r\nrhaps what you can do instead, find some other button to push, some option =\r\nto check. You relearn the API on the fly.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;\nThe M2M=\r\n machine can&#39;t do that, but you, the developer, can read the payload an=\r\nd try to reinterpret it, follow (ideally embedded) links to API docs, or wh=\r\natever and fix your client.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The only difference be=\r\ntween the M2M client and the human client is that the human tends to be a b=\r\nit more flexible and adaptable to changes, but you can see situations where=\r\n even humans aren&#39;t that flexible. M2M programs need to be recoded to a=\r\nffect change. Humans need to make decisions or delegate and get referrals t=\r\no make decisions (&quot;There&#39;s Turbo Shipping, should I click that ins=\r\ntead?&quot;).&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HATEOS allows more separation and m=\r\nore abstractions. It helps remove assumption. You don&#39;t code your syste=\r\nm to hit the &lt;a href=3D&quot;http://order.example.com&quot;&gt;order.example.com&lt;/a&gt; URI=\r\n and then immediately followed by &lt;a href=3D&quot;http://expressshipping.example=\r\n.com&quot;&gt;expressshipping.example.com&lt;/a&gt;, ASSUMING that it&#39;s the logical, =\r\nappropriate, next step.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;No, the application TELLS=\r\n you what the appropriate next steps are, and leads your client program thr=\r\nough the process appropriately.=A0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;IMHO it keeps b=\r\noth clients and server more flexible and more robust assuming properly writ=\r\nten clients and servers.&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;=\r\n/div&gt;&lt;div&gt;Will Hartung&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--00504502c49994c7e50488164ed0--\r\n\n"}}