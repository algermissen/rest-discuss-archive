{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":558312292,"authorName":"Philippe Marsteau","from":"Philippe Marsteau &lt;marsteau@...&gt;","replyTo":"SENDER","senderId":"heUmoFNDylC7GoLeH2h0JnDvhGZ1pRNaEeJIJkPCxQJvwoENkGWYR3w3pbmfYPPsenip8pkzUDx-nRpmEEKGtynNtS-PJiIzYGzvSpo","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400627162","msgId":19655,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRW9IaUh4NnM4b0NvaVQxMkZ2NEZKN2tGWVFCYUg1TD1pNERTUnRLay1KZjJyNTVCZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDUzN0JEOUVDLjcwMjA2MDNAYmVya2VsZXkuZWR1Pg==","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPgk8NDM3NjcyMTEudGd1TWJqcHJ1aUBmdWNoc2lhPgk8NTM3ODA5QTEuMTA2MDMwN0BiZXJrZWxleS5lZHU+CTwyMDkwNzQ2NS5hT1oyajAzcFRzQGZ1Y2hzaWE+CTw5MDcxNjQxQS0yMzAwLTRENkYtOUY4RC0xRDcxQTk1QkYwNDNAZ21haWwuY29tPgk8NUMwQjc0QkItNUZENi00NkE4LUEwQUYtQkM4REQ2ODg0MjAzQGdtYWlsLmNvbT4JPDUzN0JEOUVDLjcwMjA2MDNAYmVya2VsZXkuZWR1Pg=="},"prevInTopic":19654,"nextInTopic":19656,"prevInTime":19654,"nextInTime":19656,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"hello Erik, ... I meant that if state persisted on initial request is pre-requisite for subsequent requests, then it would break stateless constraint of REST.","rawEmail":"Return-Path: &lt;marsteau@...&gt;\r\nX-Sender: marsteau@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 70619 invoked by uid 102); 20 May 2014 23:06:02 -0000\r\nX-Received: from unknown (HELO mtaq4.grp.bf1.yahoo.com) (10.193.84.143)\n  by m1.grp.bf1.yahoo.com with SMTP; 20 May 2014 23:06:02 -0000\r\nX-Received: (qmail 30754 invoked from network); 20 May 2014 23:06:02 -0000\r\nX-Received: from unknown (HELO mail-lb0-f177.google.com) (209.85.217.177)\n  by mtaq4.grp.bf1.yahoo.com with SMTP; 20 May 2014 23:06:02 -0000\r\nX-Received: by mail-lb0-f177.google.com with SMTP id s7so932621lbd.22\n        for &lt;rest-discuss@yahoogroups.com&gt;; Tue, 20 May 2014 16:06:02 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.152.26.168 with SMTP id m8mr4294213lag.65.1400627162103;\n Tue, 20 May 2014 16:06:02 -0700 (PDT)\r\nX-Received: by 10.112.126.200 with HTTP; Tue, 20 May 2014 16:06:02 -0700 (PDT)\r\nIn-Reply-To: &lt;537BD9EC.7020603@...&gt;\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt;\n\t&lt;43767211.tguMbjprui@fuchsia&gt;\n\t&lt;537809A1.1060307@...&gt;\n\t&lt;20907465.aOZ2j03pTs@fuchsia&gt;\n\t&lt;9071641A-2300-4D6F-9F8D-1D71A95BF043@...&gt;\n\t&lt;5C0B74BB-5FD6-46A8-A0AF-BC8DD6884203@...&gt;\n\t&lt;537BD9EC.7020603@...&gt;\r\nDate: Tue, 20 May 2014 19:06:02 -0400\r\nMessage-ID: &lt;CAEoHiHx6s8oCoiT12Fv4FJ7kFYQBaH5L=i4DSRtKk-Jf2r55Bg@...&gt;\r\nTo: Erik Wilde &lt;dret@...&gt;\r\nCc: Hubert A Le Van Gong &lt;hubertlvg@...&gt;, Michael Schuerig &lt;michael.lists@...&gt;, \n\trest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=089e0160c2ba75c7bb04f9dcec18\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=558312292\r\nFrom: Philippe Marsteau &lt;marsteau@...&gt;\r\n\r\n\r\n--089e0160c2ba75c7bb04f9dcec18\r\nContent-Type: text/plain; charset=UTF-8\r\n\r\nhello Erik,\n\nOn Tue, May 20, 2014 at 6:40 PM, Erik Wilde &lt;dret@...&gt; wrote:\n\n&gt; hello philippe.\n&gt;\n&gt; On 2014-05-19, 6:49 , Philippe Marsteau marsteau@... [rest-discuss]\n&gt; wrote:\n&gt;\n&gt;&gt; This being said you certainly can model a pub/sub polling scenario\n&gt;&gt; within REST constraints. The pushing scenario however do require state\n&gt;&gt; on the server that belongs to client. Because the client determines\n&gt;&gt; lifecycle of these &quot;push config&quot; dynamic resources, eg when to delete\n&gt;&gt; it, that data need to be kept in sync between machines, and handling*\n&gt;&gt; that extra state breaks statelessness of REST (*handling like in\n&gt;&gt; auto-expiring subscriptions over time, etc.)\n&gt;&gt;\n&gt;\n&gt; i am not sure how you get to this conclusion. a client subscription to a\n&gt; service is a resource, and yes, when a service has to manage millions of\n&gt; client subscriptions, that is not trivial. but it can be implemented, at a\n&gt; certain cost, and when you&#39;re willing to do that, then you have those\n&gt; subscriptions available to the service, which can then use them to send\n&gt; push notifications. that is now services such as APN or C2DM work. it&#39;s\n&gt; RESTful, if you model it in a way that a client POSTs a subscription and\n&gt; can DELETE it when it cancels.\n\n\nI meant that if state persisted on initial request is pre-requisite for\nsubsequent requests, then it would break stateless constraint of REST. If\nnone of the calls make any assumption of any previous context state stored\non the server - following initial request, e.g the subscription state -\nthen it remains RESTful. If you model the context to be stored on the\nserver as a resource itself (e.g the subscription resource) it seems\nRESTful but the state lifecycle depends on client proper interaction\nimplementation. But you&#39;re right, this is more a design cost/tradeoff issue\nthan purely a RESTfulness of the system.\n\n&gt;\n&gt;  The other technical pb of pub/sub over HTTP are firewalls or related\n&gt;&gt; network issues. It is not uncommon that clients have firewalls in place\n&gt;&gt; that let outgoing calls but require IP whitelisting to let calls come\n&gt;&gt; in. That further reduces scalability of such model (basically each\n&gt;&gt; client must be seen as a server and vice-versa). The clients costs is\n&gt;&gt; typically higher than server (clients establish the HTTP connection and\n&gt;&gt; close them as appropriate for their use cases). This cost is acceptable\n&gt;&gt; because you usually have many clients for one server. If the server had\n&gt;&gt; to pay that connection cost (eg to push data), it would be central and\n&gt;&gt; all clients would deal with a less responsive server as a result.\n&gt;&gt;\n&gt;\n&gt; yes, for back-end m2m scenarios, URI-based push works. but for pushing to\n&gt; mobile devices, it doesn&#39;t, because they are not part of the open internet\n&gt; (i.e., they don&#39;t have a stable public IP address).\n&gt;\n&gt; I think we agree. You bring up another reason why PuSH model is not well\nadapted for Web scalability (Web will be mostly mobile over time). &quot;Don&#39;t\ncall me we&#39;ll call you&quot; doesn&#39;t apply well here.\n\n&gt;\n&gt;  Finally, pub/sub model implies a level of trusts normal HTTP app servers\n&gt;&gt; do not need to have. Blindly connecting to any HTTP endpoint opens to\n&gt;&gt; security vulnerabilities. The client (subscriber) will typically expect\n&gt;&gt; some shared secret or key cert exchange, and the server may not be\n&gt;&gt; willing to blindly post data to unknown locations.\n&gt;&gt;\n&gt;\n&gt; yes, pubsub probably requires some level of trust, and may just be the\n&gt; &quot;premium&quot; way of getting information from a service. for massive scale\n&gt; information distribution, pubsub probably really is not a good model, but\n&gt; for some other scenarios, that may be different.\n&gt;\n&gt;\n&gt; Sure. PuSH &quot;can&quot; be done. But rarely in a scalable way (at least not over\nHTTP) unless the number of subscribers is low and you tackle/pay the cost\nof the several design issues mentioned in this thread.\n\n\n&gt; cheers,\n&gt;\n&gt; dret.\n&gt;\n&gt; --\n&gt; erik wilde | mailto:dret@...  -  tel:+1-510-2061079 |\n&gt;            | UC Berkeley  -  School of Information (ISchool) |\n&gt;            | http://dret.net/netdret http://twitter.com/dret |\n&gt;\n\nMfG,\n\nPhil\n\r\n--089e0160c2ba75c7bb04f9dcec18\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;hello Erik,&lt;div class=3D&quot;gmail_extra&quot;&gt;&lt;br&gt;&lt;div class=3D&quot;gm=\r\nail_quote&quot;&gt;On Tue, May 20, 2014 at 6:40 PM, Erik Wilde &lt;span dir=3D&quot;ltr&quot;&gt;&l=\r\nt;&lt;a href=3D&quot;mailto:dret@...&quot; target=3D&quot;_blank&quot;&gt;dret@...&lt;=\r\n/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin=\r\n:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;hello philippe.&lt;di=\r\nv class=3D&quot;&quot;&gt;&lt;br&gt;\nOn 2014-05-19, 6:49 , Philippe Marsteau &lt;a href=3D&quot;mailto=\r\n:marsteau@...&quot; target=3D&quot;_blank&quot;&gt;marsteau@...&lt;/a&gt; [rest-discuss=\r\n] wrote:&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;b=\r\norder-left:1px #ccc solid;padding-left:1ex&quot;&gt;\nThis being said you certainly =\r\ncan model a pub/sub polling scenario&lt;br&gt;\nwithin REST constraints. The pushi=\r\nng scenario however do require state&lt;br&gt;\non the server that belongs to clie=\r\nnt. Because the client determines&lt;br&gt;\nlifecycle of these &quot;push config&=\r\nquot; dynamic resources, eg when to delete&lt;br&gt;\nit, that data need to be kep=\r\nt in sync between machines, and handling*&lt;br&gt;\nthat extra state breaks state=\r\nlessness of REST (*handling like in&lt;br&gt;\nauto-expiring subscriptions over ti=\r\nme, etc.)&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\ni am not sure how you get to this co=\r\nnclusion. a client subscription to a service is a resource, and yes, when a=\r\n service has to manage millions of client subscriptions, that is not trivia=\r\nl. but it can be implemented, at a certain cost, and when you&#39;re willin=\r\ng to do that, then you have those subscriptions available to the service, w=\r\nhich can then use them to send push notifications. that is now services suc=\r\nh as APN or C2DM work. it&#39;s RESTful, if you model it in a way that a cl=\r\nient POSTs a subscription and can DELETE it when it cancels.&lt;/blockquote&gt;\n&lt;=\r\ndiv&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I meant that if state persisted on initial request is pr=\r\ne-requisite for subsequent requests, then it would break stateless constrai=\r\nnt of REST. If none of the calls make any assumption of any previous contex=\r\nt state stored on the server - following initial request, e.g the subscript=\r\nion state - then it remains RESTful. If you model the context to be stored =\r\non the server as a resource itself (e.g the subscription resource) it seems=\r\n RESTful but the state lifecycle depends on client proper interaction imple=\r\nmentation. But you&#39;re right, this is more a design cost/tradeoff issue =\r\nthan purely a RESTfulness of the system.&lt;/div&gt;\n&lt;blockquote class=3D&quot;gmail_q=\r\nuote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1e=\r\nx&quot;&gt;&lt;div class=3D&quot;&quot;&gt;&lt;br&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0=\r\n 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;\nThe other technical=\r\n pb of pub/sub over HTTP are firewalls or related&lt;br&gt;\nnetwork issues. It is=\r\n not uncommon that clients have firewalls in place&lt;br&gt;\nthat let outgoing ca=\r\nlls but require IP whitelisting to let calls come&lt;br&gt;\nin. That further redu=\r\nces scalability of such model (basically each&lt;br&gt;\nclient must be seen as a =\r\nserver and vice-versa). The clients costs is&lt;br&gt;\ntypically higher than serv=\r\ner (clients establish the HTTP connection and&lt;br&gt;\nclose them as appropriate=\r\n for their use cases). This cost is acceptable&lt;br&gt;\nbecause you usually have=\r\n many clients for one server. If the server had&lt;br&gt;\nto pay that connection =\r\ncost (eg to push data), it would be central and&lt;br&gt;\nall clients would deal =\r\nwith a less responsive server as a result.&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nyes=\r\n, for back-end m2m scenarios, URI-based push works. but for pushing to mobi=\r\nle devices, it doesn&#39;t, because they are not part of the open internet =\r\n(i.e., they don&#39;t have a stable public IP address).&lt;div class=3D&quot;&quot;&gt;\n&lt;br=\r\n&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;I think we agree. You bring up another reason why =\r\nPuSH model is not well adapted for Web scalability (Web will be mostly mobi=\r\nle over time). &quot;Don&#39;t call me we&#39;ll call you&quot; doesn&#39;t=\r\n apply well here.&lt;/div&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0=\r\n 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;&lt;div class=3D&quot;&quot;&gt;\n&lt;br=\r\n&gt;\n&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:=\r\n1px #ccc solid;padding-left:1ex&quot;&gt;\nFinally, pub/sub model implies a level of=\r\n trusts normal HTTP app servers&lt;br&gt;\ndo not need to have. Blindly connecting=\r\n to any HTTP endpoint opens to&lt;br&gt;\nsecurity vulnerabilities. The client (su=\r\nbscriber) will typically expect&lt;br&gt;\nsome shared secret or key cert exchange=\r\n, and the server may not be&lt;br&gt;\nwilling to blindly post data to unknown loc=\r\nations.&lt;br&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;&lt;/div&gt;\nyes, pubsub probably requires some lev=\r\nel of trust, and may just be the &quot;premium&quot; way of getting informa=\r\ntion from a service. for massive scale information distribution, pubsub pro=\r\nbably really is not a good model, but for some other scenarios, that may be=\r\n different.&lt;div class=3D&quot;HOEnZb&quot;&gt;\n&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/=\r\nblockquote&gt;&lt;div&gt;Sure. PuSH &quot;can&quot; be done. But rarely in a scalabl=\r\ne way (at least not over HTTP) unless the number of subscribers is low and =\r\nyou tackle/pay the cost of the several design issues mentioned in this thre=\r\nad.&lt;/div&gt;\n&lt;div&gt;=C2=A0&lt;/div&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margi=\r\nn:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;&lt;div class=3D&quot;HOE=\r\nnZb&quot;&gt;&lt;div class=3D&quot;h5&quot;&gt;\ncheers,&lt;br&gt;\n&lt;br&gt;\ndret.&lt;br&gt;\n&lt;br&gt;\n-- &lt;br&gt;\nerik wilde =\r\n| mailto:&lt;a href=3D&quot;mailto:dret@...&quot; target=3D&quot;_blank&quot;&gt;dret@berkel=\r\ney.edu&lt;/a&gt; =C2=A0- =C2=A0tel:&lt;a href=3D&quot;tel:%2B1-510-2061079&quot; value=3D&quot;+151=\r\n02061079&quot; target=3D&quot;_blank&quot;&gt;+1-510-2061079&lt;/a&gt; |&lt;br&gt;\n=C2=A0 =C2=A0 =C2=A0 =\r\n=C2=A0 =C2=A0 =C2=A0| UC Berkeley =C2=A0- =C2=A0School of Information (ISch=\r\nool) |&lt;br&gt;\n=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0| &lt;a href=3D&quot;http://dre=\r\nt.net/netdret&quot; target=3D&quot;_blank&quot;&gt;http://dret.net/netdret&lt;/a&gt; &lt;a href=3D&quot;htt=\r\np://twitter.com/dret&quot; target=3D&quot;_blank&quot;&gt;http://twitter.com/dret&lt;/a&gt; |&lt;br&gt;\n&lt;=\r\n/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;MfG,&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;Phil=\r\n&lt;/div&gt;&lt;/div&gt;\n\r\n--089e0160c2ba75c7bb04f9dcec18--\r\n\n"}}