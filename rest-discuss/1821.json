{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Jeff Bone","from":"Jeff Bone &lt;jbone@...&gt;","replyTo":"SENDER","senderId":"Kt9U6651bbfINU5Ey-UHPDjannEZSrtMIOx2_XHXCsqmhHE7CyyZmy8y4s6KWf-bdWwzJg7g2mC9L29w_Fya1bLP_-5J","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [PMX:#] [rest-discuss] REST and HTTP","postDate":"1026445721","msgId":1821,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI5NTNCQkM5LjNERkMlamJvbmVAZGVlcGZpbGUuY29tPg==","inReplyToHeader":"PDAwMmMwMWMyMjhlNyQ3NWY1NDU4MCRhMDAwYThjMEBzZWFpcnRobGFwdG9wPg=="},"prevInTopic":1804,"nextInTopic":1835,"prevInTime":1820,"nextInTime":1822,"topicId":1740,"numMessagesInTopic":8,"msgSnippet":"... Small but important point.  This is a similar confusion to that with client-server, wherein the question of who initiates the TCP connection isn t really","rawEmail":"Return-Path: &lt;jbone@...&gt;\r\nX-Sender: jbone@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_7_4); 12 Jul 2002 03:48:47 -0000\r\nReceived: (qmail 97427 invoked from network); 12 Jul 2002 03:48:47 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 12 Jul 2002 03:48:47 -0000\r\nReceived: from unknown (HELO blanco.deepfile.com) (24.242.137.237)\n  by mta2.grp.scd.yahoo.com with SMTP; 12 Jul 2002 03:48:47 -0000\r\nReceived: from [207.8.92.100] (cust-92-100.customer.jump.net [207.8.92.100] (may be forged))\n\t(authenticated)\n\tby blanco.deepfile.com (8.11.6/8.11.6) with ESMTP id g6C3l2x11324;\n\tThu, 11 Jul 2002 22:47:02 -0500\r\nUser-Agent: Microsoft-Entourage/10.0.0.1331\r\nDate: Thu, 11 Jul 2002 22:48:41 -0500\r\nSubject: Re: [PMX:#] [rest-discuss] REST and HTTP\r\nTo: Seairth Jacobs &lt;seairth@...&gt;,\n   rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-ID: &lt;B953BBC9.3DFC%jbone@...&gt;\r\nIn-Reply-To: &lt;002c01c228e7$75f54580$a000a8c0@seairthlaptop&gt;\r\nMime-version: 1.0\r\nContent-type: text/plain; charset=&quot;US-ASCII&quot;\r\nContent-transfer-encoding: 7bit\r\nFrom: Jeff Bone &lt;jbone@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOn 7/11/02 9:30 AM, &quot;Seairth Jacobs&quot; &lt;seairth@...&gt; wrote:\n\n&gt; Maintaining a connection implicitly means the server itself is maintaining\n&gt; state.  I agree that it may be a weak argument, but I am pretty sure IIS\n&gt; (and possibly other HTTP servers) takes advantage of this internally.  Also,\n&gt; people tend to use the tools available if they think it will help.  It is\n&gt; highly foreseeable that a server application would take advantage of the\n&gt; persistent connection to maintain state.  I am not saying that someone who\n&gt; is mindful of REST would do such a thing.  All I was saying was that HTTP\n&gt; 1.1 contains additional features over HTTP 1.0 that are less RESTful in\n&gt; nature.\n\nSmall but important point.  This is a similar confusion to that with\nclient-server, wherein the question of who initiates the TCP connection\nisn&#39;t really the issue but rather who makes the (app-level) request and who\nresponds in a given interaction.\n\nConnection lifecycle does not impact RESTfulness at all --- it is VERY\nimportant to distinguish between the details of the lower level transport\nand sessions issues and the application semantics provided by the higher\nprotocol stack layers.  HTTP is an application-level protocol, and REST is\n*definitely* in the business of describing resources and which requests they\nservice / what kind of responses they give.  HTTP should not and REST does\nnot have anything to say about the abstraction that we call a TCP\nconnection.  Now in fact, earlier revs of HTTP do in fact prescribe certain\napp-level semantics that are tightly tied to the TCP connection semantics,\nbut this should be viewed as a mistake and, indeed, later versions have\nmoved (albeit slowly) away from this tight coupling.  A future, superior\nversion of the HTTP spec will define HTTP in terms independent of its\nlower-layer protocols, and describe each binding of HTTP to a lower-level\nsubstrate independently of the application semantics.\n\nShort version:  HTTP is conceptually independent of and REST is certainly\nindependent of both the direction and duration of lower-level connections /\nsessions / what have you.\n\n&gt; \n&gt; Another argument is that persistent connections potentially do not scale\n&gt; well.  Yes, a persistent connection does reduce network traffic and latency,\n&gt; but it also means that a given server can handle fewer connections over a\n&gt; period of time, especially if the clients and the server are keeping the\n&gt; connections open, but are otherwise idle.\n\nThis is a detail of TCP stack implementations in various operating systems,\nnot a limitation with the abstract notion of persistent connections.  Now,\nit&#39;s an important practical concern --- but given the alternatives the right\nanswer may be to reimplement or at least tune / tweak the lower-layer\nprotocol stack.  Cf. KnowNow.  TCP doesn&#39;t really have so much state that\nit&#39;s impractical for a single device to service &gt;10k simultaneous\nconnections;  this typical limitation is simply an example of bad\nengineering.\n\n&gt; \n&gt; As for another example of a part of HTTP 1.1 I feel is not RESTful (in my\n&gt; mind):  the If-Match, If-Modified-Since, If-None-Match, If-Range, and\n&gt; If-Unmodified-Since header fields (14.24-28).  From my understanding of\n&gt; these fields, the client is effectively telling the server how to act.\n\nI&#39;m somewhat inclined to agree with some of this;  If-Mod* and If-Unmod* are\nprobably okay because they are describing what they  want in terms\nindependent of some representation, but the rest presuppose some particular\nrepresentation.  \n\n&gt; I\n&gt; was under the impression that a client could submit a representation of a\n&gt; resource to the server, but the client has no control over what the server\n&gt; actually does with the resource.  Likewise, I thought that the client has no\n&gt; control over the representation of the resource returned to it.\n\nAll they can do is ask for what they want;  this should be in terms of what\nthey want of the resource, not what they want as a representation.  I.e.,\nmod time says something about the resource;  range does not.\n\nJb\n\n\n"}}