{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":244177449,"authorName":"Donald_Strong@national.com.au","from":"Donald_Strong@...","profile":"illyrian_au","replyTo":"SENDER","senderId":"3wSffc2tOStVAflwRPOkxAbQ2CxZ4HIzexJmFa7jvvRZNgZz_N0I8kKFq6lJ_PlbqKXAD95Qht0tXVIvXevBczgaNOY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Best practices for crippled HTTP clients?","postDate":"1131432055","msgId":5443,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9GMzRGQTI3MTYuQ0IwNDgwNDItT05DQTI1NzBCMy4wMDBCQkJCMC1DQTI1NzBCMy4wMDI0QjRDNUBuYXRpb25hbC5jb20uYXU+","inReplyToHeader":"PDQzNkZERkQ0LjcwMzA3MDJAcGVlai5jby51az4="},"prevInTopic":5440,"nextInTopic":5444,"prevInTime":5442,"nextInTime":5444,"topicId":5409,"numMessagesInTopic":23,"msgSnippet":"Hi Paul, ... resource. ... Some might say that is tunnelling but I wouldn t. You are one step away from a realisation I came to a while ago. You are","rawEmail":"Return-Path: &lt;Donald_Strong@...&gt;\r\nX-Sender: Donald_Strong@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 80006 invoked from network); 8 Nov 2005 06:41:22 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m1.grp.scd.yahoo.com with QMQP; 8 Nov 2005 06:41:22 -0000\r\nReceived: from unknown (HELO mxemout01.national.com.au) (203.57.240.225)\n  by mta6.grp.scd.yahoo.com with SMTP; 8 Nov 2005 06:41:22 -0000\r\nReceived: from localhost (localhost.localdomain [127.0.0.1])\n\tby mxemout01.national.com.au (Postfix) with ESMTP id 81A8F34005\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue,  8 Nov 2005 17:40:49 +1100 (EST)\r\nReceived: from mxemout01.national.com.au ([127.0.0.1])\n by localhost (mxemout01.national.com.au [127.0.0.1]) (amavisd-new, port 10024)\n with LMTP id 00364-01-16 for &lt;rest-discuss@yahoogroups.com&gt;;\n Tue,  8 Nov 2005 17:40:49 +1100 (EST)\r\nReceived: from naunb906.au.thenational.com (unknown [10.25.254.205])\n\tby mxemout01.national.com.au (Postfix) with ESMTP id 1393534002\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Tue,  8 Nov 2005 17:40:49 +1100 (EST)\r\nIn-Reply-To: &lt;436FDFD4.7030702@...&gt;\r\nTo: Paul James &lt;yahoogroups@...&gt;\r\nCc: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Lotus Notes Release 6.5.1 January 21, 2004\r\nMessage-ID: &lt;OF34FA2716.CB048042-ONCA2570B3.000BBBB0-CA2570B3.0024B4C5@...&gt;\r\nDate: Tue, 8 Nov 2005 17:40:55 +1100\r\nX-MIMETrack: Serialize by Router on NAUNB906/NAB/NAG_AP_EXT(Release 6.5.3FP1|December 15, 2004) at\n 08/11/2005 17:40:49\r\nMIME-Version: 1.0\r\nContent-type: text/plain; charset=US-ASCII\r\nX-Virus-Scanned: amavisd-new at national.com.au\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Donald_Strong@...\r\nSubject: Re: [rest-discuss] Best practices for crippled HTTP clients?\r\nX-Yahoo-Group-Post: member; u=244177449; y=I6d3sz8hXL1zyoDf_4CEB0uW885o40fB8Z5ijgb_TA7YLIyKb0g\r\nX-Yahoo-Profile: illyrian_au\r\n\r\nHi Paul,\n\n\n&gt; First lets separate our resources into two types, data resources and\n&gt; application resources. Data resources represent the model of our\n&gt; application and respond to GET, POST(a), PUT and DELETE in a RESTful\n&gt; manner. Application resources are our  forms.\n\n&gt; So to update one of our application resources, we can PUT a\n&gt; representation directly to the resource using our rich client or machine\n&gt; automation. But then with a browser, we can GET our &quot;update our model&quot;\n&gt; form that POSTs a request to update the model resource, our application\n&gt; resource (form) validates the request and does a PUT on our model\nresource.\n\n&gt; Some might say that this is tunnelling a PUT through a POST request, but\n&gt; POST(p) is supposed to be open ended and mean &quot;process this&quot;, I think\n&gt; it&#39;s fair game for an application resource to manipulate a data resource\n&gt; via POST (as long as the request doesn&#39;t change the application resource\n&gt; itself).\n\nSome might say that is tunnelling but I wouldn&#39;t. You are one step away\nfrom a realisation I came to a while ago.\nYou are progressing toward a 3-tier system\n\nhttp://groups.yahoo.com/group/rest-discuss/message/4921\n\nAs far as I can see, PUT should only be used on resources that represent\nData Services. It is very difficult to\nperform data validation on a PUT resource. You are effectively limited to\nusing it as a storage mechanism.\n\nI can see a few situations where PUT can be useful.\n\n1.   In a data store mechanism analogous to a shared file system.\n2.   In a versioning data store analogous to CVS or Subversion.\n3.   In an HTTP implementation of a message queuing system.\n\nThere may be others along a similar line.\n\nIn all of these cases the entity body is opaque, the application simply\ntakes the entity and stores it.\nOf these, the only one that you would expose to a customer/client is the\nlast one.\n\nNow I am not saying that PUT is diminished by this constraint. It is\nimmensely powerful.\nImagine that you had several of the first two data stores distributed\nthroughout the Net\n(either Internet or Intranet it doesn&#39;t matter). You then have a universal\nmechanism for\naccessing decentralised data. You can place an &quot;Order&quot; resource from\nanywhere\nthat has visibility to the appropriate URL.\n\nThe limitation is that all applications that access the data must have an\nintimate\nknowledge of the domain model that the data represents. Consequently, they\nmust be completely trustworthy. You cannot expose the resource to any party\nthat might be careless when clobbering the resource with a PUT.\n\nIf you are exposing your resources to an external party you should really\nvalidate\nthe request prior to acting upon it. Essentially you are restricted to\nusing POST\nwhen the client cannot be trusted.\n\nDonald.\n\n\n"}}