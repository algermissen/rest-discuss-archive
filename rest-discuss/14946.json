{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"JYqeSxPLhBGFzugCrvfCBJoqfgcccGjtShJmnhdZ5xLKsl8VEdw4HNFRs8Z18U-l6FV3ReM3PiZyqypw6RW_mA29ZR3ZF3YJZw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Differentiating HTTP-based APIs","postDate":"1267395250","msgId":14946,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDMxMjU2My43ODcwMC5xbUB3ZWI1NTkwNC5tYWlsLnJlMy55YWhvby5jb20+","inReplyToHeader":"PDU4MWJmNjE2MTAwMjI4MTAxMGo0ODM4Nzk4aTE2OGJlYjcxODgyZGQwMTVAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":14943,"nextInTopic":14947,"prevInTime":14945,"nextInTime":14947,"topicId":14904,"numMessagesInTopic":31,"msgSnippet":"Hey all, Unfortunately it usually means that you have a new layer that maps http representations to your domain model... pretty much in the same way that DTO","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 21961 invoked from network); 28 Feb 2010 22:17:23 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 28 Feb 2010 22:17:23 -0000\r\nX-Received: from unknown (HELO n15.bullet.mail.mud.yahoo.com) (68.142.206.42)\n  by mta1.grp.sp2.yahoo.com with SMTP; 28 Feb 2010 22:17:23 -0000\r\nX-Received: from [68.142.200.225] by n15.bullet.mail.mud.yahoo.com with NNFMP; 28 Feb 2010 22:14:12 -0000\r\nX-Received: from [66.196.114.78] by t6.bullet.mud.yahoo.com with NNFMP; 28 Feb 2010 22:14:12 -0000\r\nX-Received: from [127.0.0.1] by omp307.mail.re3.yahoo.com with NNFMP; 28 Feb 2010 22:14:11 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 557895.44735.bm@...\r\nX-Received: (qmail 79024 invoked by uid 60001); 28 Feb 2010 22:14:11 -0000\r\nMessage-ID: &lt;312563.78700.qm@...&gt;\r\nX-YMail-OSG: 5cTj8gMVM1kh2WaC5zKW0N6lmHKXLgnT_6pzrPRk50DWdK0\n Zh.UuqPXJKj_CtSG_DzNLBy44TX7kt5gU1eoM6jqKz3adsxXOzwzDqSgTgZi\n hkLSrkGZ5owREijaz6gFrjAnL7JvHa6tDdFsVV_v6tASj.V4Zag8zCYMKqAE\n b7HnhJtNmRQdbVyF.00nEuyJwG10PsYGmMT3Iq63Y6q.SosXD.szKFPcUJdx\n EbyGXrAxCMzX9vB2NF0bfCRqi\r\nX-Received: from [99.22.138.61] by web55904.mail.re3.yahoo.com via HTTP; Sun, 28 Feb 2010 14:14:10 PST\r\nX-Mailer: YahooMailClassic/9.2.12 YahooMailWebService/0.8.100.260964\r\nDate: Sun, 28 Feb 2010 14:14:10 -0800 (PST)\r\nTo: craigmcc@..., Guilherme Silveira &lt;guilherme.silveira@...&gt;\r\nCc: Jan Algermissen &lt;algermissen1971@...&gt;,\n  Felipe Gaucho &lt;fgaucho@...&gt;,\n  REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;581bf6161002281010j4838798i168beb71882dd015@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-873938344-1267395250=:78700&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Re: [rest-discuss] Differentiating HTTP-based APIs\r\nX-Yahoo-Group-Post: member; u=272793929; y=8CaRWu8C_ux3pOU-Kqq_M1eZkrs6z2FcS-G0GTpIm1B_f-Lv\r\nX-Yahoo-Profile: andjarnic\r\n\r\n\r\n--0-873938344-1267395250=:78700\r\nContent-Type: text/plain; charset=us-ascii\r\n\r\n\nHey all,\n\n\nUnfortunately it usually means that you have a new layer that maps\nhttp representations to your domain model... pretty much in the same\nway that DTO used to (reminds me of those old J2EE core patterns):\nanother level of similar structures, with bean data being copied\naround.\nAre you saying that the J2EE patterns are no longer applicable in general, or for your specific use case? I certainly can understand that if you have a reason for your own situation, but in general, especially if I plan on others working on my code, I&#39;d rather stick to what is well known and usually practiced.\n\nKevin&#39;s example shows exactly that kind of pattern... I believe thats\nthe serialization and ORM tool&#39;s job to work on their own through\nconventions and configuration, with only one model... avoiding that\ncopy and paste of anemic classes in your code and anemic objects\nbetween layers.\n\n\nYes, true.. but if you combine the two models into one, while possible, you are requiring your front tier to know about ejb/back end stuff. An even better example of why you would avoid this.. if you were going to use those same XSD generated JAXB classes in a Jersey client (or java client).. and you have the ejb entity annotations in them as well, your client side now has to have the ejb classes to compile. Maybe this is not a big deal, but I personally think that is bad form. I would be confused as a new developer coming aboard a project that was a client side app that had classes annotated with EJB stuff. I&#39;d think they were being stored in a local database and some sort of web/ejb engine was embedded in the client app.\nI suppose it really depends on what you will use them for. If it&#39;s purely your server side and they are not part of some public API that you plan on sharing, maybe it&#39;s fine. I still like the warm fuzzy feeling I get knowing my code is separated and should something arise, I am prepared without any further work needed.\n\n\n\n      \r\n--0-873938344-1267395250=:78700\r\nContent-Type: text/html; charset=us-ascii\r\n\r\n&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; &gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; style=&quot;font: inherit;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hey all,&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Unfortunately it usually means that you have a new layer that maps&lt;br&gt;http representations to your domain model... pretty much in the same&lt;br&gt;way that DTO used to (reminds me of those old J2EE core patterns):&lt;br&gt;another level of similar structures, with bean data being copied&lt;br&gt;around.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-style: normal;&quot;&gt;Are you saying that the J2EE patterns are no longer applicable in general, or for your specific use case? I certainly can understand that if you have a reason for your own situation, but in general, especially if I plan on others working on my code, I&#39;d rather stick to what is well known and usually practiced.&lt;/span&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-style:\n normal;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;br&gt;Kevin&#39;s example shows exactly that kind of pattern... I believe thats&lt;br&gt;the serialization and ORM tool&#39;s job to work on their own through&lt;br&gt;conventions and configuration, with only one model... avoiding that&lt;br&gt;copy and paste of anemic classes in your code and anemic objects&lt;br&gt;between layers.&lt;br&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Yes, true.. but if you combine the two models into one, while possible, you are requiring your front tier to know about ejb/back end stuff. An even better example of why you would avoid this.. if you were going to use those same XSD generated JAXB classes in a Jersey client (or java client).. and you have the ejb entity annotations in them as well, your client side now has to have the ejb classes to compile. Maybe this is not a big deal, but I personally think that is bad form. I would be confused as a new developer coming aboard a project that was a client side app that had classes\n annotated with EJB stuff. I&#39;d think they were being stored in a local database and some sort of web/ejb engine was embedded in the client app.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I suppose it really depends on what you will use them for. If it&#39;s purely your server side and they are not part of some public API that you plan on sharing, maybe it&#39;s fine. I still like the warm fuzzy feeling I get knowing my code is separated and should something arise, I am prepared without any further work needed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;\n\n      \r\n--0-873938344-1267395250=:78700--\r\n\n"}}