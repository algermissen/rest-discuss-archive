{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210009313,"authorName":"Glenn Block","from":"Glenn Block &lt;glenn.block@...&gt;","profile":"glenn_block","replyTo":"SENDER","senderId":"kE5EZJ6RoAgr1DGQISn_iIyXdr1Eck0s1ublMi5CgEN_QH7Jis1MRveIClGBL4Qh3yb3EVbB5PnZ0GgDt_0RGNQwcTrz1sf1NI0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Trying to wrap my brain around HATEOS","postDate":"1275530552","msgId":15522,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlsaDZST1loRmNaTzNtbDZYQVVRekxNRDVJbGlBMDVXS0RKVnRyLUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PEFBTkxrVGlsdHVEOVczbWs0ejZLVWJPYW1BVXByS1RubGdjMUN1TXB3aVFhU0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGlraVhveXd6dDEwTTQ4NGowY2ZaRVJRbjZqLUdUYkFsV0pEY2RNOUBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlueFJUNUdvRm1sb2E4UEQtY3VLblYzQVBQMkprR0x6bjA3a25iMEBtYWlsLmdtYWlsLmNvbT4JPEFBTkxrVGlsdHVEOVczbWs0ejZLVWJPYW1BVXByS1RubGdjMUN1TXB3aVFhU0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15521,"nextInTopic":15523,"prevInTime":15521,"nextInTime":15523,"topicId":15518,"numMessagesInTopic":11,"msgSnippet":"Just read through your detailed explanation so thank you for that. I think the system I described is doing many of the things you described. Rules are","rawEmail":"Return-Path: &lt;glenn.block@...&gt;\r\nX-Sender: glenn.block@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 23507 invoked from network); 3 Jun 2010 02:02:35 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 3 Jun 2010 02:02:35 -0000\r\nX-Received: from unknown (HELO mail-gw0-f48.google.com) (74.125.83.48)\n  by mta3.grp.sp2.yahoo.com with SMTP; 3 Jun 2010 02:02:34 -0000\r\nX-Received: by gwb17 with SMTP id 17so370840gwb.7\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 02 Jun 2010 19:02:34 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.224.64.79 with SMTP id d15mr4152482qai.319.1275530552726; Wed, \n\t02 Jun 2010 19:02:32 -0700 (PDT)\r\nX-Received: by 10.229.232.5 with HTTP; Wed, 2 Jun 2010 19:02:32 -0700 (PDT)\r\nIn-Reply-To: &lt;AANLkTiltuD9W3mk4z6KUbOamAUprKTnlgc1CuMpwiQaS@...&gt;\r\nReferences: &lt;AANLkTikiXoywzt10M484j0cfZERQn6j-GTbAlWJDcdM9@...&gt;\n\t&lt;AANLkTinxRT5GoFmloa8PD-cuKnV3APP2JkGLzn07knb0@...&gt;\n\t&lt;AANLkTiltuD9W3mk4z6KUbOamAUprKTnlgc1CuMpwiQaS@...&gt;\r\nDate: Wed, 2 Jun 2010 19:02:32 -0700\r\nMessage-ID: &lt;AANLkTilh6ROYhFcZO3ml6XAUQzLMD5IliA05WKDJVtr-@...&gt;\r\nTo: Will Hartung &lt;willh@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nFrom: Glenn Block &lt;glenn.block@...&gt;\r\nSubject: Re: Trying to wrap my brain around HATEOS\r\nX-Yahoo-Group-Post: member; u=210009313; y=YOzrRmdqYjtVGppqnq7rnIhZAiosXkjTzy3bLjVjhipMN__5QjY\r\nX-Yahoo-Profile: glenn_block\r\n\r\nJust read through your detailed explanation so thank you for that.\n\nI think the system I described is doing many of the things you\ndescribed. Rules are arbitrary resources that live somewhere on the\nnet. They expect a specific media type to be posted to them. Customers\nsubmit jobs by posting to the Jobs resource (or whatever I called it).\nThose customers have their own rules which are then part of the post.\nThe rules being links back to their systems or other systems.\n\nNow the job execution engine queries for pending jobs. As the jobs are\nexectued it looks at the hypermedia and calls out to the rules. The\nrules are arbtirary, the system doesn&#39;t even have to know about rules,\nit knows about links.\n\nWhat is missinlg in ypur mind and bearing with the simplified version\nof the real picture that I painted, is it in the realm of things one\nmight do in a RESTful manner?\n\nThanks\nGlenn\n\nOn 6/2/10, Will Hartung &lt;willh@...&gt; wrote:\n&gt; At that level,  your client is &quot;pretty stupid&quot;. It&#39;s simply iterating\n&gt; through links in some pre-determined manner. May as well smash the &quot;Next\n&gt; Line&quot; button in your debugger.\n&gt;\n&gt; That&#39;s not, IMHO, what HATEOS is about, even, heck, especially, in m2m\n&gt; scenarios.\n&gt;\n&gt; HATEOS allows for several things.\n&gt;\n&gt; It allows for URI to be truly opaque. Simply, beyond a few well defined,\n&gt; &quot;cool URI&quot; entry points, you never need to create, or generate a URI. They\n&gt; are all given to you by the application. So, you can easily see, for\n&gt; example, an application at sales.example.com directing you to\n&gt; receiving.example.com, without your system even being aware of it -- because\n&gt; your system never needs to look inside of the URIs.\n&gt;\n&gt; Why is it going to receiving.example.com? Who cares. That&#39;s not your\n&gt; concern. What is your concern is that the URI responds properly as the\n&gt; define media type said it would respond (i.e. when you go to the #shipping\n&gt; rel, with a xml/vnd.shipping document, the Right Stuff happens). Meanwhile\n&gt; the backend has all sorts of flexibility regarding allocation of resources,\n&gt; application distribution, etc.\n&gt;\n&gt; Second, HATEOS allows for extensible interfaces. For example, say that the\n&gt; company now offers Express Shipping. If it&#39;s media type is extensible enough\n&gt; (and it&#39;s not difficult to do this), they can simply add a properly flagged\n&gt; rel to expressshippping.example.com in the data.\n&gt;\n&gt; Now, your application will completely ignore Express Shipping. It has NO\n&gt; IDEA what Express Shipping is, what to do with it, when to call it. It&#39;s\n&gt; just a dumb computer application.\n&gt;\n&gt; But that&#39;s ok, because someone else read the latest documention, saw the\n&gt; update, decided they liked express shipping, and added support to their\n&gt; client. YOUR &quot;outdated&quot; client continues to function as it should, since the\n&gt; change made doesn&#39;t break backward compatibility. Meanwhile, update clients\n&gt; get to leverage the new functionality.\n&gt;\n&gt; This evolutionary API approach can be very robust, allowing system to\n&gt; upgrade and migrate gracefully.\n&gt;\n&gt; If and when some functionality get REMOVED from the system, then your system\n&gt; will start faulting because the #oldfeature rel is no longer in the payload.\n&gt; Your code said &quot;send data.xml to #oldfeature rel&quot;, and it failed. &quot;method\n&gt; not found&quot;, whatever. There is no URI to access. At this point you get a\n&gt; exploding error log and your phone rings asking why it suddenly stops\n&gt; working.\n&gt;\n&gt; Turns out, not a whole lot you can do about that. Perhaps you weren&#39;t on the\n&gt; mailing list discussing the changes. Perhaps the service provider were\n&gt; complete jerks and just yanked the API out from under you. But there you\n&gt; are.\n&gt;\n&gt; However, this is no different than any other procedure. You tell your\n&gt; assistant &quot;go to this site, buy pencils and click on the express shipping\n&gt; button&quot;. Then you get a call &quot;I can&#39;t find the express shipping button. What\n&gt; do I do now?&quot; Indeed, what does she do.\n&gt;\n&gt; What she does, or you do, is you read the screen and see perhaps what you\n&gt; can do instead, find some other button to push, some option to check. You\n&gt; relearn the API on the fly.\n&gt;\n&gt; The M2M machine can&#39;t do that, but you, the developer, can read the payload\n&gt; and try to reinterpret it, follow (ideally embedded) links to API docs, or\n&gt; whatever and fix your client.\n&gt;\n&gt; The only difference between the M2M client and the human client is that the\n&gt; human tends to be a bit more flexible and adaptable to changes, but you can\n&gt; see situations where even humans aren&#39;t that flexible. M2M programs need to\n&gt; be recoded to affect change. Humans need to make decisions or delegate and\n&gt; get referrals to make decisions (&quot;There&#39;s Turbo Shipping, should I click\n&gt; that instead?&quot;).\n&gt;\n&gt; HATEOS allows more separation and more abstractions. It helps remove\n&gt; assumption. You don&#39;t code your system to hit the order.example.com URI and\n&gt; then immediately followed by expressshipping.example.com, ASSUMING that it&#39;s\n&gt; the logical, appropriate, next step.\n&gt;\n&gt; No, the application TELLS you what the appropriate next steps are, and leads\n&gt; your client program through the process appropriately.\n&gt;\n&gt; IMHO it keeps both clients and server more flexible and more robust assuming\n&gt; properly written clients and servers.\n&gt;\n&gt; Regards,\n&gt;\n&gt; Will Hartung\n&gt;\n\n-- \nSent from my mobile device\n\n"}}