{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":401876259,"authorName":"Will Hartung","from":"Will Hartung &lt;willh@...&gt;","profile":"gaminginparis","replyTo":"SENDER","senderId":"kUy4XrSjxShfwdp8Ig1aoydsu6rJEqCWguhz9f4NhFN0V2ztmoeTMeMKtdEUNtwvVrzKGi-iLT1pWs7qulNT_2f3c83J8KmUKA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful Invoicing System","postDate":"1316019569","msgId":17767,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQTJpRGlEMFFZUXc0Zm8zbkptVkRYRz1MMDdpcHBLWTBWK0FRcjZTR0dRUmF2Tj1td0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGo0cHJoOCtpMmhkQGVHcm91cHMuY29tPg==","referencesHeader":"PGo0cHJoOCtpMmhkQGVHcm91cHMuY29tPg=="},"prevInTopic":17766,"nextInTopic":17768,"prevInTime":17766,"nextInTime":17768,"topicId":17765,"numMessagesInTopic":5,"msgSnippet":"... Couple of points. Take a note of the first thing you mentioned here. You immediately brought up the database representation of the invoice. Simply put,","rawEmail":"Return-Path: &lt;willh@...&gt;\r\nX-Sender: willh@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 91145 invoked from network); 14 Sep 2011 16:59:31 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m14.grp.sp2.yahoo.com with QMQP; 14 Sep 2011 16:59:31 -0000\r\nX-Received: from unknown (HELO mail-wy0-f172.google.com) (74.125.82.172)\n  by mta5.grp.sp2.yahoo.com with SMTP; 14 Sep 2011 16:59:31 -0000\r\nX-Received: by wyg24 with SMTP id 24so2535353wyg.17\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 14 Sep 2011 09:59:30 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.227.38.165 with SMTP id b37mr28302wbe.107.1316019569655; Wed,\n 14 Sep 2011 09:59:29 -0700 (PDT)\r\nX-Received: by 10.227.133.206 with HTTP; Wed, 14 Sep 2011 09:59:29 -0700 (PDT)\r\nIn-Reply-To: &lt;j4prh8+i2hd@...&gt;\r\nReferences: &lt;j4prh8+i2hd@...&gt;\r\nDate: Wed, 14 Sep 2011 09:59:29 -0700\r\nMessage-ID: &lt;CAA2iDiD0QYQw4fo3nJmVDXG=L07ippKY0V+AQr6SGGQRavN=mw@...&gt;\r\nTo: &quot;jim.margetts&quot; &lt;jim.margetts@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=002215b02872f781c704ace9ae0c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Will Hartung &lt;willh@...&gt;\r\nSubject: Re: [rest-discuss] RESTful Invoicing System\r\nX-Yahoo-Group-Post: member; u=401876259; y=8TDlRQ3liPggY8WSi-mJL7sLvbA28Wv0cod0puTAbssRzoM7KOn6-A\r\nX-Yahoo-Profile: gaminginparis\r\n\r\n\r\n--002215b02872f781c704ace9ae0c\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nOn Wed, Sep 14, 2011 at 2:18 AM, jim.margetts &lt;jim.margetts@...&gt;wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt; First many thanks to all who answered my previous qry:\n&gt; http://tech.groups.yahoo.com/group/rest-discuss/message/17741 all your\n&gt; comments were most helpful. Thanks!\n&gt;\n&gt; I&#39;m currently trying to develop a basic invoicing system but i&#39;m having a\n&gt; bit of difficulty figuring out how best to represent invoices.\n&gt;\n&gt; An invoice is represented in the database as follows:\n&gt;\n&gt; invoices: invoice_no (pk), date, customer_id (fk)\n&gt;\n&gt; An invoice has several rows or lines that i have called invoice items.\n&gt; These are represented in the database as follows:\n&gt;\n&gt; invoice_items: invoice_item_id (pk), cost, qty, details, invoice_no (fk)\n&gt;\n&gt; The invoices resource is available at:\n&gt;\n&gt; /invoices\n&gt;\n&gt; GET /invoices gives a list of all the invoices on the system\n&gt;\n&gt; and you can:\n&gt;\n&gt; POST /invoices to add a new invoice.\n&gt;\n&gt; GET /invoices/1 gives a view of invoice 1 and all related invoice_items\n&gt; PUT /invoices/1 to update it or\n&gt; DELETE /invoices/1 to delete it (the db cascade deletes all related\n&gt; invoice_items)\n&gt;\n&gt; My first thought was that i should make invoice items availabe at the\n&gt; following:\n&gt;\n&gt; /invoices/1/invoice_items\n&gt; /invoices/1/invoice_items/[invoice_item_id]\n&gt;\n&gt; however, its seems a lot easier and it simplifies my routing a bit if i\n&gt; just make invoices items available via\n&gt;\n&gt; /invoice_items/[invoice_id]\n&gt;\n&gt; I suppose it mean i can&#39;t access the collection of invoice_items for a\n&gt; specific invoice directly via any url but i already do that when i use GET\n&gt; /invoice/[invoice_id]\n&gt;\n&gt; I hope that makes sense?\n&gt;\n&gt; I wondered if anyone had any comments / suggestions / criticisms of any of\n&gt; this?\n&gt;\n&gt; any help very much appreciated\n&gt;\n\nCouple of points.\n\nTake a note of the first thing you mentioned here. You immediately brought\nup the database representation of the invoice.\n\nSimply put, that implies you&#39;re starting from the wrong end of the stack for\nyour design. Database rows are not (necessarily) resources. It&#39;s very easy\nto fall in to the trap of trying to push your database model to the resource\nmodel, but it&#39;s really the wrong way to go as the two are not necessarily\nthat tightly bound. It&#39;s a mindset thing.\n\nMuch like folks like to start with &quot;what do my urls look like&quot;, when in fact\nthe URLs are an end result of the design, but not necessarily the goal or\npoint of the design.\n\nClearly URLs and resources are more tightly related (they are the names\nafter all), and they&#39;re more tightly related than the relationship between a\nresource and how it&#39;s persisted on the back end.\n\nBut the key here is to think of resources at a high level, and also\nimportant, consider the media type(s) that you want to use. Then model your\ndomain on top of those media types.\n\nYour debate over /invoice/invoiceitems and simply /invoiceitems should be\ndriven by use case as you try to apply them to your model more than anything\nelse.\n\nFor example I would simply posit the question of whether you need fine\ngrained access to the invoice items at all, rather than simply focusing on\nthe invoice itself as a whole.\n\nFolks have a tendency to want to expose their data model directly to the\nAPI, but that&#39;s not necessarily appropriate most of the time. It&#39;s just\nsomething we&#39;ve done for so long we naturally drift that way.\n\nSo, start at the front end and push back in to the system towards the\npersistence model rather than the other way around and see what ends up\nshaking out. Be conservative, if you don&#39;t need it, don&#39;t do it. REST\nresources tend to be rather coarse, so larger payloads aren&#39;t necessarily\nbad.\n\nConsider your /invoice and /invoice/invoiceitems idiom and how that affects\ncaching, for example. Making a change to /invoice/1/invoiceitems/1 doesn&#39;t\ninvalidate the /invoice/1 URI, even tho ideally that change likely should.\nSo that&#39;s another advantage of coarse resources.\n\nNo hard and fast rules, obviously. But the approach is important in order to\nembrace the idiom on its own without trying to let the non-REST idioms that\nyou&#39;re using to implement it poke through in the interface.\n\nRegards,\n\nWill Hartung\n(willh@...)\n\r\n--002215b02872f781c704ace9ae0c\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Wed, Sep 14, 2011 at 2:18 AM, jim.mar=\r\ngetts &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:jim.margetts@...&quot;&gt;jim.m=\r\nargetts@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, =\r\n204); padding-left: 1ex;&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-co=\r\nlor: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n   =\r\n   \n      \n      &lt;p&gt;First many thanks to all who answered my previous qry: =\r\n&lt;a href=3D&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/17741&quot; t=\r\narget=3D&quot;_blank&quot;&gt;http://tech.groups.yahoo.com/group/rest-discuss/message/17=\r\n741&lt;/a&gt; all your comments were most helpful. Thanks!&lt;br&gt;\n\n&lt;br&gt;\nI&#39;m curr=\r\nently trying to develop a basic invoicing system but i&#39;m having a bit o=\r\nf difficulty figuring out how best to represent invoices.&lt;br&gt;\n&lt;br&gt;\nAn invoi=\r\nce is represented in the database as follows:&lt;br&gt;\n&lt;br&gt;\ninvoices: invoice_no=\r\n (pk), date, customer_id (fk)&lt;br&gt;\n&lt;br&gt;\nAn invoice has several rows or lines=\r\n that i have called invoice items. These are represented in the database as=\r\n follows:&lt;br&gt;\n&lt;br&gt;\ninvoice_items: invoice_item_id (pk), cost, qty, details,=\r\n invoice_no (fk)&lt;br&gt;\n&lt;br&gt;\nThe invoices resource is available at:&lt;br&gt;\n&lt;br&gt;\n/=\r\ninvoices&lt;br&gt;\n&lt;br&gt;\nGET /invoices gives a list of all the invoices on the sys=\r\ntem&lt;br&gt;\n&lt;br&gt;\nand you can:&lt;br&gt;\n&lt;br&gt;\nPOST /invoices to add a new invoice.&lt;br&gt;=\r\n\n&lt;br&gt;\nGET /invoices/1 gives a view of invoice 1 and all related invoice_ite=\r\nms&lt;br&gt;\nPUT /invoices/1 to update it or&lt;br&gt;\nDELETE /invoices/1 to delete it =\r\n(the db cascade deletes all related invoice_items)&lt;br&gt;\n&lt;br&gt;\nMy first though=\r\nt was that i should make invoice items availabe at the following:&lt;br&gt;\n&lt;br&gt;\n=\r\n/invoices/1/invoice_items&lt;br&gt;\n/invoices/1/invoice_items/[invoice_item_id]&lt;b=\r\nr&gt;\n&lt;br&gt;\nhowever, its seems a lot easier and it simplifies my routing a bit =\r\nif i just make invoices items available via&lt;br&gt;\n&lt;br&gt;\n/invoice_items/[invoic=\r\ne_id]&lt;br&gt;\n&lt;br&gt;\nI suppose it mean i can&#39;t access the collection of invoi=\r\nce_items for a specific invoice directly via any url but i already do that =\r\nwhen i use GET /invoice/[invoice_id]&lt;br&gt;\n&lt;br&gt;\nI hope that makes sense?&lt;br&gt;\n=\r\n&lt;br&gt;\nI wondered if anyone had any comments / suggestions / criticisms of an=\r\ny of this?&lt;br&gt;\n&lt;br&gt;\nany help very much appreciated&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Couple of points.&lt;br&gt;&lt;br&gt;Take a note of the first =\r\nthing you mentioned here. You immediately brought up the database represent=\r\nation of the invoice.&lt;br&gt;\n&lt;br&gt;Simply put, that implies you&#39;re starting =\r\nfrom the wrong end of the stack for your design. Database rows are not (nec=\r\nessarily) resources. It&#39;s very easy to fall in to the trap of trying to=\r\n push your database model to the resource model, but it&#39;s really the wr=\r\nong way to go as the two are not necessarily that tightly bound. It&#39;s a=\r\n mindset thing.&lt;br&gt;\n&lt;br&gt;Much like folks like to start with &quot;what do my=\r\n urls look like&quot;, when in fact the URLs are an end result of the desig=\r\nn, but not necessarily the goal or point of the design.&lt;br&gt;&lt;br&gt;Clearly URLs=\r\n and resources are more tightly related (they are the names after all), and=\r\n they&#39;re more tightly related than the relationship between a resource =\r\nand how it&#39;s persisted on the back end.&lt;br&gt;\n&lt;br&gt;But the key here is to =\r\nthink of resources at a high level, and also important, consider the media =\r\ntype(s) that you want to use. Then model your domain on top of those media =\r\ntypes.&lt;br&gt;&lt;br&gt;Your debate over /invoice/invoiceitems and simply /invoiceite=\r\nms should be driven by use case as you try to apply them to your model more=\r\n than anything else.&lt;br&gt;\n&lt;br&gt;For example I would simply posit the question =\r\nof whether you need fine grained access to the invoice items at all, rather=\r\n than simply focusing on the invoice itself as a whole.&lt;br&gt;&lt;br&gt;Folks have a=\r\n tendency to want to expose their data model directly to the API, but that&=\r\n#39;s not necessarily appropriate most of the time. It&#39;s just something=\r\n we&#39;ve done for so long we naturally drift that way.&lt;br&gt;\n&lt;br&gt;So, start =\r\nat the front end and push back in to the system towards the persistence mod=\r\nel rather than the other way around and see what ends up shaking out. Be co=\r\nnservative, if you don&#39;t need it, don&#39;t do it. REST resources tend =\r\nto be rather coarse, so larger payloads aren&#39;t necessarily bad.&lt;br&gt;\n&lt;br=\r\n&gt;Consider your /invoice and /invoice/invoiceitems idiom and how that affect=\r\ns caching, for example. Making a change to /invoice/1/invoiceitems/1 doesn&=\r\n#39;t invalidate the /invoice/1 URI, even tho ideally that change likely sh=\r\nould. So that&#39;s another advantage of coarse resources.&lt;br&gt;\n&lt;br&gt;No hard =\r\nand fast rules, obviously. But the approach is important in order to embrac=\r\ne the idiom on its own without trying to let the non-REST idioms that you&#=\r\n39;re using to implement it poke through in the interface.&lt;br&gt;\n&lt;br&gt;Regards,=\r\n&lt;br&gt;&lt;br&gt;Will Hartung&lt;br&gt;(&lt;a href=3D&quot;mailto:willh@...&quot;&gt;willh@mirth=\r\ncorp.com&lt;/a&gt;)&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--002215b02872f781c704ace9ae0c--\r\n\n"}}