{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"zJwXMK7untV-8Bp2-jbRFsjZrHYfGq7DEzW37zOS8Q3gtyCDdWT8DZLBafAcNmIQ59bC_ysfTHxoaDhnUrn9gRuu4mTzA_292Q6IrfpYvHb43mbsyzHMukxU","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Thinking about REST and HTTP","postDate":"1276366466","msgId":15650,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGh2MGlxMitxNjFsQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEFBTkxrVGlseVZ3NGQ3dTlmY2oyWXB4bmR6Ql9SVmY0WnRsNlZxYjN5X3VHSEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15648,"nextInTopic":15652,"prevInTime":15649,"nextInTime":15651,"topicId":15365,"numMessagesInTopic":52,"msgSnippet":"Hello Glen. As I just posted a comment with some hint about how to evaluate a toolchest/framework, I may want to open another lead here. One way is to actually","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 99650 invoked from network); 12 Jun 2010 18:14:46 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m10.grp.re1.yahoo.com with QMQP; 12 Jun 2010 18:14:46 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta1.grp.sp2.yahoo.com with SMTP; 12 Jun 2010 18:14:46 -0000\r\nX-Received: from [69.147.65.171] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 12 Jun 2010 18:14:27 -0000\r\nX-Received: from [98.137.34.73] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 12 Jun 2010 18:14:27 -0000\r\nDate: Sat, 12 Jun 2010 18:14:26 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hv0iq2+q61l@...&gt;\r\nIn-Reply-To: &lt;AANLkTilyVw4d7u9fcj2YpxndzB_RVf4Ztl6Vqb3y_uGH@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Thinking about REST and HTTP\r\nX-Yahoo-Group-Post: member; u=124198377; y=i-jiymb-qibwQSNk3KZ-kM58knsHoG7uQcVxuhfOn9hiAZAN\r\nX-Yahoo-Profile: willmarpo\r\n\r\nHello Glen.\nAs I just posted a comment with some hint about how to evaluate=\r\n a toolchest/framework, I may want to open another lead here.\n\nOne way is t=\r\no actually look at how other frameworks (mostly java I hear) deal with the =\r\nidea. The other way is to actually work on understanding the REST style, wh=\r\ny the interaction is how it is, and what happens in the network. \n\nWhy do I=\r\n say so? Because the successful API definition depends on that understandin=\r\ng and in the goal you are trying achieve. Bear with me please:\n\n1. REST exp=\r\nlains the constrains you impose to your architecture to allow better perfor=\r\nmance, reliability, visibility, scalability for large grain hypermedia tran=\r\nsfer applications in a networked solutions.\n\n2. A RESTFul service is an ide=\r\na of using the guidelines of REST to expose services on web. Some ways work=\r\n better and attach to more constrains that others, but in general the idea =\r\nis to have one initial URI, starting point to a set of states, which transi=\r\ntions are governed by hyperlinks, and whose actions are focused in manipula=\r\nting resources using a standard interface (HTTP methods).\n\n3. The constrain=\r\ns include self-description of messages, cache support, client/server separa=\r\ntion of concerns and possible code on demand support. And, of course, use o=\r\nf Hypermedia to define and control application state\n\n4. In WCF, one import=\r\nant thing is the generic interface. That is, the service Endpoint (Address,=\r\n binding and contract), down to the binding elements. Behind all that, is a=\r\n description of interaction, and API definition. How to match that to the R=\r\nEST service? Interesting question.\n\n5. Let&#39;s start on the server side. \n a.=\r\n One first thing is the possibility to define a serviceEndpoint as unique, =\r\nmeaning just one URI to start it all. \n b. The other need is of course the =\r\nability to produce different kinds of media types to serve representations.=\r\n If the idea is to avoid a bare-bones implementation for developers, we may=\r\n want to abstract the content negotiation so it is somehow automatic. The c=\r\nlient will request what can be served, or request some particular represent=\r\nation. On server side we only need to define the representation source and =\r\ntransformation. (say, Mr. WCF, this record in database you can publish it a=\r\ns JSON, XML or URLEncoded, here is the mapping, take care of it when reques=\r\nted, thanks).\n c. What about defining the resources and possible state engi=\r\nne? Even setting an URI generation template. All that to add the generated =\r\nURIs into the representations. Of course, for each resource type, define th=\r\ne HTTP operations. See next point.\n d. We only support HTTP Methods. So, no=\r\n [OperationContract] String sayHello(String name); things. sayHellow is an =\r\ninternal method you can use internally, but that RPC stuff may be heresy in=\r\n REST world (nor for some, I know). But it may be [OperationContract(HTTPMe=\r\nthod=3DPOST)] String sayHello(String body); where the String argument is th=\r\ne body sent in the post and the returned String the response. All the other=\r\n POST metadata and control may be defined with other artifacts. If you want=\r\n to excel, you can design that to use any protocol, not just HTTP.\n e. All =\r\nthat means, all the HTTP plumbing is hidden, plus an easier way to provide =\r\nautomatic representations control, metadata control and response.\n\n6. What =\r\nabout the client? Almost same thing. In the ideal world clients are given j=\r\nust one URI, and build dynamically their path from there on. In real world,=\r\n they usually know what are the steps and the dynamic URIs (hypermedia usag=\r\ne) is to identify specific instances of already known expected types. Any I=\r\ndeas to improve that? A nice client that runs by itself and starts followin=\r\ng links and things, just stopping for asking me about data or decide on opt=\r\nions/path here and there, would be nice. Not surprisingly that describes a =\r\nbrowser. \n\n7. But all I have said is too nailed to the grown. On the high s=\r\nide, the idea is to allow client and server independent evolution since no =\r\ncoupling is done at interface level. That calls for an automatic interactio=\r\nn thing that allows me to focus on resource and representation definition, =\r\nplus the state map, and on client side to worry about a goal definition. Ca=\r\nching, gateways, all that is invisible.\n\n8. There is something else, last t=\r\nhing. The layered constrain in REST. The idea is that you can have interim =\r\nnodes, that may even parse and process partially the payload of the message=\r\n. In this case, client only sees the next layer, and that one may see the n=\r\next one.\n\nAgain, I suggest you to start taking a look at the real implement=\r\nations that are done bare-bones, understanding the idea of the style, and s=\r\nee if that fits into WCF generic definition or not.\n\nCheers.\n\nWilliam Marti=\r\nnez Pomares\n\n\n \n--- In rest-discuss@yahoogroups.com, Glenn Block &lt;glenn.blo=\r\nck@...&gt; wrote:\n&gt;\n&gt; Hi guys\n&gt; \n&gt; I&#39;ve been trolling for a few weeks :-) I wo=\r\nrk on the WCF team at Microsoft.\n&gt; We&#39;re currently in the very early stages=\r\n of planning for new apis for\n&gt; supporting pure REST and HTTP style develop=\r\nment. Our goal is to create\n&gt; something simple, lightweight and true to for=\r\nm. We are looking provide a\n&gt; natural API both for the service author and f=\r\nor the consumer. This not an\n&gt; attempt to simply retrofit onto a SOAP based=\r\n model.\n&gt; \n&gt; It would be great to hear thoughts you guys have on what would=\r\n be the ideal\n&gt; developer experience for using REST. Also if you&#39;d like to =\r\nbe involved we&#39;d\n&gt; welcome the feedback.\n&gt; \n&gt; Regards\n&gt; Glenn\n&gt;\n\n\n\n"}}