{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":221173245,"authorName":"Andrew Wahbe","from":"Andrew Wahbe &lt;andrew.wahbe@...&gt;","profile":"wahbedahbe","replyTo":"SENDER","senderId":"gVb6foHkgE3WkQFbHMk9QsUjwKYSGS1igvcO3Q9soeLvKM4qeut-kPQEST7o0RfdXUbAiJebNKALts8oxi1min1d-Dm9Fx3KV3wCVA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: HTML REST API example [was: Link relations]","postDate":"1291687121","msgId":17084,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGlrZjJXUTNFZ2ZUMXYrdTJKVFd5YVp2M1BEUzAtWWNhMGFKMmNRdEBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTAxMjA2MTQ1NjI0LjYzYjEzNTg5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDIwMTAxMjA1MjIyNDA5LjJkYzZjYjY2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPGlkaXV2cys3ZXBzQGVHcm91cHMuY29tPgk8MjAxMDEyMDYxNDU2MjQuNjNiMTM1ODkuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":17083,"nextInTopic":17085,"prevInTime":17083,"nextInTime":17085,"topicId":17057,"numMessagesInTopic":43,"msgSnippet":"... I think we have a different view on what benefits REST can provide. If I understand your POV then you are saying that REST makes it easy for a developer to","rawEmail":"Return-Path: &lt;andrew.wahbe@...&gt;\r\nX-Sender: andrew.wahbe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 47144 invoked from network); 7 Dec 2010 01:58:43 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m7.grp.sp2.yahoo.com with QMQP; 7 Dec 2010 01:58:43 -0000\r\nX-Received: from unknown (HELO mail-fx0-f46.google.com) (209.85.161.46)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Dec 2010 01:58:42 -0000\r\nX-Received: by fxm20 with SMTP id 20so4873400fxm.19\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 06 Dec 2010 17:58:42 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.223.83.11 with SMTP id d11mr6405048fal.37.1291687121975; Mon,\n 06 Dec 2010 17:58:41 -0800 (PST)\r\nX-Received: by 10.204.63.12 with HTTP; Mon, 6 Dec 2010 17:58:41 -0800 (PST)\r\nIn-Reply-To: &lt;20101206145624.63b13589.eric@...&gt;\r\nReferences: &lt;20101205222409.2dc6cb66.eric@...&gt;\n\t&lt;idiuvs+7eps@...&gt;\n\t&lt;20101206145624.63b13589.eric@...&gt;\r\nDate: Mon, 6 Dec 2010 20:58:41 -0500\r\nMessage-ID: &lt;AANLkTikf2WQ3EgfT1v+u2JTWyaZv3PDS0-Yca0aJ2cQt@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Andrew Wahbe &lt;andrew.wahbe@...&gt;\r\nSubject: Re: [rest-discuss] Re: HTML REST API example [was: Link relations]\r\nX-Yahoo-Group-Post: member; u=221173245; y=0IQPYXMO_nVRruizD9VAlntjtn1tzdqiG0-VreF7GF7-8vbppA\r\nX-Yahoo-Profile: wahbedahbe\r\n\r\nOn Mon, Dec 6, 2010 at 4:56 PM, Eric J. Bowman &lt;eric@...&gt; wrot=\r\ne:\n&gt; &quot;wahbedahbe&quot; wrote:\n&gt;&gt;\n&gt;&gt; And sure -- you are using XHTML and any brow=\r\nser can interact with\n&gt;&gt; your service. Ok. But these M2M clients that are k=\r\neying off of the id\n&gt;&gt; values etc. (which one can argue is &quot;out of band kno=\r\nwledge&quot; -- but it\n&gt;&gt; is questionable) can&#39;t interact with ANY service that =\r\nis similarly\n&gt;&gt; designed using the same media type.\n&gt;&gt;\n&gt;\n&gt; Those id values =\r\nare neither here nor there in terms of the API. =A0The\n&gt; markup is how it i=\r\ns because of WCAG checkpoints, which means every\n&gt; field has a label bound =\r\nto its @id using @for. =A0I don&#39;t understand why\n&gt; an m2m client keys off o=\r\nf anything -- I&#39;ve distributed an API in a\n&gt; standardized format which make=\r\ns the name-value pairs obvious, as well\n&gt; as the format and method the serv=\r\ner expects. =A0Anyone can code an m2m\n&gt; client to make those POST requests =\r\nwith the specified name-value pairs.\n&gt;\n\nI think we have a different view on=\r\n what benefits REST can provide. If\nI understand your POV then you are sayi=\r\nng that REST makes it easy for\na developer to understand the request body f=\r\normat (and I suppose\nparameters if applicable, for example, for form-url-en=\r\ncoded name-value\npairs) and methods that are acceptable at the URIs exposed=\r\n by the\nserver.\n\nWhile this is true for your example, I am saying that REST=\r\n can do\nbetter than that. I am saying that a client coded only to a media t=\r\nype\n(a STANDARD, REGISTERED one -- I am not debating that point) can adapt\n=\r\nto a service that uses that type. The name-value pairs and methods at\nthe s=\r\nervice&#39;s URIs are not coded into the client at all. So in my\nideal world, i=\r\nt is possible for the developer of the RESTful client to\nnever see any of t=\r\nhe representations of the service(s) the client will\ninteract with. This is=\r\n possible for browser development is it not?\n\n&gt;&gt;\n&gt;&gt; The issue is this: the =\r\nmeaning of the id values is described in the\n&gt;&gt; HTML you are serving, but i=\r\ns really only readable by a human being\n&gt;&gt; who is doing the coding. It is a=\r\nn odd sort of &quot;out of band&quot; -- it is\n&gt;&gt; sort of like a signal embedded with=\r\nin a signal. But the client itself\n&gt;&gt; is not picking up the extra signal --=\r\n the human being developing (not\n&gt;&gt; using) the client is. I still consider =\r\nit out of band but see how\n&gt;&gt; this is debatable.\n&gt;&gt;\n&gt;\n&gt; The id values aren&#39;=\r\nt intended for human consumption, either. =A0They are\n&gt; there for machine-r=\r\neadability by assistive devices, because that&#39;s the\n&gt; most-widely-interoper=\r\nable manner of binding a label to a field.\n&gt;\nFair enough. So how does the c=\r\nlient in your model know &quot;Ah the form\nthat accepts variables foo and bar ca=\r\nn be used now&quot;? I had assumed the\nids, is this not so?\n&gt;&gt;\n&gt;&gt; To me your exa=\r\nmple, while hard to argue against, still doesn&#39;t yield\n&gt;&gt; the benefits I&#39;d =\r\nlike to see from a RESTful m2m system. With your\n&gt;&gt; methodology, I still ca=\r\nn&#39;t write a single client that a wide range of\n&gt;&gt; services can be targeted =\r\nagainst.\n&gt;&gt;\n&gt;\n&gt; It&#39;s possible to write such a client for shopping carts whi=\r\nch re-use\n&gt; the GoodRelations ontology. =A0But I still don&#39;t see why the de=\r\nsire to\n&gt; write such clients has anything to do with the media type. =A0If =\r\nyou&#39;re\n&gt; creating media types which attempt to lead the user-agent around b=\r\ny the\n&gt; nose, it isn&#39;t REST -- in REST, the media type instructs the user-a=\r\ngent\n&gt; how to determine what the state transitions are, so the user can cho=\r\nose\n&gt; between them. =A0Don&#39;t change this basic paradigm and tell me it&#39;s RE=\r\nST,\n&gt; or a proper use case for custom media types.\n&gt;\n\nIt&#39;s not clear to me =\r\nwhat the difference is between &quot;leading the\nuser-agent around by the nose&quot; =\r\nand &quot;instructing the user-agent how to\ndetermine what the state transitions=\r\n are&quot;. Can you clarify?\n&gt;&gt;\n&gt;&gt; I keep hearing that what I&#39;m targeting is not=\r\n possible -- thing is I\n&gt;&gt; know that it is, because I&#39;ve done it for specif=\r\nic use cases. The\n&gt;&gt; problem is boiling it down to the key essential, gener=\r\nic\n&gt;&gt; methodologies that apply across domains. I&#39;m continuing to plug away\n=\r\n&gt;&gt; at it when I have time though...\n&gt;&gt;\n&gt;\n&gt; What is possible, and what is RE=\r\nSTful, are not always the same thing.\n&gt; While it&#39;s possible to reach your g=\r\noals by defining media types as\n&gt; object keys, the result is a library-base=\r\nd API instead of a network-\n&gt; based API -- the opposite of a uniform interf=\r\nace. =A0So I say, use media\n&gt; types properly and look for solutions to this=\r\n problem where it&#39;s\n&gt; properly solved -- domain-specific vocabulary embedde=\r\nd within\n&gt; ubiquitous media types.\n&gt;\n&gt; -Eric\n&gt;\n\nI&#39;m definitely not espousin=\r\ng the &quot;media type as object key&quot; approach\n-- I think you are mis-interpreti=\r\nng my statements. I&#39;m trying to\ngeneralize the approach that I believe was =\r\nused in HTML, VoiceXML,\nCCXML and some efforts of my own (though those did =\r\nnot get\nstandardized/registered and thus perhaps aren&#39;t fully RESTful from\n=\r\nthat perspective). In all of these examples, the client was coded to a\nmedi=\r\na type that was not specific to a service or it&#39;s internal objects\nat all. =\r\nIn fact, I&#39;d say that the media type was more &quot;client centric&quot;\nthan &quot;servic=\r\ne centric&quot;. The representation, when loaded by the client\ninformed it how t=\r\no set the internal state of processing resources on\nthe client (the view re=\r\nndered on the screen for HTML, prompt playback\nand loading speech-rec gramm=\r\nars for VoiceXML, the state of calls and\nconferences for CCXML). The repres=\r\nentation also informed the client\nhow to map events generated by those reso=\r\nurces (mouse/keyboard events\nfor HTML, speech-rec/dtmf events for VoiceXML,=\r\n call/conference events\nfor CCXML) to application state transitions (follow=\r\ning links,\nsubmitting forms). I see the user-agent as a mediator between an=\r\n\ninterface to the user (human or machine) and the HTTP-based interface\nto t=\r\nhe server. The representation customizes the mediation between\nthese interf=\r\naces at each application state. I believe that the\nrepresentation format de=\r\nsign should be driven by the interface to the\nhuman or machine &quot;user&quot; that =\r\nis specific to each type of user agent.\n\nThe above was perhaps a lot to dig=\r\nest -- I haven&#39;t had much luck\nexplaining this in short forum postings. I&#39;v=\r\ne broken down the long\nform of the argument into articles that I&#39;m writing =\r\non my blog\n(http://linkednotbound.net/) It is slow going (at this rate it w=\r\nill\ntake over a year) but hopefully I&#39;ll get there some day...\n\nAndrew\n\n"}}