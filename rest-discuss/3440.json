{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":137909573,"authorName":"Richard Padley","from":"Richard Padley &lt;rest-discuss@...&gt;","profile":"sem_antico","replyTo":"SENDER","senderId":"bC3RirU1r5RGSGwMgdXsb5mk-tKPHO9uVnuEJoxdntliO_VoGk_eUann7EhcT4iqxAueHOSy1pO74bK4OhaiHPUAqzMPwQ-WDamcXgoIeOeR5qZvGj8dccgHOw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Containers and nested representations","postDate":"1046434345","msgId":3440,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNFNUY1MjI5LjkwMjA4MDZAc2VtYW50aWNvLmNvbT4=","inReplyToHeader":"PHNlbWFudGljby5tYWlsLnJlc3QtZGlzY3Vzcy9DNEQ5Qzg1Ny00OUIxLTExRDctODA2QS0wMDAzOTNBNTM0ODJAdmRtLmNjPg==","referencesHeader":"PHNlbWFudGljby5tYWlsLnJlc3QtZGlzY3Vzcy9iM2lzN2YkcjE4JDFAcGFwcmlrYS5ycC5sYW4+IDxzZW1hbnRpY28ubWFpbC5yZXN0LWRpc2N1c3MvQzREOUM4NTctNDlCMS0xMUQ3LTgwNkEtMDAwMzkzQTUzNDgyQHZkbS5jYz4="},"prevInTopic":3428,"nextInTopic":3443,"prevInTime":3439,"nextInTime":3441,"topicId":3414,"numMessagesInTopic":7,"msgSnippet":"... I ve never been sure what to return in the message-body after a PUT. I figured that if the client needs to check the state of the resource (in case the","rawEmail":"Return-Path: &lt;news@...&gt;\r\nX-Sender: news@...\r\nX-Apparently-To: rest-discuss@...\r\nReceived: (EGP: mail-8_2_3_4); 28 Feb 2003 12:12:28 -0000\r\nReceived: (qmail 57371 invoked from network); 28 Feb 2003 12:12:27 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 28 Feb 2003 12:12:27 -0000\r\nReceived: from unknown (HELO semantico.com) (212.74.15.98)\n  by mta2.grp.scd.yahoo.com with SMTP; 28 Feb 2003 12:12:27 -0000\r\nReceived: by semantico.com (Postfix, from userid 99)\n\tid 2378D320004; Fri, 28 Feb 2003 12:12:26 +0000 (GMT)\r\nDelivered-To: news-outgoing@...\r\nReceived: by semantico.com (Postfix, from userid 9)\n\tid 2F47B320004; Fri, 28 Feb 2003 12:12:25 +0000 (GMT)\r\nTo: rest-discuss@...\r\nPath: not-for-mail\r\nSubject: Re: [rest-discuss] Containers and nested representations\r\nDate: Fri, 28 Feb 2003 12:12:25 +0000\r\nOrganization: http://www.semantico.com/\r\nLines: 194\r\nMessage-ID: &lt;3E5F5229.9020806@...&gt;\r\nReferences: &lt;semantico.mail.rest-discuss/b3is7f$r18$1@...&gt; &lt;semantico.mail.rest-discuss/C4D9C857-49B1-11D7-806A-000393A53482@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Trace: paprika.rp.lan 1046434345 14920 192.168.1.4 (28 Feb 2003 12:12:25 GMT)\r\nX-Complaints-To: news@...\r\nNNTP-Posting-Date: Fri, 28 Feb 2003 12:12:25 +0000 (UTC)\r\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2) Gecko/20021126\r\nX-Accept-Language: en, en-us\r\nIn-Reply-To: &lt;semantico.mail.rest-discuss/C4D9C857-49B1-11D7-806A-000393A53482@...&gt;\r\nSender: nobody@...\r\nX-Original-Return-Path: &lt;news@...&gt;\r\nX-Original-To: news-outgoing@...\r\nX-Original-To: Vincent D Murphy &lt;vdm@...&gt;\r\nX-eGroups-From: Richard Padley &lt;richardp@...&gt;\r\nFrom: Richard Padley &lt;rest-discuss@...&gt;\r\nX-Yahoo-Group-Post: member; u=137909573\r\nX-Yahoo-Profile: sem_antico\r\n\r\nVincent D Murphy wrote:\n&gt; On Wednesday, February 26, 2003, at 05:07 PM, Richard Padley wrote:\n&gt; \n&gt;&gt; I&#39;ve been working through a few issues related to how a container\n&gt;&gt; resource behaves, and I&#39;m not sure if I&#39;m bumping into some limitations\n&gt;&gt; of REST or HTTP.\n&gt; \n&gt; \n&gt; Thanks for sharing this; I&#39;ve been a bit complacent in posting my \n&gt; experiences with containers to this list.\n&gt; \n&gt;&gt; [snip example]\n&gt; \n&gt; \n&gt;&gt; The idea here is that the contained resources are serialised in the\n&gt;&gt; representation. I&#39;m assuming that this is OK from a REST perspective.\n&gt; \n&gt; \n&gt; I see nothing wrong with it; it doesn&#39;t say anywhere &#39;one resource can&#39;t \n&gt; contain another&#39;, AFAIK.\n&gt; \n&gt;&gt; Now I want to modify a box. I&#39;m going to use PUT to replace the whole\n&gt;&gt; box. In doing this I&#39;ll naturally be replacing the contained widgets as\n&gt;&gt; well.\n&gt;&gt;\n&gt;&gt; [snip example]\n&gt; \n&gt; \n&gt;&gt; The response is\n&gt;&gt;\n&gt;&gt; HTTP/1.1 204 No Content\n&gt; \n&gt; \n&gt; Maybe this could be a 200 with the updated box/100?  The 204 just seems \n&gt; kind of &#39;useless&#39; to me.\n\nI&#39;ve never been sure what to return in the message-body after a PUT. I \nfigured that if the client needs to check the state of the resource (in \ncase the server adds some information to the PUT representation), it \ncould perform a GET request.\n\n&gt; \n&gt;&gt; Now, I&#39;ve changed the colour of this box, and I&#39;ve both changed the\n&gt;&gt; colour of widget 33, and added a new widget 35 to the container. Also I\n&gt;&gt; have deleted widget 34, since it now had no container, and this is not\n&gt;&gt; allowed (in this particular application).\n&gt; \n&gt; \n&gt; Hmm.. I&#39;m not sure that having widget 34 automatically &#39;fall off a \n&gt; cliff&#39; is a good thing.\n&gt; \n&gt; It may be helpful to consider the fact that &#39;widgets can not have no \n&gt; container&#39; a constraint specific to your application, and try and find a \n&gt; strategy that is RESTful to enforce it.\n&gt; \n&gt; Idea:\n&gt; Perhaps you should explore the concept of a &#39;reaper&#39; process (a client \n&gt; UA or something on the server) which periodically searches and destroys \n&gt; orphaned widgets (it could use explicit DELETE requests to do this on \n&gt; the results of a GET /widgets?parent=null or whatever).\n&gt; \n&gt; But see below.\n&gt; \n&gt;&gt; My question is, have I done too much at once here? I&#39;d like to be able\n&gt;&gt; to indicate the newly created widget 35 with a 201 Created response, but\n&gt;&gt; the response I must return relates to the container, not its contents.\n&gt;&gt; Also I&#39;m not too happy with the indirect addressing that seems to be\n&gt;&gt; happening here - I have the URI for the box as part of the request, but\n&gt;&gt; this request affects other resources, which I can only address inside\n&gt;&gt; the message-body itsself, which just seems wrong.\n&gt; \n\nMy reading of RFC 2616 seems to indicate this is OK. I&#39;ve just started \nreading RFC 2518 (WEBDAV), and theres a whole load of stuff in there \nabout containers and nesting.\n\n&gt; \n&gt; I have asked the same question (aloud, not on the list).  I think its \n&gt; something of a grey area.\n&gt; \n&gt; Rather than a big fat PUT to the container, you could split your request \n&gt; up in to a number of constituent requests to constituent resources.  for \n&gt; example:\n\nMy application semantics require that the update is atomic. This fits \nnicely with the idea of supplying a &#39;complete&#39; representation of a \ncontainer resource (with all its contained resources).\n\n&gt; \n&gt; 1. PUT to widget/33 changing the colour.  this would (or should?) update \n&gt; box/100 automatically because it has a dependency on widget/33.\n\nAgreed\n\n&gt; 2. POST widget/35&#39;s URI to box/100 (possible after POSTing 35 to widgets).\n\nAgain there are choices here. I can either POST the URI for the \ncontained resource (widget 35) into the container :\n\nPOST /box/100 HTTP/1.1\nContent-Type: text/xml\n\n&lt;box x:href=&quot;/box/100&quot;&gt;\n    &lt;widget x:href=&quot;/widget/35&quot;&gt;\n&lt;/box&gt;\n\nProvided widget 35 already exists I&#39;d assume the server response would be\n\nHTTP/1.1 204 No Content\n\nOr I could post the respresentation of the contained resource to the \ncontainer:\n\nPOST /box/100 HTTP/1.1\nContent-Type: text/xml\n\n&lt;box x:href=&quot;/box/100&quot;&gt;\n    &lt;widget&gt;\n      &lt;widget_id&gt;35&lt;widget_id&gt;\n      &lt;colour&gt;Black&lt;/colour&gt;\n      &lt;size&gt;9&lt;/size&gt;\n    &lt;/widget&gt;\n&lt;/box&gt;\n\nNow I&#39;m not sure what the response is - 201 Created seems absolutlely \nthe right thing here, but it simply breaks if I POST the respresntation \nof two new resources at the same time\n\nPOST /box/100 HTTP/1.1\nContent-Type: text/xml\n\n&lt;box x:href=&quot;/box/100&quot;&gt;\n    &lt;widget&gt;\n      &lt;widget_id&gt;35&lt;widget_id&gt;\n      &lt;colour&gt;Black&lt;/colour&gt;\n      &lt;size&gt;9&lt;/size&gt;\n    &lt;/widget&gt;\n    &lt;widget&gt;\n      &lt;widget_id&gt;40&lt;widget_id&gt;\n      &lt;colour&gt;White&lt;/colour&gt;\n      &lt;size&gt;9&lt;/size&gt;\n    &lt;/widget&gt;\n&lt;/box&gt;\n\nNow the only response possible seems to be 204 (or 200) - I can&#39;t \nrespond with two lots of 201 Created. And this can only get more complex \nif we consider the case then a POST to that box could create one widget \nand modify another.\n\n&gt; 3. DELETE 34.\n&gt;    or\n&gt;    PUT box/100 minus the mention of widget/34.\n&gt; \n&gt; the trouble with the delete of 34 is that the semantics are overloaded. \n&gt;  the PUT to the box that excludes the 34 really only removes it from the \n&gt; container, rather than deleting it outright.  these are two seperate \n&gt; semantic actions.\n\nI think the semantics I need require that deleteing a container will \nalso delete all of the resouces it contains - atomic requirement again. \nI could see that case that this would not be a requirement in all \napplications.\n\n&gt; \n&gt; i would be interested to hear what you (and others) think of this.\n&gt; \n&gt; D.J. Adams has written about this same idea at\n&gt; http://www.pipetree.com/space/RtRest (warning this is cutnpaste from the \n&gt; HTML):\n&gt; \n&gt; --CUT\n&gt; Having something like /ticket/42/basics/status returning a \n&gt; representation of ticket 42&#39;s status in text/plain, say &quot;new&quot;, is a very \n&gt; attractive feature, I think.\n&gt; \n&gt; GET /ticket/42/basics/status HTTP/1.1\n&gt; \n&gt; HTTP/1.1 200 OK\n&gt; Connection: Close\n&gt; Content-Type: text/plain\n&gt; \n&gt; open\n&gt; \n&gt; Preferable to composing a method call, serialising it into XML, sending \n&gt;  it to an end point, and then parsing the result out of the XML that \n&gt; comes back, all to retrieve such a simple piece of data. It&#39;s intriguing.\n&gt; --CUT\n&gt; \n&gt; anyway, thanks again for the thought-provoking post, and the coherent \n&gt; example (works wonders when trying to ask a question!).\n&gt; \n&gt; regards,\n&gt; -vincent\n\n"}}