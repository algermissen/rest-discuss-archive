{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":303606877,"authorName":"Stian Soiland","from":"Stian Soiland &lt;ssoiland@...&gt;","profile":"stian_soiland","replyTo":"SENDER","senderId":"9npu7AP0JKkGYsJ35yAuPNXsyJomxxRHVeO-9mwcngJDXVJgkOHu9toYpdOfVU0Kgia1a-bTjGTiN7Mr_kGIcXrAaXp5j67GoDKExw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"URI for current authenticated user","postDate":"1179240942","msgId":8464,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDBFNzVBQjA3LUFDMTQtNDkyRS05NUFELTlGMjI3RDk0RjZCQ0Bjcy5tYW4uYWMudWs+","inReplyToHeader":"PDQ2NDlBRTRCLjEwODA4MDdAaGFja2NyYWZ0Lm5ldD4=","referencesHeader":"PGQ4YjU5NDVmMDcwNTE0MTExNXAxZjI0MDlkOXRlZmRiY2Y3MWViZTAxM2JlQG1haWwuZ21haWwuY29tPiA8NDY0OUFFNEIuMTA4MDgwN0BoYWNrY3JhZnQubmV0Pg=="},"prevInTopic":8463,"nextInTopic":8465,"prevInTime":8463,"nextInTime":8465,"topicId":8451,"numMessagesInTopic":24,"msgSnippet":"... This is an interesting point. I try to follow this principle in my application. On the seed URI you get a capabilities document that basically has links","rawEmail":"Return-Path: &lt;ssoiland@...&gt;\r\nX-Sender: ssoiland@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 56072 invoked from network); 15 May 2007 14:56:05 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m41.grp.scd.yahoo.com with QMQP; 15 May 2007 14:56:05 -0000\r\nReceived: from unknown (HELO tranquility.mcc.ac.uk) (130.88.200.145)\n  by mta11.grp.scd.yahoo.com with SMTP; 15 May 2007 14:56:05 -0000\r\nReceived: from webcam3.cs.man.ac.uk ([130.88.195.217])\n\tby tranquility.mcc.ac.uk with esmtp (Exim 4.63 (FreeBSD))\n\t(envelope-from &lt;ssoiland@...&gt;)\n\tid 1HnyRU-000IQc-Eh; Tue, 15 May 2007 15:56:00 +0100\r\nIn-Reply-To: &lt;4649AE4B.1080807@...&gt;\r\nReferences: &lt;d8b5945f0705141115p1f2409d9tefdbcf71ebe013be@...&gt; &lt;4649AE4B.1080807@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;0E75AB07-AC14-492E-95AD-9F227D94F6BC@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 15 May 2007 15:55:42 +0100\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-UoM: Scanned by the University Mail System. See http://www.itservices.manchester.ac.uk/email/filtering/information/ for details.\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Stian Soiland &lt;ssoiland@...&gt;\r\nSubject: URI for current authenticated user\r\nX-Yahoo-Group-Post: member; u=303606877; y=GhdlZNvNBY5RsTuXjPcNMaJzmAtD6eG_mhMP0Jk3qZ1OvfIdNwMwTA\r\nX-Yahoo-Profile: stian_soiland\r\n\r\n\nOn 15 May 2007, at 13:57, Jon Hanna wrote:\n&gt;\n&gt; You generally need to have some sort of &quot;seed&quot; URI to tell a client\n&gt; where to start - this cannot be prevented.\n\nThis is an interesting point.\n\nI try to follow this principle in my application. On the seed URI you  \nget a &#39;capabilities&#39; document that basically has links to the main  \nresource collections.\n\nThe application in question is a workflow job submission system with  \na rich client (not browser).\n\nSay you GET /:\n\n&lt;capabilities&gt;\n   &lt;users xlink:href=&quot;users&quot; /&gt;\n   &lt;queues xlink:href=&quot;queues&quot; /&gt;\n   &lt;workers xlink:href=&quot;workers&quot; /&gt;\n&lt;/capabilities&gt;\n\n\nIn my design for the client everything is focused around the user,  \nsimilar to the personal shopping basket in several REST examples. So a\n\nGET /users/stain:\n\n&lt;user&gt;\n   &lt;username&gt;stain&lt;/username&gt;\n   &lt;workflows xlink:href=&quot;/users/stain/workflows&quot;&gt;\n   &lt;jobs xlink:href=&quot;/usesr/stain/jobs&quot;&gt;\n&lt;/user&gt;\n\n From here the client knows where to go to post new jobs, etc. My  \nproblem is how to get that &#39;/user/stain&#39; address from the seed  \naddress. The username is the same as in the HTTP basic authentication  \n(which is required for basically everything), but I still feel it&#39;s  \nnot really RESTful to on the client construct the address from the  \ncapabilities-&gt;users element at / and the HTTP basic-auth username, or  \nto include a &lt;currentUser xlink:href=&quot;users/stain&quot; /&gt; element in the  \ncapabilities document. Or is it?\n\n\nI could use /users/stain as the seed URI instead of /. Registration  \n(POST to /users) sends a Location in the return, so a clever client  \ncould easily store this URI, but this still makes it difficult for  \nnew clients when users have already registered. Users would type in  \nthe root URI of the service, their username and password. (If they  \nare told in documentation that &quot;their&quot; URI is /users/YOURUSERNAME  \nthis is basically the same as letting the client construct this URI)   \nShould I have a POST /users;current or similar RPC-ish hacks?\n\n\n--\nStian Soiland, myGrid team\nSchool of Computer Science\nThe University of Manchester\nhttp://www.cs.man.ac.uk/~ssoiland/\n\n\n\n"}}