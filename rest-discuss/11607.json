{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"g2Z87kK35K0Qx_j1guxHaOEFN93iIqoPf-wqg93qr6l3gK34obirPAuL10jLXqpMMr8OFlTpimnjsHbcx9211WRy4YQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] HTML5 and RESTful HTTP in browsers","postDate":"1227553901","msgId":11607,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5MkFGQzZELjkwMDA1MDBAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDQ5MkFFMDg1LjgwMjA4MDVAbXlrYW5qby5jby51az4=","referencesHeader":"PDIwMTUxMDEwLjIzNjg3MTIyNjkxOTk1NDUzMi5KYXZhTWFpbC5zZXJ2bGV0QGt1bmRlbnNlcnZlcj4JPDQ5MjJCMzZBLjMwOTA4MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMjc3YmllTFkwMDAwMTYwMUBFWC5VQ09QLkVEVT4JPDQ5MjVDMjAzLjgwNzA0MDFAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmEycjhnUEEwMDAwMTdmN0BFWC5VQ09QLkVEVT4JPDQ5MjYwNjI5LjgwNjA4MDVAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMnhUanRScGUwMDAwMTk5NUBFWC5VQ09QLkVEVT4JPDQ5MjY4MkU4LjgwNjA2MDRAbXlrYW5qby5jby51az4JPFAtSVJDLUVYQkUwMmFOZ0VwVFgwMDAwMWJjZEBFWC5VQ09QLkVEVT4JPDQ5MjZGMzQ3LjUwNTA4MDBAbXlrYW5qby5jby51az4JPGVjZjM1YTFiMDgxMTIxMTAwMHExZTMxMzM3Y3VhMGQ3YWRhMmIyMDI3NjJhQG1haWwuZ21haWwuY29tPgk8NDkyNzA2MDEuNjA4MDcwNEBteWthbmpvLmNvLnVrPiA8MjAwODExMjIwNzA4MjAuZDkxMWU5NjQuZXJpY0BiaXNvbnN5c3RlbXMubmV0PiA8NDkyQThDMzguOTA3MDFAaGFja2NyYWZ0Lm5ldD4gPDQ5MkE5MURCLjcwMTA0MDdAbXlrYW5qby5jby51az4gPDQ5MkFBMDZGLjgwMjAxMDdAaGFja2NyYWZ0Lm5ldD4gPDQ5MkFCMkFELjEwMTAxMDhAbXlrYW5qby5jby51az4gPDQ5MkFDQjJELjQwNzA5MDNAaGFja2NyYWZ0Lm5ldD4gPDQ5MkFFMDg1LjgwMjA4MDVAbXlrYW5qby5jby51az4="},"prevInTopic":11606,"nextInTopic":11608,"prevInTime":11606,"nextInTime":11608,"topicId":11508,"numMessagesInTopic":82,"msgSnippet":"... But either users don t care about these distinctions, or they are different resources. ... Well, it s not a full URI, but it could be if in a context that","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 33376 invoked from network); 24 Nov 2008 19:12:08 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m53.grp.scd.yahoo.com with QMQP; 24 Nov 2008 19:12:08 -0000\r\nX-Received: from unknown (HELO mail.arena1.com) (208.68.176.131)\n  by mta17.grp.scd.yahoo.com with SMTP; 24 Nov 2008 19:12:08 -0000\r\nX-Received: from UnknownHost [86.47.160.33] by mail.arena1.com with SMTP;\n   Mon, 24 Nov 2008 14:11:46 -0500\r\nMessage-ID: &lt;492AFC6D.9000500@...&gt;\r\nDate: Mon, 24 Nov 2008 19:11:41 +0000\r\nUser-Agent: Thunderbird 2.0.0.18 (Windows/20081105)\r\nMIME-Version: 1.0\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;20151010.236871226919954532.JavaMail.servlet@kundenserver&gt;\t&lt;4922B36A.3090804@...&gt;\t&lt;P-IRC-EXBE0277bieLY00001601@...&gt;\t&lt;4925C203.8070401@...&gt;\t&lt;P-IRC-EXBE02a2r8gPA000017f7@...&gt;\t&lt;49260629.8060805@...&gt;\t&lt;P-IRC-EXBE02xTjtRpe00001995@...&gt;\t&lt;492682E8.8060604@...&gt;\t&lt;P-IRC-EXBE02aNgEpTX00001bcd@...&gt;\t&lt;4926F347.5050800@...&gt;\t&lt;ecf35a1b0811211000q1e31337cua0d7ada2b202762a@...&gt;\t&lt;49270601.6080704@...&gt; &lt;20081122070820.d911e964.eric@...&gt; &lt;492A8C38.90701@...&gt; &lt;492A91DB.7010407@...&gt; &lt;492AA06F.8020107@...&gt; &lt;492AB2AD.1010108@...&gt; &lt;492ACB2D.4070903@...&gt; &lt;492AE085.8020805@...&gt;\r\nIn-Reply-To: &lt;492AE085.8020805@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [86.47.160.33]\r\nX-Declude-Spoolname: -1783862017423.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.46 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 14:11:52 on 24 Nov 2008\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] HTML5 and RESTful HTTP in browsers\r\nX-Yahoo-Group-Post: member; u=164939419; y=TjFa-xyLGlcvALBBWQXv7TLr1wZLH04wkrF1lz5pWs90Gvta\r\nX-Yahoo-Profile: hack_poet\r\n\r\nMike wrote:\n&gt; I&#39;m using it to indicate content type preferences of a resource for a \n&gt; given context; this is necessary because depending on the link, my \n&gt; browser should be able to request the pdf, word document, xml \n&gt; representation of a resource.\n\nBut either users don&#39;t care about these distinctions, or they are \ndifferent resources.\n\n&gt; /commands/destroyHumanRace?t-minus=10&user=Reptilian_NWO&password=0b4m4\n&gt; \n&gt; Is that a resource then?\n\nWell, it&#39;s not a full URI, but it could be if in a context that let it \nbe parsed as such. \nhttp://www.hackcraft.net/commands/destroyHumanRace/?t-minus=10&user=Reptilian_NWO&password=0b4m4 \nis a resource. Be very careful what you POST to it!\n\n&gt;&gt; If differences in formats are something that should be manually dealt \n&gt;&gt; with, or dealt with at an application level, then you are not talking \n&gt;&gt; about a single resource, but multiple resources.\n&gt;&gt;   \n&gt; \n&gt; I don&#39;t agree with that, could you explain your reasoning a bit more? \n&gt; This is, most likely, where my confusion comes from.\n\nLets use an analogy first, but using language rather than content-type.\n\nNext time I am in a bookshop it will likely be in Copenhagen. I can&#39;t \nread Danish, but the bigger bookshops in Copenhagen have plenty of \nEnglish-language books.\n\nLets say I ask &quot;Do you have the collected works of Hans Christian \nAnderson?&quot;.\n\nIdentifier = &quot;Collected works of Hans Christian Anderson&quot;.\nResource = Collected works of Hans Christian Anderson.\nPossible representations =\n  1 Book of collected works of Hans Christian Anderson Hans in the \noriginal Danish\n  2 Book of collected works of Hans Christian Anderson translated into \nEnglish.\n\nThe shop-keeper may try to guess from my asking in English that I want \nthe English version. They may incorrectly guess that I want the Danish \nversion, but in my experience they will do the former (I&#39;m hard-coded to \n&quot;Accept-Language: en&quot;). This is equivalent to server-side negotiation.\n\nThey might not be sure if I want the English or Danish (I could want the \nDanish version after all) and ask me. This is the same as a 300.\n\nIf I go into the shop and explicitly ask for &quot;English translations of \nthe collected works of Hans Christian Anderson&quot; then:\n\nIdentifier = &quot;English translations of the collected works of Hans \nChristian Anderson&quot;\nResource = English translations of the collected works of Hans Christian \nAnderson\nPossible representations = Book of collected works of Hans Christian \nAnderson translated into English.\n\nThe identifier is different; it specifically identifies the English \nversion. The resource is different accordingly, I have asked for a \ndifferent thing. The representation is however exactly the same in each \ncase.\n\nNow, the thing is, I can go into a Danish bookshop and ask for the \noriginal Danish too. Even though I am hard-coded to output in en-IE and \ninput in en, the fact that I can identify &quot;the original Danish of the \ncollected works&quot; separately to &quot;the collected works&quot; means I have a way \nof over-riding the content-negotiation meaningfully.\n\nThis is pretty much directly equivalent to real-world web examples, \nwhere one may wish to identify the original or normative document rather \nthan the one that is the obvious choice based on content-negotiation. \nThis can be important when one language version is the normative, and \nwith content-types that is also the case with some technical documents.\n\nIt works well. More to the point, it is *meaningful*. I can talk about \n&quot;the collected works of HCA&quot; or &quot;the Danish version of the collected \nworks of HCA&quot; as is appropriate. I can similarly talk about &quot;RFC 2616&quot; \nor &quot;the hypertext version of RFC2616&quot; as I see fit. That I can even \nwrite the above sentences means we can consider them as different \nresources with different identifiers.\n\n&gt;&gt; If formats are not something for the user to worry about, then why do we \n&gt;&gt; want to identify them at markup level?\n&gt;&gt;   \n&gt; \n&gt; How many users do you know that read HTML markup? Anyway, it&#39;s not like \n&gt; users don&#39;t come into contact with URI-based content negotiation in markup.\n\nOnce I&#39;m thinking about it, whether at a technical level (&quot;text/html&quot; vs \n&quot;application/pdf&quot;) or a more conceptual level (&quot;collection of web pages&quot; \nvs. &quot;PDF recommended for printing&quot;) then I&#39;m dealing with different \nresources. It&#39;s not entirely content-negotiation any more, its something \nslightly above that conceptually.\n\n&gt; It&#39;s offered to you as one link - the negotiation is taking place in the \n&gt; Accept header; it&#39;s protocol (HTTP) level content negotiation.\n\nIf you only have one link then it should let the content negotiation be \nresolved between my browser and the server, involving me only if \nabsolutely necessary (or by giving me the version I probably want, which \nin itself has a &quot;original version&quot; or &quot;normative version&quot; or whatever \nlink within it).\n\nIf you tell the browser that it should take the image/gif rather than \nthe image/png then, maybe you&#39;re wrong. How do you know I can handle \nimage/gif? If the distinction is important, then why is it not a \nresource? If you are having to make these decisions for me, then someone \n(either the hypertext document editor, or the person controlling the \nresource) has made a mistake. Either the author made a mistake in \nchoosing for me when it should be between me, my browser and the \nresource-owner, or the resource-owner has made a mistake in merging \ntogether representations of what should really have been separate resources.\n\n&gt; To me, neatness is establishing the distinction between resources and \n&gt; representations and sticking to them. Neatness would be keeping the \n&gt; number of resources in your application down to a minimum.\n\nI think this is one of those &quot;as simple as possible, but no simpler&quot; cases.\n\nResources are pretty much things we care about. If users don&#39;t give a \ndamn that there are alternative versions, then there is no need for \nthose other representations to be resources in their own right, and also \nno need for markup to represent this in any way. If users do care about \nthe fact that there are other versions, then they need to be resources.\n\n&gt; Using URIs to identify the resource *and* the representation fits \n&gt; exactly the definition of &quot;using URIs to identify beyond resources&quot;. So \n&gt; I most definitely agree with the analysis you just gave - I&#39;m not sure \n&gt; you do though!\n\nIs the fact that there is multiple representations of something solely \nan implementation detail that enables us to serve the needs of different \nsorts of client, or is it something that clients will directly care about?\n\nIn the former case we have just one resource that anybody cares about. \nWe need a URI for it, and we do not need any new mechanism to dictate \nheaders best set according to user technical requirements and \nuser-preferences.\n\nIn the latter case we have two or more resources that people care about, \nand we need two or more URIs.\n\n&gt; It&#39;s not identifying anything - it&#39;s negotiating.\n\nIf you put it into markup it&#39;s not negotiation, its dictated. \nNegotiation has been forbidden, by you.\n\n&gt; I have no idea what you&#39;re getting at here.\n\nI&#39;ve tried to explain what I&#39;m getting at above. I&#39;ll continue to try \nbecause I do think this is important.\n\n&gt; It doesn&#39;t seem very uniform, it feels like there should be better ways \n&gt; of doing this.\n\nIt&#39;s extremely uniform. Bearing in mind that in 99% of the time we have \na &quot;best&quot; or sole representation - so neither your method or that of HTTP \nare going to be needed - look at what we have.\n\nWe have 2 or more versions of something that are significantly different \nenough that it is reasonable to offer users a choice between them. They \nmay have a relationship between them (in being representations of \nanother resource), but the fact that we are offering this choice means \nthey have been elevated to &quot;things we care about&quot;, that is resources.\n\nWe have hypermedia representing this choice, URIs representing the \nresources, and links to those URIs. Exactly like we do with any other \nhypermedia representation. How more uniform can you get than doing \nsomething the way its always done?\n\nIt&#39;s the key to the whole thing. At the level at which REST operates, \neverything we give a damn about gets a URI, and that&#39;s all we use to \nidentify them. Anything else is not REST.\n\n&gt; I appreciate that - I was asking you what was the value in URI-based \n&gt; content negotiation. There are significant costs in doing so; namely \n&gt; that it creates a lot more URIs and requires intermediaries and caches \n&gt; to be application aware.\n\nURIs are cheap enough. Caches do not have to be application aware, \nindeed these are the easiest cases for caches (since such resources by \ntheir nature do not VARY on as much as others). It only comes up when \nthe choice is significant, in which case the computational work at each \nlevel is no more than with your suggestion.\n\n&gt; Its change is that we encourage developers to use URIs to indicate \n&gt; resources, and the Accept header to negotiate the content. Instead of \n&gt; confusing them.\n&gt; \n&gt; How are intermediaries and caches supposed to know whether a PUT to \n&gt; /document.xml means that changes have been made to /document.json, or \n&gt; /document.pdf ?\n\nWhy are they supposed to care?\n\nResources have multiple relationships between them. That /document.json \nand /document.xml relate to each other through being different \nrepresentations of /document is no more significant than /document.en-IE \nor indeed /document.v1.2 - the latter case having no con-neg equivalent.\n\nThere are also relationships of one resource being part of another \nresource that is a collection, or being semantically linked to another \nin some way - say a resource that is a commentary on another resource.\n\nIf a change to one means a change to another, then the server can manage \nthat relationship through changing modification dates, e-tags and indeed \nthe actual content of the representation as appropriate. Concerns about \nfreshness will matter here no differently than in other cases. After \nall, a cache does not know that there wasn&#39;t a change to a resource that \ndid not go through that cache, so freshness policies have to be set \naccordingly (and can through standard HTTP headers).\n\nIf a client *does* need to know about a relationship between resources, \nthen that should be explained through hypermedia. This is what links do, \nto one way of looking at it, it is also what RDF tuples do. It&#39;s largely \na matter outside of REST though, REST&#39;s job is to give means to interact \nefficiently with the resources and unique identifiers help do that.\n\nBesides which. Anything PUTting should know what it&#39;s PUTting, so it \nshould PUT to /document and describe the representation PUT \nappropriately. Something PUTting application/xml doesn&#39;t necessarily \nneed to know that another application which *does* care about comparing \ndifferent representations is considering /document.xml separately to \n/document.html.\n\nFinally, a lot of it simply is outside of our control and should be. \nThere&#39;s a relationship between \nhttp://www.google.ie/search?q=site%3Ahackcraft.net and \nhttp://www.hackcraft.net/ that I can&#39;t much control despite controlling \nthe latter URI. That relationship is no less real than that between \nresources that are representations of other resources.\n\n&gt; They can&#39;t. If you were using one URI and the Accept header, this \n&gt; behavior would be apparent without these caches and intermediaries \n&gt; having to be aware of your application. No?\n\nThey don&#39;t have to be aware currently. They will still have to be aware \nof the possibility of actions that they were not party to. There is no \nwin here.\n\n\n"}}