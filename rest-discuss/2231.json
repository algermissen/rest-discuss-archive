{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"X5jM59Dnr3WIeE6m6zBFH0OPd0mdzwbLdhBoNtNFNqt030d32up8iCd4qDHeDXOhwjeGyiSZs-TZwJ3T0OeNU7U","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Searching Containers","postDate":"1030390469","msgId":2231,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNENkE4MkM1LjQwMDA2MDhAYnJpdm8ubmV0Pg==","referencesHeader":"PGFrNDc5MSt0cW9tQGVHcm91cHMuY29tPg=="},"prevInTopic":2198,"nextInTopic":2257,"prevInTime":2230,"nextInTime":2232,"topicId":2198,"numMessagesInTopic":3,"msgSnippet":"... To me, the above (2) is the most HTTP way of doing it.  I like it because it fits the query parameter model.  It s idempotent.  It s also very simple.  The","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 19:32:54 -0000\r\nReceived: (qmail 73372 invoked from network); 26 Aug 2002 19:32:54 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m4.grp.scd.yahoo.com with QMQP; 26 Aug 2002 19:32:54 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.226)\n  by mta2.grp.scd.yahoo.com with SMTP; 26 Aug 2002 19:32:54 -0000\r\nReceived: (qmail 7472 invoked from network); 26 Aug 2002 19:32:53 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.110]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 26 Aug 2002 19:32:53 -0000\r\nMessage-ID: &lt;3D6A82C5.4000608@...&gt;\r\nDate: Mon, 26 Aug 2002 15:34:29 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.0) Gecko/20020530\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Searching Containers\r\nReferences: &lt;ak4791+tqom@...&gt;\r\nContent-Type: multipart/signed; protocol=&quot;application/x-pkcs7-signature&quot;; micalg=sha1; boundary=&quot;------------ms060507020000060602070904&quot;\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\r\n--------------ms060507020000060602070904\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\n\r\ninthedarkplace wrote:\n&gt; Guys,\n&gt; \n&gt; I&#39;m curious; has anybody established any best practices for \n&gt; performing arbitrary searching of collection resources? Eg, say I \n&gt; have the collection /users and I want to find a user with the \n&gt; username &#39;kd&#39;. What&#39;s the most RESTful and elegant way to do this? \n\n&gt; 2) Have the user do a GET on the users collection, passing the search \n&gt; query in through the query string. eg /users?username=&#39;xxx&#39;\n&gt; \n&gt; Pros: Intuitive. This is what for the query string is for, I think. \n&gt; It also allows the user to bookmark searches which might be \n&gt; potentially very useful for working with sets of users.\n&gt; \n&gt; Cons: Severely limits the expressiveness of queries. Also puts more \n&gt; code in the users code, but this isn&#39;t a huge issue.\n\nTo me, the above (2) is the most HTTP way of doing it.  I like it \nbecause it fits the query parameter model.  It&#39;s idempotent.  It&#39;s also \nvery simple.  The value of username can be a string, a regexp, or \nwhatever.  Our app uses just values that have to match.  If the \nparameter is &quot;dateLessThan&quot; then the date must be less than.  Of course, \nif that&#39;s not expressive enough, the client can get the entire resource \nand perform its own searches.\n\nIt may help to think why your client does not know what it is looking \nfor.  There may be a better way to model the app such that the client \nhas a much clearer path to getting to the object.\n\nAnyhoot, my vote: use query parameters to &quot;whittle down&quot; that particular \nresource.  If the resource is a collection, I don&#39;t believe this \nviolates any RESTful thinking.\n\nSeth\n\r\n--------------ms060507020000060602070904\r\nContent-Type: application/x-pkcs7-signature; name=&quot;smime.p7s&quot;\r\nContent-Disposition: attachment; filename=&quot;smime.p7s&quot;\r\nContent-Description: S/MIME Cryptographic Signature\r\n\r\n[ Attachment content not displayed ]\r\n--------------ms060507020000060602070904--\r\n\n"}}