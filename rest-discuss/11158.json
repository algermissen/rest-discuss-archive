{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":319607554,"authorName":"Assaf Arkin","from":"&quot;Assaf Arkin&quot; &lt;assaf@...&gt;","profile":"assafarkin","replyTo":"SENDER","senderId":"ASO0tV4iHn-c_BxSihfTbECHa1h4xkoqgBjlOUs6Qq5M3l-wBzGbNxQmHiTtgVlrlBYUnp2xLIfGRVCEQ2Ewvs1ZyIyb5zj6lw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: forms for web APIs","postDate":"1218176693","msgId":11158,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwMzdiNmU0MDgwODA3MjMyNHMzYzkzMDgwYnc1NTIyNWE2Yzk1ODFjODJmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGc3Z2l1dStjcGcyQGVHcm91cHMuY29tPg==","referencesHeader":"PGY5NTA5NTRlMDgwODA1MDczMXk3ZTRjMDc4Nm44OTYyOTQ2MmJiZjIxZTFhQG1haWwuZ21haWwuY29tPgkgPGc3Z2l1dStjcGcyQGVHcm91cHMuY29tPg=="},"prevInTopic":11154,"nextInTopic":11159,"prevInTime":11157,"nextInTime":11159,"topicId":11104,"numMessagesInTopic":31,"msgSnippet":"... If by hypermedia you mean something like HTML, that s not going to work.  Your HTML serves a form with two inputs, call them foo and bar. Your client has","rawEmail":"Return-Path: &lt;assaf@...&gt;\r\nX-Sender: assaf@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 29946 invoked from network); 8 Aug 2008 06:24:54 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m46.grp.scd.yahoo.com with QMQP; 8 Aug 2008 06:24:54 -0000\r\nX-Received: from unknown (HELO ik-out-1112.google.com) (66.249.90.179)\n  by mta17.grp.scd.yahoo.com with SMTP; 8 Aug 2008 06:24:54 -0000\r\nX-Received: by ik-out-1112.google.com with SMTP id b32so829845ika.6\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 07 Aug 2008 23:24:53 -0700 (PDT)\r\nX-Received: by 10.210.44.1 with SMTP id r1mr375191ebr.69.1218176693115;\n        Thu, 07 Aug 2008 23:24:53 -0700 (PDT)\r\nX-Received: by 10.210.16.3 with HTTP; Thu, 7 Aug 2008 23:24:53 -0700 (PDT)\r\nMessage-ID: &lt;5037b6e40808072324s3c93080bw55225a6c9581c82f@...&gt;\r\nDate: Thu, 7 Aug 2008 23:24:53 -0700\r\nTo: wahbedahbe &lt;andrew.wahbe@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;g7giuu+cpg2@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;f950954e0808050731y7e4c0786n89629462bbf21e1a@...&gt;\n\t &lt;g7giuu+cpg2@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Assaf Arkin&quot; &lt;assaf@...&gt;\r\nSubject: Re: [rest-discuss] Re: forms for web APIs\r\nX-Yahoo-Group-Post: member; u=319607554; y=5Do791x39SYq4BmWwkhQxQeVg1uBoe8wxUwR-eD_3sZeMGaIMA\r\nX-Yahoo-Profile: assafarkin\r\n\r\nOn Thu, Aug 7, 2008 at 9:44 PM, wahbedahbe &lt;andrew.wahbe@...&gt; wrote:\n&gt; --- In rest-discuss@yahoogroups.com, &quot;Alexander Johannesen&quot;\n&gt; &lt;alexander.johannesen@...&gt; wrote:\n&gt;&gt;\n&gt;\n&gt;&gt; This works extremely well for me and those clients who have used it.\n&gt;&gt; I&#39;ve tinkered with using microformats instead of the tm: namespace,\n&gt;&gt; but think serious developers think microformats still is a toy (which\n&gt;&gt; I could agree with, without proper namespacing or some other safe\n&gt;&gt; method of microformat identification). Thoughts?\n&gt;&gt;\n&gt;\n&gt; I think this general approach is pretty solid -- I&#39;ve thought about\n&gt; using the microformats variant of this myself.\n&gt;\n&gt; But this approach always has me asking: is this really so different\n&gt; from RPC?\n&gt;\n&gt; A form microformat or a set of standard query parameters aren&#39;t that\n&gt; different than a standard function call. Your form is just saying &quot;you\n&gt; can make that standard function call here&quot;.\n&gt;\n&gt; So it offers a little more than straight RPC as you can discover when\n&gt; and where you can make that call as you move through the hypermedia\n&gt; state machine. But this model isn&#39;t quite right in my mind as it\n&gt; constrains the server&#39;s interface too much.\n&gt;\n&gt; Let me explain with an example: Say you wanted to facilitate machine\n&gt; to machine travel booking (hotels, car rentals, and flights). REST\n&gt; should allow any automated client that supports a standard hypermedia\n&gt; format (and a transfer protocol -- HTTP) to book travel given nothing\n&gt; other than an initial URL to start at.\n&gt;\n&gt; There should be no constraints on the servers other than that they\n&gt; support the uniform interface of HTTP and the hypermedia format. i.e.\n&gt; one service could provide one giant form for the whole transaction,\n&gt; another might offer multiple forms (one for hotel reservation, one for\n&gt; car rental and one for booking flights) all posted to different servers.\n\nIf by hypermedia you mean something like HTML, that&#39;s not going to\nwork.  Your HTML serves a form with two inputs, call them foo and bar.\n Your client has two values, but lacking any other information, can&#39;t\ndecide which value to feed foo, which value to feed bar.\n\nIt won&#39;t work unless you add a constraint on the server to use\nspecific names understood to the client.\n\n\nLet&#39;s turn to the human Web for a second, and again, serve a form with\ntwo inputs, call them foo and bar.  Unless you know how the service\nwas written, there&#39;s no way you can fill up this form.  You just can&#39;t\ntell which value goes where.\n\nSo we annotate the form.  We add labels that are spatially related to\nthe field (eyes use that to establish relation), using names (or\nimagery) that is understood by the client (a person, in this case) and\nit&#39;s now possible to fill the form.\n\nNow you added a constraint on the service.  A constraint to use a\nparticular subset of names associated with each input.  For example,\n&quot;DOB&quot; if you&#39;re asking for data of birth, not &quot;Age&quot; and certainly not\n&quot;martha&quot;.  If you&#39;re operating globally, you have even more work to\ndo, the names you pick now depend on the preferred language choice of\nyour language.\n\n\nThe Web will not work without the additional constraints of serving\nnames understood by the client to identify links, actions and inputs.\n\nAssaf\n\n&gt;\n&gt; For some reason, most &quot;RESTful&quot; machine to machine techniques don&#39;t\n&gt; really give us this. I think most hypermedia formats being used are\n&gt; missing mechanisms to translate from the client&#39;s model of the problem\n&gt; to the HTTP requests of the service. In UI-oriented hypermedia, this\n&gt; translation is left to the user. Don&#39;t you need to do something more\n&gt; in the machine to machine case?\n&gt;\n&gt; Anyways, one interesting example of a solution to this can be found in\n&gt; CCXML (http://www.w3.org/TR/ccxml/). Are there other good examples\n&gt; (maybe the topic map is one -- I don&#39;t know too much about it)?\n&gt;\n&gt; Andrew Wahbe\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}