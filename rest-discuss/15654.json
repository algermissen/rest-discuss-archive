{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":124198377,"authorName":"William Martinez Pomares","from":"&quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;","profile":"willmarpo","replyTo":"SENDER","senderId":"6BJaZWz6YwzWYW6EFCamB5sDall_8LwNjYkfYne0CajSCPjJ7pam_QPmNBnGjzO5vohn2E9GcRyLgA-9o_lBXcdaKOEQ-QPEtlwu44xXRg4S1HQy_2CDtwE9","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Determining which Media type for post/put","postDate":"1276521866","msgId":15654,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGh2NWFpYSs2ZmRtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEFBTkxrVGlsazJZWnJnY2U5M3dYcDlFSjRHZnBpckxlUVZ2bUowSnhjeFBZSEBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":15649,"nextInTopic":15659,"prevInTime":15653,"nextInTime":15655,"topicId":15466,"numMessagesInTopic":82,"msgSnippet":"Hello Glenn You seem to start pretty good discussions around here! And I want to side step again, to try understand your question. You are looking for a","rawEmail":"Return-Path: &lt;wmartinez@...&gt;\r\nX-Sender: wmartinez@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 20563 invoked from network); 14 Jun 2010 13:24:28 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m14.grp.re1.yahoo.com with QMQP; 14 Jun 2010 13:24:28 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta3.grp.re1.yahoo.com with SMTP; 14 Jun 2010 13:24:28 -0000\r\nX-Received: from [69.147.65.147] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 14 Jun 2010 13:24:26 -0000\r\nX-Received: from [98.137.34.34] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 14 Jun 2010 13:24:26 -0000\r\nDate: Mon, 14 Jun 2010 13:24:26 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;hv5aia+6fdm@...&gt;\r\nIn-Reply-To: &lt;AANLkTilk2YZrgce93wXp9EJ4GfpirLeQVvmJ0JxcxPYH@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;William Martinez Pomares&quot; &lt;wmartinez@...&gt;\r\nSubject: Re: Determining which Media type for post/put\r\nX-Yahoo-Group-Post: member; u=124198377; y=SVv-y3VG3Z2hxD68L7Tu8vCTAZyJfGxjmbJOt-bTJAK2P0F1\r\nX-Yahoo-Profile: willmarpo\r\n\r\nHello Glenn\nYou seem to start pretty good discussions around here!\nAnd I wa=\r\nnt to side step again, to try understand your question.\nYou are looking for=\r\n a commonly used way to tell, in a link or when consuming a link, what medi=\r\na is expected/requested? Well, media negotiation may be complex.\n\n1. We hav=\r\ne media types, standard and custom. Using HTTP headers we are able to say w=\r\nhich media I want and which media the server can serve. That is what the HT=\r\nTP app protocol gives us.\n\n2. Another way of getting the media is using emb=\r\nedded metadata in the media itself. That is done, for instance, using the l=\r\nink. The mediatype attribute will tell you specifically which media you sho=\r\nuld expect to use for a particular link and operation. Of course, that redu=\r\nces a bit the visibility (since an interim node should know the media the l=\r\nink is embedded in to be able to &quot;see&quot; it) and also limits the negotiation =\r\n(the link &quot;suggests&quot; the media).\n\n3. Mike already mentioned the type attrib=\r\nute, which will somehow be the same as above.\n\n4. Now, media is just a form=\r\nat you use to encode data, and its semantics are usually about the media th=\r\nat is encoded. You need to also know what is the media for and what the inf=\r\no that type encompass to use it in your app (meaning the app semantics). An=\r\n image may be encoded in XML if you wish, and it is highly possible you wan=\r\nt it for display. To process media you need a media parser.\n\nThere is media=\r\n encoding used for definition (tunneling may someone say) of app data. For =\r\nexample, XML. Since this is a generic encoding, it may have a type designat=\r\nor telling the reader what type is actually encoded. Thus, you may have a m=\r\nedia-type application/xml but you are getting your image in xml encoding. T=\r\nhe image type is basically detected by the app looking at the XML schema or=\r\n namespace. This typing is not artificial, but part of the XML standard its=\r\nelf.\n\nThe problem with this other approach is visibility again. The header =\r\nwill tell you the caller is requesting an XML, with no other indication of =\r\nwhat is in it. That is why it is like tunneling. Using custom media is then=\r\n one option, where you use user defined media types, usually XML, with a vn=\r\nd. in the media name telling you what to expect in the XML.\n\nThe good of th=\r\ne custom media is that a consumer may peek the media supported to determine=\r\n if it can consume it, and that just by looking at the supported media in t=\r\nhe server (protocol level).\n\nThe good of generic media (XML) is that you ha=\r\nve lots of parsers for it, and the media it contains can be also discovered=\r\n and processed, even dynamically, by means of more complex media descriptor=\r\ns like the XSD. e.g. I may ask a server what representation can it serve ab=\r\nout a resource, and it will tell me he can send an XML representation. That=\r\n is too generic, but I accept, and when I have the XML, I request the XSD (=\r\nwhich is a link in the XML, BTW, which nicely works as HATEOAS) and reading=\r\n it I can dynamically fill in the blanks and perform my operation.\nA most s=\r\ntandard way of doing that is also using forms. \n\n5. Finally, and someone ma=\r\ny say I&#39;m crazy about saying this, but another way to describe a type is us=\r\ning a descriptor language, yes, like WSDL. This may break the badly nicknam=\r\ned HATEOAS, if you use it like an all containing static contract used at de=\r\nsign time. \n\nWSDL 2.0 includes now extensions to not only describe the work=\r\nflow, but also the HTTP methods to be used and the schema bits to form the =\r\nmessage. (One approach is explained, along with an intro to WSDL 2.0, by La=\r\nwrence Mandel from IBM here http://www.ibm.com/developerworks/webservices/l=\r\nibrary/ws-restwsdl/, and I have a couple of posts just mentioning it can be=\r\n done).\n\nThe idea to apply to REST is each resource may have a WSDL you can=\r\n request prior requesting anything, and it will tell you what to do and how=\r\n in that resource (and the resource is depicted as a service, of course).\n\n=\r\nSimilar to point 4, it then describes the type in detail, not by name, embe=\r\ndded in another type. It has also visibility problems, but with the advanta=\r\nge that WSDL is also a standard and you are plenty of parsers. So, you requ=\r\nest the types for a resource and the server will tell you it supports WSDL,=\r\n you request that representation and it will tell you what you can do to th=\r\ne resource, and a side effect it will also tell you the resource is a servi=\r\nce. Any interim node may view the message and can actually understand it si=\r\nnce it is a WSDL formatted thing. Lastly, it helps you separate the concern=\r\ns of interaction and type definition from the real data.\n\nNote of course th=\r\nat WSDL must not be used to tunnel RPC; but to depict the type of messages,=\r\n the interaction flow, and the HTTP methods to invoke.\n \nHope, again, all t=\r\nhis helps.\n\nWilliam Martinez Pomares. \n\n--- In rest-discuss@yahoogroups.com=\r\n, Glenn Block &lt;glenn.block@...&gt; wrote:\n&gt;\n&gt; Aside from the specification / d=\r\nocumentation for a media type is there some\n&gt; common accepted practice for =\r\nindicating which media type is expected to\n&gt; passed when calling a link?\n&gt; =\r\n\n&gt; Thanks\n&gt; Glenn\n&gt;\n\n\n\n"}}