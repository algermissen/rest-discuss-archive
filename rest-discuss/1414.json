{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":96521543,"authorName":"Seth Ladd","from":"Seth Ladd &lt;seth@...&gt;","profile":"bootyindustries","replyTo":"SENDER","senderId":"4Ikiw5RwXHps3CY6D1G7F-EVnUGYSHXGKB0FyleeN_k7i6oxwf2IlHp9cPgFAOg9yrQZzO4ajN3zCJcxjNKQLLo","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Cookies not RESTful - need explaination","postDate":"1023282395","msgId":1414,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDRkUwQ0RCLjYwNzA1MDZAYnJpdm8ubmV0Pg==","referencesHeader":"PDNDRkNCMjg0Ljk2NkJCODQ1QG1pdHJlLm9yZz4gPDIwMDIwNjA0MDg1MTMwLkc4NTZAd3d3Lm1hcmtiYWtlci5jYT4gPE9FMTU2RFg5UVdGQk9iVHJ2ejAwMDAwZDRmMEBob3RtYWlsLmNvbT4gPDIwMDIwNjA0MTUyMjE1LkIxNDY4MkB3d3cubWFya2Jha2VyLmNhPiA8M0NGRDRBNUYuQTk0RDVCMDVAbWl0cmUub3JnPg=="},"prevInTopic":1413,"nextInTopic":1415,"prevInTime":1413,"nextInTime":1415,"topicId":1392,"numMessagesInTopic":26,"msgSnippet":"Some thoughts... ... An HTTP message can certainly be RESTful.  You can accomplish this by correctly using a URI to reference a real, true object.  The headers","rawEmail":"Return-Path: &lt;seth@...&gt;\r\nX-Sender: seth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_2); 5 Jun 2002 13:05:16 -0000\r\nReceived: (qmail 1870 invoked from network); 5 Jun 2002 13:05:15 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m9.grp.scd.yahoo.com with QMQP; 5 Jun 2002 13:05:15 -0000\r\nReceived: from unknown (HELO limpopo.brivo.net) (63.103.49.238)\n  by mta1.grp.scd.yahoo.com with SMTP; 5 Jun 2002 13:05:16 -0000\r\nReceived: (qmail 1664 invoked from network); 5 Jun 2002 13:05:15 -0000\r\nReceived: from unknown (HELO brivo.net) ([192.168.192.107]) (envelope-sender &lt;seth@...&gt;)\n          by 0 (qmail-ldap-1.03) with RC4-MD5 encrypted SMTP\n          for &lt;rest-discuss@yahoogroups.com&gt;; 5 Jun 2002 13:05:15 -0000\r\nMessage-ID: &lt;3CFE0CDB.6070506@...&gt;\r\nDate: Wed, 05 Jun 2002 09:06:35 -0400\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0rc3) Gecko/20020523\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Cookies not RESTful - need explaination\r\nReferences: &lt;3CFCB284.966BB845@...&gt; &lt;20020604085130.G856@...&gt; &lt;OE156DX9QWFBObTrvz00000d4f0@...&gt; &lt;20020604152215.B14682@...&gt; &lt;3CFD4A5F.A94D5B05@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Seth Ladd &lt;seth@...&gt;\r\nX-Yahoo-Group-Post: member; u=96521543\r\nX-Yahoo-Profile: bootyindustries\r\n\r\n\nSome thoughts...\n\n\n&gt; behaviour in the server application.  Taking this argument to its\n&gt; logical conclusion, then I conclude that no HTTP message can ever be\n&gt; RESTful, unless it has no HTTP headers, since HTTP headers by their very\n&gt; nature induces behaviour in the server application.  Yes?\n\n\nAn HTTP message can certainly be RESTful.  You can accomplish this by \ncorrectly using a URI to reference a real, true object.  The headers can \nstill be there, and are very helpful as metadata and instructions on how \nto handle the message itself.\n\nFor instance, REST likes to transfer state of objects.  But, some \nobjects can be represented many different ways.  For example, a daily \nreport can be represented as a PDF, HTML, XML, etc.  That&#39;s just the \nphysical form.  The logical object itself is the same.  Now, this object \nmight have a URI of http://example.org/finance/report/2002/06/05.  Using \nthat URI, I can GET and SET that report throughout time and space.  But \nhow do I know what I&#39;m getting?  HTTP is the protocol we&#39;re using, so \nHTTP headers are introduced.  Think of the headers like the envolope. \nThey tell us more info about the resource.  That info isn&#39;t needed to \nidentify the object (that&#39;s done with the URI).  So the HTTP header will \nsay &quot;Content-type: application/pdf&quot; to indicate what bytes are being \nsent.  This doesn&#39;t violate REST (IMO) since we haven&#39;t obfuscated the \nobject identifier.\n\n\n&gt; To restate my earlier question: what exactly does it mean to be\n&gt; stateless?  In light of the above, does it mean that all information is\n&gt; carried in the HTTP message body?  That is, the server application&#39;s\n&gt; behaviour is not influenced by anything in the HTTP header?\n\nIt might help for your understanding of REST to divorce yourself from \nHTTP a bit.  REST is a paradigm and a set of patterns.  HTTP can be used \nfor an implementation of REST, but isn&#39;t the perfect embodiment of REST.\n\nTo be stateless means to carry all information needed for the request \nalong with the request.  That request must be able to stand alone.  If \nthe process requires three messages in a certain order, each depending \non the first one, that is not stateless.\n\nHope I didn&#39;t confuse things more. :)\n\nSeth\n\n\n"}}