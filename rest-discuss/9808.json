{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":324127553,"authorName":"Rajith Attapattu","from":"&quot;Rajith Attapattu&quot; &lt;rajith77@...&gt;","profile":"ramila_rajith","replyTo":"SENDER","senderId":"8bgM6eBoSoq8BJSM2fakF16mSv8_xcKHtyLiwIxwDBIp5QdfcgDM4W0GqepdbzCqOUUHQQNuFiteqXGxYbZjKu6hZJmLSPz8nIJZBNSi","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Questions regarding REST","postDate":"1194910414","msgId":9808,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY1ZjVlMDczMDcxMTEyMTUzM3IzZWU4MTFkN282MjRjYWJlY2U2MTc0YWIyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PERCQUQzM0E1LTUwNUMtNEM1NS05M0YyLTY3NEVBQTI4Qjk2Q0Bpbm5vcS5jb20+","referencesHeader":"PGY1ZjVlMDczMDcxMTA5MTUyN3IxMTcyZDExOXg3MmRmNmY3N2IxOWJmYzZhQG1haWwuZ21haWwuY29tPgkgPERCQUQzM0E1LTUwNUMtNEM1NS05M0YyLTY3NEVBQTI4Qjk2Q0Bpbm5vcS5jb20+"},"prevInTopic":9807,"nextInTopic":9809,"prevInTime":9807,"nextInTime":9809,"topicId":9804,"numMessagesInTopic":13,"msgSnippet":"Stefan, Thanks for your answers. appreciate them very much. Comments inline. Rajith ... I just read it on the following document. ","rawEmail":"Return-Path: &lt;rajith77@...&gt;\r\nX-Sender: rajith77@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 95942 invoked from network); 12 Nov 2007 23:33:36 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m45.grp.scd.yahoo.com with QMQP; 12 Nov 2007 23:33:36 -0000\r\nX-Received: from unknown (HELO nf-out-0910.google.com) (64.233.182.186)\n  by mta17.grp.scd.yahoo.com with SMTP; 12 Nov 2007 23:33:35 -0000\r\nX-Received: by nf-out-0910.google.com with SMTP id d21so1043360nfb\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 12 Nov 2007 15:33:34 -0800 (PST)\r\nX-Received: by 10.78.146.11 with SMTP id t11mr3943216hud.1194910414441;\n        Mon, 12 Nov 2007 15:33:34 -0800 (PST)\r\nX-Received: by 10.78.141.3 with HTTP; Mon, 12 Nov 2007 15:33:34 -0800 (PST)\r\nMessage-ID: &lt;f5f5e0730711121533r3ee811d7o624cabece6174ab2@...&gt;\r\nDate: Mon, 12 Nov 2007 18:33:34 -0500\r\nTo: &quot;Stefan Tilkov&quot; &lt;stefan.tilkov@...&gt;\r\nCc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;DBAD33A5-505C-4C55-93F2-674EAA28B96C@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;f5f5e0730711091527r1172d119x72df6f77b19bfc6a@...&gt;\n\t &lt;DBAD33A5-505C-4C55-93F2-674EAA28B96C@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Rajith Attapattu&quot; &lt;rajith77@...&gt;\r\nSubject: Re: [rest-discuss] Questions regarding REST\r\nX-Yahoo-Group-Post: member; u=324127553; y=iQedfxYVePeSRI02iBmjSlIRjEJo_E6qlooB091Xa3WbXFznsYf7tQ\r\nX-Yahoo-Profile: ramila_rajith\r\n\r\nStefan,\n\nThanks for your answers. appreciate them very much.\nComments inline.\n\nRajith\n\nOn Nov 12, 2007 2:26 AM, Stefan Tilkov &lt;stefan.tilkov@... &gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Nov 10, 2007, at 12:27 AM, Rajith Attapattu wrote:\n&gt;\n&gt; &gt;\n&gt; &gt; Hi All,\n&gt; &gt;\n&gt; &gt; After closely following all the disucssion around REST I have a few\n&gt; &gt; questions on would like to clear my doubts.\n&gt; &gt;\n&gt; &gt; 1) One of the questions I have seen floating around is &quot;how can I do\n&gt; &gt; a shopping cart application in a RESTFul way&quot;.\n&gt; &gt; Most people realize that you shouldn&#39;t use sessions bcos it violates\n&gt; &gt; the Stateless constraint.\n&gt; &gt;\n&gt; &gt; Now what some folks suggest is that when you do a PUT http://abc.com/customer/1235/basket/\n&gt; &gt; (where the body contains a document that describes the items and\n&gt; &gt; quantities to add), you service that request and then you return a\n&gt; &gt; URL with the state encoded.\n&gt;\n&gt; That is an exceptionally weird design that I&#39;ve never seen suggested\n&gt; yet.\n&gt;\n\nI just read it on the following document.\nhttp://simplewebservices.org/index.php?title=Shopping\n(It maybe that I have misunderstood it.)\n\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; I have the following questions on that.\n&gt; &gt; a) Now is this RESTful?\n&gt;\n\n&gt; I would claim it&#39;s not.\nThat is my understanding as well. I asked the question to make sure I\nundestood it properly.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; b) Also there so much information that can be encoded since a URL\n&gt; &gt; has a maximum length\n&gt;\n&gt; In theory, there is no limit, in practice, there may be one. But I\n&gt; think you rarely end up with URLs that are too long if you do a\n&gt; RESTful design.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; c) Anybody intercepting this URL may be able to decode information\n&gt; &gt; (if SSL is not used)\n&gt; &gt;\n&gt; &gt; 2) Most people do RPC over HTTP\n&gt;\n&gt; Hm, I think I disagree, but even if it were true - so what?\nSorry I should have been more specific. What I meant to say was that\nmost REST examples given by folks looks more RPC over HTTP than REST.\nIt look like I got distracted while typing that question and didn&#39;t\nend up typing what I really wanted.\nSorry about that.\n\n&gt;\n&gt; &gt; (Ex. some of the examples given in JSR 311 looks more RPC and not\n&gt; &gt; RESTful)\n&gt;\n&gt; Could you be more specific? Which examples?\nStefan look at the calculator sample in the following url.\nhttp://developers.sun.com/docs/web/swdp/r2/tutorial/doc/p36.html\n\nTo me it looks very RPC like.\n\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; What constraints in general does RPC/HTTP violate?\n&gt;\n&gt; Nearly all of them, but it of course depends on the particular RPC-\n&gt; style HTTP usage we&#39;re talking about. Often URLs are not used to\n&gt; identify resources, communication is stateful, the interface is not\n&gt; uniform, hypermedia is not used, and the meaning of the verbs is\n&gt; violated.\n\nSo as a general rule, if a URL is used to identify an action\n(operation) instead of a resource then we can say it is not RESTful?\nThis also seem to affect the uniform interface constraint as now u\nhave different operations defined instead of the standard interface.\n\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; Most RPC operations are stateful, so u can think they violate the\n&gt; &gt; stateless constraint.\n&gt;\n &gt; I think you&#39;re mixing communication state and resource (backend) state ...\nI meant to say they are using sessions.\nHowever I agree it&#39;s an overstatement to say &quot;most&quot; RPC is statefull.\nThere are lots of stateless (no communication state) RPC services out there.\n&gt;\n&gt;\n&gt; &gt; What else?\n&gt; &gt; Consider the following examples\n&gt; &gt;\n&gt; &gt; doAddition(int x, int y) - POST http://abc.com/doAdittion/ (body\n&gt; &gt; contains x & y)\n&gt; &gt; this simply does an addition, but it is stateless. However intuition\n&gt; &gt; tells me it&#39;s not RESTful.\n&gt; &gt; Why is that?? What have I misunderstood here?\n&gt;\n&gt; It seems perfectly RESTful to me - there doesn&#39;t seem to be any\n&gt; reasonable resource state. The URL smells of RPC, but it&#39;s just a\n&gt; string from a REST perspective. I&#39;d feel a little better if it were /\n&gt; addition instead of /doAddition.\n\nStefan, doesn&#39;t the URL identify an action, instead of a resource? or\nhave I misunderstood this completely?\nEven if we use /addition the url seems to refer to an action.\nDoesn&#39;t the /xxx/addition/ imply that it refers to a heirarchy of resources?\nTo me it looks very RPCish.\n\n&gt; In fact, I&#39;d even consider using GET\n&gt; as the operation is both safe and idempotent.\n\nThe operation is always safe and idempotent irrespective of whether we\nuse GET or POST.\nBcos no matter how many times I invoke it, all it does is compute x + y.\nSo as long as u use the same x and y value, the computation will\nalways return the same result.\n\n&gt; &gt;\n&gt; &gt; Here is another example that I don&#39;t understand.\n&gt; &gt; increaseLuminosity(x) POST http://abc.com/increaseLuminosity (body\n&gt; &gt; contains x)\n&gt; &gt; {\n&gt; &gt; I get the bulbs&#39; state from a data base.\n&gt; &gt; I increase it.\n&gt; &gt; I persist the new state.\n&gt; &gt; }\n&gt; &gt; Now my service is stateless, however the database contains the state.\n&gt;\n\n&gt; Which is OK - the constraint says to avoid communication state, not\n&gt; resource state.\nStefan, for a shopping cart resource, what is communication state and\nwhat is resource state?\nWhat if I persist my cart after every add/delete/update of my cart to\nthe database instead of carrying it in my session?\nThis was the real question I wanted to ask (but my example was very poor).\n\nAnother point is that the URL refers to the action &quot;\nincreaseLuminosity&quot; and not a resource.\nThat still creates doubts in my mind.\nAlso from Roy&#39;s response I gather that it should return the resources new state.\n\n&gt;\n&gt; &gt;\n&gt; &gt; Again I don&#39;t understand exactly what constraints are violated but\n&gt; &gt; intuition tells me it&#39;s not RESTful\n&gt; &gt;\n&gt; &gt; 3) Reliability with RESTful interactions.\n&gt; &gt; Forgetting the security concerns for the time being consider the\n&gt; &gt; following example.\n&gt; &gt;\n&gt; &gt; I am trying to create a service account for a customer.\n&gt; &gt; PUT http://abc.com/customer/{id}/savings\n&gt; &gt;\n&gt; &gt; Now the server process the request, but goes down before it can send\n&gt; &gt; the response. Since PUT is idempotent, the client will retry again\n&gt; &gt; until it gets a response.\n&gt; &gt; However when the server comes back up, there is no reconciliation\n&gt; &gt; process like you would get with WS-RM. So the client will always\n&gt; &gt; retry until it is successful.\n&gt; &gt;\n&gt; &gt; But if you do the following, where u want to add some money to your\n&gt; &gt; account.\n&gt; &gt; POST http://abc.com/customer/{id}/savings/ - the body contains the\n&gt; &gt; amount.\n&gt; &gt;\n&gt; &gt; Now if the server crashes after processing but before sending the\n&gt; &gt; response, or if the client crashes before getting the response, the\n&gt; &gt; client will retry again.\n&gt; &gt; Now POST is not idempotent and each retry will keep on adding money.\n&gt; &gt;\n&gt; &gt; Is this a category of applications that REST is not suitable for? or\n&gt; &gt; else what is the correct form to use when building such application\n&gt; &gt; in a RESTful way.\n&gt;\n&gt; You either switch to PUT or make POST idempotent. See Joe Gregorio&#39;s\nHmm this means the client keeps sending it multiple times, but it\nwould be nice (as Roy pointed out) if the server can tell the client\nto refresh it&#39;s state.\n\nRoy provided a nice solution by including a request number.\nBut how can you do it in a standard way with different clients\nsimillar to how WS-RM works.\nAren&#39;t you kind of building your own little protocol to handle the\nrequests in a relaible way by addition a request (or sequence number)\n?\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; 4) Security with RESTful interactions.\n&gt; &gt; a) The above example naturally raise questions about security.\n&gt;\n&gt; Does it?\nSee my comments below.\n&gt;\n&gt;\n&gt; &gt;\n&gt; &gt; b) SSL is only point-to-point, so if you have to go through multiple\n&gt; &gt; intermediaries, how would you ensure privacy, non repudiation ..etc ?\n&gt;\n&gt; You can of course use XML Encryption and Digital Signature with\n&gt; RESTful HTTP, but that applies only if you&#39;re using XML. If SSL\n&gt; doesn&#39;t suit your needs, you may have a problem.\n\nI know that you could use XML Encryption and Digital Signature ..etc,\nbut how do I do that in a standard way like what WS-* does?\n(I am not advocating WS-* or trying to start the whole  REST vs WS-*\ndebate here. I like to understand how these concerns are addressed)\nIn other words how can I do so in an interoperable way when I deal\nwith different clients? How can I let them know my policies ?\n\nAlso if you have intermediaries that you use different transports\nbetween them this creates a problem\nEx. Client ----&gt; HTTP ----&gt; (firewall) ----&gt; Service ------&gt; JMS ---&gt; backend\n\n&gt;\n&gt; Stefan\n&gt; --\n&gt; Stefan Tilkov, http://www.innoq.com/blog/st/\n&gt; \n\n"}}