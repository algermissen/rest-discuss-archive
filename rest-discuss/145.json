{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"S. Alexander Jacobson","from":"&quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;","replyTo":"SENDER","senderId":"LAZjkRfTWdGxtqNBB1_pVk38YeDqVKr5p0NfJmJx7Mrh3pPzik87N4lJZHQTLRD8_3lfzmK0039m7NC5ja7sU9hqkRqeWT2JtpNjPQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"MIME-RPC, REST, and Asynchrony","postDate":"1011730762","msgId":145,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTIyMTQxNjE3MC41OTItMTAwMDAwQGdhbmRvbHBoLkFTR0FSRC5qbXM+","inReplyToHeader":"PDNDNDg5QTcxLjJEOEEyRTU4QGp1bXAubmV0Pg=="},"prevInTopic":66,"nextInTopic":148,"prevInTime":144,"nextInTime":146,"topicId":54,"numMessagesInTopic":6,"msgSnippet":"Ok.  I just got back from traveling and reading all of this email.  I am going to try to put together answers to Paul and Jeff in one email. Here is what I","rawEmail":"Return-Path: &lt;alex@...&gt;\r\nX-Sender: alex@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 22 Jan 2002 20:18:54 -0000\r\nReceived: (qmail 77437 invoked from network); 22 Jan 2002 20:18:54 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m4.grp.snv.yahoo.com with QMQP; 22 Jan 2002 20:18:54 -0000\r\nReceived: from unknown (HELO mail.vo.com) (208.36.81.99)\n  by mta1.grp.snv.yahoo.com with SMTP; 22 Jan 2002 20:18:53 -0000\r\nReceived: from gandolph.ASGARD.jms (alexhome2 [66.108.152.69])\n\tby mail.vo.com (8.12.1/8.12.1) with ESMTP id g0MKIhFv002567\n\t(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);\n\tTue, 22 Jan 2002 15:18:48 -0500\r\nDate: Tue, 22 Jan 2002 15:19:22 -0500 (Eastern Standard Time)\r\nTo: rest-discuss@yahoogroups.com, &lt;mime-rpc@...-rpc.com&gt;\r\nSubject: MIME-RPC, REST, and Asynchrony\r\nIn-Reply-To: &lt;3C489A71.2D8A2E58@...&gt;\r\nMessage-ID: &lt;Pine.WNT.4.43.0201221416170.592-100000@...&gt;\r\nX-X-Sender: alex@...\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nFrom: &quot;S. Alexander Jacobson&quot; &lt;alex@...&gt;\r\nX-Yahoo-Group-Post: public\r\n\r\nOk.  I just got back from traveling and reading\nall of this email.  I am going to try to put\ntogether answers to Paul and Jeff in one email.\n\nHere is what I think REST says:\nOnly use HTTP.\nOnly use HTTP methods (expose objects as URLs).\nOnly use GET to make idempotent requests\nUse XML to represent structured data when\nnecessary.\n\nMy claims:\nHTTP GET does not allow requests that you want\nMIME-RPC allows delivery of those requests\n  (HTTP does not prohibit specific POST from being\n  idempotent)\nHTTP does not support asynchrony\nMIME-RPC does support asynchrony\nXML is a bad way to represent some structured data\nand a good way to represent others.\n\nRegarding GET and idempotency, Paul says you\nshould just urlencode everything.  He ignores the\nreality that real life HTTP servers and\nitermediaries will frequently cut off excessively\nlong HTTP query strings.  But that is really\nbeside the point. Jeff&#39;s more substantive answer\nis:\n\n&gt; The REST position is therefore that you need\n&gt; to remodel your application to fit the HTTP model and thereby get all the\n&gt; goodness of HTTP, rather than using it as a &quot;dumb&quot; conduit to tunnel other\n&gt; protocols and map to other object models.  *Fully expose your application as\n&gt; resources that conform to the generic semantics of HTTP.*\n\nThis is handwaving away the problem.  You have to\ndeal with application semantics as is.  Suppose I\nwant to implement TerroristOrNot.com.  You send it\na par of pictures of someone (front and side) and\nit replies whether or not that person is a\nterrorist.  The pictures may be in GIF, JPEG, or\nPNG format.\n\nUsing MIME-RPC over HTTP, you would POST either\na list (multipart/mixed), or a struct\n(multipart/form-data) to some URL (e.g.\nterroristornot.com/verify).\n\nYou cannot sanely do this with GET, therefore I\nthink you cannot sanely do this with REST.\n\nNote to Paul: packaging the request as an XML\ndocument is also exceedingly ugly (though I now\nunderstand that XML is not part of REST).\n\n&gt; &gt; Claim: REST supports asynchronous messaging\n&gt; &gt;\n&gt; &gt; Reality: REST appears to require use of HTTP and\n&gt; &gt; HTTP does not support asynchronous requests.\n&gt;\n&gt; This is (a) incorrect, as we&#39;ve already stated, and (b) rather ludicrous\n&gt; anyway.  Asynchrony as an application communication pattern doesn&#39;t require\n&gt; an asynchronous communication protocol --- if it did, it wouldn&#39;t be possible\n&gt; to build asynchronous applications with i.e. ONC RPC, CORBA, etc.  But we do\n&gt; just that.  Syncronous request-response protocols are sufficient for building\n&gt; asynchronous messaging on top of, and vice-versa --- both models are fully\n&gt; general.\n\nOk, I&#39;ll be more precise.  HTTP is not a PROTOCOL\nfor asynchronous messaging.  To do asynchronous\nmessaging with another party you need a protocol.\nTherefore, REST, as it stands does not support\nasynchrony!\n\nNote, that you can bulid asynchronous applications\non top of HTTP is irrelevant because the\nasynchrony will only be between parties agreeing\non some implicit new protocol.\n\nI can&#39;t believe this point is even in\ndispute, esp. in light of  the recent discussion\non REST-discuss on this very issue!\n\nWith MIME-RPC, I proposed enhancing RFC822\nslightly to achieve asynchorny.  Specifically.\ninitiators send a message-id (as in RFC822)\nand a reply-to-url (like reply-to, except it takes\nany URL -- so replies can be any uri\nscheme, like mailto:, http:,  https:, imap:, ftp:,\nfile:, etc.).\n\nThese  headers may be sent over any MIME transport\n(including HTTP or SMTP).\n\nLucas Gonze has proposed a different enhancement\nto HTTP that attempts to achieve the similar\ngoals\n(http://gonze.com/asynch-http/aREST_frame.htm).\n\nI think the biggest difference between the two\nproposals is the direct support for other uri\nschemes.\n\nI also think that Lucas&#39;s proposal covers many\northogonal messaging issues that are better\nhandled with separate specs.\n\nI am actually in the process of drafting some of\nthose right now, but I think they are add-ons to a\nmuch more basic asynchronous messaging spec.\nI will try to respond to Lucas post shortly, but\nhere is my list of add-on services:\n\n* Reliable Delivery/Return-receipt/Expiration\n* Polling Delivery (sender has no return address)\n* Seriality (messages must be handled in order)\n* Atomicity (all-or-none of message group handled)\n* Consistency (any fault means none--see atomicity)\n* Isolation (no visible side effects until commit)\n* Durability\n* Prepare (useful for two phase commit)\n\nThe main point is that these are add-ons.  For\nbasic stuff, I think you don&#39;t need anything more\nsophisticated than email.  Remember:\nworse-is-better/simpler-is-better.\n\n&gt; Reality:  REST doesn&#39;t claim that applications should add to the HTTP method\n&gt; set.  (BTW, that was my loudest and most passionate objection to REST before\n&gt; I &quot;got it.&quot;)  The REST claim is that almost anything you can think of doing\n&gt; can be trivially recast within the context of HTTP&#39;s general, powerful\n&gt; methods.  (Atomic read+delete is an example of one possible missing method,\n&gt; but there aren&#39;t many of them.)\n\nI like this idea A LOT.  I just don&#39;t think it is\nalways possible to do so.  I also think that often\nprogrammers just want a way to expose their\nexisting APIs over the web.  MIME-RPC provides\nthat as well.\n\n-Alex-\n\n___________________________________________________________________\nS. Alexander Jacobson                   i2x Media\n1-212-787-1914 voice                    1-603-288-1280 fax\n\n\n\n\n"}}