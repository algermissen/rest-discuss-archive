{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":164939419,"authorName":"Jon Hanna","from":"Jon Hanna &lt;jon@...&gt;","profile":"hack_poet","replyTo":"SENDER","senderId":"RxJNWe8EyfXKRPW9gr2IF3gJAze-HoLVPdTPE_iVv5rcRvLqAMJ1xzqI6eE9jKy72bJw8Qu1oPtBCLEZKDkVqKfWVWI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST on the Desktop Anyone?","postDate":"1180661232","msgId":8738,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ2NUY3NUYwLjMwMjA0MDZAaGFja2NyYWZ0Lm5ldD4=","inReplyToHeader":"PDAwNDQwMWM3YTNlNCRlZDkxOTMwMCQyMTAyZmVhOUBHdWlkZXMubG9jYWw+","referencesHeader":"PDE0M0NCNTVELUFEMTktNEZBMy1BRURGLURBMUJDOTgxRUEwMEBpbm5vcS5jb20+IDw4OTI2MTMuMzcwNDUucW1Ad2ViNTIxMDMubWFpbC5yZTIueWFob28uY29tPiA8MDAxNjAxYzdhM2Q5JGEwYzYwMDcwJDIxMDJmZWE5QEd1aWRlcy5sb2NhbD4gPDQ2NUY2MUM1LjUwNTA4MDhAaGFja2NyYWZ0Lm5ldD4gPDAwNDQwMWM3YTNlNCRlZDkxOTMwMCQyMTAyZmVhOUBHdWlkZXMubG9jYWw+"},"prevInTopic":8736,"nextInTopic":8739,"prevInTime":8737,"nextInTime":8739,"topicId":8703,"numMessagesInTopic":59,"msgSnippet":"... No, there s more to it than REST. HTML, XML and CSS are really only related to REST in that they can point to other resources and be rendered","rawEmail":"Return-Path: &lt;jon@...&gt;\r\nX-Sender: jon@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 69638 invoked from network); 1 Jun 2007 01:29:24 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m46.grp.scd.yahoo.com with QMQP; 1 Jun 2007 01:29:24 -0000\r\nReceived: from unknown (HELO mail.arena1.com) (63.116.216.131)\n  by mta11.grp.scd.yahoo.com with SMTP; 1 Jun 2007 01:29:24 -0000\r\nReceived: from ip-83-147-166-27.dub-fng.metro.digiweb.ie [83.147.166.27] by mail.arena1.com with SMTP;\n   Thu, 31 May 2007 21:27:11 -0400\r\nMessage-ID: &lt;465F75F0.3020406@...&gt;\r\nDate: Fri, 01 Jun 2007 02:27:12 +0100\r\nUser-Agent: Thunderbird 2.0.0.0 (Windows/20070326)\r\nMIME-Version: 1.0\r\nTo: &#39;Rest List&#39; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;143CB55D-AD19-4FA3-AEDF-DA1BC981EA00@...&gt; &lt;892613.37045.qm@...&gt; &lt;001601c7a3d9$a0c60070$2102fea9@...&gt; &lt;465F61C5.5050808@...&gt; &lt;004401c7a3e4$ed919300$2102fea9@...&gt;\r\nIn-Reply-To: &lt;004401c7a3e4$ed919300$2102fea9@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Declude-Sender: jon@... [83.147.166.27]\r\nX-Declude-Spoolname: -157462421719.eml\r\nX-Declude-RefID: \r\nX-Declude-Note: Scanned by Declude 4.3.14 for spam. &quot;http://www.declude.com/x-note.htm&quot;\r\nX-Declude-Scan: Score [0] at 21:27:21 on 31 May 2007\r\nX-Declude-Fail: Whitelisted\r\nX-Country-Chain: \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Jon Hanna &lt;jon@...&gt;\r\nSubject: Re: [rest-discuss] REST on the Desktop Anyone?\r\nX-Yahoo-Group-Post: member; u=164939419; y=XjzfHo9eMDIi3oY0iNvpsnUzfni11A5TRztC3BdFEEkknO96\r\nX-Yahoo-Profile: hack_poet\r\n\r\nMike Schinkel wrote:\n&gt; It&#39;s far easier to develop interoperably for the web than for the desktop.\n&gt; Why do you think that is?  HTTP, content-types, etc. Basically: REST.  IMHO,\n&gt; anyway. ;)\n\nNo, there&#39;s more to it than REST. HTML, XML and CSS are really only \nrelated to REST in that they can point to other resources and be \nrendered incrementally.\n\nThere&#39;s a lot in them that also helps make the web interoperable.\n\nThat&#39;s also true of DOM and JS though in practice that&#39;s where the hard \nbits are for interoperability.\n\nWe already have quite a lot of interoperability at the network layer \noutside of HTTP.\n\nI&#39;ve never had interoperability problems with FTP, SMTP or POP due to \nclients and servers differing in OS, and they aren&#39;t RESTful.\n\n&gt; Interoperability on desktop apps is not great just as SOAP webservice\n&gt; interoperability is not great.\n\nI think one could make something that departed from REST the same way \nthat SOAP did and was just as interoperable. Actually, just get rid of \nall the SOAP stacks except one and you might do so.\n\nIt would still suck, but for reasons other than interoperability. All \nthe systems doing it would suck in the same way, and so be interoperable.\n\n&gt; Using REST principles applied judiciously to\n&gt; the desktop could bring the same interoperability we see on the web to the\n&gt; desktop.\n\nYou&#39;ve got a great hammer there, but that isn&#39;t a nail.\n\n&gt; Secondly, I&#39;m always, always, always pining for some way to go\n&gt; back to a particular (course grained) point in an application.  Having that\n&gt; point available in an LRL (Local Resource Locator) would be wonderful, just\n&gt; like having a path I can copy and paste from Windows Explorer to file open\n&gt; dialogs is wonderful.\n\nI&#39;ve actually done this in desktop apps. This isn&#39;t REST though.\n\n&gt; Thirdly it could unify the desktop and the web and\n&gt; eliminate the (in the future more and more) arbitrary distinction between\n&gt; local and Internet.\n\nThe distinctions are not arbitrary. The biggest reason for people \nbelieving the infamous Fallacies of Distributed Computing[1] is that \nthey don&#39;t apply locally. A serious advantage in dealing with HTTP verbs \non URIs-as-nouns over RPC models is RPC models make the very \nnon-arbitrary distinction between local and Internet appear arbitrary.\n\nREST is designed to deal with precisely the situations those fallacies \nlead people to ignore.\n\nIf you really need to get rid of the distinction between the local and \nthe networked just build it networked and run it on a webserver on \nlocalhost - but realise that that is a sacrifice of adopting REST in \nsituations where its benefits aren&#39;t as directly applicable made for the \ngains in terms of it being seemless with the rest of the web, rather \nthan a direct boon to the desktop.\n\n&gt; The path in the title bar is analogous to the URL that one can save and/or\n&gt; copy from one context and paste into another.\n\nYes. I don&#39;t see how this is REST though.\n\n&gt; If I want to go to the\n&gt; c:&#92;foo&#92;bar&#92;baz&#92;wa&#92;zoo directory I don&#39;t have to click, click, click, click,\n&gt; click to get there, I can cut & paste a saved URL, or just select one from\n&gt; history and Windows Explorer takes me right there.  I really wish I had such\n&gt; a thing in my email client, for example.\n\nI don&#39;t see how this is REST either.\n\nThere is no client-server. There&#39;s no stateless connection (indeed, no \nconnection). There is no cache. There is no uniform interface. There is \nno layered system. Code-on-demand isn&#39;t even applicable as a concept \n(you already have all the code).\n\n0 out of 7 constraints met.\n\nOf the data elements:\nResource: Closest thing is the files. Lets give you that one rather than \nargue - 1 data element.\nURI: Yep, can even be a real URI (&quot;file:///...&quot;)\nRepresetation: This is a big one where your argument falls down. Okay, \nif you have an NTFS file system you can have different streams in a file \nand sort of kludge it that way, but you can&#39;t get to that easily through \nwhat&#39;s put in front of you. On balance; no.\nRepresentaiton metadata: No distinction between rep, res and ctrl\nResource metadata: No distinction rep, res and ctrl\nControl metadata: No distionction rep, res and ctrl\n\n2 out of 6 at a push. 1 out of 6 really as talking about files as \nresources is okay, but talking about resources as files is not only \nwrong but dangerously so (since it&#39;s common mistake).\n\nConnectors:\nI can&#39;t even find a force analogy for most of them. Let&#39;s say explorer \nis a client, the file system a server and leave it at 2 out of 5.\n\nComponents:\n2 out of 4 for the same reason.\n\nSimilarity to REST therefore is (0/7) * (2/6) * (2/5) * (2*4) = 0%\n\n[1] http://en.wikipedia.org/wiki/Fallacies_of_Distributed_Computing\n\n\n"}}