{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":229540941,"authorName":"dev","from":"dev &lt;dev.akhawe@...&gt;","profile":"bertie_wooster_funny","replyTo":"SENDER","senderId":"Y2WpwSvQbkaBPP9B4r1h1VGTqf-Y32cc8tkMII5YYKyzq9u4lWWMNghtPkmwURmAeHf9-BrH7DmaF6Kbhw0NS8g","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Workflow","postDate":"1210007201","msgId":10727,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVjZjM1YTFiMDgwNTA1MTAwNmcyODA2MWUwMHE1ZjI1NGEyZDk1MmE2ZDVkQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGZ2bWt1Zys5ZHQ0QGVHcm91cHMuY29tPg==","referencesHeader":"PDg0MWE2YzJjMDgwNTA1MDIxNWc2MmZkYjI1YWhmMjc5NGM0MjEzZDkyMjk5QG1haWwuZ21haWwuY29tPgkgPGZ2bWt1Zys5ZHQ0QGVHcm91cHMuY29tPg=="},"prevInTopic":10720,"nextInTopic":10744,"prevInTime":10726,"nextInTime":10728,"topicId":10718,"numMessagesInTopic":7,"msgSnippet":"... How ? Every message should be complete in itself ... that is another way to look at the statelessness constraint . I think you are confused regarding what","rawEmail":"Return-Path: &lt;dev.akhawe@...&gt;\r\nX-Sender: dev.akhawe@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 77239 invoked from network); 5 May 2008 17:06:41 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m42.grp.scd.yahoo.com with QMQP; 5 May 2008 17:06:41 -0000\r\nX-Received: from unknown (HELO rv-out-0708.google.com) (209.85.198.247)\n  by mta16.grp.scd.yahoo.com with SMTP; 5 May 2008 17:06:41 -0000\r\nX-Received: by rv-out-0708.google.com with SMTP id f25so2089904rvb.18\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 05 May 2008 10:06:41 -0700 (PDT)\r\nX-Received: by 10.141.122.20 with SMTP id z20mr2906929rvm.160.1210007201177;\n        Mon, 05 May 2008 10:06:41 -0700 (PDT)\r\nX-Received: by 10.141.87.10 with HTTP; Mon, 5 May 2008 10:06:41 -0700 (PDT)\r\nMessage-ID: &lt;ecf35a1b0805051006g28061e00q5f254a2d952a6d5d@...&gt;\r\nDate: Mon, 5 May 2008 22:36:41 +0530\r\nTo: erlingwl &lt;erlingwl@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;fvmkug+9dt4@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;841a6c2c0805050215g62fdb25ahf2794c4213d92299@...&gt;\n\t &lt;fvmkug+9dt4@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: dev &lt;dev.akhawe@...&gt;\r\nSubject: Re: [rest-discuss] Re: Workflow\r\nX-Yahoo-Group-Post: member; u=229540941; y=88vImSariPvRb4LMDJMdtnt0RZOIuTAu3Vr9OVXzn_CpWlxRhcp74eYUx0Ruq0A\r\nX-Yahoo-Profile: bertie_wooster_funny\r\n\r\n&gt;Okay, but doesn&#39;t this break with the REST Server-side statelessness\n&gt;principle?\nHow ? Every message should be complete in itself ... that is another\nway to look at the statelessness constraint . I think you are confused\nregarding what STATE means over here.\n\n&gt; have to execute the progressWorkflow() method.. such methods has\n&gt;potential side-effects on an issue..\n\nAnything other than GET which has a potential side-effect is fine.\nEven with GET a potential is side-effect is fine as long as you don&#39;t\nhold the user responsible for it.\n\nPlease also read the HTTP error codes and see what are all the\nresponses you could generate ... you will be surprised (I was ! :)\n\nRegards\nDevdatta\n\n\nOn 05/05/2008, erlingwl &lt;erlingwl@...&gt; wrote:\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; --- In rest-discuss@yahoogroups.com, &quot;Roger van de Kimmenade&quot;\n&gt;  &lt;rvdkimmenade@...&gt; wrote:\n&gt;  &gt;\n&gt;  &gt; When the resource is in an incorrect state just return that the\n&gt;  state is not\n&gt;  &gt; correct\n&gt;  &gt; (there is a HTTP error code for it).\n&gt;  &gt; In this case the application state is stored within the client, so the\n&gt;  &gt; client knows what is allowed.\n&gt;  &gt;\n&gt;\n&gt;  Okay, but doesn&#39;t this break with the REST Server-side statelessness\n&gt;  principle? Hmm.. I thought maybe that incrementing state would be just\n&gt;  as wrong as incrementing a value.. but as you say, the client do know\n&gt;  the state, and it sends the new state with the PUT..\n&gt;\n&gt;  However, what happens on the server side, e.g. if you use Jira - you\n&gt;  have to execute the progressWorkflow() method.. such methods has\n&gt;  potential side-effects on an issue.. is this okay with the REST\n&gt;  constraints really?\n&gt;\n&gt;  &gt; Further thoughts\n&gt;  &gt;\n&gt;  &gt; /issues - Contains all issues\n&gt;  &gt; /issues/open - Contains the open issues (list with resource links to\n&gt;  &gt; /issues/{issue})\n&gt;  &gt; /issues/resolved - contains the resolved issues (list with resource\n&gt;  links to\n&gt;  &gt; /issues/{issue})\n&gt;  &gt;\n&gt;  &gt; Open to resolve send PUT to /issues/{issue} with state RESOLVED.\n&gt;  &gt; In case GET /issues/open will return the list without the resolved\n&gt;  issue and\n&gt;  &gt; GET /issues/resolved will return the list with the resolved issue added.\n&gt;  &gt;\n&gt;\n&gt;  Yes, okay, so /issues/ would still return all issues then, that&#39;s\n&gt;  simple enough..\n&gt;\n&gt;  &gt; Hope this helps,\n&gt;  &gt;\n&gt;  &gt; Regards\n&gt;  &gt; Roger van de Kimmenade\n&gt;  &gt;\n&gt;  &gt;\n&gt;  &gt; On 5/5/08, erlingwl &lt;erlingwl@...&gt; wrote:\n&gt;  &gt; &gt;\n&gt;  &gt; &gt;   Hi,\n&gt;  &gt; &gt;\n&gt;  &gt; &gt; I am creating a RESTful interface for issue trackers. However, I have\n&gt;  &gt; &gt; run into a little problem, some issue trackers have workflow\n&gt;  &gt; &gt; constraints that depends on the state.. For instance an issue cannot\n&gt;  &gt; &gt; be reopened if it isn&#39;t resolved or closed. Furthermore, let&#39;s say I\n&gt;  &gt; &gt; have a resolved issue but I&#39;m conducting a PUT with state = &quot;Open&quot;.\n&gt;  &gt; &gt; This is not allowed, unless I make my wrapper first reopen the issue,\n&gt;  &gt; &gt; then start progress, and then stop progress again. I might just\n&gt;  &gt; &gt; implement this hack, but what I want to know is how I should express\n&gt;  &gt; &gt; these workflow constraints RESTfully if i want to..\n&gt;  &gt; &gt;\n&gt;  &gt; &gt; I figure one can use urls like: issues/open, issues/resolved etc.. But\n&gt;  &gt; &gt; how do I then move an open issue to /issues/resolved ? If I conduct a\n&gt;  &gt; &gt; POST to /resolved I would create a new issues.. and that would be\n&gt;  &gt; &gt; wrong? Furthermore I would probably have to delete the issue from\n&gt;  &gt; &gt; /open too?\n&gt;  &gt; &gt;\n&gt;  &gt; &gt; Any good ideas / best practices?\n&gt;  &gt; &gt;\n&gt;  &gt; &gt;\n&gt;  &gt; &gt;\n&gt;  &gt;\n&gt;\n&gt;                    \n\n"}}