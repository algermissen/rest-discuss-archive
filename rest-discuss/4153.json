{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":80827773,"authorName":"Seairth Jacobs","from":"Seairth Jacobs &lt;seairth@...&gt;","profile":"seairthjacobs","replyTo":"SENDER","senderId":"qm1Qfyr6g9wBGOhicK5mbF_rUAyAPohlNlMCeayjcQX31M1fNvjt6VAK8V2KMf8sSWZknz1-6t5kI8OI621oB5oJEFtsNyU3PbgZ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] REST Transaction Process","postDate":"1076555764","msgId":4153,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwMkFFRkY0LjYwNDA1MDZAc2VhaXJ0aC5jb20+","inReplyToHeader":"PDMyMjI1RjNBLTVDNzEtMTFEOC05MjQxLTAwMEE5NUIxOEQ1QUB2ZG0uY2M+","referencesHeader":"PDQwMjlDMTc0LjYwNjAwMDFAc2VhaXJ0aC5jb20+IDwzMjIyNUYzQS01QzcxLTExRDgtOTI0MS0wMDBBOTVCMThENUFAdmRtLmNjPg=="},"prevInTopic":4151,"nextInTopic":4154,"prevInTime":4152,"nextInTime":4154,"topicId":4141,"numMessagesInTopic":67,"msgSnippet":"... I m not sure, really.  Here are some additional things to think about: 1) By using the prefix approach, the whole thing could be cleanly(?) implemented via","rawEmail":"Return-Path: &lt;seairth@...&gt;\r\nX-Sender: seairth@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 90742 invoked from network); 12 Feb 2004 03:20:09 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m17.grp.scd.yahoo.com with QMQP; 12 Feb 2004 03:20:09 -0000\r\nReceived: from unknown (HELO lakemtao03.cox.net) (68.1.17.242)\n  by mta3.grp.scd.yahoo.com with SMTP; 12 Feb 2004 03:20:09 -0000\r\nReceived: from seairth.com ([68.96.198.105]) by lakemtao03.cox.net\n          (InterMail vM.5.01.06.05 201-253-122-130-105-20030824) with ESMTP\n          id &lt;20040212031612.WOHF2192.lakemtao03.cox.net@...&gt;\n          for &lt;rest-discuss@yahoogroups.com&gt;;\n          Wed, 11 Feb 2004 22:16:12 -0500\r\nMessage-ID: &lt;402AEFF4.6040506@...&gt;\r\nDate: Wed, 11 Feb 2004 22:16:04 -0500\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.6) Gecko/20040113\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;4029C174.6060001@...&gt; &lt;32225F3A-5C71-11D8-9241-000A95B18D5A@...&gt;\r\nIn-Reply-To: &lt;32225F3A-5C71-11D8-9241-000A95B18D5A@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 68.1.17.242\r\nFrom: Seairth Jacobs &lt;seairth@...&gt;\r\nSubject: Re: [rest-discuss] REST Transaction Process\r\nX-Yahoo-Group-Post: member; u=80827773\r\nX-Yahoo-Profile: seairthjacobs\r\n\r\n&quot;Vincent D Murphy&quot; wrote:\n\n&gt; On 11 Feb 2004, at 05:45, Seairth Jacobs wrote:\n&gt;\n&gt;&gt; Check out http://www.seairth.com/web/resttp.html and tell me what you \n&gt;&gt; think.\n&gt;\n&gt;\n&gt; I like your idea, but I wonder if it may be possible to\n&gt; simplify.\n&gt;\n&gt; Instead of prefixing the URIs of requests in the transaction,\n&gt; could the transaction not be referred to by a request header?\n&gt;\n&gt; So instead of translating (e.g.)\n&gt;\n&gt; PUT /path/resource1\n&gt; to\n&gt; PUT /t/123/path/resource1\n&gt; why not have\n&gt;\n&gt; PUT /path/resource1\n&gt; Transaction: /t/123\n&gt;\n&gt; or similar.  The trade-off, as I see it, is that it would be\n&gt; easier to write a client that includes an extra header than\n&gt; one that munges the request URI; that smells like a kludge\n&gt; to me.\n&gt;\n&gt; What do you think?\n\nI&#39;m not sure, really.  Here are some additional things to think about:\n\n1) By using the prefix approach, the whole thing could be cleanly(?) \nimplemented via a single script (or entry-point), anyhow.  For instance, \nthe &quot;/t&quot; resource could be implemented as a Python script.  This means \nthat you do not have to augment the resources (that can be updated \nwithin the transaction) to use this capability.  Also, this makes it \neasier to retrofit existing sites with the capability.\n\n2) I have occasionally read that proxies will strip unrecognized \nheaders, which would not be good if the transaction resource were passed \naround in that manner.  Another way of looking at this is that the \nprefix approach makes the edited resource(s) and the transaction \nresource inseparable, which I consider to be a Good Thing.\n\n3) As I mention, you can pass the URI of the Transaction resource around \n(or the XML document itself).  You can also pass the URI of an edited \nresource and the reference to the transaction resource is implicitly \npassed along.  The recipient of the resource doesn&#39;t even need to know \nabout the transaction.  For instance, suppose that you have a standard \nprocess for updating a resource.  You pass the URI of the resource \n(unedited) within the context of the transaction.  The process performs \nthe update as it normally would.  However, it knows nothing about the \ntransaction, and doesn&#39;t need to.\n\nSeairth\n\n\n"}}