{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":272793929,"authorName":"Kevin Duffey","from":"Kevin Duffey &lt;andjarnic@...&gt;","profile":"andjarnic","replyTo":"SENDER","senderId":"IyognZbBBO0zvxq_dfbI9-fuzUMOOVMAiUFuLJ2_GTrlaO5URoh0-j8vuQOu4qv1OWX3--lUGSGQgqJrQfyTGG0Oki2Kx3ZtgQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Digest Authentication related","postDate":"1290133519","msgId":16915,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE0NjM1My42MzYzMy5xbUB3ZWI1NTkwNC5tYWlsLnJlMy55YWhvby5jb20+","inReplyToHeader":"PDRDRTVENzhELjYwMTA1MDNAaGFja2NyYWZ0Lm5ldD4="},"prevInTopic":16914,"nextInTopic":16916,"prevInTime":16914,"nextInTime":16916,"topicId":16912,"numMessagesInTopic":7,"msgSnippet":"This is an interesting issue.. I always thought that for my public REST api, I would write up an SDK doc that would explain to consumers that they will need to","rawEmail":"Return-Path: &lt;andjarnic@...&gt;\r\nX-Sender: andjarnic@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 23153 invoked from network); 19 Nov 2010 02:25:21 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 19 Nov 2010 02:25:21 -0000\r\nX-Received: from unknown (HELO nm14.bullet.mail.ac4.yahoo.com) (98.139.52.211)\n  by mta1.grp.sp2.yahoo.com with SMTP; 19 Nov 2010 02:25:20 -0000\r\nX-Received: from [98.139.52.195] by nm14.bullet.mail.ac4.yahoo.com with NNFMP; 19 Nov 2010 02:25:20 -0000\r\nX-Received: from [98.139.52.180] by tm8.bullet.mail.ac4.yahoo.com with NNFMP; 19 Nov 2010 02:25:20 -0000\r\nX-Received: from [127.0.0.1] by omp1063.mail.ac4.yahoo.com with NNFMP; 19 Nov 2010 02:25:20 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 297635.15764.bm@...\r\nX-Received: (qmail 63882 invoked by uid 60001); 19 Nov 2010 02:25:20 -0000\r\nMessage-ID: &lt;146353.63633.qm@...&gt;\r\nX-YMail-OSG: jvgpBp0VM1nt6xNy.zm0ZSw5J9ernHTr3px3wRxkW4lUn_l\n Wpi6OP9xefhDYeqj2PnYUrUX4T5fnHeNkwLFBxDM7rZC5xUNbltXa0Yuw6HT\n fUUHxS6d7i4bVpKVevVm8Frb35fSS0sGWWRnBT8CyFqOoquJNrQGXzKnVEcw\n .IZXDiwV_5nzWqqFdD8VBaAQNz5B4qp517o0oTTG4RSKiLSO8QeiFGbFjGOn\n l5NS9IyO0YrHYSOlSJTAdFjiOZ69zQBPCg.wTUX5mM9_NKZLSN4BntWE7_6i\n IkIie9kNrsgeg5lCIWCTX_DOfngrs.WukmcZkmuFtmfY-\r\nX-Received: from [99.22.138.61] by web55904.mail.re3.yahoo.com via HTTP; Thu, 18 Nov 2010 18:25:19 PST\r\nX-Mailer: YahooMailClassic/11.4.9 YahooMailWebService/0.8.107.285259\r\nDate: Thu, 18 Nov 2010 18:25:19 -0800 (PST)\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;4CE5D78D.6010503@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;0-550312079-1290133519=:63633&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Kevin Duffey &lt;andjarnic@...&gt;\r\nSubject: Re: [rest-discuss] Digest Authentication related\r\nX-Yahoo-Group-Post: member; u=272793929; y=EA-T6V1xGPSQbyAj60e5UbdrbUH4jglthx6BWhxe7p_KJEAs\r\nX-Yahoo-Profile: andjarnic\r\n\r\n\r\n--0-550312079-1290133519=:63633\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThis is an interesting issue.. I always thought that for my public REST api=\r\n, I would write up an SDK doc that would explain to consumers that they wil=\r\nl need to register at my site for an authentication key of some sort. I thi=\r\nnk many APIs do this now. You sign up, give some info, a generated token of=\r\n some sort is sent out via email, you then use this to access that API. \n\nW=\r\nhat your saying is, every request that comes in that requires authenticatio=\r\nn, my API would then send back a challenge for auth, then the consumer woul=\r\nd send another request with auth and if it is good, the request goes throug=\r\nh?\n\nThat just seems odd to me. Unless I am misunderstanding and this is a d=\r\nifference scenario than what I describe? Is what you are saying needed to b=\r\ne considered RESTful? Or if there is the ability to sign up and get a token=\r\n and supply it with all subsequent requests without ever needing a challeng=\r\ne a viable option to be considered RESTful?\n\n\n--- On Thu, 11/18/10, Jon Han=\r\nna &lt;jon@...&gt; wrote:\n\nFrom: Jon Hanna &lt;jon@...&gt;\nSubject:=\r\n Re: [rest-discuss] Digest Authentication related\nTo: rest-discuss@yahoogro=\r\nups.com\nDate: Thursday, November 18, 2010, 5:49 PM\n\n\n\n\n\n\n\n=C2=A0\n\n\n\n  \n\n\n  =\r\n  \n      \n      \n      On 2010-11-18 19:07, cyuva_online wrote:\n\n&gt; If the c=\r\nlient knows in advance that server requires Digest Authentication for a res=\r\nource, can it include &quot;Authorization&quot; header with each request to avoid 401=\r\n error? How about nonce and qop in this case. What are the pros and cons of=\r\n this approach.\n\n&gt;\n\n&gt; Why I am asking this question is.. we are planning to=\r\n host a RESTful WS for our partner and all the resources are protected and =\r\nneeds authentication. Please advise.\n\n\n\nYou should never send authenticatio=\r\nn details for ANY scheme until \n\nchallenged for them. There are sadly some =\r\nsoftware out there that will \n\npre-emptively authentication headers for the=\r\n Basic scheme, (XHR from \n\njavascript in Safari used to have such a bug if =\r\nyou set the username and \n\npassword programatically, but I haven&#39;t checked =\r\nin a while to see if \n\nthis is still the case), and the obvious security ho=\r\nle in doing so if \n\nthe scheme used on the server isn&#39;t Basic should suffic=\r\ne to explain why \n\nit&#39;s a bad idea generally.\n\n\n\nAlso, you should change th=\r\ne nonce used regularly (a matter of seconds, \n\nminutes or at the very outsi=\r\nde hours, depending on how \n\nsecurity-sensitive the resources are) to avoid=\r\n replay attacks, so 401s \n\nwill never be avoidable (if the reason the serve=\r\nr is rejecting a request \n\nis that it has changed the nonce, it should incl=\r\nude stale=3Dtrue to \n\nindicate that previous details can be retried with th=\r\ne new nonce).\n\n\n\nFor this reason it is worth keeping the entity body of a 4=\r\n01 small, to \n\navoid excess transmission. In a webservice a very small (may=\r\nbe just \n\nsingle-element) XML document can suffice. In an HTML case a small=\r\n \n\ndocument merely stating that one needs to log in (linked to &quot;&quot; to \n\ntrig=\r\nger a reload on link traversal perhaps). In some cases the simple \n\nXML doc=\r\nument described above with an XSLT to produce a simple HTML case \n\nwhen vie=\r\nwed in a browser can hit both cases adequately.\t\n\n\n\n\n\n    \n     \n\n    \n    =\r\n\n\n\n \n\n\n\n  \n\n\n\n\n\n\n      \r\n--0-550312079-1290133519=:63633\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;table cellspacing=3D&quot;0&quot; cellpadding=3D&quot;0&quot; border=3D&quot;0&quot; &gt;&lt;tr&gt;&lt;td valign=3D&quot;=\r\ntop&quot; style=3D&quot;font: inherit;&quot;&gt;This is an interesting issue.. I always thoug=\r\nht that for my public REST api, I would write up an SDK doc that would expl=\r\nain to consumers that they will need to register at my site for an authenti=\r\ncation key of some sort. I think many APIs do this now. You sign up, give s=\r\nome info, a generated token of some sort is sent out via email, you then us=\r\ne this to access that API. &lt;br&gt;&lt;br&gt;What your saying is, every request that =\r\ncomes in that requires authentication, my API would then send back a challe=\r\nnge for auth, then the consumer would send another request with auth and if=\r\n it is good, the request goes through?&lt;br&gt;&lt;br&gt;That just seems odd to me. Un=\r\nless I am misunderstanding and this is a difference scenario than what I de=\r\nscribe? Is what you are saying needed to be considered RESTful? Or if there=\r\n is the ability to sign up and get a token and supply it with all subsequen=\r\nt\n requests without ever needing a challenge a viable option to be consider=\r\ned RESTful?&lt;br&gt;&lt;br&gt;&lt;br&gt;--- On &lt;b&gt;Thu, 11/18/10, Jon Hanna &lt;i&gt;&lt;jon@hackcr=\r\naft.net&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;&lt;blockquote style=3D&quot;border-left: 2px solid r=\r\ngb(16, 16, 255); margin-left: 5px; padding-left: 5px;&quot;&gt;&lt;br&gt;From: Jon Hanna =\r\n&lt;jon@...&gt;&lt;br&gt;Subject: Re: [rest-discuss] Digest Authenticat=\r\nion related&lt;br&gt;To: rest-discuss@yahoogroups.com&lt;br&gt;Date: Thursday, November=\r\n 18, 2010, 5:49 PM&lt;br&gt;&lt;br&gt;&lt;div id=3D&quot;yiv1377207189&quot;&gt;\n\n\n\n\n\n&lt;span style=3D&quot;di=\r\nsplay: none;&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;yiv1377207189ygrp-text&quot;&gt;\n    =\r\n  \n      \n      &lt;p&gt;On 2010-11-18 19:07, cyuva_online wrote:&lt;br&gt;\n&gt; If the=\r\n client knows in advance that server requires Digest Authentication for a r=\r\nesource, can it include &quot;Authorization&quot; header with each request to avoid 4=\r\n01 error? How about nonce and qop in this case. What are the pros and cons =\r\nof this approach.&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Why I am asking this question is.. we a=\r\nre planning to host a RESTful WS for our partner and all the resources are =\r\nprotected and needs authentication. Please advise.&lt;br&gt;\n&lt;br&gt;\nYou should neve=\r\nr send authentication details for ANY scheme until &lt;br&gt;\nchallenged for them=\r\n. There are sadly some software out there that will &lt;br&gt;\npre-emptively auth=\r\nentication headers for the Basic scheme, (XHR from &lt;br&gt;\njavascript in Safar=\r\ni used to have such a bug if you set the username and &lt;br&gt;\npassword program=\r\natically, but I haven&#39;t checked in a while to see if &lt;br&gt;\nthis is still the=\r\n case), and the obvious security hole in doing so if &lt;br&gt;\nthe scheme used o=\r\nn the server isn&#39;t Basic should suffice to explain why &lt;br&gt;\nit&#39;s a bad idea=\r\n generally.&lt;br&gt;\n&lt;br&gt;\nAlso, you should change the nonce used regularly (a ma=\r\ntter of seconds, &lt;br&gt;\nminutes or at the very outside hours, depending on ho=\r\nw &lt;br&gt;\nsecurity-sensitive the resources are) to avoid replay attacks, so 40=\r\n1s &lt;br&gt;\nwill never be avoidable (if the reason the server is rejecting a re=\r\nquest &lt;br&gt;\nis that it has changed the nonce, it should include stale=3Dtrue=\r\n to &lt;br&gt;\nindicate that previous details can be retried with the new nonce).=\r\n&lt;br&gt;\n&lt;br&gt;\nFor this reason it is worth keeping the entity body of a 401 smal=\r\nl, to &lt;br&gt;\navoid excess transmission. In a webservice a very small (maybe j=\r\nust &lt;br&gt;\nsingle-element) XML document can suffice. In an HTML case a small =\r\n&lt;br&gt;\ndocument merely stating that one needs to log in (linked to &quot;&quot; to &lt;br&gt;=\r\n\ntrigger a reload on link traversal perhaps). In some cases the simple &lt;br&gt;=\r\n\nXML document described above with an XSLT to produce a simple HTML case &lt;b=\r\nr&gt;\nwhen viewed in a browser can hit both cases adequately.\t&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n=\r\n    &lt;/div&gt;\n     \n\n\n\n \n\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;\n\n      \r\n--0-550312079-1290133519=:63633--\r\n\n"}}