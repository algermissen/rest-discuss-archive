{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":511039257,"authorName":"Mike Kelly","from":"Mike Kelly &lt;mikekelly321@...&gt;","profile":"mikekelly8762348","replyTo":"SENDER","senderId":"VhDDog6e5CgSHqddPzxsDInfvwp9QmW4X8mfyRIkJl6OspY--wvpPFKEZTQ1xl4SdqKTrSuC8jsgA9Ac7co8ER4SGeJg-rSL-Ho","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] The &quot;new media types are evil&quot; meme","postDate":"1326159153","msgId":18395,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDVBRTlFNkQ1LTE2MzMtNDQyRC04NjA1LTg3Qzg3REUzMTRGOEBnbWFpbC5jb20+","inReplyToHeader":"PENBSzVWZHp4RTJ1M1JtUWVYTDNjTkI5VGpRTWF3Vj1xOVBpMkJxWUdHZUV4SmNnWTVCZ0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBTnFpWkphK1FTSnhvMUVHXzJra2Eta3c9RWdFMTBoN196V212aXhZMU1jU2JZRGItd0BtYWlsLmdtYWlsLmNvbT4gPDg1QzM5N0IwLTQwQkQtNDQxRS04NzJDLTRFN0E5MDVBRTdCNkBub3Jkc2MuY29tPiA8Q0FEYkdaamJCVGRQVzFMUnFqWVEtRkMzOVByblkwQTAtR2orY0gzRWpoZFpobzdhTEFnQG1haWwuZ21haWwuY29tPiA8Q0FBMVk3MkZYN2ZLRGpOZz1pYWNnVF8zUFBHcHVlSlVvajJiK1lxYmNyOHA1PTdtM1lnQG1haWwuZ21haWwuY29tPiA8NGYwOTY0MDYuMDlhOTJhMGEuMThlYy42NjQ5U01UUElOX0FEREVEQG14Lmdvb2dsZS5jb20+IDxDQU5xaVpKWVpZR2VFd0d4RXFKQmdGY01RZmUxRENpU2RDYllVeDFyaTFUUGY1azlMU2dAbWFpbC5nbWFpbC5jb20+IDw0RjA5NzZBRi4zMDUwMDAyQHNtaXkub3JnPiA8NEYwOTk0RDIuOTA4MDgwM0BzbWl5Lm9yZz4gPDRGMEIyNDRCLjYwNTA2MDNAc21peS5vcmc+IDxDQVBXXzhtNmo2ektIZ2dPM2hOeDFhejNIN0xEREhxU1lKOGpGU196cnhxVXN5RURzSEFAbWFpbC5nbWFpbC5jb20+IDxDQUs1VmR6ekV0X1NRc1QzZk1STWVCaU5pVkxaaHRTdVF5dkFLVWhNeGlUY1haUkRBcEFAbWFpbC5nbWFpbC5jb20+IDxDQVBXXzhtNjBFPU0xQkJWdkdkLUtkRXRpRjJlQm1zTUxQSkp4Tm5FY0wzTkx3alB5VmdAbWFpbC5nbWFpbC5jb20+IDxDQUs1VmR6eEUydTNSbVFlWEwzY05COVRqUU1hd1Y9cTlQaTJCcVlHR2VFeEpjZ1k1QmdAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":18394,"nextInTopic":18396,"prevInTime":18394,"nextInTime":18396,"topicId":18183,"numMessagesInTopic":245,"msgSnippet":"Yep. But RDF(a) also brings a load of baggage most APIs don t need, the same way HTML does. The real issue with them both, as far as machine apps go, is their","rawEmail":"Return-Path: &lt;mikekelly321@...&gt;\r\nX-Sender: mikekelly321@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 1827 invoked from network); 10 Jan 2012 01:33:35 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m11.grp.sp2.yahoo.com with QMQP; 10 Jan 2012 01:33:35 -0000\r\nX-Received: from unknown (HELO mail-ww0-f43.google.com) (74.125.82.43)\n  by mta4.grp.sp2.yahoo.com with SMTP; 10 Jan 2012 01:33:34 -0000\r\nX-Received: by wgbdt11 with SMTP id dt11so1953250wgb.12\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 09 Jan 2012 17:33:34 -0800 (PST)\r\nX-Received: by 10.180.80.164 with SMTP id s4mr31750040wix.7.1326159213923;\n        Mon, 09 Jan 2012 17:33:33 -0800 (PST)\r\nReturn-Path: &lt;mikekelly321@...&gt;\r\nX-Received: from [192.168.1.51] ([213.133.202.80])\n        by mx.google.com with ESMTPS id ee6sm5364248wib.4.2012.01.09.17.33.29\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Mon, 09 Jan 2012 17:33:30 -0800 (PST)\r\nReferences: &lt;CANqiZJa+QSJxo1EG_2kka-kw=EgE10h7_zWmvixY1McSbYDb-w@...&gt; &lt;85C397B0-40BD-441E-872C-4E7A905AE7B6@...&gt; &lt;CADbGZjbBTdPW1LRqjYQ-FC39PrnY0A0-Gj+cH3EjhdZho7aLAg@...&gt; &lt;CAA1Y72FX7fKDjNg=iacgT_3PPGpueJUoj2b+Yqbcr8p5=7m3Yg@...&gt; &lt;4f096406.09a92a0a.18ec.6649SMTPIN_ADDED@...&gt; &lt;CANqiZJYZYGeEwGxEqJBgFcMQfe1DCiSdCbYUx1ri1TPf5k9LSg@...&gt; &lt;4F0976AF.3050002@...&gt; &lt;4F0994D2.9080803@...&gt; &lt;4F0B244B.6050603@...&gt; &lt;CAPW_8m6j6zKHggO3hNx1az3H7LDDHqSYJ8jFS_zrxqUsyEDsHA@...&gt; &lt;CAK5VdzzEt_SQsT3fMRMeBiNiVLZhtSuQyvAKUhMxiTcXZRDApA@...&gt; &lt;CAPW_8m60E=M1BBVvGd-KdEtiF2eBmsMLPJJxNnEcL3NLwjPyVg@...&gt; &lt;CAK5VdzxE2u3RmQeXL3cNB9TjQMawV=q9Pi2BqYGGeExJcgY5Bg@...&gt;\r\nIn-Reply-To: &lt;CAK5VdzxE2u3RmQeXL3cNB9TjQMawV=q9Pi2BqYGGeExJcgY5Bg@...&gt;\r\nMime-Version: 1.0 (iPhone Mail 8J2)\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: multipart/alternative;\n\tboundary=Apple-Mail-3--40394314\r\nMessage-Id: &lt;5AE9E6D5-1633-442D-8605-87C87DE314F8@...&gt;\r\nCc: mike amundsen &lt;mamund@...&gt;,\n REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: iPhone Mail (8J2)\r\nDate: Tue, 10 Jan 2012 01:32:33 +0000\r\nTo: Peter Williams &lt;pezra@...&gt;\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Mike Kelly &lt;mikekelly321@...&gt;\r\nSubject: Re: [rest-discuss] The &quot;new media types are evil&quot; meme\r\nX-Yahoo-Group-Post: member; u=511039257; y=Frw7a4UM409QPX_vcYSnTBwZBqsBBfw-zu3zI9ayzWAHDm5ChZJhRAeUzA8t2HuXF8I277NfJT9_siQ\r\nX-Yahoo-Profile: mikekelly8762348\r\n\r\n\r\n--Apple-Mail-3--40394314\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/plain;\n\tcharset=utf-8\r\n\r\nYep. But RDF(a) also brings a load of baggage most APIs don&#39;t need, the sam=\r\ne way HTML does. The real issue with them both, as far as machine apps go, =\r\nis their over-affordance with features that aren&#39;t relevant to the real nee=\r\nds of RESTful APIs. Call it terseness or bloat, they aren&#39;t really fit for =\r\npurpose and there&#39;s not enough benefits to keep most people from looking el=\r\nsewhere for a simpler option that will keep their app easy to consume. This=\r\n has lead most people  to use either plain XML/JSON or roll their own domai=\r\nn specific media type - both of which are bad outcomes for the web. They&#39;re=\r\n also potentially avoidable outcomes in future if we provide a media type w=\r\nith only the very essential affordances built in - which is exactly what we=\r\n are doing with HAL. \n\nOn 9 Jan 2012, at 11:52 PM, Peter Williams &lt;pezra@ba=\r\nrelyenough.org&gt; wrote:\n\n&gt; On Mon, Jan 9, 2012 at 1:42 PM, mike amundsen &lt;ma=\r\nmund@...&gt; wrote:\n&gt; &gt; Peter:\n&gt; &gt;\n&gt; &gt; my comment here is not about desi=\r\ngning messages where _all_\n&gt; &gt; possibilities exist at _all_ times, but is i=\r\nnstead about designing\n&gt; &gt; messages where the server can indicate to the cl=\r\nient what options are\n&gt; &gt; available and valid &quot;at this point in time.&quot; (i.e=\r\n. you don&#39;t see the\n&gt; &gt; &quot;details&quot; link in the message because you are not y=\r\net logged in&quot; or\n&gt; &gt; &quot;you don&#39;t see the &quot;markup for adding an invoice becau=\r\nse you are not\n&gt; &gt; authorized to do so&quot; or &#39;You don&#39;t see the link for repo=\r\nrts because\n&gt; &gt; the reports are not yet avaialble&quot; and so forth).\n&gt; \n&gt; What=\r\n is the problem with a server simply omitting properties that a\n&gt; requester=\r\n is not allowed to see? This is usually how we handling this\n&gt; in HTML. Why=\r\n would the same approach not work with an RDF-ish media\n&gt; type?\n&gt; \n&gt; &gt; Here=\r\n are some examples:\n&gt; &gt; HTML.IMG\n&gt; &gt; means &quot;retrieve the resource and embed=\r\n it in the page (don&#39;t navigate to it)&quot;\n&gt; &gt;\n&gt; &gt; X.INCLUDE\n&gt; &gt; means &quot;retrie=\r\nve the resource and embed it in the page (don&#39;t navigate to it)&quot;\n&gt; \n&gt; If th=\r\ne embedded image feature of HTML had been implemented as `&lt;link\n&gt; rel=3D&quot;em=\r\nbedded-image&quot; href=3D&quot;...&quot;/&gt;` would we be worse off (from a REST\n&gt; perspect=\r\nive)? If a `link` with a specific rel is pretty much the same\n&gt; as the `img=\r\n` tag then it seems that we could achieve that result with\n&gt; RDF-ish format=\r\ns. If you think there is a material difference, please\n&gt; example that in mo=\r\nre details\n&gt; \n&gt; My gut feeling is that retrieve vs navigate is a distinctio=\r\nn without\n&gt; much of a difference in the context of automated user agents. T=\r\nhe\n&gt; distinction is obviously important for certain clients (ie, browsers)\n=\r\n&gt; but not for others (ie, proxies, screen readers, etc).\n&gt; \n&gt; &gt; HTML.A\n&gt; &gt; =\r\nmeans &quot;navigate to the resource (don&#39;t embed it)&quot;\n&gt; &gt;\n&gt; &gt; ATOM.LINK@rel=3D&quot;=\r\nalternate&quot;\n&gt; &gt; means &quot;navigate to the resource (don&#39;t embed it)&quot;\n&gt; \n&gt; Seems=\r\n like most links are either the &quot;navigate&quot; flavor or have some\n&gt; specific s=\r\nemantics to the user agent that could be specified with an\n&gt; `@rel`. Given =\r\nthe markup nature of HTML it probably needs a special\n&gt; form of link to &quot;li=\r\nnkify some text&quot;. I don&#39;t see the need for more\n&gt; than two kinds of links i=\r\nn HTML, and in more automata oriented formats\n&gt; it seems that one flavor of=\r\n link should be sufficient.\n&gt; \n&gt; &gt; HTML.FORM@method=3D&quot;:get&quot;\n&gt; &gt; means &quot;col=\r\nlect the arguments, construct a URI and navigate to that\n&gt; &gt; resource using=\r\n the HTTP method &quot;get&quot; (don&#39;t make a body w/ the args)&quot;\n&gt; &gt;\n&gt; &gt; HTML.FORM@m=\r\nethod=3D&quot;post&quot;\n&gt; &gt; means &quot;collect the arguments, construct a body and navig=\r\nate to that\n&gt; &gt; resource using the HTTP method &quot;post&quot; (don&#39;t construct a UR=\r\nI w/ the\n&gt; &gt; args)&quot;\n&gt; \n&gt; Yeah, uri template support and a form vocabulary w=\r\nould be useful.\n&gt; However, may systems do not require that set of capabilit=\r\nies. I don&#39;t\n&gt; see the method paramater as all that important.\n&gt; \n&gt; A get f=\r\norm is really just a specification for how to render a UI for a\n&gt; URI templ=\r\nate. For an automated user agent such a specification is\n&gt; superflous, the =\r\nsame thing can be accomplished with just a link whose\n&gt; target is a URI tem=\r\nplate. (Possibly with a couple of extra resources\n&gt; representing the set of=\r\n valid values for the various options.)\n&gt; \n&gt; Similarly, in the context of a=\r\nutomated user agents, anything you can\n&gt; do with a form, you can do without=\r\n form by sufficiently specifying the\n&gt; media type and/or relationships.\n&gt; \n=\r\n&gt; (Though in some situations a form might better than either of the\n&gt; above=\r\n choices.)\n&gt; \n&gt; &gt; ATOM:LINK@rel=3D&quot;edit&quot;\n&gt; &gt; means &quot;use this link to PUT or=\r\n DELETE the indicated resource using\n&gt; &gt; guidlines set out in AtomPub\n&gt; &gt;\n&gt;=\r\n &gt; none of the RDF media types i have encountered have these affordances\n&gt; =\r\n&gt; built in; there is no universal way for servers to inform clients of\n&gt; &gt; =\r\nthe valid/appropriate possibilities at any point in time. Clients must\n&gt; &gt; =\r\nhave this information hard-coded instead.\n&gt; \n&gt; So is your point that no one=\r\n has bothered to put together a decent RDF\n&gt; based media type? Or that it w=\r\nould be very difficult/impossible to do\n&gt; so?\n&gt; \n&gt; These affordances you&#39;ve=\r\n mentioned are either built on link+@rel which\n&gt; is, at least to me, semant=\r\nically indistinguishable from an RDF triple,\n&gt; or they are media type speci=\r\nfic, and therefore not &quot;universal&quot;. Even\n&gt; the ones that seem particularly =\r\ndistinctive don&#39;t always mean what\n&gt; they are specified to mean.\n&gt; \n&gt; For e=\r\nxample, if my automated user agent reads in an HTML page it does\n&gt; *not* re=\r\ntrieve and embed image resources linked to by that page.\n&gt; Neither do the a=\r\nccelerating proxies though which it passes, they just\n&gt; retrieve and cache.=\r\n Interestingly they do exactly the same thing with\n&gt; the `a` tags in the HT=\r\nML. For the proxies there is no distinction\n&gt; between `img` and `a` tags ex=\r\ncept perhaps in prioritization.\n&gt; \n&gt; Peter\n&gt; barelyenough.org\n&gt; \n\r\n--Apple-Mail-3--40394314\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=utf-8\r\n\r\n&lt;html&gt;&lt;body bgcolor=3D&quot;#FFFFFF&quot;&gt;&lt;div&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;-webkit-tap-highlight-color: rgba(26, 26, 26, 0.292969); -webkit-compos=\r\nition-fill-color: rgba(175, 192, 227, 0.230469); -webkit-composition-frame-=\r\ncolor: rgba(77, 128, 180, 0.230469);&quot;&gt;Yep. But RDF(a) also brings a load of=\r\n baggage most APIs don&#39;t need, the same way HTML does. The real issue with =\r\nthem both, as far as machine apps go, is their over-affordance with feature=\r\ns that aren&#39;t relevant to the real needs of RESTful APIs. Call it terseness=\r\n or bloat, they aren&#39;t really fit for purpose and there&#39;s not enough benefi=\r\nts to keep most people from looking elsewhere for a simpler option that wil=\r\nl keep their app easy to consume. This has lead most people &nbsp;to use ei=\r\nther plain XML/JSON or roll their own domain specific media type - both of =\r\nwhich are bad outcomes for the web. They&#39;re also potentially avoidable outc=\r\nomes in future if we provide a media type with only the very essential affo=\r\nrdances built in - which is exactly what we are doing with HAL.&nbsp;&lt;/span=\r\n&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=3D&quot;-webkit-tap-highlight=\r\n-color: rgba(26, 26, 26, 0.296875); -webkit-composition-fill-color: rgba(17=\r\n5, 192, 227, 0.230469); -webkit-composition-frame-color: rgba(77, 128, 180,=\r\n 0.230469); &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;-webkit-tap-highlight-color: rgba(26, 26, 26, 0.296875); -webkit-compos=\r\nition-fill-color: rgba(175, 192, 227, 0.230469); -webkit-composition-frame-=\r\ncolor: rgba(77, 128, 180, 0.230469); &quot;&gt;On 9 Jan 2012, at 11:52 PM, Peter Wi=\r\nlliams &lt;&lt;a href=3D&quot;mailto:pezra@...&quot;&gt;pezra@...=\r\n&lt;/a&gt;&gt; wrote:&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;blockquote type=\r\n=3D&quot;cite&quot;&gt;&lt;div&gt;\n\n\n\n\n&lt;span style=3D&quot;display:none&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div =\r\nid=3D&quot;ygrp-text&quot;&gt;\n      \n      \n      &lt;p&gt;On Mon, Jan 9, 2012 at 1:42 PM, mi=\r\nke amundsen &lt;&lt;a href=3D&quot;mailto:mamund%40yahoo.com&quot;&gt;&lt;a href=3D&quot;mailto:mam=\r\nund@...&quot;&gt;mamund@...&lt;/a&gt;&lt;/a&gt;&gt; wrote:&lt;br&gt;\n&gt; Peter:&lt;br&gt;\n&gt;=\r\n&lt;br&gt;\n&gt; my comment here is not about designing messages where _all_&lt;br&gt;\n&=\r\ngt; possibilities exist at _all_ times, but is instead about designing&lt;br&gt;\n=\r\n&gt; messages where the server can indicate to the client what options are&lt;=\r\nbr&gt;\n&gt; available and valid &quot;at this point in time.&quot; (i.e. you don&#39;t see t=\r\nhe&lt;br&gt;\n&gt; &quot;details&quot; link in the message because you are not yet logged in=\r\n&quot; or&lt;br&gt;\n&gt; &quot;you don&#39;t see the &quot;markup for adding an invoice because you =\r\nare not&lt;br&gt;\n&gt; authorized to do so&quot; or &#39;You don&#39;t see the link for report=\r\ns because&lt;br&gt;\n&gt; the reports are not yet avaialble&quot; and so forth).&lt;br&gt;\n&lt;b=\r\nr&gt;\nWhat is the problem with a server simply omitting properties that a&lt;br&gt;\n=\r\nrequester is not allowed to see? This is usually how we handling this&lt;br&gt;\ni=\r\nn HTML.  Why would the same approach not work with an RDF-ish media&lt;br&gt;\ntyp=\r\ne?&lt;br&gt;\n&lt;br&gt;\n&gt; Here are some examples:&lt;br&gt;\n&gt; HTML.IMG&lt;br&gt;\n&gt; means &quot;=\r\nretrieve the resource and embed it in the page (don&#39;t navigate to it)&quot;&lt;br&gt;\n=\r\n&gt;&lt;br&gt;\n&gt; X.INCLUDE&lt;br&gt;\n&gt; means &quot;retrieve the resource and embed it =\r\nin the page (don&#39;t navigate to it)&quot;&lt;br&gt;\n&lt;br&gt;\nIf the embedded image feature =\r\nof HTML had been implemented as `&lt;link&lt;br&gt;\nrel=3D&quot;embedded-image&quot; href=\r\n=3D&quot;...&quot;/&gt;` would we be worse off (from a REST&lt;br&gt;\nperspective)?  If a `=\r\nlink` with a specific rel is pretty much the same&lt;br&gt;\nas the `img` tag then=\r\n it seems that we could achieve that result with&lt;br&gt;\nRDF-ish formats. If yo=\r\nu think there is a material difference, please&lt;br&gt;\nexample that in more det=\r\nails&lt;br&gt;\n&lt;br&gt;\nMy gut feeling is that retrieve vs navigate is a distinction =\r\nwithout&lt;br&gt;\nmuch of a difference in the context of automated user agents. T=\r\nhe&lt;br&gt;\ndistinction is obviously important for certain clients (ie, browsers=\r\n)&lt;br&gt;\nbut not for others (ie, proxies, screen readers, etc).&lt;br&gt;\n&lt;br&gt;\n&gt; =\r\nHTML.A&lt;br&gt;\n&gt; means &quot;navigate to the resource (don&#39;t embed it)&quot;&lt;br&gt;\n&gt;&lt;=\r\nbr&gt;\n&gt; ATOM.LINK@rel=3D&quot;alternate&quot;&lt;br&gt;\n&gt; means &quot;navigate to the resour=\r\nce (don&#39;t embed it)&quot;&lt;br&gt;\n&lt;br&gt;\nSeems like most links are either the &quot;navigat=\r\ne&quot; flavor or have some&lt;br&gt;\nspecific semantics to the user agent that could =\r\nbe specified with an&lt;br&gt;\n`@rel`. Given the markup nature of HTML it probabl=\r\ny needs a special&lt;br&gt;\nform of link to &quot;linkify some text&quot;. I don&#39;t see the =\r\nneed for more&lt;br&gt;\nthan two kinds of links in HTML, and in more automata ori=\r\nented formats&lt;br&gt;\nit seems that one flavor of link should be sufficient.&lt;br=\r\n&gt;\n&lt;br&gt;\n&gt; HTML.FORM@method=3D&quot;:get&quot;&lt;br&gt;\n&gt; means &quot;collect the arguments=\r\n, construct a URI and navigate to that&lt;br&gt;\n&gt; resource using the HTTP met=\r\nhod &quot;get&quot; (don&#39;t make a body w/ the args)&quot;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; HTML.FORM@meth=\r\nod=3D&quot;post&quot;&lt;br&gt;\n&gt; means &quot;collect the arguments, construct a body and nav=\r\nigate to that&lt;br&gt;\n&gt; resource using the HTTP method &quot;post&quot; (don&#39;t constru=\r\nct a URI w/ the&lt;br&gt;\n&gt; args)&quot;&lt;br&gt;\n&lt;br&gt;\nYeah, uri template support and a f=\r\norm vocabulary would be useful.&lt;br&gt;\nHowever, may systems do not require tha=\r\nt set of capabilities. I don&#39;t&lt;br&gt;\nsee the method paramater as all that imp=\r\nortant.&lt;br&gt;\n&lt;br&gt;\nA get form is really just a specification for how to rende=\r\nr a UI for a&lt;br&gt;\nURI template. For an automated user agent such a specifica=\r\ntion is&lt;br&gt;\nsuperflous, the same thing can be accomplished with just a link=\r\n whose&lt;br&gt;\ntarget is a URI template. (Possibly with a couple of extra resou=\r\nrces&lt;br&gt;\nrepresenting the set of valid values for the various options.)&lt;br&gt;=\r\n\n&lt;br&gt;\nSimilarly, in the context of automated user agents, anything you can&lt;=\r\nbr&gt;\ndo with a form, you can do without form by sufficiently specifying the&lt;=\r\nbr&gt;\nmedia type and/or relationships.&lt;br&gt;\n&lt;br&gt;\n(Though in some situations a =\r\nform might better than either of the&lt;br&gt;\nabove choices.)&lt;br&gt;\n&lt;br&gt;\n&gt; ATOM=\r\n:LINK@rel=3D&quot;edit&quot;&lt;br&gt;\n&gt; means &quot;use this link to PUT or DELETE the indic=\r\nated resource using&lt;br&gt;\n&gt; guidlines set out in AtomPub&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;=\r\n none of the RDF media types i have encountered have these affordances&lt;br&gt;\n=\r\n&gt; built in; there is no universal way for servers to inform clients of&lt;b=\r\nr&gt;\n&gt; the valid/appropriate possibilities at any point in time. Clients m=\r\nust&lt;br&gt;\n&gt; have this information hard-coded instead.&lt;br&gt;\n&lt;br&gt;\nSo is your =\r\npoint that no one has bothered to put together a decent RDF&lt;br&gt;\nbased media=\r\n type?  Or that it would be very difficult/impossible to do&lt;br&gt;\nso?&lt;br&gt;\n&lt;br=\r\n&gt;\nThese affordances you&#39;ve mentioned are either built on link+@rel which&lt;br=\r\n&gt;\nis, at least to me, semantically indistinguishable from an RDF triple,&lt;br=\r\n&gt;\nor they are media type specific, and therefore not &quot;universal&quot;.  Even&lt;br&gt;=\r\n\nthe ones that seem particularly distinctive don&#39;t always mean what&lt;br&gt;\nthe=\r\ny are specified to mean.&lt;br&gt;\n&lt;br&gt;\nFor example, if my automated user agent r=\r\neads in an HTML page it does&lt;br&gt;\n*not* retrieve and embed image resources l=\r\ninked to by that page.&lt;br&gt;\nNeither do the accelerating proxies though which=\r\n it passes, they just&lt;br&gt;\nretrieve and cache. Interestingly they do exactly=\r\n the same thing with&lt;br&gt;\nthe `a` tags in the HTML. For the proxies there is=\r\n no distinction&lt;br&gt;\nbetween `img` and `a` tags except perhaps in prioritiza=\r\ntion.&lt;br&gt;\n&lt;br&gt;\nPeter&lt;br&gt;\n&lt;a href=3D&quot;http://barelyenough.org&quot;&gt;&lt;a href=3D&quot;htt=\r\np://barelyenough.org&quot;&gt;barelyenough.org&lt;/a&gt;&lt;/a&gt;&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n=\r\n    \n\n\n\n\n\n&lt;!-- end group email --&gt;\n\n&lt;/div&gt;&lt;/blockquote&gt;&lt;/body&gt;&lt;/html&gt;\r\n--Apple-Mail-3--40394314--\r\n\n"}}