{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":300479819,"authorName":"Colin Jack","from":"Colin Jack &lt;colin.jack@...&gt;","profile":"colin.jack","replyTo":"SENDER","senderId":"XLZhUmzFjADZzUbZ2xt9Rv2XvoQKrsGhAAB-dl3iBSgRgm-juaT0R7Kp0AVWZD8ICicgBlleC8ZLORplsLA-3f-TXUOfz0y_","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: CommandQuerySeparation and REST?","postDate":"1242995819","msgId":12704,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE5YzM3NTc5MDkwNTIyMDUzNmc0ZTRkNzAyc2QwMGYyNzVlNWRhMmZhODVAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGd2NGNrMitkbmEyQGVHcm91cHMuY29tPg==","referencesHeader":"PDQ5RkY5NkFELjkwNjA3MDBAZ21haWwuY29tPiA8Z3Y0Y2syK2RuYTJAZUdyb3Vwcy5jb20+"},"prevInTopic":12692,"nextInTopic":12705,"prevInTime":12703,"nextInTime":12705,"topicId":12555,"numMessagesInTopic":39,"msgSnippet":"... Not sure I follow and wanted to check. I think you are saying that you agree with the using POST based commands for all updates, and maybe that by running","rawEmail":"Return-Path: &lt;colin.jack@...&gt;\r\nX-Sender: colin.jack@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 51149 invoked from network); 22 May 2009 12:38:20 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m6.grp.re1.yahoo.com with QMQP; 22 May 2009 12:38:20 -0000\r\nX-Received: from unknown (HELO mail-ew0-f164.google.com) (209.85.219.164)\n  by mta3.grp.re1.yahoo.com with SMTP; 22 May 2009 12:38:20 -0000\r\nX-Received: by ewy8 with SMTP id 8so1898713ewy.17\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 22 May 2009 05:37:19 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.53.12 with SMTP id f12mr787612wec.72.1242995839135; Fri, \n\t22 May 2009 05:37:19 -0700 (PDT)\r\nIn-Reply-To: &lt;gv4ck2+dna2@...&gt;\r\nReferences: &lt;49FF96AD.9060700@...&gt; &lt;gv4ck2+dna2@...&gt;\r\nDate: Fri, 22 May 2009 13:36:59 +0100\r\nMessage-ID: &lt;a9c375790905220536g4e4d702sd00f275e5da2fa85@...&gt;\r\nTo: johnzabroski &lt;johnzabroski@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=0016e6daa7d372f1a0046a7f8584\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Colin Jack &lt;colin.jack@...&gt;\r\nSubject: Re: [rest-discuss] Re: CommandQuerySeparation and REST?\r\nX-Yahoo-Group-Post: member; u=300479819; y=ch-M2Xgb53NA31GIlvIM16bDmy5xO6QgoA03kV5ixem38yUFsg\r\nX-Yahoo-Profile: colin.jack\r\n\r\n\r\n--0016e6daa7d372f1a0046a7f8584\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&gt; Just writing to confirm that I use the approach you are talking\n&gt; about. =\r\n Where your domain model goes, be it client or server, is\n&gt; not REST vs. RP=\r\nC.  It is a federation problem.  If your web app&#39;s\n&gt; client portion is obje=\r\nct-oriented and in the same trust domain as\n&gt; the server, and the communica=\r\ntion channel is secure, then your\n&gt; model can exist on the client.  Your pr=\r\notocol still needs to be\n&gt; able to handle failure, though, and you need to =\r\nthink of what\n&gt; tolerances you need before you design the API.\n\nNot sure I =\r\nfollow and wanted to check. I think you are saying that you agree\nwith the =\r\nusing POST based commands for all updates, and maybe that by\nrunning the sa=\r\nme model on the client you can have it generate the commands?\n\n\n&gt; As an asi=\r\nde, I&#39;ve never seen anyone debate CQS vs. REST before.  I\n&gt; remember bringi=\r\nng up CQS to Stefan Tilkov as a basic REST pattern\n&gt; (Jul 12, 2008), and he=\r\n commented that he totally forgot about CQS.\n\nWe might all be talking about=\r\n slightly different things to be honest. My\noriginal thought was that Ricka=\r\nrd is thinking of the sort of approach that\nUdi Dahan has described before =\r\n(\nhttp://www.udidahan.com/2008/08/11/command-query-separation-and-soa/).\n\n\n=\r\n2009/5/21 johnzabroski &lt;johnzabroski@...&gt;\n\n&gt;\n&gt;\n&gt; --- In rest-discuss@=\r\nyahoogroups.com &lt;rest-discuss%40yahoogroups.com&gt;,\n&gt; Rickard =D6berg &lt;rickar=\r\ndoberg@...&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi!\n&gt; &gt;\n&gt; &gt; I&#39;m writing a new application for GT=\r\nD workflows, and wanted to see if I\n&gt; &gt; can apply the REST principles to th=\r\ne web API. I have had much good input\n&gt; &gt; from the discussions here so far,=\r\n but one thing I need help with.\n&gt; &gt;\n&gt; &gt; Basically, I want the application =\r\nto use Command and Query separation at\n&gt; &gt; its root. This means that client=\r\ns call queries to get state/views out,\n&gt; &gt; then perform commands on that wh=\r\nich are sent back to the server. In\n&gt; &gt; other words, clients never ever sen=\r\nd state back, only commands. So far I\n&gt; &gt; have resources in my URI structur=\r\ne for the queries, which can be GET,\n&gt; &gt; and that works quite ok, but then =\r\nI also have the commands in my URI\n&gt; &gt; structure, such as:\n&gt; &gt; /user/123/in=\r\nbox/createtask\n&gt; &gt; which when GET returns an empty JSON structure or HTML f=\r\norm, which can\n&gt; &gt; then be filled in and POST&#39;ed back. There is a domain mo=\r\ndel on the\n&gt; &gt; server which interprets and executes this and all the domain=\r\n logic\n&gt; &gt; around it.\n&gt; &gt;\n&gt; &gt; But from my reading of the &quot;RESTful web servi=\r\nces&quot; this corresponds to\n&gt; &gt; the REST/RPC hybrid architecture. It is diffic=\r\nult, at best, to do\n&gt; &gt; caching of resources, since there is no POST/PUT/DE=\r\nLETE which explicitly\n&gt; &gt; could be used to invalidate resource caches, such=\r\n as that of\n&gt; &gt; /user/123/inbox. Using lastmodified/etags for caching works=\r\n though.\n&gt; &gt;\n&gt; &gt; Does anyone have experience building CQS-systems that have=\r\n a more\n&gt; &gt; RESTful approach? How are others dealing with this?\n&gt; &gt;\n&gt; &gt; Tha=\r\nnks,\n&gt; &gt; Rickard\n&gt;\n&gt; Just writing to confirm that I use the approach you ar=\r\ne talking about.\n&gt; Where your domain model goes, be it client or server, is=\r\n not REST vs. RPC.\n&gt; It is a federation problem. If your web app&#39;s client p=\r\nortion is\n&gt; object-oriented and in the same trust domain as the server, and=\r\n the\n&gt; communication channel is secure, then your model can exist on the cl=\r\nient.\n&gt; Your protocol still needs to be able to handle failure, though, and=\r\n you need\n&gt; to think of what tolerances you need before you design the API.=\r\n\n&gt;\n&gt; Caching is part of layering, too.\n&gt;\n&gt; As an aside, I&#39;ve never seen any=\r\none debate CQS vs. REST before. I remember\n&gt; bringing up CQS to Stefan Tilk=\r\nov as a basic REST pattern (Jul 12, 2008), and\n&gt; he commented that he total=\r\nly forgot about CQS.\n&gt;\n&gt;  \n&gt;\n\r\n--0016e6daa7d372f1a0046a7f8584\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&gt; Just writing to confirm that I use the approach you are talking &lt;br&gt;&g=\r\nt; about.=A0 Where your domain model goes, be it client or server, is &lt;br&gt;&=\r\ngt; not REST vs. RPC.=A0 It is a federation problem.=A0 If your web app&#39=\r\n;s &lt;br&gt;\n\n&gt; client portion is object-oriented and in the same trust domai=\r\nn as &lt;br&gt;&gt; the server, and the communication channel is secure, then you=\r\nr &lt;br&gt;&gt; model can exist on the client.=A0 Your protocol still needs to b=\r\ne &lt;br&gt;\n&gt; able to handle failure, though, and you need to think of what &lt;=\r\nbr&gt;\n&gt; tolerances you need before you design the API.&lt;br&gt;&lt;br&gt;Not sure I f=\r\nollow and wanted to check. I think you are saying that you agree with the u=\r\nsing POST based commands for all updates, and maybe that by running the sam=\r\ne model on the client you can have it generate the commands?&lt;br&gt;\n\n&lt;br&gt;&lt;br&gt;&=\r\ngt; As an aside, I&#39;ve never seen anyone debate CQS vs. REST before.=A0 =\r\nI &lt;br&gt;&gt; remember bringing up CQS to Stefan Tilkov as a basic REST patter=\r\nn &lt;br&gt;&gt; (Jul 12, 2008), and he commented that he totally forgot about CQ=\r\nS.&lt;br&gt;\n\n&lt;br&gt;We might all be talking about slightly different things to be h=\r\nonest. My original thought was that Rickard is thinking of the sort of appr=\r\noach that Udi Dahan has described before (&lt;a href=3D&quot;http://www.udidahan.co=\r\nm/2008/08/11/command-query-separation-and-soa/&quot;&gt;http://www.udidahan.com/200=\r\n8/08/11/command-query-separation-and-soa/&lt;/a&gt;).&lt;br&gt;\n\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;=\r\ngmail_quote&quot;&gt;2009/5/21 johnzabroski &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto=\r\n:johnzabroski@...&quot;&gt;johnzabroski@...&lt;/a&gt;&gt;&lt;/span&gt;&lt;br&gt;&lt;blockquo=\r\nte class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204)=\r\n; margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;=\r\nbackground-color: rgb(255, 255, 255);&quot;&gt;\n\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;\n&lt;di=\r\nv style=3D&quot;margin: 0pt; padding: 0pt 25px 0pt 0pt; width: 470px; float: lef=\r\nt;&quot;&gt;\n\n\n    &lt;div&gt;\n            \n            &lt;br&gt;&lt;br&gt;\n      \n      &lt;p&gt;&lt;/p&gt;&lt;div=\r\n&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;--- In &lt;a href=3D&quot;mailto:rest-discuss%40yahoo=\r\ngroups.com&quot; target=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;, Rickard =D6=\r\nberg &lt;rickardoberg@...&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Hi!&lt;br&gt;\n&gt; &lt;br&gt;\n&g=\r\nt; I&#39;m writing a new application for GTD workflows, and wanted to see i=\r\nf I &lt;br&gt;\n&gt; can apply the REST principles to the web API. I have had much=\r\n good input &lt;br&gt;\n&gt; from the discussions here so far, but one thing I nee=\r\nd help with.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Basically, I want the application to use Co=\r\nmmand and Query separation at &lt;br&gt;\n&gt; its root. This means that clients c=\r\nall queries to get state/views out, &lt;br&gt;\n&gt; then perform commands on that=\r\n which are sent back to the server. In &lt;br&gt;\n&gt; other words, clients never=\r\n ever send state back, only commands. So far I &lt;br&gt;\n&gt; have resources in =\r\nmy URI structure for the queries, which can be GET, &lt;br&gt;\n&gt; and that work=\r\ns quite ok, but then I also have the commands in my URI &lt;br&gt;\n&gt; structure=\r\n, such as:&lt;br&gt;\n&gt; /user/123/inbox/createtask&lt;br&gt;\n&gt; which when GET retu=\r\nrns an empty JSON structure or HTML form, which can &lt;br&gt;\n&gt; then be fille=\r\nd in and POST&#39;ed back. There is a domain model on the &lt;br&gt;\n&gt; server =\r\nwhich interprets and executes this and all the domain logic &lt;br&gt;\n&gt; aroun=\r\nd it.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; But from my reading of the &quot;RESTful web servi=\r\nces&quot; this corresponds to &lt;br&gt;\n&gt; the REST/RPC hybrid architecture. I=\r\nt is difficult, at best, to do &lt;br&gt;\n&gt; caching of resources, since there =\r\nis no POST/PUT/DELETE which explicitly &lt;br&gt;\n&gt; could be used to invalidat=\r\ne resource caches, such as that of &lt;br&gt;\n&gt; /user/123/inbox. Using lastmod=\r\nified/etags for caching works though.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Does anyone have e=\r\nxperience building CQS-systems that have a more &lt;br&gt;\n&gt; RESTful approach?=\r\n How are others dealing with this?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Thanks,&lt;br&gt;\n&gt;    R=\r\nickard&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;&lt;/div&gt;\nJust writing to confirm that I use the approach=\r\n you are talking about.  Where your domain model goes, be it client or serv=\r\ner, is not REST vs. RPC.  It is a federation problem.  If your web app&#39;=\r\ns client portion is object-oriented and in the same trust domain as the ser=\r\nver, and the communication channel is secure, then your model can exist on =\r\nthe client.  Your protocol still needs to be able to handle failure, though=\r\n, and you need to think of what tolerances you need before you design the A=\r\nPI.&lt;br&gt;\n\n\n&lt;br&gt;\nCaching is part of layering, too.&lt;br&gt;\n&lt;br&gt;\nAs an aside, I&#3=\r\n9;ve never seen anyone debate CQS vs. REST before.  I remember bringing up =\r\nCQS to Stefan Tilkov as a basic REST pattern (Jul 12, 2008), and he comment=\r\ned that he totally forgot about CQS.&lt;br&gt;\n&lt;br&gt;\n\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;d=\r\niv width=3D&quot;1&quot; style=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n=\r\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--0016e6daa7d372f1a0046a7f8584--\r\n\n"}}