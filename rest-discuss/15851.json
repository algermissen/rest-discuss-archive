{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"o6RK6LC26OBSvv4iEHs2Y08Lby0QT5dRLnca2zJwO-Bmwm4PuOhY_1Uvqu7D7a2fjNYKvBUDReN-KTgZOHbWwEjHOgVpULP_ZHp4Y3_j7AA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] HTTP reliability - in order msg delivery?","postDate":"1279299406","msgId":15851,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJDODcxMDhCLTZGNkEtNDc4OS1CQjhCLUYxQzk5NDhCNUVEM0BtYWMuY29tPg==","inReplyToHeader":"PDg2NzA0MC44NzU2MC5xbUB3ZWIyODMwOS5tYWlsLnVrbC55YWhvby5jb20+","referencesHeader":"PDg2NzA0MC44NzU2MC5xbUB3ZWIyODMwOS5tYWlsLnVrbC55YWhvby5jb20+"},"prevInTopic":15847,"nextInTopic":15858,"prevInTime":15850,"nextInTime":15852,"topicId":15828,"numMessagesInTopic":32,"msgSnippet":"... Hmm, not really. The idea is that the client includes a token in the POST that reflects its own understanding what state the resource has. The server can","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 62850 invoked from network); 16 Jul 2010 16:57:07 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m1.grp.sp2.yahoo.com with QMQP; 16 Jul 2010 16:57:07 -0000\r\nX-Received: from unknown (HELO asmtpout027.mac.com) (17.148.16.102)\n  by mta3.grp.re1.yahoo.com with SMTP; 16 Jul 2010 16:57:07 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; charset=us-ascii\r\nX-Received: from 201-dynamic.2015397.venues.thecloud.net\n (94-116-78-201.dynamic.thecloud.net [94.116.78.201])\n by asmtp027.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec\n 16 2008; 32bit)) with ESMTPSA id &lt;0L5N00MXUTQMUF40@...&gt; for\n rest-discuss@yahoogroups.com; Fri, 16 Jul 2010 09:56:56 -0700 (PDT)\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0\n reason=mlx engine=6.0.2-1004200000 definitions=main-1007160079\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.0.10011,1.0.148,0.0.0000\n definitions=2010-07-16_02:2010-07-16,2010-07-16,1970-01-01 signatures=0\r\nIn-reply-to: &lt;867040.87560.qm@...&gt;\r\nDate: Fri, 16 Jul 2010 17:56:46 +0100\r\nCc: Rest Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;2C87108B-6F6A-4789-BB8B-F1C9948B5ED3@...&gt;\r\nReferences: &lt;867040.87560.qm@...&gt;\r\nTo: Sean Kennedy &lt;seandkennedy@...&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] HTTP reliability - in order msg delivery?\r\nX-Yahoo-Group-Post: member; u=289191104; y=1C0llp2rSSHHR39TpxQ2M1eAp0QRM2VO-c4ABzahRdWtS_nrDK1JfzAo\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Jul 15, 2010, at 10:28 AM, Sean Kennedy wrote:\n\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; On Jul 14, 2010, at 10:45 AM, Sean Kennedy wrote:\n&gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Hi Jan,\n&gt; &gt; Apologies for the confusion. Hopefully this is clearer. Firstly, to confirm I am on firm ground: this situation only appears to arise when the client is unaware of the resource URI and therefore has to use POST instead of idempotent PUT - based on Roy&#39;s post that you kindly included, where he refers to a series of individual POST requests.\n&gt; &gt; Secondly, I was looking at Bill de hOra&#39;s HTTPLR [1] last night and figured that his use of stateful URI&#39;s could be used to keep the client and server in sync i.e. no need for expensive ETag-type values.. Given that methodology, here is an example:\n&gt; &gt; \n&gt; &gt; Client Server\n&gt; &gt; \n&gt; &gt; POST /someURI update resource state;\n&gt; &gt; &lt;details&gt; /someUri goes to &quot;.../ready&quot; state\n&gt; &gt; ... \n&gt; &gt; &lt;clientViewOfState&gt;\n&gt; &gt; &quot;http://.../initial&quot; --&gt; \n&gt; &gt; &lt;/clientViewOfState&gt;\n&gt; &gt; &lt;/details&gt;\n&gt; &gt; \n&gt; &gt; &lt;-- 200 OK gets lost \n&gt; &gt; \n&gt; &gt; client re-sends:\n&gt; &gt; POST /someURI \n&gt; &gt; &lt;details&gt; server detects conflict;\n&gt; &gt; ... informs client of what its view is\n&gt; &gt; &lt;clientViewOfState&gt;\n&gt; &gt; &quot;http://.../initial&quot; --&gt; \n&gt; &gt; &lt;/clientViewOfState&gt;\n&gt; &gt; &lt;/details&gt;\n&gt; &gt; \n&gt; &gt; &lt;-- 409 Conflict\n&gt; &gt; &lt;serverStateView&gt;\n&gt; &gt; &quot;.../ready&quot;\n&gt; &gt; &lt;/serverStateView&gt;\n&gt; &gt; \n&gt; &gt; \n&gt; \n&gt; I am not sure what you are getting at with the URIs here but I see your point. Why not have the client do a GET on the resource it wants to update?\n&gt; \n&gt; -- This comes back to the original q: how does HTTP implement in-order message delivery? I was following the link to Roy&#39;s reply that you sent me i.e. multiple POSTs. Are you saying that a client could GET a repn which would contain the URI&#39;s to PUT in the correct sequence (where the client does not proceed until it gets a 200 OK from each individual PUT) ?\n\nHmm, not really. The idea is that the client includes a token in the POST that reflects its own understanding what state the resource has. The server can then check whether that is true or not (and in the latter case send the current state).\n\n\n\n&gt; Seems a neat solution...but there would be no need for the client to send up a token to indicate it&#39;s view of the resource state to the server (as I don&#39;t think it can get out of synch with PUTs)...\n&gt; \n&gt; &gt; \n&gt; &gt; Thus, the client and server are keeping in synch via the use of the stateful URI&#39;s.\n&gt; \n&gt; Hmm - what is a &#39;stateful URI&#39;?\n&gt; \n&gt; -- for me, that is a string that looks like a URI that informs the client/server where it is in the application. Is this correct/incorrect?\n\nHmm - I guess any token would be fine. No need for a URI.\n&gt; \n&gt; \n&gt; &gt; This means that the server is maintaining some application state i.e. breaking REST&#39;s statelessness constraint.\n&gt; \n&gt; How so? The application state is where the client is in the overall application. How is the server maintaining that information in your example?\n&gt; \n&gt; -- the URI string represents the current state of the application. I suppose if the server sticks it into a db then it becomes resource state and the issue is solved... \n\nI think you are thinking too complicated about the solution.\n\nPOST\n\n&lt;details expectedState=&quot;1&quot;&gt;\n  &lt;address&gt;Foo&lt;/address&gt;\n&lt;/details&gt;\n\nwould do it.\n\n(Or we are talking past each other, maybe..?)\n\nJan\n\n\n&gt; \n&gt; Sean.\n&gt; \n&gt; &gt; [1] http://dehora.net/doc/httplr/draft-httplr-01.html\n&gt; &gt; \n&gt; &gt; --- On Wed, 14/7/10, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt; &gt; \n&gt; &gt; From: Jan Algermissen &lt;algermissen1971@...&gt;\n&gt; &gt; Subject: Re: [rest-discuss] HTTP reliability - in order msg delivery?\n&gt; &gt; To: &quot;Sean Kennedy&quot; &lt;seandkennedy@...&gt;\n&gt; &gt; Cc: &quot;Jim Webber&quot; &lt;jim@...&gt;, &quot;Rest Discussion Group&quot; &lt;rest-discuss@yahoogroups.com&gt;\n&gt; &gt; Date: Wednesday, 14 July, 2010, 7:41\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; On Jul 13, 2010, at 2:15 PM, Sean Kennedy wrote:\n&gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; How does this look...\n&gt; &gt; &gt; \n&gt; &gt; \n&gt; &gt; Sean,\n&gt; &gt; \n&gt; &gt; I am having trouble to see what you are asking. Can you replace the formal expressions with HTTP request/ response examples?\n&gt; &gt; \n&gt; &gt; Jan\n&gt; &gt; \n&gt; &gt; &gt; Sean.\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- On Tue, 13/7/10, Jan Algermissen &lt;algermissen1971@...&gt; wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; From: Jan Algermissen &lt;algermissen1971@...&gt;\n&gt; &gt; &gt; Subject: Re: [rest-discuss] HTTP reliability - in order msg delivery?\n&gt; &gt; &gt; To: &quot;Sean Kennedy&quot; &lt;seandkennedy@...&gt;\n&gt; &gt; &gt; Cc: &quot;REST Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\n&gt; &gt; &gt; Date: Tuesday, 13 July, 2010, 9:50\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; On Jul 13, 2010, at 10:51 AM, Sean Kennedy wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; What if you needed in-order message delivery? I imagine for a banking application, the order of transactions on an account would be important...\n&gt; &gt; &gt; \n&gt; &gt; &gt; You can do this by including in the client&#39;s message a token that expresses the client&#39;s assumptions about the state of the resource. The server can use that token to verify that the client&#39;s expectation and the actual resource state match. If they do not match, the server instructs the client what to do next.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Roy somewhat explains this in [1]:\n&gt; &gt; &gt; \n&gt; &gt; &gt; &quot;Think of it instead as a series of individual POST requests that are\n&gt; &gt; &gt; building up a combined resource that will eventually be a savings\n&gt; &gt; &gt; account when finished. Each of those requests can include parameters\n&gt; &gt; &gt; that perform the same role as an ETag -- basically, identifying the\n&gt; &gt; &gt; client&#39;s view of the current state of the resource. Then, when a\n&gt; &gt; &gt; request is repeated or a state-change lost, the server would see\n&gt; &gt; &gt; that in the next request and tell the client to refresh its view\n&gt; &gt; &gt; of the form before continuing to the next step.&quot;\n&gt; &gt; &gt; \n&gt; &gt; &gt; [1] http://tech.groups.yahoo.com/group/rest-discuss/message/9805\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; -----------------------------------\n&gt; &gt; &gt; Jan Algermissen, Consultant\n&gt; &gt; &gt; NORD Software Consulting\n&gt; &gt; &gt; \n&gt; &gt; &gt; Mail: algermissen@...\n&gt; &gt; &gt; Blog: http://www.nordsc.com/blog/\n&gt; &gt; &gt; Work: http://www.nordsc.com/\n&gt; &gt; &gt; -----------------------------------\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; \n&gt; &gt; -----------------------------------\n&gt; &gt; Jan Algermissen, Consultant\n&gt; &gt; NORD Software Consulting\n&gt; &gt; \n&gt; &gt; Mail: algermissen@...\n&gt; &gt; Blog: http://www.nordsc.com/blog/\n&gt; &gt; Work: http://www.nordsc.com/\n&gt; &gt; -----------------------------------\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; \n&gt; -----------------------------------\n&gt; Jan Algermissen, Consultant\n&gt; NORD Software Consulting\n&gt; \n&gt; Mail: algermissen@...\n&gt; Blog: http://www.nordsc.com/blog/\n&gt; Work: http://www.nordsc.com/\n&gt; -----------------------------------\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n\n-----------------------------------\n Jan Algermissen, Consultant\n NORD Software Consulting\n\n Mail: algermissen@...\n Blog: http://www.nordsc.com/blog/\n Work: http://www.nordsc.com/\n-----------------------------------\n\n\n\n\n\n"}}