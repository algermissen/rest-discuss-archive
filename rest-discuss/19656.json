{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198897688,"authorName":"Dong Liu","from":"Dong Liu &lt;edongliu@...&gt;","profile":"edonliu","replyTo":"SENDER","senderId":"biqlTSp9fNqeGaqzlDIRE0tJsI94vHdh5GdidYJMGXqGYnJsWSHY7PrpNC61Jm1sKQnfsJ3GOvNkR1_uEMv8eWu5YsY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Reactive REST","postDate":"1400855965","msgId":19656,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBQWdWemRoZ0F0LUFPMEc3THdqOGFtPUNNckRrbm9CS0NEWGpFYTBfdkJuMWpLeD0zUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDUzNzdDMTg4LjYwMzA3MDJAYmVya2VsZXkuZWR1Pg==","referencesHeader":"PDE0MTU4MTQuNFdXR21uOWNNdUBmdWNoc2lhPgk8NTM3N0MxODguNjAzMDcwMkBiZXJrZWxleS5lZHU+"},"prevInTopic":19655,"nextInTopic":0,"prevInTime":19655,"nextInTime":19657,"topicId":19643,"numMessagesInTopic":14,"msgSnippet":"Hi Michael, I signed the reactive manifesto a while ago. I do think the RESTful applications need to be reactive . To achieve that, I think a RESTful API ","rawEmail":"Return-Path: &lt;edongliu@...&gt;\r\nX-Sender: edongliu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 73743 invoked by uid 102); 23 May 2014 14:39:25 -0000\r\nX-Received: from unknown (HELO mtaq1.grp.bf1.yahoo.com) (10.193.84.32)\n  by m6.grp.bf1.yahoo.com with SMTP; 23 May 2014 14:39:25 -0000\r\nX-Received: (qmail 9365 invoked from network); 23 May 2014 14:39:25 -0000\r\nX-Received: from unknown (HELO mail-ie0-f180.google.com) (209.85.223.180)\n  by mtaq1.grp.bf1.yahoo.com with SMTP; 23 May 2014 14:39:25 -0000\r\nX-Received: by mail-ie0-f180.google.com with SMTP id tp5so4951231ieb.25\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 23 May 2014 07:39:25 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.50.62.104 with SMTP id x8mr4799080igr.37.1400855965409; Fri,\n 23 May 2014 07:39:25 -0700 (PDT)\r\nX-Received: by 10.64.229.78 with HTTP; Fri, 23 May 2014 07:39:25 -0700 (PDT)\r\nIn-Reply-To: &lt;5377C188.6030702@...&gt;\r\nReferences: &lt;1415814.4WWGmn9cMu@fuchsia&gt;\n\t&lt;5377C188.6030702@...&gt;\r\nDate: Fri, 23 May 2014 10:39:25 -0400\r\nMessage-ID: &lt;CAAgVzdhgAt-AO0G7Lwj8am=CMrDknoBKCDXjEa0_vBn1jKx=3Q@...&gt;\r\nTo: Michael Schuerig &lt;michael.lists@...&gt;\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;, Erik Wilde &lt;dret@...&gt;\r\nContent-Type: multipart/alternative; boundary=047d7bdc1bd03327e604fa123236\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nSubject: Re: [rest-discuss] Reactive REST\r\nX-Yahoo-Group-Post: member; u=198897688; y=P2Xc5XAbPKTo7U7BZzYTojaShPTkkX2Van6TWWmf1lylhQ\r\nX-Yahoo-Profile: edonliu\r\nFrom: Dong Liu &lt;edongliu@...&gt;\r\n\r\n\r\n--047d7bdc1bd03327e604fa123236\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Michael,\n\nI signed the reactive manifesto a while ago. I do think the RE=\r\nSTful\napplications need to be &quot;reactive&quot;. To achieve that, I think a RESTfu=\r\nl API\nshould not only provide the data, but also afford how to manipulate t=\r\nhe\ndata when remote retrieval is expensive and not reliable. Query via path=\r\n\nmight be the most straightforward and safest way to that. Thinking about\nt=\r\nhe model of html, we can hardly develop any modern web applications\nwithout=\r\n the DOM. Furthermore, maybe sounding crazy, I also think a RESTful\nAPI wit=\r\nhout code-on-demand is a *dumb* API.\n\nI like what Jafar Husain showed about=\r\n netflix&#39;s approach of jsong and\neffective pational caching control. Thanks=\r\n for the link.\n\nCheers,\n\nDong\n\n\nOn Sat, May 17, 2014 at 4:07 PM, Erik Wilde=\r\n dret@...[rest-discuss]\n&lt;rest-discuss@yahoogroups.com&gt; wrote:\n\n&gt;\n&gt;=\r\n\n&gt; hello michael.\n&gt;\n&gt; On 2014-05-17, 10:33, Michael Schuerig michael.lists@=\r\nschuerig.de\n&gt; [rest-discuss] wrote:\n&gt; &gt; The &quot;reactive&quot; buzzword has been co=\r\nnspicuously absent from this list.\n&gt; &gt; I&#39;ll try to fill this much needed ga=\r\np.\n&gt;\n&gt; haven&#39;t really seen it buzzing that much, but if you had to give it =\r\nat\n&gt; least a little substance, how would you explain what it means? just\n&gt; =\r\nsomething that&#39;s driven by events rather than clients?\n&gt;\n&gt;\n&gt; &gt; I&#39;ve recentl=\r\ny watched a presentation by Jafar Husain\n&gt; &gt; http://www.infoq.com/presentat=\r\nions/netflix-reactive-rest\n&gt; &gt; where he describes something he calls &quot;React=\r\nive REST&quot;. I agree on the\n&gt; &gt; &quot;reactive&quot;, however I have doubts about the &quot;=\r\nREST&quot;. In this particular\n&gt; &gt; case, all communication between a client and =\r\na server is over persistent\n&gt; &gt; connection to a single endpoint. If there&#39;s=\r\n anything resembling\n&gt; &gt; resources, they are not identified by URIs. The pe=\r\nrsistent connection\n&gt; &gt; IMHO is a case of &quot;conversational&quot; state that REST =\r\nis rather opposed to.\n&gt; &gt; No HATEOAS in sight.\n&gt;\n&gt; sounds like websockets (=\r\nmaybe not technically, but as the general idea).\n&gt; to me, REST is on a diff=\r\nerent level than this plumbing. in the same way\n&gt; as you can do REST and no=\r\ntREST over HTTP, the same probably applies to\n&gt; any of the alternative inte=\r\nraction styles. as you point out, REST has\n&gt; more (and more abstract) const=\r\nraints than just the protocol that&#39;s used.\n&gt;\n&gt;\n&gt; &gt; What I&#39;m pondering is wh=\r\nether an API can be RESTful and reactive at the\n&gt; &gt; same time or if is impo=\r\nssible as a matter of principle. AFAICT, a\n&gt; &gt; reactive API requires some w=\r\nay for the server to send events to the\n&gt; &gt; client. I don&#39;t think polling q=\r\nualifies, which leaves a persistent\n&gt; &gt; connection. In effect, the server h=\r\nas to keep some amount of state for\n&gt; &gt; each session.\n&gt;\n&gt; not sure i agree =\r\nthat polling or long polling are the only (or best)\n&gt; alternatives. there&#39;s=\r\n quite of stuff to be done in the area that i often\n&gt; refer to as &quot;reverse =\r\nREST&quot;: clients subscribe, and then there&#39;s a push\n&gt; model. there are a vari=\r\nety of push protocols (PuSH, MQTT, APN, C2DM,\n&gt; sMAP) out there, but none s=\r\no far has taken over the world.\n&gt;\n&gt; it&#39;ll be interesting to see how this pl=\r\nays out in june at the w3c&#39;s web\n&gt; of things workshop. clearly, in sensor s=\r\ncenarios, it would be very\n&gt; convenient to have these kind of alerts, have =\r\nthem in a loosely coupled\n&gt; and scalable way, and have them via protocols t=\r\nhat are universally\n&gt; supported. it may be the case that w3c will start wor=\r\nking on something\n&gt; in that space, but we&#39;ll know more after that workshop.=\r\n\n&gt;\n&gt; http://www.w3.org/2014/02/wot/\n&gt;\n&gt; http://dret.net/netdret/publication=\r\ns#wil14a is a position paper that we\n&gt; have submitted to this workshop. it =\r\nmay be the case that activity\n&gt; streams take over as the new atom. we&#39;ll se=\r\ne about that, but they are\n&gt; not all that different, and they use JSON, so =\r\nall is good.\n&gt;\n&gt; and in the same way as you can layer PuSH on atom to have =\r\na push model\n&gt; on top of atom&#39;s data model, you can do the same for activit=\r\ny streams.\n&gt; that might be the way open push protocols are going: you can p=\r\noll for\n&gt; activities, or you can subscribe to an activity hub that pushes t=\r\no you\n&gt; whatever you has subscribed to.\n&gt;\n&gt; in my eyes, this could still be=\r\n RESTful, only that of course you would\n&gt; end up having more resources (suc=\r\nh as subscriptions that need to be\n&gt; managed and so on).\n&gt;\n&gt; anyway, a very=\r\n good question, a very interesting field, and with the\n&gt; whole IoT/WoT move=\r\nment now getting a serious hype push, maybe we&#39;ll get\n&gt; to something open, =\r\nuseful, and RESTful in the next couple of years.\n&gt;\n&gt;\n&gt; &gt; Keeping session st=\r\nate has traditionally been regarded as a hindrance to\n&gt; &gt; scalability. Has =\r\ntechnology advanced so much, eg with asynchronous,\n&gt; &gt; event-driven (&quot;react=\r\nive&quot;) servers, that this is no longer a problem?\n&gt;\n&gt; just a question of cos=\r\nt. different protocols have different solutions\n&gt; (PuSH subscriptions time =\r\nout automatically, sMAP subscriptions never\n&gt; time out), based on different=\r\n scenarios. anything push-based is more\n&gt; expensive than pure pull, because=\r\n services/hubs need to keep track of\n&gt; subscribers. but if the cost is smal=\r\nler that the benefit, then this will\n&gt; happen one way or another.\n&gt;\n&gt;\n&gt; &gt; F=\r\nrankly, I&#39;m lacking experience with systems where this kind of\n&gt; &gt; scalabil=\r\nity would be required, so I&#39;d happily use persistent\n&gt; &gt; connections, at le=\r\nast to begin with. Nonetheless, I&#39;m interested in your\n&gt; &gt; insights.\n&gt;\n&gt; we=\r\nb of things scenarios simply cannot work with long polling. if you\n&gt; want t=\r\no be connected to thousands of sensors in your building to figure\n&gt; out whe=\r\nn one is telling you that there is a fire, then you cannot have\n&gt; open conn=\r\nections to all of them. the answer here is a layered\n&gt; architecture, maybe =\r\nsome of it hidden as implementation details (sensors\n&gt; just speaking MQTT t=\r\no a hub), and other things exposed on the web level\n&gt; (you being able to su=\r\nbscribe to that hub and get alerts). many solutions\n&gt; have been built aroun=\r\nd this general pattern, but so far we lack a single\n&gt; and coherent answer w=\r\nhere to draw the boundary between the\n&gt; implementation details and the open=\r\n part, and what we should use for\n&gt; that open part. as mentioned above, may=\r\nbe that workshop will bring\n&gt; together enough interested parties to start w=\r\norking on that issue.\n&gt;\n&gt; cheers,\n&gt;\n&gt; dret.\n&gt;\n&gt; --\n&gt; erik wilde | mailto:dr=\r\net@... - tel:+1-510-2061079 |\n&gt; | UC Berkeley - School of Informat=\r\nion (ISchool) |\n&gt; | http://dret.net/netdret http://twitter.com/dret |\n&gt;\n&gt;  =\r\n\n&gt;\n\r\n--047d7bdc1bd03327e604fa123236\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Hi Michael,=C2=A0&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I signed the reactive=\r\n manifesto=C2=A0a while ago. I do think the RESTful applications need to be=\r\n &quot;reactive&quot;. To achieve that, I think a RESTful API should not on=\r\nly provide the data, but also afford how to manipulate the data when remote=\r\n retrieval is expensive and not reliable. Query via path might be the most =\r\nstraightforward and safest way to that. Thinking about the model of html, w=\r\ne can hardly develop any modern web applications without the DOM. Furthermo=\r\nre, maybe sounding crazy, I also think a RESTful API without code-on-demand=\r\n is a *dumb* API.=C2=A0&lt;/div&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-famil=\r\ny:arial,sans-serif;font-size:12.800000190734863px&quot;&gt;I like what Jafar Husain=\r\n showed about netflix&#39;s approach of jsong and effective pational cachin=\r\ng control. Thanks for the link.=C2=A0&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;&lt;font face=3D&quot;arial=\r\n, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;Cheers=\r\n,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=3D&quot;arial, sans-serif&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;=\r\nfont face=3D&quot;arial, sans-serif&quot;&gt;Dong&lt;br&gt;&lt;/font&gt;&lt;div class=3D&quot;gmail_extra&quot;&gt;\n=\r\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sat, May 17, 2014 at 4:07 PM, Erik Wi=\r\nlde &lt;a href=3D&quot;mailto:dret@...&quot;&gt;dret@...&lt;/a&gt; [rest-discus=\r\ns] &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot; ta=\r\nrget=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;\n&lt;blo=\r\nckquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0px 0px 0px 0.8ex;border-left=\r\n-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;paddi=\r\nng-left:1ex&quot;&gt;\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n \n&lt;div style=3D&quot;background-color:rgb(255,2=\r\n55,255)&quot;&gt;\n&lt;span&gt;=C2=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n   =\r\n   &lt;p&gt;hello michael.&lt;br&gt;\n&lt;br&gt;\nOn 2014-05-17, 10:33, Michael Schuerig &lt;a hre=\r\nf=3D&quot;mailto:michael.lists@...&quot; target=3D&quot;_blank&quot;&gt;michael.lists@schu=\r\nerig.de&lt;/a&gt; &lt;br&gt;&lt;/p&gt;&lt;div class=3D&quot;&quot;&gt;\n[rest-discuss] wrote:&lt;br&gt;\n&gt; The &qu=\r\not;reactive&quot; buzzword has been conspicuously absent from this list.&lt;br=\r\n&gt;\n&gt; I&#39;ll try to fill this much needed gap.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nhaven&#39;=\r\nt really seen it buzzing that much, but if you had to give it at &lt;br&gt;\nleast=\r\n a little substance, how would you explain what it means? just &lt;br&gt;\nsomethi=\r\nng that&#39;s driven by events rather than clients?&lt;div class=3D&quot;&quot;&gt;&lt;br&gt;\n&lt;br=\r\n&gt;\n&gt; I&#39;ve recently watched a presentation by Jafar Husain&lt;br&gt;\n&gt;   =\r\n &lt;a href=3D&quot;http://www.infoq.com/presentations/netflix-reactive-rest&quot; targe=\r\nt=3D&quot;_blank&quot;&gt;http://www.infoq.com/presentations/netflix-reactive-rest&lt;/a&gt;&lt;b=\r\nr&gt;\n&gt; where he describes something he calls &quot;Reactive REST&quot;. I =\r\nagree on the&lt;br&gt;\n&gt; &quot;reactive&quot;, however I have doubts about the=\r\n &quot;REST&quot;. In this particular&lt;br&gt;\n&gt; case, all communication betw=\r\neen a client and a server is over persistent&lt;br&gt;\n&gt; connection to a singl=\r\ne endpoint. If there&#39;s anything resembling&lt;br&gt;\n&gt; resources, they are=\r\n not identified by URIs. The persistent connection&lt;br&gt;\n&gt; IMHO is a case =\r\nof &quot;conversational&quot; state that REST is rather opposed to.&lt;br&gt;\n&gt=\r\n; No HATEOAS in sight.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nsounds like websockets (maybe not tec=\r\nhnically, but as the general idea). &lt;br&gt;\nto me, REST is on a different leve=\r\nl than this plumbing. in the same way &lt;br&gt;\nas you can do REST and notREST o=\r\nver HTTP, the same probably applies to &lt;br&gt;\nany of the alternative interact=\r\nion styles. as you point out, REST has &lt;br&gt;\nmore (and more abstract) constr=\r\naints than just the protocol that&#39;s used.&lt;div class=3D&quot;&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt;=\r\n What I&#39;m pondering is whether an API can be RESTful and reactive at th=\r\ne&lt;br&gt;\n&gt; same time or if is impossible as a matter of principle. AFAICT, =\r\na&lt;br&gt;\n&gt; reactive API requires some way for the server to send events to =\r\nthe&lt;br&gt;\n&gt; client. I don&#39;t think polling qualifies, which leaves a pe=\r\nrsistent&lt;br&gt;\n&gt; connection. In effect, the server has to keep some amount=\r\n of state for&lt;br&gt;\n&gt; each session.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nnot sure i agree that p=\r\nolling or long polling are the only (or best) &lt;br&gt;\nalternatives. there&#39;=\r\ns quite of stuff to be done in the area that i often &lt;br&gt;\nrefer to as &quot=\r\n;reverse REST&quot;: clients subscribe, and then there&#39;s a push &lt;br&gt;\nmo=\r\ndel. there are a variety of push protocols (PuSH, MQTT, APN, C2DM, &lt;br&gt;\nsMA=\r\nP) out there, but none so far has taken over the world.&lt;br&gt;\n&lt;br&gt;\nit&#39;ll =\r\nbe interesting to see how this plays out in june at the w3c&#39;s web &lt;br&gt;\n=\r\nof things workshop. clearly, in sensor scenarios, it would be very &lt;br&gt;\ncon=\r\nvenient to have these kind of alerts, have them in a loosely coupled &lt;br&gt;\na=\r\nnd scalable way, and have them via protocols that are universally &lt;br&gt;\nsupp=\r\norted. it may be the case that w3c will start working on something &lt;br&gt;\nin =\r\nthat space, but we&#39;ll know more after that workshop.&lt;br&gt;\n&lt;br&gt;\n&lt;a href=\r\n=3D&quot;http://www.w3.org/2014/02/wot/&quot; target=3D&quot;_blank&quot;&gt;http://www.w3.org/201=\r\n4/02/wot/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;a href=3D&quot;http://dret.net/netdret/publications#wil1=\r\n4a&quot; target=3D&quot;_blank&quot;&gt;http://dret.net/netdret/publications#wil14a&lt;/a&gt; is a =\r\nposition paper that we &lt;br&gt;\nhave submitted to this workshop. it may be the =\r\ncase that activity &lt;br&gt;\nstreams take over as the new atom. we&#39;ll see ab=\r\nout that, but they are &lt;br&gt;\nnot all that different, and they use JSON, so a=\r\nll is good.&lt;br&gt;\n&lt;br&gt;\nand in the same way as you can layer PuSH on atom to h=\r\nave a push model &lt;br&gt;\non top of atom&#39;s data model, you can do the same =\r\nfor activity streams. &lt;br&gt;\nthat might be the way open push protocols are go=\r\ning: you can poll for &lt;br&gt;\nactivities, or you can subscribe to an activity =\r\nhub that pushes to you &lt;br&gt;\nwhatever you has subscribed to.&lt;br&gt;\n&lt;br&gt;\nin my =\r\neyes, this could still be RESTful, only that of course you would &lt;br&gt;\nend u=\r\np having more resources (such as subscriptions that need to be &lt;br&gt;\nmanaged=\r\n and so on).&lt;br&gt;\n&lt;br&gt;\nanyway, a very good question, a very interesting fiel=\r\nd, and with the &lt;br&gt;\nwhole IoT/WoT movement now getting a serious hype push=\r\n, maybe we&#39;ll get &lt;br&gt;\nto something open, useful, and RESTful in the ne=\r\nxt couple of years.&lt;div class=3D&quot;&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; Keeping session state has=\r\n traditionally been regarded as a hindrance to&lt;br&gt;\n&gt; scalability. Has te=\r\nchnology advanced so much, eg with asynchronous,&lt;br&gt;\n&gt; event-driven (&qu=\r\not;reactive&quot;) servers, that this is no longer a problem?&lt;br&gt;\n&lt;br&gt;&lt;/div=\r\n&gt;\njust a question of cost. different protocols have different solutions &lt;br=\r\n&gt;\n(PuSH subscriptions time out automatically, sMAP subscriptions never &lt;br&gt;=\r\n\ntime out), based on different scenarios. anything push-based is more &lt;br&gt;\n=\r\nexpensive than pure pull, because services/hubs need to keep track of &lt;br&gt;\n=\r\nsubscribers. but if the cost is smaller that the benefit, then this will &lt;b=\r\nr&gt;\nhappen one way or another.&lt;div class=3D&quot;&quot;&gt;&lt;br&gt;\n&lt;br&gt;\n&gt; Frankly, I&#39;=\r\nm lacking experience with systems where this kind of&lt;br&gt;\n&gt; scalability w=\r\nould be required, so I&#39;d happily use persistent&lt;br&gt;\n&gt; connections, a=\r\nt least to begin with. Nonetheless, I&#39;m interested in your&lt;br&gt;\n&gt; ins=\r\nights.&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nweb of things scenarios simply cannot work with long =\r\npolling. if you &lt;br&gt;\nwant to be connected to thousands of sensors in your b=\r\nuilding to figure &lt;br&gt;\nout when one is telling you that there is a fire, th=\r\nen you cannot have &lt;br&gt;\nopen connections to all of them. the answer here is=\r\n a layered &lt;br&gt;\narchitecture, maybe some of it hidden as implementation det=\r\nails (sensors &lt;br&gt;\njust speaking MQTT to a hub), and other things exposed o=\r\nn the web level &lt;br&gt;\n(you being able to subscribe to that hub and get alert=\r\ns). many solutions &lt;br&gt;\nhave been built around this general pattern, but so=\r\n far we lack a single &lt;br&gt;\nand coherent answer where to draw the boundary b=\r\netween the &lt;br&gt;\nimplementation details and the open part, and what we shoul=\r\nd use for &lt;br&gt;\nthat open part. as mentioned above, maybe that workshop will=\r\n bring &lt;br&gt;\ntogether enough interested parties to start working on that iss=\r\nue.&lt;br&gt;\n&lt;br&gt;\ncheers,&lt;br&gt;\n&lt;br&gt;\ndret.&lt;br&gt;\n&lt;br&gt;\n-- &lt;br&gt;\nerik wilde | mailto:&lt;a=\r\n href=3D&quot;mailto:dret@...&quot; target=3D&quot;_blank&quot;&gt;dret@...&lt;/a&gt; =\r\n -  tel:&lt;a href=3D&quot;tel:%2B1-510-2061079&quot; value=3D&quot;+15102061079&quot; target=3D&quot;_=\r\nblank&quot;&gt;+1-510-2061079&lt;/a&gt; |&lt;br&gt;\n            | UC Berkeley  -  School of Inf=\r\normation (ISchool) |&lt;br&gt;\n            | &lt;a href=3D&quot;http://dret.net/netdret&quot; =\r\ntarget=3D&quot;_blank&quot;&gt;http://dret.net/netdret&lt;/a&gt; &lt;a href=3D&quot;http://twitter.com=\r\n/dret&quot; target=3D&quot;_blank&quot;&gt;http://twitter.com/dret&lt;/a&gt; |&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/d=\r\niv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:rgb(255,255,255);min-height:0px&quot;&gt;&lt;/=\r\ndiv&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n\r\n--047d7bdc1bd03327e604fa123236--\r\n\n"}}