{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"OOIpyehbD1iRVo72jP5eiEcT77UEauygtZQft0DzTSeFLzO76dxCWsutAbvWhrh56xlYsGeLZgJ_88YjlLHgsRJywB_QUQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] One-shot notifications","postDate":"1012768584","msgId":636,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hER0VHTUZLQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDNDNURBRTI2LjlEM0NEMzE1QHByZXNjb2QubmV0Pg=="},"prevInTopic":633,"nextInTopic":637,"prevInTime":635,"nextInTime":637,"topicId":609,"numMessagesInTopic":24,"msgSnippet":"... IMO this is a good thing, but not related to notifications.  The thing you are describing is updates.  I am _for_ dealing with updates, but as a separate ","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 3 Feb 2002 20:41:34 -0000\r\nReceived: (qmail 98315 invoked from network); 3 Feb 2002 20:41:33 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m8.grp.snv.yahoo.com with QMQP; 3 Feb 2002 20:41:33 -0000\r\nReceived: from unknown (HELO mail2.panix.com) (166.84.0.213)\n  by mta2.grp.snv.yahoo.com with SMTP; 3 Feb 2002 20:41:33 -0000\r\nReceived: from mailspool1.panix.com (mailspool1.panix.com [166.84.0.210])\n\tby mail2.panix.com (Postfix) with ESMTP id E959A8F90\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun,  3 Feb 2002 15:37:21 -0500 (EST)\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mailspool1.panix.com (Postfix) with SMTP id 13AC012E41\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Sun,  3 Feb 2002 15:37:22 -0500 (EST)\r\nTo: &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] One-shot notifications\r\nDate: Sun, 3 Feb 2002 15:36:24 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDGEGMFKAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nIn-Reply-To: &lt;3C5DAE26.9D3CD315@...&gt;\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\npaul said:\n&gt; I&#39;m trying to make a distinction here between the semantic content of\n&gt; the message and the literal content. The semantic content is &quot;something\n&gt; changed.&quot; The literal content is often &quot;oh, and by the way, you could do\n&gt; a GET to fetch it but in order to reduce network load I&#39;ve inlined the\n&gt; value here for you. If you would rather ignore the inlined value, go\n&gt; ahead and do the GET. It&#39;s all the same to me.&quot;\n\nIMO this is a good thing, but not related to notifications.  The thing you are\ndescribing is updates.  I am _for_ dealing with updates, but as a separate\nproject.\n\n\n&gt; &gt; &gt;  3. the last point implies that the server must tell the client in the\n&gt; &gt; &gt; notification that it is &quot;pre-authorized&quot; for re-subscription.\n&gt; &gt;\n&gt; &gt; It seems safe to assume that the sink is pre-authorized to resubscribe often\n&gt; &gt; enough to consider it the default.\n&gt;\n&gt; Sure, the default. But you&#39;re just reversing the question. Then the\n&gt; publisher must be able to tell the subscriber that it is NOT\n&gt; pre-authorized.\n&gt;\n&gt; &gt; ... Plus it doesn&#39;t really cause damage to have\n&gt; &gt; a re-subscribe fail.\n&gt;\n&gt; I strongly disagree. If I believe that I&#39;m subscribed to a stock ticker\n&gt; but I&#39;m not really, heads will roll. Resubscription is important!\n\nI don&#39;t mean fail silently.  If the re-subscribe fails, the server should say\nso.\n\n1) A sink receives a notification that state on the server is different since\nthe last time it requested a copy.\n2) In the period between receiving the notification and requesting the new state\nsubsequent notifications are meaningless, hence resubscribe is meaningless.\n3) Eventually the sink performs a request for the new state.  As part of the\nrequest the sink resubscribes.  (A combined operation will be hard to model in\nHTTP, but this message is not the place to articulate the problems.)\n4) If the resub in the request fails, the server returns a status code to say\nso.  So there&#39;s no possibility of losing ticks.\n\nI think there is a failure to communicate here.  I believe that you are thinking\nthat first the source reports an event; later another event happens that the\nserver needs to report; but there is not a subscription at that moment because\nthe subscription expired after the first notification.  However that situation\ncannot arise in the idempotent notification model.  INM notifications are all\nidentical.  There is no difference in the semantic content of the first and Nth\nnotifications.  A subscription _does_ expire after the notification is received\nby the sink, but it doesn&#39;t matter, because all of the content that doesn&#39;t\ncause notifications to be fired gets picked up anyway when the sink requests the\nnew state.\n\nA stock ticker isn&#39;t a usecase for idempotent notifications, FWIW.  Timing is\neverything with a ticker, so it should use an update approach.  Avoiding time\nlags caused by the period between POP polling loops is a more focused usecase.\nGoogle might register for notifications in order to be able to both keep its\ncache more up-to-date and expend fewer resources on spidering runs.  A user\nmight register for blog updates that come in too sporadically to poll for.  A\nC++ UI might might communicate with a Java engine by registering for\n&quot;computation complete&quot; notifications.\n\n- Lucas\n\n\n"}}