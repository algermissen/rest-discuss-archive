{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":279478415,"authorName":"Ant√≥nio Mota","from":"=?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;","profile":"amsmota","replyTo":"SENDER","senderId":"wRXW23ZKnmjLefndZWXFnQ2UwEpx6tfJn5spMHAqlA0_BUxsY3sDrd9QUrrRLedm8fgk_sv3BRF0RBKClCfqhOYVPiKbsB0YVigNgB0EWpjA2Y0JB0Q_Y06K","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] RESTful batch transactions a red herring.","postDate":"1236859222","msgId":12214,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDJmYTU1NDQ3MDkwMzEyMDUwMHU2YzAwMzVjZmc4YThkMTgxYWMyMmE3MjgyQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDkwMzEyMDUzNTUyLjMwM2M0YzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PDIwMDkwMzEyMDUzNTUyLjMwM2M0YzE5LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":12213,"nextInTopic":12217,"prevInTime":12213,"nextInTime":12215,"topicId":12213,"numMessagesInTopic":15,"msgSnippet":"And however REST is independent of the protocol, and the constraint is a uniform interface , not a HTTP-like uniform interface. Look at these definitions of","rawEmail":"Return-Path: &lt;amsmota@...&gt;\r\nX-Sender: amsmota@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 86111 invoked from network); 12 Mar 2009 12:00:23 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m2.grp.sp2.yahoo.com with QMQP; 12 Mar 2009 12:00:23 -0000\r\nX-Received: from unknown (HELO rv-out-0506.google.com) (209.85.198.230)\n  by mta3.grp.re1.yahoo.com with SMTP; 12 Mar 2009 12:00:22 -0000\r\nX-Received: by rv-out-0506.google.com with SMTP id f6so506913rvb.35\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 12 Mar 2009 05:00:22 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.141.48.6 with SMTP id a6mr4995720rvk.36.1236859222520; Thu, 12 \n\tMar 2009 05:00:22 -0700 (PDT)\r\nIn-Reply-To: &lt;20090312053552.303c4c19.eric@...&gt;\r\nReferences: &lt;20090312053552.303c4c19.eric@...&gt;\r\nDate: Thu, 12 Mar 2009 12:00:22 +0000\r\nMessage-ID: &lt;2fa554470903120500u6c0035cfg8a8d181ac22a7282@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: rest-discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=000e0cd24f2498746a0464eaba88\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?ISO-8859-1?Q?Ant=F3nio_Mota?= &lt;amsmota@...&gt;\r\nSubject: Re: [rest-discuss] RESTful batch transactions a red herring.\r\nX-Yahoo-Group-Post: member; u=279478415; y=BOnXerpl9aSPgEKoDEg5SmDVrKgrHvv6s3qpGw8u_yAZHg\r\nX-Yahoo-Profile: amsmota\r\n\r\n\r\n--000e0cd24f2498746a0464eaba88\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAnd however REST is independent of the protocol, and the constraint is &quot;a\nu=\r\nniform interface&quot;, not a HTTP-like uniform interface.\n\nLook at these defini=\r\ntions of Webdav methods:\n\nThe WebDAVBMOVE Method is similar to the MOVE\nMet=\r\nhod&lt;http://msdn.microsoft.com/en-us/library/aa142926%28EXCHG.65%29.aspx&gt;but=\r\n\nit is used to ***move one or more target resources*** to a\ndestination.\n\nT=\r\nhe WebDAVBDELETE Method is similar to the DELETE\nMethod&lt;http://msdn.microso=\r\nft.com/en-us/library/aa142839%28EXCHG.65%29.aspx&gt;but\nit is used to ***delet=\r\ne one or more target resources***.\n\nNow it can be arguable if Webdav is a R=\r\nESTful protocol, but you can surely\nbuild a RESTfull app on top of it... So=\r\n I think don&#39;t agree when you say\n&quot;but neither would any RESTful protocol.&quot;=\r\n But I agree on the the HTTP side\nof it.\n\n\n________________________________=\r\n_______________\n\nMelhores cumprimentos / Beir beannacht / Best regards\n\nAnt=\r\n=F3nio Manuel dos Santos Mota\n\nmobile:  +353(0)877718363\nmailto:   amsmota@=\r\ngmail.com\naltmail:  amsmota@...\nskype:   amsmota\nmsn:     antonioms=\r\nmota@...\nprofile:   www.linkedin.com/in/amsmota\n___________________=\r\n____________________________\n\n\n\n2009/3/12 Eric J. Bowman &lt;eric@bisonsystems=\r\n.net&gt;\n\n&gt;   It seems to me most of the threads here in recent weeks are off-=\r\ntopic.\n&gt; It isn&#39;t the end of the world if a non-RESTful interface is includ=\r\ned in\n&gt; an otherwise-RESTful API. Perhaps there should be an http-batch-\n&gt; =\r\ndiscuss group? There certainly are many interesting proposals floating\n&gt; ar=\r\nound out there, none of which can ever meet the constraints of the\n&gt; unifor=\r\nm connector interface, unfortunately. This makes sense:\n&gt;\n&gt; http://tech.gro=\r\nups.yahoo.com/group/rest-discuss/message/12139\n&gt;\n&gt; Not only does HTTP not p=\r\nrovide a mechanism to carry out multiple\n&gt; operations for *any* of its requ=\r\nest methods, but neither would any\n&gt; RESTful protocol. The REST style is ab=\r\nout the junction between the\n&gt; application and the network. The style allow=\r\ns the independent\n&gt; evolution of client and server logic in an application =\r\n-- provided the\n&gt; interface remains uniform for all resources.\n&gt;\n&gt; If I cre=\r\nate an HTML form with a list of URLs, each with its own\n&gt; checkbox, and one=\r\n &quot;DELETE&quot; button, it&#39;s trivial to write a POST handler\n&gt; to perform a batch=\r\n delete in one transaction. It&#39;s even RESTful, if\n&gt; my application makes no=\r\n other use of POST. If I&#39;m also using POST\n&gt; to accept new content, though,=\r\n my application&#39;s POST semantics become\n&gt; clear as mud. Which is why the co=\r\nmmon case of deletion is separated\n&gt; out as its own method in a RESTful pro=\r\ntocol to begin with.\n&gt;\n&gt; In the common case of the Web, DELETE traffic is a=\r\n tiny fraction of GET\n&gt; traffic. So it just doesn&#39;t _matter_ that some sort=\r\n of client logic\n&gt; like my HTML form can accomplish the same objective as d=\r\niscrete DELETE\n&gt; requests in one round trip, in terms of bandwidth. Splitti=\r\nng hairs.\n&gt; Same with batch updates. The bandwidth conserved by caching GET=\r\n\n&gt; traffic is an order of magnitude greater than that consumed by fringe\n&gt; =\r\ncases where bandwidth could be saved by batching multiple DELETE (or\n&gt; PUT =\r\nor POST) requests. REST optimizes for GET, not batch processing.\n&gt;\n&gt; If my =\r\napplication supports RESTful, resource-by-resource deletion *and*\n&gt; provide=\r\ns an HTML interface for performing batch deletion (or updates),\n&gt; no big de=\r\nal! There&#39;s nothing wrong with pragmatism or ease of use.\n&gt; Eventually, for=\r\nms technology will catch up (looks like), and these\n&gt; outmoded interfaces m=\r\nay be replaced. Clients may evolve independently\n&gt; of the server. So long a=\r\ns I understand that the Platonic (or Royonic)\n&gt; ideal here is that eventual=\r\nly my application only assigns one meaning\n&gt; to POST, and the client logic =\r\nfires off a bunch of DELETE requests. In\n&gt; the case of my HTML form, it wou=\r\nldn&#39;t look any different to the user.\n&gt;\n&gt; HTTP leaves plenty of wiggle room=\r\n for how its methods may be used. The\n&gt; key to a REST API is defining discr=\r\nete semantics for each method. The\n&gt; objective is an application which &quot;con=\r\nstrain[s] the interface to a\n&gt; consistent set of semantics for all resource=\r\ns&quot; under its control. This\n&gt; means if you want POST to accept new content, =\r\nthen it means only that,\n&gt; for all content-types. NOT: sometimes accept new=\r\n content, sometimes\n&gt; delete content, sometimes update content, depending o=\r\nn media type (or\n&gt; header, or parameter) or some other metric or batch-resp=\r\nonse trigger.\n&gt;\n&gt; The very notion of batch processing seems antithetical to=\r\n REST, since\n&gt; (just like my HTML form) it decreases visibility and reliabi=\r\nlity for\n&gt; the sake of optimizing for uncommon cases. REST makes a fine ham=\r\nmer.\n&gt; Batch processing is a screw.\n&gt;\n&gt; -Eric\n&gt;  \n&gt;\n\r\n--000e0cd24f2498746a0464eaba88\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAnd however REST is independent of the protocol, and the constraint is &quo=\r\nt;a uniform interface&quot;, not a HTTP-like uniform interface.&lt;br&gt;&lt;br&gt;Look=\r\n at these definitions of Webdav methods:&lt;br&gt;&lt;br&gt;The &lt;span class=3D&quot;clsGloss=\r\nary&quot;&gt;\nWebDAV&lt;/span&gt;BMOVE Method is similar to the &lt;a id=3D&quot;ctl00_rs1_mainCo=\r\nntentContainer_ctl01&quot; onclick=3D&quot;javascript:Track(&#39;ctl00_rs1_mainConten=\r\ntContainer_ctl00|ctl00_rs1_mainContentContainer_ctl01&#39;,this);&quot; href=3D&quot;=\r\nhttp://msdn.microsoft.com/en-us/library/aa142926%28EXCHG.65%29.aspx&quot;&gt;MOVE M=\r\nethod&lt;/a&gt; but it\n                is used to ***move one or more target reso=\r\nurces*** to a destination.&lt;br&gt;&lt;br&gt;The &lt;span class=3D&quot;clsGlossary&quot;&gt;\nWebDAV&lt;/=\r\nspan&gt;BDELETE Method is similar to the &lt;a id=3D&quot;ctl00_rs1_mainContentContain=\r\ner_ctl01&quot; onclick=3D&quot;javascript:Track(&#39;ctl00_rs1_mainContentContainer_c=\r\ntl00|ctl00_rs1_mainContentContainer_ctl01&#39;,this);&quot; href=3D&quot;http://msdn.=\r\nmicrosoft.com/en-us/library/aa142839%28EXCHG.65%29.aspx&quot;&gt;DELETE Method&lt;/a&gt; =\r\nbut it is used to ***delete one or more target resources***.&lt;br&gt;\n&lt;br&gt;Now it=\r\n can be arguable if Webdav is a RESTful protocol, but you can surely build =\r\na RESTfull app on top of it... So I think don&#39;t agree when you say &quo=\r\nt;but neither would any RESTful protocol.&quot; But I agree on the the HTTP=\r\n side of it.&lt;br&gt;\n&lt;br&gt;&lt;br&gt;_______________________________________________&lt;br=\r\n&gt;&lt;br&gt;Melhores cumprimentos / Beir beannacht / Best regards&lt;br&gt;&lt;br&gt;Ant=F3nio=\r\n Manuel dos Santos Mota&lt;br&gt;&lt;br&gt;mobile: =A0+353(0)877718363&lt;br&gt;mailto: =A0 &lt;=\r\na href=3D&quot;mailto:amsmota@...&quot;&gt;amsmota@...&lt;/a&gt;&lt;br&gt;\naltmail: =A0&lt;=\r\na href=3D&quot;mailto:amsmota@...&quot;&gt;amsmota@...&lt;/a&gt;&lt;br&gt;skype: =A0=\r\n amsmota&lt;br&gt;msn: =A0 =A0 &lt;a href=3D&quot;mailto:antoniomsmota@...&quot;&gt;anton=\r\niomsmota@...&lt;/a&gt;&lt;br&gt;profile: =A0 &lt;a href=3D&quot;http://www.linkedin.com=\r\n/in/amsmota&quot;&gt;www.linkedin.com/in/amsmota&lt;/a&gt;&lt;br&gt;\n__________________________=\r\n_____________________&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;2009/3/12 =\r\nEric J. Bowman &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:eric@...=\r\nt&quot;&gt;eric@...&lt;/a&gt;&gt;&lt;/span&gt;&lt;br&gt;&lt;blockquote class=3D&quot;gmail_quote=\r\n&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0=\r\n.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color: rgb(25=\r\n5, 255, 255);&quot;&gt;\n\n\n&lt;div style=3D&quot;width: 655px;&quot;&gt;\n&lt;div style=3D&quot;margin: 0pt; =\r\npadding: 0pt 25px 0pt 0pt; width: 470px; float: left;&quot;&gt;\n\n\n    &lt;div&gt;\n       =\r\n     &lt;p&gt;It seems to me most of the threads here in recent weeks are off-top=\r\nic.&lt;br&gt;\nIt isn&#39;t the end of the world if a non-RESTful interface is inc=\r\nluded in&lt;br&gt;\nan otherwise-RESTful API.  Perhaps there should be an http-bat=\r\nch-&lt;br&gt;\ndiscuss group?  There certainly are many interesting proposals floa=\r\nting&lt;br&gt;\naround out there, none of which can ever meet the constraints of t=\r\nhe&lt;br&gt;\nuniform connector interface, unfortunately.  This makes sense:&lt;br&gt;\n&lt;=\r\nbr&gt;\n&lt;a href=3D&quot;http://tech.groups.yahoo.com/group/rest-discuss/message/1213=\r\n9&quot; target=3D&quot;_blank&quot;&gt;http://tech.groups.yahoo.com/group/rest-discuss/messag=\r\ne/12139&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nNot only does HTTP not provide a mechanism to carry ou=\r\nt multiple&lt;br&gt;\noperations for *any* of its request methods, but neither wou=\r\nld any&lt;br&gt;\nRESTful protocol. The REST style is about the junction between t=\r\nhe&lt;br&gt;\napplication and the network.  The style allows the independent&lt;br&gt;\ne=\r\nvolution of client and server logic in an application -- provided the&lt;br&gt;\ni=\r\nnterface remains uniform for all resources.&lt;br&gt;\n&lt;br&gt;\nIf I create an HTML fo=\r\nrm with a list of URLs, each with its own&lt;br&gt;\ncheckbox, and one &quot;DELET=\r\nE&quot; button, it&#39;s trivial to write a POST handler&lt;br&gt;\nto perform a b=\r\natch delete in one transaction.  It&#39;s even RESTful, if&lt;br&gt;\nmy applicati=\r\non makes no other use of POST.  If I&#39;m also using POST&lt;br&gt;\nto accept ne=\r\nw content, though, my application&#39;s POST semantics become&lt;br&gt;\nclear as =\r\nmud.  Which is why the common case of deletion is separated&lt;br&gt;\nout as its =\r\nown method in a RESTful protocol to begin with.&lt;br&gt;\n&lt;br&gt;\nIn the common case=\r\n of the Web, DELETE traffic is a tiny fraction of GET&lt;br&gt;\ntraffic.  So it j=\r\nust doesn&#39;t _matter_ that some sort of client logic&lt;br&gt;\nlike my HTML fo=\r\nrm can accomplish the same objective as discrete DELETE&lt;br&gt;\nrequests in one=\r\n round trip, in terms of bandwidth.  Splitting hairs.&lt;br&gt;\nSame with batch u=\r\npdates.  The bandwidth conserved by caching GET&lt;br&gt;\ntraffic is an order of =\r\nmagnitude greater than that consumed by fringe&lt;br&gt;\ncases where bandwidth co=\r\nuld be saved by batching multiple DELETE (or&lt;br&gt;\nPUT or POST) requests.  RE=\r\nST optimizes for GET, not batch processing.&lt;br&gt;\n&lt;br&gt;\nIf my application supp=\r\norts RESTful, resource-by-resource deletion *and*&lt;br&gt;\nprovides an HTML inte=\r\nrface for performing batch deletion (or updates),&lt;br&gt;\nno big deal!  There&#=\r\n39;s nothing wrong with pragmatism or ease of use.&lt;br&gt;\nEventually, forms te=\r\nchnology will catch up (looks like), and these&lt;br&gt;\noutmoded interfaces may =\r\nbe replaced.  Clients may evolve independently&lt;br&gt;\nof the server.  So long =\r\nas I understand that the Platonic (or Royonic)&lt;br&gt;\nideal here is that event=\r\nually my application only assigns one meaning&lt;br&gt;\nto POST, and the client l=\r\nogic fires off a bunch of DELETE requests.  In &lt;br&gt;\nthe case of my HTML for=\r\nm, it wouldn&#39;t look any different to the user.&lt;br&gt;\n&lt;br&gt;\nHTTP leaves ple=\r\nnty of wiggle room for how its methods may be used.  The&lt;br&gt;\nkey to a REST =\r\nAPI is defining discrete semantics for each method.  The&lt;br&gt;\nobjective is a=\r\nn application which &quot;constrain[s] the interface to a&lt;br&gt;\nconsistent se=\r\nt of semantics for all resources&quot; under its control.  This&lt;br&gt;\nmeans i=\r\nf you want POST to accept new content, then it means only that,&lt;br&gt;\nfor all=\r\n content-types.  NOT:  sometimes accept new content, sometimes&lt;br&gt;\ndelete c=\r\nontent, sometimes update content, depending on media type (or&lt;br&gt;\nheader, o=\r\nr parameter) or some other metric or batch-response trigger.&lt;br&gt;\n&lt;br&gt;\nThe v=\r\nery notion of batch processing seems antithetical to REST, since&lt;br&gt;\n(just =\r\nlike my HTML form) it decreases visibility and reliability for&lt;br&gt;\nthe sake=\r\n of optimizing for uncommon cases.  REST makes a fine hammer.&lt;br&gt;\nBatch pro=\r\ncessing is a screw.&lt;br&gt;\n&lt;br&gt;\n-Eric&lt;br&gt;\n&lt;/p&gt;\n \n\n    &lt;/div&gt;  \n\n    \n    &lt;div =\r\nwidth=3D&quot;1&quot; style=3D&quot;color: white; clear: both;&quot;&gt;&lt;/div&gt;\n\t\n\t&lt;/div&gt;\n\t\n\t\n\n\n\t\n\n=\r\n\n\t\n\t\n\t\n\t\n\t\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--000e0cd24f2498746a0464eaba88--\r\n\n"}}