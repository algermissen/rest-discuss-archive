{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":304236879,"authorName":"Peter Williams","from":"Peter Williams &lt;pezra@...&gt;","profile":"peter_e_williams","replyTo":"SENDER","senderId":"IzD42qaKh_tYNeCZZYVGfJ-w2AU3s4UZ9X7TQz6KCsYrcljz0C5Y-8ghr7_562aLTx5-3FJtzi3aQj5a6XqeEZCss88F0Fs3nyM0dLZH","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] HTTP request and &quot;type safety&quot;","postDate":"1268498263","msgId":15035,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4ZTI1NzExMTAwMzEzMDgzN3YyYmY2N2E1OHkzMTYwYWMzMjg0NTVlOThjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDU2NDE2MC43MDY3Ny5xbUB3ZWI1NTkwNi5tYWlsLnJlMy55YWhvby5jb20+","referencesHeader":"PEFFOEQ1ODRBLTA1RjUtNDAzOC1CODdGLUZEMEU0QTZERjA5QUBnYml2LmNvbT4JIDw1NjQxNjAuNzA2NzcucW1Ad2ViNTU5MDYubWFpbC5yZTMueWFob28uY29tPg=="},"prevInTopic":15033,"nextInTopic":15036,"prevInTime":15034,"nextInTime":15036,"topicId":15020,"numMessagesInTopic":18,"msgSnippet":"... A URI that is saved -- iow, bookmarked -- counts as an entry point URI.  This sort of bookmarking is required to implement many kinds of systems composed","rawEmail":"Return-Path: &lt;pezra@...&gt;\r\nX-Sender: pezra@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 33007 invoked from network); 13 Mar 2010 16:38:42 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m4.grp.sp2.yahoo.com with QMQP; 13 Mar 2010 16:38:42 -0000\r\nX-Received: from unknown (HELO mail-ww0-f42.google.com) (74.125.82.42)\n  by mta1.grp.re1.yahoo.com with SMTP; 13 Mar 2010 16:38:42 -0000\r\nX-Received: by wwc33 with SMTP id 33so1407907wwc.15\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sat, 13 Mar 2010 08:37:44 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.163.11 with SMTP id z11mr563445wek.24.1268498264022; Sat, \n\t13 Mar 2010 08:37:44 -0800 (PST)\r\nIn-Reply-To: &lt;564160.70677.qm@...&gt;\r\nReferences: &lt;AE8D584A-05F5-4038-B87F-FD0E4A6DF09A@...&gt;\n\t &lt;564160.70677.qm@...&gt;\r\nDate: Sat, 13 Mar 2010 09:37:43 -0700\r\nMessage-ID: &lt;28e257111003130837v2bf67a58y3160ac328455e98c@...&gt;\r\nTo: Kevin Duffey &lt;andjarnic@...&gt;, Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Peter Williams &lt;pezra@...&gt;\r\nSubject: Re: [rest-discuss] HTTP request and &quot;type safety&quot;\r\nX-Yahoo-Group-Post: member; u=304236879; y=kDjQzdXAPwIymnQZPo3_GnTx8ovZS0081rqpOU8ykeDXe5i6eAZjE47nKw\r\nX-Yahoo-Profile: peter_e_williams\r\n\r\nOn Fri, Mar 12, 2010 at 9:57 PM, Kevin Duffey &lt;andjarnic@...&gt; wrote:\n\n&gt; I am confused a bit about this. I was just thinking this today. If I\n&gt; provide a single URI point of entry, and an OPTION or GET request is\n&gt; sent, it returns some relevant links that can be called based on the\n&gt; state of the resource. Now, to get those links, I have to first\n&gt; access the point of entry URI. What happens if say a bot program (or\n&gt; even a client developer) decides to cache/save these URIs that\n&gt; return. Then at some point later, call those URIs directly instead\n&gt; of the point of entry URI first to get those URIs back. They could\n&gt; even navigate some links for a while, then save the various URIs\n&gt; deeper down. Later, call those directly.\n\nA URI that is saved -- iow, bookmarked -- counts as an entry point\nURI.  This sort of bookmarking is required to implement many kinds of\nsystems composed of multiple components that expose REST style\ninterfaces.\n\nOf course, there is no guarantee that URIs saved by a client will\nremain valid over time.  Clients that save URIs must accept that the\nresources those URIs name may disappear as any point in the future.\nWell behaved servers do not disable URIs capriciously (see Cool URIs),\nbut resources do have life-cycles that are governed by their domain.\n\n\n&gt; My confusion of this is because the server side is stateless. It\n&gt; retains no state. So how can I validate a URI that a client/bot\n&gt; saved from some previous use, to make sure it&#39;s valid at the time of\n&gt; call? I have no state on the server side that says &quot;this URI is\n&gt; being called BEFORE the URI that returns this URI was called.. it&#39;s\n&gt; a bad call&quot;. So I am unsure as to how to validate every single URI\n&gt; call to make sure it was called at a time when it should be called,\n&gt; and not just randomly out of order. I suppse we can use some sort of\n&gt; timestamp on every single URI that goes back, not sure entirely how\n&gt; that would work at this point, but I suppose the server would check\n&gt; this value when it came back in to the current server time stamp and\n&gt; make sure it&#39;s within so many minutes of when it was issued. But a\n&gt; smart client developer/bot could possibly figure that out, and\n&gt; update this value before making the request, and since the server\n&gt; keeps no state, if the modified timestamp is within the right time\n&gt; of the server, it would void that route of validating a URI.\n\nWhy do you care if the resources are accessed &quot;out of order&quot;?\n\nIf there are domain reasons for a resource to be available for a\nlimited time, the application logic should destroy/deactivate the\nresource once it is no longer valid.  In that case, this hypothetical\nclient with get a 410 or 404 when it attempts to make requests of the\nnow nonexistent resource.\n\nIf there is no domain reason for the resource to expire why is it a\nproblem for a client to save a URI and the access it later?\n\nPeter\nhttp://barelyenough.org\n\n"}}