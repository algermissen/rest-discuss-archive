{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":242972596,"authorName":"Jørn Wildt","from":"=?utf-8?Q?J=C3=B8rn_Wildt?= &lt;jw@...&gt;","profile":"jorn_lind_nielsen","replyTo":"SENDER","senderId":"csDzwVn5v9qBXZpng-f_0fgDafmNnYXNck_XdvMFrquR36C-aoSLMIo-E7khkKj-Nv4-HZkeKTT_-CfDCPHHVF5HfUTOYlCXcVKaTz5fCiGABxkZYSKh","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] Combining HTML and XML?","postDate":"1293572040","msgId":17150,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyOEQ1NDhCMDc0QjQwRTU4OUI2Mjg0MDA2QUI1RDY1QEpyblBDPg==","inReplyToHeader":"PEFBTkxrVGltZHhVU0pPbkVRRHFadTI1Zi1NOG9ieVEydFhLUlBhUzdhK3FlN0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDM1NTE1ODMwNUQ5OTRGODJCMkE5MEUyQTFCMDc3NUQ3QEpyblBDPiA8QUFOTGtUaW1keFVTSk9uRVFEcVp1MjVmLU04b2J5UTJ0WEtSUGFTN2ErcWU3QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":17149,"nextInTopic":17151,"prevInTime":17149,"nextInTime":17151,"topicId":17135,"numMessagesInTopic":57,"msgSnippet":"... That would certainly be nice. But it also makes it less possible to have automated tooling for this format. Somehow the HTML serializer would have to know","rawEmail":"Return-Path: &lt;jw@...&gt;\r\nX-Sender: jw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 50742 invoked from network); 28 Dec 2010 21:33:58 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 28 Dec 2010 21:33:58 -0000\r\nX-Received: from unknown (HELO smtp2.cybercity.dk) (212.242.43.252)\n  by mta1.grp.sp2.yahoo.com with SMTP; 28 Dec 2010 21:33:58 -0000\r\nX-Received: from uf7.cybercity.dk (uf7.cybercity.dk [212.242.42.164])\n\tby smtp2.cybercity.dk (Postfix) with ESMTP id 74976313C38;\n\tTue, 28 Dec 2010 22:33:57 +0100 (CET)\r\nX-Received: from JrnPC (port439.ds1-aroe.adsl.cybercity.dk [212.242.220.134])\n\t(Authenticated sender: dsl164923)\n\tby uf7.cybercity.dk (Postfix) with ESMTPA id 55ADEB85CA7;\n\tTue, 28 Dec 2010 22:33:57 +0100 (CET)\r\nMessage-ID: &lt;128D548B074B40E589B6284006AB5D65@JrnPC&gt;\r\nTo: &quot;Benjamin Hawkes-Lewis&quot; &lt;bhawkeslewis@...&gt;\r\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;355158305D994F82B2A90E2A1B0775D7@JrnPC&gt; &lt;AANLkTimdxUSJOnEQDqZu25f-M8obyQ2tXKRPaS7a+qe7@...&gt;\r\nIn-Reply-To: &lt;AANLkTimdxUSJOnEQDqZu25f-M8obyQ2tXKRPaS7a+qe7@...&gt;\r\nDate: Tue, 28 Dec 2010 22:34:00 +0100\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;utf-8&quot;;\n\treply-type=original\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Windows Mail 6.0.6002.18197\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.0.6002.18263\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: =?utf-8?Q?J=C3=B8rn_Wildt?= &lt;jw@...&gt;\r\nSubject: Re: [rest-discuss] Combining HTML and XML?\r\nX-Yahoo-Group-Post: member; u=242972596; y=rUvITSvN4hnPcKoexqvEQoHKKzeOQbJd8ThpkuA2H2TV4SczKLdXlYMAahY\r\nX-Yahoo-Profile: jorn_lind_nielsen\r\n\r\n&gt; &gt; But how would the machine readable HTML look like? Maybe:\n&gt; &gt;\n&gt; &gt; &lt;div property=&quot;case&quot;&gt; &lt;div property=&quot;title&quot;&gt;My title&lt;/div&gt; &lt;/div&gt;\n&gt; Hopefully, something that makes better use of HTML semantics like:\n&gt;\n&gt; &lt;article&gt;&lt;h1 property=&quot;case:title&quot;&gt;My title&lt;/h1&gt; ...  &lt;/article&gt;\n&gt;\n\nThat would certainly be nice. But it also makes it less possible to have \nautomated tooling for this format. Somehow the HTML serializer would have to \nknow that the &quot;title&quot; property should be marked up as a &lt;h1&gt; element. It \nmight be easier on the client side since it can ignore the &lt;h1&gt; (or &lt;div&gt; or \n&lt;p&gt; or whatever it is) and just look for property=&quot;case:title&quot;.\n\nI am so used to tools that serializes and deserializes the same format, but \nmaybe that&#39;s a wrong way to look. Now that I think of it, I have previously \nsaid that HTML forms a fine for submiting data, and url-encoded is certainly \na different wire format than HTML. No one expects the client to post back \nHTML just because it got the data served as HTML. I guess my XML background \nfails me here.\n\nTwo-way serialization seems to be in reach, if only it is done in two \ndifferent formats. As I said previously - ASP.NET MVC and OpenRasta have \nfine model binders for reading in forms data - and a home brewed &quot;internal \ndata structure&quot; to RDFa serializer should also be possible; either by using \na templating syntax (Razor or ASP.NET or what ever else you favor) - or \nmarking up the data with RDFa serialization attributes.\n\nPersonally I dislike the templating approach since it opens up for too many \nvariations in the mark-up. Actually I prefer a third option: leave the \ninternal data structures untouched and pass in serialization attributes in a \nseparate data structure that informs the serializer on how to present the \ndata, assuming it is going to fit into some standard HTML serialization \nscheme.\n\nWith this in mind it starts to make more sense to use RDFa for presenting \ndata, and forms + url-encoded to update data.\n\nServer code:\n- Serialize objects into HTML + RDFa in a standard way for reading.\n- Serialize objectinto HTML + forms + ??? for instructing clients of ways to \nupdate data.\n- Deserialize url-encoded forms data using model binders.\n\nClient code:\n- Deserialize HTML + RDFa into RDF tripples using a standard RDFa library \nand work with that.\n- Or, use XPath to read out snippets of data from the HTML + RDFa.\n- Serialize data into form url-encodings using information derived from HTML \nforms using ???\n\nThe only thing left is to figure out how to instruct the client to use the \nforms; should the forms variable names be hard coded into the client, or \nshould there be some indirection here too - like using RDFa for describing \nthe inputs (which it apperently isn&#39;t designed for).\n\n/Jørn\n\n----- Original Message ----- \nFrom: &quot;Benjamin Hawkes-Lewis&quot; &lt;bhawkeslewis@...&gt;\nTo: &quot;Jørn Wildt&quot; &lt;jw@...&gt;\nCc: &quot;Rest Discussion List&quot; &lt;rest-discuss@yahoogroups.com&gt;\nSent: Tuesday, December 28, 2010 7:03 PM\nSubject: Re: [rest-discuss] Combining HTML and XML?\n\n\nOn Tue, Dec 28, 2010 at 11:13 AM, Jørn Wildt &lt;jw@...&gt; wrote:\n&gt; This, I think, is mostly about tooling: it is easy to serialize any data\n&gt; structure in XML with most development platforms, but there is no support \n&gt; for\n&gt; easy serialization into and from HTML.\n\nHTML has a document-application vocabulary at its core whereas XML is just a\nsyntax.\n\nHowever, many web frameworks (e.g. Rails, Django) do include &quot;scaffolding&quot; \ncode\nthat represents models as HTML forms.\n\n&gt; Example: I have a case file with a title, a case number and a myriad of \n&gt; other\n&gt; properties. This can easily be converted to XML using standard tools:\n&gt;\n&gt; &lt;case xmlns=&quot;http://my-casefile-namespace&quot;&gt; &lt;title&gt;My title&lt;/title&gt; \n&gt; &lt;/case&gt;\n&gt;\n&gt; But how would the machine readable HTML look like? Maybe:\n&gt;\n&gt; &lt;div property=&quot;case&quot;&gt; &lt;div property=&quot;title&quot;&gt;My title&lt;/div&gt; &lt;/div&gt;\n\nHopefully, something that makes better use of HTML semantics like:\n\n&lt;article&gt;&lt;h1 property=&quot;case:title&quot;&gt;My title&lt;/h1&gt; ...  &lt;/article&gt;\n\n&gt; So I feel trapped somewhere between these two formats and I guess that is \n&gt; why\n&gt; people turn to their own media-types. Now they get easy tooling and \n&gt; embedded\n&gt; hypermedia controls in XML (which they must invent themselves).\n\nThis sounds like more work for both producers and consumers than just\nserializing to an HTML form.\n\nThose insistent on rolling out domain-specific XML elements, rather than \nusing\nRDFa/microdata/classes to embed the same vocabulary into an HTML user\ninterface, could at least mix in XHTML, XForms, XLink, and WAI-ARIA with\ntheir domain-specific vocabulary rather than reinvent the wheel.\n\n&gt; Can&#39;t we combine and get the best of both worlds?\n&gt;\n&gt; What is needed is something that:\n&gt;\n&gt; - Makes it easy to serialize/deserialize any data (m2m scenario).  - Is\n&gt; browsable with a normal browser (h2m scenario).  - Has hyper media \n&gt; controls.\n&gt; - Can update data through hyper media controls.\n\nIf by &quot;easy&quot; you mean as easy as serializing name-value pairs into an XML\nelement tree, then these goals are in conflict, because magically building a\ngood user interface for h2m is hard to script - indeed such interfaces are \nan\narea of outright competition rather than just standardization! Consequently,\ndevelopers tend to want to customize cookie-cutter user interfaces, \nreplacing\nthe scaffolding erected by web frameworks.\n\n&gt; The HTML form could have RDFa added to it to lessen the coupling between \n&gt; the\n&gt; server and the client, like Eric suggested. Something like:\n\n[snip]\n\n&gt; &lt;input id=&quot;case_title&quot; name=&quot;Case.Title&quot; property=&quot;dc:title&quot;/&gt;\n\nNote this does not work since RDFa takes the content of the RDFa &quot;content&quot;\nattribute or, failing that, the concatenated text nodes of the element as \nthe\nvalue, *not* the &quot;value&quot; property of the &quot;input&quot;, as the value of \n&quot;dc:title&quot;:\n\nhttp://www.w3.org/TR/rdfa-core/#sequence\n\nWhat you want to say is that the .value property may or should be a \n&quot;dc:title&quot;,\nbut HTML5 and friends do not currently offer a way to express that.\n\nAdding a way to do this is not easy since &quot;value&quot; might or might not be a\nprovided or valid value.\n\n--\nBenjamin Hawkes-Lewis \n\n\n"}}