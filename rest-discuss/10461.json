{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":10229189,"authorName":"Andrzej Jan Taramina","from":"&quot;Andrzej Jan Taramina&quot; &lt;andrzej@...&gt;","profile":"ataramina","replyTo":"SENDER","senderId":"aNIkNm6kBfU2pWj5lmnJvg0pMGgVu8BFOcuEMld3SMaDCJnHy0JlhcpG2DnzTavVWdLyl9bgHttTvt2Pr2XfsOzgvWkmydtRGrGRc92xxFDS8QM","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Objects at REST...","postDate":"1205358169","msgId":10461,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3RDgwODA5LjIxMzE2LjI0RUIzRTExQGFuZHJ6ZWouY2hhZXJvbi5jb20+","inReplyToHeader":"PDY1NUVDOUIyLUIwNDUtNDVFOS05MjAxLTYwNUY3RDQ0QTJFMkBtaW5kdG91Y2guY29tPg==","referencesHeader":"PDQ3RDc4NjBELjMyNzUuMjJFRjgwNjBAYW5kcnplai5jaGFlcm9uLmNvbT4sIDxmOTUwOTU0ZTA4MDMxMjA1NTN4MzJhMTQzMDVqNjBhYzIzZmM2NTBjNjBjQG1haWwuZ21haWwuY29tPiwgPDY1NUVDOUIyLUIwNDUtNDVFOS05MjAxLTYwNUY3RDQ0QTJFMkBtaW5kdG91Y2guY29tPg=="},"prevInTopic":10460,"nextInTopic":10462,"prevInTime":10460,"nextInTime":10462,"topicId":10454,"numMessagesInTopic":17,"msgSnippet":"Steve: Brillant analysis of what I was trying to get at.  Thanks! ... I absolutely agree with this. ... To clarify your comment, which I agree with, REST might","rawEmail":"Return-Path: &lt;andrzej@...&gt;\r\nX-Sender: andrzej@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 67607 invoked from network); 12 Mar 2008 20:43:06 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m50.grp.scd.yahoo.com with QMQP; 12 Mar 2008 20:43:06 -0000\r\nX-Received: from unknown (HELO smtprelay.hostedemail.com) (216.40.44.128)\n  by mta16.grp.scd.yahoo.com with SMTP; 12 Mar 2008 20:43:06 -0000\r\nX-Received: from emd2-omf01.hostedemail.com (ff-bigip1 [10.5.19.254])\n\tby smtprelay01.hostedemail.com (Postfix) with ESMTP id 1775BDD3A6;\n\tWed, 12 Mar 2008 20:42:58 +0000 (UTC)\r\nX-SpamScore: 50\r\nX-Spamcatcher-Summary: 50,0,0,e2901de1c6ee9cdc,f80b81b4c2569d99,andrzej@...,-,RULES_HIT:355:379:541:599:601:901:967:973:988:989:1042:1260:1261:1277:1311:1313:1314:1345:1359:1437:1515:1516:1518:1535:1544:1593:1594:1605:1711:1730:1747:1766:1792:2198:2199:2376:2377:2379:2393:2525:2553:2566:2682:2685:2692:2693:2828:2857:2859:2892:2933:2937:2939:2942:2945:2947:2951:2954:3022:3027:3636:3865:3866:3867:3868:3869:3870:3871:3872:3873:3874:3934:3936:3938:3941:3944:4117:4250:4659:\n\t5007:6119:7652:7679:7860:7875:7903,0,RBL:none,CacheIP:none,Bayesian:0.5,0.5,0.5,Netcheck:none,DomainCache:0,MSF:not bulk,SPF:,MSBL:none,DNSBL:none\r\nX-Spamcatcher-Explanation: \r\nX-Received: from [192.168.0.5] (unknown [67.201.160.178])\n\t(Authenticated sender: andrzej@...)\n\tby emd2-omf01.hostedemail.com (Postfix) with ESMTP;\n\tWed, 12 Mar 2008 20:42:57 +0000 (UTC)\r\nOrganization: Chaeron Corporation\r\nTo: Steve Bjorg &lt;steveb@...&gt;\r\nDate: Wed, 12 Mar 2008 16:42:49 -0500\r\nMIME-Version: 1.0\r\nCc: rest-discuss@yahoogroups.com,\n              xml-dev@...\r\nMessage-ID: &lt;47D80809.21316.24EB3E11@...&gt;\r\nPriority: normal\r\nIn-reply-to: &lt;655EC9B2-B045-45E9-9201-605F7D44A2E2@...&gt;\r\nReferences: &lt;47D7860D.3275.22EF8060@...&gt;, &lt;f950954e0803120553x32a14305j60ac23fc650c60c@...&gt;, &lt;655EC9B2-B045-45E9-9201-605F7D44A2E2@...&gt;\r\nX-mailer: Pegasus Mail for Windows (4.41)\r\nContent-type: text/plain; charset=ISO-8859-1\r\nContent-transfer-encoding: 8BIT\r\nContent-description: Mail message body\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Andrzej Jan Taramina&quot; &lt;andrzej@...&gt;\r\nReply-To: andrzej@...\r\nSubject: Re: [rest-discuss] Objects at REST...\r\nX-Yahoo-Group-Post: member; u=10229189; y=S9e52F1fFnQWYBDvTyGe8emlNqPB2a0094ljaNcdZG4ZYXrM\r\nX-Yahoo-Profile: ataramina\r\n\r\nSteve:\n\nBrillant analysis of what I was trying to get at.  Thanks!\n\n&gt; No, I don&#39;t agree with equating them. Their similarities are far less than\n&gt; there differences. \n\nI absolutely agree with this.\n\n&gt; First, REST is about representations and stateless protocols for state \n&gt; transitions. So, for the latter, one would have to fundamentally assume \n&gt; Software Transacted Memory (STM) for all objects, but only up to its membrane\n&gt; (i.e. the boundary where internal objects tare not directly exposed). \n\nTo clarify your comment, which I agree with, REST might work reasonably well \nfor stateless &quot;objects&quot;, like EJB Session Beans for instance.  Where the risk \nlies is that the un-discerning unwashed masses (and their PHM slavedrivers) \nwill apply the approach to key business objects which were never designed to \nbe stateless.  Down that path lies madness. ;-)\n\n&gt; Second, I know I am in the minority here, but pretty URIs are irrelevant. It&#39;s\n&gt; something for humans to enjoy. If you have them, great! If not, it&#39;s\n&gt; irrelevant. Sub-structure, relationships are discovered by message exchange\n&gt; and never constructed unless told so by the source representation. So, if you\n&gt; have http://foo/resource/sub-resource orhttp://foo/resource/\n&gt; andhttp://foo/sub-resource is simply not relevant. \n\nI&#39;m a bit ambivalent on this comment.  Machine to machine, pretty URI&#39;s are \nquite irrelevant.  But when it comes to testing machine to machine \nintegrations, debugging and the like, which is conducted by meatware, pretty \nURI&#39;s can provide some real productivity and value. It&#39;s also very difficult \nto predict how an interface might be re-purposed in the future (new mashups, \nnew integrations, new applications, etc.), and again, having pretty URI&#39;s can \nhelp those developers to understand and utilize the URI&#39;s and representations \nmore quickly/easily.  So why not make &#39;em pretty....doesn&#39;t take much more \neffort and can have some decent payback.\n\n&gt; Third, not all objects are equal. The first wave of object-oriented \n&gt; programming was about class inheritance (class inheritance). The second wave\n&gt; was about matching interfaces at the instance level only (prototype\n&gt; inheritance). Notice how both have to do with thegeneralizationprocess, not\n&gt; the actual instances. In REST, we care about the instances and not the things\n&gt; that created them. You can use structured programming, object- oriented\n&gt; programming, or one-offs to implement your web-services and web- applications.\n&gt; Again, the methodology irrelevant, only the properties of the running system\n&gt; are. \n\nSo what you are saying is that the exposed interfaces and common lingua \nfranca between such services/apps is what is key.  I subscribe to that, \nespecially in the integration space.\n\n\n&gt; Lastly, and most importantly, is the guaranteed decoupling of the resource&#39;s\n&gt; state from its representation. �This means that you have made the major leap\n&gt; already where the information consumer&#39;s view of the world may absolutely not\n&gt; be related to the producer&#39;s view of the world. �And certainly, this is where\n&gt; REST has made it&#39;s mark in web application design. �In object-oriented design,\n&gt; programmers fundamentally think about sharing objects. �This last point is\n&gt; relevant, because it ties back into the first point. �\n\nAnd we run into the classic problems that attend object serialization!  \nBetter to design a representation from scratch that avoids those issues.\n\n&gt; Creating membranes\n&gt; --�think of them as encapsulation at the instance level instead of the class\n&gt; level --�in object-oriented systems is hard because of the high-degree of\n&gt; interconnectedness of objects. �On the other and, in REST, you build\n&gt; everything as membranes since you never directly manipulate the bits, only\n&gt; their representations. �Hence, this problem is solved at the root. �This is\n&gt; important, because it&#39;s hard problem to solve in object-oriented systems. \n\nNicely put, Steve!\n\n&gt; In short, mapping concepts from object-oriented programming to REST will\n&gt; make people think about it in the wrong way and therefore do more harm than\n&gt; good, in my humble opinion. \n\nAnd was the root of the unease I have with Rick&#39;s approach.  \n\nAndrzej Jan Taramina\nChaeron Corporation: Enterprise System Solutions\nhttp://www.chaeron.com\n\n\n"}}