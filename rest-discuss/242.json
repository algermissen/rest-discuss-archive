{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"Kabpyr5uFAUoXuIF3jE-iLM1GK4_F9Ckwwz2j96lDVooFW9uE6-jzaNlxdlEnFzEwuBRY6bKrzOolaCc0sMvvJlE3pi7Gg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why is HTTP hard to design with?","postDate":"1011912990","msgId":242,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNTA5MTFFLkZDMkZCMEZFQHByZXNjb2QubmV0Pg==","referencesHeader":"PFBpbmUuV05ULjQuNDMuMDIwMTI0MTMyNjA0MC4xODkyLTEwMDAwMEBnYW5kb2xwaC5BU0dBUkQuam1zPg=="},"prevInTopic":241,"nextInTopic":243,"prevInTime":241,"nextInTime":243,"topicId":209,"numMessagesInTopic":77,"msgSnippet":"... There is always a gap between one model and another. The problem is we ve learned to think about it one way and now we must learn to think about it","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 24 Jan 2002 23:42:14 -0000\r\nReceived: (qmail 21990 invoked from network); 24 Jan 2002 22:57:27 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m11.grp.snv.yahoo.com with QMQP; 24 Jan 2002 22:57:27 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 24 Jan 2002 22:57:27 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0OMvO104256\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 14:57:24 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g0OMvNe16282\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Thu, 24 Jan 2002 14:57:23 -0800\r\nMessage-ID: &lt;3C50911E.FC2FB0FE@...&gt;\r\nDate: Thu, 24 Jan 2002 14:56:30 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Why is HTTP hard to design with?\r\nReferences: &lt;Pine.WNT.4.43.0201241326040.1892-100000@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\n&quot;S. Alexander Jacobson&quot; wrote:\n&gt;\n&gt; ...\n&gt; \n&gt; Much as it would not be surprising if we disagreed\n&gt; about the best design for an email system using\n&gt; C++ and the STL, it should not be at all\n&gt; surprising that we disgaree when using HTTP.\n\nThere is always a gap between one model and another. The problem is\nwe&#39;ve learned to think about it one way and now we must learn to think\nabout it another. If you taught someone REST and you taught them sockets\nand asked them to invent an email system I think they would find it\neasier to do it using HTTP and REST.\n\n&gt;...\n&gt; To put it another way, they are designing\n&gt; applications not protocols.\n\nBig mistake. Maintaining applications is extremely expensive. A purchase\norder application is no easier to maintain in the long run than an email\napplication. How many companies have their own email applications?\nRather they buy interoperable products implementing the same protocol.\n\n&gt; The idea is that security checkpoints send front\n&gt; and side views of individuals to some server and\n&gt; the server sends back information about whether\n&gt; the person looks like a known terrorist in the\n&gt; database.\n&gt; \n&gt; We can add the complexity that processing the\n&gt; request may take long enough for the response to\n&gt; arrive back asynchronously (but sometimes the\n&gt; server can decide quickly).\n\nI don&#39;t now if anyone answered you yet. Here&#39;s how I would go about\nthinking about it.\n\nYou want it to be asyncronous. That means that the server must have\n&quot;persistent state&quot; that survives longer than a single connection and yet\nis meaningful to the client. That suggests to me that you are creating a\nnew reasource (if only a temporary one). So you do a POST of the\npicture. mime/multipart could be used if there is a associated XML\nmetadatda. The server returns a Location: for the new resource.\n\nIf you want a web interface then you can use a POST form.\n\nThe new resource represents the computation. The client can do a GET on\nit any time to see how the computation is progressing. When it is done\nthe computation result could appear there. In the meantime, status\nreports are there so that the client can check back whenever it wants.\n\nIf you want a web interface, consider a META http-equiv=refresh thing.\n\nThe client may also want an asyncronous notification of when this status\nresource changes. In the interests of layering and distribution of\nprocessing, I would think of this as a completely unrelated part of the\nsystem. Some clients could poll. Others could ask for a notification.\nMaybe the resource for status and for the final result should be\nseparate...I can&#39;t see big tradeoffs one way or the other off the top of\nmy head.\n\nIf there was a web interface, a button on the HTML could give the user\nthe asych notification option.\n\nConventions for asyncronous notification are here:\n\n * http://www.prescod.net/HTTP_event_conventions.html\n\nIf you had some kind of mod_asych then adding asynch support would\nrequire no extra effort. And you could easily support either or both of\nemail and HTTP-based notification.\n\nAnyhow, that&#39;s how I would model it. Notice how I try to think about the\nweb interface at each step. It allows me to envision the process in\nconcrete terms and ensure that I am always creating resources that are\nuseful to the client. Using content-negotiation I can really create\nthese HTML forms for testing purposes even if the main goal of the\nservice is for automated users.\n\nAs these pictures are large, you might want to consider allowing users\nto submit some kind of a hash to check if the picture is already on the\nsite. That&#39;s another benefit of modelling the system so that results are\nresources. You could point someone at an existing result in your\n&quot;cache&quot;. REST rewards you for making things into resources as functional\nprogramming rewards you for making your functions small and reusable.\n\n Paul Prescod\n\n"}}