{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":224392758,"authorName":"Koranteng Ofosu-Amaah","from":"&quot;Koranteng Ofosu-Amaah&quot; &lt;koranteng@...&gt;","profile":"amaah1","replyTo":"SENDER","senderId":"LVImvPU9ip-rocQ0GFvpS04Ko_buBXQNgsxlS_wKpxRtV5Gi_IQToQhKKZz5_2B2iiI-McVaBLwx5I4_zmRlyiiph7kLnDY4myqG_JBjlTq3N-do","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] On resource modeling, intermediaries and deployment","postDate":"1182781520","msgId":9246,"canDelete":false,"contentTrasformed":false,"systemMessage":true,"headers":{"messageIdInHeader":"PDkzNmExMjU2MDcwNjI1MDcyNWo1Njc4N2ViM2hlNDVmYzBkYWQyYmYzN2ZjQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ2N0UzNTc2LjcwNzAxMDVAZ214LmRlPg==","referencesHeader":"PDkzNmExMjU2MDcwNjIyMTMwM282ZjM1MTBmMG84MDY0OTU4NjE4NTNmZkBtYWlsLmdtYWlsLmNvbT4JIDw0NjdFMzU3Ni43MDcwMTA1QGdteC5kZT4="},"prevInTopic":9214,"nextInTopic":9248,"prevInTime":9245,"nextInTime":9247,"topicId":9196,"numMessagesInTopic":8,"msgSnippet":"So Julian Reschke shared good thoughts and his experience with caches, extension methods and the like. I second him: we need more data on the problems in","rawEmail":"Return-Path: &lt;koranteng@...&gt;\r\nReceived: (qmail 90563 invoked from network); 26 Jun 2007 01:08:02 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m50.grp.scd.yahoo.com with QMQP; 26 Jun 2007 01:08:02 -0000\r\nReceived: from unknown (HELO n13c.bullet.sp1.yahoo.com) (69.147.64.114)\n  by mta7.grp.scd.yahoo.com with SMTP; 26 Jun 2007 01:08:02 -0000\r\nReceived: from [216.252.122.218] by n13.bullet.sp1.yahoo.com with NNFMP; 26 Jun 2007 01:07:15 -0000\r\nReceived: from [209.73.164.86] by t3.bullet.sp1.yahoo.com with NNFMP; 26 Jun 2007 01:07:15 -0000\r\nReceived: from [66.218.66.79] by t8.bullet.scd.yahoo.com with NNFMP; 26 Jun 2007 01:07:15 -0000\r\nX-Sender: koranteng@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 58057 invoked from network); 25 Jun 2007 14:25:23 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m45.grp.scd.yahoo.com with QMQP; 25 Jun 2007 14:25:23 -0000\r\nReceived: from unknown (HELO nz-out-0506.google.com) (64.233.162.235)\n  by mta11.grp.scd.yahoo.com with SMTP; 25 Jun 2007 14:25:21 -0000\r\nReceived: by nz-out-0506.google.com with SMTP id i11so1133980nzh\n        for &lt;rest-discuss@yahoogroups.com&gt;; Mon, 25 Jun 2007 07:25:21 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;\n        b=hT5sKTNtZqTXeCXtlaYQCOfn+QQIyoKPmUZ4JDMnFZvv81CqnBYVz0lrcwf/hirA6z8bUDWCHcpg1lHEu24ib4dVn7FlyLsAsB58v+itY7sgaG3PfJP7CMWYUmT/Bfw+BRt49uq7lXgjYD8ldh6n7sARXK7XqBI5gCHRUI/ogvw=\r\nReceived: by 10.142.76.4 with SMTP id y4mr178999wfa.1182781520916;\n        Mon, 25 Jun 2007 07:25:20 -0700 (PDT)\r\nReceived: by 10.142.83.20 with HTTP; Mon, 25 Jun 2007 07:25:20 -0700 (PDT)\r\nMessage-ID: &lt;936a12560706250725j56787eb3he45fc0dad2bf37fc@...&gt;\r\nDate: Mon, 25 Jun 2007 07:25:20 -0700\r\nTo: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;467E3576.7070105@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;936a12560706221303o6f3510f0o806495861853ff@...&gt;\n\t &lt;467E3576.7070105@...&gt;\r\nX-eGroups-Msg-Info: 2:4:8:0\r\nFrom: &quot;Koranteng Ofosu-Amaah&quot; &lt;koranteng@...&gt;\r\nSubject: Re: [rest-discuss] On resource modeling, intermediaries and deployment\r\nX-Yahoo-Group-Post: member; u=224392758; y=UNr3eMh0h2ooAf0JdUVYbZWcInCa0D1lSl7CAP87mLTe\r\nX-Yahoo-Profile: amaah1\r\nX-Yahoo-Marked-Not-Spam: \r\nX-Yahoo-Newman-Property: groups-system\r\nX-eGroups-Approved-By: mdierken &lt;dierken@...&gt; via web; 26 Jun 2007 01:07:13 -0000\r\n\r\nSo Julian Reschke shared good thoughts and his experience with caches,\nextension methods and the like. I second him: we need more data on the\nproblems in currently deployed caches to talk intelligently about\nthings. Hopefully Mark Nottingham or others will share the details of\ntheir findings.\n\nI&#39;ll pick up on this comment though and riff a little. Here goes:\n\n&gt; My experience with developing (and supporting) the HTTP server\n&gt; and client stack in one of SAP&#39;s portal products for many years\n&gt; says that new methods do not cause major problems. That may be\n&gt; influenced by the fact that most *authoring* goes over HTTPS,\n&gt; and thus caches won&#39;t be able to do any harm.\n\nThe subtlety of the word &quot;authoring&quot; is the key point here and this\nsubtlety is often lost.\n\nWhat I often find in practice is that many simply go beyond having\n&quot;authoring over HTTPS&quot; and simply say &quot;everything over HTTPS&quot;. I know\nI had to deal with braindead internal IT corporate standards at Big\nBlue that really set back that company&#39;s embrace of the web by years.\n&quot;Why is it so slow?&quot; was a common question about web usage at IBM 6\nyears ago.\n\nWhen I hear people say without qualifying that &quot;SSL/TLS is the\nanswer&quot;, what they are really saying is let&#39;s remove all visibility to\nintermediaries. The downside of this as an architectural solution is\nthat you lose the possible benefits of caches and other intermediaries\nfor things other than authoring. And common case performance is\ndegraded.\n\nGiving visibility to intermediaries is a Good Thing (TM) and a big\npart of the web style.\n\nCaches aren&#39;t the only intermediaries we need to worry about.\nFirewalls are also problematic. More generally, even though we are\narchitecting for middlemen, we shouldn&#39;t be held hostage by them.\n\nAs an example, as the Atompub WG was working through a few kinks last\nyear, there was the suggestion about possibly apocryphal &quot;concern over\nfirewall configurations that block PUT and DELETE operations&quot; [1] and\npointers to temporary workarounds some implementors had introduced in\nthe wild e.g. X-HTTP-Method-Override custom HTTP headers in GData (a\npractice that is perhaps now deprecated)\n\nNow I won&#39;t get into that actual case and I&#39;ll simply note the fact\nthat Atompub is being standardized with full use of PUT and DELETE,\nand that implementors haven&#39;t seen any deployment issues.\n\nBut there is an object lesson here. Many have gotten burnt at some\npoint by a recalcitrant intermediary. Sometimes it is poorly\nconfigured, sometimes it&#39;s a matter of policy. We&#39;ve all had to route\naround it. That&#39;s why tunneling is a widely used design pattern.\n\nIn the dark recesses of our collective memory we can all remember the\nbad cache or firewall. I have many war stories to share about\nmiddleboxes gone awry. It&#39;s a common enough thing that I note in\npassing the title of a recent thread: detecting cache malfunctioning.\n\nBut on to extensibility through new HTTP methods... John Hanna\nrecently put it this way:\n\n&quot;Increasing methods is painful compared to increasing headers which is\npainful compared to increasing document features.&quot;\n\nThe pain of extension methods in HTTP are:\n\n1. comprehension\n\nThis is a social problem. We value the uniform interface and want to\nhave use cases that have global significance. Getting people to agree\non common semantics of anything is an N squared problem. It&#39;s a hard\nthing.\n\n2. implementation\n\nClients and intermediaries often have poor handling of extension\nmethods at least with HTTP.\n\nThe first time I wrote an HTTP client, the first bug that was filed\nagainst it was about the interaction with a caching intermediary. For\nwhat it&#39;s worth, the second bug was with chunked transfer encoding. It\ntakes Jane Programmer a day with the HTTP 1.1 spec to get a working\nclient or server running, but it takes far longer to get to a good\nclient, let alone a good server, let alone a good cache, proxy or\nfilter something or other. Even with the eyeballs that open source\nbrings, test suites, and the sharpest folks on board, it is a brittle\nweb. The name Apache is testimony to this. Also extensibility tends to\nbe the last 20% of the HTTP implementation and most don&#39;t get to it.\n\n3. the &quot;default deny&quot; mentality\n\nMany intermediaries, as a matter of policy or explicit configuration,\noften disable extension methods. i.e. many security folk don&#39;t believe\nin &quot;must ignore&quot; style extensibility and when HTTP came along applied\nthis. Governance and regulation almost seem to lead to filtering\nparanoia. Deperimeterization sadly hasn&#39;t gained wide currency in the\nsecurity industry. By analogy, our router/NAT/firewall boxes &quot;protect&quot;\nus but they also inhibit innovation - e.g. I have never successfully\nconfigured my Linksys box to share something over Bittorrent, even\npunching pinholes, upgrading firmware. Default deny can hurt us.\n\n4.  misconfiguration\n\nIt is very easy to misconfigure intermediaries. &quot;What does that button\ndo?&quot; is the source of more outages than I can count.\n\nI&#39;m sure there are more pain points with extension methods but note\nthat 3 of the 4 that come to mind involve intermediaries.\n\nAnother sidenote with some tongue in cheek.... I haven&#39;t commented on\nthe issue-du-jour: PUT and it&#39;s not because my mails disappeared into\nthe ether. There&#39;s probably been several hundred emails on this list\nabout the meanings of PUT and POST just in the past few months. Rather\nI was wondering about why PUT is a permathread in every mailing list\nabout the web style.\n\n&quot;The Ambiguous Semantics Of PUT&quot; sounds an awful lot like &quot;The\nUnbearable Lightness Of Being&quot; via Milan Kundera, and I feared getting\ntrapped in an existential debate: semantics, being, metaphysics etc.\n(68 replies and counting)\n\nSo a question for Nick Gall: care to comment about your catchy title?\nWas the literary allusion intended or am I reading things too deeply?\n\nI have clear notions of the semantics of PUT and on most things in the\nHTTP 1.1 spec. GET, POST, PUT, DELETE are well-defined but PUT\ncontinues to cause trouble for some.\n\nSo let&#39;s have some metaphysics on the four horsemen of the web:\n\n* GET is the first thing we do in life, from birth we cry for\nattention and demand recognition. Humans, like all mammals, are\nacquisitive beings. Me, me, me. Want, want, want. Get, get, get. The\ndairy industry&#39;s most effective campaign was the Got Milk\nadvertisement series and it is fitting. It&#39;s not surprising that 90%\nof operations on the web, our greatest collaborative platform, are\nGETs (sidenote: what is the source of that oft-repeated statistic?).\nIt is also not surprising that an architecture that optimizes for GETs\nwill see widespread adoption.\n\n* DELETE also is common in human experience, we are always destroying\nthings. Anecdotally, the third phrase my little niece spoke was &quot;it\nbroke&quot;. The fourth was &quot;it dropped&quot;. &quot;Mum&quot; and &quot;Dad&quot; were the first\ntwo.\n\n* POST is necessarily opaque and has the virtue of explicitly\nreferring to a social institution that likely dates back to the\ninvention of writing systems. Post and mailing systems are well known\nand have social meaning in our communities. We have written documents\npassed through intermediaries for thousands of years.\n\n* PUT however gets us into the matter of linguistics. Bear with me for\na minute here.\n\nIn my dictionary (a crummy concise Oxford paperback dictionary, 1983\nedition), there are 10 definitions of put. The main definition is\nreasonable but I think but you can begin to see where Talmudic\ninterpretation might start to creep in.\n\nput. v. 1. to move (a thing) to a specified place, to cause to occupy\na certain place or position, to send\n\nThe other definitions are interesting also:\n\n2. to cause to be in a certain state or relationship\n3. to subject\n4. to estimate\n5. to express or state\n6. to impose as a tax\n7. to stake (money) in a bet\n8. to place as an investment\n9. to lay (blame) on\n10. (of ships) to proceed\n\nI&#39;ll note that the verb put has the same number of variants (10) as\nthe verb get in this dictionary. The variation in the senses of the\nvariants is worrying however; there seem to be too many nuances.\n\nAlso, unlike the case of get, money comes into play in the\ndefinitions. 3 variants have financial concerns in mind and one even\nincludes the imposition of taxes. Money is a funny thing and will\nforever cause people to project their received meaning onto words and\nactions.\n\nOthers have been pointing to unclear text or ambiguities in the spec,\nI think fundamentally that it is a matter of language. Some would have\npreferred update, some would have preferred move etc. Put implies\npockets to some and hiding to others.\n\nWhat do we put? And where do we put it? And for how long do we put it?\n\nIn summary the linguistics of put are really affecting PUT.\n\nAnyway I hope this hasn&#39;t been too much of a distraction. In parting\nI&#39;ll suggest that:\n\n1. The REST Inquisition [2] was over a matter of interpretation over\nthe phrase &quot;web services&quot; and I believe that debate is over. We even\nhave an O&#39;Reilly book on it. Case closed.\n\n2. The REST Reformation, when it comes, will also be over a matter of\ninterpretation. One of the Theses that our future Martin Luther will\nstick to the doors of the Catholic Church of REST will be about PUT.\nThe Protestants of REST will be more liberal and expedient about the\nuse of PUT and won&#39;t dwell on the so-called &quot;ambiguous semantics of\nPUT&quot;. They&#39;ll just use it and see what happens. I think the Atompub\nfolks have a good claim to be the first Protestants of REST.\n\nCheers.\n\nKoranteng\n\n(ducks)\n\n[1] http://www.imc.org/atom-protocol/mail-archive/msg05981.html\n\n[2] http://lists.xml.org/archives/xml-dev/200504/msg00244.html\n\n\n--\nKoranteng&#39;s Toli - the blog edition\nhttp://koranteng.blogspot.com/\n\n"}}