{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"FogOHDooJyJjaSIOXtY2IC00XZfaj1-ent4JRNjNEOUu0S6Z4gTJU08DnkoYRBd3aFF-u5CivIpIu2QB0V8nkFuMu68h2OXwAA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Fwd: Re[d]: REST Service Description Language\tProposal","postDate":"1109253256","msgId":4876,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMDkyNTMyNTYuMTgwMDAuMjAyLmNhbWVsQHBob2VuaXg+","inReplyToHeader":"PDI3YjkyOTVmMDUwMjI0MDQ0ODEwNmY1YzBjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDI3YjkyOTVmMDUwMjE5MjAwMjY0MWY1MDI1QG1haWwuZ21haWwuY29tPgkgPGN2anBmbis4aXB1QGVHcm91cHMuY29tPiAgPDI3YjkyOTVmMDUwMjI0MDQ0ODEwNmY1YzBjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4874,"nextInTopic":4877,"prevInTime":4875,"nextInTime":4877,"topicId":4874,"numMessagesInTopic":3,"msgSnippet":"[I composed all this before seeing your later msg; I like the way it turned out, and it d be a pity to destroy it, so I still post it...] ... A URI is a","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 5097 invoked from network); 24 Feb 2005 13:51:41 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m20.grp.scd.yahoo.com with QMQP; 24 Feb 2005 13:51:41 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.142.253)\n  by mta2.grp.scd.yahoo.com with SMTP; 24 Feb 2005 13:51:41 -0000\r\nReceived: (qmail 23074 invoked by uid 1000); 24 Feb 2005 08:54:17 -0500\r\nTo: Jeoff Wilks &lt;jeoffwilks@...&gt;, Hendy Irawan &lt;ceefour@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;27b9295f0502240448106f5c0c@...&gt;\r\nReferences: &lt;27b9295f0502192002641f5025@...&gt;\n\t &lt;cvjpfn+8ipu@...&gt;  &lt;27b9295f0502240448106f5c0c@...&gt;\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: 7bit\r\nOrganization: Asynchronous.org\r\nMessage-Id: &lt;1109253256.18000.202.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Ximian Evolution 1.4.5 \r\nDate: Thu, 24 Feb 2005 08:54:16 -0500\r\nX-eGroups-Remote-IP: 216.114.142.253\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nReply-To: jsled@...\r\nSubject: Re: [rest-discuss] Fwd: Re[d]: REST Service Description Language\n\tProposal\r\nX-Yahoo-Group-Post: member; u=93099516\r\nX-Yahoo-Profile: joshsled\r\n\r\n[I composed all this before seeing your later msg; I like the way it\nturned out, and it&#39;d be a pity to destroy it, so I still post it...]\n\nOn Thu, 2005-02-24 at 07:48, Jeoff Wilks wrote:\n\n&gt; From my point of view an URI is a resource (doesn&#39;t mean it can&#39;t be a\n&gt; service). And a service basically &quot;contains&quot; several resources.\n&gt; Actually this isn&#39;t correct at all IMHO.\n\nA URI is a Uniform Resource Identifier.\nAn abstract Resource may have more than one Identifier.\nAn identifier only identifies one Resource.\n\n\n&gt; In my definition of RSDL a service contains several operations (not\n&gt; related to resources at all). An operation may return (or not) one or\n&gt; more resources. This is because the operation&#39;s URI is variable\n&gt; because of parameters, path info, etc. and you can say one URI is a\n&gt; resource, so an operation maps to several URIs which are in turn\n&gt; resources.\n\nAs per HTTP&#39;s definition, operations are applied to resources.  The\nvarious operations\n\n\n&gt; RSDL or services, IMHO, aren&#39;t URIs. They&#39;re not resources (the RSDL\n&gt; files are resources, but by &quot;not resources&quot; I mean the semantics of\n&gt; it). They&#39;re just descriptions of operations.\n\nHmm.  Think of &quot;Resource&quot; as the root of the data-type hierarchy.  It&#39;s\njust a Thing.  Your RSDL can be both a Resource and, further, a\ndescription of operations...\n\n\n&gt; BTW I&#39;m *really* looking for an already-made open standard that is:\n&gt; - tailored for REST/SHARE\n&gt; - it has the features it needs, like interfaces, conflict resolution, etc.\n&gt; - *simple* (and I mean *dead* simple)\n\nHTML/HTTP.\n\n\n&gt; BTW regarding REST/SHARE I want to think SHARE as &quot;REST without exotic\n&gt; HTTP request methods&quot;. Anybody disagrees with this?\n\nI do. :) REST is not _only_ about GET/PUT/POST/DELETE.  There are other\nsalient details; a constrained interface -- while super-important -- is\nonly one of the constraints outlined by REST.\n\nMy main differentiator between REST and SHARE is hypermedia.  The key\nthing I&#39;ve seen with the SHAREd APIs is that they:\n\n  * don&#39;t necessarily use GET and POST [let alone PUT, DELETE, &c...] \n    with urn:ietf:rfc:216 semantics.\n\n  * are defined as a set of procedure-invocation operations, external \n    to the &quot;normal&quot; request/response GET-discovery+POST-submit web.\n\n  * don&#39;t strongly use URLs to identify domain-resources [though they \n    do use URLs to define operational/procedural endpoints.  they seem \n    to want to use query-string parameters to pass &quot;object-identifiers&quot; \n    or tokens.\n\n\n&gt; Even so RSDL is suited for both REST and SHARE since it assumes\n&gt; nothing about HTTP methods. The HTTP methods are defined in RIDL (if\n&gt; available).\n\nHTTP is an application protocol; as such, it defines the operations and\ntheir semantics.\n\n\nIf you&#39;re really looking to define abritrary-RPC over\nHTTP-primarily-but-not-really-because-protocol-independence-seems-groovy, then you should look at SOAP and WSDL, and maybe try to simplify them. \n\nNote that ones of the reasons both are so complex is specifically\nbecause they&#39;re trying to be &quot;protocol independent&quot;, so they have to\nredefine the notion of an envelope, specifically work around the\nconstraints of any &quot;transport&quot; protocols they layer over, &c.\n\nCORBA and DCOM are both pretty developed RPC/RMI solutions, though\nthey&#39;ve both been called &quot;really hairy&quot;, too.\n\nFor my dollar, if I were trying to do /RPC/ I&#39;d do XML-RPC, which seems\ndead simple ... though I&#39;d probably try to get around it&#39;s\ndata-structure encoding to do something a bit more &quot;document/literal&quot; if\nI actually wanted to converse with other people.\n\nBut I think the best option is something like &quot;RESTful SHARE&quot; ... but\nthat correctly uses GET/POST, identifies resources, uses some form of\nhypermedia in operation-discovery, and maybe even HTTP&#39;s more &quot;advanced&quot;\nfeatures\n\n&gt; - Hendy (dev.gauldong.net)\n\n...jsled\n\n-- \nhttp://asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n\n"}}