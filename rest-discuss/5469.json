{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":93099516,"authorName":"Josh Sled","from":"Josh Sled &lt;jsled@...&gt;","profile":"joshsled","replyTo":"SENDER","senderId":"43z2oaO1aSjUwybMzrJNZS8-7Nmp3wkOJibcTueGetIqbuMKuZQ_XawRSvoi544uuDeQAChkW0k62KdnfBRQLOVPoosqFSA7iw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Resources and URIs","postDate":"1132151889","msgId":5469,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExMzIxNTE4OTAuMjMyMjguNjQuY2FtZWxAcGhvZW5peD4=","inReplyToHeader":"PGRsZmJuYytzcjEzQGVHcm91cHMuY29tPg==","referencesHeader":"PGRsZmJuYytzcjEzQGVHcm91cHMuY29tPg=="},"prevInTopic":5468,"nextInTopic":5470,"prevInTime":5468,"nextInTime":5470,"topicId":5468,"numMessagesInTopic":43,"msgSnippet":"... More rationale: the first is a resource (identifier).  The second is a query.  Specifically, over the parts space matching the criteria part-id=00345.","rawEmail":"Return-Path: &lt;jsled@...&gt;\r\nX-Sender: jsled@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 6609 invoked from network); 16 Nov 2005 14:37:27 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m32.grp.scd.yahoo.com with QMQP; 16 Nov 2005 14:37:27 -0000\r\nReceived: from unknown (HELO phoenix.asynchronous.org) (216.114.130.19)\n  by mta1.grp.scd.yahoo.com with SMTP; 16 Nov 2005 14:37:26 -0000\r\nReceived: (qmail 31766 invoked by uid 1000); 16 Nov 2005 09:38:10 -0500\r\nTo: oraweb &lt;jackjc@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nIn-Reply-To: &lt;dlfbnc+sr13@...&gt;\r\nReferences: &lt;dlfbnc+sr13@...&gt;\r\nContent-Type: text/plain\r\nContent-Transfer-Encoding: 7bit\r\nOrganization: Asynchronous.org\r\nDate: Wed, 16 Nov 2005 09:38:09 -0500\r\nMessage-Id: &lt;1132151890.23228.64.camel@phoenix&gt;\r\nMime-Version: 1.0\r\nX-Mailer: Evolution 2.4.1 \r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Josh Sled &lt;jsled@...&gt;\r\nSubject: Re: [rest-discuss] Resources and URIs\r\nX-Yahoo-Group-Post: member; u=93099516; y=lKOIucDp-3j_nyGIEDtvnLTPFD44QRmwrM0fuHsV7MTs35A\r\nX-Yahoo-Profile: joshsled\r\n\r\nOn Wed, 2005-11-16 at 13:20 +0000, oraweb wrote:\n&gt; Minimize the use of query strings. For example: \n&gt; \n&gt;       Prefer: http://www.parts-depot.com/parts/00345 \n&gt; \n&gt;       Over: http://www.parts-depot.com/parts?part-id=00345 \n&gt; \n&gt;       Rationale: the relationship between &#39;parts&#39; and &#39;00345&#39; is\n&gt; clear, and you can instantiate subresources of &#39;00345&#39; easily; this is\n&gt; not possible if that information is tucked away in a query string.\n\nMore rationale: the first is a resource (identifier).  The second is a\nquery.  Specifically, over the parts &quot;space&quot; matching the criteria\npart-id=00345.  While these two examples might refer to the same\nresource, they are different things.\n\nMore practically, they may be implemented differently; while a method\noperation (GET) on a resource (/parts/00345) is pretty clear, a query\nmight very well return a description of the query-results in the\nresource-space being queried over... something like...\n\n&lt;results&gt;\n  &lt;query-terms&gt;\n    &lt;term&gt;&lt;key&gt;part-id&lt;/key&gt;\n          &lt;op&gt;equality&lt;/op&gt;\n          &lt;val&gt;00345&lt;/val&gt;&lt;/term&gt;\n  &lt;/query-terms&gt;\n  &lt;response offset=&quot;0&quot; size=&quot;1&quot; totalResults=&quot;1&quot;&gt;\n    &lt;elt href=&quot;/parts/00345&quot; /&gt;\n  &lt;/response&gt;\n&lt;/results&gt;\n\nWhich might seem silly for a single part, until you think about what\n&quot;/parts?type=screw&quot; might return for a large dataset.\n\n\n&gt; Do not depend on URI&#39;s internal structure. Some people think about\n&gt; REST design in terms of setting up a bunch of URIs. &quot;I&#39;ll put purchase\n&gt; orders in /purchases and I&#39;ll give them all numbers like\n&gt; /purchases/12132 and customer records will be in /customers...&quot; That\n&gt; can be a helpful way to think while you are whiteboarding and\n&gt; chatting, but should not be your final public interface to the service.\n\nI think &quot;that&quot; in that sentence was more along the lines of &quot;your final\npublic interface should not consist of telling clients that if they want\nto find purchase order 12132, they should append the purchase-order ID\nto the URL-prefix &#39;/purchases/&#39;&quot;.\n\nIt&#39;s more RESTful for a server to tell clients what resources to\ntransition to, and less RESTful for clients to assume that particular\nresources exist.  For example, in HTTPville, the exchange:\n\nGET /assembly/42\n  &lt;assembly id=&quot;42&quot;&gt;\n    &lt;consists-of&gt;\n      &lt;part id=&quot;12132&quot; /&gt;\n    &lt;/consists-of&gt;\n  &lt;/assembly&gt;\n\nGET /parts/12132\n  &lt;part id=&quot;12132&quot;&gt; [...] &lt;/part&gt;\n\n...is more RESTful as...\n\nGET /assembly/42\n  &lt;assembly id=&quot;/assembly/42&quot;&gt;\n    &lt;consists-of&gt;\n      &lt;part id=&quot;/parts/12132&quot; /&gt;\n    &lt;/consists-of&gt;\n  &lt;/assembly&gt;\n\nGET /parts/12132\n  &lt;part id=&quot;/parts/12132&quot;&gt; [...] &lt;/part&gt;\n\n  \nWhen you decide to re-implement the parts subsystem, /assembly/42 can\nthen return URIs to &quot;/parts/eol/screw;9mm;robertson-head&quot;.  When things\nchange to using an external parts supplier, the URIs can change to\n&quot;http://parts-depot.com/parts/00345&quot; ... in all cases, the interface and\nclient-software that treats URIs opaquely and doesn&#39;t depend on\nURI-construction will continue to work --- modulo a different set of\nways changes can cause things to break.\n\n\n&gt; So, is it &quot;best practice&quot; to represent a resource like this:\n&gt; http://www.parts-depot.com/parts/00345 \n&gt; \n&gt; and if not, how should is be represented witout using a query string?\n\nWho could argue with a beautiful resource identifier like that? :)\n\n...jsled\n-- \nhttp://asynchronous.org/ - `a=jsled; b=asynchronous.org; echo ${a}@${b}`\n\n"}}