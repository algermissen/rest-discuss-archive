{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184610129,"authorName":"Walden Mathews","from":"&quot;Walden Mathews&quot; &lt;walden@...&gt;","profile":"waldenmathews","replyTo":"SENDER","senderId":"xiUxwXD8LnCdmwIo5Mkr1ivx9cFbKOuG_NDf5LxMgp5kAmQ-oa4H2145VUAyN8ZNnBlMpewFjRgURdttd_-LyoGe51DbaY_u8iMsqiU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Design questions for applying REST","postDate":"1087216387","msgId":4461,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwNjYwMWM0NTIwYiRiZmNjMWY0MCQ5NGQ0YThjMEBXQUxERU5OT1RFQk9PSz4=","referencesHeader":"PEJBWTE2LURBVjYwc0w2N1FsTkQwMDAzNjZmNkBob3RtYWlsLmNvbT4gPDQwQzlCMjI5LjYwMDAxQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVYzME9SRlFHd1o0MDAwMzc4M2JAaG90bWFpbC5jb20+IDw0MENBRjkyMC42MDUwMDAyQG5lZ2dpZS5uZXQ+IDxCQVkxNi1EQVY0OGhmQUVuUjlyMDAwMzg3ZWVAaG90bWFpbC5jb20+IDwwMGRiMDFjNDUxNDgkODgzMTY0NTAkMDkwMmE4YzBAV0FMREVOREVTS1RPUD4gPEJBWTE2LURBVjMzb203REJEaXIwMDAzOTNmMUBob3RtYWlsLmNvbT4="},"prevInTopic":4460,"nextInTopic":4462,"prevInTime":4460,"nextInTime":4462,"topicId":4447,"numMessagesInTopic":13,"msgSnippet":"... From: S. Mike Dierken  To: Walden Mathews  Cc:  Sent: Monday, June 14, 2004","rawEmail":"Return-Path: &lt;walden@...&gt;\r\nX-Sender: walden@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 32121 invoked from network); 14 Jun 2004 12:33:12 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m24.grp.scd.yahoo.com with QMQP; 14 Jun 2004 12:33:12 -0000\r\nReceived: from unknown (HELO c001.snv.cp.net) (209.228.32.139)\n  by mta4.grp.scd.yahoo.com with SMTP; 14 Jun 2004 12:33:12 -0000\r\nReceived: (cpmta 10212 invoked from network); 14 Jun 2004 05:33:05 -0700\r\nReceived: from 204.60.129.197 (HELO WALDENNOTEBOOK)\n  by smtp.register-admin.com (209.228.32.139) with SMTP; 14 Jun 2004 05:33:05 -0700\r\nX-Sent: 14 Jun 2004 12:33:05 GMT\r\nMessage-ID: &lt;006601c4520b$bfcc1f40$94d4a8c0@WALDENNOTEBOOK&gt;\r\nTo: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\r\nCc: &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;BAY16-DAV60sL67QlND000366f6@...&gt; &lt;40C9B229.60001@...&gt; &lt;BAY16-DAV30ORFQGwZ40003783b@...&gt; &lt;40CAF920.6050002@...&gt; &lt;BAY16-DAV48hfAEnR9r000387ee@...&gt; &lt;00db01c45148$88316450$0902a8c0@WALDENDESKTOP&gt; &lt;BAY16-DAV33om7DBDir000393f1@...&gt;\r\nDate: Mon, 14 Jun 2004 08:33:07 -0400\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nX-eGroups-Remote-IP: 209.228.32.139\r\nFrom: &quot;Walden Mathews&quot; &lt;walden@...&gt;\r\nSubject: Re: [rest-discuss] Design questions for applying REST\r\nX-Yahoo-Group-Post: member; u=184610129\r\nX-Yahoo-Profile: waldenmathews\r\n\r\n\n----- Original Message ----- \nFrom: &quot;S. Mike Dierken&quot; &lt;mdierken@...&gt;\nTo: &quot;Walden Mathews&quot; &lt;walden@...&gt;\nCc: &lt;rest-discuss@yahoogroups.com&gt;\nSent: Monday, June 14, 2004 12:49 AM\nSubject: Re: [rest-discuss] Design questions for applying REST\n\n\n| &gt; 1) POST input documents to a generic resource on the server\n| &gt; that is responsible for associating these documents with their final\n| &gt; merged counterpart, creating the latter when appropriate.  You\n| &gt; can let this return the Location of the newly created input document\n| &gt; on the server, or not.  In response to this POST, always return\n| &gt; the URI of the merged document, minimally.\n| Thanks Walden, I think this is a great REST pattern (described by others\nas\n| well - I wonder if we should start a &#39;design patterns&#39; page for REST on\nthe\n| Wiki).\n\nSame old REST stuff, agreed.\n\n|  I&#39;m curious about the comparison of this approach to using PUT directly\nto\n| create/update input documents. From my understanding, the biggest\ndifference\n| is whether the client constructs a URI to the input document, or the\nserver\n| provides an opaque identifer and the client maintains a mapping between\n| submitted content and a server hosted resource.\n\nI&#39;m curious about your curiosity.  You&#39;re the guy who knows\nthe application&#39;s constraints, such as whether the client is willing\nto maintain a mapping.  Since (from below) the source doc ids\nare not URI, doesn&#39;t the client have to maintain a mapping either\nway?\n\n|\n|\n| &gt;\n| &gt; 2) design the merged document such that it contains, directly\n| &gt; or indirectly, an index to the input documents from which it has\n| &gt; been composed.  In other words, there may be yet another resource\n| &gt; subordinate to each merged document whose only function is to\n| &gt; be an index of inputs.  This is a list of URI at which the original\n| &gt; input documents are available verbatim for GET, PUT and DELETE.\n| Definitely possible, but I don&#39;t see the utility for the use cases I\nintend\n| to support. (I&#39;m putting a REST layer on top of an existing, critical\n| business function - this capability doesn&#39;t map to the existing uses of\nthe\n| system).\n\nWow.  I thought this would be the key, since in previous discussion\nyou were talking about algorithms and meta-specifications to tell the\nclient how to construct a merge URI from a source URI or vice versa,\n(or something like that).  In my mind, the identity of the input documents\nlogically belongs as a sub-resource to the merged content resources,\njust as a bibliography exists in relation to a research paper.  This\nwould relieve the client from having to maintain those relationships\nin its own space, if it doesn&#39;t want to.  And I thought that was also\na key goal in your design...\n\n\n|\n| &gt;\n| &gt; 3) Subsequent PUT or DELETE on the input doc URIs for a\n| &gt; given merge document have the expected verbatim effects on\n| &gt; those resources, plus some interesting side effects on the merge\n| &gt; document, but with the constraint that even those effects are\n| &gt; idempotent.  That is, if the client decides to change the content of\n| &gt; /input1 via a PUT, the server incorporates that change into the\n| &gt; merged document in a consistent and idempotent manner.\n| Yes, perfect. That&#39;s what I&#39;m shooting for. The question is, can the\nclient\n| do a PUT directly, without passing through the generic resource described\nin\n| step 1? What are the specific tradeoffs?\n\nIf a merged document contains a set of references to the input\ndocuments on which it is based, and the client is able to retrieve\nthose as URI, then why couldn&#39;t the client do a PUT directly to\none?  What sort of tradeoffs are you interested in?\n\nTo me, the interesting part of this is that doing a PUT to an input\ndocument URI has a side effect on the merge document.  I don&#39;t\nknow of a REST constraint (or HTTP constraint) that this violates.\nAnyone?\n\n|\n| &gt; In the original, you said:\n| &gt;\n| &gt; &quot;The submitted documents have their own identifiers (owned by the\nclient)&quot;\n| &gt;\n| &gt; Does this mean that they are already hosted elsewhere?  If so are\n| &gt; you considering approaches in which they are not dually hosted\n| &gt; on your server?\n| The client-owned identifiers are not URIs nor do the indicate retrievable\n| resources. If I squint, the current system looks more like a message-queue\n| system than a resource-based system, so there is almost no incoming data\n| that is &#39;globally&#39; addressable/retrievable.\n|\n| These client-owned identifiers are something I am thinking are important\nto\n| expose in URIs. These identifiers are going to be scattered across\nmultiple\n| systems (internal and external)\n\nwhat does that mean?\n\n| and the simplest integration seems to be for\n| the service to support requests that are composed mainly of this\n| client-owned identifier.\n\nIt seems to me that either your client is constrained to accessing\nthese objects through an identification scheme that is already\nimplemented, or it isn&#39;t, and there is no real middle ground.\n\nIf  you&#39;re taking a legacy application and putting it &quot;on the Web&quot;,\nthen your clients are going to have to accept a face lift, no?\n\n\n|Which is why I&#39;m so interested in using PUT\n| directly rather than the generic resource that accept submissions (that\n| approach seems too &#39;message&#39; oriented and not &#39;resource&#39; oriented).\n\nIn terms of REST, I think those resources aren&#39;t Web resources\nuntil they don Web identifiers.  The tradeoff I see is in the impact\non your client.  By sending a message, you can keep your client out\nof the URI manufacturing business.  Otherwise, I don&#39;t see the\nconflict between message orientation and resource orientation.\n\nWalden\n\n\n"}}