{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":63473576,"authorName":"Lucas Gonze","from":"&quot;Lucas Gonze&quot; &lt;lucas@...&gt;","profile":"lucas_gonze","replyTo":"SENDER","senderId":"F7eTFe5TzZ175ZYmqRvHDoh2B0Ye-UXLYxx3gaJw0VTKp643g8y4Hbgx1YgRg07_gIBaNzoVpp09Tbs1xwVPW0qPO2PbzA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [rest-discuss] drafting an asynch http","postDate":"1011640434","msgId":81,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE5FQkJKSUhNTUxLSEVPUE5PR0hERUVJQkZJQUEubHVjYXNAZ29uemUuY29tPg==","inReplyToHeader":"PDNDNEM1MzM4LkE1NTEzODFEQHByZXNjb2QubmV0Pg=="},"prevInTopic":80,"nextInTopic":82,"prevInTime":80,"nextInTime":82,"topicId":72,"numMessagesInTopic":54,"msgSnippet":"... I started coding up the latter this weekend and found that the former was both simpler and more powerful.  Also, the former is time tested -- all those","rawEmail":"Return-Path: &lt;lucas@...&gt;\r\nX-Sender: lucas@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 21 Jan 2002 19:14:49 -0000\r\nReceived: (qmail 78634 invoked from network); 21 Jan 2002 19:14:49 -0000\r\nReceived: from unknown (216.115.97.171)\n  by m3.grp.snv.yahoo.com with QMQP; 21 Jan 2002 19:14:49 -0000\r\nReceived: from unknown (HELO mail3.panix.com) (166.84.0.167)\n  by mta3.grp.snv.yahoo.com with SMTP; 21 Jan 2002 19:14:48 -0000\r\nReceived: from lucas (159-98.nyc.dsl.access.net [166.84.159.98])\n\tby mail3.panix.com (Postfix) with SMTP id 1AE8B98272\n\tfor &lt;rest-discuss@yahoogroups.com&gt;; Mon, 21 Jan 2002 14:14:48 -0500 (EST)\r\nTo: &quot;Rest-Discuss&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nSubject: RE: [rest-discuss] drafting an asynch http\r\nDate: Mon, 21 Jan 2002 14:13:54 -0500\r\nMessage-ID: &lt;NEBBJIHMMLKHEOPNOGHDEEIBFIAA.lucas@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nIn-Reply-To: &lt;3C4C5338.A551381D@...&gt;\r\nImportance: Normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600\r\nFrom: &quot;Lucas Gonze&quot; &lt;lucas@...&gt;\r\nX-Yahoo-Group-Post: member; u=63473576\r\nX-Yahoo-Profile: lucas_gonze\r\n\r\n&gt; Another design is to keep the protocol directed. The server contacts the\n&gt; client with a message that does NOT look like an HTTP request but rather\n&gt; like an HTTP response.\n&gt;\n&gt; The virtue of the former design is that it is easier to layer on the\n&gt; existing HTTP protocol because every message going across the wire is\n&gt; HTTP-as-we-know-it.\n&gt;\n&gt; The virtue of the latter design is that it is simpler. You don&#39;t have a\n&gt; request that is really a response. You have just a response. The only\n&gt; thing novel about it is that it is a new socket created by the server.\n\nI started coding up the latter this weekend and found that the former was both\nsimpler and more powerful.  Also, the former is time tested -- all those third\nparty shopping carts use it to return from the transaction processor&#39;s site to\nthe vendor&#39;s site.\n\n\n&gt; &gt; That is probably a PUT to the uri in Reply-To as determined by the initiator\n&gt; &gt; of the exchange.\n...\n&gt; There are costs in turning the client into a &quot;full server&quot;. We should\n&gt; consider those carefully. It is more difficult to detect a response that\n&gt; is embedded in a request than to understand a simple request.\n\nThe design issue is whether or not to make it possible to expose client state.\nIf the callback is a response then requestor state is a black box.  If the\ncallback is a POST request, then the state of the original requester/client\nbecomes exposed.\n\nMy preference is that callbacks should be any legal request, because this allows\neasier switching between client/server roles.  Using DAV as an example, it would\nbe much easier to create a decentralized CVS cluster if PUT requests could be\nflooded through the cluster unaltered.\n\n&gt; &gt; ... That uri would identify a place to update the status of the\n&gt; &gt; initial outgoing message. The\n&gt; &gt; content would be type message/http-response - not sure if something like\n&gt; &gt; this is registered.\n&gt;\n&gt; So we&#39;re talking about an HTTP message embedded in an HTTP message,\n&gt; right?\n\nI am not convinced that a new Reply-to header is any better an idea than a new\nWATCH method.  The entire problem of pragating new standards goes away if all\nthese features are modeled as a web app, and so far I haven&#39;t seen any features\nthat can&#39;t be modeled that way.  In that context an HTTP message embedded in an\nHTTP message is just another POST argument.\n\nActually, I&#39;d say that the REST design style strongly implies that doing it as a\nweb app is the right approach.  Given the choice between a new WATCH verb and\nReply-to header versus a /watches URI and Reply-to argument, REST implies the\nsecond.\n\n\n\n\n\n"}}