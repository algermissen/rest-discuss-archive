{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":69164307,"authorName":"mike amundsen","from":"mike amundsen &lt;mamund@...&gt;","profile":"mamund","replyTo":"SENDER","senderId":"57kMnKteQPdi49BTWoqAeep4O3F37xnygihwkeN0P7-r5Hxaw2xEu4nyvU9KkEQVoZHf3wCFtwwZRR4U3wqjaDvFnCrv_h8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Google proposes RPC style APIs over REST","postDate":"1280501256","msgId":16036,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEFBTkxrVGluWk9xXy1VYjluRjhlaUQwcnZVblJuMnhtWkItVmYzWXdndzNudUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PDIwMTAwNzMwMDc0NTA0LmIyZDFmOWMzLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PGkydGhyditzZjd0QGVHcm91cHMuY29tPgk8MjAxMDA3MzAwMzA5NDIuZmQyZTE0MjAuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjAxMDA3MzAwNDI2MzIuOGM5OTBlOGEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjAxMDA3MzAwNTQyMTEuZmYwZjdlOWEuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8MjAxMDA3MzAwNzQ1MDQuYjJkMWY5YzMuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pg=="},"prevInTopic":16033,"nextInTopic":16037,"prevInTime":16035,"nextInTime":16037,"topicId":16015,"numMessagesInTopic":60,"msgSnippet":"veering the thread slightly off to another angle... there are lots of engineering disciplines present @ Google. one engineering discipline that i suspect paid","rawEmail":"Return-Path: &lt;mca@...&gt;\r\nX-Sender: mca@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 72605 invoked from network); 30 Jul 2010 14:47:38 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m12.grp.re1.yahoo.com with QMQP; 30 Jul 2010 14:47:38 -0000\r\nX-Received: from unknown (HELO mail-ww0-f44.google.com) (74.125.82.44)\n  by mta2.grp.sp2.yahoo.com with SMTP; 30 Jul 2010 14:47:38 -0000\r\nX-Received: by wwj40 with SMTP id 40so1570676wwj.1\n        for &lt;rest-discuss@yahoogroups.com&gt;; Fri, 30 Jul 2010 07:47:37 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.227.20.77 with SMTP id e13mr1855151wbb.12.1280501256915; Fri, \n\t30 Jul 2010 07:47:36 -0700 (PDT)\r\nX-Received: by 10.216.137.15 with HTTP; Fri, 30 Jul 2010 07:47:36 -0700 (PDT)\r\nIn-Reply-To: &lt;20100730074504.b2d1f9c3.eric@...&gt;\r\nReferences: &lt;i2thrv+sf7t@...&gt;\n\t&lt;20100730030942.fd2e1420.eric@...&gt;\n\t&lt;20100730042632.8c990e8a.eric@...&gt;\n\t&lt;20100730054211.ff0f7e9a.eric@...&gt;\n\t&lt;20100730074504.b2d1f9c3.eric@...&gt;\r\nDate: Fri, 30 Jul 2010 10:47:36 -0400\r\nX-Google-Sender-Auth: VeZ9agoEDDVyQDzR5zpZfRVyWX0\r\nMessage-ID: &lt;AANLkTinZOq_-Ub9nF8eiD0rvUnRn2xmZB-Vf3Ywgw3nu@...&gt;\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Suresh &lt;sureshkk@...&gt;, rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: mike amundsen &lt;mamund@...&gt;\r\nSubject: Re: [rest-discuss] Google proposes RPC style APIs over REST\r\nX-Yahoo-Group-Post: member; u=69164307; y=FlDoDcL-YwipDnvIESljgAbSNOelD99OO4LZYwpNs5sE\r\nX-Yahoo-Profile: mamund\r\n\r\nveering the thread slightly off to another angle...\n\nthere are lots of engi=\r\nneering disciplines present @ Google. one\nengineering discipline that i sus=\r\npect paid a role in the new\n&quot;Discovery-Based API&quot; model is _social_ enginee=\r\nring.\n\ni think this is an example of a team @ Google offering their audienc=\r\ne\n(developers in this case) what Google thinks developers want; what\nGoogle=\r\n needs to do to get developers to adopt their platform.\n\ni, personally, hav=\r\ne seen the same thing happen at Microsoft.\n\nthese are smart people. they &quot;g=\r\net&quot; REST. however, they suspect their\ntarget audience does not.\n\nAlso, it&#39;s=\r\n been said on this list (more than once) that one of the\nprime barriers to =\r\nadopting the REST style (or any new pattern, tech,\netc.) is psycho-social. =\r\n people don&#39;t like change, don&#39;t find the new\nthing appealing, don&#39;t want t=\r\no lose something in the change, etc. and\nto prevent these perceived &quot;negati=\r\nve consequences&quot; from occurring,\npeople will attempt to argue against the n=\r\new thing using\npseudo-technical reasoning (basically unsupported assertions=\r\n like &quot;it\nwon&#39;t scale&quot; or &quot;no one will like it&quot;, and so forth). often, this=\r\n kind\nof arguing is effective in the social setting of the office since som=\r\ne\nin the conversation hold power over others (&quot;i can&#39;t convince my\nboss&quot;, e=\r\ntc.).\n\nFinally, the REST style is not complicated (it&#39;s one of the few\nnetw=\r\nork arch styles based in clear constraint-based terms), but it is\nhard work=\r\n. hard work is not very appealing. in my experience the REST\nstyle is most =\r\ndemanding on those building _clients_ not servers.\nGoogle is trying to get =\r\npeople to build &quot;consuming&quot; applications; the\nhardest part, IMO. i think Go=\r\nogle has decided to not try to convince\ntheir audience they need to adopt a=\r\n state-machine style in order to\nconsume the data Google is offering. inste=\r\nad, they decided to make\nconsuming Google data &quot;easy&quot; and &quot;familiar.&quot; hence=\r\n the adoption of an\nRPC over HTTP pattern.\n\nI think Google thought about th=\r\nis carefully and knows exactly what\nthey are doing. and they&#39;ll get lots of=\r\n adoption, too.\n\nmca\nhttp://amundsen.com/blog/\nhttp://mamund.com/foaf.rdf#m=\r\ne\n\n\n\n\nOn Fri, Jul 30, 2010 at 09:45, Eric J. Bowman &lt;eric@...&gt;=\r\n wrote:\n&gt;&gt;\n&gt;&gt; I made this too hard. =A0Forget the first GET. =A0The conditi=\r\nonal PUT uses\n&gt;&gt; if-none-match the Etag of /image.jpg?rot=3D90. =A0Makes th=\r\ne hypertext API\n&gt;&gt; even easier to write.\n&gt;&gt;\n&gt;\n&gt; What if we don&#39;t want to tr=\r\nansfer a representation of image.jpg to the\n&gt; client, or back to the server=\r\n? =A0No problem. =A0HEAD /image.jpg?rot=3D90 to\n&gt; get the Etag (or GET), fo=\r\nllowed by a conditional POST to /image.jpg of a\n&gt; representation of the des=\r\nired application state as application/x-www-\n&gt; form-urlencoded, i.e. POST /=\r\nimage.jpg?rot=3D90 if-none-match Etag.\n&gt;\n&gt; While this may technically solve=\r\n the lost-update problem, without\n&gt; actually transferring the image, how do=\r\nes the user (human or machine)\n&gt; know the image hasn&#39;t already been rotated=\r\n by 90 degrees? =A0If what\n&gt; Google meant to call awkward wasn&#39;t the notion=\r\n of the client doing the\n&gt; rotation, but the notion that the image needs to=\r\n be transferred to the\n&gt; client at all, then I don&#39;t see any way around it =\r\n-- without viewing\n&gt; the image, how would a human or machine user know that=\r\n it needs\n&gt; rotation, or by how many degrees?\n&gt;\n&gt; So my HEAD-conditional PO=\r\nST solution is only RESTful in situations\n&gt; where the user goal is to rotat=\r\ne an image regardless of current\n&gt; orientation. =A0Whereas this is the only=\r\n use-case Google&#39;s RPC supports,\n&gt; without solving for lost-update, making =\r\nit brittle even where lost-\n&gt; update isn&#39;t a problem: =A0Google&#39;s way, if t=\r\nhe confirmation of the POST\n&gt; is lost and the operation repeated as a resul=\r\nt, the rotation is 180\n&gt; degrees not 90. =A0My way, prevents this by proper=\r\nly identifying\n&gt; resources (for starters) and using conditional requests. =\r\n=A0Not brittle.\n&gt;\n&gt; There is nothing unRESTful about POST /image.jpg?rot=3D=\r\n90 being\n&gt; interpreted by the server to mean &quot;rotate image.jpg 90 degrees&quot; =\r\nunless\n&gt; such an operation isn&#39;t hypertext-driven, and provided the media t=\r\nype is\n&gt; application/x-www-form-urlencoded. =A0In which case &quot;rot&quot; is not a=\r\n &quot;verb&quot;,\n&gt; it is a noun identifying a stored procedure (regardless of HTTP =\r\nmethod).\n&gt;\n&gt; Google&#39;s POST, by way of comparison, is not a transfer of a\n&gt; =\r\nrepresentation of the desired resource state. =A0It&#39;s RPC. =A0I couldn&#39;t\n&gt; =\r\nmake this argument if Google allowed GET on the same URI -- this is the\n&gt; d=\r\nifference between identification of resources (regardless of how sloppy\n&gt; t=\r\nhe URIs) and custom verbs tunneled over POST.\n&gt;\n&gt; -Eric\n&gt;\n&gt;\n&gt; -------------=\r\n-----------------------\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n"}}