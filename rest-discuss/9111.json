{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":189321215,"authorName":"Alan Dean","from":"&quot;Alan Dean&quot; &lt;alan.dean@...&gt;","profile":"alan_james_dean","replyTo":"SENDER","senderId":"yWBXgdBJPWEjeg1zCvBuQsH2veKJ_VpEUiyXkkmhFpazydl2XBSiHHzAUscJRRzQp1ppQpjyRTFT5E8YCzLODBxe8YZnTtnc","spamInfo":{"isSpam":false,"reason":"6"},"subject":"&quot;The State of Proxy Caching&quot;","postDate":"1182344201","msgId":9111,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGY1Yjg2OStmNDdlQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":9110,"nextInTime":9112,"topicId":9111,"numMessagesInTopic":1,"msgSnippet":"Given the importance of caching to REST, I thought that it was worth highlighting this blog post by Mark Nottingham ","rawEmail":"Return-Path: &lt;alan.dean@...&gt;\r\nX-Sender: alan.dean@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 87672 invoked from network); 20 Jun 2007 12:57:14 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m43.grp.scd.yahoo.com with QMQP; 20 Jun 2007 12:57:14 -0000\r\nReceived: from unknown (HELO n13b.bullet.sp1.yahoo.com) (69.147.64.113)\n  by mta7.grp.scd.yahoo.com with SMTP; 20 Jun 2007 12:57:14 -0000\r\nReceived: from [216.252.122.219] by n13.bullet.sp1.yahoo.com with NNFMP; 20 Jun 2007 12:56:42 -0000\r\nReceived: from [66.218.69.6] by t4.bullet.sp1.yahoo.com with NNFMP; 20 Jun 2007 12:56:42 -0000\r\nReceived: from [66.218.67.197] by t6.bullet.scd.yahoo.com with NNFMP; 20 Jun 2007 12:56:42 -0000\r\nDate: Wed, 20 Jun 2007 12:56:41 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nMessage-ID: &lt;f5b869+f47e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Alan Dean&quot; &lt;alan.dean@...&gt;\r\nSubject: &quot;The State of Proxy Caching&quot;\r\nX-Yahoo-Group-Post: member; u=189321215; y=TOsSAJCeu9khgSLUFmzdbR3KhxRRd8hNKBwWpvzfHiwjLgti3Y-SFT_l\r\nX-Yahoo-Profile: alan_james_dean\r\n\r\nGiven the importance of caching to REST, I thought that it was worth \nhighl=\r\nighting this blog post by Mark Nottingham\n\nhttp://www.mnot.net/blog/2007/06=\r\n/20/proxy_caching\n\nHere are some quotes of what caught my attention:\n\n&quot;The =\r\nbad news is that more complex functionality is spottily \nsupported, at best=\r\n. I suspect this is because everyday browsing \ndoesn&#39;t exercise HTTP like m=\r\nore advanced uses like WebDAV, service \nAPIs, etc.&quot;\n\nRequest-URIs\n&quot;Every im=\r\nplementation was able to handle 1024 byte long request URIs, \nbut only a fe=\r\nw were configured to allow 8192 bytes.&quot;\n\nHTTP Methods \n&quot;GET, HEAD, POST, PU=\r\nT, DELETE, OPTIONS, and TRACE all seemed to work \nOK, but quite a few cache=\r\ns had problems with extension HTTP methods. \nIf you&#39;re using non-standard H=\r\nTTP methods (or even some of the more \nesoteric WebDAV methods; there are a=\r\n lot of them), beware.&quot;\n\nConditional Requests\n&quot;Validation was good in the s=\r\nimple cases, but tended to fall down in \nmore complex circumstances, especi=\r\nally in situations with weak ETags, \nIf-Range headers and other not-so-comm=\r\non things.&quot;\n\nCache Updates\n&quot;Caches are required to be updated by the header=\r\ns in 304 responses, \nas well as responses to HEAD [...] In practice, update=\r\ns were spotty \n[...] As a result, it&#39;s probably not a good idea to rely on =\r\n304 \nresponses or HEAD requests to update headers; better to just send a \n2=\r\n00 back with a whole new representation.&quot;\n\nCache Invalidation\n&quot;Sadly, one o=\r\nf the most useful parts of the caching model, \ninvalidation by side effect,=\r\n isn&#39;t supported at all. A few \nimplementations would invalidate the Reques=\r\nt-URI upon a DELETE, and \neven fewer upon PUT and DELETE, but that&#39;s it. As=\r\n a result, it&#39;s \nharder to take full advantage of the cache, because you&#39;ll=\r\n have to \nmark things as uncacheable if you care about changes being availa=\r\nble \nimmediately.&quot;\n\nWarnings\n&quot;The Warning header is almost never generated =\r\nby implementations, as \nfar as I saw; disappointing. Don&#39;t rely on getting =\r\nwarnings from \ncaches about stale responses [...]&quot;\n\nI would have liked to s=\r\nee something about Vary. Otherwise, very \ninteresting.\n\nRegards,\nAlan Dean\n=\r\nhttp://thoughtpad.net/alan-dean\nhttp://simplewebservices.org\n\n\n"}}