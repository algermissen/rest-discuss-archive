{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"Ipzejypi3HDXOfYMpAJFSdsBzlT2otA-PKCqtbcFeuW7Fk-4NR3OdV501mto9UQ2e44V5HW2e6pkMkcl_hue_lMsFtJZxZBJzwH0JV0G0g","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] API versioning","postDate":"1357624633","msgId":19244,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTMwMTA3MjI1NzEzLjNiMWZmNThjLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDlEOTQ1MkIwLUNCNUItNEJGNy04RjE4LUUxMEY2QjVGQTRCNUBnbWFpbC5jb20+","referencesHeader":"PGtjZm1jMCthb2lkQGVHcm91cHMuY29tPgk8MjAxMzAxMDcyMDM3MTkuNWJhM2ZkZDIuZXJpY0BiaXNvbnN5c3RlbXMubmV0Pgk8OUQ5NDUyQjAtQ0I1Qi00QkY3LThGMTgtRTEwRjZCNUZBNEI1QGdtYWlsLmNvbT4="},"prevInTopic":19243,"nextInTopic":19245,"prevInTime":19243,"nextInTime":19245,"topicId":19240,"numMessagesInTopic":13,"msgSnippet":"... Perfectly good HTTP API practice; REST, not so much.  The point of media types is to provide loose coupling based on shared understanding of how the","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 98636 invoked from network); 8 Jan 2013 05:57:22 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m16.grp.sp2.yahoo.com with QMQP; 8 Jan 2013 05:57:22 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 8 Jan 2013 05:57:22 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id C6952509B7;\n\tTue,  8 Jan 2013 00:57:21 -0500 (EST)\r\nDate: Mon, 7 Jan 2013 22:57:13 -0700\r\nTo: Keith Hassen &lt;keith.hassen@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-Id: &lt;20130107225713.3b1ff58c.eric@...&gt;\r\nIn-Reply-To: &lt;9D9452B0-CB5B-4BF7-8F18-E10F6B5FA4B5@...&gt;\r\nReferences: &lt;kcfmc0+aoid@...&gt;\n\t&lt;20130107203719.5ba3fdd2.eric@...&gt;\n\t&lt;9D9452B0-CB5B-4BF7-8F18-E10F6B5FA4B5@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.1.1 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] API versioning\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nKeith Hassen wrote:\n&gt; \n&gt; This seems to be a recommended practice that I&#39;ve encountered in\n&gt; reading about RESTful implementations.\n&gt; \n\nPerfectly good HTTP API practice; REST, not so much.  The point of\nmedia types is to provide loose coupling based on shared understanding\nof how the representation is to be decoded.  Not tight coupling based\non interpreting the content of the representation.  I&#39;ve never seen an\norder API that couldn&#39;t be represented as HTML; despite any number of\nvariations on this theme (or versions within), the media type doesn&#39;t\nvary between more order APIs on the Web than I can count.\n\nREST has no notion of resource &quot;type&quot; let alone of exposing same on the\nwire, so I&#39;ve never understood why this solution is so prevalent in REST\ndiscussions.  Just media types, which are agnostic as to what &quot;type&quot; of\nresource is being represented (with rare exceptions as parameters).\n\n&gt;\n&gt; &gt; Anything else is up to the user-agent to work out.  This is actually\n&gt; &gt; easier for m2m than h2m; a v1 m2m client should already ignore any\n&gt; &gt; hypertext it doesn&#39;t understand, rolling out v2 can then re-use any\n&gt; &gt; non-deprecated bits of the API already present plus the new stuff,\n&gt; &gt; and ignore the deprecated stuff.  Can&#39;t it?\n&gt; \n&gt; Not always, at least not in my experience. :)  I have found that\n&gt; while breaking changes don&#39;t happen often, they *do* happen.  Add to\n&gt; this the possibility of different types of API consumers that start\n&gt; off implementing your APIs the same way, but slowly (or rapidly!)\n&gt; diverge over time.  In some cases new resources (and thus new URIs)\n&gt; will suffice, but in other cases what we are doing is very\n&gt; specifically *evolving* the resource representation to accommodate\n&gt; new requirements.\n&gt; \n\nThen design for graceful degradation (or progressive enhancement) using\nclient-side feature detection.  Just saying there&#39;s no need to swing\nthe conneg hammer to turn this particular screw.\n\n-Eric\n\n"}}