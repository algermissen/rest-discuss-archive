{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"8cpSIthI22KJVXQ_F8fqheax52q_BHGYkWeNQeyT5bu5FuW7fmEFQk8Z0qqMFO-vS3hUzlVE7bSqc4zoXOa01PuPyshw4JmKnrOS3YUjDUE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] More media type questions","postDate":"1286349412","msgId":16722,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENDOEQxMDlDLTUxNUItNEVDNC1BRTdCLTU5MUE4MjdDOTIwQUBtYWMuY29tPg==","inReplyToHeader":"PEFBTkxrVGltZUZ1Uk1Qdl9GTkZDUThHT0xUeEV4c05KVFVKY3VpVkQwOGJUX0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGltZUZ1Uk1Qdl9GTkZDUThHT0xUeEV4c05KVFVKY3VpVkQwOGJUX0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":16721,"nextInTopic":16727,"prevInTime":16721,"nextInTime":16723,"topicId":16718,"numMessagesInTopic":6,"msgSnippet":"Will, ... Serendipitous reuse happens any time an application is realized (when a user agent engages in communication with servers on behalf of some user","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 11279 invoked from network); 6 Oct 2010 07:16:58 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m15.grp.re1.yahoo.com with QMQP; 6 Oct 2010 07:16:58 -0000\r\nX-Received: from unknown (HELO asmtpout026.mac.com) (17.148.16.101)\n  by mta2.grp.re1.yahoo.com with SMTP; 6 Oct 2010 07:16:58 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; CHARSET=US-ASCII\r\nX-Received: from [172.16.2.8] ([195.226.174.36])\n by asmtp026.mac.com (Oracle Communications Messaging Exchange Server 7u4-18.01\n 64bit (built Jul 15 2010)) with ESMTPSA id &lt;0L9U006G7XK52C80@...&gt;\n for rest-discuss@yahoogroups.com; Wed, 06 Oct 2010 00:16:56 -0700 (PDT)\r\nIn-reply-to: &lt;AANLkTimeFuRMPv_FNFCQ8GOLTxExsNJTUJcuiVD08bT_@...&gt;\r\nDate: Wed, 06 Oct 2010 09:16:52 +0200\r\nCc: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-id: &lt;CC8D109C-515B-4EC4-AE7B-591A827C920A@...&gt;\r\nReferences: &lt;AANLkTimeFuRMPv_FNFCQ8GOLTxExsNJTUJcuiVD08bT_@...&gt;\r\nTo: Will Hartung &lt;willh@...&gt;\r\nX-Mailer: Apple Mail (2.1081)\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] More media type questions\r\nX-Yahoo-Group-Post: member; u=289191104; y=YyuSJ0b7UHFg-1JuP5f3TCZ-BdNTRnJCXYKU9fcIqJy5nZXm2MYehYyS\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nWill,\n\nOn Oct 6, 2010, at 3:52 AM, Will Hartung wrote:\n\n&gt; I was hoping I could get some more clarity on some things.\n&gt; \n&gt; What are some examples of serendipitous reuse that the Web offers\n&gt; applications today?\n\nSerendipitous reuse happens any time an application is realized (when a user agent engages in communication with servers on behalf of some user goal).\n\nOne might argue that services are built with some primary application in mind and that this application is then not reuse, but I think that is secondary. What is important is that REST enables clients to use what they are given by the servers in previously unanticipated ways. Hence we call it *re*-use and not sort of *again*-use.\n\n&gt; \n&gt; One, I guess, is Caching. It has been suggested that admins won&#39;t\n&gt; cache unfamiliar data types.\n\nI do not see how that relates to reuse? Can you explain?\n\n\nJan\n\n&gt; \n&gt; But what are some other examples? I heard a mention of link caching,\n&gt; or some such thing. What is that referring to? Is that premised on a\n&gt; proxy perhaps prefetching links in an HTML payload much like some\n&gt; browsers do today? Something of that nature?\n&gt; \n&gt; Are search engine search bots an example?\n&gt; \n&gt; My other question refers to the use of bundling domain specific\n&gt; information in a generic media type.\n&gt; \n&gt; For example, a campaign donation. In theory, in the US, candidates\n&gt; need to make their campaign donations accessible to the public.\n&gt; \n&gt; It&#39;s not a leap to suggest a campaign website publishing a service\n&gt; that returns an Atom list of donations based on some query.\n&gt; \n&gt; For example, GET /donations?query=county:Los%20Angeles to see all\n&gt; donations for Los Angeles county.\n&gt; \n&gt; And the result can have links to the actual donation documents.\n&gt; \n&gt; On the one hand, these donation documents could be\n&gt; application/x-campaign-donation+xml, with a specification posted on\n&gt; the campaign website. But that&#39;s an unregistered media type.\n&gt; \n&gt; &lt;donation&gt;\n&gt;    &lt;name&gt;Bob Eubanks&lt;/name&gt;\n&gt;    &lt;date&gt;09/01/2010&lt;/date&gt;\n&gt;    &lt;amount&gt;25.00&lt;/amount&gt;\n&gt; &lt;/donation&gt;\n&gt; \n&gt; On the other hand, it could be simply text/html:\n&gt; \n&gt; &lt;html&gt;\n&gt; &lt;body&gt;\n&gt; &lt;dl&gt;\n&gt;    &lt;dt&gt;Name&lt;/dt&gt;&lt;dd&gt;Bob Eubanks&lt;/dd&gt;\n&gt;    &lt;dt&gt;Date&lt;/dt&gt;&lt;dd&gt;09/01/2010&lt;/dd&gt;\n&gt;    &lt;dt&gt;Amount&lt;/dt&gt;&lt;dd&gt;$25.00&lt;/dd&gt;\n&gt; &lt;/dt&gt;\n&gt; &lt;/body&gt;\n&gt; &lt;/html&gt;\n&gt; \n&gt; Here&#39;s my issue.\n&gt; \n&gt; The application/x-campaign-donation+xml is not self descriptive, since\n&gt; it is unregistered. Therefore it has no expectation of getting any\n&gt; reuse. It may well not even be cached, even with appropriate caching\n&gt; headers.\n&gt; \n&gt; The HTML version is self descriptive, but it&#39;s only self descriptive\n&gt; of HTML. It&#39;s not self descriptive of a campaign donation. There is no\n&gt; way to identify this resource as a campaign donation. It can benefit\n&gt; from some reuse, notably caching, potentially google, etc. But there\n&gt; can be no expectation of reuse at the domain level. For example, if\n&gt; someone wanted to track the rate of donations by county, they can not\n&gt; do that on the HTML payload, as they have no documentation of the\n&gt; domain elements within the payload. This has no semantics outside of\n&gt; HTML, because that&#39;s all it is identified with.\n&gt; \n&gt; Much like the difference between application/xml and\n&gt; application/x-campaign-donation+xml. Both are XML, but one has the\n&gt; campaign donation semantics associated with it.\n&gt; \n&gt; That&#39;s my conflict with all this. That using generic containers, you\n&gt; may only be able to get domain knowledge through introspection, yet\n&gt; introspection is considered a bad practice, that&#39;s one reason cited\n&gt; why application/xml is not a proper media type to use.\n&gt; \n&gt; I was hoping this conundrum could be discussed to learn how in\n&gt; practice this conflict can be overcome.\n&gt; \n&gt; Regards,\n&gt; \n&gt; Will Hartung\n&gt; (willh@...)\n&gt; \n&gt; \n&gt; ------------------------------------\n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n\n\n"}}