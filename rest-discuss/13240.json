{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":289191104,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"3urLlsApcrwysiKuRxWp9xKHnXMhpo97OTOVZEZGBhSoaOpJ9KGa8t8_rlOzekxk5haVtfx_Py2dzXq2Mc4M4DO-RPeAnGpfQ83Q9KFvqUE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Media Type Version Negotiation","postDate":"1252927061","msgId":13240,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQzRERFRkFELTMxMTItNEFGRC05QjIwLTUzNjJCNUJDMUJBNUBtYWMuY29tPg==","inReplyToHeader":"PGg4ZWVucStuYTV1QGVHcm91cHMuY29tPg==","referencesHeader":"PGg4ZWVucStuYTV1QGVHcm91cHMuY29tPg=="},"prevInTopic":13238,"nextInTopic":13241,"prevInTime":13239,"nextInTime":13241,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"Noah, ... The content type header should express the complete payload semantics, otherwise understanding the payload is dependent on out of band information","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 10991 invoked from network); 14 Sep 2009 11:21:32 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m2.grp.sp2.yahoo.com with QMQP; 14 Sep 2009 11:21:32 -0000\r\nX-Received: from unknown (HELO asmtpout017.mac.com) (17.148.16.92)\n  by mta2.grp.re1.yahoo.com with SMTP; 14 Sep 2009 11:21:32 -0000\r\nMIME-version: 1.0\r\nContent-type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nX-Received: from [192.168.2.101] (p54906068.dip.t-dialin.net [84.144.96.104])\n by asmtp017.mac.com\n (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec 16 2008; 32bit))\n with ESMTPSA id &lt;0KPY00ISQKPIPC70@...&gt; for\n rest-discuss@yahoogroups.com; Mon, 14 Sep 2009 04:17:47 -0700 (PDT)\r\nCc: rest-discuss@yahoogroups.com\r\nMessage-id: &lt;D3DDEFAD-3112-4AFD-9B20-5362B5BC1BA5@...&gt;\r\nTo: noahsingleton &lt;noahcampbell@...&gt;\r\nIn-reply-to: &lt;h8eenq+na5u@...&gt;\r\nContent-transfer-encoding: quoted-printable\r\nDate: Mon, 14 Sep 2009 13:17:41 +0200\r\nReferences: &lt;h8eenq+na5u@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] Re: Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=289191104; y=8heB7pG9yIA0sgovwE3rp4ZWk3SK6h0s-X9E3oUDwMTLNdqV61aKQIHB\r\nX-Yahoo-Profile: algermissen1971\r\n\r\nNoah,\n\nOn Sep 11, 2009, at 11:16 PM, noahsingleton wrote:\n\n&gt; My loose analy=\r\nsis of the issue is that most enterprise developers  \n&gt; are dealing with ne=\r\nw types that flow directly from their code. Tools  \n&gt; bang out a schema tha=\r\nt looks like structured data. The class/record  \n&gt; fidelity is very close. =\r\nTransforming from angle brackets to code,  \n&gt; using a framework, is comfort=\r\nable for a rank and file enterprise  \n&gt; developer. What happens after this =\r\nis where trouble begins. A small  \n&gt; change to the class results in a misma=\r\ntch and the need to rev the  \n&gt; version of the XML-Schema to accommodate th=\r\ne change, hence the  \n&gt; question on this mailing list.\n&gt;\n&gt; Someone made the=\r\n assumption (correctly, IMO) that media types will  \n&gt; not rev all that oft=\r\nen in the wild because it limits adoption. image/ \n&gt; jpeg, text/html, appli=\r\ncation/atompub+svc, are all nice, but life is  \n&gt; different inside the ente=\r\nrprise. Often there are efforts to  \n&gt; canonicalise the &quot;core&quot; business obj=\r\nects and this helps, but as it  \n&gt; was pointed out earlier, these rev as bu=\r\nsiness definitions change=85 \n&gt; and they&#39;re typically built on XML-Schema s=\r\no they&#39;re just bigger  \n&gt; types. The vicious reality of versioning is typic=\r\nally delayed, but  \n&gt; not for long enough.\n&gt;\n&gt; Extensions in XML-Schema pro=\r\nvide some relief, but these black holes  \n&gt; in a schema definition force th=\r\ne developer into an unnatural  \n&gt; position of having to query a document fo=\r\nr a value instead of using  \n&gt; offsets (either numeric or via &quot;getters&quot;). I=\r\nf you throw XML-Schema  \n&gt; out it forces engineers to query the document wi=\r\nth the assumption  \n&gt; that you&#39;re only interested in what you know, which I=\r\n believe is the  \n&gt; beginning steps to HATEOAS, The catch is that by not us=\r\ning XML- \n&gt; Schema you&#39;ll get laughed out of a design meeting in any enterp=\r\nrise.\n&gt;\n&gt; So where is the middle ground here?\n&gt;\n&gt; One idea I&#39;ve been kickin=\r\ng around is to look at XHTML and how the  \n&gt; XML-Schema works for creating =\r\na forward extensible media-format. I  \n&gt; can&#39;t point to successful adoption=\r\n in the enterprise from my  \n&gt; experience, but it works (granted not perfec=\r\ntly) for the web. It  \n&gt; passes the sniff test from an enterprise point of =\r\nview because the  \n&gt; safety of XML-Schema is there, but the structure of th=\r\ne resulting  \n&gt; document is very loose forcing the developer to query the d=\r\nocument.  \n&gt; Querying can be done via XQuery or a Dom navigation, it&#39;s stil=\r\nl XML  \n&gt; so not completely foreign.\n&gt;\n&gt; In thinking about this, applicatio=\r\nn/xhtml+xml becomes the media- \n&gt; type, but it begs how find the &quot;entity&quot; y=\r\nou&#39;re searching for in this  \n&gt; bag of angle brackets. I see the question g=\r\nets pushed to while  \n&gt; looking for rel tags. HTML5 has a discussion for pr=\r\noposed rel types  \n&gt; and it seems open, so enterprises can go nuts and add =\r\ntheir own  \n&gt; (versioned) type. I don&#39;t know if this is a better place to a=\r\nllow  \n&gt; type proliferation, but it keeps the discussion away from the  \n&gt; =\r\ncontent-type http header.\n\nThe content type header should express the compl=\r\nete payload semantics,  \notherwise understanding the payload is dependent o=\r\nn out of band  \ninformation which creates unnecessary coupling and limits t=\r\nhe  \nvisibility (e.g. for intermediaries).\n\nJan\n\n\n\n&gt;\n&gt; -Noah\n&gt;\n&gt; --- In res=\r\nt-discuss@yahoogroups.com, Tim Williams &lt;williamstw@...&gt;  \n&gt; wrote:\n&gt;&gt;\n&gt;&gt; I=\r\n&#39;m looking for pointers to best practices to versioning\n&gt;&gt; representations =\r\nand support for client negotiation of specific\n&gt;&gt; versions.  To provide dif=\r\nferent representations of the same resource,\n&gt;&gt; the media type alone is suf=\r\nficient to drive the content type\n&gt;&gt; negotiation.  For example, I might pro=\r\nvide\n&gt;&gt;\n&gt;&gt; &lt;link type=3D&quot;application/atom+xml&quot;...\n&gt;&gt; &lt;link type=3D&quot;applicat=\r\nion/rss+xml&quot;...\n&gt;&gt;\n&gt;&gt; as alternate representations of the same resource.  T=\r\nhe client could\n&gt;&gt; then be expected to pick a representation that it knows =\r\nhow to  \n&gt;&gt; process\n&gt;&gt; and GET it.\n&gt;&gt;\n&gt;&gt; But suppose we have a different ve=\r\nrsion of the *same* media type\n&gt;&gt; &quot;myformat&quot; - v1.0 and v2.0?  To complicat=\r\ne matters, let&#39;s suppose  \n&gt;&gt; that\n&gt;&gt; [due to arrogant, insensitive develop=\r\ners:)] v2.0 is not backwards\n&gt;&gt; compatible with v1.0.  Assuming that the se=\r\nrvice is capable of  \n&gt;&gt; serving\n&gt;&gt; representations in both v1.0 and v2.0, =\r\nthe question becomes how might\n&gt;&gt; the client negotiate one version over the=\r\n other for the *same* media\n&gt;&gt; type?\n&gt;&gt;\n&gt;&gt; I&#39;ve attempted to think through =\r\nthe following:\n&gt;&gt;\n&gt;&gt; 1) (I can assume XML) XML versioning alone won&#39;t do be=\r\ncause there&#39;s  \n&gt;&gt; no\n&gt;&gt; way to indicate in the link itself that it&#39;s one v=\r\nersion of the  \n&gt;&gt; schema\n&gt;&gt; over the other.  So even if the client retriev=\r\ned a v2.0  \n&gt;&gt; representation\n&gt;&gt; and stopped processing it after seeing an =\r\nunfamiliar namespace (for\n&gt;&gt; example), it has no way to subsequently reques=\r\nt the older version.\n&gt;&gt;\n&gt;&gt; 2) My initial response was to simply add the ver=\r\nsioning information  \n&gt;&gt; to\n&gt;&gt; the content-type itself (e.g. application/my=\r\nformat.v20 and\n&gt;&gt; application/myformat.v10).  This makes negotiation and ex=\r\ntensibility\n&gt;&gt; clean and elegant, but causes me two concerns:  the\n&gt;&gt; &quot;expl=\r\nosion-of-media-type&quot; concern and the\n&gt;&gt; &quot;nobody-else-seems-to-be-doing-it-t=\r\nhat-way&quot;(based on current IANA)\n&gt;&gt; concern.\n&gt;&gt;\n&gt;&gt; 3)  The next thing that c=\r\nomes to mind is something like the &quot;level&quot;\n&gt;&gt; accept-extension exampled in =\r\nrfc2616 (e.g. text/html;level=3D1).  In my\n&gt;&gt; scenario, would be something =\r\nlike: application/myformat;version=3D2.0 I\n&gt;&gt; suppose.\n&gt;&gt;\n&gt;&gt; I&#39;m aware, btw=\r\n, of the value of re-using existing media types, this\n&gt;&gt; may be an edge cas=\r\ne for some but I&#39;d like to address an unfortunate\n&gt;&gt; reality inside some fa=\r\nst moving enterprises though.\n&gt;&gt;\n&gt;&gt; Thoughts/pointers appreciated...\n&gt;&gt; --t=\r\nim\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ------------------------------------\n&gt;\n&gt; Yahoo! Groups Link=\r\ns\n&gt;\n&gt;\n&gt;\n\n\n"}}