{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":429395558,"authorName":"Robert Brewer","from":"&quot;Robert Brewer&quot; &lt;fumanchu@...&gt;","profile":"aminusfu","replyTo":"SENDER","senderId":"r3WVMrNdTXMlacI5q3JDGA76Wok5qc_vsURto9JMQ5BjFjWKZVPMUSGirMFT6-cqvfjXrUWserGUsc8tp6oebLiDAl5wTtnZq4J9iQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"RE: [rest-discuss] Alternate media types for different methods?","postDate":"1332342230","msgId":18676,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEYxOTYyNjQ2RDNCNjQ2NDJCN0M5QTA2MDY4RUUxRTY0MTRFREZCRjFAZXgxMC5ob3N0ZWRleGNoYW5nZS5sb2NhbD4=","inReplyToHeader":"PENBQjIzK2l5WmFXT2Z4bU5ya1JaTTU2WTNHMjliZHlfY3gxd1JRUXBHc1lxbjBSamE9d0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PENBQjIzK2l5WmFXT2Z4bU5ya1JaTTU2WTNHMjliZHlfY3gxd1JRUXBHc1lxbjBSamE9d0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":18670,"nextInTopic":0,"prevInTime":18675,"nextInTime":18677,"topicId":18668,"numMessagesInTopic":3,"msgSnippet":"... I ve found that simply partitioning off a section of the resource works very well for this. In one of our JSON-based media types, the entity looks","rawEmail":"Return-Path: &lt;fumanchu@...&gt;\r\nX-Sender: fumanchu@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 2698 invoked from network); 21 Mar 2012 15:03:54 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m16.grp.sp2.yahoo.com with QMQP; 21 Mar 2012 15:03:54 -0000\r\nX-Received: from unknown (HELO bh1.myhostedexchange.com) (69.50.2.84)\n  by mta5.grp.sp2.yahoo.com with SMTP; 21 Mar 2012 15:03:54 -0000\r\nX-Received: from ex10.myhostedexchange.com ([69.50.2.84]) by bh1.myhostedexchange.com with Microsoft SMTPSVC(6.0.3790.4675);\n\t Wed, 21 Mar 2012 08:03:51 -0700\r\nX-MimeOLE: Produced By Microsoft Exchange V6.5\r\nContent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nDate: Wed, 21 Mar 2012 08:03:50 -0700\r\nMessage-ID: &lt;F1962646D3B64642B7C9A06068EE1E6414EDFBF1@...&gt;\r\nIn-Reply-To: &lt;CAB23+iyZaWOfxmNrkRZM56Y3G29bdy_cx1wRQQpGsYqn0Rja=w@...&gt;\r\nX-MS-Has-Attach: \r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [rest-discuss] Alternate media types for different methods?\r\nThread-Index: Ac0Hauudv4VUEfXRRjGNUo/4ysXvzAAB0GyA\r\nReferences: &lt;CAB23+iyZaWOfxmNrkRZM56Y3G29bdy_cx1wRQQpGsYqn0Rja=w@...&gt;\r\nTo: &quot;Jim Purbrick&quot; &lt;jimpurbrick@...&gt;,\n\t&lt;rest-discuss@yahoogroups.com&gt;\r\nReturn-Path: fumanchu@...\r\nX-OriginalArrivalTime: 21 Mar 2012 15:03:51.0370 (UTC) FILETIME=[D371DAA0:01CD0773]\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Robert Brewer&quot; &lt;fumanchu@...&gt;\r\nSubject: RE: [rest-discuss] Alternate media types for different methods?\r\nX-Yahoo-Group-Post: member; u=429395558; y=OJ2OxMqnAxNqrI_tOHhaLm3XUXOBtMXHPTgIIVUhau5vG3U\r\nX-Yahoo-Profile: aminusfu\r\n\r\nJim Purbrick wrote:\n&gt; We&#39;re coming up with a relatively common problem in o=\r\nur API where we\n&gt; define a media type then need to make different parts of =\r\nit optional\n&gt; for GET (remove references that are not valid to allow HATEOA=\r\nS) and\n&gt; POST (leave out parts of the media type that are filled in by the\n=\r\n&gt; server when creating a new resource).\n&gt; \n&gt; Rather than defining all of th=\r\ne attributes as optional (which often\n&gt; makes most of the media type option=\r\nal) and requiring clients and\n&gt; servers to check for the existence of many =\r\nattributes, it seems better\n&gt; to instead define vnd.mycorp.myapp.Widget (us=\r\ned for GET and PUT) and\n&gt; vnd.mycorp.myapp.NewWidget (used for POST) as sep=\r\narate media types\n&gt; which make different parts of the representation option=\r\nal.\n&gt; \n&gt; This seems like the most RESTful/HTTP friendly way to solve the\n&gt; =\r\nproblem, does anyone see any problems with it (other than it creating\n&gt; lot=\r\ns of similar media types)?\n\nI&#39;ve found that simply partitioning off a secti=\r\non of the resource works\nvery well for this. In one of our JSON-based media=\r\n types, the entity\nlooks something like:\n\n{&quot;self&quot;: &quot;http://somewhere.exampl=\r\ne/things/123/&quot;,\n &quot;parent&quot;: &quot;/things/18/&quot;,\n &quot;user&quot;: &quot;/users/jimpurbrick/&quot;,\n =\r\n&quot;body&quot;: {\n    &quot;status&quot;: &quot;active&quot;,\n    &quot;foo&quot;: &quot;bar&quot;\n }\n} \n\nIt&#39;s part of the =\r\nAPI that everything in the &quot;body&quot; member is mutable on\nupdate, while &quot;paren=\r\nt&quot;, and &quot;user&quot; are only mutable on insert (and\n&quot;self&quot; isn&#39;t mutable at all =\r\nat that URI). The client can still send\n&quot;parent&quot; and &quot;user&quot; members, and pr=\r\nobably should if they&#39;re using PUT\ninstead of PATCH, but the server will re=\r\nplace those supplied values with\nthe existing ones to make the resource con=\r\nsistent with its internal\nconstraints.\n\n\nRobert Brewer\nfumanchu@...\n=\r\n\n\n"}}