{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"_WNhYdzvdquuSnVIaQihS5D7nyq93Xy8MalWb2EHa_3vSfD671WR-yCGoYvvK9zFvcIQwGOQUE6zPZjyQQNNlvUuGH2xpA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [XML-SIG] REST made more concrete still","postDate":"1014182269","msgId":757,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNzMzMTdELkRERjY1MUJBQHByZXNjb2QubmV0Pg==","referencesHeader":"PDNDNzJGNDVDLjNDRDUyNzRBQHByZXNjb2QubmV0PiA8MjAwMjAyMTkyMjM4MzkuQTIwMjA5QG1vemFydC5tZW1zLWV4Y2hhbmdlLm9yZz4="},"prevInTopic":0,"nextInTopic":758,"prevInTime":756,"nextInTime":758,"topicId":757,"numMessagesInTopic":8,"msgSnippet":"... It s very rough right now. Release early and often. It s changed its name three times this week. ;) More a direction to get people thinking then something","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_2); 20 Feb 2002 05:20:14 -0000\r\nReceived: (qmail 3733 invoked from network); 20 Feb 2002 05:20:13 -0000\r\nReceived: from unknown (216.115.97.172)\n  by m10.grp.snv.yahoo.com with QMQP; 20 Feb 2002 05:20:13 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta2.grp.snv.yahoo.com with SMTP; 20 Feb 2002 05:20:13 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1K5KAp18181;\n\tTue, 19 Feb 2002 21:20:10 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g1K5K9L31882;\n\tTue, 19 Feb 2002 21:20:09 -0800\r\nMessage-ID: &lt;3C73317D.DDF651BA@...&gt;\r\nDate: Tue, 19 Feb 2002 21:17:49 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: akuchlin@...\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [XML-SIG] REST made more concrete still\r\nReferences: &lt;3C72F45C.3CD5274A@...&gt; &lt;20020219223839.A20209@...-exchange.org&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nakuchlin@... wrote:\n&gt; \n&gt; On Tue, Feb 19, 2002 at 04:57:00PM -0800, Paul Prescod wrote:\n&gt; &gt;http://www.prescod.net/wrdl.html\n&gt; \n&gt; Hmmm... I&#39;m trying to wrap my head around this.\n\nIt&#39;s very rough right now. Release early and often. It&#39;s changed its\nname three times this week. ;) More a direction to get people thinking\nthen something clearly implementable.\n\n&gt; * In the example, purchaseOrder has the query string declared as type\n&gt;   integer.  In the invocation example, at no point is this integer parameter\n&gt;   supplied.\n\nYeah, I didn&#39;t align the examples. That&#39;s confusing. For now I&#39;ll\nmention that fact and then later I&#39;ll go through and do that.\n\n&gt; * I don&#39;t understand the match attribute of &#39;representation&#39;; does it mean\n&gt;   that &quot;if the XPath expression returns a non-empty set of nodes, the\n&gt;   document is considered to match this representation type.  The set\n&gt;   of matching nodes is then discarded, having served its purpose.&quot;\n\nNow that you mention it, the equivalent in XSLT is not exactly match but\n&quot;test&quot; \n\nhttp://www.w3schools.com/xsl/xsl_if.asp\n\nI&#39;ll add a pointer to that for those who don&#39;t know XSLT.\n\n&gt; * I also don&#39;t understand the sentence about &quot; This is not a problem\n&gt;   because representations are only checked in a boolean fashion...&quot;\n&gt;   This doesn&#39;t clarify what happens if a document matches multiple\n&gt;   representation types; is it considered to be all of those matching types,\n&gt;   or just one of them?\n\nAt the time I wrote that it really didn&#39;t matter. It&#39;s like a type check\nof whether a thing is an integer or a float. As long as it matches you\ndon&#39;t really care. Once the API is flushed out we might start caring\nbecause coding is easier if you can ask &quot;what&#39;s this I&#39;ve got&quot; instead\nof looking at the elements and attributes. But then maybe that should be\nleft to an orthogonal (but integrated) XML data binding layer.\n\n&gt; * How do you know when a new resource has been created in response to\n&gt;   some request?  Is that indicated in the returned document in some way\n&gt;   dependent on its schema?  (Say, if it has a &lt;new-resource&gt; element in it.)\n&gt;   Or is it an HTTP header or something like that?\n\nHave to think a little bit more about that to check whether I&#39;ve got it\nright...\n\nThe only methods that really create new resources are PUT and POST. PUT\nalways creates a new resouce unless it fails. POST returns a Location:\nheader. I&#39;ve been back and forth over and over again on whether this\nneeds to be declared in advance and what it means for the API. \n\nView 1:\n\nThe Location: header is probably irrelevant...the representation\nreturned by POST should point to the new thing that&#39;s created. Do you\ncare whether it really, really created something new or if it happened\nto point to something it already had?\n\nView 2:\n\nHTTP privileges a particular URI in the entity as the &quot;location&quot; URI. I\nthink that logically everything else in the entity is just wrapping\naround that main URI. So &quot;creation&quot; is important and should have\nfirst-class support.\n\nThis minute View 2 is stronger in my mind.\n\n&gt; * In the &#39;po&#39; representation type, what are the approve and cancel\n&gt;   references intended to be, semantically?  Are they resources that you could\n&gt;   POST to in ordr to approve or cancel the order, or something else?\n\nYes, they are sort of trigger resources. Since REST-style denies you the\nluxury of attaching arbitrary methods to resource you &quot;run out&quot; of\nmethods sometimes. So you either \n\n a) pull this trick\n b) do RPC (POST a do-what-I want)\n or \n c) think of a noun-ification of what you want and POST it. As in post a\n&quot;CANCELLED-PO resource&quot;. I&#39;m not sure if this is really different than\nRPC.\n\nI think this trick is best because when we get event-handling and\norchestration integrated you&#39;ll be able to set up a chain of events so\nthat when resource A changes it triggers a POST to one of these trigger\nresources. So you could say that when the boss&#39;s digital signature\nresource appears in one place the approval method is triggered\nautomatically.\n\n&gt;   (Having them be xsltResources makes it really unclear what they&#39;re\n&gt;   supposed to be.)\n\nTypo. I&#39;ll change those to &quot;digitalSignatureResource&quot; to be more\nrealistic. And really they could respond to PUT instead of POST. This\nmake sense to you:\n\n&lt;resourceType name=&quot;digitalSignature&quot;\nrepresentations=&quot;some-dsig-standard&quot;&gt;\n    &lt;method name=&quot;PUT&quot;/&gt;\n&lt;/resourceType&gt;\n\n&gt; * Am I going to have to invent 187 different schemas for an application?\n&gt;   Say a resource has a bunch of subresources: an owner, a history, etc.\n&gt;   Some of these might use an existing schema -- RDF, HTML, whatever --\n&gt;   but some might return something simple or ad hoc, such as just a\n&gt;   string or an integer.  Do I have to dress up this return value as:\n&gt; \n&gt; &lt;dummy-root&gt;http://newuri/&lt;/dummy-root&gt;\n&gt; &lt;dummy-root&gt;35&lt;/dummy-root&gt;\n&gt; \n&gt;   Or could I declare &quot;treat the body of this action as a string/integer/\n&gt;   new URI&quot;?\n\nSeveral answers to this:\n\n1. I would expect these minor sub-resources to be grouped into a single\nlogical object. REST encourages coarse-grained, not fine-grained\ninteractions -- big difference from RPC.\n\n2. I may one day add WebDAV support. WebDAV is very REST-y in that it is\nan HTTP extension even if it is not perfectly REST-y. And it has a\nfirst-class notion of properties.\n\n3. But even to do that ad-hoc stuff you don&#39;t need 187 schemas. You can\nuse the XML-RPC or SOAP encoding or WDDX schema for hundreds of ad-hoc\napps. Or just define a schema where &lt;xsd:integer&gt; is of type\n&lt;xsd:integer&gt; etc.\n\n4. You could also use MIME-RPC media-types instead of XML at all.\nhttp://www.mime-rpc.com/protocol.html\n\n&gt; I have a project currently specified as a set of XML-RPC interfaces;\n&gt; RESTifying it will make an interesting thought experiment.\n\nCool. I don&#39;t always suggest switching from XML-RPC to REST, though. The\nterminology I use (now) is that XML-RPC is better for &quot;cross-network\nscripting&quot; and REST is for building big, long-lived, scalable,\nextensible apps.\n\nI&#39;ll fix those bugs. Pedagogic ones are more important at this stage\nthan ambiguities because it is more a thought experiment than a real\nspec.\n\n Paul Prescod\n\n"}}