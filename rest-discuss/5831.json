{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"33-SR57Da0Eu_WUg_CGspNBtPCXOvqNEA_MRveUhpIAEQIv6z0N8GZAUM_tk8u_3pbTBPVA-aV0XfGMhz-Kr2Jhf8-f8ifI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Personalization as Representation","postDate":"1143586187","msgId":5831,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDI4RjczNjUwLTJCQ0QtNDlGRi1COEIxLTk3ODNBODNGRDkzMEBhcnRpbWEuY29tPg==","inReplyToHeader":"PDQ0Mjk1MDRDLjYwMDA0MDBAam9ubmF5Lm5ldD4=","referencesHeader":"PDQ0MTg2RERELjYwMTAzMDVAam9ubmF5Lm5ldD4gPDQ0MjE5NEU5LjgwMDA2MDlAdmVpY29uLmNvbT4gPDg3YWNiaW1ncTIuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMUE5RjguNTA3MDUwM0B2ZWljb24uY29tPiA8NDQyMUY1MzAuODAwMDgwMkBzZWFpcnRoLmNvbT4gPDg3NHExcWx6NGMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMjMzNkMuNTAwMDMwN0BzZWFpcnRoLmNvbT4gPDg3eTd6MWw2Y28uZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NzNlYzU5OWQwNjAzMjMwNjA4cDJhYmU1MTRjdWNiNDUxZGNkMjQ0NjcxZDhAbWFpbC5nbWFpbC5jb20+IDw4N3ZldTVreTB4LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDczZWM1OTlkMDYwMzIzMTM0M3M0MjNjYmM5Mm80NjhmMGNlZjZlN2UwNmE4QG1haWwuZ21haWwuY29tPiA8ODdwc2tjbHQ5MS5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw5RThGN0U5MC01M0NFLTRBRjEtOTI0RS00RURGMDI2RkVEQzRAYXJ0aW1hLmNvbT4gPDg3aXJxNGxnZWcuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8OTlBODdBNjgtNjU5Qy00MDUyLTkwNzQtM0Q2RDE5NzFGMUZDQGFydGltYS5jb20+IDw4N2Q1Z2NsYnNkLmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPEI0RUQ3ODMzLUIwNTMtNDBDMi04RTUwLTVFODc3MTg2MjYyOEBhcnRpbWEuY29tPiA8NDQyM0ZDMDMuODAwMDQwMkBtZXRhbGFiLnVuYy5lZHU+IDwxMjdFNzI3My0xM0NELTRCQkMtOTQ1Ri1DRDIyRTk4M0JGNEFAdG9waWNtYXBwaW5nLmNvbT4gPDQ0MjQwNDlBLjcwMzAzMDdAbWV0YWxhYi51bmMuZWR1PiA8M0Q2MDRBODQtMzAyQy00OTkxLTgxQTgtNzk2RTdCNkQxNDQ1QGFydGltYS5jb20+IDw0NDI1RDBEQy42MDMwNzA4QGpvbm5heS5uZXQ+IDwzMEJGRjU4OC01RDdCLTQ3NDktQUNDMS1BNkU4QzMwQUEwNDNAYXJ0aW1hLmNvbT4gPDQ0Mjk1MDRDLjYwMDA0MDBAam9ubmF5Lm5ldD4="},"prevInTopic":5830,"nextInTopic":0,"prevInTime":5830,"nextInTime":5832,"topicId":5693,"numMessagesInTopic":89,"msgSnippet":"Hi Jonathan, ... In my scheme the only state stored on the server, and replicated among all the servers, is a pair of passwords used to encrypt the cookies.","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 67470 invoked from network); 28 Mar 2006 22:49:19 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m25.grp.scd.yahoo.com with QMQP; 28 Mar 2006 22:49:19 -0000\r\nReceived: from unknown (HELO artima2.inetu.net) (209.235.240.43)\n  by mta9.grp.scd.yahoo.com with SMTP; 28 Mar 2006 22:49:19 -0000\r\nReceived: (qmail 4056 invoked by uid 89); 28 Mar 2006 22:49:25 -0000\r\nReceived: from unknown (HELO ?192.168.1.2?) (71.131.207.69)\n  by artima2.inetu.net with SMTP; 28 Mar 2006 22:49:25 -0000\r\nIn-Reply-To: &lt;4429504C.6000400@...&gt;\r\nReferences: &lt;44186DDD.6010305@...&gt; &lt;442194E9.8000609@...&gt; &lt;87acbimgq2.fsf@...&gt; &lt;4421A9F8.5070503@...&gt; &lt;4421F530.8000802@...&gt; &lt;874q1qlz4c.fsf@...&gt; &lt;4422336C.5000307@...&gt; &lt;87y7z1l6co.fsf@...&gt; &lt;73ec599d0603230608p2abe514cucb451dcd244671d8@...&gt; &lt;87veu5ky0x.fsf@...&gt; &lt;73ec599d0603231343s423cbc92o468f0cef6e7e06a8@...&gt; &lt;87pskclt91.fsf@...&gt; &lt;9E8F7E90-53CE-4AF1-924E-4EDF026FEDC4@...&gt; &lt;87irq4lgeg.fsf@...&gt; &lt;99A87A68-659C-4052-9074-3D6D1971F1FC@...&gt; &lt;87d5gclbsd.fsf@...&gt; &lt;B4ED7833-B053-40C2-8E50-5E8771862628@...&gt; &lt;4423FC03.8000402@...&gt; &lt;127E7273-13CD-4BBC-945F-CD22E983BF4A@...&gt; &lt;4424049A.7030307@...&gt; &lt;3D604A84-302C-4991-81A8-796E7B6D1445@...&gt; &lt;4425D0DC.6030708@...&gt; &lt;30BFF588-5D7B-4749-ACC1-A6E8C30AA043@...&gt; &lt;4429504C.6000400@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;28F73650-2BCD-49FF-B8B1-9783A83FD930@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 28 Mar 2006 14:49:47 -0800\r\nTo: Jonathan Arkell &lt;yahoo@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Personalization as Representation\r\nX-Yahoo-Group-Post: member; u=198693287; y=PfcoA5VsBOMzvpfuPPFIccQuPo3uki5vDOfBl0LnqQpNuUP3LPg\r\nX-Yahoo-Profile: billvenners\r\n\r\nHi Jonathan,\n\n&gt; Really, I wonder if you can meet your needs with REST at all.  See,  \n&gt; the\n&gt; clincher for me is the timing out of user logins, because you need to\n&gt; store the state of the user somewhere on the server to know when to  \n&gt; time\n&gt;  them out.  Perhaps my method (storing the session as a resource) is\n&gt; RESTfully not REST :P ?  At least this way the client has some kind of\n&gt; control over the session, and the session isn&#39;t interfering with the\n&gt; cachability.\n&gt;\nIn my scheme the only state stored on the server, and replicated  \namong all the servers, is a pair of passwords used to encrypt the  \ncookies. These passwords expire every 30 minutes, and I keep two  \naround (so I replicate a new one every 15 minutes). I&#39;m planning on  \nkeeping a cache of roles and permissions for users once they log in,  \nwhich can be accessed by the session id. I&#39;ll use sticky sessions so  \nrequests to that site always go back to the server where the cache  \nis. It is just a cache, though. It will go into the cache with a  \ntimeout, and can be evicted early if memory gets full. If that  \nhappens, or a server crashes, or someone clicks over to a URL at a  \ndifferent site in the network served up by a different server, and a  \nrequest comes in with a session ID that doesn&#39;t reference anything in  \nthe roles/permissions cache, I just use the password to decrypt the  \nsession ID and reauthenticate the user.\n\nI don&#39;t think there&#39;s really any &quot;state of the user somewhere on the  \nserver,&quot; at least nothing that can&#39;t be uniquely referenced with a  \nURI. (All theory. I haven&#39;t implemented it yet.)\n\n&gt; Why avoid iframes?  Avoiding Javascript seems cut and dried, what are\n&gt; the issues with Iframes?\n&gt;\nNo good reason, actually, just fear of the unknown. I&#39;ll look into it.\n\nBy the way, I think I came up with another way to log people off of  \nan HTTP auth session if JavaScript is enabled on the client. You need  \nsome kind of password that no one can have. For example, if you  \nrequire that passwords are at least six chars long, then no one can  \nhave the password &quot;abc&quot;. When you want to log someone out (because  \nthey&#39;ve pressed the &quot;Log Out&quot; button for example), some JavaScript on  \nthe client can run and do an HTTP authentication for the realm you  \nwant to log the user out of at a special URI with the user&#39;s username  \nand the password &quot;abc&quot;. This authentication will succeed at that  \nspecial URI, which now means that the next time someone goes to any  \nother URI in that realm at that site from that client, it will  \nattempt to authenticate with the wrong password. You have effectively  \nlogged the user out of his or her auth session for that realm.\n\nBill\n\n\n\n&gt; Bill Venners wrote:\n&gt;\n&gt;&gt; I had to think about this idea for a bit, and am still not quite  \n&gt;&gt; sure I\n&gt;&gt; understand it fully. One problem I believe I see is that it doesn&#39;t\n&gt;&gt; provide the server with a sure-fire way to recognize the client,  \n&gt;&gt; so it\n&gt;&gt; won&#39;t always know for which realm to prompt authentication. I.e.,  \n&gt;&gt; if you\n&gt;&gt; use a different realm string for each session, then the server  \n&gt;&gt; needs to\n&gt;&gt; know what realm string to prompt for in its 401 response on a  \n&gt;&gt; request.\n&gt;&gt; Once authenticated, the client may preemptively send the  \n&gt;&gt; Authorization\n&gt;&gt; header, but the realm is buried inside the digest-response, and  \n&gt;&gt; anyway\n&gt;&gt; the client may not send it until getting a 401. But before the server\n&gt;&gt; sends the 401, it needs to know the realm. So really I think the  \n&gt;&gt; realm\n&gt;&gt; needs to something the server can determine from the request URI.\n&gt;&gt;\n&gt;&gt; The other concern is that a URL like this:\n&gt;&gt;\n&gt;&gt; http://yoursite/sessions/SessionID\n&gt;&gt;\n&gt;&gt; seems to indicate I&#39;ve created state on the server for the auth  \n&gt;&gt; session,\n&gt;&gt; which is something I&#39;d rather avoid. I would prefer the auth state  \n&gt;&gt; to be\n&gt;&gt; on the client, so when a user creates an auth session, that state  \n&gt;&gt; is on\n&gt;&gt; the client for the duration of the session, after which it gets  \n&gt;&gt; cleared.\n&gt;&gt; On each request during the auth session, the auth state goes from  \n&gt;&gt; client\n&gt;&gt; to the server. This my current best understanding of what REST says\n&gt;&gt; about authentication. (Even though you&#39;ve taken the innovative  \n&gt;&gt; step of\n&gt;&gt; giving the session a URI on the server, it still feels to me like  \n&gt;&gt; it&#39;s\n&gt;&gt; in the wrong place there on the server.)\n&gt;&gt;\n&gt;&gt; My understanding of why REST suggests we avoid session state (almost\n&gt;&gt; every web framework makes using session state easy), is that extra- \n&gt;&gt; URI\n&gt;&gt; state breaks caching and hinders scalability. There are good  \n&gt;&gt; answers to\n&gt;&gt; scalability with session state too, such as cache coherence tools and\n&gt;&gt; several other techniques, but I really don&#39;t think it would be  \n&gt;&gt; harder to\n&gt;&gt; build a RESTful HTTP app then a stateful one if you just keep REST in\n&gt;&gt; mind as you go.\n&gt;&gt;\n&gt;&gt; I know Roy complained about the use of cookies for session IDs in his\n&gt;&gt; dissertation. My guess is that his main concern was that in practice\n&gt;&gt; session cookies are used not just for auth, usually, but to point to\n&gt;&gt; session state on the server. The cookies I&#39;ve been considering  \n&gt;&gt; using in\n&gt;&gt; our new architecture are really auth tokens. They will essentially\n&gt;&gt; contain the username and password hash encrypted with a password that\n&gt;&gt; all the servers will share for a half hour, after which they&#39;ll all\n&gt;&gt; forget it. So if you bring a server up cold, and it gets one of these\n&gt;&gt; cookies within the half-hour timeout, it can figure out who you  \n&gt;&gt; are and\n&gt;&gt; authenticate you (with the caveat that the session cookie can be  \n&gt;&gt; easily\n&gt;&gt; hijacked). In this approach once the server sends back this  \n&gt;&gt; cookie, it\n&gt;&gt; really represents the authentication state sitting there in the  \n&gt;&gt; client,\n&gt;&gt; and it gets sent up to the server with each request. The server can\n&gt;&gt; forget all about the authentication, so long as it remembers the\n&gt;&gt; half-hour passwords used to encrypt the cookies.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;&gt; As for sending out personalized content... what about an iframe?\n&gt;&gt;&gt; Enclose all personalizable content inside of an iframe, and make a\n&gt;&gt;&gt; secondary request for that personalized content.  This helps to  \n&gt;&gt;&gt; avoid\n&gt;&gt;&gt; the Javascript issue (while opening up another can of iframe  \n&gt;&gt;&gt; worms mind\n&gt;&gt;&gt; you).\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt; I don&#39;t think I want to go there. I don&#39;t want to go to JavaScript\n&gt;&gt; either, to assemble the personalized representation on the client.  \n&gt;&gt; I see\n&gt;&gt; how that would reduce server load and bandwidth, but in exchange for\n&gt;&gt; that cost savings, I&#39;d have the expense of testing a lot more  \n&gt;&gt; JavaScript\n&gt;&gt; in a lot more places. I expect I&#39;ll just send out personalized\n&gt;&gt; representations of resources, each with their own ETag.\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}