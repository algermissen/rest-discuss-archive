{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":341233558,"authorName":"Tim Williams","from":"Tim Williams &lt;williamstw@...&gt;","profile":"quwiltw","replyTo":"SENDER","senderId":"FeFMUjcIPnQJPpNjSzm7b46Tdkk8Xx_DDyyWBo6MCcX00ZesiDW158kQVQkUZXn7u5NDYwFNQ0XgLmqQcn9_mKu9z8B2s3LOyX8","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Media Type Version Negotiation","postDate":"1252638274","msgId":13218,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5OTg4ODQ0MDkwOTEwMjAwNHI3MDIwNjA4M3FkNzU0ODg5YWU1NzhmNDRjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":13220,"prevInTime":13217,"nextInTime":13219,"topicId":13218,"numMessagesInTopic":43,"msgSnippet":"I m looking for pointers to best practices to versioning representations and support for client negotiation of specific versions.  To provide different","rawEmail":"Return-Path: &lt;williamstw@...&gt;\r\nX-Sender: williamstw@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 94684 invoked from network); 11 Sep 2009 03:04:36 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.re1.yahoo.com with QMQP; 11 Sep 2009 03:04:36 -0000\r\nX-Received: from unknown (HELO mail-yw0-f178.google.com) (209.85.211.178)\n  by mta2.grp.sp2.yahoo.com with SMTP; 11 Sep 2009 03:04:35 -0000\r\nX-Received: by ywh8 with SMTP id 8so1160665ywh.14\n        for &lt;rest-discuss@yahoogroups.com&gt;; Thu, 10 Sep 2009 20:04:34 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.150.56.23 with SMTP id e23mr3970484yba.234.1252638274635; Thu, \n\t10 Sep 2009 20:04:34 -0700 (PDT)\r\nDate: Thu, 10 Sep 2009 23:04:34 -0400\r\nMessage-ID: &lt;499888440909102004r70206083qd754889ae578f44c@...&gt;\r\nTo: rest-discuss@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Tim Williams &lt;williamstw@...&gt;\r\nSubject: Media Type Version Negotiation\r\nX-Yahoo-Group-Post: member; u=341233558; y=W5axIdFj4xsRaTV15n2j_9I-etW5zXao-YKyZC5S3qEK2A\r\nX-Yahoo-Profile: quwiltw\r\n\r\nI&#39;m looking for pointers to best practices to versioning\nrepresentations and support for client negotiation of specific\nversions.  To provide different representations of the same resource,\nthe media type alone is sufficient to drive the content type\nnegotiation.  For example, I might provide\n\n&lt;link type=&quot;application/atom+xml&quot;...\n&lt;link type=&quot;application/rss+xml&quot;...\n\nas alternate representations of the same resource.  The client could\nthen be expected to pick a representation that it knows how to process\nand GET it.\n\nBut suppose we have a different version of the *same* media type\n&quot;myformat&quot; - v1.0 and v2.0?  To complicate matters, let&#39;s suppose that\n[due to arrogant, insensitive developers:)] v2.0 is not backwards\ncompatible with v1.0.  Assuming that the service is capable of serving\nrepresentations in both v1.0 and v2.0, the question becomes how might\nthe client negotiate one version over the other for the *same* media\ntype?\n\nI&#39;ve attempted to think through the following:\n\n1) (I can assume XML) XML versioning alone won&#39;t do because there&#39;s no\nway to indicate in the link itself that it&#39;s one version of the schema\nover the other.  So even if the client retrieved a v2.0 representation\nand stopped processing it after seeing an unfamiliar namespace (for\nexample), it has no way to subsequently request the older version.\n\n2) My initial response was to simply add the versioning information to\nthe content-type itself (e.g. application/myformat.v20 and\napplication/myformat.v10).  This makes negotiation and extensibility\nclean and elegant, but causes me two concerns:  the\n&quot;explosion-of-media-type&quot; concern and the\n&quot;nobody-else-seems-to-be-doing-it-that-way&quot;(based on current IANA)\nconcern.\n\n3)  The next thing that comes to mind is something like the &quot;level&quot;\naccept-extension exampled in rfc2616 (e.g. text/html;level=1).  In my\nscenario, would be something like: application/myformat;version=2.0 I\nsuppose.\n\nI&#39;m aware, btw, of the value of re-using existing media types, this\nmay be an edge case for some but I&#39;d like to address an unfortunate\nreality inside some fast moving enterprises though.\n\nThoughts/pointers appreciated...\n--tim\n\n"}}