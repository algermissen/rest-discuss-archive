{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":203744831,"authorName":"Justin T. Sampson","from":"&quot;Justin T. Sampson&quot; &lt;justin@...&gt;","profile":"justin_t_sampson","replyTo":"SENDER","senderId":"7HhP9W0dbqhPRxzLjprEEoAJPJqhyKzJmJHMWssdO9Cm5hcXEIbyLtO4x5mUv9vAbjFieC-kVbwI1eXcXOnpHz0W6uS97F9vBdD5a2FjXQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] rest and ajax","postDate":"1132579349","msgId":5522,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEUxRWVCY3ItMDAwNWdRLU9PQGtpZXYuZG5zZGMuY29tPg=="},"prevInTopic":5513,"nextInTopic":5528,"prevInTime":5521,"nextInTime":5523,"topicId":5494,"numMessagesInTopic":7,"msgSnippet":"... I ve been playing with this a lot lately. There s certainly a lot of potential for good and a lot of potential for evil with AJAX. There are two big","rawEmail":"Return-Path: &lt;justin@...&gt;\r\nX-Sender: justin@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 94150 invoked from network); 21 Nov 2005 13:22:33 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m34.grp.scd.yahoo.com with QMQP; 21 Nov 2005 13:22:33 -0000\r\nReceived: from unknown (HELO kiev.dnsdc.com) (70.84.49.34)\n  by mta4.grp.scd.yahoo.com with SMTP; 21 Nov 2005 13:22:33 -0000\r\nReceived: from krasama by kiev.dnsdc.com with local (Exim 4.52)\n\tid 1EeBcr-0005gQ-OO\n\tfor rest-discuss@yahoogroups.com; Mon, 21 Nov 2005 07:22:29 -0600\r\nTo: REST Discuss &lt;rest-discuss@yahoogroups.com&gt;\r\nX-Mailer: NeoMail 1.27\r\nX-IPAddress: 204.11.228.152\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=iso-8859-1\r\nMessage-Id: &lt;E1EeBcr-0005gQ-OO@...&gt;\r\nDate: Mon, 21 Nov 2005 07:22:29 -0600\r\nX-AntiAbuse: This header was added to track abuse, please include it with any abuse report\r\nX-AntiAbuse: Primary Hostname - kiev.dnsdc.com\r\nX-AntiAbuse: Original Domain - yahoogroups.com\r\nX-AntiAbuse: Originator/Caller UID/GID - [33365 32003] / [47 12]\r\nX-AntiAbuse: Sender Address Domain - krasama.com\r\nX-Source: /bin/bash\r\nX-Source-Args: sh -c /usr/local/cpanel/bin/sendmail_cpanel -oem -oi -F &#39;&quot;Justin T. Sampson&quot;&#39; -f &#39;justin@...&#39; -t 1&gt;&2 \r\nX-Source-Dir: :/base\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;Justin T. Sampson&quot; &lt;justin@...&gt;\r\nSubject: Re: [rest-discuss] rest and ajax\r\nX-Yahoo-Group-Post: member; u=203744831; y=nhe_707koBNrjyvuCspFiOaqxNszMsonKXMghn9iZdmnPnAxaYvxcoe79w\r\nX-Yahoo-Profile: justin_t_sampson\r\n\r\nMatthias Willerich wrote:\n\n&gt; - What&#39;s your thoughts on REST in combination with Ajax? I mean,\n&gt; Ajax requests XML, xmlhttprequest supports GET/POST/PUT/DELETE,\n&gt; REST takes and delivers XML, and with a little bit of server\n&gt; trickery you can connect to any REST webservice you like. I had\n&gt; a little search in this lists archive and didn&#39;t find much.\n\nI&#39;ve been playing with this a lot lately. There&#39;s certainly a lot\nof potential for good and a lot of potential for evil with AJAX.\n\nThere are two big problems I see with a lot of AJAX applications:\n1) devolving to GET for everything, including server-side state\nchange; and 2) presenting a single URL for the entire application.\n\nProblem #1 is easily solved by a bit of awareness of HTTP and REST\nconstraints; some AJAX libraries may make it difficult to control\nthe HTTP method, so either fix them or don&#39;t use them. Just make\nsure, at the very least, that state-changing AJAX requests don&#39;t\nuse GET.\n\nProblem #2 takes a little thoughtful design. It might not strictly\nbe a REST issue, but I think it&#39;s certainly a well-behaved Web\ndesign issue. Most AJAX applications show a single URL in the\nbrowser no matter what the user does or looks at, which prevents\nbookmarking, emailing, guessing, understanding, etc., etc., etc.\nThat is, that first URL loads an AJAX engine and from then on all\nuser actions involve AJAX requests and either DOM or IFRAME tricks\nrather than loading new pages with distinct URLs. REST teaches us\nto take URLs seriously.\n\nI&#39;ve been imagining an approach (and build a proof-of-concept for\nmy company) where every object in the application has its own URL\n(as discussed continuously on this list) but that accessing that\nURL with a browser produces an AJAX-enhanced interface for\ninteracting with that object. Any reference to another object is a\nnormal hypertext link, but operations on the object itself are\nAJAX requests (obeying REST constraints behind the scenes).\n\nFor example, imagine a tiny app with a collection of people at\n/people/ and individual people at /people/joe, /people/bob, etc.\nDoing a GET on /people/ from a browser would return an HTML page\ncontaining a Rico LiveGrid[1]. The LiveGrid is an AJAX widget that\nallows lazy scrolling through a large collection, by automatically\nmaking AJAX requests like &lt;GET /people/?page_size=15&offset=30&gt; as\nthe user fiddles a scrollbar. Then imagine that each person&#39;s name\nin this listing is a normal hypertext link. Clicking on Joe would\naccess /people/joe, which is what the user would see in the\nbrowser&#39;s address bar. This page would appear to be a simple HTML\nrepresentation of Joe&#39;s profile, but clicking a little Edit button\nin the corner triggers some DOM tricks to reconfigure the page to\ndisplay a form for editing Joe&#39;s profile, without loading any\nother URL. Hitting the Save button would do an AJAX request (POST\nor PUT); if there are problems, an error message would be\ndisplayed in the page using DHTML, but if everything&#39;s okay the\npage would be reconfigured back into the original view --\nincluding, of course, the user&#39;s changes -- all without leaving\nthe /people/joe URL. The end result is that we&#39;ve preserved the\nability to bookmark individual objects in the system, and may have\neven *improved* the handling of the browser history: the history\nnow records what objects you&#39;ve visited (all purely as GET), not\nwhat operations you&#39;ve performed.\n\nBTW, none of this addresses accessibility or graceful degradation.\nThose are separate problems with any JavaScript-heavy application.\n\n[1] http://openrico.org/rico/livegrid.page\n\nCheers,\nJustin\n\n\n"}}