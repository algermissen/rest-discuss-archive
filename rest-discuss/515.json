{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":23186829,"authorName":"Paul Prescod","from":"Paul Prescod &lt;paul@...&gt;","replyTo":"SENDER","senderId":"wVjUWDRQJQoEBJDJqNcaWBA1FJeCZVTh3zRDX0qaPETggZS0PyUuxATSXGH7s0_SISYwy0srH20mQQrWYo3JkYgvjIMdbA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Comments on latest rev of the HttpEvents spec","postDate":"1012549083","msgId":515,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNDNUE0NURCLkNGRTM3REZAcHJlc2NvZC5uZXQ+","referencesHeader":"PDNDNUEyRjQ5LjdBQzZCNzQ1QGp1bXAubmV0Pg=="},"prevInTopic":511,"nextInTopic":519,"prevInTime":514,"nextInTime":516,"topicId":511,"numMessagesInTopic":12,"msgSnippet":"... Not bad...I wonder if we ll regret using pub/sub terminology if people think it is too unlike pub/sub. When you subscribe to Playboy you don t get a once a","rawEmail":"Return-Path: &lt;paul@...&gt;\r\nX-Sender: paul@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_0_1_3); 1 Feb 2002 07:39:13 -0000\r\nReceived: (qmail 2105 invoked from network); 1 Feb 2002 07:39:13 -0000\r\nReceived: from unknown (216.115.97.167)\n  by m4.grp.snv.yahoo.com with QMQP; 1 Feb 2002 07:39:13 -0000\r\nReceived: from unknown (HELO smtp1.ActiveState.com) (209.17.183.249)\n  by mta1.grp.snv.yahoo.com with SMTP; 1 Feb 2002 07:39:13 -0000\r\nReceived: from smtp3.ActiveState.com (smtp3.ActiveState.com [192.168.3.19])\n\tby smtp1.ActiveState.com (8.11.6/8.11.6) with ESMTP id g117dAN13489;\n\tThu, 31 Jan 2002 23:39:10 -0800\r\nReceived: from prescod.net (ssh1.ActiveState.com [192.168.3.32])\n\tby smtp3.ActiveState.com (8.11.6/8.11.6) with ESMTP id g117d9e02614;\n\tThu, 31 Jan 2002 23:39:09 -0800\r\nMessage-ID: &lt;3C5A45DB.CFE37DF@...&gt;\r\nDate: Thu, 31 Jan 2002 23:38:03 -0800\r\nX-Mailer: Mozilla 4.76 [en] (Windows NT 5.0; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: Jeff Bone &lt;jbone@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nSubject: Re: [rest-discuss] Comments on latest rev of the HttpEvents spec\r\nReferences: &lt;3C5A2F49.7AC6B745@...&gt;\r\nContent-Type: text/plain; charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\nX-PerlMx-Spam: Gauge=, Probability=0%, Report=INTERNAL_HOST\r\nX-Filtered-By: PerlMx makes it fast and easy.  See http://www.ActiveState.com/Products/PerlMx/Header\r\nFrom: Paul Prescod &lt;paul@...&gt;\r\nX-Yahoo-Group-Post: member; u=23186829\r\n\r\nJeff Bone wrote:\n&gt; \n&gt; Great stuff, Paul!  :-)\n&gt; \n&gt; (1) I think we should go all the way with the &quot;subscription&quot;\n&gt; terminology.  Instead of &quot;watchable resource&quot; and &quot;Watched-URI,&quot;\n&gt; &quot;subscribable resource&quot; and &quot;Subscribed-URI&quot;.  Instead of just\n&gt; &quot;Location,&quot; &quot;Subscription-Location.&quot;  Etc.\n\nNot bad...I wonder if we&#39;ll regret using pub/sub terminology if people\nthink it is too unlike pub/sub. When you subscribe to Playboy you don&#39;t\nget a once a month notification that there is a new edition available.\nYou get a *magazine*. So our model is somewhat different. As you said,\nit is almost cache invalidation.\n\nIf you don&#39;t think it is a problem want to go through and unify\nterminology while you are studying it, that&#39;s okay with me.\n\n&gt; (2) Kill &quot;Event.&quot;  The semantics of change are\n&gt; application-dependent.  For most things, the notification of a\n&gt; state change is sufficient; HTTP already provides a mechanism for\n&gt; then retreiving the new state representation.  (The one caveat\n&gt; being a change to a resource with lots of subscriptions could\n&gt; generate a GET storm, but the application designer should\n&gt; anticipate this.)  For anything other than simple change\n&gt; notificatins, applications should define their own\n&gt; change-representation notification schemes.\n\nThat&#39;s what I&#39;ve been saying. The application designer can use the body\nfor hints that avoid GET storms.\n\n&gt; (3) The language about message ordering is IMO dangerous.\n&gt; Requiring a publisher to deliver messages in order implies\n&gt; something about the server-side state that is perhaps best left\n&gt; to individual applications.  Instead, if (from the server / HTTP\n&gt; perspective) notifications do not carry state but are simply\n&gt; notifications of state change, then message ordering becomes\n&gt; unimportant.\n\nI guess I&#39;ll take it out and see if a need for it arises. My main\nconcern is that while you are retrying one event you don&#39;t want to build\nup a larger and larger queue of events you are retrying for the same\nmissing subscriber until you start to interfere with network\nperformance.\n\n&gt; (4) It might be useful to require an appropriate validator\n&gt; (entity tag or last-modified header) in every notification. \n\nRequire is a little strong. Remember that part of the genious of HTTP is\nthat basic implementations are so simple. MUST&#39;s start raising the bar.\n\nMaybe it is a feature that clients may ask for along with minimized\nnotification bodies and whatever else we come up with.\n\n&gt; ... In a\n&gt; sense, clients are simply caches for particular representations,\n&gt; and the HttpEvents &quot;protocol&quot; is just a push-based cache\n&gt; invalidation protocol.  We should reuse the appropriate pieces of\n&gt; HTTP in this capacity.\n\nOne reason that I&#39;m not happy with it yet as a cache invalidation\nprotocol is that it is not good at replicating collections. It&#39;s easy to\nwatch a document that represents a collection. But you can only\nreplicate the sub-resources if you understand the syntax of the\ncontainer. HTTP should have a &quot;give me this resource&#39;s children&quot; method\nor something...\n\n&gt; (5) I&#39;m still uncomfortable talking about the mail binding at\n&gt; this time.  That&#39;s not to say it&#39;s not important to have one,\n&gt; just that IMO it&#39;s best left to a separate specification.\n\nDoesn&#39;t make much difference to me. What is important is the\narchitectural decision of whether we allow mailto: URIs to be\nsubscription targets or always require a proxying intermediary.\n\n Paul Prescod\n\n"}}