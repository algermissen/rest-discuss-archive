{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":210067383,"authorName":"Nick Gall","from":"Nick Gall &lt;nick.gall@...&gt;","profile":"nick_gall_1117","replyTo":"SENDER","senderId":"MQ3o21SrcbYiyzYywQwHo9iMWlwIedugZ6EhcHmevWnN7OPRay_XHDgRcFt19Ey5ugbEwfBm5Ys8VRqOdUBzNm7ZKoBF7w","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [rest-discuss] HTTP request and &quot;type safety&quot;","postDate":"1268600507","msgId":15038,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE2YTZkZjM2MTAwMzE0MTQwMWkyZTI1MWM0Nm41NWQwNmY0M2M2MjcwMTBlQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDMyNDAwOS45MDc4Ny5xbUB3ZWI1NTkwNS5tYWlsLnJlMy55YWhvby5jb20+","referencesHeader":"PDI4ZTI1NzExMTAwMzEzMDgzN3YyYmY2N2E1OHkzMTYwYWMzMjg0NTVlOThjQG1haWwuZ21haWwuY29tPiAJPDMyNDAwOS45MDc4Ny5xbUB3ZWI1NTkwNS5tYWlsLnJlMy55YWhvby5jb20+"},"prevInTopic":15037,"nextInTopic":15039,"prevInTime":15037,"nextInTime":15039,"topicId":15020,"numMessagesInTopic":18,"msgSnippet":"Kevin, This issue of entry point URI vs.  comes up from time to time. Here is a post from a while ago from the middle of a previous ","rawEmail":"Return-Path: &lt;nick.gall@...&gt;\r\nX-Sender: nick.gall@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 91933 invoked from network); 14 Mar 2010 21:02:09 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 14 Mar 2010 21:02:09 -0000\r\nX-Received: from unknown (HELO mail-fx0-f224.google.com) (209.85.220.224)\n  by mta3.grp.sp2.yahoo.com with SMTP; 14 Mar 2010 21:02:08 -0000\r\nX-Received: by fxm24 with SMTP id 24so2757431fxm.17\n        for &lt;rest-discuss@yahoogroups.com&gt;; Sun, 14 Mar 2010 14:02:07 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.239.137.69 with SMTP id k5mr745279hbk.97.1268600527297; Sun, \n\t14 Mar 2010 14:02:07 -0700 (PDT)\r\nIn-Reply-To: &lt;324009.90787.qm@...&gt;\r\nReferences: &lt;28e257111003130837v2bf67a58y3160ac328455e98c@...&gt; \n\t&lt;324009.90787.qm@...&gt;\r\nDate: Sun, 14 Mar 2010 16:01:47 -0500\r\nMessage-ID: &lt;a6a6df361003141401i2e251c46n55d06f43c627010e@...&gt;\r\nTo: Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nContent-Type: multipart/alternative; boundary=001485f42412caa00b0481c913e3\r\nX-eGroups-Msg-Info: 2:4:8:0:2\r\nFrom: Nick Gall &lt;nick.gall@...&gt;\r\nSubject: Re: [rest-discuss] HTTP request and &quot;type safety&quot;\r\nX-Yahoo-Group-Post: member; u=210067383; y=9-lTBm7223u0BrF8czentlXQKHHg3MoO49O3l6ctW2IBiqHJ2NHaZps\r\nX-Yahoo-Profile: nick_gall_1117\r\n\r\n\r\n--001485f42412caa00b0481c913e3\r\nContent-Type: text/plain; charset=ISO-8859-1\r\n\r\nKevin,\n\nThis issue of entry point URI vs. &lt;&lt;some other type of URI&gt;&gt; comes up from\ntime to time. Here is a post from a while ago from the middle of a previous\ndiscussion of the issue. Roy schooled me one the subject. :-)\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/13616\n\nRe: [rest-discuss] Newbie REST Question\n\nOn Fri, Oct 2, 2009 at 12:21 AM, Roy T. Fielding\n&lt;fielding@...&lt;http://tech.groups.yahoo.com/group/rest-discuss/post?postID=SJClec4h4JuSITI9W3aFfYVckGf2FEUb9VZCMR0K7Fj8rfcWLW3zZbJ_-GyKvMgW5Bb4f_rP6x9S&gt;&gt;\nwrote:\n&gt;&gt; Where do you get the idea that not all URIs need be or should be cool?\n(If I am understanding you correctly...)\n&gt;\n&gt; Umm, maybe the several hundred conversations I&#39;ve had on\n&gt; the topic with TimBL in the room.  Cool URIs are permanent,\n&gt; so if you want to be cool then make permanence a design\n&gt; criteria.  That&#39;s all there is to it.\n\nAgreed.\n\n&gt; Nobody is going to\n&gt; argue against too much URI permanence.  There is certainly\n&gt; nothing about that in conflict with REST, so if you perceive\n&gt; a conflict then I suggest you look at your reasoning and\n&gt; kill the paper tiger.\n\nI&#39;m glad to hear you confirm that there is no real conflict between URI\npermanence and REST. I&#39;m also glad to hear you confirm that there is no real\nconflict between designs that depend on URI permanence and REST, eg\nout-of-band URI templates. (Which is how I read your other\nreply&lt;http://tech.groups.yahoo.com/group/rest-discuss/message/13606&gt;\n.)\n\nWhile others may use the word &quot;conflict&quot;, for the record, I don&#39;t believe I\nused the word &quot;conflict&quot; in this thread -- I used the word &quot;tension&quot;. And I\nquoted an email of\nyours&lt;http://tech.groups.yahoo.com/group/rest-discuss/message/12101&gt;\nfrom\nback in February that seemed to indicate that you did not completely\ndisagree with the &quot;tension&quot; characterization:\n\n*If there is a tension between the desire to bookmark and the fact that REST\nencourages folks to break up an application into a state machine of reusable\nresource states, then I would consider it to be more like sexual tension.\nJust because you have it doesn&#39;t mean it is bad, and one way to improve\nthings is to make the more important resource links look sexier than the\nless important ones.*\n\n\nI suppose the fundamental tension here (and perhaps in sexual tension as\nwell -- who knows) is the tension between the desire for permanence and\nstability vs. the desire for adaptability and change.\n\n-- Nick\n\n\nNick Gall\nPhone: +1.781.608.5871\nTwitter: ironick\nAOL IM: Nicholas Gall\nYahoo IM: nick_gall_1117\nMSN IM: (same as email)\nGoogle Talk: (same as email)\nEmail: nick.gall AT-SIGN gmail DOT com\nWeblog: http://ironick.typepad.com/ironick/\n\n\nOn Sun, Mar 14, 2010 at 11:50 AM, Kevin Duffey &lt;andjarnic@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; Hi Peter,\n&gt;\n&gt; As for why I care.. I don&#39;t.. I thought it would not be HATEOAS if a URI\n&gt; could be accessed directly and not &quot;discovered&quot;? From all the posts, it\n&gt; seemed to me that if you accessed any URI directly, and not via an initial\n&gt; URI entry point that then gave you URIs you could use based on the resource\n&gt; state, I figured that was not the HATEOAS/REST way. I couldn&#39;t figure out\n&gt; how you could actually validate that a URI was called based on a URI you\n&gt; passed back previously, given the no state restraint in terms of resources\n&gt; on the server side.\n&gt;\n&gt; I suppose tho, that a client should not save URIs for future direct access,\n&gt; as data may change, even resources could change, hence the ability to evolve\n&gt; the server side without breaking the client.\n&gt;\n&gt;\n&gt; --- On *Sat, 3/13/10, Peter Williams &lt;pezra@...&gt;* wrote:\n&gt;\n&gt;\n&gt; From: Peter Williams &lt;pezra@...&gt;\n&gt; Subject: Re: [rest-discuss] HTTP request and &quot;type safety&quot;\n&gt; To: &quot;Kevin Duffey&quot; &lt;andjarnic@...&gt;, &quot;Rest List&quot; &lt;\n&gt; rest-discuss@yahoogroups.com&gt;\n&gt; Date: Saturday, March 13, 2010, 8:37 AM\n&gt;\n&gt;\n&gt; On Fri, Mar 12, 2010 at 9:57 PM, Kevin Duffey &lt;andjarnic@...&lt;http://mc/compose?to=andjarnic@...&gt;&gt;\n&gt; wrote:\n&gt;\n&gt; &gt; I am confused a bit about this. I was just thinking this today. If I\n&gt; &gt; provide a single URI point of entry, and an OPTION or GET request is\n&gt; &gt; sent, it returns some relevant links that can be called based on the\n&gt; &gt; state of the resource. Now, to get those links, I have to first\n&gt; &gt; access the point of entry URI. What happens if say a bot program (or\n&gt; &gt; even a client developer) decides to cache/save these URIs that\n&gt; &gt; return. Then at some point later, call those URIs directly instead\n&gt; &gt; of the point of entry URI first to get those URIs back. They could\n&gt; &gt; even navigate some links for a while, then save the various URIs\n&gt; &gt; deeper down. Later, call those directly.\n&gt;\n&gt; A URI that is saved -- iow, bookmarked -- counts as an entry point\n&gt; URI.  This sort of bookmarking is required to implement many kinds of\n&gt; systems composed of multiple components that expose REST style\n&gt; interfaces.\n&gt;\n&gt; Of course, there is no guarantee that URIs saved by a client will\n&gt; remain valid over time.  Clients that save URIs must accept that the\n&gt; resources those URIs name may disappear as any point in the future.\n&gt; Well behaved servers do not disable URIs capriciously (see Cool URIs),\n&gt; but resources do have life-cycles that are governed by their domain.\n&gt;\n&gt;\n&gt; &gt; My confusion of this is because the server side is stateless. It\n&gt; &gt; retains no state. So how can I validate a URI that a client/bot\n&gt; &gt; saved from some previous use, to make sure it&#39;s valid at the time of\n&gt; &gt; call? I have no state on the server side that says &quot;this URI is\n&gt; &gt; being called BEFORE the URI that returns this URI was called.. it&#39;s\n&gt; &gt; a bad call&quot;. So I am unsure as to how to validate every single URI\n&gt; &gt; call to make sure it was called at a time when it should be called,\n&gt; &gt; and not just randomly out of order. I suppse we can use some sort of\n&gt; &gt; timestamp on every single URI that goes back, not sure entirely how\n&gt; &gt; that would work at this point, but I suppose the server would check\n&gt; &gt; this value when it came back in to the current server time stamp and\n&gt; &gt; make sure it&#39;s within so many minutes of when it was issued. But a\n&gt; &gt; smart client developer/bot could possibly figure that out, and\n&gt; &gt; update this value before making the request, and since the server\n&gt; &gt; keeps no state, if the modified timestamp is within the right time\n&gt; &gt; of the server, it would void that route of validating a URI.\n&gt;\n&gt; Why do you care if the resources are accessed &quot;out of order&quot;?\n&gt;\n&gt; If there are domain reasons for a resource to be available for a\n&gt; limited time, the application logic should destroy/deactivate the\n&gt; resource once it is no longer valid.  In that case, this hypothetical\n&gt; client with get a 410 or 404 when it attempts to make requests of the\n&gt; now nonexistent resource.\n&gt;\n&gt; If there is no domain reason for the resource to expire why is it a\n&gt; problem for a client to save a URI and the access it later?\n&gt;\n&gt; Peter\n&gt; http://barelyenough.org\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\r\n--001485f42412caa00b0481c913e3\r\nContent-Type: text/html; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nKevin,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This issue of entry point URI vs. &lt;&lt;some ot=\r\nher type of URI&gt;&gt; comes up from time to time. Here is a post from a w=\r\nhile ago from the middle of a previous discussion of the issue. Roy schoole=\r\nd me one the subject. :-)&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a href=3D&quot;http://tech=\r\n.groups.yahoo.com/group/rest-discuss/message/13616&quot;&gt;http://tech.groups.yaho=\r\no.com/group/rest-discuss/message/13616&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span c=\r\nlass=3D&quot;Apple-style-span&quot; style=3D&quot;font-family: Georgia; font-size: 10px; &quot;=\r\n&gt;&lt;div class=3D&quot;subject root grey&quot; style=3D&quot;clear: both; font-family: Georgi=\r\na !important; font-weight: bold; color: rgb(102, 102, 102); padding-left: 4=\r\npx; background-image: none !important; &quot;&gt;\n\nRe: [rest-discuss] Newbie REST Q=\r\nuestion&lt;/div&gt;&lt;br&gt;&lt;div class=3D&quot;msgarea entry-content&quot; style=3D&quot;clear: both;=\r\n padding-top: 0px; padding-right: 4px; padding-bottom: 0px; padding-left: 4=\r\npx; &quot;&gt;On Fri, Oct 2, 2009 at 12:21 AM, Roy T. Fielding &lt;&lt;a href=3D&quot;http:=\r\n//tech.groups.yahoo.com/group/rest-discuss/post?postID=3DSJClec4h4JuSITI9W3=\r\naFfYVckGf2FEUb9VZCMR0K7Fj8rfcWLW3zZbJ_-GyKvMgW5Bb4f_rP6x9S&quot; style=3D&quot;text-d=\r\necoration: none; color: rgb(36, 124, 212); &quot;&gt;fielding@...&lt;/a&gt;&gt; wrote:&lt;br=\r\n&gt;\n\n&gt;&gt; Where do you get the idea that not all URIs need be or should b=\r\ne cool? (If I am understanding you correctly...)&lt;br&gt;&gt;&lt;br&gt;&gt; Umm, maybe=\r\n the several hundred conversations I&#39;ve had on&lt;br&gt;&gt; the topic with T=\r\nimBL in the room. =A0Cool URIs are permanent,&lt;br&gt;\n\n&gt; so if you want to b=\r\ne cool then make permanence a design&lt;br&gt;&gt; criteria. =A0That&#39;s all th=\r\nere is to it.=A0&lt;br&gt;&lt;br&gt;Agreed.&lt;br&gt;&lt;br&gt;&gt; Nobody is going to&lt;br&gt;&gt; argu=\r\ne=A0against too much URI permanence. =A0There is certainly&lt;br&gt;\n\n&gt; nothin=\r\ng about that in conflict with REST, so if you perceive&lt;br&gt;&gt; a conflict t=\r\nhen I suggest you look at your reasoning and&lt;br&gt;&gt; kill the paper tiger.&lt;=\r\nbr&gt;&lt;br&gt;I&#39;m glad to hear you confirm that there is no real conflict betw=\r\neen URI permanence and REST. I&#39;m also glad to hear you confirm that the=\r\nre is no real conflict between designs that depend on URI permanence and RE=\r\nST, eg out-of-band URI templates. (Which is how I read=A0&lt;a href=3D&quot;http://=\r\ntech.groups.yahoo.com/group/rest-discuss/message/13606&quot; style=3D&quot;text-decor=\r\nation: none; color: rgb(145, 54, 173); &quot;&gt;your other reply&lt;/a&gt;.)&lt;br&gt;\n\n&lt;br&gt;Wh=\r\nile others may use the word &quot;conflict&quot;, for the record, I don&#39=\r\n;t believe I used the word &quot;conflict&quot; in this thread -- I used th=\r\ne word &quot;tension&quot;. And I quoted an=A0&lt;a href=3D&quot;http://tech.groups=\r\n.yahoo.com/group/rest-discuss/message/12101&quot; style=3D&quot;text-decoration: none=\r\n; color: rgb(145, 54, 173); &quot;&gt;email of yours&lt;/a&gt;=A0from back in February th=\r\nat seemed to indicate that you did not completely disagree with the &quot;t=\r\nension&quot; characterization:&lt;br&gt;\n\n&lt;br&gt;&lt;blockquote class=3D&quot;webkit-indent-=\r\nblockquote&quot;&gt;&lt;i&gt;If there is a tension between the desire to bookmark and the=\r\n fact that REST encourages folks to break up an application into a state ma=\r\nchine of reusable resource states, then I would consider it to be more like=\r\n sexual tension. Just because you have it doesn&#39;t mean it is bad, and o=\r\nne way to improve things is to make the more important resource links look =\r\nsexier than the less important ones.&lt;/i&gt;&lt;/blockquote&gt;\n\n&lt;div style=3D&quot;clear:=\r\n none; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;clear: none; &quot;&gt;I suppose the fundamental t=\r\nension here (and perhaps in sexual tension as well -- who knows) is the ten=\r\nsion between the desire for permanence and stability vs. the desire for ada=\r\nptability and change.&lt;/div&gt;\n\n&lt;div style=3D&quot;clear: none; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;clear: none; &quot;&gt;-- Nick&lt;/div&gt;&lt;span class=3D&quot;universalsearch-bubble&quot; i=\r\nd=3D&quot;UniversalSearchContextBubbleId&quot; style=3D&quot;font-size: 12px; font-weight:=\r\n normal; font-style: normal; line-height: 0; background-color: transparent;=\r\n position: absolute; display: inline; z-index: 4194240; vertical-align: bas=\r\neline; margin-top: -31px; opacity: 0.7; &quot;&gt;&lt;span class=3D&quot;universalsearch-bu=\r\nbble-body&quot; onmouseover=3D&quot;this.parentNode.style.opacity=3D1; if(this.parent=\r\nNode.filters &amp;&amp; this.parentNode.filters.alpha) this.parentNode.filt=\r\ners.alpha.opacity=3D100;&quot; onmouseout=3D&quot;this.parentNode.style.opacity=3D0.7=\r\n;if(this.parentNode.filters &amp;&amp; this.parentNode.filters.alpha) this.=\r\nparentNode.filters.alpha.opacity=3D70;&quot; style=3D&quot;font-size: inherit; font-w=\r\neight: inherit; font-style: inherit; font-family: inherit; text-align: left=\r\n; text-indent: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0=\r\npx; padding-left: 0px; border-top-style: solid; border-right-style: solid; =\r\nborder-bottom-style: solid; border-left-style: solid; border-width: initial=\r\n; border-color: initial; margin-top: 0px; margin-right: 0px; margin-bottom:=\r\n 0px; margin-left: 0px; outline-width: 0px; outline-style: initial; outline=\r\n-color: initial; line-height: 0; background-image: none; background-attachm=\r\nent: initial; background-origin: initial; background-clip: initial; backgro=\r\nund-color: rgb(169, 208, 245); min-width: 0px; width: auto; height: 24px; v=\r\nertical-align: baseline; position: static; border-top-left-radius: 6px 6px;=\r\n border-top-right-radius: 6px 6px; border-bottom-right-radius: 6px 6px; bor=\r\nder-bottom-left-radius: 6px 6px; display: block; border-top-width: 2px; bor=\r\nder-right-width: 2px; border-bottom-width: 2px; border-left-width: 2px; bor=\r\nder-top-color: rgb(88, 172, 250); border-right-color: rgb(88, 172, 250); bo=\r\nrder-bottom-color: rgb(88, 172, 250); border-left-color: rgb(88, 172, 250);=\r\n background-position: initial initial; background-repeat: initial initial; =\r\n&quot;&gt;&lt;span class=3D&quot;universalsearch-bubble-iconframe&quot; style=3D&quot;font-size: inhe=\r\nrit; font-weight: inherit; font-style: inherit; font-family: inherit; text-=\r\nalign: left; text-indent: 0px; padding-top: 1px; padding-right: 1px; paddin=\r\ng-bottom: 1px; padding-left: 1px; border-top-style: none; border-right-styl=\r\ne: none; border-bottom-style: none; border-left-style: none; border-width: =\r\ninitial; border-color: initial; margin-top: -3px; margin-right: 0px; margin=\r\n-bottom: 0px; margin-left: -3px; outline-width: 0px; outline-style: initial=\r\n; outline-color: initial; line-height: inherit; background-image: none; bac=\r\nkground-attachment: initial; background-origin: initial; background-clip: i=\r\nnitial; background-color: transparent; min-width: 0px; width: auto; height:=\r\n auto; vertical-align: baseline; position: static; display: block; white-sp=\r\nace: nowrap; background-position: initial initial; background-repeat: initi=\r\nal initial; &quot;&gt;&lt;a class=3D&quot;universalsearch-bubble-link&quot; onclick=3D&quot;return fa=\r\nlse;&quot; id=3D&quot;BartUniversalSearch_ID_Copy&quot; title=3D&quot;Copy&quot; style=3D&quot;text-decor=\r\nation: none; font-size: inherit; font-weight: inherit; font-style: inherit;=\r\n font-family: inherit; text-align: left; text-indent: 0px; padding-top: 1px=\r\n; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; border-top-st=\r\nyle: solid; border-right-style: solid; border-bottom-style: solid; border-l=\r\neft-style: solid; border-width: initial; border-color: initial; margin-top:=\r\n 3px; margin-right: 0px; margin-bottom: 0px; margin-left: 3px; outline-widt=\r\nh: 0px; outline-style: initial; outline-color: initial; line-height: inheri=\r\nt; background-image: none; background-attachment: initial; background-origi=\r\nn: initial; background-clip: initial; background-color: transparent; min-wi=\r\ndth: 0px; width: auto; height: auto; vertical-align: baseline; position: st=\r\natic; display: inline-block; border-top-width: 1px; border-right-width: 1px=\r\n; border-bottom-width: 1px; border-left-width: 1px; border-top-color: rgb(1=\r\n69, 208, 245); border-right-color: rgb(169, 208, 245); border-bottom-color:=\r\n rgb(169, 208, 245); border-left-color: rgb(169, 208, 245); float: left; ba=\r\nckground-position: initial initial; background-repeat: initial initial; &quot;&gt;&lt;=\r\nimg alt=3D&quot;&quot; class=3D&quot;universalsearch-bubble-icon&quot; src=3D&quot;chrome-extension:=\r\n//hmcgifbelcmjecmkapejifljephjabjd/images/copy.png&quot; style=3D&quot;border-top-wid=\r\nth: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-wid=\r\nth: 0px; border-style: initial; border-color: initial; vertical-align: base=\r\nline; font-size: inherit; font-weight: inherit; font-style: inherit; font-f=\r\namily: inherit; text-align: left; text-indent: 0px; padding-top: 0px; paddi=\r\nng-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-style: no=\r\nne; border-right-style: none; border-bottom-style: none; border-left-style:=\r\n none; border-width: initial; border-color: initial; margin-top: 0px; margi=\r\nn-right: 0px; margin-bottom: 0px; margin-left: 0px; outline-width: 0px; out=\r\nline-style: initial; outline-color: initial; line-height: inherit; backgrou=\r\nnd-image: none; background-attachment: initial; background-origin: initial;=\r\n background-clip: initial; background-color: transparent; min-width: 0px; w=\r\nidth: 18px; height: 18px; position: static; display: block; background-posi=\r\ntion: initial initial; background-repeat: initial initial; &quot;&gt;&lt;/a&gt;&lt;a class=\r\n=3D&quot;universalsearch-bubble-link&quot; onclick=3D&quot;return false;&quot; id=3D&quot;BartUniver=\r\nsalSearch_ID_Search&quot; title=3D&quot;Google&quot; style=3D&quot;text-decoration: none; font-=\r\nsize: inherit; font-weight: inherit; font-style: inherit; font-family: inhe=\r\nrit; text-align: left; text-indent: 0px; padding-top: 1px; padding-right: 1=\r\npx; padding-bottom: 1px; padding-left: 1px; border-top-style: solid; border=\r\n-right-style: solid; border-bottom-style: solid; border-left-style: solid; =\r\nborder-width: initial; border-color: initial; margin-top: 3px; margin-right=\r\n: 0px; margin-bottom: 0px; margin-left: 3px; outline-width: 0px; outline-st=\r\nyle: initial; outline-color: initial; line-height: inherit; background-imag=\r\ne: none; background-attachment: initial; background-origin: initial; backgr=\r\nound-clip: initial; background-color: transparent; min-width: 0px; width: a=\r\nuto; height: auto; vertical-align: baseline; position: static; display: inl=\r\nine-block; border-top-width: 1px; border-right-width: 1px; border-bottom-wi=\r\ndth: 1px; border-left-width: 1px; border-top-color: rgb(169, 208, 245); bor=\r\nder-right-color: rgb(169, 208, 245); border-bottom-color: rgb(169, 208, 245=\r\n); border-left-color: rgb(169, 208, 245); float: left; background-position:=\r\n initial initial; background-repeat: initial initial; &quot;&gt;&lt;img alt=3D&quot;&quot; class=\r\n=3D&quot;universalsearch-bubble-icon&quot; src=3D&quot;chrome-extension://hmcgifbelcmjecmk=\r\napejifljephjabjd/images/enginedefault/google.ico&quot; style=3D&quot;border-top-width=\r\n: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width=\r\n: 0px; border-style: initial; border-color: initial; vertical-align: baseli=\r\nne; font-size: inherit; font-weight: inherit; font-style: inherit; font-fam=\r\nily: inherit; text-align: left; text-indent: 0px; padding-top: 0px; padding=\r\n-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-style: none=\r\n; border-right-style: none; border-bottom-style: none; border-left-style: n=\r\none; border-width: initial; border-color: initial; margin-top: 0px; margin-=\r\nright: 0px; margin-bottom: 0px; margin-left: 0px; outline-width: 0px; outli=\r\nne-style: initial; outline-color: initial; line-height: inherit; background=\r\n-image: none; background-attachment: initial; background-origin: initial; b=\r\nackground-clip: initial; background-color: transparent; min-width: 0px; wid=\r\nth: 18px; height: 18px; position: static; display: block; background-positi=\r\non: initial initial; background-repeat: initial initial; &quot;&gt;&lt;/a&gt;&lt;a class=3D&quot;=\r\nuniversalsearch-bubble-dropdownlink&quot; onclick=3D&quot;return false;&quot; id=3D&quot;BartUn=\r\niversalSearch_ID_MoreSearches&quot; title=3D&quot;More searches...&quot; style=3D&quot;text-dec=\r\noration: none; font-size: inherit; font-weight: inherit; font-style: inheri=\r\nt; font-family: inherit; text-align: left; text-indent: 0px; padding-top: 1=\r\npx; padding-right: 1px; padding-bottom: 1px; padding-left: 1px; border-top-=\r\nstyle: solid; border-right-style: solid; border-bottom-style: solid; border=\r\n-left-style: solid; border-width: initial; border-color: initial; margin-to=\r\np: 3px; margin-right: 0px; margin-bottom: 0px; margin-left: 3px; outline-wi=\r\ndth: 0px; outline-style: initial; outline-color: initial; line-height: inhe=\r\nrit; background-image: none; background-attachment: initial; background-ori=\r\ngin: initial; background-clip: initial; background-color: transparent; min-=\r\nwidth: 0px; width: 9px; height: 18px; vertical-align: baseline; position: s=\r\ntatic; display: inline-block; border-top-width: 1px; border-right-width: 1p=\r\nx; border-bottom-width: 1px; border-left-width: 1px; border-top-color: rgb(=\r\n169, 208, 245); border-right-color: rgb(169, 208, 245); border-bottom-color=\r\n: rgb(169, 208, 245); border-left-color: rgb(169, 208, 245); float: left; b=\r\nackground-position: initial initial; background-repeat: initial initial; &quot;&gt;=\r\n&lt;img alt=3D&quot;&quot; class=3D&quot;universalsearch-bubble-dropdownicon&quot; src=3D&quot;chrome-e=\r\nxtension://hmcgifbelcmjecmkapejifljephjabjd/images/downarrow.png&quot; style=3D&quot;=\r\nborder-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; b=\r\norder-left-width: 0px; border-style: initial; border-color: initial; vertic=\r\nal-align: baseline; font-size: inherit; font-weight: inherit; font-style: i=\r\nnherit; font-family: inherit; text-align: left; text-indent: 0px; padding-t=\r\nop: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border=\r\n-top-style: none; border-right-style: none; border-bottom-style: none; bord=\r\ner-left-style: none; border-width: initial; border-color: initial; margin-t=\r\nop: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; outline-w=\r\nidth: 0px; outline-style: initial; outline-color: initial; line-height: inh=\r\nerit; background-image: none; background-attachment: initial; background-or=\r\nigin: initial; background-clip: initial; background-color: transparent; min=\r\n-width: 0px; width: 9px; height: 18px; position: static; display: block; ba=\r\nckground-position: initial initial; background-repeat: initial initial; &quot;&gt;&lt;=\r\n/a&gt;&lt;div&gt;\n\n&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;=\r\n&lt;div&gt;Nick Gall&lt;br&gt;Phone: +1.781.608.5871&lt;br&gt;Twitter: ironick&lt;br&gt;AOL IM: Nic=\r\nholas Gall&lt;br&gt;Yahoo IM: nick_gall_1117&lt;br&gt;MSN IM: (same as email)&lt;br&gt;Google=\r\n Talk: (same as email)&lt;br&gt;\n\nEmail: nick.gall AT-SIGN gmail DOT com&lt;br&gt;Weblo=\r\ng: &lt;a href=3D&quot;http://ironick.typepad.com/ironick/&quot;&gt;http://ironick.typepad.c=\r\nom/ironick/&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sun, Mar 14, 2010=\r\n at 11:50 AM, Kevin Duffey &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:andjarni=\r\nc@...&quot;&gt;andjarnic@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=\r\n=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padd=\r\ning-left:1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n        \n\n\n\n&lt;div&gt;\n\n\n\n\n\n&lt;br&gt;&lt;br&gt;\n\n\n\n\n&lt;table cellspac=\r\ning=3D&quot;0&quot; cellpadding=3D&quot;0&quot; border=3D&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=3D&quot;top&quot; styl=\r\ne=3D&quot;font:inherit&quot;&gt;Hi Peter,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;As for why I care.. I don&#=\r\n39;t.. I thought it would not be HATEOAS if a URI could be accessed directl=\r\ny and not &quot;discovered&quot;? From all the posts, it seemed to me that =\r\nif you accessed any URI directly, and not via an initial URI entry point th=\r\nat then gave you URIs you could use based on the resource state, I figured =\r\nthat was not the HATEOAS/REST way. I couldn&#39;t figure out how you could =\r\nactually validate that a URI was called based on a URI you passed back prev=\r\niously, given the no state restraint in terms of resources on the server si=\r\nde.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I suppose tho, that a client should not save=\r\n URIs for future direct access, as data may change, even resources could ch=\r\nange, hence the ability to evolve the server side without breaking the clie=\r\nnt.&lt;/div&gt;\n\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;--- On &lt;b&gt;Sat, 3/13/10, Peter Williams\n =\r\n&lt;i&gt;&lt;&lt;a href=3D&quot;mailto:pezra@...&quot; target=3D&quot;_blank&quot;&gt;pezra@ba=\r\nrelyenough.org&lt;/a&gt;&gt;&lt;/i&gt;&lt;/b&gt; wrote:&lt;br&gt;&lt;blockquote style=3D&quot;border-left:2=\r\npx solid rgb(16, 16, 255);margin-left:5px;padding-left:5px&quot;&gt;&lt;br&gt;From: Peter=\r\n Williams &lt;&lt;a href=3D&quot;mailto:pezra@...&quot; target=3D&quot;_blank&quot;&gt;p=\r\nezra@...&lt;/a&gt;&gt;&lt;br&gt;\n\nSubject: Re: [rest-discuss] HTTP request=\r\n and &quot;type safety&quot;&lt;br&gt;To: &quot;Kevin Duffey&quot; &lt;&lt;a href=3D=\r\n&quot;mailto:andjarnic@...&quot; target=3D&quot;_blank&quot;&gt;andjarnic@...&lt;/a&gt;&gt;,=\r\n &quot;Rest List&quot; &lt;&lt;a href=3D&quot;mailto:rest-discuss@yahoogroups.com&quot; =\r\ntarget=3D&quot;_blank&quot;&gt;rest-discuss@yahoogroups.com&lt;/a&gt;&gt;&lt;br&gt;\n\nDate: Saturday,=\r\n March 13, 2010, 8:37 AM&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D&quot;h5&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div&gt;On F=\r\nri, Mar 12, 2010 at 9:57 PM, Kevin Duffey &lt;&lt;a href=3D&quot;http://mc/compose?=\r\nto=3Dandjarnic@...&quot; target=3D&quot;_blank&quot;&gt;andjarnic@...&lt;/a&gt;&gt; wro=\r\nte:&lt;br&gt;\n\n&lt;br&gt;&gt; I am confused a bit about this. I was just thinking this =\r\ntoday. If I&lt;br&gt;&gt; provide a single URI point of entry, and an OPTION or G=\r\nET request is&lt;br&gt;&gt; sent, it returns some relevant links that can be call=\r\ned based on the&lt;br&gt;\n\n&gt; state of the resource. Now, to get those links, I=\r\n have to first&lt;br&gt;&gt; access the point of entry URI. What happens\n if say =\r\na bot program (or&lt;br&gt;&gt; even a client developer) decides to cache/save th=\r\nese URIs that&lt;br&gt;&gt; return. Then at some point later, call those URIs dir=\r\nectly instead&lt;br&gt;&gt; of the point of entry URI first to get those URIs bac=\r\nk. They could&lt;br&gt;\n\n&gt; even navigate some links for a while, then save the=\r\n various URIs&lt;br&gt;&gt; deeper down. Later, call those directly.&lt;br&gt;&lt;br&gt;A URI=\r\n that is saved -- iow, bookmarked -- counts as an entry point&lt;br&gt;URI.=A0 Th=\r\nis sort of bookmarking is required to implement many kinds of&lt;br&gt;\n\nsystems =\r\ncomposed of multiple components that expose REST style&lt;br&gt;interfaces.&lt;br&gt;&lt;b=\r\nr&gt;Of course, there is no guarantee that URIs saved by a client will&lt;br&gt;rema=\r\nin valid over time.=A0 Clients that save URIs must accept that the&lt;br&gt;\n\nres=\r\nources those URIs name may disappear as any point in the future.&lt;br&gt;Well be=\r\nhaved servers do not disable URIs capriciously (see Cool URIs),&lt;br&gt;but reso=\r\nurces do have life-cycles that are governed by their\n domain.&lt;br&gt;&lt;br&gt;&lt;br&gt;&g=\r\nt; My confusion of this is because the server side is stateless. It&lt;br&gt;&gt;=\r\n retains no state. So how can I validate a URI that a client/bot&lt;br&gt;&gt; sa=\r\nved from some previous use, to make sure it&#39;s valid at the time of&lt;br&gt;\n=\r\n\n&gt; call? I have no state on the server side that says &quot;this URI is&lt;=\r\nbr&gt;&gt; being called BEFORE the URI that returns this URI was called.. it&#=\r\n39;s&lt;br&gt;&gt; a bad call&quot;. So I am unsure as to how to validate every s=\r\ningle URI&lt;br&gt;\n\n&gt; call to make sure it was called at a time when it shoul=\r\nd be called,&lt;br&gt;&gt; and not just randomly out of order. I suppse we can us=\r\ne some sort of&lt;br&gt;&gt; timestamp on every single URI that goes back, not su=\r\nre entirely how&lt;br&gt;\n\n&gt; that would work at this point, but I suppose the =\r\nserver would check&lt;br&gt;&gt; this value when it came back in to the current s=\r\nerver time stamp and&lt;br&gt;&gt; make sure it&#39;s within so many minutes of w=\r\nhen it was issued. But a&lt;br&gt;\n\n&gt; smart client developer/bot could possibl=\r\ny\n figure that out, and&lt;br&gt;&gt; update this value before making the request=\r\n, and since the server&lt;br&gt;&gt; keeps no state, if the modified timestamp is=\r\n within the right time&lt;br&gt;&gt; of the server, it would void that route of v=\r\nalidating a URI.&lt;br&gt;\n\n&lt;br&gt;Why do you care if the resources are accessed &qu=\r\not;out of order&quot;?&lt;br&gt;&lt;br&gt;If there are domain reasons for a resource to=\r\n be available for a&lt;br&gt;limited time, the application logic should destroy/d=\r\neactivate the&lt;br&gt;\nresource once it is no longer valid.=A0 In that case, thi=\r\ns hypothetical&lt;br&gt;\nclient with get a 410 or 404 when it attempts to make re=\r\nquests of the&lt;br&gt;now nonexistent resource.&lt;br&gt;&lt;br&gt;If there is no domain rea=\r\nson for the resource to expire why is it a&lt;br&gt;problem for a client to save =\r\na URI and the access it later?&lt;br&gt;\n\n&lt;br&gt;Peter&lt;br&gt;&lt;a href=3D&quot;http://barelyen=\r\nough.org&quot; target=3D&quot;_blank&quot;&gt;http://barelyenough.org&lt;/a&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/di=\r\nv&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;\n\n      \n\n\n\n\n\n&lt;br&gt;\n\n    =\r\n\n    \n&lt;br&gt;\n\n\n\n\n&lt;div width=3D&quot;1&quot; style=3D&quot;color:white;clear:both&quot;&gt;&lt;/div&gt;\n\n\n\n=\r\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--001485f42412caa00b0481c913e3--\r\n\n"}}