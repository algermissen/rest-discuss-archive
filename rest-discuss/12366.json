{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":371338898,"authorName":"Bill Burke","from":"Bill Burke &lt;bburke@...&gt;","profile":"patriot1burke","replyTo":"SENDER","senderId":"cb6EEER8XuTqQ49wXUqjcWvGScDFdpkID4H5Tpth-NWavtAfUTNgqBQOJh22IGJ6M7hKe3ffCn2wVRsep_oxsecO2bD5","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Why HATEOAS?","postDate":"1238593213","msgId":12366,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ5RDM2RUJELjcwNDAyMDBAcmVkaGF0LmNvbT4=","inReplyToHeader":"PGY4YjM5YWNlMDkwMzMxMTc1OWwzY2JjZGFmNWoyZDkwZWU5NzJhMjJmNGFiQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDU1YzYwZTM3MDkwMzMxMTcwMXg0YWRhYzAyZG8zNjliNWQ4NjE3MDBmNmU2QG1haWwuZ21haWwuY29tPiA8ZjhiMzlhY2UwOTAzMzExNzU5bDNjYmNkYWY1ajJkOTBlZTk3MmEyMmY0YWJAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":12365,"nextInTopic":12367,"prevInTime":12365,"nextInTime":12367,"topicId":12357,"numMessagesInTopic":27,"msgSnippet":"... How would you initially define and then evolve your XML schema in such an environment?  I know Atom allows arbitrary attributes and elements in its schema","rawEmail":"Return-Path: &lt;bburke@...&gt;\r\nX-Sender: bburke@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 23952 invoked from network); 1 Apr 2009 13:40:39 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by 98.137.34.37 with QMQP; 1 Apr 2009 13:40:39 -0000\r\nX-Received: from unknown (HELO mx2.redhat.com) (66.187.237.31)\n  by mta3.grp.sp2.yahoo.com with SMTP; 1 Apr 2009 13:40:39 -0000\r\nX-Received: from int-mx2.corp.redhat.com (int-mx2.corp.redhat.com [172.16.27.26])\n\tby mx2.redhat.com (8.13.8/8.13.8) with ESMTP id n31DeFMT019047;\n\tWed, 1 Apr 2009 09:40:15 -0400\r\nX-Received: from ns3.rdu.redhat.com (ns3.rdu.redhat.com [10.11.255.199])\n\tby int-mx2.corp.redhat.com (8.13.1/8.13.1) with ESMTP id n31DeGWm011619;\n\tWed, 1 Apr 2009 09:40:16 -0400\r\nX-Received: from bill-burkes-computer.local (vpn-13-105.rdu.redhat.com [10.11.13.105])\n\tby ns3.rdu.redhat.com (8.13.8/8.13.8) with ESMTP id n31DeElb014203;\n\tWed, 1 Apr 2009 09:40:15 -0400\r\nMessage-ID: &lt;49D36EBD.7040200@...&gt;\r\nDate: Wed, 01 Apr 2009 09:40:13 -0400\r\nUser-Agent: Thunderbird 2.0.0.21 (Macintosh/20090302)\r\nMIME-Version: 1.0\r\nTo: craigmcc@...\r\nCc: Solomon Duskis &lt;sduskis@...&gt;,\n        Rest List &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;55c60e370903311701x4adac02do369b5d861700f6e6@...&gt; &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nIn-Reply-To: &lt;f8b39ace0903311759l3cbcdaf5j2d90ee972a22f4ab@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-Scanned-By: MIMEDefang 2.58 on 172.16.27.26\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: Bill Burke &lt;bburke@...&gt;\r\nSubject: Re: [rest-discuss] Why HATEOAS?\r\nX-Yahoo-Group-Post: member; u=371338898; y=hPCsnXUjERI7IGk7by7_8PLCdY6QQtdlskJ2bCa8cmTXvWFkSaBohA\r\nX-Yahoo-Profile: patriot1burke\r\n\r\nCraig McClanahan wrote:\n&gt; \n&gt; * FINE GRAINED EVOLUTION WITHOUT (NECESSARILY) BREAKING OLD CLIENTS.\n&gt; At any given time, the client of any REST API is going to be\n&gt; programmed with *some* assumptions\n&gt; about what the system can do. But, if you document a restriction to\n&gt; &quot;pay attention to only those\n&gt; aspects of the representation that you know about&quot;, plus a server\n&gt; side discipline to add things later\n&gt; that don&#39;t disrupt previous behavior, you can evolve APIs fairly\n&gt; quickly without breaking all clients,\n&gt; or having to support multiple versions of the API simultaneously on\n&gt; your server. You don&#39;t have to\n&gt; wait years for serendipity benefits :-). Especially compared to\n&gt; something like SOAP where the\n&gt; syntax of your representations is versioned (in the WSDL), so you\n&gt; have to mess with the clients\n&gt; on every single change.\n&gt; \n\nHow would you initially define and then evolve your XML schema in such \nan environment?  I know Atom allows arbitrary attributes and elements in \nits schema so that it can easily evolve or allow custom data to be \nappended.  What about validation though?  Too bad XML schema isn&#39;t \npolymorphic.\n\nAnother thought I had on HATEOAS was, what about making the links a part \nof your schema?  i.e. specifying in your schema the exact relationships \nand types (but not URIs) that will be made available.  If you combine \nthis with HTTP content negotiation, the client can guarantee a specific \nversion of its conversation or business process.  It also allows the \nserver to tell the client it doesn&#39;t support that type of interaction \nanymore.\n\nBTW, thanks a lot for the explanation.  This will help me greatly when \nexplaining HATEOAS to colleagues, users, and customers.\n\n-- \nBill Burke\nJBoss, a division of Red Hat\nhttp://bill.burkecentral.com\n\n"}}