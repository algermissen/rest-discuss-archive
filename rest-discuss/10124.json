{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":12653864,"authorName":"Elliotte Rusty Harold","from":"Elliotte Rusty Harold &lt;elharo@...&gt;","replyTo":"SENDER","senderId":"EcszXAzgFio1MyTXf0_l-GCjpy0-YNL0ZAxhXYM3EZnQzG8AElRloLp5swsP6hoBP2aNNXiyJetqcRk1OfcSoG1SDd-dn4MwhZvW9pzUwG0QH4cXCA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: RESTful design for Articles & Tags?","postDate":"1198943112","msgId":10124,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQ3NzY2Qjg4LjIwMEBtZXRhbGFiLnVuYy5lZHU+","inReplyToHeader":"PDA4OWQwMWM4NGEyYSRmNzYxNzNlMCQwNzAyYThjMEBHdWlkZXMubG9jYWw+","referencesHeader":"PFcyOTE4OTU2MDg2MzE0MTE5ODkyOTg3M0BtYWlsLm1haWxzbmFyZS5uZXQ+IDwwODlkMDFjODRhMmEkZjc2MTczZTAkMDcwMmE4YzBAR3VpZGVzLmxvY2FsPg=="},"prevInTopic":10123,"nextInTopic":10125,"prevInTime":10123,"nextInTime":10125,"topicId":9891,"numMessagesInTopic":99,"msgSnippet":"... Because the project would no longer be a nightmare? ... Many, many projects have used SQL databases for this because there were no reasonable alternatives.","rawEmail":"Return-Path: &lt;elharo@...&gt;\r\nX-Sender: elharo@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 36734 invoked from network); 29 Dec 2007 15:45:15 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m35.grp.scd.yahoo.com with QMQP; 29 Dec 2007 15:45:15 -0000\r\nX-Received: from unknown (HELO mail2.sea5.speakeasy.net) (69.17.117.4)\n  by mta16.grp.scd.yahoo.com with SMTP; 29 Dec 2007 15:45:15 -0000\r\nX-Received: (qmail 7151 invoked from network); 29 Dec 2007 15:45:14 -0000\r\nX-Received: from dsl254-067-087.nyc1.dsl.speakeasy.net (HELO [192.168.254.100]) (elharo@[216.254.67.87])\n          (envelope-sender &lt;elharo@...&gt;)\n          by mail2.sea5.speakeasy.net (qmail-ldap-1.03) with AES256-SHA encrypted SMTP\n          for &lt;mikeschinkel@...&gt;; 29 Dec 2007 15:45:14 -0000\r\nMessage-ID: &lt;47766B88.200@...&gt;\r\nDate: Sat, 29 Dec 2007 10:45:12 -0500\r\nUser-Agent: Thunderbird 2.0.0.9 (Macintosh/20071031)\r\nMIME-Version: 1.0\r\nTo: Mike Schinkel &lt;mikeschinkel@...&gt;\r\nCc: eric@..., rest-discuss@yahoogroups.com\r\nReferences: &lt;W29189560863141198929873@...&gt; &lt;089d01c84a2a$f76173e0$0702a8c0@...&gt;\r\nIn-Reply-To: &lt;089d01c84a2a$f76173e0$0702a8c0@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Elliotte Rusty Harold &lt;elharo@...&gt;\r\nReply-To: elharo@...\r\nSubject: Re: [rest-discuss] Re: RESTful design for Articles & Tags?\r\nX-Yahoo-Group-Post: member; u=12653864; y=KUEMGWxWcbEw_u6_hvFkz5o2Iziz5jIF_eU_6953FTdsNs22\r\n\r\nMike Schinkel wrote:\n\n&gt; Besides, I once tried for about six months to use XML to store documents and\n&gt; it turned out to be the biggest nightmare project I ever undertook, and it\n&gt; failed miserably.  So why would I want to use an XML database?  \n\nBecause the project would no longer be a nightmare?\n\n\n&gt;&gt; If you \n&gt;&gt; insist that documents must be derived from SQL databases, \n&gt;&gt; then yes, perhaps JSON is a better alternative.  \n&gt; \n&gt; If *I* insist?  Why not learn something about the open-source project before\n&gt; assigning me the responsibility of having selected the backend.  (Even so, I\n&gt; would not these days ever choose an XML database...)\n\nMany, many projects have used SQL databases for this because there were \nno reasonable alternatives. That is changing. Needing database services \ndoes not imply that one needs to cut everything into fields or store \nunstructured BLOBs. These are the compromises we have made because we \nhad no better alternatives.\n\nNow, however, better alternatives are appearing by the month. Three or \neven two years ago, the right choice for a new web system was still a \nSQL database. However in many cases that&#39;s not true any more, and it&#39;s \nless and less true by the month as XML databases improve.\n\nThe legacy systems like WordPress and Drupal will be with us for a long \ntime of course. When they were invented they made the right choices for \nbackends. But were a similar product invented today, the right choice of \nbackend would be very different.\n\n&gt;&gt; Granted, JavaScript is deployed in more browsers than XML, \n&gt;&gt; but I wouldn&#39;t go so far as to call it a default.  \n\nI&#39;d challenge that. Off the top of my head I can&#39;t think of a single \ncurrent browser that supports JavaScript but not XML. I also know many \npeople who turn off JavaScript (perhaps on a site-by-site basis using \nthe Firefox NoScript extension). I don&#39;t know anybody who turns off XML. \n  I don&#39;t think you even can, and nobody&#39;s asked to be able to do that. \nThe X in XSS does not stand for XML.\n\n&gt; I don&#39;t have the expertise to confirm or deny, but the point was that &quot;When\n&gt; comparing ... it seems clear that the XML version takes more code ( in the\n&gt; browser than when using JSON) and requires a layer of mental indirection as\n&gt; the developer has to be knowledgeable about XML APIs and their\n&gt; idiosyncracies.&quot;  This is just quoting Dare Obasanjo:\n&gt; \n&gt; http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=39842a17-781a-45c8-ade\n&gt; 5-58286909226b\n\nNone of that&#39;s relevant if you&#39;re using XSLT. There are exactly three \nannoying cross-browser problems you have to deal with in XSLT: white \nspace handling, the document() function, and MIME types. All three are \nwell understood and easily dealt with. Would you even want to attempt to \nenumerate the cross-browser issues in JavaScript?\n\n&gt;&gt; Developing and debugging AJAX applications \n&gt;&gt; cross-browser is 100 times more of a chore than XSLT apps.\n&gt; \n&gt; I strongly disagree with that assertion.  I worked on a failed project I\n&gt; previously referenced that used XSLT, and as it grew it became more and more\n&gt; fragile to the point of being completely unworkable. The side effects that\n&gt; can results from an XSLT transform and their unintended consequents are\n&gt; legendary.\n\nI call bullshit on that. That is so far from my experience I simply \ndon&#39;t believe you.\n\n&gt; Using XSLT requires one to opt-in to a XSLT library, and I know from\n&gt; experience the pain of experience the differences there are between those.\n&gt; The things you can&#39;t do is XSLT that Microsoft&#39;s version allows are really\n&gt; pathetic.  I&#39;d quote them if I hadn&#39;t blocked most of my XSLT knowledge from\n&gt; memory.\n\nAh, now I understand. You never actually learned XSLT. You learned the \nMicrosoft  pseudo-XSLT. I&#39;m afraid Microsoft did some very nasty things \nin the early days of IE 5 and XML. They have now mostly recanted those. \nMicrosoft was the one marching out of step with the band, not everybody \nelse. You are, I am afraid, yet another victim of Microsoft disinformation.\n\n&gt; That is a non-sequitur.  I&#39;ve already mentioned my painful experience that\n&gt; any XSLT app which is anything larger than trivial is a maintenance\n&gt; nightmare.  By its very nature XSLT is fragile and effectively impossible to\n&gt; test because of XSLT&#39;s side-effecty nature. Conversely you can unit test\n&gt; Javascript (or any number of other similar languages) and ensure that a unit\n&gt; of code works as intended and always will. \n\nXSLT is a pure functional language with no side effects. Whatever \nlanguage you were working with it certainly doesn&#39;t sound like XSLT. It \nsounds like someone fed you a haggis for Christmas dinner, called it a \nturkey, and consequently you now think we&#39;re all crazy because we say we \nlove turkey.\n\n&gt; But the irony of this argument is I don&#39;t really need to make it.  A large\n&gt; number of developers are using JSON/Javascript instead of XML/XSLT for the\n&gt; very reasons I mention; it is just a whole lot easier to use JSON than XML\n&gt; in the browser. That may frustrate those enamored with XML/XSLT, but\n&gt; developers are voting with their feet and all those advocating XML can&#39;t\n&gt; stop it.\n\nActually no. I know not one single person (including you) who has chosen \nJavaScript/JSON over XML/XSLT. I do know many people who have chosen \nJavaScript/JSON over JavaScript/DOM but that&#39;s a very different story.\n\n\n&gt; Listen, the reason I&#39;m arguing strongly for JSON and against XML is because\n&gt; of the cargo-cultist mentality regarding XML that I seem to have unearthed\n&gt; here. I&#39;m not really anti-XML (though I am anti XSLT and anti- for overdoing\n&gt; namespaces, especially as namespaces identified by non-deferenceable URIs),\n&gt; I&#39;m just seeing that is many times easier to work with JSON in the browser.\n&gt; The fact you have to defend XML tells me though doth protest too much.\n\nYou&#39;re not even ant-XSLT. You just think you are. I don&#39;t believe you&#39;ve \never worked with real XSLT. What you experienced was not XSLT.\n\n-- \nElliotte Rusty Harold  elharo@...\nJava I/O 2nd Edition Just Published!\nhttp://www.cafeaulait.org/books/javaio2/\nhttp://www.amazon.com/exec/obidos/ISBN=0596527500/ref=nosim/cafeaulaitA/\n\n"}}