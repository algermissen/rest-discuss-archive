{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":145532415,"authorName":"Stefan Tilkov","from":"Stefan Tilkov &lt;stefan.tilkov@...&gt;","profile":"stilkov","replyTo":"SENDER","senderId":"DCZS_l8TQxENvXvQzJZJCHnq0UkJ-gTFI6s52Zaj3QBFnztiMUZhbA1ZwvE6us74CzLCh6ZqViDeI20B8jGTv7m7NPyIRbZ1jmf3XGfZ","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [rest-discuss] States vs. Operations","postDate":"1245953659","msgId":12960,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEU0OUJCNkMxLTEzOTItNEVBRi05MkNELUU2OEVEMzAxQTQ2NUBpbm5vcS5jb20+","inReplyToHeader":"PDg3bGpuZzVyZXkuZnNmQG1pY3JvamV0LmF0aC5jeD4=","referencesHeader":"PDRBNDM3RTgwLjUwMjA2QHJlZGhhdC5jb20+IDw4N2xqbmc1cmV5LmZzZkBtaWNyb2pldC5hdGguY3g+"},"prevInTopic":12959,"nextInTopic":12962,"prevInTime":12959,"nextInTime":12961,"topicId":12928,"numMessagesInTopic":85,"msgSnippet":"... +1, by far the best solution IMO (with the  idea being equal). DELETE /cache is bad because a subsequent GET on /cache will likely return","rawEmail":"Return-Path: &lt;stefan.tilkov@...&gt;\r\nX-Sender: stefan.tilkov@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 37324 invoked from network); 25 Jun 2009 18:14:50 -0000\r\nX-Received: from unknown (69.147.108.202)\n  by m8.grp.re1.yahoo.com with QMQP; 25 Jun 2009 18:14:50 -0000\r\nX-Received: from unknown (HELO mail.innoq.com) (87.106.55.185)\n  by mta3.grp.re1.yahoo.com with SMTP; 25 Jun 2009 18:14:50 -0000\r\nX-Received: from [10.0.1.4] (mue-88-130-79-063.dsl.tropolys.de [88.130.79.63])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby mail.innoq.com (Postfix) with ESMTPSA id 5702B30A9F3;\n\tThu, 25 Jun 2009 20:14:20 +0200 (CEST)\r\nCc: REST-Discuss Discussion Group &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;E49BB6C1-1392-4EAF-92CD-E68ED301A465@...&gt;\r\nTo: Yohanes Santoso &lt;yahoo-rest-discuss@...&gt;\r\nIn-Reply-To: &lt;87ljng5rey.fsf@...&gt;\r\nContent-Type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: quoted-printable\r\nMime-Version: 1.0 (Apple Message framework v935.3)\r\nDate: Thu, 25 Jun 2009 20:14:19 +0200\r\nReferences: &lt;4A437E80.50206@...&gt; &lt;87ljng5rey.fsf@...&gt;\r\nX-Mailer: Apple Mail (2.935.3)\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: Stefan Tilkov &lt;stefan.tilkov@...&gt;\r\nSubject: Re: [rest-discuss] States vs. Operations\r\nX-Yahoo-Group-Post: member; u=145532415; y=-f7YNVW7iznRifUIiDO7xTiDU6-EQL-UbNH19bHXPuF14Q\r\nX-Yahoo-Profile: stilkov\r\n\r\nOn 25.06.2009, at 16:17, Yohanes Santoso wrote:\n\n&gt;\n&gt;\n&gt; Bill Burke &lt;bburke@r=\r\nedhat.com&gt; writes:\n&gt;\n&gt; &gt; Yesterday, in a meeting at JBoss, I was evangelizi=\r\nng REST to a few  \n&gt; of my\n&gt; &gt; colleagues. An interesting question came up:=\r\n\n&gt; &gt;\n&gt; &gt; Let&#39;s say you have a distributed cache you want to manage through =\r\na\n&gt; &gt; RESTful interface. One operation on the cache is clearing or  \n&gt; flus=\r\nhing\n&gt; &gt; it. The interesting thing about flushing is that the act of flushi=\r\nng\n&gt; &gt; changes the state of the cache, but &quot;flushing&quot; isn&#39;t a state of the\n=\r\n&gt; &gt; cache itself. It seems to be a pure operation. How do you model\n&gt; &gt; som=\r\nething like this in REST? Is it correct to do:\n&gt; &gt;\n&gt; &gt; PUT /cache/flusher (=\r\nPUT because flushing is idempotent)\n&gt;\n&gt; To flush, I&#39;d:\n&gt;\n&gt; PUT /cache\n&gt; &lt;em=\r\npty body&gt;\n&gt;\n&gt;\n\n+1, by far the best solution IMO (with the &lt;collection /&gt; id=\r\nea being  \nequal). DELETE /cache is bad because a subsequent GET on /cache =\r\nwill  \nlikely return 200. PUT /cache/flusher only makes sense if I GET back=\r\n  \nsomething on /cache/flusher that at least somehow resembles what I PUT  =\r\n\nto it.\n\nThe only thing I would consider would be a POST on /cache/flush. B=\r\nut  \nthat fails to exploit the idempotency of PUT and uses the cop-out  \n&#39;p=\r\nrocess this&#39; aspect of POST. I&#39;d always suggest to not use POST if  \nanothe=\r\nr verb can be used without violating its intent.\n\nStefan\n--\nStefan Tilkov, =\r\nhttp://www.innoq.com/blog/st/\n\n\n\n&gt; YS.\n&gt;\n&gt; \n\n\n"}}