{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":22895181,"authorName":"Dan Haywood","from":"Dan Haywood &lt;dan@...&gt;","profile":"danhaywood@ymail.com","replyTo":"SENDER","senderId":"Ds0geMW1QhVnLXvIycU0baDuTd_dvI6GbQwz8XZMJpvqXY4rp1P78vMjXdvPbs2Wk-CNcGPmyb42objRsPqJQzkhAmihrbVdbiSJI_RRMbZc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Should a RESTful API expose use cases & view models rather than entities?","postDate":"1317210235","msgId":17807,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRFODMwODdCLjEwMTA5MDhAaGF5d29vZC1hc3NvY2lhdGVzLmNvLnVrPg==","inReplyToHeader":"PENBTmdrbUxCcll0MkxjcEtNNFVEUHhnVGN0Q1AteENOLW8wek9FYnY1TXRqN1hXRDFBQUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PGo1cDdwMytpMmF0QGVHcm91cHMuY29tPiA8Q0FQV184bTVuMk9aWDE4MllYVXIyNS1XajhPVnV4bk4yMjh6MV9aT2Q4N1FpUU54bkxnQG1haWwuZ21haWwuY29tPiA8NEU4MkM2NTAuMTA0MDUwMEBoYXl3b29kLWFzc29jaWF0ZXMuY28udWs+IDxDQU5na21MQnJZdDJMY3BLTTRVRFB4Z1RjdENQLXhDTi1vMHpPRWJ2NU10ajdYV0QxQUFAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":17806,"nextInTopic":17808,"prevInTime":17806,"nextInTime":17808,"topicId":17795,"numMessagesInTopic":16,"msgSnippet":"... Can you explain why a more complex workflow should be modelled in this way?  Why does the client s viewpoint need to be divorced from the state of the","rawEmail":"Return-Path: &lt;dan@...&gt;\r\nX-Sender: dan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 34912 invoked from network); 28 Sep 2011 11:43:58 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m12.grp.sp2.yahoo.com with QMQP; 28 Sep 2011 11:43:58 -0000\r\nX-Received: from unknown (HELO mail-ww0-f54.google.com) (74.125.82.54)\n  by mta4.grp.sp2.yahoo.com with SMTP; 28 Sep 2011 11:43:58 -0000\r\nX-Received: by wwf5 with SMTP id 5so7762049wwf.23\n        for &lt;rest-discuss@yahoogroups.com&gt;; Wed, 28 Sep 2011 04:43:53 -0700 (PDT)\r\nX-Received: by 10.227.198.205 with SMTP id ep13mr8958880wbb.42.1317210233413;\n        Wed, 28 Sep 2011 04:43:53 -0700 (PDT)\r\nReturn-Path: &lt;dan@...&gt;\r\nX-Received: from [10.70.53.153] ([46.233.64.128])\n        by mx.google.com with ESMTPS id z9sm40241279wbn.19.2011.09.28.04.43.52\n        (version=TLSv1/SSLv3 cipher=OTHER);\n        Wed, 28 Sep 2011 04:43:52 -0700 (PDT)\r\nMessage-ID: &lt;4E83087B.1010908@...&gt;\r\nDate: Wed, 28 Sep 2011 12:43:55 +0100\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20110902 Thunderbird/6.0.2\r\nMIME-Version: 1.0\r\nTo: craigmcc@..., \n &quot;rest-discuss@yahoogroups.com&quot; &lt;rest-discuss@yahoogroups.com&gt;\r\nReferences: &lt;j5p7p3+i2at@...&gt; &lt;CAPW_8m5n2OZX182YXUr25-Wj8OVuxnN228z1_ZOd87QiQNxnLg@...&gt; &lt;4E82C650.1040500@...&gt; &lt;CANgkmLBrYt2LcpKM4UDPxgTctCP-xCN-o0zOEbv5Mtj7XWD1AA@...&gt;\r\nIn-Reply-To: &lt;CANgkmLBrYt2LcpKM4UDPxgTctCP-xCN-o0zOEbv5Mtj7XWD1AA@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dan Haywood &lt;dan@...&gt;\r\nSubject: Re: [rest-discuss] Should a RESTful API expose use cases & view models\n rather than entities?\r\nX-Yahoo-Group-Post: member; u=22895181; y=n2Zx2PN2VlnFpPFALvi_0r4FqKOq2ORL6pWHawZeC0J9CpCOXuB5BRGTBcCcC0c\r\nX-Yahoo-Profile: danhaywood@...\r\n\r\nOn 28/09/2011 08:52, Craig McClanahan wrote:\n&gt; A couple of things I keep in mind when designing REST APIs:\n&gt;\n&gt; * For CRUD-based functionality, it is not uncommon for there to be a\n&gt; relatively 1:1 mapping\n&gt;    between available CRUD operations and corresponding web service\n&gt; endpoints (using\n&gt;    appropriate HTTP verbs, of course).\n&gt;\n&gt; * For more complex workflows, like a shopping cart, the REST API should\n&gt; be defined\n&gt;    as a state machine (from the client&#39;s viewpoint), which might be\n&gt; totally divorced from\n&gt;    the internal functionality on the server.\n\nCan you explain why a more complex workflow should be modelled in this \nway?  Why does the client&#39;s viewpoint need to be divorced from the state \nof the entities?  What does it buy me (and what are the trade-offs)?\n\n\n&gt;\n&gt; Rickard&#39;s biggest complaint in the article you reference is that\n&gt; many/most APIs that claim to be RESTful do not actually obey the\n&gt; hypermedia (a.k.a. HATEOAS) constraint, and include URIs for the client\n&gt; to use for initiating state changes.  In the shopping cart case, for\n&gt; example, the representation returned to the user should include the\n&gt; current state of the cart (to obey the statelessness constraint),\n&gt; *and* a URI for the client to use for initiating a checkout operation.\n\nThat article didn&#39;t seem to make any compelling reason to go with use \ncases, though.  The only thing I read was that figuring out which links \nto expose (from an authorization viewpoint) is difficult to do.  Which I \ndon&#39;t happen to agree with.\n\nBut it seems to be conventional wisdom to do this, so I&#39;m trying to find \nout why.\n\n\n"}}