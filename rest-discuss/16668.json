{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"NGzOUUIZamsq6BDKP0NWACigpHL3CbFqoO9b7dNE8cmkcDQf4m5qHofH0N2LoArZxRczYbv0aMLdnZG1_ME8GngSUshYgqxDfJl6BDrDug","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST and self-descriptiveness","postDate":"1285392728","msgId":16668,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTAwOTI0MjMzMjA4LmE2MWJmMWU2LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDIwMTAwOTI0MjEwNjI2LjU2YzYzMTE3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","referencesHeader":"PEFBTkxrVGlucERBMHE4MTFHNmU2QU5NaEVIMEJ4RGVqbmNYVFI5a21TOCthaEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwOTIzMDA0MTQ1LjlmYTAyMTI1LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGk9RnNUck1pcE5ZX1pkWTFzcnFvdGIydUF4MnVuT19UNHlQclhDeEBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwOTIzMDQyNTI1LmM2YmJlYTVkLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4JPEFBTkxrVGltV0MwMSttSG83YnM2SHJjby1LVlRxa0FNWm1Kcnd5MGYyMlEtQUBtYWlsLmdtYWlsLmNvbT4JPDIwMTAwOTI0MjEwNjI2LjU2YzYzMTE3LmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4="},"prevInTopic":16667,"nextInTopic":16669,"prevInTime":16667,"nextInTime":16669,"topicId":16634,"numMessagesInTopic":49,"msgSnippet":"... OK, I see where I m confusing folks.  A registered identifier is self- descriptive if it points to a spec, that spec doesn t need to be a standard.  Such a","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 40647 invoked from network); 25 Sep 2010 05:32:12 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 25 Sep 2010 05:32:12 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta2.grp.sp2.yahoo.com with SMTP; 25 Sep 2010 05:32:11 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 2BF45509B3;\n\tSat, 25 Sep 2010 01:32:11 -0400 (EDT)\r\nDate: Fri, 24 Sep 2010 23:32:08 -0600\r\nTo: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nCc: Alan Dean &lt;alan.dean@...&gt;, REST Discussion Group\n &lt;rest-discuss@yahoogroups.com&gt;\r\nMessage-Id: &lt;20100924233208.a61bf1e6.eric@...&gt;\r\nIn-Reply-To: &lt;20100924210626.56c63117.eric@...&gt;\r\nReferences: &lt;AANLkTinpDA0q811G6e6ANMhEH0BxDejncXTR9kmS8+ah@...&gt;\n\t&lt;20100923004145.9fa02125.eric@...&gt;\n\t&lt;AANLkTi=FsTrMipNY_ZdY1srqotb2uAx2unO_T4yPrXCx@...&gt;\n\t&lt;20100923042525.c6bbea5d.eric@...&gt;\n\t&lt;AANLkTimWC01+mHo7bs6Hrco-KVTqkAMZmJrwy0f22Q-A@...&gt;\n\t&lt;20100924210626.56c63117.eric@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] REST and self-descriptiveness\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\n&gt; \n&gt; Standardization isn&#39;t a requirement for a self-descriptive media type\n&gt; identifier, only registration is required, and there&#39;s only one\n&gt; registry (which may very well be due for an overhaul).\n&gt; \n\nOK, I see where I&#39;m confusing folks.  A registered identifier is self-\ndescriptive if it points to a spec, that spec doesn&#39;t need to be a\nstandard.  Such a registered identifier is still &quot;standardized&quot; in that\nit&#39;s followed the approved RFC process.  I confuse myself sometimes...\n\nChanging the pertinent RFCs to allow an alternative to the IANA\nregistry, i.e. a discovery mechanism, could allow standardized\nunregistered identifiers (i.e. the x. subtree).  Could such a solution\nbe called self-descriptive becomes the question, if I understand\ncorrectly?\n\nAs an example, Javscript identifiers are a mishmash.  I would prefer to\nuse application/javascript, as per RFC 4329, which considers text/\njavascript to be obsolete (also quite common in the wild is application/\nx-javascript).  But, I send &#39;text/javascript; charset=utf-8&#39; because\nusing application/javascript crashes UTF-8 scripts in IE.\n\nThe variety of identifiers pointing to the same processing model is a\nproblem, but I also believe it&#39;s a historic problem -- we know better\nnow, and hopefully re-registering existing JSON types using +json is\nthe last time we&#39;ll make this mistake.  The problem tends to self-\ncorrect over time, a feature of a central registry (even if unwieldy).\n\nA discovery mechanism, it seems to me, would amplify this problem over\ntime.  Anything which increasingly splits a processing model into\nmultiple identifiers goes against the generic interoperability objective\nof self-descriptiveness -- each occurrence reduces the chances of any\nto become ubiquitous.  Having application/javascript and only\napplication/javascript refer to the latest ECMA standard would be best.\n\nIf a discovery mechanism accounts for this (and the collision problem),\nI would think the pragmatic results may falsify the constraint -- the\nresult would be a different architectural style, but with no\ndisadvantage (provided all other constraints/standardizations are\nfollowed).\n\nLikewise with the collision problem.  This is one thing that&#39;s\ninherently avoided with a central registry.  Witness the collision of\nprocessing models identified by application/rss+xml, which is not\nstandardized because it isn&#39;t registered (even if it points to a bunch\nof standards).  Had those projects followed the standards for\nregistering their identifiers, no such collision would have occurred in\nthe first place, and we&#39;d have two separate, registered identifiers.\n\nIf a discovery mechanism accounts for this (and the splitting problem),\nI would think the pragmatic results may falsify the constraint -- etc.\nas in the previous paragraph.  Whether it&#39;s appropriate to go ahead and\ncall it REST, if such mechanism were to evolve, would be Roy&#39;s call, as\nit&#39;s up to Roy to change his definition of self-descriptive to mean\neither registered *or* discoverable.\n\n-Eric\n\n"}}