{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":465410965,"authorName":"Nathan","from":"Nathan &lt;nathan@...&gt;","profile":"nathanrixham","replyTo":"SENDER","senderId":"4uMWoJxSDio_DZ02A-jbDV1AL_uXAN910NsxNeFckfUGgOUoyob_ZEdMH2zhgOyvVPRoXu4QMQQqNq1HvJ4q-A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [rest-discuss] Why SPARQL endpoints aren&#39;t even remotely RESTful.","postDate":"1296724518","msgId":17292,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRENEE3MjI2LjUwMjAyMDVAd2VicjMub3JnPg==","inReplyToHeader":"PEFBTkxrVGlrZDlTM1RVcDMrajd5aENjMXVzYXUwNmN2a05XOS03d3NpaUpPUUBtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PDIwMTEwMjAyMDc0MDI5LmZhYzgyMTlhLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4gPEFBTkxrVGlrZDlTM1RVcDMrajd5aENjMXVzYXUwNmN2a05XOS03d3NpaUpPUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":17291,"nextInTopic":17293,"prevInTime":17291,"nextInTime":17293,"topicId":17281,"numMessagesInTopic":22,"msgSnippet":"... this supposes that a SPARQL query engine is always positioned on the server side - it s positioned at the edges of the network, sometimes on the client","rawEmail":"Return-Path: &lt;nathan@...&gt;\r\nX-Sender: nathan@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 96317 invoked from network); 3 Feb 2011 09:15:49 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m17.grp.re1.yahoo.com with QMQP; 3 Feb 2011 09:15:49 -0000\r\nX-Received: from unknown (HELO p3plsmtpa01-05.prod.phx3.secureserver.net) (72.167.82.85)\n  by mta1.grp.re1.yahoo.com with SMTP; 3 Feb 2011 09:15:48 -0000\r\nX-Received: (qmail 25023 invoked from network); 3 Feb 2011 09:15:48 -0000\r\nX-Received: from unknown (86.133.148.188)\n  by p3plsmtpa01-05.prod.phx3.secureserver.net (72.167.82.85) with ESMTP; 03 Feb 2011 09:15:47 -0000\r\nMessage-ID: &lt;4D4A7226.5020205@...&gt;\r\nDate: Thu, 03 Feb 2011 09:15:18 +0000\r\nOrganization: webr3\r\nUser-Agent: Thunderbird 2.0.0.24 (Windows/20100228)\r\nMIME-Version: 1.0\r\nTo: Mark Baker &lt;distobj@...&gt;\r\nCc: rest-discuss@yahoogroups.com\r\nReferences: &lt;20110202074029.fac8219a.eric@...&gt; &lt;AANLkTikd9S3TUp3+j7yhCc1usau06cvkNW9-7wsiiJOQ@...&gt;\r\nIn-Reply-To: &lt;AANLkTikd9S3TUp3+j7yhCc1usau06cvkNW9-7wsiiJOQ@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Nathan &lt;nathan@...&gt;\r\nReply-To: nathan@...\r\nSubject: Re: [rest-discuss] Why SPARQL endpoints aren&#39;t even remotely RESTful.\r\nX-Yahoo-Group-Post: member; u=465410965; y=ou2cLmG9v0oeRa8LqWbgOjPVuHRR6Zsiof3gmoasdt9ziLtq2uHL\r\nX-Yahoo-Profile: nathanrixham\r\n\r\nMark Baker wrote:\n&gt; I would say that the proper criticism here isn&#39;t that SPARQL isn&#39;t\n&gt; RESTful, nor that it should be, but instead that the potentially\n&gt; expensive queries SPARQL enables are simply not suitable across trust\n&gt; boundaries.  See (including the comments);\n&gt; \n&gt; http://www.markbaker.ca/blog/2006/08/sparql-useful-but-not-a-game-changer/\n\nthis supposes that a SPARQL query engine is always positioned on the \nserver side\n  - it&#39;s positioned at the edges of the network, sometimes on the \nclient (backed by an HTTP cache and conditional GETs), sometimes it&#39;s \na shared client accessible by HTTP GETs (w/ optional caching) and \noften accessible by &quot;normal&quot; URIs (no query string or the like), and \nsometimes &quot;on the server&quot;.\n\nthis supposes that it&#39;s used for private data over a public interface\n  - that&#39;s orthogonal, when people have private data their they can \nsecure access by any kind of auth* / use HTTP+TLS. Similarly, often \nthe data /is/ open public data, there&#39;s a term.. &quot;linked *open* data&quot;\n\nNow, I&#39;m not saying &quot;SPARQL&quot; is perfect, but it&#39;s completely \northogonal to REST - how you implement, position and expose SPARQL is \nnot though, but don&#39;t think for a second that &quot;sparql is always on the \nserver side, never cached, always unsecured and always uses post&quot; \nbecause that&#39;s completely wrong.\n\nBest,\n\nNathan\n\n"}}