{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":482294859,"authorName":"Jan Algermissen","from":"Jan Algermissen &lt;algermissen1971@...&gt;","profile":"algermissen1971","replyTo":"SENDER","senderId":"Lcr73EfC5TXZnsiPRidkX1_SH57RxJHwTAGe7HDwHo4GbqssQJdZHaeECUR7ihz0_ip98e5uBnviFnmsnA6o1UVVYAEsoANJQoKSMcz5Gw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] REST and HATEOAS in the context of native applications?","postDate":"1311852846","msgId":17619,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk3MDc3OTgyLUZCNzUtNDBBQi1BOTFCLUJGN0ZFNzNBQkQ2REBtZS5jb20+","inReplyToHeader":"PDg3dHlhN3A1OXEud2wlYmVyZW5kQHBvYm94LmNvbT4=","referencesHeader":"PGowcGI3ZCtpYWRpQGVHcm91cHMuY29tPiA8ODd0eWE3cDU5cS53bCViZXJlbmRAcG9ib3guY29tPg=="},"prevInTopic":17618,"nextInTopic":17620,"prevInTime":17618,"nextInTime":17620,"topicId":17617,"numMessagesInTopic":40,"msgSnippet":"... This is serious mis-information, Berend. The intention behind using the REST architectural style is to create systems that have a well determined set of","rawEmail":"Return-Path: &lt;algermissen1971@...&gt;\r\nX-Sender: algermissen1971@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 63675 invoked from network); 28 Jul 2011 11:34:08 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 28 Jul 2011 11:34:08 -0000\r\nX-Received: from unknown (HELO asmtpout025.mac.com) (17.148.16.100)\n  by mta2.grp.sp2.yahoo.com with SMTP; 28 Jul 2011 11:34:08 -0000\r\nMIME-version: 1.0\r\nContent-transfer-encoding: 7BIT\r\nContent-type: text/plain; CHARSET=US-ASCII\r\nX-Received: from [10.162.155.51] ([80.187.110.179])\n by asmtp025.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01\n 64bit (built Nov 21 2010)) with ESMTPSA id &lt;0LP1003HSK4S3760@...&gt;\n for rest-discuss@yahoogroups.com; Thu, 28 Jul 2011 04:34:08 -0700 (PDT)\r\nX-Proofpoint-Virus-Version: vendor=fsecure\n engine=2.50.10432:5.4.6813,1.0.211,0.0.0000\n definitions=2011-07-28_03:2011-07-28,2011-07-28,1970-01-01 signatures=0\r\nX-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0\n ipscore=0 suspectscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam\n adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1107280062\r\nIn-reply-to: &lt;87tya7p59q.wl%berend@...&gt;\r\nDate: Thu, 28 Jul 2011 13:34:06 +0200\r\nCc: Daniel Roussel &lt;daniel@...&gt;, rest-discuss@yahoogroups.com\r\nMessage-id: &lt;97077982-FB75-40AB-A91B-BF7FE73ABD6D@...&gt;\r\nReferences: &lt;j0pb7d+iadi@...&gt; &lt;87tya7p59q.wl%berend@...&gt;\r\nTo: Berend de Boer &lt;berend@...&gt;\r\nX-Mailer: Apple Mail (2.1082)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jan Algermissen &lt;algermissen1971@...&gt;\r\nSubject: Re: [rest-discuss] REST and HATEOAS in the context of native\n applications?\r\nX-Yahoo-Group-Post: member; u=482294859; y=at7aQ7FosSrK4lmB61XXs6YLMkcrwo7ralOISm7Psbnj_I7S9MlUI7Ww\r\nX-Yahoo-Profile: algermissen1971\r\n\r\n\nOn Jul 28, 2011, at 3:23 AM, Berend de Boer wrote:\n\n&gt; There are levels of REST, so I suggest you don&#39;t worry too much about\n&gt; HATEOAS.\n\nThis is serious mis-information, Berend.\n\nThe intention behind using the REST architectural style is to create systems that have a well determined set of properties (certain performance, certain scalability, certain evolvability ...[1]). These properties are *only* induced if *all* of RESTs constraints are applied. There is no &#39;I&#39;ll do half of the constraints and get half of the benefits&#39; approach.\n\nThere are no levels of REST. It is an either-or thing.\n\nAnd, in addition to that, the hypermedia constraint is *the* most important one. It is the hardest to understand (at least for me it was) but the most enlightening one also. Instead of putting it aside, I suggest you dive right into it, all the way until you grok it.\n\nJan\n\n\n[1] See the dissertation for all of them.\n\n\n\n"}}