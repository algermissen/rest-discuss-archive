{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":266460716,"authorName":"Eric J. Bowman","from":"&quot;Eric J. Bowman&quot; &lt;eric@...&gt;","replyTo":"SENDER","senderId":"mJLc6b_6lg5lM0h4-MwAt3SrtaU1T6-MjMm1fyZ5_FI7nUmPO3IbQhJic5_ikpG5e_5gqSP9R1A5OvJtyOavvRMERNFhyrSFBAjD22Bc-g","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: [rest-discuss] Loose coupling - a RESTful myth?","postDate":"1297127121","msgId":17331,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMTEwMjA3MTgwNTIxLjQ4MDhjODVmLmVyaWNAYmlzb25zeXN0ZW1zLm5ldD4=","inReplyToHeader":"PDRENTA0QjRBLjYwNzAxMDhAZWxia2xhbmcubmV0Pg==","referencesHeader":"PGlpanRtcytwMzRhQGVHcm91cHMuY29tPgk8NEQ1MDRCNEEuNjA3MDEwOEBlbGJrbGFuZy5uZXQ+"},"prevInTopic":17330,"nextInTopic":17333,"prevInTime":17330,"nextInTime":17332,"topicId":17322,"numMessagesInTopic":13,"msgSnippet":"... Don t forget portability, see Chapter 2.3.6. ... This is more a reality than an opinion, and exactly the point I ve been trying to make for some months","rawEmail":"Return-Path: &lt;eric@...&gt;\r\nX-Sender: eric@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 46940 invoked from network); 8 Feb 2011 01:05:46 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m3.grp.sp2.yahoo.com with QMQP; 8 Feb 2011 01:05:46 -0000\r\nX-Received: from unknown (HELO mxout-08.mxes.net) (216.86.168.183)\n  by mta1.grp.sp2.yahoo.com with SMTP; 8 Feb 2011 01:05:46 -0000\r\nX-Received: from bigbison (unknown [65.117.211.162])\n\t(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))\n\t(No client certificate requested)\n\tby smtp.mxes.net (Postfix) with ESMTPSA id 071B6509EB;\n\tMon,  7 Feb 2011 20:05:44 -0500 (EST)\r\nDate: Mon, 7 Feb 2011 18:05:21 -0700\r\nTo: Bob Ferris &lt;zazi@...&gt;\r\nCc: rest-discuss@yahoogroups.com, algermissen1971@...\r\nMessage-Id: &lt;20110207180521.4808c85f.eric@...&gt;\r\nIn-Reply-To: &lt;4D504B4A.6070108@...&gt;\r\nReferences: &lt;iijtms+p34a@...&gt;\n\t&lt;4D504B4A.6070108@...&gt;\r\nOrganization: Bison Systems Corporation\r\nX-Mailer: Sylpheed 3.0.3 (GTK+ 2.10.14; i686-pc-mingw32)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Eric J. Bowman&quot; &lt;eric@...&gt;\r\nSubject: Re: [rest-discuss] Loose coupling - a RESTful myth?\r\nX-Yahoo-Group-Post: member; u=266460716\r\n\r\nBob Ferris wrote:\n&gt;\n&gt; All in all, I think, it depends more on the degree of existing\n&gt; appropriated Semantic Web ontologies to model (parts of) a domain,\n&gt; rather then on existing media types. While there can (theoretically)\n&gt; exist a huge variety of both and such a huge amount would decrease\n&gt; the simplicity property in both cases;\n&gt;\n\nDon&#39;t forget portability, see Chapter 2.3.6.\n\n&gt;\n&gt; I nevertheless think, that it is maybe better to have less media\n&gt; types and more (especially reusable) Semantic Web ontologies, rather\n&gt; then an equal high amount of media types.\n&gt;\n\nThis is more a reality than an opinion, and exactly the point I&#39;ve been\ntrying to make for some months now.  There&#39;s a reason that only a\nrelative handful of media types are ubiquitous, and it&#39;s unreasonable\nto expect that it&#39;s even possible for even a hundred media types to be\nreliably implemented across client, server, and intermediary components\nwhich make up the deployed infrastructure of the Web.\n\nThat any system involves domain-specific vocabulary is pretty much a\ngiven; this is not justification for solving this problem through the\ncreation of domain-specific media/data types.\n\n&gt;\n&gt; The costs that have to be invested into good ontology design maybe\n&gt; align with the costs of proper media type design.\n&gt;\n\nNo, they are infinitely less.  Since an ontology has no effect on\nmessaging amongst connectors, no standardization is required, allowing\nthe &quot;invisible hand of the market&quot; to decide which ontologies are most\nuseful.  GoodRelations is a de-facto standard (unless and until\nsomething better comes along), not an official one.\n\nAn ontology is an order of magnitude less work to design than\ndata/media types, even without considering the high opportunity cost of\nmarshalling a standards effort (which takes years, followed by even\nmore years until new standardized media types achieve ubiquitous\ndeployment).\n\nWhich is why I believe that REST must be the basis for the Semantic Web.\nThe two disciplines solve different problems at different layers,\nseparating concerns nicely.  The major impediment to SemWeb these days,\nas I see it, is the failure of its deployed examples to follow proper\narchitecture for the medium.  The problems Roy addresses in Chapter\n2.3.1&#39;s second paragraph, apply to any and all uses of the Web.  REST\nsolves for the fundamental problem of the nature of *any* network, i.e.\ngetting either data or agents from point A to point B, constrains the\nset of applicable points of architecture (why the thesis only considers\n*networked* and excludes *desktop* software architectural styles).\n\n&gt; \n&gt; 2. I think, fulfilling the hypermedia as the engine of application\n&gt; state constraint is maybe still the hardest part. I cannot really\n&gt; imagine that &quot;a transition from HTTP-based Type || to REST at a later\n&gt; point in time, however, is rather easy&quot;.\n&gt;\n\nI agree; the cache constraint is rather easy to fiddle with over time,\nbut the uniform interface constraints are not at all easy to correct if\nthey&#39;re gotten wrong initially.\n\n&gt;\n&gt; Furthermore, &quot;turning a HTTP-based Type || API into a REST API might\n&gt; be as easy as deleting the API documentation&quot; is a bit paradox from\n&gt; my point of view.\n&gt;\n\nIn some cases, it&#39;s true.  This is kinda the point of the hypertext\nconstraint -- if the API is self-documenting, what&#39;s left to explain?\nSee this discussion, for an example of a self-documenting REST API,\nboth before and after my modifications to its code:\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/17057\n\nFully RESTful, like many Web interfaces in the wild, just not sexy\nenough to meet folks&#39; expectations of what REST is.\n\n&gt;\n&gt; When I would remove the API documentation than this application\n&gt; cannot really be an API any more, or? When I would like to program\n&gt; against (?) something ( ;) ), I have to know how I could do that.\n&gt;\n\nExactly the point of the hypertext constraint.  Prior discussion on the\nmeaning of &quot;API&quot; may be found here:\n\nhttp://tech.groups.yahoo.com/group/rest-discuss/message/16052\n\n&gt;\n&gt; For instance a web browser do not really program against (?)\n&gt; something.\n&gt;\n\nBrowsers are coded against standardized media types; it&#39;s this shared\nunderstanding of the processing model which makes out-of-band\ndocumentation mostly irrelevant.  If your documentation has to explain\nto me that your media type means that &lt;url&gt; contains a URI, then you&#39;re\ndoing too much work -- you don&#39;t need to tell me that, in text/html,\n@href contains a URI (if you have, then your documentation probably can\nbe deleted without consequences).\n\n&gt;\n&gt; I think the term &#39;REST API&#39; might be a bit inappropriate here (I\n&gt; still doubt that a implementation of service, which is fully REST\n&gt; compatible, is possible).\n&gt;\n\nA REST API is what you, the developer, creates.  It is possible to\nfully implement the constraints, to the extent that the chosen protocols\nimplement them.  The fact that HTTP 1.1 doesn&#39;t fully implement self-\ndescriptive messaging, doesn&#39;t mean you can safely ignore using\nregistered media types -- that aspect of the constraint is something\nyou do have control over.  Of course, the complexity of meeting the\nconstraints (to the overall, long-term benefit of simplicity) rises\nwith the complexity of the system.\n\n&gt;\n&gt; The given examples for REST are not really APIs, or?\n&gt;\n\nMost examples of REST are examples of things which aren&#39;t really REST.\nFurthermore, just what sort of canonical example are you expecting from\na tool which may be used to guide the development of transfer protocols\nlike HTTP, application protocols like AtomPub, and APIs which implement\none or even both of the former?  More detailed response pending for the\nother thread on this topic, still...\n\n&gt; \n&gt; 3. Just a small issue: better &quot;REST might be the best solution&quot;,\n&gt; rather than &quot;REST is the best solution&quot;. I guess, &#39;is&#39; requires a\n&gt; kind of proof, or? Could we really provide a complete proof about\n&gt; this? - I currently don&#39;t think so.\n&gt; \n\nDisagree.  If you&#39;re developing a distributed hypertext system, then\nRoy&#39;s thesis is scientific proof that there&#39;s a set of constraints\nwhich describe an optimal behavioral model.  Said thesis is subject to\nfalsification, which hasn&#39;t occurred.  The constraint that&#39;s most\nsusceptible to falsification would be client-server, in an age of P2P\nprotocols, but I&#39;ve not seen it.  Considering all the peer review Roy&#39;s\nthesis has had, with proof evident in the success of the Web, I&#39;d say\nthat if anything was overlooked or outright wrong, somebody would have\nspotted it by now.\n\n-Eric\n\n"}}