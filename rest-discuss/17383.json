{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":180614093,"authorName":"Stuart Charlton","from":"Stuart Charlton &lt;stuartcharlton@...&gt;","profile":"stuartcharlton","replyTo":"SENDER","senderId":"ssx6jBwiQQCDruUFsrv1fRv3NEZiyT__VXpP4iB3CRmuA286i4iG8eGzc5wjYzS3jwmPVAtoQnvW4Nw_8_l45MMnorO_cRmkn3mUaUw2aWXi","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: design vs runtime in representations","postDate":"1298513422","msgId":17383,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxMTI2Ni4xMDE0NS5xbUB3ZWIxMTQ2MDUubWFpbC5ncTEueWFob28uY29tPg=="},"prevInTopic":17382,"nextInTopic":17384,"prevInTime":17382,"nextInTime":17384,"topicId":17374,"numMessagesInTopic":9,"msgSnippet":"comments inline ... Yes, I agree. ... Well, the question is, should domain-specific data be tightly coupled to a generic media type or not. Let s assume a","rawEmail":"Return-Path: &lt;stuartcharlton@...&gt;\r\nX-Sender: stuartcharlton@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nX-Received: (qmail 38129 invoked from network); 24 Feb 2011 02:10:23 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m8.grp.sp2.yahoo.com with QMQP; 24 Feb 2011 02:10:23 -0000\r\nX-Received: from unknown (HELO web114605.mail.gq1.yahoo.com) (98.136.183.30)\n  by mta1.grp.sp2.yahoo.com with SMTP; 24 Feb 2011 02:10:23 -0000\r\nX-Received: (qmail 11219 invoked by uid 60001); 24 Feb 2011 02:10:22 -0000\r\nMessage-ID: &lt;411266.10145.qm@...&gt;\r\nX-YMail-OSG: 6Mp2EQkVM1mbG71tfKFKhZbtOI_s9qbsxB4UPJhSjMonagX\n LtJkkNjHOUnhogFPzUkGflJHqQc.amToPKQQgTz1MO9ufrLA_NXjABUy0wUy\n Mvvsi2NdNafL766MGTi8k7txOVFPWmreuhQFrgnsUt_AwilahinfIamFXsG7\n FIriIR5Wmx45RYZ.RaMFZAXlOt5meI8LvhLE4bv6oA7TjowcIdKkH46blxXN\n UufIPDHLMahby1E5.WsOQyAjeQohUQsRQkc8182IBX2QtctfKnTjYDikhXby\n GVTyCWIPFXRkl8MkmMSLnzmyUkQhvYqhk8rwR7Z9ieHdXF0vd3e4ILL_pVbB\n s9ROunDTYC3AD8_rYzFjtMeO_lVuHcoJ6Edu.lYqPBzBCIYUoij8vUQ0DR6n\n xBi5B2q9zbL8P\r\nX-Received: from [75.158.83.96] by web114605.mail.gq1.yahoo.com via HTTP; Wed, 23 Feb 2011 18:10:22 PST\r\nX-Mailer: YahooMailClassic/11.4.20 YahooMailWebService/0.8.109.292656\r\nDate: Wed, 23 Feb 2011 18:10:22 -0800 (PST)\r\nTo: rest-discuss@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Stuart Charlton &lt;stuartcharlton@...&gt;\r\nSubject: Re: [rest-discuss] Re: design vs runtime in representations\r\nX-Yahoo-Group-Post: member; u=180614093; y=XfvELfYY4WtzQeic3Ydr6JKhglAzh9IS6CsWxkrE4i3a4Jgfbpm6WjE\r\nX-Yahoo-Profile: stuartcharlton\r\n\r\ncomments inline\n\n--- On Wed, 2/23/11, wahbedahbe &lt;andrew.wahbe@...&gt; wrote:\n\n\n&gt; The amount of runtime flexibility depends on the hypermedia controls that are available. For example, if there \n&gt; were no links or forms in HTML, then the browser (or the user) would be bound to the interface specifics of \n&gt; every service out there.\n\nYes, I agree.\n\n&gt; A developer can make up for that by interpreting the control themselves and coding the knowledge in the \n&gt; client, but then as you say, they are turning a runtime binding into a design-time binding.\n\nWell, the question is, should domain-specific data be tightly coupled to a generic media type or not.\n\nLet&#39;s assume a generic media type, like a &lt;form&gt;.   A representation may have an &lt;input name=&quot;quoteSymbol&quot;&gt; that a user agent could bind against to its application.   However, we&#39;re always going to have disagreement in data:  between representations from different origin servers, between the representation and the user agent&#39;s application - not everyone will use the same data definitions, symbols, etc.   The best we can hope for is standardized bits & pieces of highly common data, perhaps some highly common industry consortium data (e.g. ISO 20022 or EDI), and a straightforward way to handle the rest of the differences.\n\nThis straightforward way of handling differences tends to imply a combination of:  \n1. an explicit data model in the media type, \n2. data transformation advice (e.g. linking to an XSLT), \n3. deeper semantic description from another representation (e.g. SKOS, OWL, etc.), \n4. or a user has to manipulate the representation to conform to client application expectations.  \n\nThe latter case we might call a mashup developer today.\n\n&gt; I believe that it is possible to build machine controls that provide much more run time flexibility than is \n&gt; afforded machines by HTML. I always point to CCXML as an example of this. I suspect, however, that the more \n&gt; powerful machine controls are, the more they must target specific types of machines. I think the whole area \n&gt; needs more investigation though.\n\nSCXML (and CCXML by extension), has an interesting take on this and may have a practical solution for future media types, though I wish SCXML had richer support for HTTP interactions.  It partly gets around the data problem by describing an explicit data model and mappings to ECMAscript & XPath.   \n\nBut even still, if we had an application that was concerned with integration, we would need some kind of configuration in the user agent to bridge the gap between the data (and events / state transitions!) in the representation and my internal application data.    This configuration would occur AFTER we had retrieved the SCXML document.   We could build some clever semantic extensions to ease this burden, but practically speaking, it can only go so far. \n\nThis is why I brought up the need for a design time / run time separation between retrieving the representation describing an unsafe operation (e.g. a stock quote order form), or a process (e.g. an SCXML to order stocks), and the actual endpoints that will be repeatedly invoked at runtime (e.g. a live stock quote).   \n\nWe can&#39;t get completely away from the divergence of semantics in data & actions, though I bet we could close the gap from today&#39;s situation by quite a lot.\n\nCheers\nStu\n\n\n\n\n"}}