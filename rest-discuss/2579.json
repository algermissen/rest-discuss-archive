{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":119393616,"authorName":"firepipe_au","from":"&quot;firepipe_au&quot; &lt;michael@...&gt;","profile":"firepipe_au","replyTo":"SENDER","senderId":"-OSi8RDVXb5QTRn7Gsli47ForM11ZFt7e3e7YRnLQJh1Fr6Xj1hJ007CXtK5lqNRbNHMZU5gmf-IqOcz3YfMlSmlJFwYs6UF3OsPTZ3-tbMcr9lRr6Us9A","spamInfo":{"isSpam":false,"reason":"0"},"subject":"PUT and FTP legacy","postDate":"1032237034","msgId":2579,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFtNmI1YStsajlnQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":2580,"prevInTime":2578,"nextInTime":2580,"topicId":2579,"numMessagesInTopic":2,"msgSnippet":"Just some thoughts on PUT/POST and query strings Seairth mentioned the baggage of FTP in the HTTP RFC.  I tend to agree that PUT looks suspiciously to me like","rawEmail":"Return-Path: &lt;michael@...&gt;\r\nX-Sender: michael@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (EGP: mail-8_1_1_3); 17 Sep 2002 04:30:37 -0000\r\nReceived: (qmail 24947 invoked from network); 17 Sep 2002 04:30:36 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m9.grp.scd.yahoo.com with QMQP; 17 Sep 2002 04:30:36 -0000\r\nReceived: from unknown (HELO n13.grp.scd.yahoo.com) (66.218.66.68)\n  by mta2.grp.scd.yahoo.com with SMTP; 17 Sep 2002 04:30:37 -0000\r\nReceived: from [66.218.67.175] by n13.grp.scd.yahoo.com with NNFMP; 17 Sep 2002 04:30:37 -0000\r\nDate: Tue, 17 Sep 2002 04:30:34 -0000\r\nTo: rest-discuss@yahoogroups.com\r\nSubject: PUT and FTP legacy\r\nMessage-ID: &lt;am6b5a+lj9g@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3933\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;firepipe_au&quot; &lt;michael@...&gt;\r\nX-Yahoo-Group-Post: member; u=119393616\r\nX-Yahoo-Profile: firepipe_au\r\n\r\nJust some thoughts on PUT/POST and query strings\n\nSeairth mentioned the baggage of FTP in the HTTP RFC.  I tend to \nagree that PUT looks suspiciously to me like PUT &lt;file&gt;.  Harkening \nback to FTP, a server administrator can easily set up an area (let&#39;s \ncall it /incoming/) where users can dump files without security \nclearance.  If one user PUTs a file called &quot;my_worm.exe&quot;, there is \nnothing stopping another user PUTting a different file with exactly \nthe same name, overwriting the first.  The FTP server will not \ncomplain, because it&#39;s a non-privileged area.  PUT is idempotent in \nthis case: great.\n\nPoint 1:\nI can&#39;t see how this can work on an HTTP server.  You need to set up \nthat non-privileged area to protect /your/ documents from being \noverwritten. If you are setting up a non-privileged area, that \nimplies that all of your other areas a privileged, which is almost \nnever the case.  PUT (in this simple and I believe originally \nintended FTP sense) in this instance creates a really massive \noverhead of creating authentication schemes for everywhere but some \npublic space.  You don&#39;t have any of your own processors working \nbehind the scenes here, so you&#39;ve got to rely on your server \nsoftware&#39;s authentication schemes, which may or may not allow you to \nrestrict a PUT operation while allowing GETs (couldn&#39;t find such a \nthing with Apache, for instance) on any particular area.\n\nPoint 2:\nThen again, GET on its own isn&#39;t particularly useful for Web services \nuntil you start adding query strings onto the end of it.  If PUT is \nin some senses the &#39;reverse&#39; operation of GET, why haven&#39;t I seen \nanyone mention the possibility of\n\nPUT http://www.server.org/processor?name=Babs+Jensen&phone=88889999 \nHTTP/1.1\n\nDoesn&#39;t this make PUT an idempotent operation?  When I do\n\nGET http://www.server.org/processor?name=Babs+Jensen&phone=88889999 \nHTTP/1.1\n\nI should get\n\n200 OK\nname=Babs Jensen\nphone=88889999\n\nIf I am to expect PUT/GET symmetry as Paul would have it.  Though I \ndon&#39;t think he would disagree with making\n\nGET http://www.server.org/processor?name=Babs+Jensen HTTP/1.1\n\n200 OK\nname=Babs Jensen\nphone=88889999\n\nalso available, as a different representation of the state of Babs \n(because the first GET isn&#39;t particularly useful to me as a client).\n\nIncidentally, I should expect that POST in this situation:\n\nPOST http://www.server.org/processor HTTP/1.1\nContent-type: text/plain\nContent-length: 30\n\nname=Babs Jensen\nphone=88889999\n\nWould result in subsequest GETs producing\n\n200 OK\nname=Babs Jensen\nphone=88889999\nname=Babs Jensen\nphone=88889999\n\nor something of the sort, as it&#39;s not idempotent.\n\n\nThe crux:\nTo take yourself beyond the capabilities of your vanilla web server \ninstallation, you need URIs with the query string for GETs and PUTs.  \nFurthermore, the presence of &quot;?&quot; in your URI implies the use of extra \nprocessing that will require discovery for usage.  POST always \nimplies the presence of such a processor.\n\nI can see why PUT hasn&#39;t really caught on, considering the security \nproblems it seems to present.  But by using the query string with \nPUT, I believe I have solved my problem of non-privileged areas: now \nthe Web server can trivially identify the difference between copying \na file (generally a no-no without explicitly saying its OK) and \npassing some parameters to an add-on processor (which should know \nwhat it&#39;s doing).\nOf course, I can envision one nasty problem with this: the limitation \non the length of query strings.  It would require that your processor \nwould never allow its parameter name-value pairs to exceed that \nlimit, although this may encourage more modular designs.\n\nIs this a useful way of looking at it?  Can I also not use a 201 \nCreated response for PUT &lt;file&gt; and a 205 Reset Content for PUT \n&lt;processor with query string&gt;? (OK, so it looks like 205 wasn&#39;t \nreally intended for such a thing, but it still implies modification \nover creation).\n\n\n\n\n\n"}}