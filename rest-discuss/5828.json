{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":198693287,"authorName":"Bill Venners","from":"Bill Venners &lt;bv-svp@...&gt;","profile":"billvenners","replyTo":"SENDER","senderId":"6guz1IstG-JmUfw9o52z2s0FWeaPXvtggiNfQqiiEwtmhHmq2UN10kqoALR7hxuf2TXAGTt6kioCVN63DB5TNvsO2UlK-Z4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [rest-discuss] Re: Using Digest Auth with Cookies","postDate":"1143338006","msgId":5828,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PERFN0IxRDU4LTNCREYtNEZDRC1BQjJCLUU2QjNEODE2RERDMkBhcnRpbWEuY29tPg==","inReplyToHeader":"PDg3aGQ1bWkxNjEuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPg==","referencesHeader":"PDQ0MTg2RERELjYwMTAzMDVAam9ubmF5Lm5ldD4gPDg3NHExcWx6NGMuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NDQyMjMzNkMuNTAwMDMwN0BzZWFpcnRoLmNvbT4gPDg3eTd6MWw2Y28uZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8NzNlYzU5OWQwNjAzMjMwNjA4cDJhYmU1MTRjdWNiNDUxZGNkMjQ0NjcxZDhAbWFpbC5nbWFpbC5jb20+IDw4N3ZldTVreTB4LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDczZWM1OTlkMDYwMzIzMTM0M3M0MjNjYmM5Mm80NjhmMGNlZjZlN2UwNmE4QG1haWwuZ21haWwuY29tPiA8ODdwc2tjbHQ5MS5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDw5RThGN0U5MC01M0NFLTRBRjEtOTI0RS00RURGMDI2RkVEQzRAYXJ0aW1hLmNvbT4gPDg3aXJxNGxnZWcuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPiA8OTlBODdBNjgtNjU5Qy00MDUyLTkwNzQtM0Q2RDE5NzFGMUZDQGFydGltYS5jb20+IDw4N2Q1Z2NsYnNkLmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPEI0RUQ3ODMzLUIwNTMtNDBDMi04RTUwLTVFODc3MTg2MjYyOEBhcnRpbWEuY29tPiA8NDQyM0ZDMDMuODAwMDQwMkBtZXRhbGFiLnVuYy5lZHU+IDwxMjdFNzI3My0xM0NELTRCQkMtOTQ1Ri1DRDIyRTk4M0JGNEFAdG9waWNtYXBwaW5nLmNvbT4gPDQ0MjQwNDlBLjcwMzAzMDdAbWV0YWxhYi51bmMuZWR1PiA8M0Q2MDRBODQtMzAyQy00OTkxLTgxQTgtNzk2RTdCNkQxNDQ1QGFydGltYS5jb20+IDw4N2hkNW5rNzg0LmZzZkB0YXBzZWxsZmVycmllci5jby51az4gPDFCNUM3MDBGLTg5NDktNDk0My04QUJGLTE4NURDRUY2OEE4NUBhcnRpbWEuY29tPiA8ODc2NG0zazN1aS5mc2ZAdGFwc2VsbGZlcnJpZXIuY28udWs+IDxGQkU5QkRCNC04MzQ3LTREMjMtQTMwQi0zRkY0MUY2MjYzQjJAYXJ0aW1hLmNvbT4gPDg3aGQ1bWkxNjEuZnNmQHRhcHNlbGxmZXJyaWVyLmNvLnVrPg=="},"prevInTopic":5827,"nextInTopic":5829,"prevInTime":5827,"nextInTime":5829,"topicId":5693,"numMessagesInTopic":89,"msgSnippet":"Hi Nic, ... In part I think I m creating complexity for myself because as yet I ve refused to let go of my requirements to degrade gracefully in the face of","rawEmail":"Return-Path: &lt;bv-svp@...&gt;\r\nX-Sender: bv-svp@...\r\nX-Apparently-To: rest-discuss@yahoogroups.com\r\nReceived: (qmail 8130 invoked from network); 26 Mar 2006 01:53:04 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m34.grp.scd.yahoo.com with QMQP; 26 Mar 2006 01:53:04 -0000\r\nReceived: from unknown (HELO artima2.inetu.net) (209.235.240.43)\n  by mta3.grp.scd.yahoo.com with SMTP; 26 Mar 2006 01:53:04 -0000\r\nReceived: (qmail 11377 invoked by uid 89); 26 Mar 2006 01:53:16 -0000\r\nReceived: from unknown (HELO ?192.168.251.21?) (67.102.66.234)\n  by artima2.inetu.net with SMTP; 26 Mar 2006 01:53:16 -0000\r\nIn-Reply-To: &lt;87hd5mi161.fsf@...&gt;\r\nReferences: &lt;44186DDD.6010305@...&gt; &lt;874q1qlz4c.fsf@...&gt; &lt;4422336C.5000307@...&gt; &lt;87y7z1l6co.fsf@...&gt; &lt;73ec599d0603230608p2abe514cucb451dcd244671d8@...&gt; &lt;87veu5ky0x.fsf@...&gt; &lt;73ec599d0603231343s423cbc92o468f0cef6e7e06a8@...&gt; &lt;87pskclt91.fsf@...&gt; &lt;9E8F7E90-53CE-4AF1-924E-4EDF026FEDC4@...&gt; &lt;87irq4lgeg.fsf@...&gt; &lt;99A87A68-659C-4052-9074-3D6D1971F1FC@...&gt; &lt;87d5gclbsd.fsf@...&gt; &lt;B4ED7833-B053-40C2-8E50-5E8771862628@...&gt; &lt;4423FC03.8000402@...&gt; &lt;127E7273-13CD-4BBC-945F-CD22E983BF4A@...&gt; &lt;4424049A.7030307@...&gt; &lt;3D604A84-302C-4991-81A8-796E7B6D1445@...&gt; &lt;87hd5nk784.fsf@...&gt; &lt;1B5C700F-8949-4943-8ABF-185DCEF68A85@...&gt; &lt;8764m3k3ui.fsf@...&gt; &lt;FBE9BDB4-8347-4D23-A30B-3FF41F6263B2@...&gt; &lt;87hd5mi161.fsf@...&gt;\r\nMime-Version: 1.0 (Apple Message framework v746.3)\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;DE7B1D58-3BDF-4FCD-AB2B-E6B3D816DDC2@...&gt;\r\nCc: Elliotte Harold &lt;elharo@...&gt;,\n Jan Algermissen &lt;jalgermissen@...&gt;,\n rest-discuss@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nDate: Sat, 25 Mar 2006 17:53:26 -0800\r\nTo: Nic &lt;nferrier@...&gt;\r\nX-Mailer: Apple Mail (2.746.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Bill Venners &lt;bv-svp@...&gt;\r\nSubject: Re: [rest-discuss] Re: Using Digest Auth with Cookies\r\nX-Yahoo-Group-Post: member; u=198693287; y=-Xg-pi5o1bNOFCfDG3TQUrMn6fSh6AzZTJFLfUQ_z71qnTmj8S8\r\nX-Yahoo-Profile: billvenners\r\n\r\nHi Nic,\n\n&gt; Seems very complicated to me.\n&gt;\n&gt; Still, as long as you thinks it&#39;s simple.\n\nIn part I think I&#39;m creating complexity for myself because as yet  \nI&#39;ve refused to let go of my requirements to degrade gracefully in  \nthe face of clients with no JavaScript and/or no cookies. I don&#39;t see  \nmy combined solution as simple, just simpler that what I was  \nconsidering before. Using cookies for auth, and switching to URL  \nrewriting is very standard. Java Servlet containers support that  \napproach right out of the box. If I make sure your cookies and URL  \nrewriting are good for *.artima.com, then I have single-sign on to  \nall artima subdomains. So that&#39;s all rather easy, except it has the  \nhijacked session problem which complicates things when I want the  \nuser to do administration, view and modify private data, or buy  \nsomething online. To this commonly used scheme I simply added that  \nI&#39;ll do the actual signing in with HTTP digest auth, but still do  \neverything else the same. Http digest auth solves the hijacked  \nsession problem. In theory (I haven&#39;t tried it yet), I think the  \ncombination offers the best of both worlds.\n\n&gt;&gt; So I believe that even though you have no way of logging the user off\n&gt;&gt; the client, if you have a way to detect an expired authentication\n&gt;&gt; session, you have a good chance of triggering the client&#39;s auth\n&gt;&gt; dialog to show up again forcing the user to re-enter a username and\n&gt;&gt; password. By combining digest auth with cookies/URL rewriting, I can\n&gt;&gt; use the cookies/URL rewriting to detect an authentication session\n&gt;&gt; timeout. That would satisfy me on that concern.\n&gt;\n&gt; Hang on... you can do that with normal auth. Just send a 401 when you\n&gt; think the timeout has occured.\n&gt;\n&gt; The problem is that you can&#39;t stop the silly box from showing up. So\n&gt; when you want to end the session you send 401 and the login box shows\n&gt; up again and the user logs in again (because they&#39;re confused).\n&gt;\n&gt; This could be solved by spec that added a new error code for ending\n&gt; the session.\n&gt;\nI don&#39;t feel a need anymore to log people out of their digest  \nauthentication. I think my concern about not being able to log users  \nout if they use HTTP auth was due more a failure of my own  \nimagination rather than a failure of the digest auth spec. Here&#39;s why:\n\n1. You would use HTTP auth to sign in to artima, which means you  \ncreate an authentication session on your client. The request that the  \nserver gets allows me to authenticate you as nic, say, and then I  \ncreate a session cookie in your browser. In my WWW-Authenticate  \nresponse I also set the domain to &quot;&quot;, which means the authentication  \nrealm is for the whole site.\n\n2. Most of the pages of the site, I don&#39;t care about checking the  \nHTTP credentials. I use the cookie to figure out the user is nic, and  \ndo personalization that way as before. The browser may send the  \nAuthorization header up anyway with each request even though I don&#39;t  \nprompt for credentials with 401 and WWW-Authenticate, using the old  \nnonce I sent on my first 401 response. I don&#39;t use it, an it doesn&#39;t  \nhurt anything (and I don&#39;t have to spend server resources calculating  \nMD5 hashes).\n\n3. Some pages of the site, however, I want to make sure it is really  \nyou and not someone who has hijacked your session. When you hit one  \nof those pages I require two things:\n\na) A valid cookie session. This could be hijacked, but it is only  \nhalf of what I require.\nb) Valid http digest auth with a new nonce that I send back when you  \nhit the page. I can chose my nonce in ways that make it hard to reuse  \nin a hijack attempt, and I only do this on a few pages where you&#39;ll  \nbe posting things as you, etc. Here the server will have to spend the  \nresources to calculate the hashes.\n\n4) When you click sign out, I just sign you out the old fashioned  \nway, by clearing your cookie auth. I can&#39;t clear your HTTP digest  \nauth, but it doesn&#39;t matter. Here&#39;s why:\n\nLet&#39;s say you sign out, but don&#39;t close the browser, and walk away at  \na public computer at an internet cafe. Joe Blackhat then walks up and  \ndecides to try and reuse your HTTP digest auth. He goes to the post  \npage, but he can&#39;t post, because even though he has the HTTP digest  \nauth still in the browser, he doesn&#39;t have the cookie anymore.\n\nOn the server, I believe I can detect that problem, and redirect Joe  \nto a user-friendly login page that makes him authenticate again over  \nHTTP auth. If it really is you, and not Joe Blackhat, then you get  \nanother cookie and away you go. It is easy for the server to note  \nthat there&#39;s no valid cookie auth. The two ways I can think of  \ndetecting that there is a running HTTP digest auth session going on  \nthe client are:\n\ni) The browser may send the Authentication header without server  \nprompting. See section 3.3 of the spec:\n\nThe Authorization header may be included preemptively; doing so  \nimproves server efficiency and avoids extra round trips for  \nauthentication challenges.\n\nhttp://www.ietf.org/rfc/rfc2617.txt\n\nii) I can also set a cookie to indicate that a user has HTTP  \nauthenticated at that client, which would clearly tell me.\n\nSo if someone lands on the forum post page, I can decide whether to  \nredirect them to the sign in page, or just send back a 401. If I find  \na valid auth cookie, and evidence that there&#39;s a running HTTP digest  \nauth, then I just send back 401 with a new nonce. Otherwise, I send  \nthem back to the sign in page.\n\nIn short: You never have to log anyone out of an HTTP auth session,  \nso long as you can detect that they need to again provide their  \ncredentials later when they come back after a timeout period. HTTP  \ndigest auth has mechanisms to do all of that so long as you come up  \nwith some mechanism to do the timeout.\n\n&gt; I doubt that will happen (and hope it will not) because sessions are\n&gt; bad and we shouldn&#39;t add them to HTTP.\n&gt;\nI&#39;m curious why you think sessions are bad, unless you mean because  \nthey entice people to store state in them on the server, state that  \ndoes not have a URI of its own, but which changes the semantics of  \nother URIs. Is that why? The reason I want an authentication session  \nis so it can time out for security reasons. If you don&#39;t use the site  \nfor a while, I&#39;d like you to have to sign in again, because  \noccasionally users will walk away from public machines without  \nlogging out.\n\n&gt;&gt; On my concerns about a usable sign in form, I&#39;m thinking of sending a\n&gt;&gt; page that starts out explaining that when they press on the &quot;Show\n&gt;&gt; Sign In Dialog&quot; button, it will show a dialog and to put their Artima\n&gt;&gt; ID in the User Name, etc... And I&#39;ll have links for Forgot Your\n&gt;&gt; Password and Sign Up and so on that page. If JavaScript is enabled,\n&gt;&gt; JS in the page will run that will replace the explanation and &quot;Show\n&gt;&gt; Sign In Dialog&quot; button with the usual login form. JS will intercept\n&gt;&gt; the submission, and do the HTTP auth behind the scenes. I expect the\n&gt;&gt; vast majority of clients will have JS enabled.\n&gt;\n&gt; This is the argument that I always have against HTTP auth when people\n&gt; like Elliotte say that it is better than cookie auth.\n&gt;\n&gt; Elliotte was quite rude about designers, suggesting that the ordinary\n&gt; downtrodden user is simply confused by the design of authentication\n&gt; forms and there would be a usability revolution if only the awful\n&gt; designers would leave such things alone and use the superb, well\n&gt; thought out authentication mechanism that is included with the\n&gt; protocol.\n&gt;\n&gt; Well of course he&#39;s right because the HTTP auth system is so well\n&gt; thought out that it doesn&#39;t include any way of creating authentication\n&gt; details. Ah, actually he&#39;s wrong isn&#39;t he?\n&gt;\n&gt; Do users really want one type of box for logging in and another type\n&gt; of box for registering? Designers know the value of lumping related\n&gt; features together and making their use consistent.\n&gt;\nI don&#39;t think Elliotte was rude in his expression of his opinion, but  \nI do agree with you that form based login is more user-friendly, if  \nonly for the reason that that&#39;s what everyone is currently used to. I  \nthink it is also because you can explain things better with a form,  \nand offer paths for problems like forgotten passwords. But I think  \nthat if JavaScript is enabled at most of your clients, and you&#39;re  \nwilling to see the drop down as a graceful degradation of user  \nexperience in rare cases in which JavaScript is turned off, then in  \ntheory you can get most of the usability you desire with Http auth. See:\n\nhttp://www.peej.co.uk/articles/http-auth-with-html-forms.html\n\nBill\n----\nBill Venners\nEditor-in-Chief\nArtima Developer\nhttp://www.artima.com\n\n\n"}}